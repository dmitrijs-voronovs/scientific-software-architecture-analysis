quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,Unicode error under windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['error'],['error']
Availability,"Unknown Unknown; python3.7 000056310E0CB107 _PyFunction_FastC Unknown Unknown; python3.7 000056310E1334B6 _PyEval_EvalFrame Unknown Unknown; python3.7 000056310E07A829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000056310E07B714 PyEval_EvalCodeEx Unknown Unknown; python3.7 000056310E07B73C PyEval_EvalCode Unknown Unknown; python3.7 000056310E192F14 Unknown Unknown Unknown; python3.7 000056310E19E29D PyRun_StringFlags Unknown Unknown; python3.7 000056310E142EB4 Unknown Unknown Unknown; python3.7 000056310E0CB789 _PyMethodDef_RawF Unknown Unknown; python3.7 000056310E0CBA31 _PyCFunction_Fast Unknown Unknown; python3.7 000056310E137795 _PyEval_EvalFrame Unknown Unknown; python3.7 000056310E07A829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000056310E07B714 PyEval_EvalCodeEx Unknown Unknown; python3.7 000056310E07B73C PyEval_EvalCode Unknown Unknown; python3.7 000056310E192F14 Unknown Unknown Unknown; python3.7 000056310E19D331 PyRun_FileExFlags Unknown Unknown; python3.7 000056310E19D523 PyRun_SimpleFileE Unknown Unknown; python3.7 000056310E19E655 Unknown Unknown Unknown; python3.7 000056310E19E77C _Py_UnixMain Unknown Unknown; libc-2.26.so 00007F895E88906A __libc_start_main Unknown Unknown; python3.7 000056310E142FF0 Unknown Unknown Unknown; Aborted; ```; ; </details>. I first actually tried to reproduce this using the very convenient MyBinder link on the front page in python, rather than with a psithon input file, but unfortunately because it's an uncaught C++ exception that doesn't actually get translated into a python exception, it just kills the jupyter kernel and no error message is reported to the jupyter client running in the browser. Appologies in advance if this is a duplicate bug report. The fact that the grid is missing is okay; that's #827 IIUC. But if possible, -- especially for usage of the Python interface rather than the command line program -- it would might be better if these exceptions were translated into python rather than such violent crashes.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2080:5037,error,error,5037,https://psicode.org,https://github.com/psi4/psi4/issues/2080,1,['error'],['error']
Availability,"Update that facilities issues are improving, but the relevant computer is still switched off, so installers not available. I'll post here when the situation is normal again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987:112,avail,available,112,https://psicode.org,https://github.com/psi4/psi4/issues/3199#issuecomment-2265348987,1,['avail'],['available']
Availability,"Update your PR description. Behavior changes are not ""minor cleanup"", even if that behavior is as simple as raising an error where there wasn't one before.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2488#issuecomment-1073393998:119,error,error,119,https://psicode.org,https://github.com/psi4/psi4/pull/2488#issuecomment-1073393998,1,['error'],['error']
Availability,"Update, MVS error is coming from occupation guess. Ref on the left. ```; -------------------------------------------------------				 -------------------------------------------------------. ==> Integral Setup <==								 ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==						 ==> DFJK: Density-Fitted J/K Matrices <==. J tasked: Yes							 J tasked: Yes; K tasked: No							 K tasked: No; wK tasked: No							 wK tasked: No; OpenMP threads: 1							 OpenMP threads: 1; Integrals threads: 1							 Integrals threads: 1; Memory (MB): 375							 Memory (MB): 375; Algorithm: Core							 Algorithm: Core; Integral Cache: NONE							 Integral Cache: NONE; Schwarz Cutoff: 1E-12							 Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12							 Fitting Condition: 1E-12. => Auxiliary Basis Set <=								 => Auxiliary Basis Set <=. Basis Set: (6-31G AUX)								 Basis Set: (6-31G AUX); Blend: CC-PVDZ-JKFIT								 Blend: CC-PVDZ-JKFIT; Number of shells: 42								 Number of shells: 42; Number of basis function: 131							 Number of basis function: 131; Number of Cartesian functions: 131							 Number of Cartesian functions: 131; Spherical Harmonics?: false								 Spherical Harmonics?: false; Max angular momentum: 3								 Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 6.8158211762E-02.				 Minimum eigenvalue in the overlap matrix is 6.8158211762E-02.; Using Symmetric Orthogonalization.							 Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.		 SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ==> Iterations <==									 ==> Iterations <==. Total Energy Delta E RMS |[F,P]|			 Total Energy Delta E RMS |[F,P]|. @DF-UKS iter 0: -71.60680989524471 -7.16068e+01 1.41427e-01 		 |	 @DF-UKS iter 0: -71.93847658446015 -7.19385e+01 1.43012e-01 ; @DF-UKS iter 1: -75.52774517284402 -3.92094e+00 8.33781e-02 		 |	 Occupation by irrep:; @DF-UKS iter 2: -75.47183403287708 5.59111e-02 8.91",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383210085:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383210085,1,['error'],['error']
Availability,"Update: I have also tried; - downgrading to the latest stable psi4 release, following the instructions [here](http://www.psicode.org/psi4manual/master/conda.html#how-to-update-a-psi4-binary) (just `conda update psi4 -c psi4`), which pulled `1.1+add49b9-py35_0 psi4`, and the issue persists.; - switching to conda Python 2.7 (mkl: 2017.0.1-0, numpy: 1.13.0-py27_0, psi4: 1.1+add49b9-py27_0 psi4). Same issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311448519:29,down,downgrading,29,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311448519,1,['down'],['downgrading']
Availability,"Updated this a bit after talking with @bennybp. I think he's going to do the following, then it'll be about ready:; * tarball with higher (h) AM; * also, could you throw an error in libmints if try to access out of bounds AM through simint? or switch to libint?; * absorb the config6 branch into upstream.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281710846:173,error,error,173,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281710846,1,['error'],['error']
Availability,"Updated!. Tbh, for large elements the use starts to get real clunky, but I don't understand the codebase well enough to instead provide a dict vs an array. Someone savvier than me should probably eventually update that (so that a user doesn't need to set 0's for a bunch of elements they Just Don't Care About), but I didn't see a mapping type available in the relevant context (just an int vector) so I went with what was there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2667#issuecomment-1209560924:344,avail,available,344,https://psicode.org,https://github.com/psi4/psi4/pull/2667#issuecomment-1209560924,1,['avail'],['available']
Availability,"Ups, a proper typo in the original input, but the right molecule was used and the error persists. ----. I think I identified the (or a) problem. There are direct access fortran files that are never closed as far as I tracked it down. If I do so, it seems to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325:82,error,error,82,https://psicode.org,https://github.com/psi4/psi4/issues/2009#issuecomment-696734325,2,"['down', 'error']","['down', 'error']"
Availability,"Using 080dba6, this input, which doesn't produce any wavefunction data,; ```python; import json. import numpy as np. import psi4; import qcelemental as qcel. bohr2ang = qcel.constants.bohr2angstroms. geometry = (; np.asarray(; [; 0.0,; 0.0,; -0.1294769411935893,; 0.0,; -1.494187339479985,; 1.0274465079245698,; 0.0,; 1.494187339479985,; 1.0274465079245698,; ]; ); / bohr2ang; ). json_input = {; ""schema_name"": ""qc_schema_input"",; ""schema_version"": 1,; ""molecule"": {; ""geometry"": geometry.tolist(),; ""symbols"": [""O"", ""H"", ""H""],; },; ""driver"": ""gradient"",; ""model"": {""method"": ""ccsd"", ""basis"": ""def2-tzvp""},; ""keywords"": {""scf_type"": ""direct"", ""df_scf_guess"": ""false""},; }. ret = psi4.schema_wrapper.run_qcschema(json_input). stub = ""water_ccsd_gradient_psi4""; with open(f""{stub}.qcschema.out"", ""w"") as handle:; handle.write(ret.json()); ```; validated with `qcschema.validate` produces; ```; Traceback (most recent call last):; File ""./qcschema_validate.py"", line 17, in <module>; qcschema.validate(data=json.loads(p.read_text()), schema_type=args.schema_type); File ""/home/eric/development/json/MolSSI_QC_JSON_Schema/qcschema/validate.py"", line 16, in validate; jsonschema.validate(data, schema); File ""/home/eric/.pyenv/versions/miniconda3-4.7.12/envs/cclib_berquist_37/lib/python3.7/site-packages/jsonschema/validators.py"", line 934, in validate; raise error; jsonschema.exceptions.ValidationError: None is not of type 'object'. Failed validating 'type' in schema['properties']['wavefunction']:; ...; On instance['wavefunction']:; None; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2242:1356,error,error,1356,https://psicode.org,https://github.com/psi4/psi4/issues/2242,1,['error'],['error']
Availability,"Using `psi4.set_output_file()` command to set the output file location does not close the file when `psi4.core.close_outfile()` is invoked.; This causes the open files to accumulate when running in a loop. ; Finally, as the number of open files > ulimit (1024), a segment fault core dump error is thrown. . (previously I Increased this limit temporarily by using `ulimit -n 4096`, however I was unable to track the exact source of the error.). Fix : **Replacing `psi4.set_output_file()` with `psi4.core.set_output_file()` did the trick for me.**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3241:272,fault,fault,272,https://psicode.org,https://github.com/psi4/psi4/issues/3241,3,"['error', 'fault']","['error', 'fault']"
Availability,"Using latest Psi4 from conda `psi4/label/dev` (`1.4a2.dev523+e25656e`), if I modify the test in `cc3` to use density fitting and freeze both core and virtuals as follows:; ```; molecule h2o {; 0 1; O; H 1 0.97; H 1 0.97 2 103.0; }. set {; basis 6-31G**; r_convergence 10; e_convergence 10; freeze_core True; num_frozen_uocc 10; cc_type df; }. ccsd_e, ccsd_wfn = frequencies('ccsd', dertype=1, return_wfn=True); fd_freqs_grad = ccsd_wfn.frequencies(). ccsd_e, ccsd_wfn, frequencies('ccsd', dertype=0, return_wfn=True); fd_freqs_energy = ccsd_wfn.frequencies(). compare_vectors(fd_freqs_grad, fd_freqs_energy, 1, ""CCSD Grads vs. Energies Findif (3-pt.) freqs to 0.1 cm^-1"") #TEST; ```. Psi4 fails with `<built-in method dfocc of PyCapsule object at 0x7f3fee2aab70> returned NULL without setting an error`. However, if I replace `ccsd` by `ccsd(t)`, it runs and passes the test, which seems to indicate `ccsd` gradients for frozen virtuals are actually available somewhere.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1912:796,error,error,796,https://psicode.org,https://github.com/psi4/psi4/issues/1912,2,"['avail', 'error']","['available', 'error']"
Availability,"Using psi4-1.4rc1, I was able to compute `MBIS_CHARGES` via QCEngine however after PR #2127 this now fails with the following error message. While this definitely needs fixing I think it might also be nice to have the option to turn off this feature and only calculate the ratio if passed as an scf property?; ```; RuntimeError: ; Fatal Error: Wavefunction::scalar_variable: Requested variable MBIS FREE ATOM O VOLUME was not set!; Error occurred in file: /Users/github/builds/conda-builds/psi4-multiout_1628080613326/work/psi4/src/psi4/libmints/wavefunction.cc on line: 1335; ```. MWE ; ```python; import qcelemental as qcel; from qcelemental.models import molecule; import qcengine as qcng. mol = qcel.models.Molecule.from_data(""""""; O 0.0 0.000 -0.129; H 0.0 -1.494 1.027; H 0.0 1.494 1.027; """"""). # build the mbis task; model = qcel.models.AtomicInput(; molecule=mol,; driver=""energy"",; model={""method"": ""SCF"", ""basis"": ""sto-3g""},; keywords={""scf_properties"": [""MBIS_CHARGES""]}; ). result = qcng.compute(model, ""psi4""). print(result.dict()); ```; versions; psi4-1.4+9485035 ; qcengine-0.19.0; qcelemental -0.21.0",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2272:126,error,error,126,https://psicode.org,https://github.com/psi4/psi4/issues/2272,3,"['Error', 'error']","['Error', 'error']"
Availability,"Using version 1.2-rc2 from conda psi4/label/dev (and also several previous versions):. The following input crashes with a `RuntimeError: Fatal Error: Not enough memory` (logfile [attached](https://github.com/psi4/psi4/files/2000688/sapt0.txt)):. ```; molecule dimer {; 0 1; HE -3.175580423325 -0.517569032036 0.000000000000; --; 0 1; C -0.047607579372 0.489078465367 0.000000000000; O -0.621270272014 1.491611955637 0.000000000000; S 0.726228977971 -0.864990071157 0.000000000000. no_reorient; no_com; }. memory 20 Gb. dimer.update_geometry(); energy(""sapt0/jun-cc-pvdz"", molecule=dimer); ``` . When the He atom in the above is changed to, say, Ne, the calculation runs fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1018:143,Error,Error,143,https://psicode.org,https://github.com/psi4/psi4/issues/1018,1,['Error'],['Error']
Availability,"Usually an old cmake or an old psi4 source. Can you paste the whole output from `cmake ...` onwards to the error. (Switch from `<backtick>psi4-path-advisor<backtick>` to `psi4-path-advisor`, copy, paste, enter.) Shouldn't be an old cmake as that's in the conda env. Also paste `cmake --version` and `git describe`. Also, always delete `objdir/` between cmake executions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386439546:107,error,error,107,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386439546,1,['error'],['error']
Availability,"Util/Implementations/../Table.h:147: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, int, int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘)’ before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expect",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:1087,error,error,1087,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,Vector Setting Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2853:15,Error,Error,15,https://psicode.org,https://github.com/psi4/psi4/issues/2853,1,['Error'],['Error']
Availability,"Version 1.1 fails:. ```; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/psi4/libparallel/process.cc:69:9: error: use of undeclared identifier 'environ'; if (environ) {; ^; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/psi4/libparallel/process.cc:70:16: error: use of undeclared identifier 'environ'; while (environ[i] != NULL) {; ^; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/psi4/libparallel/process.cc:71:52: error: use of undeclared identifier 'environ'; std::vector <std::string> strs = split(environ[i], ""="");; ^; ```. Found on the FreeBSD 11.1.; 'environ' needs to be declared.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/851:106,error,error,106,https://psicode.org,https://github.com/psi4/psi4/issues/851,3,['error'],['error']
Availability,"Version 1.1; Compiler: clang-40; OS: FreeBSD 11.1. ```; In file included from /usr/ports/science/psi4/work/psi4-1.1/psi4/src/export_functional.cc:29:; In file included from /usr/ports/science/psi4/work/psi4-1.1/psi4/include/psi4/pybind11.h:10:; /usr/local/include/pybind11/pybind11.h:1012:105: error: cannot initialize return object of type 'void (psi::Functional::*)(int) const' with an lvalue of type 'void (psi::SuperFunctional::*)(int) const': different classes ('psi::Functional' vs 'psi::SuperFunctional'); auto method_adaptor(Return (Class::*pmf)(Args...) const) -> Return (Derived::*)(Args...) const { return pmf; }; ^~~; /usr/local/include/pybind11/pybind11.h:1087:25: note: in instantiation of function template specialization 'pybind11::method_adaptor<psi::Functional, void, psi::SuperFunctional, int>' requested here; cpp_function cf(method_adaptor<type>(std::forward<Func>(f)), name(name_), is_method(*this),; ^; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/export_functional.cc:112:9: note: in instantiation of function template specialization 'pybind11::class_<psi::Functional, std::__1::shared_ptr<psi::Functional> >::def<void (psi::SuperFunctional::*)(int) const, char [10]>' requested here; def(""print_detail"",&SuperFunctional::py_print_detail, ""docstring"");; ^; 1 error generated.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/852:294,error,error,294,https://psicode.org,https://github.com/psi4/psi4/issues/852,2,['error'],['error']
Availability,"Very likely yes for the ""qcschema_input"" by standardizing down to the old string. The ""qcschema_molecule"" will be extra qcel code, though. I'll make the qcel changes and then revisit pinning strategy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1553#issuecomment-466789467:58,down,down,58,https://psicode.org,https://github.com/psi4/psi4/pull/1553#issuecomment-466789467,1,['down'],['down']
Availability,"Very true on exposing more symbols later, @dgasmith. I haven't even attempted v2rdm. @edeprince3, FYI, this affects you. There's a discussion in https://github.com/psi4/psi4/pull/814 if you want the details, but the tl;dr is that Psi4's `core.so` built with this PR will not have all the symbols exposed like a normal Linux `.so` for a plugin's use. If there's extra classes or functions that v2rdm needs, they'll need a `PSI_API` added to the (psi) source code. If you get to the v2rdm/psi reconciliation process before me, please ping with any trouble. I'm updating and rebuilding all the conda packages now, but v2rdm is always last, having psi as a dep. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/950#issuecomment-380192190:532,ping,ping,532,https://psicode.org,https://github.com/psi4/psi4/pull/950#issuecomment-380192190,1,['ping'],['ping']
Availability,"Very true, @bozkaya, and we've done that. We'd really like to be able to run _any_ molecule through a code, though. If the code absolutely can't handle the case, an error is the way to go. But preferably, if the code's contribution is `0.` or unit matrix or anything predictable, I'd really appreciate it if that trivial return could be programmed in. This would greatly help high-throughput calcs or in @wardence's case, multi-stage single calcs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/893#issuecomment-358041068:165,error,error,165,https://psicode.org,https://github.com/psi4/psi4/issues/893#issuecomment-358041068,1,['error'],['error']
Availability,"Wait, what? Then how is Incremental Fock build set to energy tolerance on the order of 1e-9 giving you errors on the order of 1e-7?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195:61,toler,tolerance,61,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821209195,2,"['error', 'toler']","['errors', 'tolerance']"
Availability,"Wait, why do we want to ""turn off the incremental build once a preset level of `D_CONVERGENCE` is achieved""? Is the idea that the numerical creep is within the `D_CONVERGENCE` tolerance?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-940945179:176,toler,tolerance,176,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-940945179,1,['toler'],['tolerance']
Availability,"Was gdma1 one of the tests you expected to fail with erd, Ben? I just saw an oddity with it myself where it runs fine explicitly but through ctest issues a string truncated error and gives up (but does not fail).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-275543488:173,error,error,173,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-275543488,1,['error'],['error']
Availability,"We (@amjames and @robertodr) propose a partial rewrite of the coupled cluster and DPD functionalities in Psi4.; The main motivation is to make the pending [PR #1061, Expose wavefunction and amplitudes to python](https://github.com/psi4/psi4/pull/1061) available satisfying the constraints and comments offered by @dgasmith and @amjames.; Exposing the T and Lambda amplitudes to the Python layer will have a series of beneficial consequences:; - It will be possible to experiment with these quantities easily.; - Writing and reading amplitudes to file ([HDF5](https://portal.hdfgroup.org/display/support), [Zarr](https://zarr.readthedocs.io/en/stable/), or any other format) is more easily managed from Python, especially if we need to preserve compatibility with Windows.; - Restart capabilities.; ## Summary of proposed changes (incomplete); ### cc* modules; - Create a single `cc` folder where all the other `cc*` folders will live as subfolders.; - Provide a top-level `CCWavefunction` class, partly modeled on the existing `CIWavefunction` class to overtake the whole implementation of the CC functionality.; - The class will manage `MOInfo`,` Params`, `DPD` as local data members. This will ensure that the lifetime of these objects is tied to a particular instance of a CC calculation.; - The class will contain the various steps in a CC calculation as methods. ; - Move from tstart-tstop to the new timers timer_on-timer_off; ### DPD Library ; - Remove use of static global machinery from DPD member functions. ; - Implement proper copy/move assign/construct for the DPD object. ; - Implement internal structs with proper constructors as needed.; - Replace c-style arrays/raw pointers with appropriate smart pointer/containers ; - Refactor shared state (shared by multiple DPD instances, currently dpd_gbl struct) into singleton(s). ; - **Note**: Memory tracking in its current form is not thread safe and relies on the client code properly locking calls to function that need to perform alloca",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1247:252,avail,available,252,https://psicode.org,https://github.com/psi4/psi4/issues/1247,1,['avail'],['available']
Availability,We _could_ just raise an error if a user tries a combination of guess basis and compute basis where one has ECPs and the other doesn't.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1439#issuecomment-449019824:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/issues/1439#issuecomment-449019824,1,['error'],['error']
Availability,We can probably do away with all of the ULI stuff and move to `size_t` which should correctly map to `unsigned long long int` for 64 bit systems. Let us know about tracking the seg fault further... can you make a gist that reproduces this error?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/716#issuecomment-303173793:181,fault,fault,181,https://psicode.org,https://github.com/psi4/psi4/issues/716#issuecomment-303173793,2,"['error', 'fault']","['error', 'fault']"
Availability,"We definitely plan to get this into master, but Lori would be the one with reliable time estimates.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2633#issuecomment-1198423231:75,reliab,reliable,75,https://psicode.org,https://github.com/psi4/psi4/pull/2633#issuecomment-1198423231,1,['reliab'],['reliable']
Availability,"We do hit these errors sometimes. Some special cases have been fixed this year. What version of the code are you running, `psi4 --version`?. It's failing on the backtransformation in the second opt iter. Dihedrals are near 180 to start but no angles are. If up-to-date, any suggestions, @psi-rking ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344080024:16,error,errors,16,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344080024,1,['error'],['errors']
Availability,"We had a trial to get `c-f` at gatech, too. maybe this helps. https://psi4.slack.com/archives/C5BLBG6VB/p1503008447000049. any poor souls trying to get `clang-format` on RHEL7 w/ broken `yum`, the magic llvm download is 3.9.0 (being early enough to have req. library abis (unlike 4.0.1) and late enough to recognize psi4's clang-format keywords(unlike 3.6.2)) for pkg Fedora23_x64_64. System `libstdc++` is still too old, but you can feed it any of psi4's gcc 5.2 via `LD_LIBRARY_PATH=${CONDA_PREFIX}/lib`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/857#issuecomment-345267970:208,down,download,208,https://psicode.org,https://github.com/psi4/psi4/pull/857#issuecomment-345267970,1,['down'],['download']
Availability,"We have an [example](http://forum.psicode.org/t/adiis-minimization-failed-file-a-bug/2524/4) of an ADIIS failure. Based on how _early_ minimization is failing, this looks like something other than numerical finickiness of the underlying numpy algorithm. The ADIIS problem is either 1-by-1 or 2-by-2 (I'd need to check which), and surely we can handle a 2D constrained optimization. ```; memory 5 gb. molecule dimer {; O -2.37598501 -5.25644515 4.84543259; H -2.38171765 -4.38257907 4.44628561; H -2.48821382 -4.94837176 5.80344789; --; @Br 2.24215713 -6.77867982 5.71107037; @Br 0.05511550 -6.05660413 5.30313985; units angstrom; }. set {; basis aug-cc-pvdz; scf_type pk ; sapt_dft_grac_shift_a 0.05731; sapt_dft_grac_shift_b 0.01680; SAPT_DFT_FUNCTIONAL REVSCAN; }. energy('revscan'); ```. ```; ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo; -------------------------; A 113 113; -------------------------; Total 113 113; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter SAD: -76.04124004396280 -7.60412e+01 0.00000e+00. Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin//psi4"", line 338, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 2455, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 1670, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); F",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2609:105,failure,failure,105,https://psicode.org,https://github.com/psi4/psi4/issues/2609,1,['failure'],['failure']
Availability,"We need the _entire_ input file. Issues become much easier to debug when we run the input file ourselves. I will say that 2 GB for an 82 atom system is smaller than I'd expect. If you're running this with threads, Psi distributes the memory you specify over _all threads_, so you need to input the total memory you're giving for the calculation. I work with much smaller systems, so I can't say whether or not you'd likely encounter memory errors at this scale.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1921#issuecomment-640027123:440,error,errors,440,https://psicode.org,https://github.com/psi4/psi4/issues/1921#issuecomment-640027123,1,['error'],['errors']
Availability,"We need the correlated procedure to run CASSCF and may adapt the code to use DF once the new Deriv code is available. In putting together this PR, my intention was to make very limited changes and only improve the functionality of the current code. Since I am not sure what plugins do, I just reproduced the old functionality as it was before. I'd be happy to delete some of the legacy code if we are certain it is not used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1756#issuecomment-557580614:107,avail,available,107,https://psicode.org,https://github.com/psi4/psi4/pull/1756#issuecomment-557580614,1,['avail'],['available']
Availability,We need to be able to fail over to a universal JK-set when a particular JK-set isn't available. There's a Karlsruhe QZ universal set we should adopt and enter into PSI4. Lori has some info on it.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/45:85,avail,available,85,https://psicode.org,https://github.com/psi4/psi4/issues/45,1,['avail'],['available']
Availability,"We now have [a reproducible example of the problem](http://forum.psicode.org/t/fatal-error-a-matrix-is-not-spd/1471/4?u=jmisiewicz)! As @jgonthier suspected, this indicates a negative eigenvalue in the orbital hessian. The following input will run into the problem. Stability analysis indicates a tiny negative eigenvalue in the MO hessian. When you follow the instability, SAPT completes with no problems. The error message should be rewritten to suggest the user adds stability following. If we want to collect pathological test cases for future SCF work, we should also recommend they post their failing inputs on the forums. ```; molecule {; 0 1; C -1.39179 -0.20044 0.00015; Cl -0.43716 1.29883 0.00009; F -1.08662 -0.91763 1.08111; F -1.08730 -0.91729 -1.08123; H -2.44780 0.05805 0.00053; --; 0 2; Cl 2.22327 -0.26007 -0.00012; }. set {; basis 6-311++G**; reference uhf; soscf true; soscf_max_iter 30; }. energy('sapt0'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1682#issuecomment-532191893:85,error,error-a-matrix-is-not-spd,85,https://psicode.org,https://github.com/psi4/psi4/issues/1682#issuecomment-532191893,2,['error'],"['error', 'error-a-matrix-is-not-spd']"
Availability,"We should use a more informative/tailored error message. But the reason it can't drop a wfn file is because non-Hartree--Fock Hessians are computed by finite difference, so there's at most a dummy wfn with mol, basis, qcvariables, etc. No goodies like MO coefficients or occupations. What piece of data were you seeking?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3068#issuecomment-1786385522:42,error,error,42,https://psicode.org,https://github.com/psi4/psi4/issues/3068#issuecomment-1786385522,1,['error'],['error']
Availability,We strongly recommend that you follow the [official download instructions](https://psicode.org/installs/v15/).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2390#issuecomment-1004154539:52,down,download,52,https://psicode.org,https://github.com/psi4/psi4/issues/2390#issuecomment-1004154539,1,['down'],['download']
Availability,"We updated to a new nuclear signature so the two are getting out of sync. Not completely sure this is fixable as you are pulling addons and Psi4 from different locations. . -Daniel Smith; Sent from my iPhone. . > On Nov 29, 2017, at 11:17, shannonhouck <notifications@github.com> wrote:; > ; > When trying to compile Psi4 with Miniconda3 using the keywords generated by psi4-path-advisor in the development environment, the following error is produced:; > ; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc: In function ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; > double Econstant = wfn->molecule()->nuclear_repulsion_energy();; > ^; > In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; > double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; > ^; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; > make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; > make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; > make[3]: *** [all] Error 2; > make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; > make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; > make: *** [all] Error 2; > The output generated by psi4-path-advisor --gcc is; > ; > /home/shouck/miniconda3/envs/p4dev/bin/cmake \; > -H. \; > -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; > -Bobjdir; > @ashutoshvt and ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347970165:434,error,error,434,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347970165,2,['error'],['error']
Availability,We will try to write a more robust default guess in the future.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/63#issuecomment-122112904:28,robust,robust,28,https://psicode.org,https://github.com/psi4/psi4/issues/63#issuecomment-122112904,1,['robust'],['robust']
Availability,"We've seen this a couple times on TravisCI, then I got it last night on psinet (unreproducible, of course), now @polikw reports it with the binary 1.0rc3 . No rush, just someone should get to cross a ticket off when tracked down.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/385:224,down,down,224,https://psicode.org,https://github.com/psi4/psi4/issues/385,1,['down'],['down']
Availability,"Well done, Ben!. Regarding the manual, I note that the psi4manual/master/_static; subdirectory, where the css files should reside, is missing. @loriab, is; that automatically generated?. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Thu, Apr 14, 2016 at 7:31 PM, Andy Simmonett notifications@github.com; wrote:. > Great work tracking that one down, @bennybp https://github.com/bennybp; > et al. and thanks for the heads-up, @dkoes https://github.com/dkoes.; > Does anybody know why the CSS elements are fubared in the manual? The; > issues mentioned by @amjames https://github.com/amjames still persist -; > perhaps it's a result of those modified directory permissions?; > ; > —; > You are receiving this because you commented.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/342#issuecomment-210202336",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/342#issuecomment-210224190:353,down,down,353,https://psicode.org,https://github.com/psi4/psi4/issues/342#issuecomment-210224190,1,['down'],['down']
Availability,"Well in that case: ; So far everything is going smoothly on my end, but I did notice a couple of inconsistencies in detecting python/complier versions and incorrectly using a different library. On one of our clusters using the module system I have loaded gcc-5.2.0 and Anaconda with python 2.7.10. (these modules define envars $ANACONDA_LIB and $GCC_LIB, which I will refer to below. They also modify the $LD_LIBRARY_PATH variable when they are loaded.) . If I set the python executable and don't do anything to `CMAKE_PREFIX_PATH` the executable is set up correctly but the `PYTHON_INCLUDE_DIR` and `PYTHON_LIBRARY` find the ones that live in the system paths `/usr/lib/python2.6.so` and `/usr/include/python2.6` which causes problems in the linking step with undefined references to some python stuff. . Also if I set the C/CXX compiler, but again don't do anything to the `CMAKE_PREFIX_PATH` I can build + link fine, but at runtime I will get errors like this:. ```; /usr/lib64/libstdc++.so.6: version ``GLIBCXX_X.X.XX' not found ; ```. Which seems to be that cmake is linking to the libstdc++ version for the system gcc which is 4.7.2, instead of the correct library version for the compiler I am using. . If I add `-DCMAKE_PREFIX_PATH=$GCC_LIB:$ANACONDA_LIB` to my cmake command it will fix both issues are corrected. The python library is detected as `$ANACONDA_LIB/python2.7.so` and I don't have any problems with linking. And there is no errors at runtime either. In both cases cmake seems to detect the versions correctly since it has the correct executable. . So when it comes time to document the new build system for users, it may be prudent to mention they should either use the `CMAKE_PREFIX_PATH` argument, or check that cmake has detected the correct library paths for the python/compiler they actually meant to use if they are working in a environment where multiple python/compilers installed. Most clusters will have some way of swapping these out with a system default installed gl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249621149:946,error,errors,946,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249621149,1,['error'],['errors']
Availability,"Well thats fun. Passes just fine on my local box, but fails without any error on Travis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387#issuecomment-222250883:72,error,error,72,https://psicode.org,https://github.com/psi4/psi4/pull/387#issuecomment-222250883,1,['error'],['error']
Availability,"Well, @dgasmith, it's not even really crashing due to the PSIO errors...the job continues to run after failing to write the binary optimization data, and finally fails after exceeding the number of allotted optimization iterations. But, it's the manner in which that happens which is the issue: the optimizer is failing to take steps after the first failure of PSIO, I expect because it can't read the optimization data from binary file. Below is a brief overview of the structure within the job. - Take some number of good optimization steps, with structure:; 1) SCF; - Compute SCF wavefunction & gradient; 2) OPTKING; - Read optimization data from binary file ; - Take optimization step; - Write optimization data to binary file; - Sets geometry for next step; - First error step:; 1) SCF wfn & grad computed successfully; 2) OPTKING; - Read data & take step successfully; - PSIO error when attempting to write data to binary file; - Sets geometry for next step; - All subsequent steps (until `geom_maxiter` reached):; 1) SCF wfn, grad computed successfully; 2) OPTKING; - Second PSIO error occurs; - **No optimization step taken**; - Geometry for next step is set to the same as in first error step. So, once the first PSIO error occurs, there's no progress made by the optimizer.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789#issuecomment-325800423:63,error,errors,63,https://psicode.org,https://github.com/psi4/psi4/issues/789#issuecomment-325800423,7,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"Well, I needed to add a commit so that the code compiles, so I also made sure the `Ind20,u` Psivars are filled up whenever Ind20,u is available (i.e. always except in the closed-shell SAPT0 code). Also, I added all the energy components Psivars in the FISAPT code. Once the tests are done I'll commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/908#issuecomment-364640527:134,avail,available,134,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364640527,1,['avail'],['available']
Availability,"Well, I updated to the newest git which includes the patch that switches from -std=gnu++11 to -std=c++11 but the build still fails with the same error about `std::bind`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631#issuecomment-283681875:145,error,error,145,https://psicode.org,https://github.com/psi4/psi4/issues/631#issuecomment-283681875,1,['error'],['error']
Availability,"Well, SAPT (and maybe SAPT Disp) is the common theme to the errors. Strange!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398#issuecomment-444136007:60,error,errors,60,https://psicode.org,https://github.com/psi4/psi4/pull/1398#issuecomment-444136007,1,['error'],['errors']
Availability,"Well, an easy way is to download the patch; https://github.com/psi4/psi4/pull/1475.patch; and apply it on top of master. The alternative would be to git pull from my branch.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1501#issuecomment-458647273:24,down,download,24,https://psicode.org,https://github.com/psi4/psi4/issues/1501#issuecomment-458647273,1,['down'],['download']
Availability,"Well, good news is that the functional and the psi version are irrelevant. It's purely a particular geometry that you hit that's confusing the symmetry detection. And only when not shifted to center-of-mass. Never seen that error before, so will definitely investigate. Below is minimal example. BTW, `1.2a1.dev600` is still 300-400 commits behind master, due to my conda negligence. If I can get #946 in, I'll have a minimal _new_ conda build on the `-c psi4/label/agg` subchannel that actually uses the `-ng`/gcc72 compilers. ```; molecule MOL {; 1 1; nocom # toggle for disaster; C 0.000000000445 -0.000000002634 -0.176009819382; C 0.017055492504 1.213674219316 0.519005187104; C 0.010905297833 1.207533611621 1.904879649273; C 0.000000001371 -0.000000001015 2.595491320593; C -0.010905296809 -1.207533610178 1.904879653967; C -0.017055492743 -1.213674218642 0.519005186244; C 0.000000000685 -0.000000001418 -1.643506768663; H -0.011074063554 2.157895826255 -0.014254560550; H 0.006037200834 2.144998257605 2.447030976059; H 0.000000002397 0.000000004130 3.679031777447; H -0.006037200687 -2.144998259786 2.447030974663; H 0.011074059226 -2.157895829902 -0.014254553860; N -0.738518375832 -0.879256115198 -2.298061241871; N 0.738518376065 0.879256115454 -2.298061238276; H 0.714314308196 0.973365270982 -3.302615035270; H 1.398512102453 1.450008704958 -1.792988230964; H -1.398512105220 -1.450008704099 -1.792988237236; H -0.714314307164 -0.973365267449 -3.302615039280. }. energy = energy('B3lyp/cc-pvdz'); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948#issuecomment-379332937:224,error,error,224,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-379332937,1,['error'],['error']
Availability,"Well, https://github.com/dgasmith/psi4public/blob/wavefunction_pass/cmake/ConfigPCMSolver.cmake#L78 needs `lib` --> `share` for one thing. Can you do that, then tell me what your next error is? Both @dgasmith and I have been using pcmsolver from metapackage and so may have evaded a few issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246#issuecomment-183823400:184,error,error,184,https://psicode.org,https://github.com/psi4/psi4/pull/246#issuecomment-183823400,1,['error'],['error']
Availability,"Well, in this case, I can just cast to `(long long)` to get around the build error. The PCMSolver issue is potentially more involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/220#issuecomment-173225638:77,error,error,77,https://psicode.org,https://github.com/psi4/psi4/issues/220#issuecomment-173225638,1,['error'],['error']
Availability,"Well, initially it was believed to be SCF related because that was the error at program failure. However, it now seems that the reason for the SCF failing was caused by the geometry iteration producing unphysical geometries, which then led to the next SCF iteration failing. By fixing the geometry iteration, and it appears that 'opt_coordinates both' does the trick, no unphysical geometries occur, and the program purs along to completion. In the case of these dimers, completion takes more than the default 50 geometry iterations. Above, one succeeded in 57 steps, two stopped at 50 steps but were clearly converging, they just hit their geom_maxiter of 50 steps and stopped.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-958971629:71,error,error,71,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-958971629,2,"['error', 'failure']","['error', 'failure']"
Availability,"Well, the input preprocesser actually implicitly assumes that the molecule name is an allowable [Python identifier](https://docs.python.org/3/reference/lexical_analysis.html#identifiers), so using a name like `2xH2O` will crash the `exec` with a syntax error...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/650#issuecomment-286839124:253,error,error,253,https://psicode.org,https://github.com/psi4/psi4/issues/650#issuecomment-286839124,1,['error'],['error']
Availability,"Well, this is a boost issue. I don't think anyone is actually going to hunt down why this particular pre-compiled boost is killing DGEMM. Probably something very strange. Anyhow, we can change our build strategy for now and link to an updated boost in the future. Let this be a warning when using pre-compiled boost.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-202602008:76,down,down,76,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-202602008,1,['down'],['down']
Availability,"What I did before failed because I was putting the units into a string that was also used to generate file names. As the string contained illegal characters the execution ran into an error. Should I add a general comment (third argument) by default the units to compute_density and related functions, or hard-wire the units into the cube file header?. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libcubeprop/cubeprop.h#L98-L108",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/822#issuecomment-337743478:183,error,error,183,https://psicode.org,https://github.com/psi4/psi4/pull/822#issuecomment-337743478,1,['error'],['error']
Availability,"What I mean is that ECPs appear to have been broken for a while in Psi4. Even a month ago, before any of the SAD guess stuff was included, the ```dfmp2-ecp``` job was mysterious. Namely, it failed in the initial version of the new SAD guess, but mysteriously was working again with the reorganized but functionally equivalent version. However, at the same time, the ```dfmp2-ecp``` job fails to converge altogether when started from the ```CORE``` guess, which really makes no sense since it's dealing with a very weakly interacting noble gas dimer, which should converge straight away. Are the failures/differences related to the presence of ECPs, or do they also occur in the case of no ECPs?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-452673532:595,failure,failures,595,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-452673532,1,['failure'],['failures']
Availability,"What I meant was that that may be just fine. If what's being cached is `$HOME/miniconda/bin` and `$HOME/miniconda/packages`, then you've preserved all the heavy stuff (mkl w/i the packages dir). A new `conda create -n p4dev` that goes into `$HOME/miniconda/envs/p4dev` is trivial compared to downloading all the packages. I'd prefer the env to be re-solved each time, so I'm not advocating caching p4dev env.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398#issuecomment-444523572:292,down,downloading,292,https://psicode.org,https://github.com/psi4/psi4/pull/1398#issuecomment-444523572,1,['down'],['downloading']
Availability,"What happened was your previous commits were rebased so your local and master git hashes differed. However, since the new commits had the same diff as your current commits they effectively did nothing. Probably not terribly clear unless your familiar with git. The best thing to do as AJ mentioned is to always make a new branch a pull down a fresh version of `psi4/psi4:master`. . @amjames The histories probably were muddled. We probably need to squash this anyway so we can make a merge as the diff looks fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/602#issuecomment-277130364:336,down,down,336,https://psicode.org,https://github.com/psi4/psi4/pull/602#issuecomment-277130364,1,['down'],['down']
Availability,"What is needed to get around this constraint of the simple input snippet below not working b/c scf is DF, @bozkaya ? The conventional integrals have already been computed and are ready. Is there some other data transformation needed? As a last resort, I suppose we can go ahead and compute the non-DF scf instead when this call is made. But I think we need this input to work. Related (user-experience-wise) to https://github.com/psi4/psi4private/issues/48. ```; set mp2_type conv; gradient('mp2'); ```. ``` c++; // SCF TYPE; if (options_.get_str(""SCF_TYPE"") == ""DF"" || options_.get_str(""SCF_TYPE"") == ""CD"") {; if (dertype != ""NONE"") {; throw PSIEXCEPTION(""Analytic gradients are NOT available for SCF_TYPE=DF/CD !"");; }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245:684,avail,available,684,https://psicode.org,https://github.com/psi4/psi4/issues/245,1,['avail'],['available']
Availability,What is the other possible error during Psi-internal adcc build? 😬,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2785#issuecomment-1322471526:27,error,error,27,https://psicode.org,https://github.com/psi4/psi4/pull/2785#issuecomment-1322471526,1,['error'],['error']
Availability,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/196:287,error,error,287,https://psicode.org,https://github.com/psi4/psi4/issues/196,4,['error'],['error']
Availability,"What kind of calculations are you talking about?. Your above grid convergence test tentatively shows that this really is a grid issue. The error becomes smaller for smaller grid spacings, but there are oscillations due to the egg-box effect: nuclei don't line up exactly with the grid points. Chlorine is already pretty heavy, and has quite tight core functions. Getting these right in a cartesian grid is practically untractable. A 0.05 bohr grid is still very coarse; it's what is usually used in GPAW calculations i.e. valence-only.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-433077314:139,error,error,139,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-433077314,1,['error'],['error']
Availability,What legitimate use case is there for this being a warning instead of an error? I can't think of one.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2465#issuecomment-1064093373:73,error,error,73,https://psicode.org,https://github.com/psi4/psi4/pull/2465#issuecomment-1064093373,1,['error'],['error']
Availability,"What version are you using? I'm running on commit dd6b45b (updated May 7), and I can't reproduce this. Two geometry iterations finish successfully before SCF convergence fails. The SCF convergence failure appears to the fault of my old ""friend"", orbital guesses not correcting for changes in the overlap matrix when reading in orbitals for the initial guess... The initial guess from orbital read is terrible, and I see a large change in geometry for the update where the failure happened. The previous geometry, which also reads orbitals but from a much more similar geometry, seems to work fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1704#issuecomment-523874957:197,failure,failure,197,https://psicode.org,https://github.com/psi4/psi4/issues/1704#issuecomment-523874957,3,"['failure', 'fault']","['failure', 'fault']"
Availability,"What's strange is that DFHelper thinks it has 19 gib, it only needs 5 gib, but it insists on using its disk machinery. It could just be a printing error where the code is printing out the wrong message. The calculation should give you a ""timer.dat"" file too. can you post that as well? That one has timers around the disk writes, so we can see if they're actually happening.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503207470:147,error,error,147,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503207470,1,['error'],['error']
Availability,"When I compile psi4 in the conda environment according to the manual, I always get an error saying that libint2 cannot be found. I installed it with the same steps before, but there was no problem. I would like to ask what the reason is.; ![微信图片_20230221110410](https://user-images.githubusercontent.com/99332231/220237125-70fa333f-b28d-414d-b3a5-cb4d613fef01.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2879:86,error,error,86,https://psicode.org,https://github.com/psi4/psi4/issues/2879,1,['error'],['error']
Availability,"When I compile psi4 with simint, using gcc v6.3. The error appears during the simint compilation part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356218786:53,error,error,53,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356218786,1,['error'],['error']
Availability,"When I run a df-mp3 geometry opt job I got the following error:. An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 44, in <module>. File ""/usr/local/programs/psi4intel/share/psi4/python/driver.py"", line 1019, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs). File ""/usr/local/programs/psi4intel/share/psi4/python/driver.py"", line 588, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/programs/psi4intel/share/psi4/python/procedures/proc.py"", line 364, in select_mp3_gradient; return func(name, **kwargs). File ""/usr/local/programs/psi4intel/share/psi4/python/procedures/proc.py"", line 1381, in run_dfocc_gradient; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/ubgroup/psi4/src/lib/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const_, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const_, char_, unsigned long, psi::psio_address, psi::psio_address_); psi::PSIO::read_entry(unsigned int, char const_, char_, unsigned long); psi::dfoccwave::Tensor2d::read(boost::shared_ptrpsi::PSIO, unsigned int). @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/428:57,error,error,57,https://psicode.org,https://github.com/psi4/psi4/issues/428,6,"['Error', 'error']","['Error', 'error']"
Availability,"When I run psi4 I got the following error (I have Python 2.7):. Traceback (most recent call last):; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/inputparser.py"", line 43, in <module>; import pubchem; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/pubchem.py"", line 61, in <module>; from p4util.exceptions import *; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/p4util/**init**.py"", line 32, in <module>; from .util import *; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/p4util/util.py"", line 32, in <module>; import numpy as np; ImportError: No module named numpy. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/407:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/407,1,['error'],['error']
Availability,"When I run this input file, the error message I get is `Killed: 9` which [often signifies being out of memory](https://stackoverflow.com/a/33978359). You've only allowed 2GB RAM for the entire program. We also know `DFHelper Memory: AOs need 0.898 GiB`. I haven't looked at the analytic hessian code, but being out of memory seems like the most likely culprit here. We can add ""get memory estimate of analytic hessian and reduce if possible"" to our to-do list, but for your computation, all you can do is give it more memory.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2297#issuecomment-925013890:32,error,error,32,https://psicode.org,https://github.com/psi4/psi4/issues/2297#issuecomment-925013890,1,['error'],['error']
Availability,"When I try to debug psi4 on mac with ""lldb psi4"" I got the following messega:. lldb psi4; (lldb) target create ""psi4""; error: '/Users/ugur/psi4/objdir/stage/Users/ugur/psi4install/psi4cmake/bin/psi4' doesn't contain any 'host' platform architectures: x86_64h, x86_64, i386. How we can debug the current psi4? @loriab @dgasmith @jturney",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/491:119,error,error,119,https://psicode.org,https://github.com/psi4/psi4/issues/491,1,['error'],['error']
Availability,"When I try to run the input file from the X2C section, it fails.; ```; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz-decon; relativistic x2c; }. energy('hf'); ```. It runs fine if I either remove the `-decon`, remove the `relativistic x2c` option, or add the `basis_relativistic` option. The error I get is:; ```; Traceback (most recent call last):; File ""/usr/local/bin/psi4"", line 247, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/usr/local/lib/psi4/driver/driver.py"", line 454, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 2797, in run_dft; scf_wfn = run_scf(name, **kwargs); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_scf; scf_wfn = scf_helper(name, **kwargs); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 1250, in scf_helper; scf_wfn = scf_wavefunction_factory(core.get_option('SCF', 'REFERENCE'), base_wfn); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 1035, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/usr/local/lib/psi4/driver/p4util/python_helpers.py"", line 64, in pybuild_basis; key, target, fitrole, other, return_atomlist=return_atomlist); File ""/usr/local/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 641, in pyconstruct; return_atomlist=return_atomlist); File ""/usr/local/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 770, in construct; filename = cls.make_filename(basgbs); File ""/usr/local/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 1309, in make_filename; basisname = basisname.lower(). AttributeError: 'NoneType' object has no attribute 'lower'; ```. I'm guessing that this is related to issue #617.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662:308,error,error,308,https://psicode.org,https://github.com/psi4/psi4/issues/662,1,['error'],['error']
Availability,"When I was doing energy decomposition analysis with Bronze standard of a transition state involving a 3d metal Ni, the following error comes up. I wonder how to solve such a problem? Thanks. ```; BasisSet::construct: Unable to find a basis set for atom 24 for key BASIS ; among: ; Shell Entries: ['NI'] ; Basis Sets: [('JUN-CC-PVDZ', 'JUN-CC-PVDZ', None)] ; File Path: /gpfs/home/scms/zz/SAPT, /gpfs/home/scms/zz/SAPT, ; /gpfs/home/scms/zz/psi4conda/share/psi4/basis !; Input Blocks: ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2866:129,error,error,129,https://psicode.org,https://github.com/psi4/psi4/issues/2866,1,['error'],['error']
Availability,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/191:1167,echo,echo,1167,https://psicode.org,https://github.com/psi4/psi4/pull/191,1,['echo'],['echo']
Availability,"When a fitting basis isn't available, defaults to `def2-qzvpp-jkfit`. This sounds great, and is, until you notice a scf/cc-pv6z calc is using a quad-zeta auxiliary basis. Remedy this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/144:27,avail,available,27,https://psicode.org,https://github.com/psi4/psi4/issues/144,1,['avail'],['available']
Availability,"When following the suggested path for installation on Windows using conda and Python 3.8, even setting up a new environment on version 3.8, I cannot get it to run, as the ""psi4 --test"" command gives an error. On WSL using either conda or the installer I also cannot get it to work.; I create a new environment with: ; ```; conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge; psi4 --test; ```. This error was encountered on two separate machines running up to date Windows 10 Pro. Running the test gives me the following error: ; Traceback (most recent call last):; File ""Path\psi4conda\envs\psi16\Scripts\psi4-script.py"", line 187, in <module>; import psi4 # isort:skip; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\__init__.py"", line 76, in <module>; from .driver import endorsed_plugins; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\__init__.py"", line 46, in <module>; from psi4.driver.molutil import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\molutil.py"", line 36, in <module>; from psi4.driver.p4util import temp_circular_import_blocker; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\p4util\__init__.py"", line 32, in <module>; from .util import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\p4util\util.py"", line 37, in <module>; from psi4.driver.procrouting import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods, integrated_basis_methods; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\proc_table.py"", line 32, in <module>; from . import sapt; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\sapt\__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft, sapt_dft, run_sf_sapt; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driv",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614:202,error,error,202,https://psicode.org,https://github.com/psi4/psi4/issues/2614,3,['error'],['error']
Availability,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/11:260,down,download,260,https://psicode.org,https://github.com/psi4/psi4/issues/11,1,['down'],['download']
Availability,"When passing the -DCMAKE_INSTALL_PREFIX=/home/user/directory at the top-level build this flag does not get passed on to cmake processes that are called by the main, like in my case pybind11. As a result cmake tries to install that package in /usr/local. Is there any way around it other than manually installing all the dependencies?; ; ```; [100%] Built target pybind11_tests; Install the project...; -- Install configuration: ""MinSizeRel""; -- Installing: /usr/local/include/pybind11; CMake Error at cmake_install.cmake:41 (file):; file INSTALL cannot make directory ""/usr/local/include/pybind11"":; Permission denied; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548:492,Error,Error,492,https://psicode.org,https://github.com/psi4/psi4/issues/1548,1,['Error'],['Error']
Availability,"When requesting the wavefunction as part of the result via the protocol in QCEngine only the `orbitals_and_eigenvalues` option works successfully. I think this is due to an error in the returned dictionary here https://github.com/psi4/psi4/blob/5de566ed7d4bf51816c673c4ea1def449e4e8618/psi4/driver/schema_wrapper.py#L324.I think this line should say `""density_a"": ""scf_density_a"",`. QCEngine error:; ```; QCEngine Unknown Error: Traceback (most recent call last):; File ""/Users/joshuahorton/miniconda3/envs/qcfractal/lib//python3.7/site-packages/psi4/driver/schema_wrapper.py"", line 400, in run_qcschema; ret = qcel.models.Result(**ret_data, stdout=_read_output(outfile)); File ""/Users/joshuahorton/miniconda3/envs/qcfractal/lib/python3.7/site-packages/qcelemental/models/results.py"", line 520, in __init__; super().__init__(*args, **kwargs); File ""pydantic/main.py"", line 344, in pydantic.main.BaseModel.__init__; File ""pydantic/main.py"", line 900, in pydantic.main.validate_model; File ""pydantic/fields.py"", line 556, in pydantic.fields.ModelField.validate; File ""pydantic/fields.py"", line 732, in pydantic.fields.ModelField._apply_validators; File ""pydantic/class_validators.py"", line 280, in pydantic.class_validators._generic_validator_cls.lambda4; File ""/Users/joshuahorton/miniconda3/envs/qcfractal/lib/python3.7/site-packages/qcelemental/models/results.py"", line 463, in _wavefunction_protocol; ret_wfn[key] = wfn[key]; KeyError: 'scf_density_ba'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1987:173,error,error,173,https://psicode.org,https://github.com/psi4/psi4/issues/1987,3,"['Error', 'error']","['Error', 'error']"
Availability,"When running psi4 under windows (version 1.4rc3.dev1, installed via conda) from within qiskit, the following error occurs:. ```; File ""C:\Users\user\Anaconda3\envs\qiskit-0-27-psi4-jupyter\Scripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\groun",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:109,error,error,109,https://psicode.org,https://github.com/psi4/psi4/issues/2228,5,"['down', 'error']","['down', 'error']"
Availability,"When trying to compile Psi4 with Miniconda3 using the keywords generated by `psi4-path-advisor` in the development environment, the following error is produced:; ```; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc: In function ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:142,error,error,142,https://psicode.org,https://github.com/psi4/psi4/issues/871,2,['error'],['error']
Availability,"When trying to run Psi4 1.2 I get a straight segmentation fault (instantly). This is on a Rocks 6.1.1 based system using both the installer or conda methods from the download site. The conda install reported the Psi4 version as. > psi4: 1.2+9d4a61c-py36hf231b52_1. I realise this is going to be incredibly tricky to debug. I did try launching the version of python that conda installed (3.6.6-hc3d631a_0), and it seems to work fine. psi4 -v and psi4 -V both also give instant seg faults and no further info.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088:58,fault,fault,58,https://psicode.org,https://github.com/psi4/psi4/issues/1088,3,"['down', 'fault']","['download', 'fault', 'faults']"
Availability,"When trying to track down some nondeterminstic behavior, I encountered the following oddity. ```; import numpy as np. molecule {; 0 1; C1 0.00000000 0.00000000 0.00000000; H2 0.49111719 0.98252240 -0.05876775; H3 -0.72033644 -0.10038934 -0.82524990; H4 -0.52826663 -0.08928047 0.96070982; H5 0.75766207 -0.79379696 -0.07638440; }. set {; basis cc-pvdz; }. e_scf, wfn = energy('hf', return_wfn=True). print(wfn.occupation_a().np); print(np.asarray(wfn.occupation_a())); ```. Somewhat surprisingly, this is the output I see:. ```; [ 0.00000000e+000 0.00000000e+000 0.00000000e+000 -7.63277803e+283; 6.91698601e-310 6.91698623e-310 0.00000000e+000 0.00000000e+000; 0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000; 1.65169957e-220 6.91698602e-310 6.91697627e-310 -3.39981117e-158; 6.91697639e-310 6.91696828e-310 5.41141341e-041 6.91697626e-310; 6.91697724e-310 0.00000000e+000 0.00000000e+000 0.00000000e+000; -3.67112871e-197 6.91698601e-310 6.91696828e-310 2.99382801e+052; 6.91697697e-310 6.91697723e-310 0.00000000e+000 0.00000000e+000; 0.00000000e+000 4.42201243e+096]; [ 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]; ```. i.e., something funky is going on with `.np`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/639:21,down,down,21,https://psicode.org,https://github.com/psi4/psi4/issues/639,1,['down'],['down']
Availability,"When using H+ as the compound in a SAPT calculation it crashes with a divide by zero error:. ```; File ""/var/spool/slurm/d/job333055/slurm_script"", line 21, in <module>; myener = psi4.energy(""sapt2+(ccd)dmp2""); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 4581, in run_sapt; monomerA_wfn = scf_helper('RHF', molecule=monomerA, **kwargs); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 99, in scf_compute_energy; scf_energy = self.finalize_energy(); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 692, in scf_finalize_energy; self.print_energies(); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 804, in scf_print_energies; self.set_variable(""HF VIRIAL RATIO"", - potential / ke) # P::e SCF; ZeroDivisionError: float division by zero; ```. The script to reproduce this is below. ```; #!/usr/bin/env python3; import os; import numpy as np; import psi4 as psi4; psi4.core.set_num_threads(4); psi4.set_options({""cachelevel"": 1, ""print"": 1}); psi4.set_memory(12000000000); psi4_io = psi4.core.IOManager.shared_object(); psi4.core.set_output_file('hcl-sapt.log', False); geometry= """"""; 1 1; H -0.0 0.0 -1.36; --; -1 1; Cl 0.0 0.0 1; """"""; geom = psi4.geometry(geometry); psi4.basis_helper(""""""; assign aug-cc-pvtz; """"""); myener = psi4.energy(""sapt2+(ccd)dmp2""); for ener in [ 'SAPT ELST ENERGY', 'SAPT EXCH ENERGY', 'SAPT IND ENERGY', 'SAPT DISP ENERGY', 'SAPT TOTAL ENERGY' ]:; print(""%s %g"" % ( ener, psi4.variable(ener) )); ``",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3156:85,error,error,85,https://psicode.org,https://github.com/psi4/psi4/issues/3156,1,['error'],['error']
Availability,"When using a custom basis set, `MBIS_VOLUME_RATIOS` throws an error, all other properties seem to work fine. It also works fine if the basis set is included in the call to `psi4.energy`. Using conda version of psi4 1.9.1 on Linux. Input:; ```python; import psi4. h2o = psi4.geometry(""""""; H 0 0 0; O 0 0 1; H 0 1 1; """""",""h2o""). def basisspec_psi4_MyBasis(mol, role):; mol.set_basis_all_atoms(""sto-3g"", role=role); return {}. psi4.qcdb.libmintsbasisset.basishorde[""MYBASIS""] = basisspec_psi4_MyBasis; psi4.core.set_global_option(""BASIS"", ""mybasis""). _, wfn = psi4.energy('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3240:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/issues/3240,2,"['Error', 'error']","['Error', 'error']"
Availability,"When using conda install in Linux, it cannot install the linux version, and the following error occurs:; '''; conda install psi4 python=3.8 -c psi4; Collecting package metadata (current_repodata.json): done; Solving environment: /; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:. -<unknown>/win-64::psi4==1.8a1.dev32+663453e=py38_0 ; ; '''",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2894:90,error,error,90,https://psicode.org,https://github.com/psi4/psi4/issues/2894,1,['error'],['error']
Availability,Where are the basis sets from? Ideally they should just go straight to https://github.com/MolSSI-BSE/basis_set_exchange. The r2SCAN hybrids are available in the current version of Libxc.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1380787808:144,avail,available,144,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1380787808,1,['avail'],['available']
Availability,"While attempting to run an ODC-12 computation, the correlation correction to the 1RDM (tau) didn't converge. I can't quite tell what ODC-12 did in response to this, but the effect was to zero the orbital gradient and make the energy negative NaN. The code should either recover gracefully if possible or, if not possible, quit ASAP. For the benefit of @mdav2 and @mlestep there's a side problem with the SCF converging to the wrong state. I'll add this as a post to the SCF topic when I've investigated further. I can tell you now that the ""true"" ground state seems to break CFOUR. [odc12_nan.txt](https://github.com/psi4/psi4/files/2254898/odc12_nan.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1117:270,recover,recover,270,https://psicode.org,https://github.com/psi4/psi4/issues/1117,1,['recover'],['recover']
Availability,"While running the tests for #2230, I encountered the following failures; - large-atoms is trying to run analytical ECP gradietns; - min-atoms fails in `KeyError: 'psi4.core.variable: Requested variable CURRENT ENERGY was not set!\n'`; - pywrap-freq-e-sowreap fails in `NameError: name 'get_frequencies' is not defined`; - pywrap-freq-g-sowreap fails in `NameError: name 'get_frequencies' is not defined`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2234:63,failure,failures,63,https://psicode.org,https://github.com/psi4/psi4/issues/2234,1,['failure'],['failures']
Availability,"While trying to optimize the geometry for conformers of the ligand in the 2vx0 pdb structure I am also running into memory issues. Our cluster is running with cgroups and I ask for 10GB, but tell psi4 to use only 8gb. In that case most of the calculations fail >374 out of 500 conformers. To make it work I have to ask for 20GB and use only 4GB in psi4. The strange thing is these 500 runs have the same number of atoms and the same basis set, just different atomic positions. But some fail during the first SCF, some complete a few optimization cycles and a few complete. I have seen this behavior with the wB97x and the B3LYP functionals.; I have seen this with the conda installed 1.3rc2 and with a hand compiled version of 1.3rc2.; I have attached my input file and one of the smallest failed output files. I hope this helps pinning this down.; Thanks for working on Psi4, I love it!. [singlePsi4_rec290_pid12029.log](https://github.com/psi4/psi4/files/2911797/singlePsi4_rec290_pid12029.log); [singlePsi4_rec290_pid12029.txt](https://github.com/psi4/psi4/files/2911798/singlePsi4_rec290_pid12029.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1532#issuecomment-467980525:842,down,down,842,https://psicode.org,https://github.com/psi4/psi4/issues/1532#issuecomment-467980525,1,['down'],['down']
Availability,While you are at it. Could you change `camb3lyp` to `cam-b3lyp` and remove one of the `b2gpplyp-d3bj` entries. (my fault to add it twice). And I guess `lcwpbe` is `lcr-wpbe` in libxc?; I think these are the remaining name inconsistencies. Adding the citation where the parameters are from is a nice touch!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/916#issuecomment-364766180:115,fault,fault,115,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-364766180,1,['fault'],['fault']
Availability,"Whilst digging around for why I was seeing inconsistent numbers of grid points on different machines, I've spotted what has to be a bug. Currently, DFT_SPHERICAL_POINTS can be set to any value, rather than just [a Lebedev Points number](http://psicode.org/psi4manual/master/dft.html#table-lebedevorder). If a non Lebdev number is used, then the grid is, essentially, undefined. The correct behaviour is to print the table of available values and throw an exception. In psi4/psi4/src/psi4/libfock/cubature.cc, DFTGrid::buildGridFromOptions() calls LebedevGridMgr::findOrderByNPoints(opt.nangpts) (line 3968) which returns either the grid order or -1 if opt.nangpts doesn't match one of the defined grid sizes. ` if (LebedevGridMgr::findOrderByNPoints(opt.nangpts) < -1) {; LebedevGridMgr::PrintHelp(); // Tell what the admissible values are.; throw PSIEXCEPTION(""Invalid number of spherical points (not a Lebedev number)"");; }; `. The current check at line 3968 for a suitable value for DFT_SPHERICAL_POINTS is ""retval < -1"". Surely this should be either ""retval == -1"" or ""retval < 0"". Currently, the test is false even when a non-Lebdev number has been chosen:; ""set dft_spherical_points = 110"" works as expected; ""set dft_spherical_points = 109"" (or any non-Lebdev number) gives a stupidly small grid.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/673:425,avail,available,425,https://psicode.org,https://github.com/psi4/psi4/issues/673,1,['avail'],['available']
Availability,"Whoa, fantastic! These kinds of issues are extremely tough to track down, so I also transfer 5 psicoin. ; Out of interest, is this limited to `libstdc++`, or have you observed the same with `libc++`? Great detective work",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-380106497:68,down,down,68,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-380106497,1,['down'],['down']
Availability,"Why do you think the key point here is that this is DFT? I was able to observe a similar error in gradients using the same system and Hartree-Fock. I'd need to do more tests to know for sure, but my working hypothesis is that the error (which is genuine) has rather to do with the effective core potential. The ECP contribution to the gradient is a separate term in the gradient computation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066#issuecomment-1783692419:89,error,error,89,https://psicode.org,https://github.com/psi4/psi4/issues/3066#issuecomment-1783692419,2,['error'],['error']
Availability,Windows-Specific PSIO Error in SAPT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2342:22,Error,Error,22,https://psicode.org,https://github.com/psi4/psi4/issues/2342,1,['Error'],['Error']
Availability,"With 20 GB & helium, available memory overflowed `int`. `long int` seems to be working, but the C++ devs should probably look over my fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1018#issuecomment-388938929:21,avail,available,21,https://psicode.org,https://github.com/psi4/psi4/issues/1018#issuecomment-388938929,1,['avail'],['available']
Availability,"With @loriab's help, I managed to deploy `adcc` to conda.; There is a dev/temporary version available via; ```conda install -c adcc/label/dev_mkl adcc```; for testing purposes. Don't rely on it, though, it may disappear... :smile:; Make sure to install it in an existing `psi4` conda environment.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-549809071:92,avail,available,92,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-549809071,1,['avail'],['available']
Availability,"With ICC 17 and CMake 3.5.1 I get the following error:; ```; CMake Error at src/psi4/dcft/CMakeLists.txt:4 (if):; if given arguments:. ""CMAKE_CXX_COMPILER_ID"" ""STREQUAL"" ""Intel"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_LESS"" ""18.1"" ""AND"" ""CMAKE_CXX_COMPILER_VERSION"" ""VERSION_GREATER_EQUAL"" ""18.0"". Unknown arguments specified; ```. From @loriab's guesses either `STREQUAL` should `MATCHES` or we need a parentheses around each part.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923#issuecomment-369781907:48,error,error,48,https://psicode.org,https://github.com/psi4/psi4/issues/923#issuecomment-369781907,2,"['Error', 'error']","['Error', 'error']"
Availability,"With `ENABLE_bse`, BSE tries to install in the wrong place; ```; [ 11%] Installing Psi4-detected BLAS/LAPACK; [ 11%] Performing build step for 'bse_external'; -- Install configuration: ""Release""; [ 11%] Built target lapack_external; /usr/lib/python3.11/site-packages/setuptools/dist.py:530: UserWarning: Normalizing 'v1.8+60.gdf9a0dd5b' to '1.8+60.gdf9a0dd5b'; warnings.warn(tmpl.format(**locals())); running build; running build_py; UPDATING build/lib/basis_set_exchange/_version.py; set build/lib/basis_set_exchange/_version.py to 'v1.8+60.gdf9a0dd5b'; [ 17%] Performing install step for 'bse_external'; /usr/lib/python3.11/site-packages/setuptools/dist.py:530: UserWarning: Normalizing 'v1.8+60.gdf9a0dd5b' to '1.8+60.gdf9a0dd5b'; warnings.warn(tmpl.format(**locals())); running install; /usr/lib/python3.11/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; warnings.warn(; running build; running build_py; UPDATING build/lib/basis_set_exchange/_version.py; set build/lib/basis_set_exchange/_version.py to 'v1.8+60.gdf9a0dd5b'; running install_lib; copying build/lib/basis_set_exchange/_version.py -> /home/work/psi4/objdir/stage/lib/basis_set_exchange; byte-compiling /home/work/psi4/objdir/stage/lib/basis_set_exchange/_version.py to _version.cpython-311.pyc; running install_data; copying LICENSE -> /usr/local/; error: could not create '/usr/local/LICENSE': Permission denied; make[2]: *** [external/upstream/bse/CMakeFiles/bse_external.dir/build.make:105: external/upstream/bse/bse_external-prefix/src/bse_external-stamp/bse_external-install] Error 1; make[1]: *** [CMakeFiles/Makefile2:11190: external/upstream/bse/CMakeFiles/bse_external.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; (p4env) [susi@lenovo objdir]$ ccmake . ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3067:1431,error,error,1431,https://psicode.org,https://github.com/psi4/psi4/issues/3067,4,"['Error', 'error']","['Error', 'error']"
Availability,"With a significant amount of scratch space ( >110 GB) and time, at least on my local computer, this one seems to be working with the current master. The PSIO error is quite cryptic, though. As the forum thread has been dead since August 2018, I'll close this one; [disk size estimates](https://github.com/psi4/psi4/issues/402#issuecomment-261056552) and [deprecation of PSIO](https://github.com/psi4/psi4/issues/402#issue-158729474) are already part of the wishlist.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328#issuecomment-481529074:158,error,error,158,https://psicode.org,https://github.com/psi4/psi4/issues/1328#issuecomment-481529074,1,['error'],['error']
Availability,"With apologies for the vague title, there are some issues with the `compute_gradient` function. They're connected, so it's best to have a single topic for these:. 1. Not all modules that support gradients support the `compute_gradient` API. `dct` and Rob's `dfmp2` do, but most other modules don't. We learned in #2200 that RHF wavefunctions don't, though `SCFDeriv` and `Dispersion` ""wavefunctions"" seem to. (See `scfgrad` and `libdisp`, respectively.); 2. The `compute_gradient` calls coming out of `dct` and `dfmp2` don't even work without crashing! Minimal not-working example:; ```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. wfn = energy('mp2/sto-6g', return_wfn=True)[1] # Can switch ""mp2"" to ""dct"" and get a similar crash; wfn.compute_gradient(); ```; 3. Computing a derivative _reliably_ requires assumptions about what intermediates are available and what the Hamiltonian is. For example, we need to know that the file of ""T"" amplitudes is the same as that optimized during the energy computation, and that the energy was computed without relativistic corrections. We currently store whether the relativistic global is _currently_ enabled, but not whether relatvistic terms were added during the compute step. I'm open to alternatives, but I favor taking `compute_gradient` out of the API entirely. It's not consistently in the API, it doesn't get simple cases right when it's there, and the assumptions required by such a code don't make it a good candidate for being in the API in the first place.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2223:849,avail,available,849,https://psicode.org,https://github.com/psi4/psi4/issues/2223,1,['avail'],['available']
Availability,"With some glitches DFT works on *Windows*!. Annoyingly many other tests segment fault *Python* and crash *CTest*, so it is impossible to run all tests at once. Most likely `psi4::filesystem` is to blame.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404225219:80,fault,fault,80,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404225219,1,['fault'],['fault']
Availability,"With the above recommendations, I get this, which is not much more useful without more troubleshooting (slowly going through each dep one by one):. <details>; <summary>Click to expand</summary>; UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions. Package blas conflicts for:; blas[build=mkl]; ambertools[version='>=20'] -> numpy -> blas[version='*|*|1.1|1.0|1.0',build='mkl|mkl|openblas|openblas']; psi4=1.4a2.dev1058 -> blas==1.0=mkl; psi4=1.4a2.dev1058 -> numpy[version='>=1.12.0'] -> blas[version='*|*|1.1|1.0',build='mkl|openblas']. Package libgfortran4 conflicts for:; blas[build=mkl] -> libgfortran4[version='>=7.5.0']; ambertools[version='>=20'] -> libgfortran4[version='>=7.5.0']; ambertools[version='>=20'] -> libgfortran=4 -> libgfortran4; blas[build=mkl] -> libgfortran=4 -> libgfortran4. Package python conflicts for:; ambertools[version='>=20'] -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.9,<3.10.0a0']; ambertools[version='>=20'] -> cython -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.5,<3.6.0a0|3.4.*|3.7.*|3.8.*|3.9.*']; python[version='>=3.6,<3.8']; psi4=1.4a2.dev1058 -> mkl-service[version='>=2,<3.0a0'] -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.9,<3.10.0a0|>=3.6|>=3.5|>=3.5,<3.6.0a0|3.4.*|>=3.6.0']; psi4=1.4a2.dev1058 -> python[version='>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0']. Package numpy-base conflicts for:; ambertools[version='>=20'] -> numpy -> numpy-base[version='1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.11.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.3|1.14.4|1.14.4|1.14.4|1.14.4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024#issuecomment-718343348:331,Avail,Available,331,https://psicode.org,https://github.com/psi4/psi4/issues/2024#issuecomment-718343348,1,['Avail'],['Available']
Availability,"With the following input file, I noticed that there's an uncaught C++ exception that crashes the program hard; ```; $ cat input.dat ; memory 8640 Mb; molecule dimer {; 1 1; K -4.067042 -1.894214 0.002270; }; set dft_grid_name SG1; set dft_vv10_radial_points 50; set dft_vv10_spherical_points 194; set dft_nuclear_scheme treutler; set dft_radial_scheme EM; set basis def2-TZVPPD; ene = energy(""wB97M-V""); ```. Here's the error:. <details>; <summary> Expand </summary>. ```; $ psi4 input.dat ; terminate called after throwing an instance of 'psi::PsiException'; what(): ; Fatal Error: There is no SG-1 grid defined for the requested atomic number!; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1557940846948/work/psi4/src/psi4/libfock/cubature.cc on line: 2451; The most recent 5 function calls were:; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F895301610F for__signal_handl Unknown Unknown; libpthread-2.26.s 00007F895EC247E0 Unknown Unknown Unknown; libc-2.26.so 00007F895E89BB20 gsignal Unknown Unknown; libc-2.26.so 00007F895E89CFC8 abort Unknown Unknown; libint.so 00007F8933297319 _ZN9__gnu_cxx27__ Unknown Unknown; libint.so 00007F8933296839 _ZN10__cxxabiv111 Unknown Unknown; libint.so 00007F89332968D1 __cxa_call_termin Unknown Unknown; libint.so 00007F8933296600 __gxx_personality Unknown Unknown; libgcc_s.so.1 00007F895EEB9AAB Unknown Unknown Unknown; libgcc_s.so.1 00007F895EEB9F49 _Unwind_Resume Unknown Unknown; core.cpython-37m- 00007F8955C9BDC5 Unknown Unknown Unknown; core.cpython-37m- 00007F8955C94F6C Unknown Unknown Unknown; libiomp5.so 00007F8913F603F3 __kmp_invoke_micr Unknown Unknown; libiomp5.so 00007F8913EE4937 __kmp_fork_call Unknown Unknown; libiomp5.so 00007F8913EA8533 __kmpc_fork_call Unknown Unknown; core.cpython-37m- 00007F8955C947E1 Unknown Unknown Unknown; core.cpython-37m- 00007F8955CA73C0 Unknown Unknown Unknown; core.cpython-37m- 00007F8955CA62DC Unknown Unknown Unknown; core.cpython-37m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2080:420,error,error,420,https://psicode.org,https://github.com/psi4/psi4/issues/2080,4,"['Error', 'error']","['Error', 'error']"
Availability,"With the following input file:; ```; memory 500 mb; set basis cc-pVDZ. molecule mol {; 4. O 0.0 0.0 0.0; H 0.0 0.0 0.96; H 0.76 0.76 0.0; H -0.76 0.76 0.0; }. set optking {; # Freeze the dihedral angle between atoms 1, 2, 3, and 4 at 90 degrees; frozen_dihedral = [(1, 2, 3, 4, 100.0)]; }. # Perform the optimization with the frozen dihedral constraint; optimize('b3lyp'); ```; running psi4 v1.9.1 gives me a segfault: 'psi4 inp.dat' terminated by signal SIGSEGV (Address boundary error); I have tried a few other ways using keywords: fixed_dihedral, and ranged_dihedral, no luck. Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3242:481,error,error,481,https://psicode.org,https://github.com/psi4/psi4/issues/3242,1,['error'],['error']
Availability,"With. setenv PSIDATADIR /home/rking/psi4public/share. An error has occurred. Traceback:. <type 'exceptions.SyntaxError'>: ('invalid syntax',; ('/home/rking/psi4public/share/python/qcdb/dbwrap.py', 1455, 47, '; return {db: odb.integer_reactions() for db, odb in; self.dbdict.items()}\n')): File ""<string>"", line 7, in <module>. On Mon, Mar 14, 2016 at 1:02 AM, Rollin King rking@bethel.edu wrote:. > Have we changed what PSIDATADIR should point to?; > ; > On Mon, Mar 14, 2016 at 1:00 AM, Rollin King rking@bethel.edu wrote:; > ; > > An error has occurred. Traceback:; > > ; > > <class 'Boost.Python.ArgumentError'>: Python argument types in; > > ; > > ```; > > psi4.scf(NoneType, NoneType); > > ```; > > ; > > did not match C++ signature:; > > ; > > ```; > > scf(boost::shared_ptr<psi::Wavefunction>, _object*, _object*): File; > > ```; > > ; > > ""<string>"", line 47, in <module>; > > ; > > This is, for example, from the opt1 test case, but all jobs fail. I; > > already tried removing my objdir completely and recompiling.; > > ; > > On Sun, Mar 13, 2016 at 8:58 PM, Lori A. Burns notifications@github.com; > > wrote:; > > ; > > > The current head (0.4.156 / 7783818; > > > https://github.com/psi4/psi4/commit/77838182dbdf260e7f39e4e554b64ee3c05a0da7; > > > / 0.5.92) works fine for me on the test case above and on all the usual; > > > test cases. What is the nature of your broken python?; > > > ; > > > —; > > > Reply to this email directly or view it on GitHub; > > > https://github.com/psi4/psi4/issues/310#issuecomment-196104469.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196160600:57,error,error,57,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196160600,2,['error'],['error']
Availability,"Working Notes:. PSI4: Git: Rev {master} ad9c3d9; Config: RHEL/icpc/MKL/Debug; Hardware: i7x6, 64GB, 2TB. Running with GDB:. 30 GB/12 threads - passes, max memory ~27 GB, ~25 mins; 40 GB/12 threads - Segfault! . Source:. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff1293cad in __memset_sse2 () from /lib64/libc.so.6; (gdb) bt; #0 0x00007ffff1293cad in __memset_sse2 () from /lib64/libc.so.6; #1 0x0000000003529efb in psi::Matrix::zero (this=0xe7b9350); at /theoryfs2/ds/parrish/psi4public/src/lib/libmints/matrix.cc:1002; #2 0x0000000001bc54f7 in psi::dfmp2::RDFMP2::form_L (this=0xeb31d30); at /theoryfs2/ds/parrish/psi4public/src/bin/dfmp2/mp2.cc:1912. mp2.cc:1912 zeros Gmn, a three-center tensor which is currently 1896 x 1086^2 = 2236134816, which as we all know is just above 2^31 - 1 = 2147483647. So I suspect:. frame 1; #1 0x0000000003529efb in psi::Matrix::zero (this=0xe7b9350); at /theoryfs2/ds/parrish/psi4public/src/lib/libmints/matrix.cc:1002; 1002 memset(&(matrix_[h][0][0]), 0, size);; (gdb) print size; $1 = 18446744057257762112. Yep, matrix zero is FUBAR. The offending line is matrix.cc:999:. ```; size = rowspi_[h] * colspi_[h^symmetry_] * sizeof(double);; ```. Changed to:. ```; size = rowspi_[h] * ((size_t) colspi_[h^symmetry_]) * sizeof(double);; ```. Ed and I once worked out that casting to size_t works properly if the left-most element in a chain of integer multiplies is size_t. But I don't completely trust that, and so often do all work in size_t. I'll close if working in another half hour.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/119#issuecomment-130852343:266,fault,fault,266,https://psicode.org,https://github.com/psi4/psi4/issues/119#issuecomment-130852343,1,['fault'],['fault']
Availability,"Would there be any objection to me filing a PR to add some of the cc-pwCVXZ basis sets for alkali and alkali earth metals that are currently missing from Psi4 (i.e. https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/cc-pwcvtz.gbs). As far as I can tell, they're not on the basis set exchange, but thet are available at http://tyr0.chem.wsu.edu/~kipeters/basissets/alkal-nr.html",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/727:318,avail,available,318,https://psicode.org,https://github.com/psi4/psi4/issues/727,1,['avail'],['available']
Availability,"Wow, congratulations on tracking that down",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1991#issuecomment-685015121:38,down,down,38,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-685015121,1,['down'],['down']
Availability,"Wow, this would explain some random crashes I got when using `pk` while having no available swap.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1990#issuecomment-681344451:82,avail,available,82,https://psicode.org,https://github.com/psi4/psi4/pull/1990#issuecomment-681344451,1,['avail'],['available']
Availability,Write PSIO Error Information to Output File,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2019:11,Error,Error,11,https://psicode.org,https://github.com/psi4/psi4/issues/2019,1,['Error'],['Error']
Availability,"X2C doesn't decontract the basis by default so it is not automatically a redundant input. I'm getting the same error when trying to run X2C with a decontracted basis with the newest PSI4, I haven't run any X2C calculations in a while and was unaware of this issue. I'll look into this, making sure @fevangelista is also aware of this also.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662#issuecomment-288817347:73,redundant,redundant,73,https://psicode.org,https://github.com/psi4/psi4/issues/662#issuecomment-288817347,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"XC_WB97M_V: 1.00E-13 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 2115829; Total Blocks = 14225; Max Points = 256; Max Functions = 1539; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-33 entry C line 198 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 34-89 entry H line 18 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 90-101 entry N line 258 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 102-106 entry O line 318 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. PSIO_ERROR: unit = 97, errval = 12; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F6F7C68B10F for__signal_handl Unknown Unknown; libpthread-2.28.s 00007F6F9C906B20 Unknown Unknown Unknown; libc-2.28.so 00007F6F9BDDC37F gsignal Unknown Unknown; libc-2.28.so 00007F6F9BDC6DB5 abort Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B535A Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B53C5 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B5658 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B5A129 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B69438 _ZN3psi4PSIO2rwEm Unknown Unknown; core.cpython-310- 00007F6F88B6B963 _ZN3psi4PSIO5writ Unknown Unknown; core.cpython-310- 00007F6F88B566E9 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6DFBF4 Unknown Unknown Unknown; libpthread-2.28.s 00007F6F9C8FC14A Unknown Unknown Unknown; libc-2.28.so 00007F6F9BEA1DC3 clone Unknown Unknown; /var/spool/slurm/slurmd/job83930/slurm_script: line 27: 2245656 Aborted (core dumped). ```. </details>. CPU",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:12205,error,error,12205,https://psicode.org,https://github.com/psi4/psi4/issues/2970,1,['error'],['error']
Availability,"XFAIL is not an issue -- it means ""expected fail"". Since tests are passing, psi4 is probably correctly installed ... somewhere. :-) I'd check things like is Jupyter installed in the same conda env as psi4, did the correct conda env get activated (or selected from the jupy drop-down) _before_ starting the jupy kernel, are other packages near to psi4 importable, etc. . As you suggested, commands like `python -c ""import psi4 as q;print(q.__file__, q.__version__)""`, `python -c ""import qcelemental as q ...` can be helpful. If you paste your `conda list`, I can look for red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393:278,down,down,278,https://psicode.org,https://github.com/psi4/psi4/issues/3188#issuecomment-2195218393,1,['down'],['down']
Availability,"X_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10356,error,error,10356,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgs",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49826,error,error,49826,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"YGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:47981,error,error,47981,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"YR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13889,error,error,13889,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"Yay, nesting levels reduced from 10 to 5 :-) . And I'm reassured to see ""3d"" in there. Looks like we're not doing wait-and-repeat anymore, but `MaxSeconds` available if travis habitually times out. LGTM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/507#issuecomment-258979110:156,avail,available,156,https://psicode.org,https://github.com/psi4/psi4/pull/507#issuecomment-258979110,1,['avail'],['available']
Availability,"Yay, so building Psi4 w/ gcc/g++5.2 against a pre-built conda chemps2 is what's working?. HDF5 is persnickety in that chemps2 will complain if the HDF5 library it finds at runtime isn't the same one it was compiled against down to the patch level. That is, 1.8.16 and 1.8.17 aren't friendly. So unless you're lucky, you really must use the one that comes with the conda package. Does setting `-DCMAKE_PREFIX_PATH` to the conda env help to overcome the system hdf5? or `HDF5_ROOT`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288577924:223,down,down,223,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288577924,1,['down'],['down']
Availability,"Yay, two clang successes! That return statement looks like a bother to track down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/236#issuecomment-182162959:77,down,down,77,https://psicode.org,https://github.com/psi4/psi4/pull/236#issuecomment-182162959,1,['down'],['down']
Availability,"Yea, I see what you mean. The perl script is very comprehensive and it detects the type of calculation being run, changing the values that will be checked as needed. I am able to offer navigational/general help on this is someone volunteers B.TW. so if anyone is interested post here/slack me/ping me/send a smoke signal.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943#issuecomment-376673025:293,ping,ping,293,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376673025,1,['ping'],['ping']
Availability,"Yea, scratching my head over that one too. I was knee deep in `lsof` loads and thought we should check the simple things. The other weird thing is you can export either MKL or OMP threads and it fixes the error. I wonder what the precedence for`mkl/omp_set_num_threads/environ` is. It could help track down who is setting what.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311756543:205,error,error,205,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311756543,2,"['down', 'error']","['down', 'error']"
Availability,"Yeah I can't reproduce with 16.0.2 either. What version of gcc is the Intel compiler using?. > On Jul 14, 2016, at 12:24 PM, Ryan Richard notifications@github.com wrote:; > ; > My apologies on the late reply. I am unable to replicate this problem with icpc 16.0.2. Admittedly I used the version of Psi4 in #442. That being said, I am skeptical that fully scoping the function is actually causing @edeustua's compile error (I am fairly certain that you can always fully scope a function/type in C++). @edeustua, can you post the actual error log, as well as the configure command you used?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444#issuecomment-232734584:416,error,error,416,https://psicode.org,https://github.com/psi4/psi4/issues/444#issuecomment-232734584,2,['error'],['error']
Availability,"Yeah sylabs would definitely work but only allows for storing .sif images. We could consider only offering `docker` containers and having `apptainer` users pull from `dockerhub`. See https://apptainer.org/docs/user/main/docker_and_oci.html#docker-hub. I know Jet loves using docker dev containers and I'm guessing others on the dev team do too. . As an explicit example from apptainers docs: ; pull tensorflow and run with the host's amd gpu libraries loaded into the container. MPI is essentially the same.; ```; $ apptainer pull docker://rocm/tensorflow:latest; $ apptainer run --rocm tensorflow_latest.sif; ```. As described in the link I referenced there are a few peculiarities that we would have to work through so that our docker containers will run properly with `apptainer`. Off the top of my head the two main things would be:. * making sure nothing is being installed in `/root` or `/home` by default (easy); * making sure that a writable filesystem is being mounted (The user would ultimately need to ensure that a scratch directory is available or that they're running from a directory/volume with disk space available). If we wanted, it might be nice to convert the docker containers explicitly to apptainer format and upload to sylabs? A new user at a super-computing institute probably wouldn't check dockerhub. For building apptainer containers, I normally start by pulling base images from dockerhub to work with. I haven't tried pulling and running docker containers directly though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2951#issuecomment-1536683682:1048,avail,available,1048,https://psicode.org,https://github.com/psi4/psi4/issues/2951#issuecomment-1536683682,2,['avail'],['available']
Availability,"Yeah we should sit down and try to sort out all the latest SAPT additions; and how they should be called. On Thu, Mar 5, 2020 at 12:56 PM Lori A. Burns <notifications@github.com>; wrote:. > right now, one gets (wfn) sapt0-inf through sapt(dft). in light of that; > new addition, plus outright sapt(dft) plus sapt0-d, take a wholistic looks; > at the arguments to energy(sapt*); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1835?email_source=notifications&email_token=AAXVA5X6PP6BNHUB4YWNW33RF7RTTA5CNFSM4LCPIX5KYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IS3UY5Q>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5TLWRLB4PCIU2BX74TRF7RTTANCNFSM4LCPIX5A>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1835#issuecomment-595374584:19,down,down,19,https://psicode.org,https://github.com/psi4/psi4/issues/1835#issuecomment-595374584,1,['down'],['down']
Availability,"Yeah, CheMPS2 and Psi4 have to use gnu on the same side of 5.1 b/c GCC changed their std::string compatibility. The conda CheMPS2 is def. built against the gcc5.2 in that faq. Usually you have to have the gcc5.2 environment active during configuration and build _or_ pass extra args to the compilers, as below. Doesn't hurt to do both. But you're getting past the compiler checks. I've heard of problems with 2016.1 Intel compiler set. 2016.3 is known good. Actually, @amjames, was this the error you were seeing with early 2016 compilers?. ```; PFXC=/theoryfs2/ds/cdsgroup/miniconda/envs/text35; ; ${PFXC}/bin/cmake -H. -Bobjdir53 \; -DCMAKE_C_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/icc \; -DCMAKE_CXX_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/icpc \; -DCMAKE_Fortran_COMPILER=/theoryfs2/common/software/intel2016/compilers_and_libraries_2016.3.210/linux/bin/intel64/ifort \; -DCMAKE_C_FLAGS=""-gcc-name=${PFXC}/bin/gcc"" \; -DCMAKE_CXX_FLAGS=""-gcc-name=${PFXC}/bin/gcc -gxx-name=${PFXC}/bin/g++"" \; -DCMAKE_Fortran_FLAGS=""-gcc-name=${PFXC}/bin/gcc -gxx-name=${PFXC}/bin/g++"" \; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288535859:491,error,error,491,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288535859,1,['error'],['error']
Availability,"Yeah, I actually just separated the dft-custom-functional into two tests, w/ and w/o gcp. . Are you sure it was either building v2rdm internally or finding a recent enough (early Dec) one? Psi keeps breaking API so v2rdm keeps needing updates. I just tried it locally and v2rdm3 passes (others fail, but that's `for_realloc_lhs`, a build error), so I don't think it's wholly broken. If your psi was picking up a old v2rdm lying around, I can believe it would thoroughly fail, as you see. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/905#issuecomment-361802078:338,error,error,338,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361802078,1,['error'],['error']
Availability,"Yeah, I can't tell which generator travis is using just from the build log. Because of the Ninja+Fortran+CMake issues, I don't think we can have Ninja as the default cmake generator. But if this is just enabling Ninja as an available non-default generator, LGTM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/794#issuecomment-337609308:224,avail,available,224,https://psicode.org,https://github.com/psi4/psi4/pull/794#issuecomment-337609308,1,['avail'],['available']
Availability,"Yeah, I haven't looked at Azure much ever, but I noticed the error had; something to do with libxc. On Tue, Jan 19, 2021 at 5:38 PM Lori A. Burns <notifications@github.com>; wrote:. > ah, you can fix Linux CI by adding =4 to; > https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L85; > . I forgot that regular conda install psi4 has constrained libxc, but CI; > doesn't. Is that what you meant by ""bash test""?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2085#issuecomment-763212959>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAH7RW2EVRVZ4STADS2YJXNANCNFSM4WE43WOQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657:61,error,error,61,https://psicode.org,https://github.com/psi4/psi4/pull/2085#issuecomment-763311657,1,['error'],['error']
Availability,"Yeah, I just realized that myself. But I'm pretty sure it shouldn't segfault, it should rather throw an error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/597#issuecomment-276265704:104,error,error,104,https://psicode.org,https://github.com/psi4/psi4/issues/597#issuecomment-276265704,1,['error'],['error']
Availability,"Yeah, MBIS radial moments (along with a few other properties) are already in the works. I'll be sure to ping @djcole56 when it's done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2041#issuecomment-734970689:104,ping,ping,104,https://psicode.org,https://github.com/psi4/psi4/issues/2041#issuecomment-734970689,1,['ping'],['ping']
Availability,"Yeah, could also use ""quicktests"" for the ""coverage within 20 mins"". On Mon, Nov 21, 2016 at 1:01 PM, Lori A. Burns notifications@github.com; wrote:. > @robertodr https://github.com/robertodr, go for it. I put the SO link; > at the top of the file.; > ; > On the test labels front, I'd suggest; > Labels; > - optests - ""Does psi work? tu1/scf-property/dfmp2-1/sapt1/cc1/casscf-sp; > only"" plus one test from each add-on and python, json, psi4numpy; > (""add-in""?). name definitely up for discussion.; > - quicktests - tests that contribute to ""Best coverage possible in a; > 20 min envelope. (10 minutes on 2-thread travis)"" just because everyone's; > trained up to type ""quicktests""; > - longtests - tests that run in 15 min or more; > - in particular, if a test doesn't belong to any of the three above,; > it shouldn't get _any_ length label. that will help with maintenance.; > ; > Runs; > - ctest -L optests - runs the operational tests; > - ctest -L quicktests - runs the decent coverage tests; > - ctest -LE longtests - runs everything but the indiv tests that; > require >15 min; > - ctest - runs ""All psi tests (including the 30 minutes - 1.5 hour; > tests)""; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/524#issuecomment-262017070, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdpVwWhuFdd1f7Oi21g3R3H_T4T8uks5rAdx5gaJpZM4K4Unt; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/524#issuecomment-262018053:865,mainten,maintenance,865,https://psicode.org,https://github.com/psi4/psi4/pull/524#issuecomment-262018053,1,['mainten'],['maintenance']
Availability,"Yeah, that `scf_occupations_a` error is exactly what #2036 should fix, I didn't realize an issue had already been raised",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1987#issuecomment-729694797:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/issues/1987#issuecomment-729694797,1,['error'],['error']
Availability,"Yeah, the recomp is annoying, but that `gitversion.py` takes care of at least:; - defining of `GIT_VERSION` and `PSI_VERSION` compile definitions including computing a sortable version from `git describe`; - get the branch and tag contents, including when ppl have neglected to pull tags and have none defined; - make it so when ppl download zip distributions, they're not prevented from compiling for lack of version info; - be able to reset commit increment to preserve monotonic versioning as in https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/src/bin/psi4_main/gitversion.py#L105; - make sure the version gets recomputed _every_ time, even if someone just pulls a change to `README.md` that technically changes the version; - get all that info ; - into the output file header; - to essentially ""configure_file"" the https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/psi4-config.in file so that it gets written to the bottom of it; - into place for https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/doc/sphinxman/source/conf.py.in#L58-L73 to absorb it for the docs build; - so that psi4 command-line can report version. The test is if the docs index.html, an output file, `psi4 --version`, and `psi4-config --version --githash` all return the same correct thing after a pull that doesn't technically require any recompile. I don't doubt that a better formulation than at present could be devised, and that'd be nice to have, especially pure CMake, but as the initial formulation only partially hit the first point, I just reverted back to what worked. I did have to change from the pre-CMakeRewrite version this bit (https://github.com/ryanmrichard/psi4/commit/18a41e0d01a9fa903cdce98bba52c785f81560b2) which is probably why it's compiling again upon install. Perhaps that bit could be fixed by moving the `versioned_code` object lib up to the top level?. Basically, I'm open to fixes, but versioning is a real can of worms, and I'm willing to tolerate eight extra file co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239050499:333,down,download,333,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239050499,1,['down'],['download']
Availability,"Yeah, this is likely numerical noise in the eigendecomposition stages of; DF-SCF. As the errors are exceedingly small, I'd recommend just explicitly; symmetrizing the gradient to the desired point group externally. -Rob. On Wed, Mar 2, 2016 at 2:08 PM, Daniel Smith notifications@github.com; wrote:. > Im guessing this is due to the fact that the DF JK algorithm runs in C1; > symmetry.; > ; > It looks like the errors are exceedingly small, can we just resymmetrize; > the molecule using built in functions after a optking step to retain the; > symmetry?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/298#issuecomment-191455202.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/298#issuecomment-191455933:89,error,errors,89,https://psicode.org,https://github.com/psi4/psi4/issues/298#issuecomment-191455933,2,['error'],['errors']
Availability,"Yeah, we should put a catch in the code to not allow frequency() on an atom. On Thu, Mar 31, 2016 at 10:15 PM, Ryan Richard notifications@github.com; wrote:. > Admittedly the error message should be updated to be more informative, but; > the short answer is a single atom doesn't have a vibrational frequency.; > ; > More generally any molecular system has 3 times the number of atoms, total; > degrees of freedom; the difference between that and the number of external; > degrees of freedom is the internal degrees of freedom, i.e. the; > vibrations. An atom has three external degrees of freedom and thus in turn; > has 0 internal degrees of freedom.; > ; > Hope that helps.; > On Mar 31, 2016 8:07 PM, ""drhaney"" notifications@github.com wrote:; > ; > > Attempting frequency() on atomic species fails irrespective of charge,; > > multiplicity, and reference type.; > > ; > > Typical error message:; > > ; > > 1 displacements needed.; > > 1; > > ; > > An error has occurred. Traceback:; > > : basic_string::replace: File """", line 26, in; > > ; > > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in; > > frequency; > > psi4.thermo(wfn, wfn.frequencies()); > > ; > > Thanks,; > > -drhaney, -- that's ""D. R."", not Doctor.; > > ; > > Typical input file attached (C atom, neutral triplet).; > > C.txt https://github.com/psi4/psi4/files/198782/C.txt; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/332; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/332#issuecomment-204210196",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332#issuecomment-204212411:175,error,error,175,https://psicode.org,https://github.com/psi4/psi4/issues/332#issuecomment-204212411,3,['error'],['error']
Availability,"Yep, gcc version is your problem. Note this part of the cmake output:. > CMake Warning at cmake/custom_cxxstandard.cmake:22 (message):; > Intel ICPC makes use of GCC (detected: 4.7; required for C++11: 4.9) so; > this build won't work without GCC intervention:; > https://github.com/psi4/psi4/wiki/8_FAQ_Contents#modgcc; > Call Stack (most recent call first):; > CMakeLists.txt:119 (include). Acquire a >=4.9 gcc according to that link (or any way you care to) and pass `gcc-name` and `gxx-name` to icc/icpc as Daniel and that link advised. After that, the cmake warning won't go away (which is why I couldn't make it a fatal error), but it will compile.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261733493:626,error,error,626,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261733493,1,['error'],['error']
Availability,Yes psicode.org is outdated and will be replaced soon. Maybe @loriab could update the download link until then. The latest releases are also linked on the github release page: https://github.com/psi4/psi4/releases,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1584#issuecomment-475855900:86,down,download,86,https://psicode.org,https://github.com/psi4/psi4/issues/1584#issuecomment-475855900,1,['down'],['download']
Availability,Yes sorry about that ... in the build it downloads an old adcc version from github instead of recognising the installed version from conda it seems. I'll take a look.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1825#issuecomment-593790466:41,down,downloads,41,https://psicode.org,https://github.com/psi4/psi4/pull/1825#issuecomment-593790466,1,['down'],['downloads']
Availability,"Yes that's exactly the error I had. With that fix, it may be possible at some point to have, for example, libint/libderiv as dependencies of libmints only, and then anything depending on libmints will pull in libint headers. That's something to play with (that was your original intent I think).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-237869256:23,error,error,23,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-237869256,1,['error'],['error']
Availability,"Yes, I agree that details instructions and more demonstrations could be; added in separate PR, and not a reason to stall Alex's integration efforts. On Fri, Dec 2, 2022 at 2:04 PM Lori A. Burns ***@***.***>; wrote:. > /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:346:; > ERROR: Undefined substitution referenced: ""optking_frag_mode"".; >; > docs error above. probably needs double underscore after optking.; >; > Do we have a figure in there yet illustrating the inter-fragment; > definitions? I have no time to work on it today, but could tomorrow; > (Saturday).; >; > interfrag figure would be great. but if we get to the point where; > everything else is ready, I think that could be a separate PR.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TB764VCREPSYNXVVTTWLJI3HANCNFSM6AAAAAAQWELJAU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1335896146:299,ERROR,ERROR,299,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1335896146,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Yes, I also did check it with PSI4_1.0 with the same error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/786#issuecomment-323554259:53,error,error,53,https://psicode.org,https://github.com/psi4/psi4/issues/786#issuecomment-323554259,1,['error'],['error']
Availability,"Yes, I do. I am trying to move the initialization of the amplitudes inside T1/T2, but currently getting a segmentation fault. Those functions are now not const anymore, might that be the source of this problem?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-414918260:119,fault,fault,119,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-414918260,1,['fault'],['fault']
Availability,"Yes, I have it high on my to-do list. Thanks for pointing out the error, and yet another very detailed error report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-453204386:66,error,error,66,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-453204386,2,['error'],['error']
Availability,"Yes, I think what you show should work as `molden` excepts a MO matrix. Since we can compute CISD in multiple ways this gets a little tricky as only the DETCI module returns a CIWavefunction, the best way to check for this is `isinstance(wan, psi4.core.CIWavefunction)` I believe. By default FCI only computes the ground state, so only the `(0, 0)` OPDM is available. Additional states (roots) can be computed by setting the `num_roots` to a value other than 1 and the `(n, n)` OPDMs will be available via `get_opdm`. `tdm True` creates all possible `(n, m)` OPDMs. The `True` in `wfn.get_opdm(0, 0, ""A"", True)` is needed for non FCI wavefunctions as a `False` value will return a matrix of size `nact x nact`. Setting this to `True` will return a matrix the size of `nmo x nmo` with the inactive space set to the diagonal and the virtual space set to zero. Before coffee has quite kicked in yet, hopefully this makes sense.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1638#issuecomment-489080431:357,avail,available,357,https://psicode.org,https://github.com/psi4/psi4/issues/1638#issuecomment-489080431,2,['avail'],['available']
Availability,"Yes, I tried the static_cast first. I get the error `static_cast from 'std::__1::vector<double, std::__1::allocator<double> >::value_type *' (aka 'double *') to 'char *' is not allowed`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901#issuecomment-634291955:46,error,error,46,https://psicode.org,https://github.com/psi4/psi4/pull/1901#issuecomment-634291955,1,['error'],['error']
Availability,"Yes, Sebastian [pinged](https://github.com/SebWouters/CheMPS2/commit/eedb60e7a47424cf50d632f2057459567a60d3d8) me that they were back.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/439#issuecomment-230646067:16,ping,pinged,16,https://psicode.org,https://github.com/psi4/psi4/pull/439#issuecomment-230646067,1,['ping'],['pinged']
Availability,"Yes, `numpy` forces the downgrade of `mkl`, but not `intel-openmp`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1408#issuecomment-445279346:24,down,downgrade,24,https://psicode.org,https://github.com/psi4/psi4/pull/1408#issuecomment-445279346,1,['down'],['downgrade']
Availability,"Yes, `print_out()`s vastly outnumber `printf`s or `print()`s, but there are still a few, with options errors (""Did you mean ...?"") and optimization reports being the most likely encountered. They were left because they were thought helpful for non-background runs and there weren't downsides. Looks like you've found one. (I guess I always redirect with background & disown.) The optimization printing should go away with the switch to pyoptking and the ddd driver. Sounds like considering a purge of other direct printing then would be good, too. Good to leave this open. Thanks for the report.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074:102,error,errors,102,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-676629074,2,"['down', 'error']","['downsides', 'errors']"
Availability,"Yes, but that function is only ever called in a single spot AFAIK (`deriv.cc`). It could be better to shift that function signature to require the matrix factory on call. Most `CdSalcList` builds give a empty factory pointer to the constructor call which will cause some lovely seg faults anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/884#issuecomment-353380437:282,fault,faults,282,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-353380437,1,['fault'],['faults']
Availability,"Yes, disk space is about the only correctable PSIO error besides failing to clean scratch between independent calcs. There are legit fails that should be directed to devs but only after ruling out disk as culprit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959#issuecomment-661935809:51,error,error,51,https://psicode.org,https://github.com/psi4/psi4/issues/1959#issuecomment-661935809,1,['error'],['error']
Availability,"Yes, good point @JonathonMisiewicz. I can shrink it down to water with a larger basis set. This is required to trigger selection of the disk-based algorithm [here](https://github.com/psi4/psi4/blob/3d2403c43e2cf8df699ff6e382a4ae2e3a0a5faa/psi4/src/psi4/libfock/DiskDFJK.cc#L287). Test takes ~8s now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2141#issuecomment-806564452:52,down,down,52,https://psicode.org,https://github.com/psi4/psi4/pull/2141#issuecomment-806564452,1,['down'],['down']
Availability,"Yes, if you were pulling from Conda everything would be fine. Conda is only updated periodically on the /dev channel, so its natural that psi4/psi4:master will get ahead of those built binaries. I usually recommend going sans addons while dev’ing unless you need them. > On Nov 29, 2017, at 12:05 PM, shannonhouck <notifications@github.com> wrote:; > ; > Ok, that makes sense. I got Psi4 by cloning the repo as usual, and it seems like I'm pulling CheMPS2 from the Miniconda p4dev (Psi4 development) environment. Using conda update chemps2 doesn't show any available updates; the button on the CheMPS2 page says the most recent version is 1.8.4, but the Conda site says it's 1.8.3.; > ; > I'll try pulling from GitHub and see if that fixes anything. Thanks for the help!; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/871#issuecomment-347979916>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABsBcS5FvbqgbVG1GK3u1ZsrwtiI714aks5s7bjvgaJpZM4QvfAl>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347988321:557,avail,available,557,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347988321,1,['avail'],['available']
Availability,"Yes, indeed. I was testing this afternoon that AM=4 passed the quicktests and failed the expected all tests. They all behaved as expected wrt pass/fail, but the failures (except for irc) didn't print the usual diagnostic message. Running a specimen through gdb tonight reveals compute_quartet segfault. So something likely unaligned, possibly only with int, not deriv.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-240606872:161,failure,failures,161,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-240606872,1,['failure'],['failures']
Availability,"Yes, it seems elaborate just to keep metadata with the quadratures. And the quadratures themselves are not in the best state, considering we regex process them. And having thousands of them is a blot upon the `install` step. They're downloaded from a website (see [README](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/quadratures/1_x/README)), so ideally both quadratures and metadata would be pulled into a json or similar library, then read into cpp. But this seemed a quick fix. Will tag the PR for v1.2.2 backport. Ok to let those accumulate until all errors found and solved or do you need it sooner?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462#issuecomment-451987163:233,down,downloaded,233,https://psicode.org,https://github.com/psi4/psi4/issues/1462#issuecomment-451987163,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Yes, it turns out the both volumes and volume ratios are quite easy to get from Horton if a Molden-formatted density is available. I think it would be important to automate the generation of the volume ratios here, meaning that some number of free-atom calculations are required. I'm not sure what the defaults are in Horton, but we'd need to think about how exactly these free-atom calculations should be run (i.e. restricted or unrestricted g.s.).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2056#issuecomment-742028115:120,avail,available,120,https://psicode.org,https://github.com/psi4/psi4/pull/2056#issuecomment-742028115,1,['avail'],['available']
Availability,"Yes, it's often right (that's how I got the reference value for the compare_values function, from a simple input file). My concern is that in a more complex input file, it started throwing odd energies, depending on the (commented) input file contents. It's possible there was something funny with my setup, but the error is consistent enough that I'm really suspicious.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183512111:316,error,error,316,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183512111,1,['error'],['error']
Availability,"Yes, sorry, we've been doing a lot of infrastructure changes lately related to that `Wavefunction` object you saw in the `make` error message, and that mointegrals plugin template had escaped updating. I don't know how familiar you are with GitHub, so I'll warn you that that commit with the fixes is in a pull request to my forked repository. Right now tests are running to check if that commit is safe to merge into this main repository. The only impact that this has on you is that `git pull`ing _this_ repository won't get that new commit at this moment. So if you want to try it out on your plugin before the commit gets merged, just edit the file by hand according to the pattern you see in the commit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/308#issuecomment-195054956:128,error,error,128,https://psicode.org,https://github.com/psi4/psi4/issues/308#issuecomment-195054956,1,['error'],['error']
Availability,"Yes, that's how they are tagged. I don't think that the corresponding RI or JK-FIT basis set are available. In any case I merged the basis sets with those in cc-pwCVXZ.gbs so if we want to go with the uniform name they are ready.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/331#issuecomment-205807773:97,avail,available,97,https://psicode.org,https://github.com/psi4/psi4/pull/331#issuecomment-205807773,1,['avail'],['available']
Availability,"Yes, that's just what we needed. We made some changes in 1.6 (finally delivering on the driver refactor we promised in the 1.4 paper) with a very high likelihood of causing bugs in how Psi4 passes information around, which is what your error appears to be. ""Check the interface to CFOUR works"" may have slipped through the cracks of things we tested. Lori would know for sure. I unfortunately don't have CFOUR so can't test this myself, but I'll agitate to get a hold of one of the developers who does.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155154225:236,error,error,236,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155154225,1,['error'],['error']
Availability,"Yes, that’s exactly how to fix that error. The API changed in Nov. (couple weeks ago for the public mirror), but stray cases like you found are still popping up. Thanks for the catch. Lori. > On Mar 1, 2015, at 3:53 PM, wpoely86 notifications@github.com wrote:; > ; > I was trying the sointegrals plugin with 14c78ea https://github.com/psi4/psi4public/commit/14c78eabdca86f8e094576890518d93d300d2500 but I got a exception:; > ; > RuntimeError: CoordEntry::basisset: Basisset not set for H and type of BASIS; > GDB show this as the traceback:; > ; > #0 __cxa_throw () at ../../../../libstdc++-v3/libsupc++/eh_throw.cc:62; > #1 0x0000000001967124 in psi::CoordEntry::basisset (this=0x3fcde30, type=...) at src/lib/libmints/coordentry.cc:125; > #2 0x0000000001883551 in psi::BasisSet::construct (parser=..., mol=..., type=...) at src/lib/libmints/basisset.cc:718; > #3 0x00002aaab8f93f66 in sointegrals () from ./sointegrals.so; > Has something in the API changed that needs changing in the plugin?; > Replacing the line; > ; > shared_ptr<BasisSet> aoBasis = BasisSet::construct(parser, molecule, ""BASIS"");; > with; > ; > shared_ptr<BasisSet> aoBasis= BasisSet::pyconstruct_orbital(molecule, ""BASIS"", options.get_str(""BASIS""));; > seems to help. Is this the correct way of handling this?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/74.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/74#issuecomment-76630641:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/74#issuecomment-76630641,1,['error'],['error']
Availability,"Yes, the CIVector was never written so when the OPDM code wanted this from disk we saw the above error. @wpoely86 I have been making another pass at the CI code to clean up outstanding issues. Besides the issues already posted here to GitHub do you have any other requests/suggestions/problems?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/83#issuecomment-190697268:97,error,error,97,https://psicode.org,https://github.com/psi4/psi4/issues/83#issuecomment-190697268,1,['error'],['error']
Availability,"Yes, the error remains upon replacing the ZMAT line to use integer indices.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325#issuecomment-434795004:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/1325#issuecomment-434795004,1,['error'],['error']
Availability,"Yes, the gradient itself should get symmetrized. So I know any deviations; that occur from a symmetric structure within optking are optking's fault; not simply amplification of an input asymmetry. On Wed, Mar 2, 2016 at 4:11 PM, Rob Parrish notifications@github.com; wrote:. > Yeah, this is likely numerical noise in the eigendecomposition stages of; > DF-SCF. As the errors are exceedingly small, I'd recommend just explicitly; > symmetrizing the gradient to the desired point group externally.; > ; > -Rob; > ; > On Wed, Mar 2, 2016 at 2:08 PM, Daniel Smith notifications@github.com; > wrote:; > ; > > Im guessing this is due to the fact that the DF JK algorithm runs in C1; > > symmetry.; > > ; > > It looks like the errors are exceedingly small, can we just resymmetrize; > > the molecule using built in functions after a optking step to retain the; > > symmetry?; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/298#issuecomment-191455202.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/298#issuecomment-191455933.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/298#issuecomment-191456427:142,fault,fault,142,https://psicode.org,https://github.com/psi4/psi4/issues/298#issuecomment-191456427,3,"['error', 'fault']","['errors', 'fault']"
Availability,"Yes, the shortcoming of (T) on non-equilibrium structures is know.; PSI4 has UBCC(T) `energy('bcc(t)')` on a ROHF reference, but only conventional integrals with the `ccenergy` module. Maybe you already found it. You may want to have a look at Piecuch's methods (and his group's general work) for which now there is a plugin available https://github.com/piecuch-group/psi4_cct3 .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863#issuecomment-611923735:325,avail,available,325,https://psicode.org,https://github.com/psi4/psi4/issues/1863#issuecomment-611923735,1,['avail'],['available']
Availability,"Yes, the symmetrize call is nice and should help cleanup any inevitable; small numerical noise. Would be great if it could be extended to; non-Abelian point groups! But the noise @wardence is seeing looks a bit; more serious than just roundoff error. (Sorry to tease an issue before it; gets posted.). On Tue, Dec 12, 2017 at 3:17 PM, Andy Simmonett <notifications@github.com>; wrote:. > I think that a little noise in the gradients is inevitable with so many; > moving parts; that's why we have calls like this; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/scfgrad/scf_grad.cc#L274-L275>; > for all (I think) gradients throughout the code. It sounds like we just; > need to consider non-Abelian symmetry in this routine to fix the issue; > you're describing; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/867#issuecomment-351180986>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdgWeF2gB7_UhJZNjJt2DDz91wdahks5s_t9IgaJpZM4QonpI>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-351195906:244,error,error,244,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-351195906,1,['error'],['error']
Availability,"Yes, this is a bug. The wrong one should produce an error. Take a look at the `remove_symmetry` routine of `Matrix`. Something like the following might work:. ```; MintsHelper helper(wfn->basisset(), wfn->options(), 0);; SharedMatrix sotoao = helper.petite_list()->sotoao();. SharedMatrix work; work = SharedMatrix( new Matrix( ""work"", num_irreps, nsopi, nmopi ) );; SharedMatrix AO_RDM; AO_RDM = SharedMatrix( new Matrix( nao, nao ) );; AO_RDM->remove_symmetry (work, sotoao);; ```. There are various examples of using `remove_symmetry` in `libmints/writer.cc` and `libscf_solver/hf.cc`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/274#issuecomment-187696803:52,error,error,52,https://psicode.org,https://github.com/psi4/psi4/issues/274#issuecomment-187696803,1,['error'],['error']
Availability,"Yes, this is a much longed for feature in Psi4, since there's no initial SCF procedure. Psi4 relies - surprisingly succesfully - on the chance that when started from even bad orbitals, the SCF converges without difficulty. The only problem case is some complicated transition metal systems where the procedure just does not converge since there are big errors in any direction. For instance, I tried recently several calculations of this type, and found out having to use different SCF guesses or initial calculations at some other other level simply because the DFT did not converge in Psi4 by default. Having the new level shifting techique from #2216 will help in getting more stable convergence. There are really only two classes of non-convergence: 1) that you had a really crappy orbital guess, which DIIS in Psi4 was not able to minimize but rather started oscillating between two nearly degenerate solutions, or 2) the actual system is so ill behaved that the SCF itself is a bit ill-conditioned and you should use analytical second-order methods to reliably solve the problem. (Of course 1&2 is another possibility in itself.). When I wrote ERKALE as a graduate student I ran across the Hu&Yang paper [J. Chem. Phys. 132, 054109 (2010)](https://doi.org/10.1063/1.3304922) for the ADIIS convergence accelerator. It is simpler than EDIIS, and can be implemented with the same ingredients as usual DIIS: Fock and density matrices. What you need to do is just solve the K-dimensional minimization problem min_{C} E_(ADIIS) for the expansion coefficients C from which you get the extrapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are phy",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:353,error,errors,353,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,"['error', 'reliab']","['errors', 'reliably']"
Availability,"Yes, this is an embarrassing but rare known issue. It's not unalike the problem mentioned in #782 where geometry updates were interpreted in a different frame from internal representation leading to surprise results. Only in this case it's a units problem. There isn't a ready solution, so it's simply in mind to be fixed at next Mol spec iteration (in progress). If you hit it in the meantime, just toggle [this line](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsmolecule.py#L1165) with `if True:` (and re-make to copy the file); it's harmless so long as your input geometry doesn't actually have overlapping atoms. The class was designed better than this; there was a later decision that leads to this error popping up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/804#issuecomment-333541702:725,error,error,725,https://psicode.org,https://github.com/psi4/psi4/issues/804#issuecomment-333541702,1,['error'],['error']
Availability,"Yes, this is from my fork generated and built yesterday. All old versions, including the old installations were removed. TDC. Sent from my iPhone. > On Nov 6, 2016, at 8:34 AM, Justin Turney notifications@github.com wrote:; > ; > That error triggers when psi is trying to run an input file. The plugin code isn't getting called. Can you confirm the correct psi is being called?; > ; > > On Nov 6, 2016, at 8:06 AM, T. Daniel Crawford notifications@github.com wrote:; > > ; > > [draco:~/src] crawdad% psi4 --new-plugin myplugin; > > Traceback (most recent call last):; > > File ""/Users/crawdad/psi4/bin/psi4"", line 110, in <module>; > > raise KeyError(""The file %s does not exist."" % args[""input""]); > > KeyError: 'The file input.dat does not exist.'; > > ; > > This suggests the input.dat template doesn't exist, but it's in the install area. I can't find where this is implemented in the new structure, however. Perhaps it's not implemented?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub, or mute the thread.; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/503#issuecomment-258681365:235,error,error,235,https://psicode.org,https://github.com/psi4/psi4/issues/503#issuecomment-258681365,1,['error'],['error']
Availability,"Yes, we have recently pushed a very large update to how data handling is passed in Psi4. Please change your input to the following:. ``` python; scf_e, scf_wfn = energy('scf', return_wfn=True); oeprop(scf_wfn, ""MULLIKEN_CHARGES""); ```. Effectively, there is no longer a global wavefunction and you must explicitly pass wavefunctions around. Sowreap should fail at the moment (has not had a wavefunction_pass update yet). Can you please post the sapt4 error and the git reference hash?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260#issuecomment-184837562:451,error,error,451,https://psicode.org,https://github.com/psi4/psi4/issues/260#issuecomment-184837562,1,['error'],['error']
Availability,"Yes, you're correct. Turns out I made a copy error that added duplicates of lines 26-50 at the end of the file. Thank you, sorry for the waste in time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/158#issuecomment-129559902:45,error,error,45,https://psicode.org,https://github.com/psi4/psi4/issues/158#issuecomment-129559902,1,['error'],['error']
Availability,"Yes, you're right, Andy, there is an inconsistency. I believe that gdma is actually correct as it now stands, and there's no error in Psi4, but I need to remove the inconsistency.; It is a such a help to have someone else look at the code and see what I hadn't seen myself. Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1574#issuecomment-472547946:125,error,error,125,https://psicode.org,https://github.com/psi4/psi4/issues/1574#issuecomment-472547946,1,['error'],['error']
Availability,"Yes. The forums have been down since Thursday of last week. @lothian is working on getting it restored, but that involves a rather time-consuming backup and an operating system update. In the meantime, ask questions as issues (as you just did) or [on Slack](https://join.slack.com/t/psi4/shared_invite/zt-5s36s4rb-SQH6_AWyfWOqlKYN3cFs4Q).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2868#issuecomment-1411024740:26,down,down,26,https://psicode.org,https://github.com/psi4/psi4/issues/2868#issuecomment-1411024740,1,['down'],['down']
Availability,"Yes. Though as I've fallen down on my conda-building duties, haven't personally confirmed. Should be safe to close.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-370246501:27,down,down,27,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-370246501,1,['down'],['down']
Availability,"You are correct that the `adc` is only available as `conv`. Thus `mtd_type` is not necessarily needed for now. Unless `adcc` will support it sometime soon ;-) . You mentioned an inconsistent density being returned. This is OK but should be mentioned in the manual. Currently within psi4, e.g. simple MP2 single points also just return the SCF density.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-548702880:39,avail,available,39,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-548702880,1,['avail'],['available']
Availability,"You can also grab the Fedora hacks to the build system for using system copies of libint and libxc. Susi Lehtola; Sent from my phone so excuse my brevity. On 4 Jan 2019, at 20.08, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. * You can ignore what I said about py27, too. v1.2.1 will be good with 2.7, 3.5, 3.6 (and probably 3.7, though not tested). But boost is definitely not used c. v1.1. * I'm trying to remember the AM conventions. I think it's that quicktests will pass with AM5, while full tests requires AM6. Those ""rules"" may have broken down, so it's possible that some of those tests will heal with higher AM libint. * If you can cat Testing/Temporary/LastTest*log after ctest, that may be helpful for diagnosis. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/issues/1302#issuecomment-451522000>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ3x2SVRgbmVeBVe4bggiuHn4v8dQks5u_5higaJpZM4XyNWQ>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451527522:583,down,down,583,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451527522,1,['down'],['down']
Availability,"You can fix the `MKL FATAL ERROR` by `LD_PRELOAD=/path/to/libmkl_rt.so psi4`. Yes, #563 or a near relative will fix that properly w/o the preload. When you run the `bin/psi4` ""executable"", it hunts down its `lib/psi4/__init__.py` to load psi4 as a python module. I wouldn't have expected it to be confused by a symlink, but I suppose it's possible. I'll have to try it out. Glad the python detection seems to be working consistently now. Your CMake logs look good (the unnerving ""detached HEAD"" is just because we pin to tags or commits for dependencies). The odd python3.4 detection in the pybind11 CMake config is to be expected, since none of the environment was passed over to pybind11 because it doesn't matter at that stage. On the now-healed compilation, I was just warned today (@bennybp) that CMake _does_ search your install (not stage, install) dir for dependencies, so perhaps your hunch was right.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273738266:27,ERROR,ERROR,27,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273738266,2,"['ERROR', 'down']","['ERROR', 'down']"
Availability,"You have hit The Rebase Error! Fear not, we can solve this. . Follow the advice in https://github.com/psi4/psi4/pull/1490#issuecomment-457765390. In your case, you'll only want the pure-you commits: 1e5cf3a, b9c1a00, 11307b7, 50d44d6 in that order. Post here if you've any questions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1608#issuecomment-492708985:24,Error,Error,24,https://psicode.org,https://github.com/psi4/psi4/pull/1608#issuecomment-492708985,1,['Error'],['Error']
Availability,"You may check energy and gradients with respect to DFOCC CD-OMP2.5 code. In the case of energy with CD tolerance of 10^-14, CD becomes exact. Hence, you may verify your changes with respect to DFOCC module. In the case of OMP2.5 gradient you may compute gradient with a 5 point formula again with CD-OMP2.5 energies. Alternatively, you may use DF-OMP2.5 gradient in a small primary basis set with a very large auxiliary basis. As long as you can reproduce my results in OMP2.5 paper (with CDS) or you can get the same results with CD-OMP2.5, you are welcome to make any change in OCC module. Frankly speaking, I have focused on DFOCC since 2014. @JonathonMisiewicz @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1808#issuecomment-592130784:103,toler,tolerance,103,https://psicode.org,https://github.com/psi4/psi4/issues/1808#issuecomment-592130784,1,['toler'],['tolerance']
Availability,You may have to replace `*` with `s` as [described here](http://psicode.org/psi4manual/master/basissets.html#user-defined-basis-sets). You'll have to post the error and input to get specific advice.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/823#issuecomment-337917955:159,error,error,159,https://psicode.org,https://github.com/psi4/psi4/issues/823#issuecomment-337917955,1,['error'],['error']
Availability,"You may have to wait a bit before you get a response on this one, as the team member working on it (Jet) just got married this weekend. :). ## -TDC . Prof. T. Daniel Crawford; crawdad@vt.edu; 540-231-7760. On Apr 28, 2014, at 6:57 PM, rxk900 notifications@github.com wrote:. > Hello,; > Has this been resolved? I have just hit that error:; > iwl_buf_init: Can't open file 33; > with a straight ccsd calculation. I've been looking into coupled cluster variants for one of our users who has a monster job which is giving our programs all sorts of grief. I decided to simplify and go with something easily doable - molpro caffeine test with cc-pvtz basis (input as below) but the default psi4 calculation seems to be grinding slowly due to IO (clocking 2% cpu utilisation of 16 processors) and ""scf_type direct"" gives the aforementioned error.; > I'm using a fresh build I pulled(?) yesterday.; > Best wishes,; > Rika; > ; > molecule caffeine {; > units bohr; > 0 1; > C 1.50 -0.505274704 0.000000; > C -0.535187033 -2.058190923 0.000000; > C 2.65 -4.522014770 0.000000; > C 1.346731167 2.284891446 0.000000; > C -3.463010598 1.525507419 0.000000; > C -1.745695607 5.842896101 0.000000; > C -5.228750999 -2.835032850 0.000000; > C 6.295922772 -1.343301717 0.000000; > N 3.617453017 -2.104182389 0.000000; > N 0.151176399 -4.614309103 0.000000; > N -3.029497084 -1.135014970 0.000000; > N -1.247933362 3.102880179 0.000000; > O 3.102683166 3.787581194 0.000000; > O -5.585618888 2.429058396 0.000000; > H 3.895327083 -6.157733721 0.000000; > H -2.816386000 6.395195000 -1.672580; > H -2.816386000 6.395195000 1.672580; > H 0.068926104 6.808767386 0.000000; > H -6.392104000 -2.520913000 -1.673960; > H -6.392104000 -2.520913000 1.673960; > H -4.537919087 -4.771667968 0.000000; > H 7.459103496 -3.040539942 0.000000; > H 6.719940000 -0.221440000 1.677441; > H 6.719940000 -0.221440000 -1.677441; > }; > ; > set basis cc-pvtz; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/35#issuecomment-41633408:332,error,error,332,https://psicode.org,https://github.com/psi4/psi4/issues/35#issuecomment-41633408,2,['error'],['error']
Availability,"You may verify your changes with respect to DFOCC CD-OMP2.5 code. In the case of energy with CD tolerance of 10^-14, CD becomes exact. Hence, you may verify your changes with respect to DFOCC module. As long as you can reproduce my results in OMP2.5 paper (with CDS) or you can get the same results with CD-OMP2.5, you are welcome to make any change in OCC module. Frankly speaking, I have focused on DFOCC since 2014. @JonathonMisiewicz @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1809#issuecomment-592131837:96,toler,tolerance,96,https://psicode.org,https://github.com/psi4/psi4/pull/1809#issuecomment-592131837,1,['toler'],['tolerance']
Availability,"You should not have made those graphs. All you know for sure is that the error is less than 1 micro hartree. You cannot tell the difference between 1.0 e-7 and 1.5 e-7, but people read graphs as if you can tell the difference between your data points. This is also why you can't just present graphs. You need to be absolutely sure that your labels are clear, and that somebody who isn't you will be able to figure out what the graph means. If you need to add a sentence to explain them, do so. I request additional benchmarks so we can get more precise estimates on how much error these techniques introduce. Can you increase energy convergence to `1e-10`?. Because this PR isn't coming in until 1.5 anyways, I'm going to turn my attention to other things for a while.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004:73,error,error,73,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-821266004,2,['error'],['error']
Availability,"You're gaining quite the reputation for hunting down difficult and obscure bugs. Thanks a lot! At first glance, I think you're right about the `size_t` being a good solution, but I'll hold off saying anything definitive about that until I can look at it in a less sleep deprived state.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/685#issuecomment-297152955:48,down,down,48,https://psicode.org,https://github.com/psi4/psi4/pull/685#issuecomment-297152955,1,['down'],['down']
Availability,"You're right about the potential for plugins. My vote is to ping @fevangelista to see if any of these are needed in Forte. If not, I suggest we remove them and encourage plugin writers to file issues for missing bindings.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1314#issuecomment-433449526:60,ping,ping,60,https://psicode.org,https://github.com/psi4/psi4/pull/1314#issuecomment-433449526,1,['ping'],['ping']
Availability,"You're right on 2b, there's a slight logic error that I was evading. Fixing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383224938:43,error,error,43,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383224938,1,['error'],['error']
Availability,"You're right, the inconsistency could be fixed the other way around by ""fixing"" the Z values instead. Though even if a new `molecular_weight` fn were implemented in `molecule` that lets me circumvent the mass issue when necessary, the problem is that there may be places other than `optrot.cc` that are returning incorrect masses without even knowing it. I suppose these codes could be tracked down and updated with some hunting. I'd be more than happy to make a PR and add such a function, and keep my eyes out for codes calculating molecular weight. However, I'm still not sure I understand the utility of retaining masses for ghosted atoms. With some testing, it looks like real -> ghost -> real is still possible using `extract_subsets` even if I set the mass of ghost atoms to zero. I tested this just by editing `Molecule::mass` in the way described above. What doesn't seem to be possible, on the other hand, is ghost -> real (where the atoms are read in originally as ghosts `Gh(C)`), but that doesn't seem to work right now anyway (not really sure why that is, may look into this if I have time). I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-362954523:394,down,down,394,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-362954523,1,['down'],['down']
Availability,"Your Linux guru is correct, you will need a newer compiler. The error is; because your compiler does not support C++11. Check out:. https://github.com/psi4/psi4public/wiki/9_CXX. for our current C++ compiler requirements. You may want to just consider; downloading the precompiled binaries, see:. https://github.com/psi4/psi4public/wiki/1_Obtaining#condabinary. for more information. Hello. I was trying to build Psi4 onto a cluster and I encountered this; error:. $psisource/src/lib/libmints/oeprop.h(116): error: data member; initializer is not allowed; int max_noon_ = 3;. compilation aborted for; /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: **\* [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: **\* [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: **\* [all] Error 2. I was told by my Linux guru to try different compilers and libraries in; case that the code is incompatible with my system. I was building using; Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python; 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe; this is a bug. Let me know if you'd like more information. Thanks,; David. —; Reply to this email directly or view it on GitHub; https://github.com/psi4/psi4public/issues/188.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/188#issuecomment-156789433:64,error,error,64,https://psicode.org,https://github.com/psi4/psi4/issues/188#issuecomment-156789433,8,"['Error', 'down', 'error']","['Error', 'downloading', 'error']"
Availability,"You’re def in the newly created env? . Away from computer but do “conda list”. Then try “conda install <pkg> -c psi4/label/dev -c psi4” for every pkg that is psi4 channel in origin. That is, things like libxc, chemps2 etc. also make sure you have defaults numpy to provide mkl (which is what your error is about). . Sent from my iPhone. > On Mar 3, 2018, at 11:34 AM, timn2008 <notifications@github.com> wrote:; > ; > well, I've done; > conda update psi4 -c psi4/label/dev; > which got; > gau2grid: 0.1-0 psi4/label/dev; > psi4: 1.1+add49b9-py36_0 psi4 --> 1.2a1.dev781+837e345-py36_0 psi4/label/dev; > psi4-lt-mp: 1.1-py36_0 psi4 --> 1.2a1.dev5-py36_0 psi4/label/dev; > But now psi4 doesn't work from my Anaconda Python3:; > Traceback (most recent call last):; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 54, in ; > from . import core; > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > During handling of the above exception, another exception occurred:; > ; > Traceback (most recent call last):; > File ""cc4.py"", line 1, in ; > import psi4; > File ""/opt/anaconda3/lib/python3.6/site-packages/psi4/init.py"", line 59, in ; > raise ImportError(""{0}"".format(err)); > ImportError: /opt/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sin4; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/927#issuecomment-370161881:297,error,error,297,https://psicode.org,https://github.com/psi4/psi4/issues/927#issuecomment-370161881,1,['error'],['error']
Availability,"You’re not mistaken — forum has been unreliable for over a week. We haven’t determined exactly which service is at fault, but it’s on the todo list.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1774#issuecomment-568835165:115,fault,fault,115,https://psicode.org,https://github.com/psi4/psi4/issues/1774#issuecomment-568835165,1,['fault'],['fault']
Availability,"Yup - adding the missing ```reset_occ = True``` fixes the issue -- however, the guess energy becomes very bad. (I'm not sure this can be solved; you'd just want to use a basis guess from a smaller one with the same ECP!). Anyway, the fix is in the ```sad_rohf``` branch, which will be merged for #1429. Unfortunately, the merge doesn't appear to be going anywhere until the ECPs are fixed, since the ```dfmp2-ecp``` test is producing junk if you change the guess, see #1433 . And this is exactly what happens with your example as well - once the occupations have been changed, the calculation gives the nonsensical result; ```; @DF-RHF iter 100: -259.15000393594977 5.10693e-09 3.69243e-01 DIIS. PsiException: Could not converge SCF iterations in 100 iterations.; ```; It's looking very much like the ECP Hamiltonian is asymmetric. There's no way the DIIS error should be so large with such a small energy change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1439#issuecomment-449015958:856,error,error,856,https://psicode.org,https://github.com/psi4/psi4/issues/1439#issuecomment-449015958,1,['error'],['error']
Availability,"Yup, like I said: the error is that the code is not checking if the matrices are of zero size. Should be an easy fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1966#issuecomment-662919389:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/issues/1966#issuecomment-662919389,1,['error'],['error']
Availability,"Z@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32716,error,error,32716,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:37453,error,error,37453,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,"[Easybuild](https://hpcugent.github.io/easybuild/) is not an alternative to CMake or autoconf. The idea is to have an easy way to make reproducible builds and modules. Everything in the stack should also be optimally build, meaning utilizing the hardware to its full extend (for example, if AVX2 or infiniband is available, we will use it). Easybuild will take care of all dependencies. It will avoid using the OS installed (old) versions of software. For Psi4, it will build Python, Boost, Lapack (MKL), ... after building a compiler (GCC/intel/...) from scratch. We also patch out any problem. Psi4 for example hard codes it's build path for the generation of new plugins. This is not desirable on a HPC system. Some software is also not adjusted to be build by anything other than GCC. We make it work with intel too. Some software doesn't even have a real build system other than a list of makefiles that usually don't work out of the box. We fix that so the build is reproducible. . It's primarily meant for HPC sites. If somebody adds support for a piece of software, other people can reuse it with one command. I use it to build Psi4 in production. If you're developing, Easybuild is useful for building all up to date versions of dependencies. On our systems, if I run: module load PSI, I get a psi4 (a git version from februari), build with icpc-2015.1.33 (combined with GCC-4.9.2) and mkl-11.2.1.133, Boost-1.57, Python-2.7.9. If I want to rebuild it with for example GCC-5.1, it takes one command. Adding a GCC subproject to Psi sounds like a bad idea. Building GCC is not a trivial task.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/97#issuecomment-105224328:313,avail,available,313,https://psicode.org,https://github.com/psi4/psi4/pull/97#issuecomment-105224328,1,['avail'],['available']
Availability,"[Recovered from the forums.](http://forum.psicode.org/t/segfault-projecting-wfn-onto-new-basis/945). User attempted a manual basis guess, with the following input file.; ```; molecule {; 0 5; FE 0.000000000000 0.000000000000 0.123274779640; F 1.565379000000 0.000000000000 -0.647320000000; F -0.000000000000 -1.700830000000 0.639825000000; F 0.000000000000 1.700830000000 0.639825000000; F -1.565379000000 -0.000000000000 -0.647320000000; }. set {; basis sto-3g; guess sad; scf_type direct; reference uhf; }. energy('hf'). basis {; assign 6-31++G**; assign Fe 6-31G**; }. set guess read; optimize('hf'); ```. The PSIO error that results is difficult to interpret. Can we catch the case of switching basis sets without cleaning and tell the user to either clean explicitly or use the `basis_guess` option, depending on what they're trying to do?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1329:1,Recover,Recovered,1,https://psicode.org,https://github.com/psi4/psi4/issues/1329,2,"['Recover', 'error']","['Recovered', 'error']"
Availability,"[Recovered from the forums.](http://forum.psicode.org/t/thermodynamic-analysis/1014/2). The post-frequency vibrational information is difficult to get at in-file with a Psithon (not PsiAPI). See the original topic for a listing of the difficulties. User reports that `thermo` did not return a dict, but `git blame` says the return value of `thermo` has been a dict for quite some time. In the end, Lori recommended not getting the information through thermo in the first place, but loading the vibrational record.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1331:1,Recover,Recovered,1,https://psicode.org,https://github.com/psi4/psi4/issues/1331,1,['Recover'],['Recovered']
Availability,"[Recovered from the forums](http://forum.psicode.org/t/sapt0-job-fail-i-am-a-beginner/1034). As the forum mangles input file syntax, be wary that there may be an error or two hiding here. User reported the following input. ; ```; memory 5000 Mb; molecule dimer {; 1 1; C 4.19994 3.08488 -1.76044; C 5.06954 2.46285 -0.64984; C 4.64327 1.0663 -0.28153; O 4.85673 0.07495 -0.94802; O 3.96234 1.04199 0.88706; H 4.61569 4.07213 -1.97225; H 4.3027 2.5025 -2.67989; H 6.10053 2.39646 -1.00395; C 3.46892 -0.23561 1.35315; H 5.0473 3.09629 0.23787; C 1.89576 1.98716 -1.88508; C 2.70489 3.20283 -1.38087; C 2.1115 4.4631 -2.00089; O 2.22564 4.69469 -3.21122; N 1.45755 5.29818 -1.17121; H 1.82029 2.0666 -2.97331; H 2.43364 1.05863 -1.68462; H 2.61952 3.26827 -0.29319; H 0.99607 6.1109 -1.5546; H 1.29463 5.07123 -0.20248; C 0.54897 1.25688 0.14654; C 0.49167 1.90422 -1.2458; C -0.42151 1.12609 -2.17481; O -0.30845 -0.10438 -2.3373; N -1.33375 1.83551 -2.84989; H 1.41314 1.64705 0.68692; H 0.72592 0.18975 0.02069; H 0.09209 2.91772 -1.16504; H -1.48178 2.81502 -2.66023; H -1.96292 1.36772 -3.48833; C -0.75822 2.9873 1.46817; C -0.71562 1.51535 0.97554; C -0.84126 0.54385 2.14223; O 0.07905 -0.22265 2.47636; N -2.01096 0.56868 2.81099; H -0.38444 3.03627 2.49566; H -0.05905 3.57117 0.86785; H -1.58667 1.32703 0.34288; H -2.1767 -0.18204 3.47055; H -2.8428 0.94125 2.3602; H -1.95043 4.30157 -0.69534; C -2.6631 3.78375 -0.0493; C -2.12926 3.68676 1.38656; C -1.95827 5.09276 1.94691; O -1.18692 5.90686 1.41866; N -2.67996 5.39713 3.0393; H -3.6084 4.33293 -0.07465; H -2.84925 2.79578 -0.47069; H -2.85563 3.14558 1.99767; H -3.31103 4.73323 3.45906; H -2.59711 6.3152 3.45181; C 4.60787 -0.8758 2.13999; H 3.13705 -0.83567 0.50868; H 2.61634 0.00579 1.97897; H 4.90463 -0.2111 2.95001; N 4.27305 -2.20998 2.77179; H 5.46495 -1.04265 1.48973; C 3.078 -2.08869 3.6774; C 4.01212 -3.24631 1.71507; C 5.4587 -2.64236 3.59063; H 2.19356 -1.85215 3.09367; H 3.27107 -1.30183 4.40339; H 2.93642 -3.0407",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328:1,Recover,Recovered,1,https://psicode.org,https://github.com/psi4/psi4/issues/1328,2,"['Recover', 'error']","['Recovered', 'error']"
Availability,"[This block of code](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsgshell.py#L222-L228) in libmintsgshell.py throws a UnboundLocalError when trying to recover from the ZeroDivisionError. ```; try:; norm = math.sqrt(1.0 / (tmp * e_sum)); except ZeroDivisionError:; self.PYcoef[i] = [1.0 for i in range(self.nprimitive())]; # Set the normalization; for i in range(self.nprimitive()):; self.PYcoef[i] *= norm; ```. Traceback; ```; Traceback (most recent call last):; File ""/prefix/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/prefix/lib//psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/prefix/lib//psi4/driver/procrouting/proc.py"", line 1990, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/prefix/lib//psi4/driver/procrouting/proc.py"", line 1279, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); File ""/prefix/lib//psi4/driver/p4util/python_helpers.py"", line 101, in pybuild_wavefunction; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); File ""/prefix/lib//psi4/driver/p4util/python_helpers.py"", line 68, in pybuild_basis; key, resolved_target, fitrole, other, return_atomlist=return_atomlist); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 661, in pyconstruct; return_atomlist=return_atomlist); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 876, in construct; ecpbasisset = BasisSet(key, mol, ecp_atom_basis_shell); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 148, in __init__; self.constructor_role_mol_shellmap(*args); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 349, in constructor_role_mol_shellmap; n, xyz_ptr, bf_count, pt='Unnormalized', rpowers=rpowers[tst:tsp]); File ""/prefix/lib//psi4/driver/qcdb/libmintsgshell.py"", line 193, in __init__; self.normalize_shell(); File ""/prefix/lib//psi4/d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/846:171,recover,recover,171,https://psicode.org,https://github.com/psi4/psi4/issues/846,1,['recover'],['recover']
Availability,[test.tar.gz](https://github.com/psi4/psi4/files/7019263/test.tar.gz); Here I uploaded my input and result for I-SAPT example. Maybe you can help to test them to see wheter there is any error in my environment.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281#issuecomment-902437558:186,error,error,186,https://psicode.org,https://github.com/psi4/psi4/issues/2281#issuecomment-902437558,1,['error'],['error']
Availability,"\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7125,error,error,7125,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\tools\miniconda3\libs\Python36.lib D:\a\1\b\build\stage\lib\gg.lib D:\a\1\b\build\stage\lib\xc.lib D:\a\1\b\build\stage\lib\deriv.lib D:\a\1\b\build\stage\lib\int.lib C:\tools\miniconda3\Library\lib\mkl_rt.lib C:\tools\miniconda3\Library\lib\libiomp5md.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\core.cp36-win_amd64.pyd.manifest"" failed (exit code 1120) with the following output:; Creating library src\core.lib and object src\core.exp; cc.lib(lmp2.cc.obj) : error LNK2019: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ) referenced in function ""public: virtual void * __cdecl psi::MaxIterationsExceeded<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$MaxIterationsExceeded@H@psi@@UEAAPEAXI@Z); dcft.lib(dcft_compute_RHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_compute_UHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_qc.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); src\core.cp36-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1419:5897,error,error,5897,https://psicode.org,https://github.com/psi4/psi4/pull/1419,1,['error'],['error']
Availability,](https://github.com/psi4/psi4private/tree/c4) @loriab; - [ ] [nto](https://github.com/psi4/psi4private/tree/nto) @harls ; - [ ] [ash_fno](https://github.com/psi4/psi4private/tree/ash_fno) Ashutosh Kumar; - [ ] [ecp](https://github.com/psi4/psi4private/tree/ecp) @edeprince3 ; - [ ] [dfcc](https://github.com/psi4/psi4private/tree/dfcc) @andysim ; - [ ] [gfmm_cfmm](https://github.com/psi4/psi4private/tree/gfmm_cfmm) @bill-march; - [x] [asapt](https://github.com/psi4/psi4private/tree/asapt) @robparrish ; - [ ] [xtd](https://github.com/psi4/psi4private/tree/xtd) @harls ; - [ ] [cc](https://github.com/psi4/psi4private/tree/cc) @andysim ; - [x] [clean_python](https://github.com/psi4/psi4private/tree/clean_python) @loriab; - [ ] [gfmm_jk](https://github.com/psi4/psi4private/tree/gfmm_jk) @bill-march; - [ ] clear away old tickets; - **close** ; - [ ] psi4/psi4private#8; - [ ] psi4/psi4private#11 ; - [ ] psi4/psi4private#21 ; - [ ] psi4/psi4private#39 ; - [ ] psi4/psi4private#51 ; - [ ] psi4/psi4private#61 (after @robparrish signs off); - [ ] psi4/psi4private#79 (after @edeprince3 signs off) ; - [x] psi4/psi4private#110; - [x] psi4/psi4private#120 (after @dgasmith extract anything important into devel wishlist); - move to **developers wishlist** copying any good links or comments ; - [ ] psi4/psi4private#5 ; - [ ] psi4/psi4private#6 ; - [ ] psi4/psi4private#13 ; - [ ] psi4/psi4private#14 ; - [ ] psi4/psi4private#18 ; - [ ] psi4/psi4private#46 ; - [ ] psi4/psi4private#50 (keep the link) ; - [ ] psi4/psi4private#53 ; - [ ] psi4/psi4private#57 ; - [ ] psi4/psi4private#74; - **new ticket in psi4/psi4**; - [ ] psi4/psi4private#3 (hit a psio error trying to confirm-or-deny. will try to make gists public); - [ ] psi4/psi4private#16 ; - [ ] psi4/psi4private#20 ; - [ ] psi4/psi4private#54 ; - [ ] psi4/psi4private#75 + psi4/psi4private#92; - [x] repost as a public psi4/psi4betas repo with branches:; - [x] `4.0b1`; - [x] `4.0b2`; - [x] `4.0b3`; - [x] `4.0b4`; - [x] `4.0b5`; - [x] `1.0`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/508:4721,error,error,4721,https://psicode.org,https://github.com/psi4/psi4/issues/508,1,['error'],['error']
Availability,"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/qcdb/molecule.py:1298: in run_dftd3; verbose=verbose); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. molrec = {'elbl': ['', '', '', '', '', '', ...], 'elea': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}; name_hint = 'b3lyp', level_hint = 'd2', param_tweaks = None, ptype = 'gradient', dashcoeff_supplement = None; verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:135: RuntimeError; ------------------------------------------------- Captured stdout call -------------------------------------------------",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:10115,error,error,10115,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['error'],['error']
Availability,"_, here's my proposal for how to make the code more readable.; > ; > First and foremost, we abandon the Ochsenfeld pseudo-algorithm (Figure 1) as the definitive way to organize the code. We'll refer to it as appropriate, but it will not always be appropriate.; > ; > The code is now divided into the following => level chunks:; > ; > => Prep Auxiliary Quantities <=; > ; > * Zeroing, Sizing, Atom Blocking all go here; > ; > => Prep Atom Pairs <=; > ; > * In my ideal world, you'd compute this at the same time as the bra-bra shell pairs below, but getting that to work would require that atom_pairs be an ordered_set. There's not much gain for it.; > ; > => Prep Bra-Bra Shell Pairs <=; > ; > * What is currently, ""Store shell pairs that are significant by Schwarz estimate""; > ; > => Prep Bra-Ket Shell Pairs <=; > ; > * This is ""Pre-ordering and Pre-selection to find significant elements in Puv"" and includes both shell ceiling computation and computing the kets.; > ; > => Integral Formation Loop <=; > ; > * Note that this is the one section that doesn't start with ""Prep"". That's a clue that everything previous to this was for the integral formation loop. The next code chunks down are: build intermediate buffers, form the minilists, compute to K buffers, write to K (stripe out), and then finalize. Refer to the Ochsenfeld algorithm for the minilist part, but I think that's the only part where Ochsenfeld is worth mentioning.; > ; > How does that all sound to you? I know this is asking you to undo a lot of the changes I requested earlier, but I think this will make the code much easier to read for those who haven't been poring over the Ochsenfeld paper. If it sounds good, then please update the comments accordingly (I don't think we'll actually need code changes for this), and let me know when it's ready for another look.; > ; > And of course, if you don't like the idea, we can talk this out. As we've seen already, I can make mistakes. Made the changes. Please take another look.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-1046162248:1583,down,down,1583,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-1046162248,1,['down'],['down']
Availability,"_DF; >; > 8. CI; > - CISD/cc-pVDZ: *ALL FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:10825,Error,Error,10825,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,4,"['Error', 'error']","['Error', 'error']"
Availability,"_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19688,error,error,19688,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_DIIS_TRANSITION', 'SCF_MEM_SAFETY_FACTOR', 'SCF_PROPERTIES', 'SCF_SUBTYPE', 'SCF_TYPE', 'SCHMIDT_ADD_RESIDUAL_TOLERANCE', 'SCREENING', 'SCSN_MP2', 'SCS_CCSD', 'SCS_CEPA', 'SCS_MP2', 'SCS_TYPE', 'SEKINO', 'SEMICANONICAL', 'SF_RESTRICT', 'SIGMA_OVERLAP', 'SIMPLE_STEP_SCALING', 'SINGLES_PRINT', 'SMALL_CUTOFF', 'SOCC', 'SOLVER_CONVERGENCE', 'SOLVER_MAXITER', 'SOLVER_N_GUESS', 'SOLVER_N_ROOT', 'SOLVER_PRECONDITION', 'SOLVER_ROOTS_PER_IRREP', 'SOSCF', 'SOSCF_CONV', 'SOSCF_MAX_ITER', 'SOSCF_MIN_ITER', 'SOSCF_PRINT', 'SOSCF_START_CONVERGENCE', 'SOS_TYPE', 'SPIN_SCALE_TYPE', 'SSAPT0_SCALE', 'SS_E_CONVERGENCE', 'SS_R_CONVERGENCE', 'SS_SCALE', 'SS_SKIP_DIAG', 'SS_VECS_PER_ROOT', 'STABILITY_ADD_VECTORS', 'STABILITY_ANALYSIS', 'STABILITY_AUGMENT_SPACE_TOL', 'STABILITY_CHECK', 'STABILITY_CONVERGENCE', 'STABILITY_MAX_SPACE_SIZE', 'STABILITY_N_EIGENVALUES', 'STABILITY_N_GUESS_VECTORS', 'STEP_TYPE', 'SUMMATION_FIELDS', 'SYMMETRIZE', 'S_CHOLESKY_TOLERANCE', 'S_CUT', 'S_ORTHOGONALIZATION', 'S_TOLERANCE', 'T', 'T2_COUPLED', 'T3_WS_INCORE', 'TDM', 'TDSCF_COEFF_CUTOFF', 'TDSCF_GUESS', 'TDSCF_MAXITER', 'TDSCF_PRINT', 'TDSCF_R_CONVERGENCE', 'TDSCF_STATES', 'TDSCF_TDA', 'TDSCF_TDM_PRINT', 'TDSCF_TRIPLETS', 'TEST_B', 'TEST_DERIVATIVE_B', 'THETA_POINTS', 'THICKNESS', 'THREE_PARTICLE', 'TIKHONOW_MAX', 'TIKHONOW_OMEGA', 'TIKHONOW_TRIPLES', 'TILE_SZ', 'TPDM', 'TPDM_ABCD_TYPE', 'TRANSLATE_PSI4', 'TREE_EXPANSION_ORDER', 'TREE_THETA', 'TRIPLES_ALGORITHM', 'TRIPLES_DIIS', 'TRIPLES_IABC_TYPE', 'TRIPLES_LOW_MEMORY', 'TURN_ON_ACTV', 'T_AMPS', 'T_CUT_CLMO', 'T_CUT_CPAO', 'T_CUT_DO', 'T_CUT_DO_IJ', 'T_CUT_DO_PRE', 'T_CUT_MKN', 'T_CUT_PNO', 'T_CUT_PRE', 'UHF_NOONS', 'UPDATE', 'USE_DF_INTS', 'USE_SPIN_SYM', 'USE_SPIN_SYMMETRY', 'VAL_EX_LEVEL', 'VECS_CC3', 'VECS_PER_ROOT', 'WABEI_LOWDISK', 'WCOMBINE', 'WFN', 'WFN_SYM', 'WFN_TYPE', 'WRITER_FILE_LABEL', 'WRITE_NOS', 'WRITE_OPT_HISTORY', 'WRITE_OPT_RESULT', 'WRITE_TRAJECTORY', 'XI', 'XI_CONNECT', 'ZERO_INTERNAL_AMPS', 'ZETA']. Is 'tdscf_type' available? False",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:23612,avail,available,23612,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30770,error,error,30770,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40723,error,error,40723,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44755,error,error,44755,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2021,Error,Error,2021,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:3735,Error,Error,3735,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['Error'],['Error']
Availability,"__________. def test_json():; """"""json/energy""""""; ; import numpy as np; ; # Generate JSON data; json_data = {}; json_data[""molecule""] = """"""He 0 0 0\n--\nHe 0 0 1""""""; json_data[""driver""] = ""gradient""; json_data[""args""] = 'SCF'; json_data[""kwargs""] = {}; json_data[""options""] = {""BASIS"": ""STO-3G""}; json_data[""return_output""] = True; ; psi4.json_wrapper.run_json(json_data); ; assert psi4.compare_strings(""STO-3G"", json_data[""options""][""BASIS""], ""Options test""); > assert psi4.compare_integers(True, json_data[""success""], ""Success""). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py:644: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . expected = True, computed = False, label = 'Success'. def compare_integers(expected, computed, label):; """"""Function to compare two integers. Prints :py:func:`util.success`; when value *computed* matches value *expected*.; Performs a system exit on failure. Used in input files in the test suite.; ; """"""; if (expected != computed):; message = (""\t%s: computed value (%d) does not match (%d)."" % (label, computed, expected)); > raise TestComparisonError(message); E psi4.driver.p4util.exceptions.TestComparisonError: 	Success: computed value (0) does not match (1). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/p4util/util.py:244: TestComparisonError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; 	Options test......................................................PASSED; ____________________________________________________________________ test_dkh ____________________________________________________________________. @using_dkh; def test_dkh():; """"""dkh/molpro-2order""""""; ; Ne = psi4.geometry(""""""; 0 1; Ne; """"""); ; psi4.set_options({; 'reference': 'rhf',; 'basis': 'cc-pvtz-dk',; 'relativistic': 'dkh',; 'dkh_order': 2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:17676,failure,failure,17676,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['failure'],['failure']
Availability,"______________________________________________ ERROR collecting tests/cc36/test_input.py __________________________________________________________________________; test_input.py:1: in <module>; from addons import *; ../pytests/addons.py:9: in <module>; from qcengine.testing import _programs as _programs_qcng; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:173: in <module>; ""psi4"": is_program_new_enough(""psi4"", ""1.2""),; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:62: in is_program_new_enough; candidate_version = qcng.get_program(program).get_version(); /usr/local/lib/python3.9/site-packages/qcengine/programs/psi4.py:89: in get_version; with popen([which_prog, ""--version""]) as exc:; /usr/local/lib/python3.9/contextlib.py:119: in __enter__; return next(self.gen); /usr/local/lib/python3.9/site-packages/qcengine/util.py:304: in popen; ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}; /usr/local/lib/python3.9/subprocess.py:951: in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; /usr/local/lib/python3.9/subprocess.py:1744: in _execute_child; executable = os.fsencode(executable); /usr/local/lib/python3.9/os.py:810: in fsencode; filename = fspath(filename) # Does type-checking of `filename`.; E TypeError: expected str, bytes or os.PathLike object, not NoneType; ================================================================================== short test summary info ===================================================================================; ERROR test_input.py - TypeError: expected str, bytes or os.PathLike object, not NoneType; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ===================================================================================== 1 error in 13.38s ======================================================================================; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2802:1798,ERROR,ERROR,1798,https://psicode.org,https://github.com/psi4/psi4/issues/2802,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"__cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14068,error,error,14068,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35470,error,error,35470,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43435,error,error,43435,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50291,error,error,50291,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been written to: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/libint2_external-build; [ 82%] Performing build step for 'libint2_external'; Scanning dependencies of target int-obj; [ 0%] Building CXX object CMakeFiles/int-obj.dir/Unit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:1235,Error,Error,1235,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,['Error'],['Error']
Availability,"_fp=0x0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/molecule_print.cc:209; #6 0x00002aaaadd5abd5 in opt::optking (options=...); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/optking.cc:261; #7 0x00002aaaad0dd557 in py_psi_optking () at /home/laz/build/psi4/psi4/psi4/src/core.cc:239; #8 0x00002aaaad118e95 in pybind11::detail::argument_loader<>::call_impl<int, int (*&)()>(int (*&)(), pybind11::detail::index_sequence<>) (this=0x7fffffffc667, f=@0x5555560adc28: 0x2aaaad0dd4f4 <py_psi_optking()>); ... [Pythony bits snipped]; ```; In v3d_axpy(const double a, const double *X, const double *Y, double *Z), X and Y are undefined in my case and cause the seg fault. I've not dug into this in any depth yet but it looked like the linear bends of Frag 2 were added to Frag 1, so that it dies when the internal coordinates of Frag 1 are printed to the output because the internal coords refer to atoms not in that fragment. Or something along those lines. This job gives a seg fault with current git:; ```; molecule dimer {; C 0.824239 0.890517 1.696513; C 1.957325 0.070553 1.693001; C 1.813738 -1.320699 1.693796; C 0.537119 -1.892037 1.698103; C -0.595966 -1.072073 1.701616; C -0.452379 0.319180 1.700821; H 2.954752 0.516900 1.689636; H 0.424971 -2.979016 1.698724; H -1.593394 -1.518419 1.704981; H -1.337645 0.959804 1.703565; H 0.936388 1.977496 1.695892; C 2.947914 -2.141449 1.690280; N 3.874050 -2.836596 1.687416; --; C 0.717503 0.537187 -1.697308; C 0.049935 -0.691858 -1.697308; C -1.348233 -0.728319 -1.697309; C -2.078861 0.464332 -1.697309; C -1.411293 1.693378 -1.697308; C -0.013127 1.729838 -1.697308; H 1.809881 0.565636 -1.697308; H 0.620767 -1.623659 -1.697309; H -1.869768 -1.688580 -1.697309; H -3.171240 0.435884 -1.697309; H 0.508409 2.690100 -1.697308; C -2.142628 2.887174 -1.697308; N -2.730222 3.885021 -1.697308; symmetry c1; }. set optking {; frag_mode multi; }; set basis cc-pVDZ; optimize('blyp-d3bj'); ```; Running the same job with ""frag_mode single"", or ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:2456,fault,fault,2456,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,"_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check speci",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4849,Error,Error,4849,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,2,['Error'],['Error']
Availability,"_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonaliz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7795,error,error,7795,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/prepare_tensors.cc`; - [x] Mark the return value of the `libqt` Davidson solver as `[[nodiscard]]` to force callers to check how ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3265,failure,failure,3265,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,`.isidentifier()` for Py3 and sane error msg for Py2 seems reasonable. This is probably another reason why we mangle basis set names.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/650#issuecomment-286913242:35,error,error,35,https://psicode.org,https://github.com/psi4/psi4/issues/650#issuecomment-286913242,1,['error'],['error']
Availability,`/home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/introduction.rst:141: ERROR: Unexpected indentation.` appease the Sphinx,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2975#issuecomment-1572599789:84,ERROR,ERROR,84,https://psicode.org,https://github.com/psi4/psi4/pull/2975#issuecomment-1572599789,1,['ERROR'],['ERROR']
Availability,"`/home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:346: ERROR: Undefined substitution referenced: ""optking_frag_mode"".`. docs error above. probably needs double underscore after optking. > Do we have a figure in there yet illustrating the inter-fragment; definitions? I have no time to work on it today, but could tomorrow; (Saturday). interfrag figure would be great. but if we get to the point where everything else is ready, I think that could be a separate PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471:79,ERROR,ERROR,79,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1335779471,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,`DEFAULT_SYM_TOL` would simply become an attribute of the Molecule class that would have a getter/setter. The downside to this is it would be difficult to have calls like `symmetrize(double tol)`. It would simply always take the internal attribute.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/232#issuecomment-205862342:110,down,downside,110,https://psicode.org,https://github.com/psi4/psi4/issues/232#issuecomment-205862342,1,['down'],['downside']
Availability,"`ImportError: No module named oldpymodules`. yeah, this is py26. the code is missing a leading `.` for absolute import. my fault.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/169#issuecomment-133204949:123,fault,fault,123,https://psicode.org,https://github.com/psi4/psi4/issues/169#issuecomment-133204949,1,['fault'],['fault']
Availability,"`LLVM` compatibility with `MSVC` ABI is not yet complete (http://clang.llvm.org/docs/MSVCCompatibility.html), so compiling with `LLVM` and linking with the C++ library from `MSVC`, might give some problems. I got just one linkage problem! It happens when trying to create `psi::PsiOutStream` with `std::make_shared`, while passing `mode` argument:; ```c++; auto printer = std::make_shared<psi::PsiOutStream>(""filename"", std::ostream::trunc);. error LNK2001: unresolved external symbol ""__declspec(dllimport) public: static enum std::_Iosb<int>::_Openmode const std::_Iosb<int>::trunc"" (__imp_?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B); ```; but it works, in such cases:; ```c++; // Creating std::share_ptr explicitly; auto printer = std::shared_ptr(new psi::PsiOutStream(""filename"", std::ostream::trunc));. // Using the argument default value (mode = std::ostream::trunc); auto printer = std::make_shared<psi::PsiOutStream>(""filename"");. // Using a temporary variable; auto mode = std::ostream::trunc;; auto printer = std::make_shared<psi::PsiOutStream>(""filename"", mode);; ```; I use the last case to fix the code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425938802:443,error,error,443,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425938802,1,['error'],['error']
Availability,"`LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _absolute energy molecule 35_; * dev. old BS to new BS: 3.41e-07; * (newBS) `NONE` to `ROBUST`: 4.93e-07; * (newBS) `NONE` to `TREU",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3978,ROBUST,ROBUST,3978,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,`Libint_MAX_AM_ERI` from https://github.com/psi4/psi4/blob/master/external/upstream/libint/CMakeLists.txt#L5 might be available. I have no confidence in my CMake scope predictions. May need to global it.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1409#issuecomment-444991892:118,avail,available,118,https://psicode.org,https://github.com/psi4/psi4/pull/1409#issuecomment-444991892,1,['avail'],['available']
Availability,"`Molecule.geometry()` is providing all Cart coords, so the Mol should be fully specified and this should be safe (at first appearances). If opt/findif don't protest and a trial period proves safe, then I'm good with it. Downside is that we make `update_geometry()` even more rare and forgettable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/765#issuecomment-316154922:220,Down,Downside,220,https://psicode.org,https://github.com/psi4/psi4/issues/765#issuecomment-316154922,1,['Down'],['Downside']
Availability,`OS` is for one-step which I couldn't get to work in a robust manner. Please simply remove.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2635#issuecomment-1190895392:55,robust,robust,55,https://psicode.org,https://github.com/psi4/psi4/issues/2635#issuecomment-1190895392,1,['robust'],['robust']
Availability,"``` CMAKE_INSTALL_DATADIR=share```. %%DATADIR%% is not a literal, this is just an error message with substituted tokens. ```%%DATADIR%%=/usr/local/share/psi4```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683#issuecomment-1214286601:82,error,error,82,https://psicode.org,https://github.com/psi4/psi4/issues/2683#issuecomment-1214286601,1,['error'],['error']
Availability,"``` bash; $ time psi4 --help. real 0m5.980s; user 0m1.279s; sys 0m4.693s; ```. This is done with b8a2f55b719d3. Why is psi4 so extremely slow to start? I have it both with g++/4.9.2 and icpc/2015.0.090 on multiple computers. As it is the sys time that is very high, I've used strace which tells me:. ```; % time seconds usecs/call calls errors syscall; ------ ----------- ----------- --------- --------- ----------------; 99.99 3.413450 1 5057853 times; 0.01 0.000177 4 43 mmap; 0.00 0.000082 2 37 brk; 0.00 0.000079 79 1 execve; 0.00 0.000071 4 16 close; 0.00 0.000032 2 18 fstat; 0.00 0.000018 1 30 mprotect; 0.00 0.000016 1 15 open; 0.00 0.000015 15 1 1 access; 0.00 0.000000 0 14 read; 0.00 0.000000 0 1 munmap; 0.00 0.000000 0 2 rt_sigaction; 0.00 0.000000 0 1 rt_sigprocmask; 0.00 0.000000 0 2 getdents; 0.00 0.000000 0 1 getrlimit; 0.00 0.000000 0 1 arch_prctl; 0.00 0.000000 0 2 futex; 0.00 0.000000 0 1 sched_getaffinity; 0.00 0.000000 0 1 set_tid_address; 0.00 0.000000 0 1 openat; 0.00 0.000000 0 1 set_robust_list; ------ ----------- ----------- --------- --------- ----------------; 100.00 3.413940 5058042 1 total; ```. Too much time sampling?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/89:337,error,errors,337,https://psicode.org,https://github.com/psi4/psi4/issues/89,1,['error'],['errors']
Availability,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10:1616,error,error,1616,https://psicode.org,https://github.com/psi4/psi4/issues/10,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,```; $ ctest -j 1 -E dft-bench --timeout 3600 --output-on-failure; Test project /home/raimis/psi4.git/linux_build; Start 394: python-vibanalysis; 1/411 Test #394: python-vibanalysis ............... Passed 799.52 sec; Start 178: fsapt1; 2/411 Test #178: fsapt1 ........................... Passed 1815.94 sec; Start 182: isapt1; 3/411 Test #182: isapt1 ........................... Passed 406.26 sec; Start 18: cbs-xtpl-func; 4/411 Test #18: cbs-xtpl-func .................... Passed 407.07 sec; Start 181: fsapt-allterms; 5/411 Test #181: fsapt-allterms ................... Passed 652.29 sec; Start 193: fd-freq-energy-large; 6/411 Test #193: fd-freq-energy-large ............. Passed 433.67 sec; Start 195: fd-freq-gradient-large; 7/411 Test #195: fd-freq-gradient-large ........... Passed 248.39 sec; Start 278: opt13; 8/411 Test #278: opt13 ............................ Passed 644.29 sec; Start 25: cc13a; 9/411 Test #25: cc13a ............................ Passed 188.07 sec; Start 113: dcft7; 10/411 Test #113: dcft7 ............................ Passed 207.25 sec; Start 205: frac-traverse; 11/411 Test #205: frac-traverse .................... Passed 169.73 sec; Start 316: sapt2; 12/411 Test #316: sapt2 ............................ Passed 287.30 sec; Start 318: sapt4; 13/411 Test #318: sapt4 ............................ Passed 1746.35 sec; Start 325: scf-bz2; 14/411 Test #325: scf-bz2 .......................... Passed 117.02 sec; Start 1: adc1; 15/411 Test #1: adc1 ............................. Passed 21.02 sec; Start 2: adc2; 16/411 Test #2: adc2 ............................. Passed 38.38 sec; Start 3: casscf-fzc-sp; 17/411 Test #3: casscf-fzc-sp .................... Passed 2.85 sec; Start 4: casscf-semi; 18/411 Test #4: casscf-semi ...................... Passed 1.66 sec; Start 5: casscf-sa-sp; 19/411 Test #5: casscf-sa-sp ..................... Passed 8.72 sec; Start 6: ao-casscf-sp; 20/411 Test #6: ao-casscf-sp ..................... Passed 3.05 sec; Start 7: casscf-sp; 21/411 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:58,failure,failure,58,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4.git/linux_build; Start 245: nbody-convergence; Start 405: python-vibanalysis; Start 181: fsapt1; Start 11: cbs-delta-energy; Start 185: isapt1; Start 18: cbs-xtpl-func; Start 184: fsapt-allterms; Start 196: fd-freq-energy-large; Start 198: fd-freq-gradient-large; Start 287: opt13; Start 28: cc13b; Start 310: pywrap-all; Start 107: dcft-grad2; Start 22: cc1; Start 32: cc15; Start 45: cc28; 1/415 Test #184: fsapt-allterms ................... Passed 110.85 sec; Start 110: dcft1; 2/415 Test #287: opt13 ............................ Passed 189.62 sec; Start 79: cc8; 3/415 Test #45: cc28 ............................. Passed 206.85 sec; Start 152: dfomp3-grad2; 4/415 Test #32: cc15 ............................. Passed 210.28 sec; Start 233: mp2-module; 5/415 Test #22: cc1 .............................. Passed 218.85 sec; Start 35: cc18; 6/415 Test #28: cc13b ............................ Passed 229.19 sec; Start 312: pywrap-cbs1; 7/415 Test #110: dcft1 ............................ Passed 127.34 sec; Start 27: cc13a; 8/415 Test #107: dcft-grad2 ....................... Passed 252.96 sec; Start 116: dcft7; 9/415 Test #79: cc8 .............................. Passed 81.11 sec; Start 208: frac-traverse; 10/415 Test #185: isapt1 ........................... Passed 272.01 sec; Start 326: sapt2; 11/415 Test #35: cc18 ............................. Passed 60.66 sec; Start 328: sapt4; 12/415 Test #245: nbody-convergence ................ Passed 293.73 sec; Start 335: scf-bz2; 13/415 Test #152: dfomp3-grad2 ..................... Passed 117.47 sec; Start 251: ocepa-grad2; 14/415 Test #233: mp2-module ....................... Passed 120.91 sec; Start 68: cc49; 15/415 Test #326: sapt2 ............................ Passed 97.27 sec; Start 58: cc4; 16/415 Test #208: frac-traverse .................... Passed 108.53 sec; Start 390: cc-module; 17/415 Test #198: fd-freq-gradient-large ....",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 103: cubeprop-frontier; Start 112: dcft4; Start 46: cc3; Start 105: dcft-grad1; Start 36: cc2; Start 40: cc24; Start 147: dfomp2-grad3; Start 42: cc26; Start 302: pywrap-all; Start 39: cc23; Start 116: dcft8; Start 306: pywrap-checkrun-rhf; Start 37: cc21; Start 41: cc25; Start 43: cc27; Start 30: cc14; 1/413 Test #103: cubeprop-frontier ................ Passed 3.69 sec; Start 308: pywrap-checkrun-uhf; 2/413 Test #30: cc14 ............................. Passed 795.14 sec; Start 396: python-vibanalysis; 3/413 Test #43: cc27 ............................. Passed 816.39 sec; Start 77: cc7; 4/413 Test #39: cc23 ............................. Passed 918.13 sec; Start 242: ocepa-freq1; 5/413 Test #37: cc21 ............................. Passed 921.94 sec; Start 32: cc16; 6/413 Test #41: cc25 ............................. Passed 923.19 sec; Start 25: cc13; 7/413 Test #42: cc26 ............................. Passed 1051.53 sec; Start 307: pywrap-checkrun-rohf; 8/413 Test #116: dcft8 ............................ Passed 1117.15 sec; Start 157: dft-grad-lr3; 9/413 Test #40: cc24 ............................. Passed 1209.65 sec; Start 229: mp2-def2; 10/413 Test #36: cc2 .............................. Passed 1231.86 sec; Start 180: fsapt1; 11/413 Test #32: cc16 ............................. Passed 452.47 sec; Start 113: dcft5; 12/413 Test #25: cc13 ............................. Passed 471.17 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #147: dfomp2-grad3 ..................... Passed 1406.19 sec; Start 29: cc13d; 14/413 Test #105: dcft-grad1 ....................... Passed 1455.46 sec; Start 184: isapt1; 15/413 Test #308: pywrap-checkrun-uhf .............. Passed 1474.71 sec; Start 11: cbs-delta-energy; 16/413 Test #306: pywrap-checkrun-rhf .............. Passed 1487.57 sec; Start 48: cc31; 17/413 Test #302: pywrap-all ....................... Passed 1522.41",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 37: cc21; Start 46: cc3; Start 41: cc25; Start 39: cc23; Start 146: dfomp2-grad3; Start 77: cc7; Start 43: cc27; Start 306: pywrap-checkrun-rohf; Start 241: ocepa-freq1; Start 395: python-vibanalysis; Start 40: cc24; 1/412 Test #241: ocepa-freq1 ...................... Passed 939.44 sec; Start 42: cc26; 2/412 Test #40: cc24 ............................. Passed 990.28 sec; Start 115: dcft8; 3/412 Test #77: cc7 .............................. Passed 1076.46 sec; Start 36: cc2; 4/412 Test #43: cc27 ............................. Passed 1079.37 sec; Start 25: cc13; 5/412 Test #306: pywrap-checkrun-rohf ............. Passed 1087.82 sec; Start 156: dft-grad-lr3; 6/412 Test #39: cc23 ............................. Passed 1252.44 sec; Start 228: mp2-def2; 7/412 Test #37: cc21 ............................. Passed 1273.54 sec; Start 30: cc14; 8/412 Test #41: cc25 ............................. Passed 1338.20 sec; Start 179: fsapt1; 9/412 Test #395: python-vibanalysis ............... Passed 1362.17 sec; Start 112: dcft5; 10/412 Test #156: dft-grad-lr3 ..................... Passed 428.34 sec; Start 29: cc13d; 11/412 Test #307: pywrap-checkrun-uhf .............. Passed 1529.35 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #305: pywrap-checkrun-rhf .............. Passed 1560.06 sec; Start 360: tu6-cp-ne2; 13/412 Test #146: dfomp2-grad3 ..................... Passed 1580.99 sec; Start 183: isapt1; 14/412 Test #46: cc3 .............................. Passed 1614.45 sec; Start 387: cookbook-rohf-orb-rot; 15/412 Test #301: pywrap-all ....................... Passed 1620.63 sec; Start 45: cc29; 16/412 Test #104: dcft-grad1 ....................... Passed 1653.03 sec; Start 380: cc-module; 17/412 Test #228: mp2-def2 .........................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 37: cc21; Start 104: dcft-grad1; Start 301: pywrap-all; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 46: cc3; Start 41: cc25; Start 39: cc23; Start 77: cc7; Start 146: dfomp2-grad3; Start 43: cc27; Start 395: python-vibanalysis; Start 241: ocepa-freq1; Start 306: pywrap-checkrun-rohf; Start 42: cc26; 1/412 Test #42: cc26 ............................. Passed 687.16 sec; Start 115: dcft8; 2/412 Test #241: ocepa-freq1 ...................... Passed 734.19 sec; Start 40: cc24; 3/412 Test #77: cc7 .............................. Passed 831.63 sec; Start 36: cc2; 4/412 Test #43: cc27 ............................. Passed 832.91 sec; Start 156: dft-grad-lr3; 5/412 Test #306: pywrap-checkrun-rohf ............. Passed 852.37 sec; Start 25: cc13; 6/412 Test #41: cc25 ............................. Passed 1089.91 sec; Start 228: mp2-def2; 7/412 Test #37: cc21 ............................. Passed 1123.37 sec; Start 112: dcft5; 8/412 Test #39: cc23 ............................. Passed 1129.22 sec; Start 30: cc14; 9/412 Test #395: python-vibanalysis ............... Passed 1214.88 sec; Start 179: fsapt1; 10/412 Test #156: dft-grad-lr3 ..................... Passed 406.18 sec; Start 29: cc13d; 11/412 Test #146: dfomp2-grad3 ..................... Passed 1250.03 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #307: pywrap-checkrun-uhf .............. Passed 1252.06 sec; Start 183: isapt1; 13/412 Test #46: cc3 .............................. Passed 1265.86 sec; Start 360: tu6-cp-ne2; 14/412 Test #305: pywrap-checkrun-rhf .............. Passed 1275.03 sec; Start 45: cc29; 15/412 Test #301: pywrap-all ....................... Passed 1314.72 sec; Start 71: cc52; 16/412 Test #115: dcft8 ............................ Passed 739.08 sec; Start 387: cookbook-rohf-orb-rot; 17/412 Test #104: dcft-grad1 ....................... Passed 14",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 112: dcft4; Start 46: cc3; Start 105: dcft-grad1; Start 147: dfomp2-grad3; Start 36: cc2; Start 40: cc24; Start 302: pywrap-all; Start 42: cc26; Start 306: pywrap-checkrun-rhf; Start 116: dcft8; Start 39: cc23; Start 308: pywrap-checkrun-uhf; Start 41: cc25; Start 37: cc21; Start 43: cc27; Start 30: cc14; 1/413 Test #43: cc27 ............................. Passed 417.34 sec; Start 396: python-vibanalysis; 2/413 Test #30: cc14 ............................. Passed 440.89 sec; Start 77: cc7; 3/413 Test #37: cc21 ............................. Passed 462.06 sec; Start 242: ocepa-freq1; 4/413 Test #41: cc25 ............................. Passed 464.40 sec; Start 307: pywrap-checkrun-rohf; 5/413 Test #39: cc23 ............................. Passed 467.64 sec; Start 32: cc16; 6/413 Test #116: dcft8 ............................ Passed 546.67 sec; Start 25: cc13; 7/413 Test #42: cc26 ............................. Passed 674.21 sec; Start 157: dft-grad-lr3; 8/413 Test #36: cc2 .............................. Passed 736.38 sec; Start 180: fsapt1; 9/413 Test #147: dfomp2-grad3 ..................... Passed 744.74 sec; Start 229: mp2-def2; 10/413 Test #32: cc16 ............................. Passed 318.84 sec; Start 113: dcft5; 11/413 Test #25: cc13 ............................. Passed 288.74 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #308: pywrap-checkrun-uhf .............. Passed 858.01 sec; Start 29: cc13d; 13/413 Test #105: dcft-grad1 ....................... Passed 867.96 sec; Start 184: isapt1; 14/413 Test #77: cc7 .............................. Passed 433.83 sec; Start 11: cbs-delta-energy; 15/413 Test #306: pywrap-checkrun-rhf .............. Passed 876.28 sec; Start 48: cc31; 16/413 Test #40: cc24 ............................. Passed 876.40 sec; Start 114: dcft6; 17/413 Test #302: pywrap-all ....................... Passed 905.57 sec; Start 45: cc29",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 122: dfccdl1; Start 124: dfccsd1; Start 395: python-vibanalysis; Start 156: dft-grad-lr3; Start 104: dcft-grad1; Start 228: mp2-def2; Start 179: fsapt1; Start 111: dcft4; Start 301: pywrap-all; Start 39: cc23; Start 183: isapt1; Start 37: cc21; Start 36: cc2; Start 42: cc26; Start 46: cc3; Start 40: cc24; 1/412 Test #122: dfccdl1 .......................... Passed 6.36 sec; Start 18: cbs-xtpl-func; 2/412 Test #124: dfccsd1 .......................... Passed 10.68 sec; Start 182: fsapt-allterms; 3/412 Test #42: cc26 ............................. Passed 241.32 sec; Start 194: fd-freq-energy-large; 4/412 Test #36: cc2 .............................. Passed 267.40 sec; Start 196: fd-freq-gradient-large; 5/412 Test #40: cc24 ............................. Passed 276.21 sec; Start 279: opt13; 6/412 Test #37: cc21 ............................. Passed 307.87 sec; Start 241: ocepa-freq1; 7/412 Test #39: cc23 ............................. Passed 310.94 sec; Start 41: cc25; 8/412 Test #46: cc3 .............................. Passed 370.77 sec; Start 146: dfomp2-grad3; 9/412 Test #228: mp2-def2 ......................... Passed 429.97 sec; Start 307: pywrap-checkrun-uhf; 10/412 Test #183: isapt1 ........................... Passed 436.25 sec; Start 305: pywrap-checkrun-rhf; 11/412 Test #156: dft-grad-lr3 ..................... Passed 470.44 sec; Start 112: dcft5; 12/412 Test #104: dcft-grad1 ....................... Passed 479.75 sec; Start 374: dft-custom-mgga; 13/412 Test #111: dcft4 ............................ Passed 507.03 sec; Start 43: cc27; 14/412 Test #301: pywrap-all ....................... Passed 521.85 sec; Start 113: dcft6; 15/412 Test #41: cc25 ............................. Passed 236.96 sec; Start 321: sapt6; 16/412 Test #241: ocepa-freq1 ...................... Passed 240.27 sec; Start 77: cc7; 17/412 Test #196: fd-freq-gradient-large ......",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 36: cc2; Start 40: cc24; Start 46: cc3; Start 39: cc23; Start 37: cc21; Start 42: cc26; Start 41: cc25; Start 43: cc27; Start 112: dcft4; Start 105: dcft-grad1; Start 396: python-vibanalysis; Start 30: cc14; Start 147: dfomp2-grad3; Start 157: dft-grad-lr3; Start 229: mp2-def2; Start 32: cc16; 1/413 Test #229: mp2-def2 ......................... Passed 366.62 sec; Start 25: cc13; 2/413 Test #157: dft-grad-lr3 ..................... Passed 422.32 sec; Start 180: fsapt1; 3/413 Test #32: cc16 ............................. Passed 556.73 sec; Start 116: dcft8; 4/413 Test #30: cc14 ............................. Passed 752.25 sec; Start 29: cc13d; 5/413 Test #43: cc27 ............................. Passed 867.54 sec; Start 77: cc7; 6/413 Test #39: cc23 ............................. Passed 965.39 sec; Start 113: dcft5; 7/413 Test #25: cc13 ............................. Passed 598.94 sec; Start 242: ocepa-freq1; 8/413 Test #41: cc25 ............................. Passed 970.65 sec; Start 184: isapt1; 9/413 Test #37: cc21 ............................. Passed 984.02 sec; Start 45: cc29; 10/413 Test #42: cc26 ............................. Passed 997.98 sec; Start 61: cc43; 11/413 Test #29: cc13d ............................ Passed 374.09 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #40: cc24 ............................. Passed 1131.64 sec; Start 59: cc41; 13/413 Test #36: cc2 .............................. Passed 1134.77 sec; Start 48: cc31; 14/413 Test #61: cc43 ............................. Passed 150.20 sec; Start 302: pywrap-all; 15/413 Test #45: cc29 ............................. Passed 198.44 sec; Start 306: pywrap-checkrun-rhf; 16/413 Test #396: python-vibanalysis ............... Passed 1286.48 sec; Start 114: dcft6; 17/413 Test #59: cc41 ............................. Passed 185.32 sec; Start 18: cbs-xtpl-func; 18/413 Test #184: isapt1 .........",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; Start 25: cc13a; Start 113: dcft7; Start 205: frac-traverse; Start 316: sapt2; Start 318: sapt4; Start 325: scf-bz2; Start 1: adc1; Start 2: adc2; 1/411 Test #1: adc1 ............................. Passed 23.85 sec; Start 3: casscf-fzc-sp; 2/411 Test #3: casscf-fzc-sp .................... Passed 4.04 sec; Start 4: casscf-semi; 3/411 Test #4: casscf-semi ...................... Passed 2.66 sec; Start 5: casscf-sa-sp; 4/411 Test #2: adc2 ............................. Passed 42.07 sec; Start 6: ao-casscf-sp; 5/411 Test #6: ao-casscf-sp ..................... Passed 4.18 sec; Start 7: casscf-sp; 6/411 Test #5: casscf-sa-sp ..................... Passed 16.65 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 2.19 sec; Start 9: castup2; 8/411 Test #9: castup2 .......................... Passed 8.79 sec; Start 10: castup3; 9/411 Test #7: casscf-sp ........................ Passed 13.45 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 5.96 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 25.52 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 63.99 sec; Start 14: cbs-xtpl-energy; 13/411 Test #325: scf-bz2 .......................... Passed 128.53 sec; Start 15: cbs-xtpl-freq; 14/411 Test #14: cbs-xtpl-energy .................. Passed 15.43 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 11.30 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 17.01 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt ...............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 395: python-vibanalysis; Start 179: fsapt1; Start 183: isapt1; Start 18: cbs-xtpl-func; Start 182: fsapt-allterms; Start 194: fd-freq-energy-large; Start 196: fd-freq-gradient-large; Start 279: opt13; Start 26: cc13a; Start 114: dcft7; Start 206: frac-traverse; Start 317: sapt2; Start 319: sapt4; Start 326: scf-bz2; Start 1: adc1; Start 2: adc2; 1/412 Test #1: adc1 ............................. Passed 40.38 sec; Start 3: casscf-fzc-sp; 2/412 Test #3: casscf-fzc-sp .................... Passed 7.58 sec; Start 4: casscf-semi; 3/412 Test #4: casscf-semi ...................... Passed 3.39 sec; Start 5: casscf-sa-sp; 4/412 Test #2: adc2 ............................. Passed 68.12 sec; Start 6: ao-casscf-sp; 5/412 Test #5: casscf-sa-sp ..................... Passed 17.41 sec; Start 7: casscf-sp; 6/412 Test #6: ao-casscf-sp ..................... Passed 8.11 sec; Start 8: castup1; 7/412 Test #8: castup1 .......................... Passed 3.07 sec; Start 9: castup2; 8/412 Test #7: casscf-sp ........................ Passed 14.70 sec; Start 10: castup3; 9/412 Test #9: castup2 .......................... Passed 10.03 sec; Start 11: cbs-delta-energy; 10/412 Test #10: castup3 .......................... Passed 8.30 sec; Start 12: cbs-parser; 11/412 Test #12: cbs-parser ....................... Passed 37.55 sec; Start 13: cbs-xtpl-alpha; 12/412 Test #11: cbs-delta-energy ................. Passed 64.49 sec; Start 14: cbs-xtpl-energy; 13/412 Test #14: cbs-xtpl-energy .................. Passed 15.23 sec; Start 15: cbs-xtpl-freq; 14/412 Test #15: cbs-xtpl-freq .................... Passed 9.08 sec; Start 16: cbs-xtpl-gradient; 15/412 Test #326: scf-bz2 .......................... Passed 188.03 sec; Start 17: cbs-xtpl-opt; 16/412 Test #16: cbs-xtpl-gradient ................ Passed 24.11 sec; Start 19: cbs-xtpl-nbody; 17/412 Test #19: cbs-xtpl-nbody ...............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 395: python-vibanalysis; Start 41: cc25; Start 46: cc3; Start 37: cc21; Start 39: cc23; Start 104: dcft-grad1; Start 43: cc27; Start 111: dcft4; Start 156: dft-grad-lr3; Start 228: mp2-def2; Start 40: cc24; Start 36: cc2; Start 179: fsapt1; Start 301: pywrap-all; Start 146: dfomp2-grad3; Start 305: pywrap-checkrun-rhf; 1/412 Test #228: mp2-def2 ......................... Passed 422.59 sec; Start 42: cc26; 2/412 Test #156: dft-grad-lr3 ..................... Passed 456.14 sec; Start 307: pywrap-checkrun-uhf; 3/412 Test #36: cc2 .............................. Passed 642.46 sec; Start 77: cc7; 4/412 Test #40: cc24 ............................. Passed 651.87 sec; Start 241: ocepa-freq1; 5/412 Test #43: cc27 ............................. Passed 960.14 sec; Start 183: isapt1; 6/412 Test #39: cc23 ............................. Passed 1144.43 sec; Start 306: pywrap-checkrun-rohf; 7/412 Test #41: cc25 ............................. Passed 1174.58 sec; Start 25: cc13; 8/412 Test #146: dfomp2-grad3 ..................... Passed 1217.72 sec; Start 45: cc29; 9/412 Test #46: cc3 .............................. Passed 1255.05 sec; Start 29: cc13d; 10/412 Test #42: cc26 ............................. Passed 914.66 sec; Start 115: dcft8; 11/412 Test #183: isapt1 ........................... Passed 401.39 sec; Start 112: dcft5; 12/412 Test #395: python-vibanalysis ............... Passed 1424.43 sec; Start 18: cbs-xtpl-func; 13/412 Test #37: cc21 ............................. Passed 1446.40 sec; Start 182: fsapt-allterms; 14/412 Test #45: cc29 ............................. Passed 300.99 sec; Start 194: fd-freq-energy-large; 15/412 Test #104: dcft-grad1 ....................... Passed 1521.99 sec; Start 196: fd-freq-gradient-large; 16/412 Test #305: pywrap-checkrun-rhf .............. Passed 1605.76 sec; Start 279: opt13; 17/412 Test #301: pywrap-all .............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 3: casscf-fzc-sp; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 46: cc3; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 146: dfomp2-grad3; Start 37: cc21; Start 39: cc23; Start 41: cc25; Start 395: python-vibanalysis; Start 77: cc7; Start 43: cc27; Start 40: cc24; Start 306: pywrap-checkrun-rohf; 1/412 Test #3: casscf-fzc-sp .................... Passed 41.56 sec; Start 241: ocepa-freq1; 2/412 Test #43: cc27 ............................. Passed 853.53 sec; Start 42: cc26; 3/412 Test #77: cc7 .............................. Passed 857.39 sec; Start 36: cc2; 4/412 Test #40: cc24 ............................. Passed 881.10 sec; Start 115: dcft8; 5/412 Test #306: pywrap-checkrun-rohf ............. Passed 911.01 sec; Start 156: dft-grad-lr3; 6/412 Test #241: ocepa-freq1 ...................... Passed 872.67 sec; Start 228: mp2-def2; 7/412 Test #41: cc25 ............................. Passed 973.90 sec; Start 25: cc13; 8/412 Test #37: cc21 ............................. Passed 984.96 sec; Start 179: fsapt1; 9/412 Test #39: cc23 ............................. Passed 988.58 sec; Start 30: cc14; 10/412 Test #395: python-vibanalysis ............... Passed 1210.67 sec; Start 13: cbs-xtpl-alpha; 11/412 Test #146: dfomp2-grad3 ..................... Passed 1227.58 sec; Start 112: dcft5; 12/412 Test #46: cc3 .............................. Passed 1280.30 sec; Start 183: isapt1; 13/412 Test #228: mp2-def2 ......................... Passed 410.01 sec; Start 29: cc13d; 14/412 Test #305: pywrap-checkrun-rhf .............. Passed 1326.94 sec; Start 360: tu6-cp-ne2; 15/412 Test #307: pywrap-checkrun-uhf .............. Passed 1329.33 sec; Start 387: cookbook-rohf-orb-rot; 16/412 Test #156: dft-grad-lr3 ..................... Passed 429.40 sec; Start 45: cc29; 17/412 Test #301: pywrap-all ....................... Passed 1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 46: cc3; Start 112: dcft4; Start 105: dcft-grad1; Start 36: cc2; Start 40: cc24; Start 147: dfomp2-grad3; Start 42: cc26; Start 37: cc21; Start 39: cc23; Start 41: cc25; Start 43: cc27; Start 396: python-vibanalysis; Start 30: cc14; Start 116: dcft8; Start 302: pywrap-all; Start 25: cc13; 1/413 Test #25: cc13 ............................. Passed 343.48 sec; Start 77: cc7; 2/413 Test #43: cc27 ............................. Passed 564.16 sec; Start 306: pywrap-checkrun-rhf; 3/413 Test #41: cc25 ............................. Passed 634.21 sec; Start 242: ocepa-freq1; 4/413 Test #37: cc21 ............................. Passed 636.00 sec; Start 32: cc16; 5/413 Test #30: cc14 ............................. Passed 773.98 sec; Start 308: pywrap-checkrun-uhf; 6/413 Test #39: cc23 ............................. Passed 954.07 sec; Start 157: dft-grad-lr3; 7/413 Test #42: cc26 ............................. Passed 1005.92 sec; Start 229: mp2-def2; 8/413 Test #77: cc7 .............................. Passed 682.74 sec; Start 180: fsapt1; 9/413 Test #147: dfomp2-grad3 ..................... Passed 1064.72 sec; Start 113: dcft5; 10/413 Test #116: dcft8 ............................ Passed 1093.28 sec; Start 29: cc13d; 11/413 Test #32: cc16 ............................. Passed 458.97 sec; Start 307: pywrap-checkrun-rohf; 12/413 Test #40: cc24 ............................. Passed 1133.10 sec; Start 13: cbs-xtpl-alpha; 13/413 Test #36: cc2 .............................. Passed 1137.87 sec; Start 184: isapt1; 14/413 Test #105: dcft-grad1 ....................... Passed 1187.32 sec; Start 48: cc31; 15/413 Test #242: ocepa-freq1 ...................... Passed 651.24 sec; Start 45: cc29; 16/413 Test #396: python-vibanalysis ............... Passed 1355.01 sec; Start 114: dcft6; 17/413 Test #29: cc13d ............................ Passed 265.22 sec; Start 59: cc41; 18/4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 98: cisd-sp; Start 243: ocepa1; Start 45: cc3; Start 103: dcft-grad1; Start 110: dcft4; Start 39: cc24; Start 35: cc2; Start 40: cc25; Start 38: cc23; Start 36: cc21; Start 41: cc26; Start 394: python-vibanalysis; Start 145: dfomp2-grad3; Start 42: cc27; Start 300: pywrap-all; Start 76: cc7; 1/411 Test #98: cisd-sp .......................... Passed 12.34 sec; Start 304: pywrap-checkrun-rhf; 2/411 Test #243: ocepa1 ........................... Passed 18.70 sec; Start 306: pywrap-checkrun-uhf; 3/411 Test #42: cc27 ............................. Passed 832.70 sec; Start 29: cc14; 4/411 Test #76: cc7 .............................. Passed 833.35 sec; Start 240: ocepa-freq1; 5/411 Test #41: cc26 ............................. Passed 876.66 sec; Start 155: dft-grad-lr3; 6/411 Test #38: cc23 ............................. Passed 937.42 sec; Start 114: dcft8; 7/411 Test #36: cc21 ............................. Passed 943.79 sec; Start 227: mp2-def2; 8/411 Test #40: cc25 ............................. Passed 955.88 sec; Start 178: fsapt1; 9/411 Test #35: cc2 .............................. Passed 975.82 sec; Start 111: dcft5; 10/411 Test #39: cc24 ............................. Passed 1000.55 sec; Start 13: cbs-xtpl-alpha; 11/411 Test #155: dft-grad-lr3 ..................... Passed 395.18 sec; Start 305: pywrap-checkrun-rohf; 12/411 Test #394: python-vibanalysis ............... Passed 1285.91 sec; Start 24: cc13; 13/411 Test #227: mp2-def2 ......................... Passed 371.74 sec; Start 31: cc16; 14/411 Test #29: cc14 ............................. Passed 619.00 sec; Start 28: cc13d; 15/411 Test #145: dfomp2-grad3 ..................... Passed 1456.77 sec; Start 182: isapt1; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1461.98 sec; Start 11: cbs-delta-energy; 17/411 Test #111: dcft5 ............................ Passed 505.16 sec; Start 4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; \ Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; Start 25: cc13a; Start 113: dcft7; Start 205: frac-traverse; Start 316: sapt2; Start 318: sapt4; Start 325: scf-bz2; Start 1: adc1; Start 2: adc2; 1/411 Test #1: adc1 ............................. Passed 40.70 sec; Start 3: casscf-fzc-sp; 2/411 Test #3: casscf-fzc-sp .................... Passed 4.05 sec; Start 4: casscf-semi; 3/411 Test #4: casscf-semi ...................... Passed 2.83 sec; Start 5: casscf-sa-sp; 4/411 Test #5: casscf-sa-sp ..................... Passed 16.78 sec; Start 6: ao-casscf-sp; 5/411 Test #2: adc2 ............................. Passed 66.82 sec; Start 7: casscf-sp; 6/411 Test #6: ao-casscf-sp ..................... Passed 9.16 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 2.71 sec; Start 9: castup2; 8/411 Test #7: casscf-sp ........................ Passed 13.94 sec; Start 10: castup3; 9/411 Test #9: castup2 .......................... Passed 7.77 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 7.44 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 25.04 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 58.74 sec; Start 14: cbs-xtpl-energy; 13/411 Test #14: cbs-xtpl-energy .................. Passed 14.17 sec; Start 15: cbs-xtpl-freq; 14/411 Test #325: scf-bz2 .......................... Passed 165.45 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 12.40 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 21.29 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt .............",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['failure'],['failure']
Availability,"```; $ ctest -j 16 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; Start 25: cc13a; Start 113: dcft7; Start 205: frac-traverse; Start 316: sapt2; Start 318: sapt4; Start 325: scf-bz2; Start 1: adc1; Start 2: adc2; 1/411 Test #1: adc1 ............................. Passed 24.09 sec; Start 3: casscf-fzc-sp; 2/411 Test #3: casscf-fzc-sp .................... Passed 2.52 sec; Start 4: casscf-semi; 3/411 Test #4: casscf-semi ...................... Passed 3.06 sec; Start 5: casscf-sa-sp; 4/411 Test #2: adc2 ............................. Passed 41.92 sec; Start 6: ao-casscf-sp; 5/411 Test #5: casscf-sa-sp ..................... Passed 13.45 sec; Start 7: casscf-sp; 6/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 7/411 Test #8: castup1 .......................... Passed 1.92 sec; Start 9: castup2; 8/411 Test #7: casscf-sp ........................ Passed 9.38 sec; Start 10: castup3; 9/411 Test #9: castup2 .......................... Passed 5.54 sec; Start 11: cbs-delta-energy; 10/411 Test #10: castup3 .......................... Passed 5.87 sec; Start 12: cbs-parser; 11/411 Test #12: cbs-parser ....................... Passed 26.15 sec; Start 13: cbs-xtpl-alpha; 12/411 Test #11: cbs-delta-energy ................. Passed 55.75 sec; Start 14: cbs-xtpl-energy; 13/411 Test #14: cbs-xtpl-energy .................. Passed 11.20 sec; Start 15: cbs-xtpl-freq; 14/411 Test #325: scf-bz2 .......................... Passed 126.40 sec; Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 6.79 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 24.78 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt .................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:75,failure,failure,75,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 305: pywrap-checkrun-rhf; Start 46: cc3; Start 307: pywrap-checkrun-uhf; Start 37: cc21; Start 146: dfomp2-grad3; 1/412 Test #37: cc21 ............................. Passed 527.58 sec; Start 41: cc25; 2/412 Test #307: pywrap-checkrun-uhf .............. Passed 595.37 sec; Start 39: cc23; 3/412 Test #305: pywrap-checkrun-rhf .............. Passed 613.40 sec; Start 77: cc7; 4/412 Test #301: pywrap-all ....................... Passed 652.73 sec; Start 43: cc27; 5/412 Test #146: dfomp2-grad3 ..................... Passed 673.97 sec; Start 306: pywrap-checkrun-rohf; 6/412 Test #46: cc3 .............................. Passed 677.84 sec; Start 241: ocepa-freq1; 7/412 Test #104: dcft-grad1 ....................... Passed 777.43 sec; Start 40: cc24; 8/412 Test #111: dcft4 ............................ Passed 834.58 sec; Start 42: cc26; 9/412 Test #77: cc7 .............................. Passed 317.71 sec; Start 36: cc2; 10/412 Test #41: cc25 ............................. Passed 421.47 sec; Start 115: dcft8; 11/412 Test #43: cc27 ............................. Passed 327.75 sec; Start 395: python-vibanalysis; 12/412 Test #306: pywrap-checkrun-rohf ............. Passed 359.48 sec; Start 25: cc13; 13/412 Test #241: ocepa-freq1 ...................... Passed 402.21 sec; Start 30: cc14; 14/412 Test #39: cc23 ............................. Passed 487.99 sec; Start 13: cbs-xtpl-alpha; 15/412 Test #42: cc26 ............................. Passed 471.50 sec; Start 156: dft-grad-lr3; 16/412 Test #40: cc24 ............................. Passed 560.40 sec; Start 29: cc13d; 17/412 Test #115: dcft8 ............................ Passed 391.75 sec; Start 112: dcft5; 18/412 Test #25: cc13 ............................. Passed 308.71 sec; Start 228: mp2-def2; 19/412 Test #30: cc14 ............................. Passe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 111: dcft4; Start 104: dcft-grad1; Start 301: pywrap-all; Start 46: cc3; Start 305: pywrap-checkrun-rhf; Start 307: pywrap-checkrun-uhf; Start 146: dfomp2-grad3; Start 37: cc21; 1/412 Test #37: cc21 ............................. Passed 444.99 sec; Start 41: cc25; 2/412 Test #307: pywrap-checkrun-uhf .............. Passed 541.32 sec; Start 39: cc23; 3/412 Test #305: pywrap-checkrun-rhf .............. Passed 559.64 sec; Start 77: cc7; 4/412 Test #301: pywrap-all ....................... Passed 576.06 sec; Start 43: cc27; 5/412 Test #146: dfomp2-grad3 ..................... Passed 577.08 sec; Start 306: pywrap-checkrun-rohf; 6/412 Test #46: cc3 .............................. Passed 585.00 sec; Start 40: cc24; 7/412 Test #104: dcft-grad1 ....................... Passed 654.89 sec; Start 395: python-vibanalysis; 8/412 Test #111: dcft4 ............................ Passed 693.10 sec; Start 241: ocepa-freq1; 9/412 Test #41: cc25 ............................. Passed 298.26 sec; Start 42: cc26; 10/412 Test #39: cc23 ............................. Passed 294.97 sec; Start 36: cc2; 11/412 Test #77: cc7 .............................. Passed 286.85 sec; Start 115: dcft8; 12/412 Test #43: cc27 ............................. Passed 281.14 sec; Start 25: cc13; 13/412 Test #306: pywrap-checkrun-rohf ............. Passed 302.83 sec; Start 156: dft-grad-lr3; 14/412 Test #40: cc24 ............................. Passed 311.20 sec; Start 30: cc14; 15/412 Test #42: cc26 ............................. Passed 239.25 sec; Start 228: mp2-def2; 16/412 Test #241: ocepa-freq1 ...................... Passed 322.81 sec; Start 13: cbs-xtpl-alpha; 17/412 Test #25: cc13 ............................. Passed 164.06 sec; Start 179: fsapt1; 18/412 Test #30: cc14 ............................. Passed 144.79 sec; Start 112: dcft5; 19/412 Test #115: dcft8 ............................ Pas",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 226: mp2-1; Start 228: mp2-grad1; Start 394: python-vibanalysis; Start 300: pywrap-all; Start 103: dcft-grad1; Start 304: pywrap-checkrun-rhf; Start 306: pywrap-checkrun-uhf; Start 162: dft-grad-lr3; 1/411 Test #228: mp2-grad1 ........................ Passed 2.06 sec; Start 110: dcft4; 2/411 Test #226: mp2-1 ............................ Passed 6.34 sec; Start 40: cc25; 3/411 Test #40: cc25 ............................. Passed 153.57 sec; Start 178: fsapt1; 4/411 Test #306: pywrap-checkrun-uhf .............. Passed 204.87 sec; Start 39: cc24; 5/411 Test #304: pywrap-checkrun-rhf .............. Passed 232.62 sec; Start 45: cc3; 6/411 Test #300: pywrap-all ....................... Passed 243.53 sec; Start 38: cc23; 7/411 Test #110: dcft4 ............................ Passed 251.30 sec; Start 35: cc2; 8/411 Test #39: cc24 ............................. Passed 155.32 sec; Start 227: mp2-def2; 9/411 Test #103: dcft-grad1 ....................... Passed 361.43 sec; Start 36: cc21; 10/411 Test #38: cc23 ............................. Passed 142.28 sec; Start 305: pywrap-checkrun-rohf; 11/411 Test #35: cc2 .............................. Passed 153.53 sec; Start 41: cc26; 12/411 Test #162: dft-grad-lr3 ..................... Passed 443.69 sec; Start 182: isapt1; 13/411 Test #45: cc3 .............................. Passed 236.97 sec; Start 145: dfomp2-grad3; 14/411 Test #36: cc21 ............................. Passed 148.51 sec; Start 42: cc27; 15/411 Test #305: pywrap-checkrun-rohf ............. Passed 140.52 sec; Start 29: cc14; 16/411 Test #41: cc26 ............................. Passed 135.18 sec; Start 111: dcft5; 17/411 Test #42: cc27 ............................. Passed 101.05 sec; Start 18: cbs-xtpl-func; 18/411 Test #29: cc14 ............................. Passed 87.25 sec; Start 181: fsapt-allterms; 19/411 Test #145: dfomp2-grad3 .................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 297.78 sec; Start 162: dft-grad-lr3; 2/411 Test #182: isapt1 ........................... Passed 469.93 sec; Start 227: mp2-def2; 3/411 Test #18: cbs-xtpl-func .................... Passed 485.98 sec; Start 25: cc13a; 4/411 Test #193: fd-freq-energy-large ............. Passed 551.44 sec; Start 113: dcft7; 5/411 Test #181: fsapt-allterms ................... Passed 652.63 sec; Start 205: frac-traverse; 6/411 Test #394: python-vibanalysis ............... Passed 680.49 sec; Start 316: sapt2; 7/411 Test #25: cc13a ............................ Passed 254.82 sec; Start 318: sapt4; 8/411 Test #162: dft-grad-lr3 ..................... Passed 489.85 sec; Start 325: scf-bz2; 9/411 Test #113: dcft7 ............................ Passed 278.82 sec; Start 373: dft-custom-mgga; 10/411 Test #278: opt13 ............................ Passed 847.95 sec; Start 320: sapt6; 11/411 Test #205: frac-traverse .................... Passed 221.61 sec; Start 155: dfscf-bz2; 12/411 Test #227: mp2-def2 ......................... Passed 440.79 sec; Start 183: isapt2; 13/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 347: sapt-dft2; 14/411 Test #320: sapt6 ............................ Passed 169.47 sec; Start 112: dcft6; 15/411 Test #155: dfscf-bz2 ........................ Passed 146.26 sec; Start 97: cisd-opt-fd; 16/411 Test #373: dft-custom-mgga .................. Passed 193.16 sec; Start 281: opt-irc-2; 17/411 Test #316: sapt2 ............................ Passed 360.69 sec; Start 300: pywrap-all; 18/411 Test #347: sapt-dft2 ........................ Passed 128.97 sec; Start 161: dft-grad-lr2;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 340.82 sec; Start 25: cc13a; 2/411 Test #18: cbs-xtpl-func .................... Passed 486.53 sec; Start 113: dcft7; 3/411 Test #182: isapt1 ........................... Passed 538.29 sec; Start 205: frac-traverse; 4/411 Test #193: fd-freq-energy-large ............. Passed 603.47 sec; Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 281.79 sec; Start 318: sapt4; 6/411 Test #181: fsapt-allterms ................... Passed 716.17 sec; Start 325: scf-bz2; 7/411 Test #205: frac-traverse .................... Passed 235.66 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 27.11 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 326.30 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 13.41 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 9.02 sec; Start 5: casscf-sa-sp; 12/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 6: ao-casscf-sp; 13/411 Test #2: adc2 ............................. Passed 44.92 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 6.87 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.39 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 19.18 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 9.54 sec; Start 11: cbs-delta-energy; 18/411 Test #10: castup3 .......................... Passed 18.56 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ......................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_2.git/build; Start 98: cisd-sp; Start 119: dfcasscf-sp; Start 394: python-vibanalysis; Start 45: cc3; Start 162: dft-grad-lr3; Start 227: mp2-def2; Start 178: fsapt1; Start 103: dcft-grad1; 1/411 Test #119: dfcasscf-sp ...................... Passed 4.33 sec; Start 300: pywrap-all; 2/411 Test #98: cisd-sp .......................... Passed 10.64 sec; Start 304: pywrap-checkrun-rhf; 3/411 Test #45: cc3 .............................. Passed 367.14 sec; Start 39: cc24; 4/411 Test #300: pywrap-all ....................... Passed 381.81 sec; Start 306: pywrap-checkrun-uhf; 5/411 Test #304: pywrap-checkrun-rhf .............. Passed 390.00 sec; Start 182: isapt1; 6/411 Test #227: mp2-def2 ......................... Passed 446.06 sec; Start 35: cc2; 7/411 Test #162: dft-grad-lr3 ..................... Passed 473.06 sec; Start 41: cc26; 8/411 Test #103: dcft-grad1 ....................... Passed 617.53 sec; Start 110: dcft4; 9/411 Test #39: cc24 ............................. Passed 338.53 sec; Start 40: cc25; 10/411 Test #182: isapt1 ........................... Passed 433.14 sec; Start 305: pywrap-checkrun-rohf; 11/411 Test #41: cc26 ............................. Passed 423.76 sec; Start 38: cc23; 12/411 Test #35: cc2 .............................. Passed 450.90 sec; Start 36: cc21; 13/411 Test #306: pywrap-checkrun-uhf .............. Passed 571.32 sec; Start 42: cc27; 14/411 Test #394: python-vibanalysis ............... Passed 966.42 sec; Start 76: cc7; 15/411 Test #40: cc25 ............................. Passed 480.63 sec; Start 18: cbs-xtpl-func; 16/411 Test #36: cc21 ............................. Passed 484.30 sec; Start 181: fsapt-allterms; 17/411 Test #38: cc23 ............................. Passed 495.58 sec; Start 193: fd-freq-energy-large; 18/411 Test #42: cc27 ............................. Passed 441.98 sec; Start 195: fd-freq-gradient-large; 19/411 Test #76: cc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 243: ocepa1; Start 394: python-vibanalysis; Start 162: dft-grad-lr3; Start 227: mp2-def2; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; 1/411 Test #243: ocepa1 ........................... Passed 1.89 sec; Start 193: fd-freq-energy-large; 2/411 Test #227: mp2-def2 ......................... Passed 436.21 sec; Start 195: fd-freq-gradient-large; 3/411 Test #182: isapt1 ........................... Passed 472.25 sec; Start 278: opt13; 4/411 Test #162: dft-grad-lr3 ..................... Passed 488.24 sec; Start 103: dcft-grad1; 5/411 Test #193: fd-freq-energy-large ............. Passed 507.09 sec; Start 300: pywrap-all; 6/411 Test #18: cbs-xtpl-func .................... Passed 512.61 sec; Start 304: pywrap-checkrun-rhf; 7/411 Test #181: fsapt-allterms ................... Passed 628.73 sec; Start 45: cc3; 8/411 Test #195: fd-freq-gradient-large ........... Passed 291.98 sec; Start 373: dft-custom-mgga; 9/411 Test #394: python-vibanalysis ............... Passed 771.15 sec; Start 320: sapt6; 10/411 Test #304: pywrap-checkrun-rhf .............. Passed 277.81 sec; Start 306: pywrap-checkrun-uhf; 11/411 Test #300: pywrap-all ....................... Passed 288.34 sec; Start 112: dcft6; 12/411 Test #45: cc3 .............................. Passed 192.30 sec; Start 155: dfscf-bz2; 13/411 Test #103: dcft-grad1 ....................... Passed 361.67 sec; Start 183: isapt2; 14/411 Test #306: pywrap-checkrun-uhf .............. Passed 99.74 sec; Start 39: cc24; 15/411 Test #373: dft-custom-mgga .................. Passed 186.38 sec; Start 305: pywrap-checkrun-rohf; 16/411 Test #320: sapt6 ............................ Passed 165.71 sec; Start 110: dcft4; 17/411 Test #112: dcft6 ............................ Passed 164.24 sec; Start 38: cc23; 18/411 Test #155: dfscf-bz2 ........................ Passed 143.19 sec; Start 4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 287.94 sec; Start 25: cc13a; 2/411 Test #182: isapt1 ........................... Passed 442.34 sec; Start 113: dcft7; 3/411 Test #193: fd-freq-energy-large ............. Passed 511.29 sec; Start 205: frac-traverse; 4/411 Test #181: fsapt-allterms ................... Passed 597.58 sec; Start 316: sapt2; 5/411 Test #205: frac-traverse .................... Passed 227.64 sec; Start 318: sapt4; 6/411 Test #278: opt13 ............................ Passed 764.00 sec; Start 325: scf-bz2; 7/411 Test #25: cc13a ............................ Passed 481.24 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 26.25 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 392.65 sec; Start 3: casscf-fzc-sp; 10/411 Test #2: adc2 ............................. Passed 43.73 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 11.68 sec; Start 5: casscf-sa-sp; 12/411 Test #3: casscf-fzc-sp .................... Passed 19.26 sec; Start 6: ao-casscf-sp; 13/411 Test #6: ao-casscf-sp ..................... Passed 8.25 sec; Start 7: casscf-sp; 14/411 Test #5: casscf-sa-sp ..................... Passed 23.99 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.23 sec; Start 9: castup2; 16/411 Test #325: scf-bz2 .......................... Passed 124.34 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 13.78 sec; Start 11: cbs-delta-energy; 18/411 Test #7: casscf-sp ........................ Passed 38.07 sec; Start 12: cbs-parser; 19/411 Test #10: castup3 .....................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 316.06 sec; Start 25: cc13a; 2/411 Test #182: isapt1 ........................... Passed 469.47 sec; Start 113: dcft7; 3/411 Test #193: fd-freq-energy-large ............. Passed 544.74 sec; Start 205: frac-traverse; 4/411 Test #181: fsapt-allterms ................... Passed 628.02 sec; Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 336.73 sec; Start 318: sapt4; 6/411 Test #205: frac-traverse .................... Passed 224.53 sec; Start 325: scf-bz2; 7/411 Test #113: dcft7 ............................ Passed 351.15 sec; Start 1: adc1; 8/411 Test #278: opt13 ............................ Passed 840.66 sec; Start 2: adc2; 9/411 Test #1: adc1 ............................. Passed 25.01 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 11.82 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 4.34 sec; Start 5: casscf-sa-sp; 12/411 Test #5: casscf-sa-sp ..................... Passed 18.34 sec; Start 6: ao-casscf-sp; 13/411 Test #2: adc2 ............................. Passed 44.45 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 5.43 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.92 sec; Start 9: castup2; 16/411 Test #325: scf-bz2 .......................... Passed 126.98 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 14.01 sec; Start 11: cbs-delta-energy; 18/411 Test #10: castup3 .......................... Passed 15.90 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ....................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['failure'],['failure']
Availability,"```; $ ctest -j 8 -E ""dft-bench|dft-grad-disk"" --timeout 3600 --output-on-failure; Test project /home/raimis/psi4_3.git/build; Start 394: python-vibanalysis; Start 178: fsapt1; Start 182: isapt1; Start 18: cbs-xtpl-func; Start 181: fsapt-allterms; Start 193: fd-freq-energy-large; Start 195: fd-freq-gradient-large; Start 278: opt13; 1/411 Test #195: fd-freq-gradient-large ........... Passed 323.95 sec; Start 25: cc13a; 2/411 Test #18: cbs-xtpl-func .................... Passed 528.74 sec; Start 113: dcft7; 3/411 Test #182: isapt1 ........................... Passed 536.55 sec; Start 205: frac-traverse; 4/411 Test #193: fd-freq-energy-large ............. Passed 593.28 sec; Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 297.32 sec; Start 318: sapt4; 6/411 Test #181: fsapt-allterms ................... Passed 736.98 sec; Start 325: scf-bz2; 7/411 Test #205: frac-traverse .................... Passed 247.88 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 27.30 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 318.32 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 6.14 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 2.45 sec; Start 5: casscf-sa-sp; 12/411 Test #2: adc2 ............................. Passed 46.87 sec; Start 6: ao-casscf-sp; 13/411 Test #394: python-vibanalysis ............... Passed 861.59 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.98 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 10.00 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 8.90 sec; Start 11: cbs-delta-energy; 18/411 Test #325: scf-bz2 .......................... Passed 137.96 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp .....................",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:74,failure,failure,74,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['failure'],['failure']
Availability,```; $ wget https://anaconda.org/psi4/csx4psi/0.0.8/download/linux-64/csx4psi-0.0.8-0.tar.bz2. $ tar -tjvf csx4psi-0.0.8-0.tar.bz2 ; -rw-r--r-- cdsgroup/sherrill 170 2015-09-03 20:23 info/README.md; -rw-r--r-- cdsgroup/sherrill 180 2015-09-03 20:23 info/files; -rw-r--r-- cdsgroup/sherrill 442 2015-09-03 20:23 info/git; -rw-r--r-- cdsgroup/sherrill 193 2015-09-03 20:23 info/index.json; -rw-r--r-- cdsgroup/sherrill 857 2015-09-03 20:23 info/recipe.json; -rw-r--r-- cdsgroup/sherrill 1404 2015-09-03 20:23 info/recipe/build.sh; -rw-r--r-- cdsgroup/sherrill 683 2015-09-03 20:23 info/recipe/meta.yaml; -rwxr-xr-x cdsgroup/sherrill 1319008 2015-09-03 20:23 lib/libiomp5.so; -rw-r--r-- cdsgroup/sherrill 170 2015-09-03 20:23 psi4aux/csx4psi/README.md; -rw-r--r-- cdsgroup/sherrill 1158 2015-09-03 20:23 psi4aux/csx4psi/__init__.py; -rw-r--r-- cdsgroup/sherrill 559469 2015-09-03 20:23 psi4aux/csx4psi/csx1_api.py; -rw-r--r-- cdsgroup/sherrill 3063 2015-09-03 20:23 psi4aux/csx4psi/csx4psi.cc; -rwxr-xr-x cdsgroup/sherrill 1037802 2015-09-03 20:23 psi4aux/csx4psi/csx4psi.so; -rw-r--r-- cdsgroup/sherrill 22479 2015-09-03 20:23 psi4aux/csx4psi/pymodule.py; ```. Interesting.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/229#issuecomment-176961990:52,down,download,52,https://psicode.org,https://github.com/psi4/psi4/issues/229#issuecomment-176961990,1,['down'],['download']
Availability,"```; (base) C:\Users\User\psi4.git\win_build>ctest -C Debug -L dft -E dft-bench --output-on-failure; Test project C:/Users/User/psi4.git/win_build; Start 155: dft-b2plyp; 1/24 Test #155: dft-b2plyp ....................... Passed 37.71 sec; Start 156: dft-grac; 2/24 Test #156: dft-grac ......................... Passed 7.52 sec; Start 157: dft-ghost; 3/24 Test #157: dft-ghost ........................ Passed 23.36 sec; Start 158: dft-grad-meta; 4/24 Test #158: dft-grad-meta .................... Passed 76.39 sec; Start 159: dft-freq; 5/24 Test #159: dft-freq ......................... Passed 83.74 sec; Start 160: dft-grad1; 6/24 Test #160: dft-grad1 ........................ Passed 43.94 sec; Start 161: dft-grad2; 7/24 Test #161: dft-grad2 ........................ Passed 33.06 sec; Start 162: dft-psivar; 8/24 Test #162: dft-psivar ....................... Passed 103.28 sec; Start 163: dft-b3lyp; 9/24 Test #163: dft-b3lyp ........................ Passed 164.98 sec; Start 164: dft1; 10/24 Test #164: dft1 ............................. Passed 414.86 sec; Start 165: dft-vv10; 11/24 Test #165: dft-vv10 ......................... Passed 80.01 sec; Start 166: dft1-alt; 12/24 Test #166: dft1-alt ......................... Passed 191.52 sec; Start 167: dft2; 13/24 Test #167: dft2 ............................. Passed 22.00 sec; Start 168: dft3; 14/24 Test #168: dft3 .............................***Failed 20.54 sec; 	Closed-shell wB97 Energy (PK).....................................PASSED; 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does not match (-75.318545) to 5 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 42, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	Closed-shell wB97 Energy (OUT_OF_CORE): computed value (11.255459) does",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:92,failure,failure,92,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['failure'],['failure']
Availability,"```; ========================================================================================== FAILURES ===========================================================================================; ___________________________________________________________________________________ test_findif_2_0[kw1-9] ____________________________________________________________________________________. kw = {}, pts = 9. @pytest.mark.parametrize(""kw, pts"", [({""ref_gradient"": np.zeros((2, 3))}, 5), ({}, 9)]); def test_findif_2_0(kw, pts):; mol = psi4.geometry(""H\nH 1 2.0\nunits au""); psi4.set_options({""scf__E_CONVERGENCE"": 6}); plan = task_planner(; ""hessian"",; ""MP2/cc-pVDZ"",; mol,; **kw,; dertype=0,; findif_stencil_size=5,; findif_step_size=0.005 / math.sqrt(2 / 1.00782503223),; ); ; displacements = {; ""0: -2"": np.array([[0.0, 0.0, -1.0050], [0.0, 0.0, 1.0050]]),; ""0: 2"": np.array([[0.0, 0.0, -0.9950], [0.0, 0.0, 0.9950]]),; ""0: -1"": np.array([[0.0, 0.0, -1.0025], [0.0, 0.0, 1.0025]]),; ""0: 1"": np.array([[0.0, 0.0, -0.9975], [0.0, 0.0, 0.9975]]),; ""reference"": np.array([[0.0, 0.0, -1.0], [0.0, 0.0, 1.0]]),; # below here for r_proj False; ""1: -1"": np.array([[-0.0025, 0.0, -1.0], [0.0025, 0.0, 1.0]]),; ""1: -2"": np.array([[-0.005, 0.0, -1.0], [0.005, 0.0, 1.0]]),; ""2: -1"": np.array([[0.0, -0.0025, -1.0], [0.0, 0.0025, 1.0]]),; ""2: -2"": np.array([[0.0, -0.005, -1.0], [0.0, 0.005, 1.0]]),; }; ; assert isinstance(plan, FiniteDifferenceComputer); assert len(plan.task_list) == pts; ; for k2, plan2 in plan.task_list.items():; assert isinstance(plan2, AtomicComputer); assert plan2.basis == ""cc-pvdz""; assert plan2.method == ""mp2""; assert plan2.driver == ""energy""; assert np.allclose(plan2.molecule.geometry().np, displacements[k2]); assert plan2.keywords[""SCF__E_CONVERGENCE""] == 1.0e-6; > assert plan2.keywords[""SCF__D_CONVERGENCE""] == 1.0e-11; E assert 1.0000000000000001e-11 == 1e-11. /usr/ports/science/psi4/work/psi4-1.8.1/tests/pytests/test_task_planner.py:479: AssertionError; ----------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3014:96,FAILURE,FAILURES,96,https://psicode.org,https://github.com/psi4/psi4/issues/3014,1,['FAILURE'],['FAILURES']
Availability,"```; >>> ""ijij->"".encode().decode(""latin-1""); 'ijij->'; >>> r""ijij->""; 'ijij->'; >>> ; ```. I would think it is rather the parsing. I tried to step through `get_combined_dims_view` in `einsum.c.src` but it is quite confusing. . At the beginning of the function, the value of `label` is `labels=0x3ffffffcdf8 ""i\377j\377\375\377\061\340""` for the `iijj` case and `labels=0x3ffffffcdf8 ""ij\376\377\375\377\061\340""` for the `ijij` case. Conversely, the value of `label` is 105 and 106 towards the end of the function for the `iijj`` case and 105 and 254 for the ""ijij"" case, the latter being the weird unicode character from the error message. At that point I see:. ```; 2135 if (combineoffset < 0 && new_dims[i] != 0 &&; (gdb) p i; $229 = 1023; (gdb) p label; $230 = 254; (gdb) p iop; $231 = 0; (gdb) p new_dims[i]; $232 = 4296307584; (gdb) n; 1502 return ((PyArrayObject_fields *)arr)->dimensions[idim];; (gdb) n; 2142 return NULL;; ```. which looks odd, and the `NULL` is part of the error message we see:. ```; if (combineoffset < 0 && new_dims[i] != 0 &&; new_dims[i] != PyArray_DIM(op, idim)) {; PyErr_Format(PyExc_ValueError,; ""dimensions in operand %d for collapsing ""; ""index '%c' don't match (%d != %d)"",; iop, label, (int)new_dims[i],; (int)PyArray_DIM(op, idim));; return NULL;; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465#issuecomment-452041570:627,error,error,627,https://psicode.org,https://github.com/psi4/psi4/issues/1465#issuecomment-452041570,2,['error'],['error']
Availability,"```; CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE) (Required is at; least version ""3.6""); Call Stack (most recent call first):; /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake/Modules/FindPythonInterp.cmake:182 (FIND_PACKAGE_HANDLE_STANDARD_ARGS); /usr/share/cmake/pybind11/FindPythonLibsNew.cmake:98 (find_package); /usr/share/cmake/pybind11/pybind11Tools.cmake:50 (find_package); /usr/share/cmake/pybind11/pybind11Common.cmake:188 (include); /usr/share/cmake/pybind11/pybind11Config.cmake:250 (include); CMakeLists.txt:60 (find_package); ```; Looks like the error originates from `psi4/CMakeLists.txt`; ```; find_package(pybind11 2.2.2 CONFIG REQUIRED); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676487705:11,Error,Error,11,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676487705,2,"['Error', 'error']","['Error', 'error']"
Availability,"```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. wfn = energy(""mp2/sto-6g"", return_wfn=True)[1]; new_wfn = wfn.c1_deep_copy(wfn.basisset()); new_wfn.Ca(); ```. ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Wavefunction::Ca: Unable to obtain MO coefficients. !; ! Error occurred in file: !; ! /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libmints/wavefunction.cc on !; ! line: 810 !; ! The most recent 5 function calls were: !; ! !; !----------------------------------------------------------------------------------!; ```. Using `c1_deep_copy` on a non-HF wfn means the orbitals don't copy: that's handled by the constructor. This is causing problems in Francesco's group.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2777:265,Error,Error,265,https://psicode.org,https://github.com/psi4/psi4/issues/2777,2,['Error'],['Error']
Availability,"```; molecule {; units bohr; H; H 1 2.7; }. set scf_type pk. energy('fci/sto-6g'); ```. Above input file crashes with `Fatal Error: CIWavefunction: Iterations did not converge!` and lots of ""NAN"" in the output file.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2243:125,Error,Error,125,https://psicode.org,https://github.com/psi4/psi4/issues/2243,1,['Error'],['Error']
Availability,```; rows_per_bucket = -1622894080; nbuckets = -18256; rows_left = -1312595486; ```. This immediately makes me suspect a type overflow error. Thanks for everything thus far.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1227166848:135,error,error,135,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1227166848,1,['error'],['error']
Availability,"```; sapt4; 2016-02-16 10:46; SAPT incomplete wavefunction is only dimer SCF; SAPT Elst: computed value (-0.0407577) does not match (-0.0407606) to 6 decimal places. An error has occurred Py-side; Traceback:; <class 'p4xcpt.TestComparisonError'>: SAPT Elst: computed value (-0.0407577) does not match (-0.0407606) to 6 decimal places.: File ""<string>"", line 67, in <module>. File ""/Users/stanlen1/gitrepos/psi4/share/python/p4util/util.py"", line 100, in compare_values; raise TestComparisonError(message); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260#issuecomment-184840463:169,error,error,169,https://psicode.org,https://github.com/psi4/psi4/issues/260#issuecomment-184840463,1,['error'],['error']
Availability,"```console; $ cmake --version; cmake version 3.18.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; $ ls /path/to/eigen3/share/eigen3/cmake; Eigen3Config.cmake Eigen3ConfigVersion.cmake Eigen3Targets.cmake UseEigen3.cmake; ```. Here Eigen 3.3.7 is manually installed. ```console; $ git describe --always; v1.5-178-gd725195826a1; $ cmake -G Ninja -B build -S . -D BOOST_ROOT:PATH=/path/to/boost -D Eigen3_DIR:PATH=/path/to/eigen3/share/eigen3/cmake; $ cmake --build build -- external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:690,Error,Error,690,https://psicode.org,https://github.com/psi4/psi4/issues/2606,1,['Error'],['Error']
Availability,"```external/upstream/libint/CMakeLists.txt``` has this line:; ```; find_package(Libint 1.2.0 CONFIG QUIET COMPONENTS ${MAX_AM_ERI}); ```. I have the latest version of libint installed: libint-1.2.1_1 (also see here https://repology.org/project/libint/versions). I changed this line to the latest version:; ```; find_package(Libint 1.2.1 CONFIG QUIET COMPONENTS ${MAX_AM_ERI}); ```; but it fails to find it:; ```; -- Suitable Libint could not be located, Building Libint instead.; ```. libint-1.2.1_1 doesn't provide .pc or .cmake files, so I am not sure how can it even ever be able to find it through a cmake script like this?. It's undesirable to download and rebuild libint when the package is available. Please also note that the latest generation of libint is libint2, which does provide ```libint2.pc``` .",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1589:649,down,download,649,https://psicode.org,https://github.com/psi4/psi4/issues/1589,2,"['avail', 'down']","['available', 'download']"
Availability,"`compute_gradient` after a `energy(""ccsd"")` and `gradient(""scf"")` also throw the wfn.h error, so no worries there. py-side `gradient(""ccsd"")` is what this PR misses catching, as I see it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2200#issuecomment-869809049:87,error,error,87,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869809049,1,['error'],['error']
Availability,"`dft-grad-lr3` test fails with the current master (64aa80aa96983bec51d40732d18f3def5eb9e844):; ```; $ ctest -R dft-grad-lr3 --output-on-failure; Test project /home/raimis/psi4.git/linux_build; Start 158: dft-grad-lr3; 1/1 Test #158: dft-grad-lr3 .....................***Failed 85.00 sec; 	Analytic vs Reference wB97X-D Gradients...........................PASSED; Traceback (most recent call last):; File ""/home/raimis/psi4.git/linux_build/stage/bin/psi4"", line 290, in <module>; exec(content); File ""<string>"", line 74, in <module>; File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/driver.py"", line 680, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/proc.py"", line 2084, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/proc.py"", line 2022, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule()); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/empirical_dispersion.py"", line 195, in compute_energy; verbose=1); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/qcdb/intf_dftd3/runner.py"", line 136, in run_dftd3_from_arrays; jobrec['qcvars']['CURRENT ENERGY'] = copy.deepcopy(jobrec['qcvars']['DISPERSION CORRECTION ENERGY']). KeyError: 'qcvars'; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 0% tests passed, 1 tests failed out of 1. Label Time Summary:; dft = 85.00 sec*proc (1 test); psi = 85.00 sec*proc (1 test); scf = 85.00 sec*proc (1 test). Total Test time (real) = 85.06 sec. The following tests FAILED:; 	158 - dft-grad-lr3 (Failed); Errors while running CTest; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1418:136,failure,failure,136,https://psicode.org,https://github.com/psi4/psi4/issues/1418,2,"['Error', 'failure']","['Errors', 'failure']"
Availability,"`libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. ### Notes; * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:2087,down,downgrade,2087,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['down'],['downgrade']
Availability,"`phi_ao` is passed to `dx_read` as an argument. I'm pretty sure that the description of `phi_ao` is wrong; https://github.com/psi4/psi4/blob/760c5af199b6a8202b081ad18a271ee9886ee66d/psi4/src/psi4/libqt/dx_read.cc#L60. The only place where `dx_read` is used is; https://github.com/psi4/psi4/blob/760c5af199b6a8202b081ad18a271ee9886ee66d/psi4/src/psi4/libscf_solver/hf.cc#L601. The warning is; ```; -Wnonnull; Warn about passing a null pointer for arguments marked as requiring a non-null value by the ""nonnull"" function attribute. -Wnonnull is included in -Wall and -Wformat. It can be disabled with the -Wno-nonnull option.; ```; There is no null pointer issue; the code is merely unsafe since it assumes that the pointers are not null. Adding a check for null pointers and throwing an error in that case should fix this warning.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2783#issuecomment-1321068490:786,error,error,786,https://psicode.org,https://github.com/psi4/psi4/issues/2783#issuecomment-1321068490,1,['error'],['error']
Availability,"`psi4 --version` gives:. ```; (gdb) r; Starting program: /home/ward/tmp/psi4release/build2/bin/psi4 --version; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"". Program received signal SIGSEGV, Segmentation fault.; std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; 51 if (__os.tie() && __os.good()); Missing separate debuginfos, use: debuginfo-install python-libs-2.7.8-9.fc21.x86_64; (gdb) bt; #0 std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; #1 0x000000390e699869 in std::__ostream_insert<char, std::char_traits<char> > (__out=..., __s=__s@entry=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __n=76); at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream_insert.h:82; #2 0x0000000001e6bd18 in operator<< <std::char_traits<char> > (__s=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __out=...) at /usr/include/c++/4.9.2/ostream:535; #3 Write2Buffer<char*> (Input=<synthetic pointer>, this=0x0) at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.h:157; #4 psi::PsiOutStream::Printf (this=0x0, format=format@entry=0x204e9c0 "" "", '-' <repeats 71 times>, ""\n"") at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.cc:82; #5 0x00000000008a79bf in psi::print_version () at /home/ward/tmp/psi4release/build2/src/bin/psi4/version.cc:38; #6 0x00000000008e2d57 in psi::psi_start (argc=argc@entry=2, argv=argv@entry=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi_start.cc:187; #7 0x0000000000780f3c in main (argc=2, argv=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi4.cc:100; ```. Done on Fedora 21 with gcc-4.9.2 using 93a5e8d84afd652e6226. `psi4 --help` works fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88:264,fault,fault,264,https://psicode.org,https://github.com/psi4/psi4/issues/88,1,['fault'],['fault']
Availability,"`svwn_hessian_module` shows 15 failures, now that I check that... Can I just halve the default value? That will make RKS behavior as it was before. UKS will stay change, but I think that's unavoidable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1349591584:31,failure,failures,31,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1349591584,1,['failure'],['failures']
Availability,`test_resp_2` fails in the Linux clang build with an einsum error. (unrelated to this PR),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2402#issuecomment-1010765086:60,error,error,60,https://psicode.org,https://github.com/psi4/psi4/pull/2402#issuecomment-1010765086,1,['error'],['error']
Availability,`v1.3.2` is available for Windows via `conda install psi4 -c raimis`. Please report back if you give it a try. We'll copy it to `-c psi4` (I think) after a few positive reports from the wild.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-494087443:12,avail,available,12,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-494087443,1,['avail'],['available']
Availability,`wfn.name` seems not the most reliable identifier. Investigating.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884#issuecomment-625927796:30,reliab,reliable,30,https://psicode.org,https://github.com/psi4/psi4/pull/1884#issuecomment-625927796,1,['reliab'],['reliable']
Availability,"a.py](https://localhost:8080/#) in to_schema(molrec, dtype, units, np_out, copy); 47 geom = geom * molrec[""input_units_to_au""]; 48 else:; ---> 49 geom = geom * constants.conversion_factor(molrec[""units""], units); 50 ; 51 nat = geom.shape[0] // 3. [/usr/local/lib/python3.7/site-packages/qcelemental/physical_constants/context.py](https://localhost:8080/#) in conversion_factor(self, base_unit, conv_unit); 310 # Add a little magic in case the incoming values have scalars; 311 ; --> 312 from pint import quantity; 313 ; 314 factor = 1.0. [/usr/local/lib/python3.7/site-packages/pint/__init__.py](https://localhost:8080/#) in <module>(); 12 """"""; 13 ; ---> 14 from .context import Context; 15 from .errors import ( # noqa: F401; 16 DefinitionSyntaxError,. [/usr/local/lib/python3.7/site-packages/pint/context.py](https://localhost:8080/#) in <module>(); 13 from collections import ChainMap, defaultdict; 14 ; ---> 15 from .definitions import Definition, UnitDefinition; 16 from .errors import DefinitionSyntaxError; 17 from .util import ParserHelper, SourceIterator, to_units_container. [/usr/local/lib/python3.7/site-packages/pint/definitions.py](https://localhost:8080/#) in <module>(); 11 from collections import namedtuple; 12 ; ---> 13 from .converters import LogarithmicConverter, OffsetConverter, ScaleConverter; 14 from .errors import DefinitionSyntaxError; 15 from .util import ParserHelper, UnitsContainer, _is_dim. [/usr/local/lib/python3.7/site-packages/pint/converters.py](https://localhost:8080/#) in <module>(); 10 ; 11 ; ---> 12 from .compat import HAS_NUMPY, exp, log # noqa: F401; 13 ; 14 . [/usr/local/lib/python3.7/site-packages/pint/compat.py](https://localhost:8080/#) in <module>(); 161 # xarray (DataArray, Dataset, Variable); 162 try:; --> 163 from xarray import DataArray, Dataset, Variable; 164 ; 165 upcast_types += [DataArray, Dataset, Variable]. [/usr/local/lib/python3.7/dist-packages/xarray/__init__.py](https://localhost:8080/#) in <module>(); 1 import pkg_resources; 2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510:4534,error,errors,4534,https://psicode.org,https://github.com/psi4/psi4/issues/2510,1,['error'],['errors']
Availability,"a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward Psi4 using a upstream Libint2 release in common with other open-source QC programs:; * step 2 — 20 Nov 2020 — #1721; * step 3 — 11 Mar 2022 — #2388; * post 3 — 16 Mar 2022 — #2474, #2482, #2484; * step C — 21 March 2022 — #2489; * step C — 21 March 2022 — #2483; * step B — 23 March 2022 — #2413; * post B — 23 March 2022 — #2494 ; * step C — 25 March 2022 — #2386; * step C — 25 March 2022 — #2496; * step C — 30 March 2022 — #2504; * step C — 31 March 2022 — #2517; * step C — 31 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5963,down,download,5963,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"ab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 2 entry O line 190 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; atoms 3-4 entry H line 20 file /Users/loriab/linux/psihub/master/psi4/lib/basis/cc-pvdz.gbs; ```; - [x] 7. soon after all the new basis stuff went in Nov 2014, Jet added another layer in qcdb pyconstruct to make CABS basis sets work. unfortunately, this broke one of the key principles/advantages of the new scheme. not that i remember exactly what that principle was, though it was probably that the basis could be re-constituted by `basis mybas {...}` mybas name; - [x] 8. fix the 5-zeta and 6-zeta orbital defaulting to quad-zeta fitting as in noted in #144 ; - [x] 9. Switch out Pople basis fitting bases to appropriate-zeta def2-*-ri/jkfit, rather than Dunning ri/jkfit, as former has fewer element holes. (as noted in #144); - [x] 10. Create (maybe?) another layer of defaulting so that aug-cc-pvdz orbital uses aug-cc-pvdz-ri/jkfit when available (as at present), then def2-tzvp-ri/jkfit (not at present), then the ultimate default def2-qzvpp-ri/jkfit (as at present). This way don't get high AM cost on supposedly cheap orbital basis sets. (as noted in #144); - [x] 11. drop DUAL and pick up perhaps others in http://psicode.org/psi4manual/master/basissets_byfamily.html; - [x] 12. thoroughly update basisset.rst, especially examples; - [x] 13. reexamine the PSIPATH basis load ordering and make sure that there's a way to install new basissets in the conda package w/o overwriting library files; - [x] 14. the python object name (mybas in above) is the key handle by which a user-def basis can be reapplied to new molecules, but this can be anonymous (if mybas omitted definitely; and maybe if defined conventionally through ""set basis"" if all turned into functions). would be handy to have a name to print in the output file (some sort of aug-cc-pvdz+cc-pvdz+6-31g) as well as the handle by which it's retrievable. That's all I can think of for now",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43#issuecomment-189541354:2786,avail,available,2786,https://psicode.org,https://github.com/psi4/psi4/issues/43#issuecomment-189541354,1,['avail'],['available']
Availability,"ack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22136,error,error,22136,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27645,error,error,27645,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"actually i cant even produce the input file for psi4 using FFParam-GUI i have this error:. `WARNING:root:Support for bonded parameter scan with Psi4 is experimental at best. Proceed with caution.; INFO:root:Using default names for the outputs.; [09:59:35] Molecule does not have explicit Hs. Consider calling AddHs(); ERROR:root:Uncaught Exception; Traceback (most recent call last):; File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/FFPMainWindow.py"", line 1297, in execute_56; file2disp = self.chk.CreateQM(""dihe"",filein=coor,work_dir=self.qm_dir,recenter=False,qmeng=qmengi,qmtop=qmtop,char=chari,mult=multi,dihatomnam=dihl,dihrange=dihr); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/Windowsaction.py"", line 165, in CreateQM; fileout=piwclass.run('bondedscan',outpath=work_dir,bonded=[bonded],coor=self.coords,fixed=False); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/Psi4InputWriter.py"", line 307, in run; writtenfile=func(data,Psi4header); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/Psi4InputWriter.py"", line 564, in writebondedscan; rdcrds=ffrd.MolTransform(rdmol.mol,self.resn,self.reschrg,coor,self.atomnames,self.atomnrmap,self.topo['bondnames'],\; File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/ffp_rdkit.py"", line 182, in __init__; self.__transform(); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/ffp_rdkit.py"", line 288, in __transform; newcoor=self.__transformcore(mol,self.coor,self.changetype,self.scanatomnr,values[val]); File ""/home/ibrahim/miniconda3/envs/ffpenv/lib/python3.8/site-packages/ffparam-1.0.0-py3.8.egg/ffparam/script_core/ffp_rdkit.py"", line 259, in __transformcore; funcs[cha",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2599#issuecomment-1152583288:83,error,error,83,https://psicode.org,https://github.com/psi4/psi4/issues/2599#issuecomment-1152583288,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,added some timings and a gradient error to the post.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-495584058:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-495584058,1,['error'],['error']
Availability,"adient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to quantum chemistry, I do not really know how to; > interpret this error.; >; > Any pointers are appreciated.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1995>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SWSSKR4VM2JNJYNU3SC2AEXANCNFSM4QNFCNKQ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:4319,error,error,4319,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879,2,['error'],['error']
Availability,"aediis error for windows + test_psi4_sapt may be intermittent since not seen in first commit. there's no reason incfock should be on in that test, right? in that case, no problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2550#issuecomment-1104645481:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/pull/2550#issuecomment-1104645481,1,['error'],['error']
Availability,"after pulling a few commits to the current version I encounter the following error:. ```; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_mints.cc.o; /usr/qc/psi4/psi4/src/export_mints.cc: In function ‘void export_mints(pybind11::module&)’:; /usr/qc/psi4/psi4/src/export_mints.cc:1029:79: error: ‘buffer_protocol’ is not a member of ‘py’; py::class_<detci::CIvect, std::shared_ptr<detci::CIvect> >(m, ""CIVector"", py::buffer_protocol(), ""docstring""); ```. guess it has to do with https://github.com/psi4/psi4/pull/557 which is way over my head.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577:77,error,error,77,https://psicode.org,https://github.com/psi4/psi4/issues/577,2,['error'],['error']
Availability,"age(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, gradients will be caught and halted, but LRC DFT, ESP, and perhaps other types not tested and identified will give *wrong* answers. Consider this your warning."")`. * In `psi4/driver/driver.py`, apply patch below. ```; --- a/psi4/driver/driver.py; +++ b/psi4/driver/driver.py; @@ -82,6 +82,9 @@ def _find_derivative_type(ptype, method_name, user_dertype):; raise ValidationError(""_find_derivative_type: user_dertype should only be None or int!""); dertype = user_dertype; ; + if (core.get_global_option('INTEGRAL_PACKAGE') == 'ERD') and (dertype != 0):; + raise ValidationError(""INTEGRAL_PACKAGE ERD does not play nicely with gradients, so stopping.""); +; # Summary validation; if (dertype == 2) and (method_name in procedures['hessian']):; pass; ```. * Running this yield the following list (30% failure rate).; ```; The following tests FAILED:; 	 12 - cbs-xtpl-freq (Failed); 	 13 - cbs-xtpl-gradient (Failed); 	 14 - cbs-xtpl-opt (Failed); 	 16 - cbs-xtpl-wrapper (Failed); 	 17 - cc1 (Failed); 	 21 - cc13 (Failed); 	 22 - cc13a (Failed); 	 23 - cc14 (Failed); 	 30 - cc21 (Failed); 	 32 - cc23 (Failed); 	 33 - cc24 (Failed); 	 34 - cc25 (Failed); 	 35 - cc26 (Failed); 	 36 - cc27 (Failed); 	 39 - cc3 (Failed); 	 78 - cepa0-grad1 (Failed); 	 79 - cepa0-grad2 (Failed); 	 95 - dcft-grad1 (Failed); 	 96 - dcft-grad2 (Failed); 	 97 - dcft-grad3 (Failed); 	 98 - dcft-grad4 (Failed); 	103 - dcft5 (Failed); 	114 - dfccd-grad1 (Failed); 	117 - dfccsd-grad1 (Failed); 	122 - dfmp2-3 (Failed); 	124 - dfmp2-grad1 (Failed); 	125 - dfmp2-grad2 (Failed); 	126 - dfmp2-grad3 (Failed); 	127 - dfmp2-grad4 (Failed); 	132 - dfomp2-grad1 (Failed); 	133 - dfomp2-grad2 (Failed); 	136 - dfomp3-grad1 (Failed); 	137 - dfomp3-grad2 (Failed); 	140 - dfomp2p5-grad1 (Failed); 	141 - dfomp2p5-gr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-276884648:2003,failure,failure,2003,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-276884648,1,['failure'],['failure']
Availability,"age\lib\deriv.lib D:\a\1\b\build\stage\lib\int.lib C:\tools\miniconda3\Library\lib\mkl_rt.lib C:\tools\miniconda3\Library\lib\libiomp5md.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\core.cp36-win_amd64.pyd.manifest"" failed (exit code 1120) with the following output:; Creating library src\core.lib and object src\core.exp; cc.lib(lmp2.cc.obj) : error LNK2019: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ) referenced in function ""public: virtual void * __cdecl psi::MaxIterationsExceeded<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$MaxIterationsExceeded@H@psi@@UEAAPEAXI@Z); dcft.lib(dcft_compute_RHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_compute_UHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_qc.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); src\core.cp36-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix `psi::MaxIterationsExceeded` implementation; - [x] Fix `psi::ConvergenceError` implementation; - [x] Clean up includes. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1419:6510,error,error,6510,https://psicode.org,https://github.com/psi4/psi4/pull/1419,3,['error'],['error']
Availability,"ah, CI error is Windows-2016 dev-env brown-out. We know psi+Azure can work on Windows-2022 from #2415 but I don't know if that newer runtime libs and clang has adverse effects for the conda package. not an issue for this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2440#issuecomment-1039497391:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/pull/2440#issuecomment-1039497391,1,['error'],['error']
Availability,"alize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3007,failure,failure,3007,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"alizerEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi9LocalizerENS3_13BoysLocalizerEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi12WavefunctionENS3_3scf3RHFEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi3scf2HFENS4_3RHFEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi12WavefunctionENS3_3scf2HFEE7executeEPv in export_mints.cc.o; __ZN5boost6python7objects22dynamic_cast_generatorIN3psi14BasisSetParserENS3_24Gaussian94BasisSetParserEE7executeEPv in export_mints.cc.o; ...; ""___gxx_personality_v0"", referenced from:; __Z11export_psiov in export_psio.cc.o; __ZN5boost6python3api9slice_nilD1Ev in export_psio.cc.o; __ZN3psi11PSIOManager9print_outEv in export_psio.cc.o; __ZN5boost6python6class_IN3psi11PSIOManagerENS_10shared_ptrIS3_EENS0_6detail13not_specifiedES7_E8def_implIS3_MS3_FNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEvENS6_10def_helperIA10_cS7_S7_S7_EEEEvPT_PKcT0_RKT1_z in export_psio.cc.o; __ZN5boost6python6detail12caller_arityILj1EE4implIMN3psi11PSIOManagerEFNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEvENS0_21default_call_policiesENS_3mpl7vector2ISD_RS6_EEE9signatureEv in export_psio.cc.o; __ZN5boost6python6detail12caller_arityILj1EE4implIMN3psi11PSIOManagerEFNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEvENS0_21default_call_policiesENS_3mpl7vector2ISD_RS6_EEEclEP7_objectSN_ in export_psio.cc.o; __ZN5boost6python6class_IN3psi11PSIOManagerENS_10shared_ptrIS3_EENS0_6detail13not_specifiedES7_E8def_implIS3_MS3_FvibENS6_10def_helperIA10_cS7_S7_S7_EEEEvPT_PKcT0_RKT1_z in export_psio.cc.o; ...; ld: symbol(s) not found for architecture x86_64; clang-3.5: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:114717,error,error,114717,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,4,"['Error', 'error']","['Error', 'error']"
Availability,"all kinds of weirdness going on, let's see if this checks all of the boxes. . `test_psi4_scfproperty` was failing because the `properties` list was being overwritten, because `run_qcschema` was looking for properties in `model`. normally the calculation would have failed, but `_can_do_properties` was acting as a default list of properties (since it found none) and the test was only looking for a couple of things that happened to be in that list. . to fix it, `run_qcschema` now correctly checks the kwargs for the property list. `_can_do_properties` was renamed to `_default_properties`, and the function no longer filters the properties through it (if the property is not available, psi4 should fail gracefully). once that was fixed, the ""GRID_FIELD"" and ""GRID_ESP"" properties needed to be removed from that test since they failed (could not find some `grid.dat`, I'll let someone else chime in on that one). . also, added an additional test to hit the qc and wfn response vars (floats and arrays), both present in the `extras` return. I think this is the only test which checks the `extras` dictionary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875:677,avail,available,677,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-818163875,1,['avail'],['available']
Availability,"als are doubly occupied.; (""docc"" = ""doubly occupied""). Also, if you're doing a RAS, you need to tell the code the max number of; holes in RAS I, and the max number of particles in RAS III. I forget the; keywords off the top of my head. Additionally, if it's high-spin open-shell, at least to keep the SCF; straight (can't remember if DETCI needs this or not), you probably should; be specifying the symmetries of the singly occupied orbitals with the SOCC; keyword. There may or may not be some additional problems. On Tue, Aug 13, 2019 at 6:42 AM Susi Lehtola <notifications@github.com>; wrote:. > The following input fails with a segfault; >; > molecule {; > 0 5; > Fe; > }; >; > set basis pcseg-0; > set reference rohf; > set scf_type pk; > set mcscf_type conv; > # Full space is [ 9, 2, 2, 2, 0, 3, 3, 3]; >; > # Ar core; > set restricted_docc [3, 0, 0, 0, 0, 2, 2, 2]; > # spd active space; > set ras1 [0, 0, 0, 0, 0, 0, 0, 0]; > set ras2 [3, 1, 1, 1, 0, 1, 1, 1]; > set ras3 [3, 1, 1, 1, 0, 0, 0, 0]; > cas_e, cas_wfn = energy('rasscf', return_wfn=True); >; > # Dynamical correlation from Ar core; > set restricted_docc [0, 0, 0, 0, 0, 0, 0, 0]; > set ras1 [3, 0, 0, 0, 0, 2, 2, 2]; > ras_e, ras_wfn = energy('detci', ref_wfn=cas_wfn, return_wfn=True); >; > There's something wrong in the input or the code, since there's an error; > message in the log file; >; > ==> Setting up CI strings <==; >; > There are 2730 alpha and 105 beta strings; > (subgr_lex_addr): Impossible walk!; > The CI space requires 18211 (1.82E+04) determinants and 44 blocks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1693?email_source=notifications&email_token=AAXVA5TD2EJDK5M4KQ6Q5TTQEKFYNA5CNFSM4ILJOWVKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HE5Q2AQ>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAXVA5QEYCCJVE5424DTXB3QEKFYNANCNFSM4ILJOWVA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1693#issuecomment-520830260:1454,error,error,1454,https://psicode.org,https://github.com/psi4/psi4/issues/1693#issuecomment-520830260,1,['error'],['error']
Availability,"als."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; set_cholesky_from('CC_TYPE'); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6909,Error,Error,6909,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,"['Error', 'error']","['Error', 'error']"
Availability,"an ERIs cause the Windows build to hang longer than the 6h Azure allows, so the W package is hessin-ints-less for TEI (I kept the onebody 2der). This isn't too debilitating since only HF and SVWN have analytic hessians anyways, so when an incapable L2 is detected (imagine that -- we can ask L2 what it can do!), it falls back to FD. That would be easy enough except the tests check too tightly for 3-pt FD to match analytical refs. So I've added a `d2ints` label to ctest and pytest to allow not running. This should probably convert to a skipif someday. Most of the tests I've checked individually and they would pass if findif points=5.; - [x] You notice a ""new"" boost-cpp dependency. Compiling against the header-only L2 C++11 interface (as psi4 does) requires a select few boost headers. In building the L2 package, one can either ask L2 to copy those few files in to `include/libint2/boost/` (that is, vendor boost) or not, effectively passing the problem along to the consumer (psi). In my own conda packages for L2, I did the former, so psi didn't need any boost. For the c-f L2 packages, I figured it was better practice to not vendor, hence the ""new"" dep. It's header-only, not boost::python or any of the boost compiled libs, so not too much trouble, I think. ## Questions; Can look at the libmints files to form an opinion on these.; - [x] `libint2::initialize()` was called three times, but `libint2::finalize()` only once. I added two more, but should I have?; - [x] Also, since we need to set the ordering, should the init be centralized in core.cc, or is it fine as is?; - [ ] technically, ordering could be set at runtime. that seemed hard to reliably prevent mixing of scratch files so I stuck with the restricted build-time case. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2861:3730,reliab,reliably,3730,https://psicode.org,https://github.com/psi4/psi4/pull/2861,1,['reliab'],['reliably']
Availability,"an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure. ## Questions; - [x] Is `libciomr` a good place for the new wrappers to live in? The one they are replacing is there, so it seemed like as good of a place as any. ## Checklist; - [x] No new features; - [x] 503/503 ctests are passing. ## St",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:2092,failure,failure,2092,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES'",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5404,avail,available,5404,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"ance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `set_module_options`; - [x] added ""maxeco"" conda env files to devtools/ for each platform for developers/users who prefer those to psi4-dev conda package. they were generated from the ecosystem GHA but not autoupdated -- that may happen in a future GHA from master; - [x] added passing `CMAKE_OSX_DEPLOYMENT_TARGET` and `CMAKE_OSX_SYSROOT` cmakevars to internal builds. this is how the macOS SDK gets passed through, apparently, for C/C++. it happens through `CMAKE_Fortran_FLAGS` for Fortran. proven necessary for v2rdm_casscf, so I rolled it out to all the compiled externals.; - [x] for ambit, added Python and pb11 cmakevars that are proper for the new de-boosted and new-python-searched version. left old (capital PYTHON) for now. ## Questions; - [ ] PR is mostly CI, so non-user-facing, and testing supplements, so non-user-changing. But it requires cutting-edge pytest 7 (released Dec 2021) available from conda c-f and pypi, not from conda defaults yet. ok to demand of users? most aren't running pytests I would guess.; - [ ] In documenting psi4 compare functions, have to autodoc qcel compare fn, and that shows up a circular import in forward declaration of types (bet you didn't think that would be a sentence applied to Python 5 years ago) that produces a Sphinx warning. I've figured out how to edit qcel to avoid this, but until that makes its way into a release, we may have to turn off warnings-as-errors in psi4 docs build. ok?. close #1708. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge !SQUASH!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:6149,avail,available,6149,https://psicode.org,https://github.com/psi4/psi4/pull/2454,2,"['avail', 'error']","['available', 'errors']"
Availability,"angelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).; (doi: 10.1021/acs.jctc.7b00174). Additional Contributions by; P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,; A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz. -----------------------------------------------------------------------. Psi4 started on: Monday, 29 April 2019 07:36PM. Process ID: 6146; Host: molmod00.ugent.be; PSIDATADIR: /home/toon/miniconda3/envs/p4dev/share/psi4; Memory: 500.0 MiB; Threads: 1; ; ==> Input File <==. --------------------------------------------------------------------------; molecule {; H; }. set {; scf_type pk; basis ano-rcc; relativistic x2c; reference uhf; }. energy('hf'); --------------------------------------------------------------------------. *** tstart() called on molmod00.ugent.be; *** at Mon Apr 29 19:36:44 2019. => Loading Basis Set <=. Name: ANO-RCC; Role: ORBITAL; Keyword: BASIS; atoms 1 entry H line 16 file /home/toon/Downloads/jobs/basis/ano-rcc.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: d2h; Geometry (in Angstrom), charge = 0, multiplicity = 2:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; H 0.000000000000 0.000000000000 0.000000000000 1.007825032230. Running in d2h symmetry. Rotational constants: A = ************ B = ************ C = ************ [cm^-1]; Rotational constants: A = ************ B = ************ C = ************ [MHz]; Nuclear repulsion = 0.000000000000000. Charge = 0; Multiplicity = 2; Electrons = 1; Nalpha = 1; Nbeta = 0. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:2352,Down,Downloads,2352,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['Down'],['Downloads']
Availability,"angling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:135: RuntimeError; ------------------------------------------------- Captured stdout call -------------------------------------------------. Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. =============================================== short test summary info ================================================; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:99: Psi4 not detecting MRCC. Add `dmrcc` to envvar PSIPATH or PATH; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:633: Psi4 not compiled with erd. Rebuild with -DENABLE_erd; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:686: Psi4 not detecting CFOUR. Add `xcfour` to envvar PSIPATH or PATH; SKIPPED [1] lib/python3.6/site-packages/psi4/tests/test_addons.py:773: Psi4 not detecting plugin gpu_dfcc. Build plugin if necessary and add to envvar PYTHONPATH;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:20491,avail,available,20491,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"angling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; dftd3_driver(jobrec); except Exception as err:; jobrec['success'] = False; jobrec['error'] += repr(err); > raise RuntimeError(err) from err; E RuntimeError: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:135: RuntimeError; ------------------------------------------------- Captured stdout call -------------------------------------------------; -D correction from Py-side. Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ____________________________________________________ test_grimme_3c ____________________________________________________. molrec = {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}; name_hint = 'pbeh3c', level_hint = 'd3bj', param_tweaks = {'a1': 0.486, 'a2': 4.5, 's6': 1.0, 's8': 0.0}; ptype = 'energy'; dashcoeff_supplement = defaultdict(<function <lambda> at 0x7f5e8db768c8>, {'d2': defaultdict(<class 'dict'>, {'definitions': {'opbe-d2': {'ty...0093}, 'citation': ' M. K. Kesharwani, A. Karton, J.M. L. Martin, J. Chem. Theory Comput. 12, 444-454, 2016\n'}}})}); verbose = 1. def run_dftd3_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:10947,avail,available,10947,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"aniel Smith; > Sent from my iPhone.; >; > > On Nov 30, 2016, at 23:06, nmayhall <notifications@github.com> wrote:; > >; > > After a recent git pull, psi4 failed to compile. It seems that the error; > was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi; > so all Python Exceptions raise to stdout and psi out"". If I revert to the; > commit just before this I'm able to compile.; > >; > > If it helps, I'm running Ubuntu, with gnu compilers.; > >; > > Here's the error message:; > >; > > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In; > function ‘bool py_psi_set_local_option_array(const string&, const; > string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a; > member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool; > py_psi_set_global_option_array(const string&, pybind11::list,; > psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13:; > error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])); > { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374:; > recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for; > unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for; > target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; > CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074858:1325,error,error,1325,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074858,1,['error'],['error']
Availability,"anssen, E. F. Valeev, M. L. Leininger,; J. F. Gonthier, R. M. Richard, H. R. McAlexander, M. Saitow, X. Wang,; P. Verma, M. H. Lechner, and A. Jiang. Previous Authors, Complete List of Code Contributors,; and Citations for Specific Modules; https://github.com/psi4/psi4/blob/master/codemeta.json; https://github.com/psi4/psi4/graphs/contributors; http://psicode.org/psi4manual/master/introduction.html#citing-psifour. -----------------------------------------------------------------------. Psi4 started on: Friday, 22 July 2022 01:16PM. Process ID: 7409; Host: [REMOVED]; PSIDATADIR: [REMOVED]; Memory: 500.0 MiB; Threads: 14; ; ==> Input File <==. --------------------------------------------------------------------------; print_out('\nSETUP_PHASE\n'); set_num_threads(14); set num_frozen_docc 12; set {; dft_vv10_b 0.06022547162926983; dft_vv10_c 0.7450476605857299; }; set {; basis def2-tzvppd; guess sad; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; }; set {; wcombine False; }; molecule mol {; 0 1; C -0.260781259973 -0.714012941782 1.022641061033; C 0.448798235138 -0.584866555587 1.116392879147; C 0.671191593804 0.158609920222 1.104026912627; C 0.177969561551 0.681404978559 1.093307893756; C -0.560580808895 0.542719215332 1.056079456761; C -0.776583606603 -0.133446136243 1.103859872549; H -0.442720873003 -1.244238976392 0.982141695030; H 0.874512929539 -0.960390442589 1.119149924166; H 1.217460053606 0.336381670040 1.046181387539; H 0.335297687566 1.281777775821 0.982193856028; H -0.948519039798 0.925731991759 1.117846063269; H -1.420111450991 -0.227880344246 1.099752848840; C -0.431336419082 -0.578608087844 -1.006105897774; C -0.616450380987 0.164556718463 -1.058443190817; C -0.158086394624 0.730699386222 -0.889727187104; C 0.484942144607 0.574229834356 -0.649010141458; C 0.688355917017 -0.142302467208 -0.581381981865; C 0.242793965654 -0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:4065,robust,robust,4065,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['robust'],['robust']
Availability,"anual) on how to do that calculation. I was able to obtain CASSCF energies and wavefunctions, and was going to just use the CASSCF wavefunction as the reference for MRCI calculation, but had little success in doing so. The followings are my code (python), trying to optimize the energy for the C state of the C2 molecule (which has two main configurations near its equilibrium bond length). The paper included above deals with the X, B, and B' state of C2, but those are not the states that I want. (I want the singlet C state). ## geometry; c2=psi4.geometry(""""""; 0 1; c ; c 1 1.25; symmetry d2h; """"""); ##. ## use the C-state main electron configuration as the reference for CASSCF; psi4.set_options({; 'basis': 'cc-pVdz',; 'reference': 'rohf',; 'docc': [2, 0, 0, 0, 0, 1, 0, 1],; 'socc': [0, 0, 0, 0, 0, 1, 1, 0],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'mcscf_r_convergence': 5.e-6; }). psi4.set_module_options('detci',{; 'num_roots': 1,; 'calc_s_squared': True; }). casscf_energy, casscf_wfn = psi4.energy('casscf', return_wfn=True). #the code works up to this point. ## my way of feeding the casscf_wfn for another round of CI, but it did not work at all; psi4.set_options({; 'wfn': 'detci',; 'guess': 'gwh',; 'basis': 'cc-pVDZ',; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'e_convergence': 10,; 'd_convergence': 10; }). thisenergy = psi4.energy('detci',ref_wfn=casscf_wfn). When I did the second round of CI, psi4 crashed. It got stuck at the ""Starting CI iterations"" part, with the error message ""Segmentation fault: 11"". I am quite new to Psi4, but hopefully I am not talking complete non-sense here. Also, while the CASSCF bit worked, the CASSCF energy is much higher than I expected (by ~0.2 hartree). The C-state minimum lies above the 3P+3P limit, instead ~2-3 eV below it. So, it would also be helpful if someone could teach me the best way to carry out the CASSCF calculation on the C state. Thanks,. JJ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907:1918,error,error,1918,https://psicode.org,https://github.com/psi4/psi4/issues/1907,2,"['error', 'fault']","['error', 'fault']"
Availability,"any float or array var set ?|; | | | variable |–|y|y| return float or array var value |; | | | set_variable |–|y|y| set float/Matrix/ndarray var value |; | | | del_variable |–|y|y| unset float or array var |; | | | variables |–|y|y| return dict of all float or array vars |; | | clean_variables | clean_variables |–|–|y| unset all float or array vars |. ### Original Proposal (static). | Now `Wavefunction` | Now `psi4.core` | Proposed Both | doc |; |-----|----|----|---|; | | has_variable | has_variable | is float var set ? |; | get_variable | get_variable | variable | return float var value |; | set_variable | set_variable | set_variable | set float var value |; | | | del_variable | unset float var |; | |; | variables | get_variables | variables | return dict of float vars |; | | clean_variables | clean_variables | unset all float vars |; | |; | | | has_array_variable | is array var set ? |; | get_array | get_array_variable | array_variable | return array var value |; | set_array | set_array_variable | set_array_variable | set array var value |; | | | del_array_variable | unset array var |; | |; | arrays | get_array_variables | array_variables | return dict of array vars |; | | | clean_array_variables | unset all array vars |. ### Questions. - [x] No, nothing will break immediately. Use of old syntax will yield runtime `FutureWarning`s if called from Python or compile-time `PSI_DEPRECATED` warnings if called from C++. Old syntax will stop working in Psi4 v1.4. - [x] Note that QCDB (common driver) and QCSchema (I think) merge float vars and array vars into single ~dict. Do we want to consider single access / multi storage in the C++ classes so number of accessors is halved? **EDIT** Answer: yes (see table above), going with multi storage C-side, multi access C-side, unified access Py-side. - Any other changes to suggested syntax. - Whole point of posting this as a PEP instead of leaving it on core-dev is so users/downstream/interested parties can weigh in. Please do so.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1375:3593,down,downstream,3593,https://psicode.org,https://github.com/psi4/psi4/issues/1375,1,['down'],['downstream']
Availability,"ariables:. ```; echo $CFLAGS; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pip",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1186,echo,echo,1186,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['echo'],['echo']
Availability,"as.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; blas.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapk:; lapk.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; lapk.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapk.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapk.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapack:; lapack.INTERFACE_COMPILE_DEFINITIONS = ""USING_LAPACK_MKL""; lapack.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapack.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapack.INTERFACE_LINK_LIBRARIES = ""lapk;blas;tgt::MathOpenMP"". -- Found LAPACK MKL: /opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so;...; ```. If I try to build, it eventually bails out with:; ```; Scanning dependencies of target psi4-core; [ 78%] Creating directories for 'psi4-core'; [ 81%] No download step for 'psi4-core'; [ 84%] No update step for 'psi4-core'; [ 87%] No patch step for 'psi4-core'; [ 90%] Performing configure step for 'psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041:2220,down,download,2220,https://psicode.org,https://github.com/psi4/psi4/issues/1041,1,['down'],['download']
Availability,"as.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8825,error,error,8825,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246:3491,toler,tolerant,3491,https://psicode.org,https://github.com/psi4/psi4/pull/246,2,"['error', 'toler']","['error', 'tolerant']"
Availability,"at one point, the plan was as follows:. Ok, looks like psi4 regularly goes through Ar, Dunning basis sets regularly go through Kr, and def2 through Rn. None of the 6-31g(*_) even make it to Ar. Looks like 3-21g covers the teaching range (through Xe). Def2-SV( P) covers through Rn, and at a quick glance, is 6-31g_-like is size. Since 3-21g is the default basis-guess is psi4 now, I propose that sto-3g, 3-21g, and all def2 basis sets be run out as far as emsl will take them insofar as plausible fitting basis sets can also be supplied. That will cover teaching elements and include a proper double- and triple-zeta for the adventurous research user, while ensuring that if basis set unavailability errors are thrown, it will be because the orbital basis is missing (which users may expect) as opposed to fitting bases missing (which is unfamiliar).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/44#issuecomment-37577193:700,error,errors,700,https://psicode.org,https://github.com/psi4/psi4/issues/44#issuecomment-37577193,1,['error'],['errors']
Availability,"at. But I have noticed that conda adds some questionable compiler flags to the following environmental variables:. ```; echo $CFLAGS; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1085,echo,echo,1085,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['echo'],['echo']
Availability,"ation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(bo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391:1772,error,error,1772,https://psicode.org,https://github.com/psi4/psi4/issues/391,1,['error'],['error']
Availability,"ation choice that I haven't identified. Anyway, that's why those are separate entries (away from qcng) in `standard_suite_ref_local.py`; * In filling out the capabilities tables for Hessians, I tried to collect CD Hessians for HF and SVWN by FD of energies. They failed the per-element CD result ~= CONV result check. Not surprising since CD thresh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is untuned for dertype or E_/D_/R_CONVERGENCE.; * refuted first two thirds of a prominent footnote: `DFT gradients only implemented for SCF type DF. LRC-DFT gradients not implemented yet. DH-DFT gradients not implemented.`; - [x] upgraded stdsuite runner to catch up with qcdb and qcengine last year by (1) implementing per-dertype and abs/rel comparison checks (nothing is actually loosened) and (2) dropping a dict summary of each test to a record file.; - [x] arranged for available `td-{dft}` calls to show up in the energy table, https://psicode.org/psi4manual/master/energy.html; - [x] fixed `energy(""psimrcc_scf"")` to use regular SCF as ref for PSIMRCC and added a test; - [x] rehabilitated `energy(""qchf"")` (which never had its initialism expanded in the whole of the codebase, btw) so it runs. added a test. it probably ought to be better integrated with regular SCF module. Regular SCF has a qchf option that is unused.; - [x] adjusted some qcvars in FNOCC to collect more components from cepa-like methods and to collect different perturbative triples for qcisd.; - [x] collected qcvars correctly in DFOCC for CCD and QCHF. (It was harvesting the CCD method that tipped me into the rabbit-hole that became this PR.). - [x] TODO `pytest -m quick` is still friendly to run (CI finished in reasonable time), but the additions to stdsuite have make ordinary full pytests expensive. I need to manipulate default marks so folks don't inadvertently start hours of tests. `pytest -v ../tests/pytests/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:11585,avail,available,11585,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"axis_representation (probably should double-check this with a spectroscopy book); - Optimize instantiation (really, update_geometry) of large systems by a couple orders of magnitude (now ~1 min for 6000 atoms, w/symmetry); - Hook up Trent Parker's linear-scaling BFS algorithm to qcdb.Molecule or through just np arrays. Has ""seed"" argument so you can forcibly split intramolecularly or close-bound intermol.; - Selected steps (for performance) are now in numpy, as a result, `geometry(np_out=True)` and `xyz(np_out=True)` are avail to skip the cast-back-to-list step. Also, `to_arrays` returns geom, mass, elez, etc. as numpy arrays, rather than needing to iterate over natom.; - `psi4.core.Molecule`; - add rotational_symmetry_number; - export rotor_type; - faster BFS algorithm hooked up to psi4.Mol, too. Depending on Mol type, returns numpy split arrays, single large Mol with atoms rearranged and fragmentation embedded, and/or list of indiv Mols, one for each fragment. Radically pare down auto_fragments/old BFS code.; - `units` no longer exported as a property. has getter/setter, and the getter returns strings, not `Molecule::GeometryUnits` objects.; - _Both_ psi4.core.Molecule && qcdb.Molecule; - Enhanced `add_atom` to take label (in add'n to symbol) and mass number, so is a full fledged CoordEntry entry point; - Add `mass_number` storage and accessor. In Psi, this is just a pass-through – nothing done with it. Stores isotope mass number if mass corresponds to valid nuclide, -1 otherwise or unknown.; - Fragmentation member data public access. Rename fragments --> get_fragments; similar for fragment_types, fragment_charges, fragment_multiplicities. Only fisapt code was using this. For setters, added `set_fragmentation_pattern` that sets them all at once.; - Added `input_units_to_au` getter/setter; checks physical reasonableness.; - Sets input_units_to_au whenever set_units called, rather than as extra step.; - Finally add a `com_fixed` fn to mirror `orientation_fixed`. In q",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:2847,down,down,2847,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['down'],['down']
Availability,"b shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7368,error,error,7368,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"b(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8650,error,error,8650,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"b(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35654,error,error,35654,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"b/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other computers. 6. ~Once libint2 is finished building and psi4 starts, psi4 will error with `error: 'LIBINT2_MAX_AM_default1' was not declared in this scope`. The fix is the same as [Andy's (5)](https://github.com/psi4/psi4/pull/1721#issuecomment-537945417), editing `objdir/stage/include/libint2/libint2_params.h`. Fix that up and resume compiling psi4.~. 7. ~If you fiddle with the external/upstream/libint2/CM file and the generator starts rebuilding, you're toast. `rm -rf objdir/external/upstream/libint2` and `make` again from objdir to restart. Details: The way EFV does the AM defaulting is not a way CMake wants to act. I'm still working on a fix. You'll see ""exponent has no digits"" errors. In any case, if the generator has to run again (which is probably correct -- it's no",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:2003,down,down,2003,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,1,['down'],['down']
Availability,"bint --force` to remove libint(1) but keep `psi4-path-advisor`. 3. In https://github.com/loriab/psi4/blob/libint2/external/upstream/libint2/CMakeLists.txt and https://github.com/loriab/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other computers. 6. ~Once libint2 is finished building and psi4 starts, psi4 will error with `error: 'LIBINT2_MAX_AM_default1' was not declared in this scope`. The fix is the same as [Andy's (5)](https://github.com/psi4/psi4/pull/1721#issuecomment-537945417), editing `objdir/stage/include/libint2/libint2_params.h`. Fix that up and resume compiling psi4.~. 7. ~If you fiddle with the external/upstream/libint2/CM file and the generator starts rebuilding, you're toast. `rm -rf objdir/external/upstream/libint2` and `make` again from objdir to restart. Details: The way EFV does the AM defaulting is not",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:1749,down,downloading,1749,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,1,['down'],['downloading']
Availability,"bj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9288,error,error,9288,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"bjects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(157): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::pointer pointer;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:11827,error,error,11827,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"ble *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23951,error,error,23951,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38027,error,error,38027,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25220,error,error,25220,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17864,error,error,17864,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51650,error,error,51650,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22780,error,error,22780,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ble *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48984,error,error,48984,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"boptking.a(optking.cc.o); __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj in libmints.a(basisset_parser.cc.o); __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv in libmints.a(basisset_parser.cc.o); __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv in libmints.a(basisset_parser.cc.o); ...; ""__ZTISt9bad_alloc"", referenced from:; __ZTIN5boost16exception_detail10bad_alloc_E in libpsio.a(filemanager.cc.o); __ZN5boost6python15instance_holder8allocateEP7_objectmm in libboost_python-1_57.a(class.o); GCC_except_table3 in libboost_python-1_57.a(errors.o); __ZN5boost6python6detail12gcc_demangleEPKc in libboost_python-1_57.a(type_id.o); GCC_except_table3 in libmints.a(eribase.cc.o); GCC_except_table3 in libmints.a(3coverlap.cc.o); __ZN5Eigen8internal19throw_std_bad_allocEv in libpcm.a(Meddle.cpp.o); ...; ""__ZTISt9exception"", referenced from:; __ZTIN5boost2io12format_errorE in libmints.a(molecule.cc.o); GCC_except_table3 in libboost_python-1_57.a(errors.o); __ZTIN6PsiAPI13PsiException2E in libpsiapi.a(BasisSet.cc.o); __ZTIN3psi13PsiException2E in libmolecule.a(FragmentedSys.cc.o); __ZTIN3psi13PsiException2E in libparallel2.a(TaskMap.cc.o); __ZTIN3psi13PsiException2E in libparallel2.a(TaskStatistics.cc.o); __ZTIN3psi13PsiException2E in libPsiUtil.a(Exception2.cc.o); ...; ""__ZTIa"", referenced from:; __ZN5boost6python9converter29initialize_builtin_convertersEv in libboost_python-1_57.a(builtin_converters.o); ""__ZTIb"", referenced from:; __ZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IvRN3psi11PSIOManagerEibEEE8elementsEv in export_psio.cc.o; __ZN5boost6python9converter23expected_pytype_for_argIbE10get_pytypeEv in export_psio.cc.o; __ZN5boost6python6detail15signature_arityILj3EE4implINS_3mpl7vector4IvRN3psi11PSIOManagerERKNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEbEEE8elementsEv in export_psio.cc.o; ___cxx_global_var_init57 in export_psio.cc.o; __ZN5boost6python6detail12caller_arityILj1EE4impl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:76862,error,errors,76862,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,1,['error'],['errors']
Availability,"build constructors by following instructions https://github.com/psi4/psi4meta/blob/master/conda-recipes/constructor-cutter-unified/README.md. * edit tag and hash; * clear package cache; * `python run.py`; * check for noarch (BAD); * upload to vergil. generate the download site; * create new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md mind the edition string `v13rc2` for this and future filenames; * copy and edit new https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; * enter `scripts/` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; * run the `install-generator.py` in place. it will dump new files into `data/installs/` _subdirs_. be sure to `git add` them.; * installer page is ready. if wanted, edit the desination of the `Download` nav button https://github.com/psi4/psicode-hugo-website/blob/master/config.toml#L35; * pays to test; * installer on Mac and Linux; * that download button and `curl` downloading register on the download counters on vergil",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-464912733:264,down,download,264,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-464912733,5,"['Down', 'down']","['Download', 'download', 'downloading']"
Availability,"c SKIPPED [ 54%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_grimme_3c FAILED [ 59%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dkh PASSED [ 63%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED [ 68%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_resp PASSED [ 72%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED [ 77%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED [ 81%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED [ 86%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED [ 90%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED [ 95%]; ../lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED [100%]. ======================================================= FAILURES =======================================================; ______________________________________________________ test_dftd3 ______________________________________________________. molrec = {'elbl': ['', '', '', '', '', '', ...], 'elea': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}; name_hint = 'b3lyp', level_hint = 'd2', param_tweaks = None, ptype = 'gradient', dashcoeff_supplement = None; verbose = 1. def run_dftd3_from_arrays(molrec,; name_hint=None,; level_hint=None,; param_tweaks=None,; ptype='energy',; dashcoeff_supplement=None,; verbose=1):; """"""Specialized signature disentangling dispersion level and; parameters for computing on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:2620,FAILURE,FAILURES,2620,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['FAILURE'],['FAILURES']
Availability,"c`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3136,failure,failure,3136,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"cal Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 5.1.6; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-V <= . wB97M-V Hyb-GGA Exchange-Correlation Functional. N. Mardirossian and M. Head-Gordon, J. Chem. Phys. 144, 214110 (2016) (10.1063/1.4952647). Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => VV10 Non-Local Parameters <=. VV10 B = 6.0225E-02; VV10 C = 7.4505E-01. => Molecular Quadrature <=. Radial Scheme = EM; Pruning Scheme = ROBUST; Pruning Type = REGION; Nuclear Scheme = SBECKE. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 99; Spherical Points = 590; Total Points = 912458; Total Blocks = 6145; Max Points = 256; Max Functions = 640; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 13-18 entry C line 198 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-12, 19-24 entry H line 18 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 14; Integrals threads: 14; Memory [MiB]: 337; Algorithm: Disk; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVPPD AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 372; Number of basis functions: 1116; Number of Cartesian functions: 1308; Spherical Harmonics?: true; Max angular momentum: 4. Cached 0.1% of DFT collocation blocks in 0.036 [GiB]. Minimum eigenvalue in t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:9690,Toler,Tolerance,9690,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['Toler'],['Tolerance']
Availability,capabilities maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:13,mainten,maintenance,13,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['mainten'],['maintenance']
Availability,"cates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/prepare_tensors.cc`; - [x] Mark the return value of the `libqt` Davidson solver as `[[nodiscard]]` to force callers to check how many of the requested roots actually converged. ### Unrelated fixes; - [x] Fix a memory leak in the ROHF stability check. **(merged: #2671)**. ### Changes to comments, formatting, etc.; - [x] Fix typos in comments in `adc/diagonalize.cc` and `occ/dpd.h`; - [x] clang-format some files; - [x] Delete some empty lines between doc-comment-blocks and the function defin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3665,down,down,3665,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['down'],['down']
Availability,"cdgesv, Array2d::lineq_flin, Array2d::lineq_pople` and `Tensor2d::davidson, Tensor2d::cdsyev, Tensor2d::cdgesv, Tensor2d::lineq_flin, Tensor2d::lineq_pople` (PR #2684); - [x] Delete unused function overloads from `libmints`: `Matrix::diagonalize` (PR #2693); - [x] Delete commented out code, an unused `extern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2052,failure,failure,2052,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,cdomp2-2 test suite failure with ATLAS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461:20,failure,failure,20,https://psicode.org,https://github.com/psi4/psi4/issues/1461,1,['failure'],['failure']
Availability,"cense"" for more information.; >>> import sys; >>> sys.executable; '/home/xxx/data/applications/anaconda3/envs/p4env/bin/python'; >>> sys.path; ['', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python36.zip', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/lib-dynload', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages']; >>> import psi4; /home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; ```. If I run inside a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:1720,ERROR,ERROR,1720,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['ERROR'],['ERROR']
Availability,"cf_solver; Consolidate compiler generated dependencies of target scfgrad; [ 13%] Built target scfgrad; Consolidate compiler generated dependencies of target l2export; [ 13%] Built target l2export; Consolidate compiler generated dependencies of target 3index; [ 13%] Built target 3index; Consolidate compiler generated dependencies of target ciomr; [ 15%] Built target ciomr; Consolidate compiler generated dependencies of target cubeprop; [ 16%] Built target cubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ^; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libqt/qt.h:47:7: note: forward declaration of 'psi::Options'; class Options;; ^; 2 errors generated. ```. I'm doing this on my intel mac: `2.6 GHz 6-Core Intel Core i7`; using clang++ ; ```; (base) gwood@EXS-001355 build % /usr/local/opt/llvm/bin/clang++ -v; Homebrew clang version 15.0.7; Target: x86_64-apple-darwin22.4.0; Thread model: posix; InstalledDir: /usr/local/opt/llvm/bin`; ```. The only issue prior to this was to install libxc and point to it, which i did with 6.2.2; I downloaded the source from git and am using master:. ```; git clone git@github.com:psi4/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:1689,error,error,1689,https://psicode.org,https://github.com/psi4/psi4/issues/3006,1,['error'],['error']
Availability,"change the wording if there's a suggestion.) This error message _is_ raised, but because the parser tries all formats (e.g., xyz, psi4) in turn, when it fails them all, it raises an error message with the whole molecule string, which is less helpful, and that last error message is what psi4 repeats to you.; ```; Traceback (most recent call last):; File ""/psi/gits/QCElemental/i2287.py"", line 22, in <module>; ans = qcel.molparse.from_string(xyz, dtype=""psi4""); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 228, in from_string; molstr, molinit = parse_as_psi4_ish(molstr, unsettled=False); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 217, in parse_as_psi4_ish; raise MoleculeFormatError(""""""Unprocessable Molecule remanents under {}:\n{}"""""".format(dtype, molstr)); qcelemental.exceptions.MoleculeFormatError: Unprocessable Molecule remnants under psi4:; H6 1.51000000 0.78000000 0 44000000; ```. I've handled this better now to raise the shortest error message among the formats with https://github.com/MolSSI/QCElemental/pull/274, and the psi message looks like:; ```; Traceback (most recent call last):; File ""/psi/gits/hrw-l2/objdir39b/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/psi/gits/hrw-l2/objdir39b/stage/lib/psi4/driver/molutil.py"", line 258, in geometry; molrec = qcel.molparse.from_string(; File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 262, in from_string; raise(e); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 256, in from_string; molstr, molinit = parse_as_psi4_ish(molstr, unsettled=True); File ""/psi/gits/QCElemental/qcelemental/molparse/from_string.py"", line 217, in parse_as_psi4_ish; raise MoleculeFormatError(f""""""Unprocessable Molecule remnants under {dtype}:\n{molstr}""""""). qcelemental.exceptions.MoleculeFormatError: Unprocessable Molecule remnants under [psi4, xyz, xyz+, psi4+]:; H6 1.51000000 0.78000000 0 44000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2287#issuecomment-910395723:1118,error,error,1118,https://psicode.org,https://github.com/psi4/psi4/issues/2287#issuecomment-910395723,1,['error'],['error']
Availability,"cl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed.; ```. 全部生成 失败。",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53614,error,error,53614,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,5,['error'],['error']
Availability,"clang 4.0 / ifort 15.0.3 / MKL on macOS 10.12. After compiling from source code (tag v1.1), with ENABLE_gdma=ON, the following command quits without any output.; ```bash; python -c 'import psi4; print(psi4.__file__)'; ```; Running; ```bash; python -v -c ""import psi4""; ```; The last few lines of output are; ```bash; import psi4 # precompiled from /path/psi4-gdma/lib/psi4/__init__.pyc; dlopen(""/path/psi4-gdma/lib/psi4/core.so"", 2);; import psi4.core # dynamically loaded from /path/psi4-gdma/lib/psi4/core.so; ```; No error message. Modifying the following code; https://github.com/psi4/psi4/blob/master/psi4/src/core.cc#L1219-L1221; to; ```cpp; #ifdef INTEL_Fortran_ENABLED; static int argc = 1;; static char* argv = (char*) """";; for_rtl_init_(&argc, &argv);; #endif; ```; solves the problem. Any comments?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/771:520,error,error,520,https://psicode.org,https://github.com/psi4/psi4/issues/771,1,['error'],['error']
Availability,clang-tidy apply modernize-redundant-void-arg fixes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1317:27,redundant,redundant-void-arg,27,https://psicode.org,https://github.com/psi4/psi4/pull/1317,1,['redundant'],['redundant-void-arg']
Availability,"class calculates Mulliken / Loewdin charges and Bond Orders in commit: a6caee7 https://github.com/psi4/psi4/commit/a6caee7091afc6b0e8071ef0d077f93fcb6c9370; - - ESPPropCalc: This class allows calculation of fields on Grids in commit: ; 325149b https://github.com/psi4/psi4/commit/325149b31751b629486f0478cc5cfe1ee1ec9fb1. The rest of the commits are mostly fixups and linking up the three new classes to the old completely unchanged OEProp class, which now does not calculation itself. Also I implemented an in-memory routine calculating grid properties based on a grid, which was passed on.; The three new classes do not touch any global and no environment. They mostly exist without data storage for the grids, all functions have explicit (and mostly shared pointer return values).; Their complete setup is explicit. All environment variables are only set by OEProp. The reason is again: This allows to the new helpers to be used directly without any interference from Python and C++. The reason they were split this way: ESPPropCalc and PopulationAnalysisCalc and MultipolePropCalc do not share any members or variables. Example: only MPC requires an explicit origin to be set. ## Questions; - [x] I changed a return type to const & to avoid a large copy: https://github.com/psi4/psi4/commit/325149b31751b629486f0478cc5cfe1ee1ec9fb1#r30055651; - [x] The return type in compute_mo_extents is an actual vector instead of a Shared pointer. It contains maximum three elements, so I left it at that: https://github.com/psi4/psi4/commit/59005eed1c0bc8b893927284c31386eb4b715f1e#r30055734; - [x] I could remove the Prop baseclass completely from OEProp in the future. Only one function uses something from this. ## Checklist; - [x] Tests added for any new features; The tests are all still called from OEProp. The only new thing is the in-memory grid routine.; - [x] [All or relevant fraction of full tests run]; ctest -L quick was run. No errors. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1133:2998,error,errors,2998,https://psicode.org,https://github.com/psi4/psi4/pull/1133,1,['error'],['errors']
Availability,"class in Psi4 in an non-standardized fashion is unfortunate from a code design perspective. The goal of the CompositeJK project is, ultimately, to create a new JK class (_CompositeJK_) that offers a proper framework for combining separate J and K algorithms for use in JK construction. Such a class will provide a home for any new separate J and K algorithm that gets added to Psi4 in the future (such as the in-progress CFMM). Additionally, the CompositeJK class will be designed in such as a way to enable arbitrary combinations of any available separate J and K build algorithm through a single JK subclass. This arbitrary mixing and matching is planned to be accesible in a user-friendly way. DFJLinK is the first step to this process. DFJLinK, itself, is a new JK subclass that combines the integral-direct density fitted J build algorithm from DFJCOSK with the LinK algorithm previously available in DirectJK. LinK was previously available for use in Psi4 via DirectJK, but was always disrecommended due to its combination with a normal DirectJK implementation for J construction. In conjunction with Direct DF-J to form the Coulomb matrix, LinK performs much better. Some benchmarks comparing the Direct DF-J + LinK algorithm combination to other JK options in Psi4, for water clusters of varying sizes at the cc-pVDZ basis set, are attached:. ![Timing Plots of Water Clusters at cc-pVDZ](https://user-images.githubusercontent.com/26306559/198107808-42f3b855-13f0-4e14-8a50-c0402c16b94f.png). Small, non-diffuse basis sets are the specialty of Direct DF-J + LinK, and it reflects here, with DFJLinK outperforming the other integral-direct JK options for most of the water clusters, and being the fastest JK option tested overall for large water clusters. For specific comparisons to Direct DF-J + COSX, the closest current analogue in Psi4, DFJCOSK performs better for larger basis sets or more complex systems, while DFJLinK performs better for smaller basis sets and less complex systems from",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:2002,avail,available,2002,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['avail'],['available']
Availability,"class, it is important that the implementation be as efficient and maintainable as possible. In that respect, I think there are some general improvements to be made:; > ; > The way you've structured incremental Fock keeps eight lists of matrices attached to each `JK` object: copies of the previous `J`, `K`, `wK`, and `D` matrices, and differences between the last two iterations `J`, `K`, `wK`, `D`. In the interest of efficiency, I think it would be best to not store these matrices. Incremental Fock as implemented in the `DFJCOSK` class is a little better about this. That code adds the difference in `J`/`K`/`wK` to the appropriate buffer, which is not zeroed out between SCF iterations. This requires keeping only one list of matrices, the previous iteration `D`, which in my opinion is cleaner. (I have some thoughts on getting around storing the previous `D` matrix too.); > ; > Speaking more broadly about the design of the `JK` class, one valuable aspect of the `JK` class is that it is stateless and decoupled from the SCF procedure. `JK` classes have a well-defined [interface](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/jk.h#L175-L209). The variables like `incfock_count_` that you've proposed adding to the `JK` class break this statelessness, and my opinion that kind of logic should be in the SCF driver, not the `JK` object.; > ; > Let me know if any of these thoughts are unclear. I agree with your points. However, making that change would require a refactor of `DirectJK` (which zero out the J/K matrices at the beginning of every iteration) as well, as well as an overhaul of the previous `INCFOCK` code that exists in the Psi4 code. For the sake of PR brevity, I suggest punting those changes down to a future PR. The scope of this PR is to fix the numerical instabilities of `incfock` in COSX. Per @davpoolechem, using `incfock` on COSX indeed leads to significant time savings on larger systems, even if it is always OFF by default for the last iteration.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2682#issuecomment-1230790623:1952,down,down,1952,https://psicode.org,https://github.com/psi4/psi4/pull/2682#issuecomment-1230790623,1,['down'],['down']
Availability,cleaner print for module level errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2083:31,error,errors,31,https://psicode.org,https://github.com/psi4/psi4/pull/2083,1,['error'],['errors']
Availability,"clude; -- Psi4 library: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib//psi4/core.so; -- Psi4 sys.path: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/; -- Psi4 components: ; -- Python executable: /usr/bin/python2.7; CMake Error at /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/psi4/psi4Config.cmake:148 (find_package):; Could not find a package configuration file provided by ""TargetLAPACK"" with; any of the following names:. TargetLAPACKConfig.cmake; targetlapack-config.cmake. Add the installation prefix of ""TargetLAPACK"" to CMAKE_PREFIX_PATH or set; ""TargetLAPACK_DIR"" to a directory containing one of the above files. If; ""TargetLAPACK"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; CMakeLists.txt:6 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-build/CMakeFiles/CMakeError.log"".; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:107: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-configure] Error 1; CMakeFiles/Makefile2:1533: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; I'll have a poke about to see if I can get it to build, either within the main psi4 build or stand alone (happy to submit this as a new issue, if that would be preferable).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022:1789,down,downstream,1789,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400445022,9,"['Error', 'down']","['Error', 'downstream']"
Availability,compilation error with intel 2017,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/issues/522,1,['error'],['error']
Availability,composite method wrapper error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/455:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/issues/455,1,['error'],['error']
Availability,concerning http://forum.psicode.org/t/fatal-error-a-matrix-is-not-spd/1471. Decent looking results are obtained with `guess huckel` and no extra options. Instability analysis shows the SCF lands in a minimum.; For `SAP` the SCF does not land SCF in a minimum. However there are differences between `SAD+instability analysis` and `huckel` (see induction energy).; Possibly an issue with a bugged instability following (suggested by @JonathonMisiewicz ). [huckel.txt](https://github.com/psi4/psi4/files/3798367/huckel.txt); [huckel_stability.txt](https://github.com/psi4/psi4/files/3798368/huckel_stability.txt); [sap_stability.txt](https://github.com/psi4/psi4/files/3798380/sap_stability.txt); [sap.txt](https://github.com/psi4/psi4/files/3798381/sap.txt),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1747:44,error,error-a-matrix-is-not-spd,44,https://psicode.org,https://github.com/psi4/psi4/issues/1747,1,['error'],['error-a-matrix-is-not-spd']
Availability,"conda release: py36hf231b52_0 ; Psi4 1.2.1 ; Rev {HEAD} 406f4de . The DF-CCSD iterations with the FNOCC and DFOCC modules diverge for a repulsive, C2-symmetric methanol dimer depending on how I read the geometry (it seems).; The first CCSD energy is already completely wrong. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 28.8732411379 28.8732411379 7.9419493294 0; 1 1 1 -305.0567532225 -333.9299943603 62248.5081330950 2; 2 2 1 -392.6124818532 -87.5557286307 1852579.6071174063 3; 3 3 1 -337.1095996214 55.5028822317 1639881736.6452949047 2; ```. The conventional CCSD shows no problems (fnocc/ccenergy tested). The (assumed) dependence on the input revealed itself while making a clean input for reporting.; The SCF part does not show anything odd. Geometry is correctly recognized. Attached tgz file contains the working and faulting input/output.; [tball.tar.gz](https://github.com/psi4/psi4/files/2240627/tball.tar.gz)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1110:834,fault,faulting,834,https://psicode.org,https://github.com/psi4/psi4/issues/1110,1,['fault'],['faulting']
Availability,"conda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; dfmp2_wfn.compute_energy(). RuntimeError:; Fatal Error: There are no occupied orbitals with beta spin.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; The most recent 5 function calls were:. Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); core.set_global_option(""DFT_RADIAL_POINTS"", 85); core.set_global_option(""REFERENCE"", ""uhf""); set_memory(100000000000); try:; --> optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); core.set_global_option(""GUESS"", ""read""); optimize('pwpb95-d3bj'). Psi4 stopped on: Friday, 21 August 2020 04:21PM; Psi4 wall time for execution: 0:00:04.47. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. As I am fairly new to quantum chemistry, I do not really know how to interpret this error. Any pointers are appreciated.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995:2538,Error,Error,2538,https://psicode.org,https://github.com/psi4/psi4/issues/1995,3,"['Error', 'error']","['Error', 'error']"
Availability,configure fails to find libxc and then downloads and rebuilds it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2676:39,down,downloads,39,https://psicode.org,https://github.com/psi4/psi4/issues/2676,1,['down'],['downloads']
Availability,"configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2690,avail,available,2690,https://psicode.org,https://github.com/psi4/psi4/issues/629,2,"['Error', 'avail']","['Error', 'available']"
Availability,"configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2948,Error,Error,2948,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh\n'); Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 477, in trace_task; R = retval = fun(*args, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/celery/app/trace.py"", line 760, in __protected_call__; return self.run(*args, **kwargs); File ""/code/bigchem/tasks.py"", line 52, in compute; return qcop_compute(program, inp_obj, raise_exc=raise_exc, **kwargs); File ""/opt/conda/lib/python3.10/site-packages/qcop/main.py"", line 35, in compute; return adapter.compute(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/base.py"", line 143, in compute; results, stdout = self.compute_results(; File ""/opt/conda/lib/python3.10/site-packages/qcop/adapters/qcengine.py"", line 42, in compute_results; qcng_output = qcng_compute(; File ""/opt/conda/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 141, in compute; pversion = parse_version(self.get_version()); File ""/opt/conda/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/opt/conda/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/opt/conda/lib/python3.10/site-packages/psi4/__init__.py"", line 68, in <module>; from . import core; ImportError: /opt/conda/lib/python3.10/site-packages/psi4/core.cpython-310-x86_64-linux-gnu.so: undefined symbol: __dkh_main_MOD_dkh. ```. **EDIT:** The issue appears to be coming from using a `psi4` channel for installation. Some of my old `env.yaml` files used a `psi4` channel. The `psi4` installation from that channel appears broken. If you install from `conda-forge` it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124:1766,Error,Error,1766,https://psicode.org,https://github.com/psi4/psi4/issues/2991#issuecomment-1701672124,2,['Error'],['Error']
Availability,"cratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/testresults.log"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1748,ERROR,ERROR,1748,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"ct const&, char const*, boost::python::api::object const&) in libboost_python-1_57.a(object_protocol.o); ""_PyErr_Fetch"", referenced from:; psi::HandleError() in libfrag.a(LibFragDriver.cc.o); ""_PyErr_Format"", referenced from:; boost::python::pytype_check(_typeobject*, _object*) in libboost_python-1_57.a(from_python.o); boost::python::objects::(anonymous namespace)::callable_check(_object*) in libboost_python-1_57.a(class.o); boost::python::objects::function::add_to_namespace(boost::python::api::object const&, char const*, boost::python::api::object const&, char const*) in libboost_python-1_57.a(function.o); boost::python::converter::registration::get_class_object() const in libboost_python-1_57.a(registry.o); ""_PyErr_NewException"", referenced from:; boost::python::objects::function::argument_error(_object*, _object*) const in libboost_python-1_57.a(function.o); ""_PyErr_NoMemory"", referenced from:; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); ""_PyErr_Occurred"", referenced from:; boost::python::len(boost::python::api::object const&) in python.cc.o; boost::python::len(boost::python::api::object const&) in libparallel2.a(LibParallelHelper.cc.o); boost::python::len(boost::python::api::object const&) in libmints.a(matrix.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_hessian_0.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_1_0.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_freq_0.cc.o); boost::python::len(boost::python::api::object const&) in libfindif.a(fd_freq_1.cc.o); ...; ""_PyErr_Print"", referenced from:; psi::Python::run(__sFILE*) in python.cc.o; psi::Dispersion::compute_energy(boost::shared_ptr<psi::Molecule>) in libdisp.a(dispersion.cc.o); psi::Dispersion::compute_gradient(boost::shared_ptr<psi::Molecule>) in libdisp.a(dispersion.cc.o); psi::SuperFunctional::build(std::__1::basic_string<char, std::__1::char_traits<char>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:8014,error,errors,8014,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,1,['error'],['errors']
Availability,"cting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /home/amjames2/.conda/envs/py3/bin/python (found version ""3.5.2"") ; -- Found PythonLibs: /home/amjames2/.conda/envs/py3/lib/libpython3.so; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; CMake Error at CMakeLists.txt:35 (find_package):; Could not find a package configuration file provided by ""libefp"" with any; of the following names:. libefpConfig.cmake; libefp-config.cmake. Add the installation prefix of ""libefp"" to CMAKE_PREFIX_PATH or set; ""libefp_DIR"" to a directory containing one of the above files. If ""libefp""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; ```. It seems that if I add two lines to the `CMAKE_ARGS` section of `ExternalProject_Add(psi4_core…` . ```; -Dlibint_DIR=${libint_DIR}; -Dlibefp_DIR=${libefp_DIR}; ```. Then the arguments that I pass on the command line are correctly fed into the psi4_core build. Currently they are not passed in but the step that would download/build them was skipped since they were detected in the initial CMake pass. The `CMAKE_PREFIX_PATH` option for detecting them works since that argument is currently passed through. The documentation should be edited to remove the suggestion that `-Dlibint_DIR` type options be used, or the source should be edited so that those arguments are passed through to the psi4_core build.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/516:2798,error,errors,2798,https://psicode.org,https://github.com/psi4/psi4/issues/516,2,"['down', 'error']","['download', 'errors']"
Availability,"cts/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(155): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::value_type value_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:8089,error,error,8089,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"d PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: gcc; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O0 -g3 -DDEBUG -Wall -Wextra -Winit-self -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Wwrite-strings; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-fopenmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;-fopenmp;-Wl,--end-group; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/264:3727,avail,available,3727,https://psicode.org,https://github.com/psi4/psi4/issues/264,1,['avail'],['available']
Availability,"d on mac-psinet.sherrill.chemistry.gatech.ed at Wed Oct 25 13:40:59 2017; Module time:; 	user time = 0.01 seconds = 0.00 minutes; 	system time = 0.03 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 0.46 seconds = 0.01 minutes; 	system time = 0.09 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes. *** tstart() called on mac-psinet.sherrill.chemistry.gatech.ed; *** at Wed Oct 25 13:40:59 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? no; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 1; Number of active occupied orbitals: 4; Number of active virtual orbitals: 20; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 0.16 mb; memory requirements for QCISD(T) = 0.29 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 0.49 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.1998551539 -0.3267843769 0.1994563594 0; 1 1 1 -0.1953653583 0.0044897956 0.0261066660 0; 2 2 1 -0.1998807440 -0.0045153857 0.0092191040 0; 3 3 1 -0.2002563980 -0.0003756540 0.0033933116 0; 4 4 1 -0.2003267260 -0.0000703281 0.0005902038 0; 5 5 1 -0.2003284394 -0.0000017134 0.0001874109 0; 6 6 1 -0.2003286037 -0.0000001643 0.0000507167 0; 7 7 1 -0.2003286166 -0.0000000128 0.0000118947 0; 8 8 1 -0.2003286173 -0.0000000007 0.0000025104 0; 9 8 2 -0.2003286173 -0.0000000000 0.0000005766 0; 10 8 3 -0.2003286173 -0.0000000000 0.0000001177 0;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339412812:10389,avail,available,10389,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339412812,1,['avail'],['available']
Availability,"d-bond functions. However I have encountered problems getting this to work using the DF variants of these methods. As I understand it, to get the DF-MP2, DF-CC etc to work I need to do the following:. 1. Create a set of auxiliary functions for these mid-bond sets. This I have done (mb-set-ri.gbs); 2. Specify the auxiliary basis set using; assign <aux basis> df_basis_scf/mp2. The only source of information I was able to find on the latter was at http://www.psicode.org/psi4manual/master/basissets.html#sec-basisuserdefined. Step 2 is where things fall over. First of all, the correct syntax seems to be ; assign df_basis_scf/mp2 <aux basis>; There seems to be an error on the wiki page shown above. . This syntax works as it allows me to define a specific auxiliary basis for *all* atoms. If I wish to define a specific aux basis for a particular atom (as needs to be done when using mid-bonds) then the command should be; assign Rn df_basis_scf mb-set-ri; This fails in inputparser.py with the following error:. Traceback (most recent call last):; File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 734, in process_input; temp = re.sub(basis_block, process_basis_block, temp); File ""/home/alston/Psi4/psi4conda/lib/python2.7/re.py"", line 155, in sub; return _compile(pattern, flags).sub(repl, string, count); File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 357, in process_basis_block; raise TestComparisonError(message); p4util.exceptions.TestComparisonError: Conflicting basis set specification: assign lines present but shells have no [basname] label. It seems like the line ""assign Rn df_basis_scf mb-set-ri"" cannot be correctly parsed by inputparser.py. It seems to think this line is part of the basis set specification. . The complete Psi4 command file for this calculation is:; [Ar2_input.txt](https://github.com/psi4/psi4/files/787318/Ar2_input.txt). And the two basis set files are here:; [mb-set.txt](https://github.com/psi4/psi4/files/7",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/626:1477,error,error,1477,https://psicode.org,https://github.com/psi4/psi4/issues/626,1,['error'],['error']
Availability,"d-meta`, `dft-grad1`, `dft-grad2`, `dft-omega`, `dft-psivar`, `dft-vv10`, `dft1`, `dftd3-grad`, `dftd3-version`, `frac-traverse`, `opt13`, `pcmsolver-dft`, `pcmsolver-dipole`; - [x] new test: `dft-pruning`. ## Questions; - Pruning enabled by default? -> not this PR, but after further testing yes. ## Checklist; - [x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:2896,failure,failure,2896,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['failure'],['failure']
Availability,"da-forge; pyyaml 6.0 py38h294d835_4 conda-forge; qcelemental 0.17.0 py_0 psi4; qcengine 0.19.0 pyhd8ed1ab_0 psi4; scipy 1.8.1 py38h9bf8e03_0 conda-forge; setuptools 61.2.0 py38haa95532_0; sqlite 3.38.3 h2bbff1b_0; tk 8.6.12 h8ffe710_0 conda-forge; tomli 2.0.1 pyhd8ed1ab_0 conda-forge; vc 14.2 h21ff451_1; vs2015_runtime 14.27.29016 h5e58377_2; wheel 0.37.1 pyhd3eb1b0_0; wincertstore 0.2 py38haa95532_2; xz 5.2.5 h62dcd97_1 conda-forge; yaml 0.2.5 h8ffe710_2 conda-forge; zipp 3.8.0 pyhd8ed1ab_0 conda-forge; ```. Manually updating pydantic with `pip install -U pydantic`, installs version 1.9.1 and then running `psi4 --test` gives:; ```; ================================================= test session starts =================================================; platform win32 -- Python 3.8.13, pytest-7.1.2, pluggy-1.0.0 -- Path\psi4conda\envs\psi16\python.exe; cachedir: .pytest_cache; rootdir: Path\psi4conda\envs\psi16\lib\site-packages\psi4, configfile: pytest.ini; collected 4042 items / 1 error / 3950 deselected / 92 selected. ======================================================= ERRORS ========================================================; _______________________________ ERROR collecting tests/test_qcel_molparse_to_string.py ________________________________; psi4conda\envs\psi16\lib\site-packages\psi4\tests\test_qcel_molparse_to_string.py:7: in <module>; from qcelemental.tests import test_molparse_to_string; <frozen importlib._bootstrap>:991: in _find_and_load; ???; <frozen importlib._bootstrap>:975: in _find_and_load_unlocked; ???; <frozen importlib._bootstrap>:671: in _load_unlocked; ???; psi4conda\envs\psi16\lib\site-packages\_pytest\assertion\rewrite.py:168: in exec_module; exec(co, module.__dict__); psi4conda\envs\psi16\lib\site-packages\qcelemental\tests\test_molparse_to_string.py:270: in <module>; ""subject1"": qcel.models.Molecule(; psi4conda\envs\psi16\lib\site-packages\qcelemental\models\molecule.py:294: in __init__; super().__init__(**kwargs); pydantic\main.p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542:2918,error,error,2918,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1160363542,1,['error'],['error']
Availability,"dabu@RES-SHANTIPA:/mnt/c/Users/shantigp/projects$ curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.3-py36-Linux-x86_64.sh"" -o Psi4conda-1.3-py36-Linux-x86_64.sh --keepalive-time 2; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 515M 100 515M 0 0 4751k 0 0:01:51 0:01:51 --:--:-- 4323k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478018358:99,down,download,99,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478018358,1,['down'],['download']
Availability,"dabu@RES-SHANTIPA:/mnt/c/Windows/System32$ curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.3-py36-WindowsWSL-x86_64.sh"" -o Psi4conda-1.3-py36-WindowsWSL-x86_64.sh --keepalive-time 2; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0Warning: Failed to create the file Psi4conda-1.3-py36-WindowsWSL-x86_64.sh:; Warning: Permission denied; 0 515M 0 3759 0 0 6382 0 23:31:28 --:--:-- 23:31:28 6371; curl: (23) Failed writing body (0 != 3759)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478015030:92,down,download,92,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478015030,1,['down'],['download']
Availability,"dabu@RES-SHANTIPA:/mnt/c/Windows/System32$ curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-Windows-x86_64.sh""; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0Warning: Failed to create the file Psi4conda-latest-py35-Windows-x86_64.sh:; Warning: Permission denied; 100 246 100 246 0 0 710 0 --:--:-- --:--:-- --:--:-- 710; curl: (23) Failed writing body (0 != 246)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586:87,down,download,87,https://psicode.org,https://github.com/psi4/psi4/issues/1586,1,['down'],['download']
Availability,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:3051,robust,robust,3051,https://psicode.org,https://github.com/psi4/psi4/issues/367,2,"['avail', 'robust']","['available', 'robust']"
Availability,"dear psi4 team,. i am trying to restart an interrupted coupled cluster run, but to no avail. the input file has the following keywords:. set cceom restart_eom_cc3 true; set ccenergy restart true; set cclambda restart true; set ccresponse restart true. yet, in the output file in the ccenergy section i find:. Restart = No. the files psi.{pid}.\* from the previous run are in the current working directory, permissions are correct. increasing verbosity didn't seem to help me to trace the problem - i am basically not sure what file and from where psi4 wants to read, and i cannot find it in the manual. could anybody please enlighten me?. cheers,; bartek",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/27:86,avail,avail,86,https://psicode.org,https://github.com/psi4/psi4/issues/27,1,['avail'],['avail']
Availability,"decl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18077,error,error,18077,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"decl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28401,error,error,28401,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel chan",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3142,down,download,3142,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16803,error,error,16803,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ding NUM_FROZEN_DOCC doesn't work because it would need; to be different for fragment A than Fragment B. On Fri, Oct 2, 2020 at 3:13 AM Holger Kruse <notifications@github.com>; wrote:. > The following input, given to me via email, gives a 'bad' dMP2 correction; > for SAPT:; >; > delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; > delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; >; > molecule {; > 0 1; > F 0.00000000 0.00000000 2.96216000; > I 0.00000000 0.00000000 0.96704400; > --; > 0 1; > C 0.00000000 0.00000000 -2.52999200; > N 0.00000000 0.00000000 -1.35165800; > Na 0.00000000 0.00000000 -4.84283500; > units angstrom; > no_reorient; > symmetry c1; > }; > memory 20 GiB; > set {; > basis def2-TZVP; > freeze_core true; > }; > energy('sapt2+dMP2'); > energy('mp2',bsse_type=['nocp']); >; > The issue is reproducible for MP2/CCSD post-SCF methods. It is not; > directly DF nor ghost atom related. (besides a possibly small error due; > to #1968 <https://github.com/psi4/psi4/issues/1968>). And not a module; > specific issue.; >; > Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no; > rel. effects.) with global FC=on seems to give 'better' results in the; > sense that MP2 interaction energy is negative.; >; > One, and perhaps only, issue is frozen_core.; > Turning FC = off only for the supermolecular MP2 part gives OK results.; > For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is; > freezing only 3.; > At least for this case, freezing the Ne-shell by default for Na is not a; > good choice.; >; > Tagging @PeterKraus <https://github.com/PeterKraus>.; >; > freeze_core -2 makes the SAPT part crash because sth goes wrong for the IF; > fragment (fragment A):; >; > FOCC A = 18446744073709551611; > FOCC B = 1; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2012>",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354:1764,error,error,1764,https://psicode.org,https://github.com/psi4/psi4/issues/2012#issuecomment-702811354,1,['error'],['error']
Availability,"double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30555,error,error,30555,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37610,error,error,37610,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21288,error,error,21288,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11746,error,error,11746,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18482,error,error,18482,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,download externals through url instead of git clone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1569:0,down,download,0,https://psicode.org,https://github.com/psi4/psi4/pull/1569,1,['down'],['download']
Availability,"downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/tmp/v2rdm_casscf_external-cache-Release.cmake; -- Setting option ENABLE_OPENMP: ON; -- Psi4 script: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/bin/psi4; -- Psi4 headers: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/include; -- Psi4 library: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib//psi4/core.cpython-36m-x86_64-linux-gnu.so; -- Psi4 sys.path: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib/; -- Psi4 components: ambit;chemps2;dkh;gdma;pcmsolver;simint; -- Python executable: /usr/bin/python3; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=CXX;Fortran, C/CXX/Fortran=/GNU/GNU; CMake Error at /usr/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake:211 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:487 (find_package_handle_standard_args); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindTargetOpenMP.cmake:64 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:104 (find_package); /usr/share/cmake-3.10/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:44 (find_dependency); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/psi4/psi4Config.cmake:145 (find_package); CMakeLists.txt:31 (find_package). -- Configuring incomplete, errors occurred!; ```; I'm using cmake version 3.10.2, GNU compilers version 7.3.0 and Intel MKL 2019.1.144; I noticed that ``stage/share/cmake/TargetLAPACK/FindTargetOpenMP.cmake`` doesn't seem to use ``OpenMP_LIBRARY_DIRS`` but I don't know anything about CMake so I might just be wrong here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1426:2381,error,errors,2381,https://psicode.org,https://github.com/psi4/psi4/issues/1426,1,['error'],['errors']
Availability,"dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44179,error,error,44179,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45890,error,error,45890,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"d，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16613,error,error,16613,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if they want; > print-error-msg.; >; > For a long time we had geometry optimizations exit smoothly even if failed; > for iterations exceeded. That caused some problems (I think @dsirianni; > <https://github.com/dsirianni> hit them), so we switched toward the; > die+traceback. Now SCF will behave like optimizations.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1130#issuecomment-411567479>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdvbzSmwMSXIINgOIb089mSzOfCS1ks5uO2AMgaJpZM4V0pOZ>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:2166,error,error-msg,2166,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,4,['error'],"['error', 'error-msg']"
Availability,"e *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38205,error,error,38205,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:23169,error,error,23169,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20516,error,error,20516,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetri，该符号在函数 ""int __cdecl psi::C_DGETRI(int,double *,int,int *,double *,int)"" (?C_DGETRI@psi@@YAHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrs，该符号在函数 ""int __cdecl psi::C_DGETRS(char,int,int,double *,int,int *,double *,int)"" (?C_DGETRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbak，该符号在函数 ""int __cdecl psi::C_DGGBAK(char,char,int,int,int,double *,double *,int,double *,int)"" (?C_DGGBAK@psi@@YAHDDHHHPEAN0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggbal，该符号在函数 ""int __cdecl psi::C_DGGBAL(char,int,double *,int,double *,int,int *,int *,double *,double *,double *)"" (?C_DGGBAL@psi@@YAHDHPEANH0HPEAH1000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:22969,error,error,22969,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33892,error,error,33892,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8149,error,error,8149,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e PK integral calculation. For me, it took building Psi4 entirely from source, with nothing from conda at all. stdout/stderr before this PR:. ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; stdout/stderr after this PR:; ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: WRITE failed. Only some of the bytes were written!; Error writing the first partial page, unit 34.; PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; The reason why there is no ""disk is full"" error message, is because `SYSTEM_WRITE` only reports a failure and sets errno if the disk is already full when it is called. As long as it can write at least one out of _however many_ bytes it does not set errno. I both cases there is no error message at all in the output file. The current theory is that the `python` process gets aborted by a SIGABRT and cannot write the message to the output file. ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857:1160,Error,Error,1160,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857,1,['Error'],['Error']
Availability,"e appropriate state. However, the multireference character results in low-lying LUMOs. So if PSI4 was populating the wrong orbitals, we would see the energy of the larger basis set ROHF increasing by (this is all back-of-the-envelope, btw) 5 mEh. We know that the smaller basis set (cc-pwCVDZ-DK, which is explicitly defined in the input file because that basis set is not in the PSI4 library for iron) is converging to the right state. . If DZ->TZ projection is going wrong by 3 Hartrees, then there is something totally haywire with PSI4. Molpro's SCF guess from atomic densities sucks, but I have never seen it crap the bed with incorrect states on the order of Hartrees! . Try this test: run the ROHF energy calculation using just the TZ set, with no DZ step and no ""set scf guess read""; When I do this, I get ; @ROHF Final Energy: -1271.65162910275285. HERE is where PSI4 has the incorrect state. I haven't run an orbital stability analysis, but I can tell by looking at the MO coefficients (thanks Yukio!) --- 10A1 (doubly occupied d2+) needs to be swapped with 14A1 (singly occupied d0) to change the excited Phi state to the correct Pi state. Another clue that leads me to believe there's an actual bug somewhere: look at the SCF orbital energies for the initial DZ guess versus the screwed up TZ projection. The only significant difference is; DZ ROHF:; 1A1 -263.972182; and; TZ ROHF:; 1A1 -261.966897. Since 1A1 is doubly occupied, there's your 4 Hartrees worth of error. ; Looking at the MO coefficients; DZ ROHF:; FE1 s0 0.9825555 (duh, first orbital should be iron 1s). TZ ROHF:; 1 FE1 s0 0.8531471 0.3343274 0.0000000 0.0000000 0.0003960; 2 FE1 s0 -0.5169916 1.4108806 0.0000000 0.0000000 0.0017387; All sorts of crazy mixing of 1s/2s iron basis functions in the first two MOs. To me, something messed up with core s orbitals in the SCF indicates a problem with the basis set projection, a problem with the DKH, or perhaps even an index start error if only the first MO is wrong. ; Fun!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/899#issuecomment-360370142:1795,error,error,1795,https://psicode.org,https://github.com/psi4/psi4/issues/899#issuecomment-360370142,2,['error'],['error']
Availability,"e buffer holds the information necessary to get that data, *when it is explicitly told to*. . I am sorry for not being clear, but this stuff is very easy to get lost in. I meant that trying to access tensor elements directly after calling `buf4_init`. Getting back to the subject of this PR: . 1. Lets leave the comments in `file4_init` alone, since the `buf4/file2_init` functions are the ones being used externally, `file4_init`s are usually only found w/in DPD itself as far as I know.. ; 2. In `buf4_init()` and `file2_init()` We can put note/warning separate from the description of `label`, something to the tune of ; > Make sure that you use the correct `label` and `inputfile` if you *intend* to read from or write to an existing quantity on disk. If you *intend* to populate a new quantity on disk, ensure that the `label` is not already used in `inputfile`. PSIO::tocprint(int filenum) can be used to display the current list of labels in use in the outputfile. . BTW: That last hint is particularly useful for debugging I/O related errors. Also, If you intend … better than it will be loaded… since it indicates this may or may not be done, and it does **not** happen now. . The case where an tensor is held in core via the cache system does not need to be mentioned since it does not change any of this behavior. To go on to your question about the inputfile, label relationship. The file is one of those defined in [psifiles.h](https://github.com/psi4/psi4/blob/master/psi4/include/psi4/psifiles.h), and these macros provide an easy way to know which number file a quantity belongs in. Thinking of the file as a dictionary is not so far from reality, and will serve for the purpose of explaining. The label is going to be used to lookup the offset into the file (number of bytes from the beginning) where some numbers (the elements of the tensor) are found. If writing it will replace these, if reading they used in any operations involving the buffer we are using to manage all of this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/550#issuecomment-267512911:1997,error,errors,1997,https://psicode.org,https://github.com/psi4/psi4/pull/550#issuecomment-267512911,1,['error'],['errors']
Availability,"e following error occurs:. ```; File ""C:\Users\user\Anaconda3\envs\qiskit-0-27-psi4-jupyter\Scripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\ground_state_solvers\ground_state_eigensolver.py in solve(self, problem, aux_operators); 80 # note tha",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:1143,error,error,1143,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['error'],['error']
Availability,"e reply and suggestions @loriab !. > Good, thanks!; > ; > Assuming [this is the log](https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=i386&ver=1%3A1.2.1-1&stamp=1546604357&raw=0) to look at, a few comments:. It's the ia32 (32bit) build, the x86_64 one is here:; https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=amd64&ver=1%3A1.2.1-1&stamp=1546603567&raw=0. > * no need for boost at all (`libboost-atomic1.67-dev libboost-atomic1.67.0 libboost-chrono-dev`). Thanks, I thought I had removed them already. > * psi 1.2 won't work with py < 3.5 (`Get:19 http://debian.csail.mit.edu/debian unstable/main i386 python2.7 i386 2.7.15-5 [299 kB]`). It is using python3, this must be some indirect dependency which I can do nothing about.; ; > * production needs at least AM6 (`-DMAX_AM_ERI=4`) and preferably 7 or 8. OK, I will look into that. > * I think you were the one who wanted to be able to use a default theme rather than the psi custom one. this is available now (`-- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme`). Hrm right, I will take another look at building the manual, thanks for pointing that out. > * threaded blas that's not mkl can go wrong (`CMake Warning at external/common/lapack/CMakeLists.txt:50 (message):`) and unfortunately the test suite in single thread mode can't catch it. would be good to test it, perhaps with this script https://github.com/psi4/psi4/blob/master/psi4/share/psi4/scripts/test_threading.py#L270. Ok, I'll try to run that during bulid as well. > * Unfortunately solutions to test failures aren't leaping to mind. Some are very strange for a consistent codebase (`TypeError: set_memory_bytes(): incompatible function arguments. The following argument types are supported:`). That one is likely due to 32bit: `tests/options1/input.dat` tried to allocate more than 4 GB in the last two attempts in the `check set_memory() wrapper` test; the same applies to `json-v11-energy` and `json_data[""memory""] = ""5GB""`. . So those are accounted",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762:977,avail,available,977,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762,1,['avail'],['available']
Availability,"e the definition of each basis set. The basis sets specified; # using either basis <opt_name> {...} are utilized first (in the order specified; # in the input file). Any remaining basis sets required are extracted from the built-in library,; # if they exist, or an error message is printed.; psi4.basis_helper(""""""; #; # We start by assigning basis sets to atoms. These commands can go anywhere in the basis block; #; # First, assign DZ to all atoms; assign DZ; # Now, assign 3-21G to all carbon atoms; assign C my3-21G; # The two atoms labelled H1 get a STO-3G basis two; assign H1 sto-3g; # Carbons 3 and 5 get a STO-3G basis, too; assign C1 sto-3g; # With all these in place, the symmetry is lowered to C2v automatically; # The commands are applied in order i.e., adding a line like; # assign cc-pvtz; # here would override all of the above and assign cc-pvtz to all atoms. #; # Now we define the basis sets. N.B. Indentation does not matter; it just looks prettier.; #; [my3-21G] #This is really the standard 3-21G basis, but with a different name; cartesian; ****; H 0; S 2 1.00; 5.4471780 0.1562850; 0.8245470 0.9046910; S 1 1.00; 0.1831920 1.0000000; ****; C 0; S 3 1.00; 172.2560000 0.0617669; 25.9109000 0.3587940; 5.5333500 0.7007130; SP 2 1.00; 3.6649800 -0.3958970 0.2364600; 0.7705450 1.2158400 0.8606190; SP 1 1.00; 0.1958570 1.0000000 1.0000000; ****; [DZ]; spherical; ****; H 0 ; S 3 1.00; 19.2406000 0.0328280 ; 2.8992000 0.2312080 ; 0.6534000 0.8172380 ; S 1 1.00; 0.1776000 1.0000000 ; ****; """"""). psi4.set_options({; 'd_convergence': 11,; 'e_convergence': 11,; 'scf_type': 'pk'}); ; bz.update_geometry(); bz.print_out(); psi4.compare_strings(""c2v"", bz.schoenflies_symbol(), ""Point group"") #TEST; psi4.compare_values(refnuc, bz.nuclear_repulsion_energy(), 10, ""Nuclear repulsion energy"") #TEST; ```. ## Questions; - [ ] I've no immediate thoughts of merging this. Just wanted it to be available to others and off my computer. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1178:3973,avail,available,3973,https://psicode.org,https://github.com/psi4/psi4/pull/1178,1,['avail'],['available']
Availability,"e,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDD",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13312,error,error,13312,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"e-05 DIIS; @DF-RKS iter 8: -308.55887443471090 -5.78261e-05 8.58740e-06 DIIS; @DF-RKS iter 9: -308.55891429039167 -3.98557e-05 5.23007e-06 DIIS ; @DF-RKS iter 10: -308.55893438187678 -2.00915e-05 3.97102e-06 DIIS ; @DF-RKS iter 11: -308.55897076821287 -3.63863e-05 3.09810e-06 DIIS ; @DF-RKS iter 12: -308.55899251437626 -2.17462e-05 1.29222e-06 DIIS ; @DF-RKS iter 13: -308.55899611302931 -3.59865e-06 5.63064e-07 DIIS ; @DF-RKS iter 14: -308.55899645885273 -3.45823e-07 2.29741e-07 DIIS ; Energy and wave function converged.; ```. And with `set wcombine false`:; ```...; ==> Integral Setup <==; ; DFHelper Memory: AOs need 6.464 GiB; user supplied 6.464 GiB. Using in-core AOs.; ...; ==> Iterations <==; ; Total Energy Delta E RMS |[F,P]|; ; @DF-RKS iter SAD: -306.90916690803959 -3.06909e+02 0.00000e+00 ; @DF-RKS iter 1: -306.98727406041530 -7.81072e-02 1.83756e-03 DIIS; @DF-RKS iter 2: -307.13667252428678 -1.49398e-01 1.47236e-03 DIIS; @DF-RKS iter 3: -307.32880507487312 -1.92133e-01 1.25216e-04 DIIS; @DF-RKS iter 4: -307.32990958370664 -1.10451e-03 7.65745e-05 DIIS; @DF-RKS iter 5: -307.33036354773054 -4.53964e-04 1.70705e-05 DIIS; @DF-RKS iter 6: -307.33039129462924 -2.77469e-05 5.09682e-06 DIIS; @DF-RKS iter 7: -307.33039390006070 -2.60543e-06 1.20852e-06 DIIS; @DF-RKS iter 8: -307.33039428809019 -3.88029e-07 4.42881e-07 DIIS; Energy and wave function converged.; ```. Both jobs were run with 8 threads and 29337MB of memory, on the same machine (An `Intel(R) Xeon(R) Gold 6126 CPU @ 2.60GHz`). As my be relevant, other settings are:; ```set {; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; }; ```. Should I have expected cherry-picking 9163cbd08865d26129cfbaf5c302fc14f870f30f into 1.4 to have resolved this discrepancy? Or should I be making `set wcombine false` a standard part of my scripts for now?. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182:3209,robust,robust,3209,https://psicode.org,https://github.com/psi4/psi4/issues/2279#issuecomment-931478182,1,['robust'],['robust']
Availability,"e-enabled and so probably needs tweaking somewhere). Building ambit bails out with the same lack of MathOpenMP that I was seeing before #1053:. ```; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=C;CXX;Fortran, C/CXX/Fortran=GNU/GNU/; -- Found TargetOpenMP: 1 ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /var/tmp/build/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:108 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /var/tmp/build/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:44 (find_dependency); cmake/FindTargetLAPACK.cmake:30 (find_package); CMakeLists.txt:90 (find_package). -- Configuring incomplete, errors occurred!; See also ""/var/tmp/build/psi4/objdir/external/upstream/ambit/ambit_external-prefix/src/ambit_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/var/tmp/build/psi4/objdir/external/upstream/ambit/ambit_external-prefix/src/ambit_external-build/CMakeFiles/CMakeError.log"".; external/upstream/ambit/CMakeFiles/ambit_external.dir/build.make:106: recipe for target 'external/upstream/ambit/ambit_external-prefix/src/ambit_external-stamp/ambit_external-configure' failed; make[2]: *** [external/upstream/ambit/ambit_external-prefix/src/ambit_external-stamp/ambit_external-configure] Error 1; CMakeFiles/Makefile2:1220: recipe for target 'external/upstream/ambit/CMakeFiles/ambit_external.dir/all' failed; make[1]: *** [external/upstream/ambit/CMakeFiles/ambit_external.dir/all] Error 2. ```; Later on, I'll also try building against CUDA to see if gpu_dfcc now builds (it had the OpenMPMath error when I tried the other day), although that also involves fighting g++ versions, etc...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400326280:1652,error,errors,1652,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400326280,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"e.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:173: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: no matching function for call to ‘psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData()’; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:279: note: candidates are: psi::TableData<T>::TableData(const T&, int, int, int, char, char, char, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:189: note: psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData(const psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&); /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:3285,error,error,3285,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"e/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘)’ before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:173: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: no matching function for call to ‘psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData()’; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:279: note: candidates are: psi::TableData<T>::TableData(const T&, int, int, int, char, ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:2551,error,error,2551,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"e/username/miniconda/bin/psi4"", line 287, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; > G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; > **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; > derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; > dfmp2_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: There are no occupied orbitals with beta spin.; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; > The most recent 5 function calls were:; >; >; >; >; > Printing out the relevant lines from the Psithon --> Python processed input file:; > core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); > core.set_global_option(""DFT_RADIAL_POINTS"", 85); > core.set_global_option(""REFERENCE"", ""uhf""); > set_memory(100000000000); > try:; > --> optimize('pwpb95-d3bj'); > except SCFConvergenceError as e:; > unconverged_scf_wfn = e.wfn; > unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); > core.set_global_option(""GUESS"", ""read""); > optimize('pwpb95-d3bj'); >; > Psi4 stopped on: Friday, 21 August 2020 04:21PM; > Psi4 wall time for execution: 0:00:04.47; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > As I am fairly new to",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879:3429,Error,Error,3429,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682586879,1,['Error'],['Error']
Availability,"e: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; !",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:2674,Error,Error,2674,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,3,['Error'],['Error']
Availability,"eV; Excitation energy: 35.736631 eV; Excitation energy: 36.181398 eV; Excitation energy: 36.845602 eV; Excitation energy: 36.967022 eV; ```. Running the ADC(2) test in both programs showed some slight deviation in energies, but nothing alarming.; ### **QChem 5.1.1 - adc(2) test energies**; ```; Excitation energy: 6.951866 eV; Excitation energy: 6.951866 eV; ```. ### **Psi4 1.3.2 -- adc(2) test energies**; ```; ->	1 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ->	2 A state : 0.2557608 (a.u.), 6.9596066 (eV); Non-iterative: 0.2559128 (a.u.), 6.9637417 (eV); ```. Further, we set up calculations for the systems in [this work](https://aip.scitation.org/doi/10.1063/1.1504708). Please find the calculations for HF and N2 below; I am happy to provide data on the other systems if needed.; Basis set & geometry information for HF and N2 were found in [this work](https://aip.scitation.org/doi/abs/10.1063/1.1386415). ### **HF**; For ADC(1) results, we continue to see no remarkable error. In the ADC(2) results, the HF system's excitation energies calculated by QChem reproduce the results provided in the Trofimov, Stelter, Schirmer paper. However, the energies provided by Psi4 seem to have an inconsistent deviation from the values: for some states, the energies reported are near exact:; ```; Lit: 9.63 eV; Psi4: 9.6455240 eV; QChem: 9.631168 eV; ```; for others, the excitation energy deviates as much as 0.08 eV:; ```; Lit: 15.33 eV; Psi4: 15.2573251 eV; QChem: 15.318842 eV; ```. ### **N2**; In the case of the N2 system, we again saw no errors in the ADC(1) results. QChem continues to be able to reproduce excitation energies for ADC(2) calculations, but in Psi4, for several states in the ADC(2) calculation, we see warnings about a strongly rotated CIS state and zero eigenvalues. ### **Psi4 1.3.2 -- N2 ADC(2) excitation energies**; ```; 1 Ag state : 0.9479767 (a.u.), 25.7957601 (eV); 2 Ag state : 1.0193053 (a.u.), 27.7367101 (eV); #WARNI",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:3079,error,error,3079,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,1,['error'],['error']
Availability,"ealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/8:1172,avail,available,1172,https://psicode.org,https://github.com/psi4/psi4/issues/8,1,['avail'],['available']
Availability,"easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vector picks up some component of the symmetry breaking dimension. In DIIS you can make these problems converge by increasing the DIIS history length, but then you often see that the SCF is actually going up in energy in the later calculation. Increasing the history length from the default (I think mine is 5, 6, or 7 iterations) to something like 15-25 allows the DIIS procedure to find enough linearly independent vectors to enforce that the resulting orbitals are going to belong to an extremal point. However, these points often then turn out to be saddle points, in which you can decrease the energy slightly (or a lot more) by moving some weight from an orbital to another... Then you have the true second-order schemes, like Newton-Raphson SCF and trust region SCF. These are bound to give you a local solution, but they are 1) unreliable and 2) slow in the initial phases of the calculation. It is better to do first some ADIIS/EDIIS to get you to a reasonable solution, and only then start refining it with something fancier. Also GDM is a great solution for the initial phase of the calculation, since as you have a **guarantee** that you are taking a step down in energy. At variance, the first step in DIIS is usually up in energy, and it takes you a few steps to recover from. I'm sure there is always a use for the real second-order methods, but - when properly preconditioned - the gradient descent methods work really well, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:5276,down,down,5276,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,2,"['down', 'recover']","['down', 'recover']"
Availability,"eback (most recent call last):; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/bin/psi4"", line 272, in <module>; exec(content); File ""<string>"", line 100, in <module>; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 431, in energy; return driver_nbody.nbody_gufunc(energy, name, ptype='energy', **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 225, in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 411, in compute_nbody_components; current_mol = molecule.extract_subsets(list(pair[0]), ghost). RuntimeError: ; Fatal Error: Coordinates have been set in the wrong order; Error occurred in file: /home/vulcan/vadmin/programs/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 239 ; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::operator=(psi::Molecule const&); psi::Molecule::Molecule(psi::Molecule const&); ```. Given that the user's problem is failure for the SCF to converge, I can only assume some change since the 1.2.1 release is at fault. I've been able to get the crash with the following simplified input file:; ```; molecule dimer {; 1 1; C1 0.000000 0.513942 0.000000; N2 0.628754 1.703580 0.000000; H3 0.109407 2.571793 0.000000; H4 1.638743 1.762759 0.000000; N5 -1.342220 0.473050 0.000000; H6 -1.890262 1.323784 0.000000; H7 -1.839824 -0.407373 0.000000; N8 0.700723 -0.623756 0.000000; H9 1.712010 -0.555355 0.000000; C10 0.085273 -1.957243 0.000000; H11 0.892679 -2.697454 0.000000; H12 -0.522596 -2.104233 0.905528; H13 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325:1192,Error,Error,1192,https://psicode.org,https://github.com/psi4/psi4/issues/1325,2,['Error'],['Error']
Availability,"ecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34324,error,error,34324,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12723,error,error,12723,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- LAZ Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-linux-gnu/libpthread.so ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:99 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:45 (find_dependency); CMakeLists.txt:25 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/CMakeFiles/CMakeOutput.log"".; CMakeFiles/psi4-core.dir/build.make:108: recipe for target 'psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure' failed; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure] Error 1; CMakeFiles/Makefile2:646: recipe for target 'CMakeFiles/psi4-core.dir/all' failed; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2. ```; (I'm not convinced that uncommenting the cmake_print_properties bit at the end of FindMathOpenMP.cmake produced much more in the way of output.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516:4882,error,errors,4882,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516,4,"['Error', 'error']","['Error', 'errors']"
Availability,"ects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(158): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::reference reference;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:13685,error,error,13685,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"ecule {; H; H 1 0.60; }. set basis cc-pVDZ; set docc [ 1, 0, 0, 0, 0, 0, 0, 0 ]; # STO-3G active space; set active [1, 0, 0, 0, 0, 1, 0, 0 ]; energy('casscf'); ```; fails with the up-to-date master branch with the error message; ```; Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 519, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 5483, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 153, in mcscf_solver; nci_iter = ciwfn.diag_h(abs(ediff) * 1.e-2, orb_grad_rms * 1.e-3). RuntimeError: ; Fatal Error: DSYEV diagonalizer failed in DETCI SEM!; Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""cc-pVDZ""); core.set_global_option(""DOCC"", [ 1, 0, 0, 0, 0, 0, 0, 0 ]); core.set_global_option(""ACTIVE"", [1, 0, 0, 0, 0, 1, 0, 0 ]); --> energy('casscf'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: DSYEV diagonalizer failed in DETCI SEM! !; ! Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3096:1605,Error,Error,1605,https://psicode.org,https://github.com/psi4/psi4/issues/3096,2,['Error'],['Error']
Availability,"ed here, and for generating the third-order induction amplitudes that are reused here. However, unlike most of the stuff in `libsapt_solver`, the code is AO-based and the two-electron integrals enter only via generalized J/K matrices. Therefore, I had to export some additional AO quantities in `libsapt_solver/sapt.h` and I don't know if I did this in an optimal way.; - [x] Note to self: frozen core still needs to be checked. ## Design (Big-Picture) Questions - input from @CDSherrill @dgasmith @loriab and others will be highly beneficial!; - [ ] The three new(ish) beyond-S^2 corrections, E(20)exch-ind, E(20)exch-disp, and E(30)exch-ind cannot be currently calculated by a single SAPT call: the first two require `energy('sapt(dft)')` and the last one `energy('sapt2+3')`. That's quite unfortunate and we need a better workflow, possibly by making the non-S^2 E(20)exch-ind,resp and E(20)exch-disp available as part of `energy('sapt0')`.; - [ ] What should go into aggregate SAPT energy values, S^2 or non-S^2? I made the code pick the non-S^2 value of E(30)exch-ind,resp if available, but I'd be happy to revert it back to picking E(30)exch-ind,resp(S^2). At present, I don't think the non-S^2 values of E(20)exch-ind,resp and E(20)exch-disp are ever included in total SAPT numbers, maybe they should?; - [ ] Finally, the option names such as `do_ind30_exch_sinf` are somewhat unfortunate because they propagate the misconception that you include effects all the way to S^infinity. In reality, the largest power of overlap integral S you ever need is min(NelA,NelB) - after that, you run out of electrons to exchange between A and B. **Nonapproximated**, **Nonexpanded**, and **beyond-S^2** are all formally more correct names than S^infinity. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2314:2220,avail,available,2220,https://psicode.org,https://github.com/psi4/psi4/pull/2314,1,['avail'],['available']
Availability,"ed out>) at Python/ceval.c:4161 ; > > #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084 ; > > #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679 ; > > #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; > > args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; > > kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433 ; > > #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0) ; > > at Python/ceval.c:771 ; > > #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; > > locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981 ; > > #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0) ; > > at Python/pythonrun.c:1914 ; > > #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) () ; > > from /usr/lib/libboost_python3.so.1.54.0 ; > > #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446 ; > > #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111 ; > > Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. ; > > ; > > Thanks! ; > > ; > >  ; > > Reply to this email directly or view it on GitHub. ; > > ; > > ; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12#issuecomment-22192736:8336,down,down,8336,https://psicode.org,https://github.com/psi4/psi4/issues/12#issuecomment-22192736,1,['down'],['down']
Availability,"el-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 1681, in frequency; H, wfn = hessian(lowername, return_wfn=True, molecule=molecule, **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 1332, in hessian ; fmaster.write(p4util.format_options_for_input(moleculeclone, **kwargs)). TypeError: a bytes-like object is required, not 'str'; ```. The culprit is exactly what the traceback says: fmaster is opened in binary mode and format_options_for_input returns a string. Python 2 would let you write a string to a binary file, but Python 3 expects bytes. I can fix this locally by adding the required .encode('utf-8') calls to that line as well as several lines afterwards, starting around 1370. If that was all, I would just fix this myself, but sowing is useless without reaping, and the reaping bug is trickier. The displacement files include bytes encoded from UTF-8 and also bytes dumped from pickle (the gradient kwargs). In general, pickle bytes will not be intelligible in any text encoding scheme. Python 2's naive approach to bytes means this is not a problem. When you try to run one of those files with Python 3-compiled Psi4, however... ```Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/usr/local/psi4/bin/psi4"", line 230, in <module>; content = f.read(); File ""/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/codecs.py"", line 321, in decode; (result, consumed) = self._buffer_decode(data, self.errors, final); UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 440: invalid start byte; ```. Python 3 tries to read all the bytes as UTF-8. This fails for the pickled bytes, so Psi4 crashes. Even if you read the file as binary, you would still have to (somehow) instruct Python 3 which parts of the file should be UTF-8 decoded and which parts should be pickle-loaded.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/833:2307,error,errors,2307,https://psicode.org,https://github.com/psi4/psi4/issues/833,1,['error'],['errors']
Availability,"ema(conformer=0); psi4.set_num_threads(4); psi4.set_memory(5e+9). xtb_opt = xtb_ff_opt(qc_mol=qc_mol); opt_molecule = Molecule.from_qcschema(xtb_opt); conformer_Ang = opt_molecule.conformers[0].to(unit.angstrom).m. #Generate Grid to calculate properties to; grid = generate_grid(molecule = molecule, ; conformer= opt_molecule.conformers[0].to(unit.bohr), ; grid_settings=grid_settings); grid = grid.to(unit.angstrom).m; numpy.savetxt(""grid.dat"", grid, delimiter="" "", fmt=""%16.10f""). psi4.set_options({""ddx"": ""true"",; ""DDX_SOLVENT_EPSILON"": 70.84,; ""DDX_RADII_SET"": ""uff"",; ""DDX_MODEL"": ""PCM""}). conformer_Ang_string = ""nocom\nnoreorient\n""; for index, atom in enumerate(opt_molecule.atoms):; conformer_Ang_string += f""{SYMBOLS[atom.atomic_number]}\t{conformer_Ang[index, 0]}\t{conformer_Ang[index, 1]}\t{conformer_Ang[index, 2]}\n"". molecule_psi4 = psi4.geometry(conformer_Ang_string.strip()); print(molecule_psi4); molecule_psi4.set_units(GeometryUnits.Angstrom). E, wfn = psi4.energy('PBE0-D3BJ/def2-TZVPPD', molecule = molecule_psi4, return_wfn = True); psi4.oeprop(wfn,""GRID_ESP"",""GRID_FIELD"",""MULLIKEN_CHARGES"", ""LOWDIN_CHARGES"", ""DIPOLE"",""QUADRUPOLE"", ""MBIS_CHARGES""); print( wfn.variable(""MULLIKEN_CHARGES"")); log_memory_usage(); #very basic error handling; except Exception as e:; continue. if __name__ == ""__main__"":; main(); ```. For the minimal example above, memory usage slowly rises too (I have checked the QCEngine tools and this is not occurring here):. ```; Memory Usage: 484.4296875 MB; Memory Usage: 632.46875 MB; Memory Usage: 634.3203125 MB; Memory Usage: 635.75390625 MB; Memory Usage: 636.6015625 MB; Memory Usage: 676.36328125 MB; Memory Usage: 676.7109375 MB; Memory Usage: 676.7421875 MB; Memory Usage: 676.77734375 MB; Memory Usage: 676.8046875 MB; Memory Usage: 676.890625 MB; Memory Usage: 676.921875 MB; Memory Usage: 676.98828125 MB; Memory Usage: 677.015625 MB; Memory Usage: 677.03125 MB; ```. Apologies for the long post but I wanted to add as much info as possible!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3146:8579,error,error,8579,https://psicode.org,https://github.com/psi4/psi4/issues/3146,1,['error'],['error']
Availability,enhances the visibility of psi4's error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1862:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/1862,1,['error'],['error']
Availability,eom-ccsd error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/786:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/786,1,['error'],['error']
Availability,"eometric\\optimize.py"", line 779, in Optimize\n return optimizer.optimizeGeometry()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 692, in optimizeGeometry\n self.calcEnergyForce()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 283, in calcEnergyForce\n spcalc = self.engine.calc(self.X, self.dirname, read_data=(self.Iteration==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1470, in calc\n return self.calc_new(coords, dirname)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1461, in calc_new\n raise QCEngineAPIEngineError(""QCEngineAPI computation did not execute correctly. Message: "" + ret[""error""][""error_message""])\ngeometric.errors.QCEngineAPIEngineError: QCEngineAPI computation did not execute correctly. Message: QCEngine Execution Error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 114, in compute_wrapper\n yield metadata\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\compute.py"", line 105, in compute\n output_data = executor.compute(input_data, config)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 121, in compute\n pversion = parse_version(self.get_version())\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 89, in get_version\n with popen([which_prog, ""--version""]) as exc:\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\contextlib.py"", line 113, in __enter__\n return next(self.gen)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 304, in popen\n ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 858, in __",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:1788,Error,Error,1788,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['Error'],['Error']
Availability,"erived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true>, true, false, boost::shared_ptr<psi::Matrix>, unsigned long, boost::shared_ptr<psi::Matrix> >::base_set_item(std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >&, _object*, _object*) in export_mints.cc.o; boost::python::vector_indexing_suite<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true, boost::python::detail::final_vector_derived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true> >::base_append(std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >&, boost::python::api::object) in export_mints.cc.o; ...; ""_PyExc_ValueError"", referenced from:; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); ""_PyFile_AsFile"", referenced from:; boost::python::exec_file(boost::python::str, boost::python::api::object, boost::python::api::object) in libboost_python-1_57.a(exec.o); ""_PyFile_FromString"", referenced from:; boost::python::exec_file(boost::python::str, boost::python::api::object, boost::python::api::object) in libboost_python-1_57.a(exec.o); ""_PyFloat_FromDouble"", referenced from:; boost::python::to_python_value<double const&>::operator()(double const&) const in export_mints.cc.o; boost::python::to_python_value<double&>::operator()(double const&) const in export_mints.cc.o; boost::python::converter::arg_to_python<double>::arg_to_python(double const&) in export_mints.cc.o; boost::python::to_python_value<double const&>::operator()(double const&) const in export_functional.cc.o; boost::python::to_python_value<double const&>::operator()(double const&) const in export_chkpt.cc.o; boost::python::to_python_value<double const&>::operator()(double const&) const in export_blas_lapack",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:27861,error,errors,27861,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,1,['error'],['errors']
Availability,"error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36817,error,error,36817,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,error in wfn.tofile while calculating hessian,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3068:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/issues/3068,1,['error'],['error']
Availability,error is a Windows install of conda that chocolatey seems to be failing connection on today. It was passing CI earlier.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-565980810:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-565980810,1,['error'],['error']
Availability,error when trying to import psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2294:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/issues/2294,1,['error'],['error']
Availability,error: use of undeclared identifier 'errno',MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2810:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/issues/2810,1,['error'],['error']
Availability,"esolve the issue. in fact, running in `c2v` produces different energies, but they don't match GAMESS or the `symmetry c1` case:; ```; Psi4 LiCN/6-31G* (symmetry c2v, default [Davidson] solver); CI ROOT 1 TOTAL ENERGY:-99.52581092382692; CI ROOT 2 TOTAL ENERGY:-99.50960136455492; CI ROOT 3 TOTAL ENERGY:-99.47046293582866; CI ROOT 4 TOTAL ENERGY:-99.43820506440449; CI ROOT 5 TOTAL ENERGY:-99.39012366739456; CI ROOT 6 TOTAL ENERGY:-99.37979350854745; ```; maybe it's a preconditioner issue? the Davidson seems to converge in just one step for c1 and c2v. I suppose it's possible the guess space just isn't grabbing roots for all symmetries, but increasing the number of roots to 30 doesn't change the results. perhaps more disturbing, though, is that the in-core diagonization routine `RSP` gives yet another set of results:; ```; Psi4 LiCN/6-31G* (symmetry c1, RSP solver); CI ROOT 1 TOTAL ENERGY:-99.58887523722994; CI ROOT 2 TOTAL ENERGY:-99.56069933848028; CI ROOT 3 TOTAL ENERGY:-99.56069933848008; CI ROOT 4 TOTAL ENERGY:-99.53483755106353; CI ROOT 5 TOTAL ENERGY:-99.53483755106343; CI ROOT 6 TOTAL ENERGY:-99.53418772103414; ```; here, we find 3 roots lower in energy than either GAMESS or the default Psi4 routines, and we also recover the -99.534837 E_h root, but this time as a doubly-degenerate state. the other routines mentioned in [the manual; ](https://psicode.org/psi4manual/master/autodoc_glossary_options_c.html#term-DIAG_METHOD-DETCI) are deprecated kwargs (see also: #2640 ), so I can't test them. . given [`np.linalg.eigh`](https://numpy.org/doc/stable/reference/generated/numpy.linalg.eigh.html) just uses LAPACK's syevd/heevd, and `RSP` is just supposed to be LAPACK's dsyev, this result is very perturbing. . I've attached output files for the [Davidson](https://github.com/psi4/psi4/files/13431543/output_dav.txt) and [RSP](https://github.com/psi4/psi4/files/13431545/output_rsp.txt) schemes, as well as [GAMESS](https://github.com/psi4/psi4/files/13431555/output_gms.txt).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3083:2729,recover,recover,2729,https://psicode.org,https://github.com/psi4/psi4/issues/3083,1,['recover'],['recover']
Availability,"esolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), fci, cepa(1), cepa(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:9411,error,error,9411,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['error']
Availability,"essian to test safety of projecting rotations. Instead assuming unsafe. Can pass `ref_gradient` array to test on or `set findif fd_project T/F` explcitly to control.; - `psi4.QMMM()` object replaced by `embedding_charges` kwarg in Bohr. See extern examples for details.; - `json_ret = psi4.schema_wrapper.run_qcschema(json_input)` not `json_ret = psi4.json_wrapper.run_json(json_input)`. `json_ret` is now an object, so `.` access, not dictionary.; - CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. This is no longer happening, so for occasional string modelchem calcs, you may need to add a clean in the input.; - extern object units are bohr, not whatever the Molecule was.; - `psi4 --module` returns the path for loading via `import psi4`. opposite of `psi4.executable`; - `psi4.set_output_file` now wraps `psi4.core.set_output_file` and additionally sets up a truncating python logging file with `.log` extension at the same time as the `.out` file.; - Besides the input.dat/output.dat exception, default output naming simplified to always `.out` of input file name. If input has out or log extension (weird), extra extension added.; - Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - A Logging file has been introduced. All its contents should be considered experimental and subject to change. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351:3135,down,down,3135,https://psicode.org,https://github.com/psi4/psi4/pull/1351,1,['down'],['down']
Availability,est); dfccsd-grad = 43.20 sec*proc (1 test); dfccsd-t-grad = 38.87 sec*proc (1 test); dfccsdat = 20.44 sec*proc (1 test); dfccsdl = 4.62 sec*proc (1 test); dfccsdt = 10.41 sec*proc (1 test); dfep2 = 7.13 sec*proc (2 tests); dfmp2 = 121.95 sec*proc (11 tests); dfomp2 = 943.08 sec*proc (7 tests); dfomp2.5 = 233.40 sec*proc (4 tests); dfomp3 = 229.00 sec*proc (4 tests); dfscf = 28.93 sec*proc (1 test); dft = 5629.04 sec*proc (26 tests); docs = 1.78 sec*proc (2 tests); ecp = 57.50 sec*proc (2 tests); fci = 7.32 sec*proc (2 tests); fcidump = 6.32 sec*proc (1 test); findif = 698.00 sec*proc (5 tests); fnocc = 141.78 sec*proc (4 tests); freq = 1043.60 sec*proc (6 tests); gradient = 1568.40 sec*proc (16 tests); json = 19.71 sec*proc (8 tests); longtests = 933.44 sec*proc (5 tests); mcscf = 5.98 sec*proc (3 tests); minitests = 44.49 sec*proc (3 tests); mints = 40.79 sec*proc (14 tests); misc = 369.08 sec*proc (16 tests); mp2 = 283.13 sec*proc (13 tests); nbody = 73.23 sec*proc (2 tests); numpy = 1.44 sec*proc (1 test); ocepa = 739.92 sec*proc (6 tests); omp = 845.55 sec*proc (18 tests); opt = 956.86 sec*proc (21 tests); prop = 1.97 sec*proc (1 test); properties = 104.12 sec*proc (10 tests); psi = 34317.61 sec*proc (400 tests); psi4numpy = 23.83 sec*proc (6 tests); psimrcc = 87.03 sec*proc (8 tests); python = 1082.76 sec*proc (10 tests); pywrap = 3836.93 sec*proc (12 tests); quicktests = 4351.03 sec*proc (137 tests); rasci = 45.35 sec*proc (3 tests); sapt = 1501.22 sec*proc (20 tests); scf = 6069.20 sec*proc (51 tests); shorttests = 47.02 sec*proc (4 tests); smoketests = 175.49 sec*proc (11 tests); stability = 7.67 sec*proc (2 tests); tutorial = 383.76 sec*proc (6 tests); x2c = 76.86 sec*proc (3 tests). Total Test time (real) = 3000.10 sec. The following tests FAILED:; 	360 - cubeprop-esp (Failed); 	371 - dft-bench-interaction (Timeout); 	373 - pywrap-align (Failed); 	374 - pywrap-align-chiral (Failed); 	401 - json-schema_0_properties (Failed); Errors while running CTest; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:40052,Error,Errors,40052,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Error'],['Errors']
Availability,"est_dertype.py` and was never run. This unused fn and its testing was removed and replaced by the ddd version.; - [x] the new `negotiate_derivative_type` function probes managed methods earlier than before, so it happens that the exact error names (not the text) expected by stdsuite change.; - [x] the new `negotiate_derivative_type` function is called early, so it now handles the methodname typo helper (""Did you mean?"") that FAE added. The independent `_method_exists()` fn removed.; - [x] the former function `_set_convergence_criterion` where you passed in 5 integers for the different E/D_CONVERGENCE values has been rewritten as `negotiate_convergence_criterion` where you pass in a tuple of the case (e.g., `(2, 1)` is Hessian by findif of gradients). In actual `driver.py`, the function calls have been switched out. The values set are the same, but the arguments like `(1, 0)` aren't necessarily appropriate in this non-ddd driver code routing.; - [x] the former function `_find_derivative_type` has been replaced by three functions headed up by `negotiate_derivative_type`. For both, the goal is to take a method name, the target derivative, and any user modifications and return the appropriate analytic or findif strategy or produce a helpful error. sounds simple, but managed methods and cbs specs complicate things. In ddd, this function is called early, not piecemeal throughout the driver, so more probing has been consolidated into the new function. In actual `driver.py`, the function calls have been switched out, but it's only using half the info due to differences in non-ddd driver code routing. To mirror ddd behavior, the function is called even for energy() and properties(), mostly to take the place of `_method_exists()`. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2536:1786,error,error,1786,https://psicode.org,https://github.com/psi4/psi4/pull/2536,1,['error'],['error']
Availability,"ests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:4115,Error,Error,4115,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"et qc_module occ`) until further optimized); - [x] uhf df a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd-ccd E; - [x] uhf cd-ccsd E; - [x] uhf cd-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] pick over canonical methods and run some basic timings tests; - [x] TODO: kill `new` pass; - [x] TODO: there might be UHF CCD in there, too.; - [x] TODO: merge #2731 first. it has a lot of stdsuite changes that I don't want to rebase through. nevertheless, stdsuite on the new methods is working fine locally. the azure errors are that uhf cc methods are running rather than throwing NYI as it expects.; - [x] TODO: df ccsd(t) gradients need to be marked experimental and semi-hidden until optimization. REVISED 25 Oct; ```; Module comparison timings [s] for CCSD & CCSD(T) energy & gradient; * Benzene, C6H6; * Either aug-cc-pVDZ (192 nbf) or cc-pVDZ (119 nbf); all-electron; * Same singlet system run as RHF & UHF; * CC converged to 1e-7; * 20 GiB, 8 threads. GRADIENT ENERGY; symm c1 symm c1; ---- ---- ---- ----; <<< CCSD/aug-cc-pVDZ >>>. cfour (vcc) rhf conv 132 1650 52 1202 ; ccenergy rhf conv 266 2037 92 1099; dfocc rhf df n/a 420 n/a 230; fnocc rhf df n/a 149. cfour uhf conv 225 3473 90 2413 ; ccenergy uhf conv 463 5196 222 2576; dfocc uhf df n/a 1545 n/a 826. cfour u/r ratio 1.7 2.1 1.7 2.0 ; ccenergy u/r ratio 1.7 2.5 2.4 2.3; dfocc u/r ratio n/a 3.7 n/a 3.6; ```. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2739:1559,error,errors,1559,https://psicode.org,https://github.com/psi4/psi4/pull/2739,1,['error'],['errors']
Availability,"etci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error: DETCI: electrons detected outside of active space. Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/detci/params.cc on line: 949; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. Please could you go through it and see if you would find what's still wrong with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:2505,Error,Error,2505,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631,2,['Error'],['Error']
Availability,"etric.optimize.Optimize(coords, M, IC, engine, dirname, params, print_info = (ic==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 779, in Optimize\n return optimizer.optimizeGeometry()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 692, in optimizeGeometry\n self.calcEnergyForce()\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\optimize.py"", line 283, in calcEnergyForce\n spcalc = self.engine.calc(self.X, self.dirname, read_data=(self.Iteration==0))\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1470, in calc\n return self.calc_new(coords, dirname)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\geometric\\engine.py"", line 1461, in calc_new\n raise QCEngineAPIEngineError(""QCEngineAPI computation did not execute correctly. Message: "" + ret[""error""][""error_message""])\ngeometric.errors.QCEngineAPIEngineError: QCEngineAPI computation did not execute correctly. Message: QCEngine Execution Error:\nTraceback (most recent call last):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 114, in compute_wrapper\n yield metadata\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\compute.py"", line 105, in compute\n output_data = executor.compute(input_data, config)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 121, in compute\n pversion = parse_version(self.get_version())\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\programs\\psi4.py"", line 89, in get_version\n with popen([which_prog, ""--version""]) as exc:\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\contextlib.py"", line 113, in __enter__\n return next(self.gen)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:1678,error,errors,1678,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['error'],['errors']
Availability,"evel'; (whatever its final name or design) is that a user could easily elect the; degree to which the optimizer should try different things to reach; convergence. On Tue, Nov 6, 2018 at 4:47 PM Lori A. Burns <notifications@github.com>; wrote:. > PRs psi-rking/optking#24 <https://github.com/psi-rking/optking/pull/24>; > and #1335 <https://github.com/psi4/psi4/pull/1335> are a pair. Together,; > they get most optimizations working for Psi. In particular have working:; >; > - ordinary, opt-is-full job optimizations; > - collecting all the psivars so psi can read them in. basically,; > collecting enough to generate a skeleton (mol, basis, psivars) that can be; > passed back from psi4.optimize(..., return_wfn=True); > - inlining optking's logging output into the psi4 output file; > - resetting psi4's options on either side of the; > optking.run_json_dict() call. The trouble was that the psi4-s imported; > by optking were clearing and setting options (as is proper for indep json; > runs) such that the calling psi4 didn't have its original options in; > globals upon optking termination; > - starting to catch optking errors (str in json) and re-raising them; > as psi4 errors.; >; > Yes, that AlgError vs OptError for exceeding geom_maxiter really stumped; > me for a while b/c I only got the final error (""dynamic level exceeded""); > and I thought it was behaving differently btwn direct optking and psi4; > initiated runs. To me it seems clear that if geom_maxiter is exceeded, then; > optimizer quits directly (though perhaps that's clearer when geom_maxiter=2; > than =200).; >; > @psi-rking <https://github.com/psi-rking> @AlexHeide; > <https://github.com/AlexHeide>; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1335#issuecomment-436437450>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTHzCC2j_z9TFbx5ofRV3X4D0BTSDks5ushF5gaJpZM4YQL0t>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1335#issuecomment-436668061:1407,error,errors,1407,https://psicode.org,https://github.com/psi4/psi4/pull/1335#issuecomment-436668061,3,['error'],"['error', 'errors']"
Availability,"except for the last they all give the same error with not finding cdefs.h; ```; /usr/include/features.h(367): catastrophic error: cannot open source file ""sys/cdefs.h""; # include <sys/cdefs.h>; ```. last one gives:; icpc --sysroot=$CONDAENV/x86_64-conda_cos6-linux-gnu/sysroot -Qlocation,ld,$CONDAENV/x86_64-conda_cos6-linux-gnu/bin hello.cc -o hello && ./hello; ```; In file included from hello.cc(1):; /usr/include/c++/5/iostream(38): catastrophic error: cannot open source file ""bits/c++config.h""; #include <bits/c++config.h>; ```; file exist here: /usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869:43,error,error,43,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386733869,3,['error'],['error']
Availability,expand psicode.org/downloads,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1840:19,down,downloads,19,https://psicode.org,https://github.com/psi4/psi4/issues/1840,1,['down'],['downloads']
Availability,extra note: `svml` error seems to pop up when switching Intel versions — not pinned down to compiler/mkl/etc.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1036#issuecomment-395821551:19,error,error,19,https://psicode.org,https://github.com/psi4/psi4/issues/1036#issuecomment-395821551,2,"['down', 'error']","['down', 'error']"
Availability,"f this issue by @dgasmith and Matt Schieber. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] ~~This PR identifies which of MKL, OPENBLAS, etc. has been detected by ConfigMath.~~ Identify MKL-or-not by searching for ""mkl"" in the full lapack library list, whether detected math or passed-in math. Colors ""MKL LAPACK"" to screen if ""on"". If MKL, attaches the `USING_LAPACK_MKL` compiler definition to the `tgt::lapack` target that every module of Psi4 is linked with. Thus we're getting MKL threading again.; - [x] Adds min version tags for dkh, gdma, erd; - [x] Adjusts where the required check comes in for hdf5 so we don't get an warning; - [x] Add docs with examples of math detection; - [x] Remove unused routes in math detection: explicit, external, mkl_flag; - [x] ConfigMath now FATAL_ERRORs if math libs _not_ found; - [x] Newly pays attention to headers for math. Only required for MKL.; - [x] Add a threading testing script for general maintenance, see comment below. In general tests where MKL found. Has compare_values, but really better suited for running by hand and judging results, as `-jN` defeats the purpose.; - [x] Added some CCSD(T) table docs requested by @CDSherrill ; * **User-Facing for Release Notes**; - [x] Change Mac math precedence to `MKL SYSTEM_NATIVE OPENBLAS ESSL ATLAS ACML` so native accelerate only behind MKL; - [x] New mechanism to pass in math libs explicitly through `LAPACK_LIBRARIES` and `LAPACK_INCLUDE_DIRS`; - [x] Collects all the addon libraries into a list, then forms RPATH of internal (relative to ORIGIN), then all non-static, non `/usr/` paths. Redundancy removed and math libs paths _always_ first. This takes over from `INSTALL_RPATH_USE_LINK_PATH`.; - [x] Bumped CMake minimum version to 3.2; - [x] Added some extra badges to README. ## Questions; - [x] I had already implemented the isMKL? detection in ConfigMath before I looked back and found [mkl testing] (https://github.com/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/615:1965,mainten,maintenance,1965,https://psicode.org,https://github.com/psi4/psi4/pull/615,1,['mainten'],['maintenance']
Availability,"fc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46556,error,error,46556,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,fcidump.py np.einsum errors on some architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465:21,error,errors,21,https://psicode.org,https://github.com/psi4/psi4/issues/1465,1,['error'],['errors']
Availability,"ferent) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3461,Error,Error,3461,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"few comments:. It's the ia32 (32bit) build, the x86_64 one is here:; https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=amd64&ver=1%3A1.2.1-1&stamp=1546603567&raw=0. > * no need for boost at all (`libboost-atomic1.67-dev libboost-atomic1.67.0 libboost-chrono-dev`). Thanks, I thought I had removed them already. > * psi 1.2 won't work with py < 3.5 (`Get:19 http://debian.csail.mit.edu/debian unstable/main i386 python2.7 i386 2.7.15-5 [299 kB]`). It is using python3, this must be some indirect dependency which I can do nothing about.; ; > * production needs at least AM6 (`-DMAX_AM_ERI=4`) and preferably 7 or 8. OK, I will look into that. > * I think you were the one who wanted to be able to use a default theme rather than the psi custom one. this is available now (`-- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme`). Hrm right, I will take another look at building the manual, thanks for pointing that out. > * threaded blas that's not mkl can go wrong (`CMake Warning at external/common/lapack/CMakeLists.txt:50 (message):`) and unfortunately the test suite in single thread mode can't catch it. would be good to test it, perhaps with this script https://github.com/psi4/psi4/blob/master/psi4/share/psi4/scripts/test_threading.py#L270. Ok, I'll try to run that during bulid as well. > * Unfortunately solutions to test failures aren't leaping to mind. Some are very strange for a consistent codebase (`TypeError: set_memory_bytes(): incompatible function arguments. The following argument types are supported:`). That one is likely due to 32bit: `tests/options1/input.dat` tried to allocate more than 4 GB in the last two attempts in the `check set_memory() wrapper` test; the same applies to `json-v11-energy` and `json_data[""memory""] = ""5GB""`. . So those are accounted for, the ones which are weird are the . ```; Exit Status: infile ( -11 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```; failures. I've updated the packaging and am running a new build/test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762:1562,failure,failures,1562,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451519762,2,['failure'],['failures']
Availability,"fference test. My problem is that _I have absolutely no idea how to do this without going through gradient_. If I naively go through properties, the OPDM relaxation terms get dropped because they are expensive. But if I explicitly order OPDM relaxation terms... ```; molecule { ; O; H 1 1.0 ; H 1 1.0 2 101.5; }. set opdm_relax true. properties('ccsd/cc-pvdz'); ```. The `cc` module rebels and informs me that it is `Turning orbital relaxation off since only onepdm is requested.` (TPDM is needed to construct the CC orbital gradient needed for the Z-vector equation.). Who told `cc` to only compute the OPDM? [This line of driver code, which the user cannot override.](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3124) Although [docs report](https://github.com/psi4/psi4/blob/master/psi4/src/read_options.cc#L1812) that this flag controls whether the onepdm is computed, internal `ccdensity` [says](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/cc/ccdensity/Params.h#L49) the flag controls whether the 1PDM _alone_ is computed, implicitly denying the 2PDM from ever being computed. Pinging @loriab for all things keyword standardization and @lothian in case you had a reason for [coding this](https://github.com/psi4/psi4archive/commit/575ec501ee7638cf4ff0c373f78e03ae6aac00c4). In my view:; - Keyword `onepdm` should be renamed to something like `onepdm_only`.; - `onepdm_only` default changes to `true`.; - Requesting either `relax_opdm` or a method that inherently requires 2-electron densities (gradients for sure) trumps `onepdm_only`.; - In all other cases, the driver is no longer responsible for setting `onepdm_only`.; - Default for `relax_opdm` remains false, and therefore, 2PDM will not be computed unless necessary. If we're agreed, I'm happy to make these changes. I'm more afraid of the current state of densities in Psi than I am of legacy code. We would need to discuss how we want to handle deprecation, and which CC properties need the 2PDM.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2432:1412,Ping,Pinging,1412,https://psicode.org,https://github.com/psi4/psi4/issues/2432,1,['Ping'],['Pinging']
Availability,"first B iteration, not the last, so they have canonical values. `SCF TOTAL ENERGY` still from first B iteration.; * `(BCCD|BCCD(T)) CORRELATION ENERGY` now defined as total E of last B iteration minus HF of first B iteration. This is in accordance with the pattern that `mtd CORRELATION ENERGY` = `mtd TOTAL ENERGY` - `SCF TOTAL ENERGY`, but it is admittedly wacky when applied to Brueckner. It is, however, the same way the orbital-optimized methods of occ/dfocc have been handled. The OO methods additionally set a `mtd REFERENCE CORRECTION ENERGY` so that one can recover the ref/corl split of the final OO iteration. That could be added to the BCCD methods. Does the above sound ok, or does it need further reworking? I also tightened up the B r_conv formula a bit because the standard tests (not shown in PR) weren't matching (to 1.e-6) the highly converged values under default conditions (e_conv = 6 --> brueckner_r_conv =4). I've also been on a rampage of late to better (and automatically) document what methods are available under what detailed conditions (e.g., dertype, reference, conv/df/cd type, all-electron/frozen-core). I'd like to add the table snapshotted below to the main [CC docs page](https://psicode.org/psi4manual/master/cc.html). Unfortunately, it doesn't cover excited states or properties, so it can't replace the existing summary table, but it does provide more detail. Does it look ok, and are there any cc* capabilities in the ground-state realm that I've missed?. **Note:** No worries if the CI on this fails. I've copied over the stuff that's important to look at, not necessarily all needed to run. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Add and change definitions of qcvars for BCCD and BCCD(T); - [x] Tighten default Brueckner convergence. <img width=""921"" alt=""Screen Shot 2022-08-30 at 12 34 26 AM"" src=""https://user-images.githubusercontent.com/2314730/187350163-42fff29c-3159-404f-9177-ae4cf8e",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708:1593,avail,available,1593,https://psicode.org,https://github.com/psi4/psi4/pull/2708,1,['avail'],['available']
Availability,"fit.gbs ); for((ib=0;ib<${#b[@]};ib++)); do for((jb=0;jb<ib;jb++)); do echo -n ""${b[ib]} vs ${b[jb]}: ""; diff ${b[ib]} ${b[jb]}| wc -l;done;done; def2-qzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 4; def2-sv_p_-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1727; def2-sv_p_-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1723; def2-svp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvpp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvpp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvpp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-tzvp-jkfit.gbs: 0; ```. According to @bennybp the sets should be all the same, see https://github.com/MolSSI-BSE/basis_set_exchange/issues/103. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] remove redundant def2-*-[jk|j]fit basis sets. Presuming Susi accepts my PR, this one will additionally accomplish; - [x] fixes #1798 At least make all the def2 orbital and rifit basis sets parseable. These have been read through diff_gbs.py so I know all the elements parse now. Variety of errors found.; - [x] helps #1804 by redirecting def2-*-jkfit specifications toward the universal files. only took about four files to find a satisfactory and minimally disruptive place for a simple map-and-warn :-(; - [x] helps plugins like v2rdm_casscf that are adding internal pb11 by attaching the found Python headers location to the plugin target. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1804:2245,redundant,redundant,2245,https://psicode.org,https://github.com/psi4/psi4/pull/1804,2,"['error', 'redundant']","['errors', 'redundant']"
Availability,fix error string checking for pytest 5,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1674:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/pull/1674,1,['error'],['error']
Availability,"fix for this has commenced at https://github.com/obrien951/sns-mp2/tree/serial_wfn . it doesn't strictly involve psi4 changes, so it's possible we may mint v1.3 and then produce a new `psi4-rt` conda metapackage with snsmp2 restored after the fix is available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1514#issuecomment-465349722:250,avail,available,250,https://psicode.org,https://github.com/psi4/psi4/issues/1514#issuecomment-465349722,1,['avail'],['available']
Availability,fix short-term CheMPS2 outage,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/576:23,outage,outage,23,https://psicode.org,https://github.com/psi4/psi4/pull/576,1,['outage'],['outage']
Availability,"fixed_dihedral is at least allowing the calculation to run, but it appears as soon as the next optimization cycle starts the following error code pops up ""Process finished with exit code -1073741819 (0xC0000005)"". wondering if the scratch data is the cause? ""Scratch directory: C:\Users\vike\AppData\Local\Temp/"". Is there a way to specify the scratch directory?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1485964679:135,error,error,135,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1485964679,1,['error'],['error']
Availability,flat namespace errors are a nightmare.. It is easier and faster to compile against the `psi4-dev` miniconda package.; It comes with a cmake advisor (run `psi4-path-advisor -h)` that will set a correct `cmake` command line with proper flags and library location.; Custom CXX_FLAGS should not be needed anymore then.; You can use the miniconda provided gcc/clang setup or your own gcc. edit: This way you also ensure your python and psi4 has the same numpy/mkl setup.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614781646:15,error,errors,15,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614781646,1,['error'],['errors']
Availability,"fnocc::CoupledCluster::compute_energy() (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x1330A20: psi::fnocc::fnocc(psi::Options&) (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0xA5D569: py_psi_fnocc() (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0xA8C2AD: boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator()(_object*, _object*) (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x55C4D9D: boost::python::objects::function::call(_object*, _object*) const (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x55C4AD4: boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== by 0x55CFDCC: boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (in /scratch/cdsgroup/conda-builds/work/build/bin/psi4); ==14111== ; ==14111== HEAP SUMMARY:; ==14111== in use at exit: 22,890,520 bytes in 26,750 blocks; ==14111== total heap usage: 806,896 allocs, 780,146 frees, 145,885,736 bytes allocated; ==14111== ; ==14111== LEAK SUMMARY:; ==14111== definitely lost: 27,876 bytes in 493 blocks; ==14111== indirectly lost: 5,344 bytes in 40 blocks; ==14111== possibly lost: 13,024,793 bytes in 10,784 blocks; ==14111== still reachable: 9,832,507 bytes in 15,433 blocks; ==14111== suppressed: 0 bytes in 0 blocks; ==14111== Rerun with --leak-check=full to see details of leaked memory; ==14111== ; ==14111== For counts of detected and suppressed errors, rerun with: -v; ==14111== Use --track-origins=yes to see where uninitialised values come from; ==14111== ERROR SUMMARY: 692778 errors from 1000 contexts (suppressed: 1311 from 53); Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/121#issuecomment-123755185:2985,error,errors,2985,https://psicode.org,https://github.com/psi4/psi4/issues/121#issuecomment-123755185,4,"['ERROR', 'error', 'fault']","['ERROR', 'errors', 'fault']"
Availability,"fo to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order SCF convergence to DFT Wavefunctions.; - [x] Adds the gradient regularized asymptotic correction (GRAC) to DFT through the option `DFT_GRAC_SHIFT`.; - [x] Adds a density-fitted second-order Electron Propagator code. ; - [x] Adds the density-fitted SAPT(DFT) code.; - [x] Adds linear response DFT.; - [ ] Adds TDDFT methodologies.; - [x] To avoid conflict the function `property` was renamed to `properties`.; - [x] More involved JSON input/output interface.; - [x] Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - [x] Def2 family of basis sets available for all atoms supported by those basis sets. * **Bug Fixes**; - [x] wB97X had an incorrect range-seperation parameter. This is now fixed. Note that this did *not* effect wB97X-D.; - [x] Memory limitations are better adhered to for very large MCSCF computations. * **TODO**; - [ ] Run `sed` commands from https://github.com/psi4/psi4/pull/690; - [x] Pull in ECPs #681 ; - [ ] Rebase in current master to resolve conflicts; - [x] Closes #39 ; - [x] Closes #40 ; - [ ] New Hessian/Frequency analysis code.; - [ ] Fill out remaining DFT documentations; - [ ] Polish new DF JK/Transformer technology; - [ ] Triple check UKS GGA Hessian-vector code; - [ ] Finished DFT Hessian functionality (skeleton terms); - [ ] Rebase in License/1.1 changes; - [ ] Rebase in ECP changes (#681); - [ ] Re-examine VV10 default grid size; - [ ] Implement VV10 gradients. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:2493,avail,available,2493,https://psicode.org,https://github.com/psi4/psi4/pull/698,2,['avail'],['available']
Availability,"following up on issues unresolved in #2293. split issue as needed; - [ ] remove all internal cfour files; - [ ] remove cfour from read_options; - [ ] kill off or otherwise address sole `using(""qcdb"")` test case; - [ ] implement atol_ and rtol_e/g/h from qcng into psi4 stdsuite runner; - [ ] check `hessian(""HF/basis"")` properly get a `HF TOTAL HESSIAN` qcvar; - [ ] in cc.rst table, settle down to two symbols meaning NYI and not-applicable-to-method, rather than the ""N"", ""---"", ""n/a"" mixture at present.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2303:391,down,down,391,https://psicode.org,https://github.com/psi4/psi4/issues/2303,1,['down'],['down']
Availability,"for gdb? There isn't much more; ```; Starting program: /home/kruse/miniconda3/bin/python /usr/qc/psi4fork.bin/bin/psi4 -n4 water.in; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [New Thread 0x2aaaf01ac780 (LWP 10083)]; [New Thread 0x2aab0f5ae800 (LWP 10084)]; [New Thread 0x2aab37400880 (LWP 10085)]. Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00002aaac4d3f06e in std::local_Rb_tree_decrement (__x=0x2aaaae4b3ff0 <psi::SphericalGrid::lebedev_mapping_+8>); at /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++98/tree.cc:97; 97 /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++98/tree.cc: No such file or directory.; ```. I needed to reproduce the backtrace error from normal execution. Not always a useful crash, too. But there seem to be different errors.; Intel: [stacktrace.txt](https://github.com/psi4/psi4/files/2610768/stacktrace.txt); AMD: [stacktrace_amd.txt](https://github.com/psi4/psi4/files/2610774/stacktrace_amd.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366#issuecomment-441237264:420,fault,fault,420,https://psicode.org,https://github.com/psi4/psi4/issues/1366#issuecomment-441237264,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"for the record, these exports in export_mints.cc are what requires the cxx standard downgrade. because of these, need the libmints/eri.h header and that brings in the l2 headers. hence the export_mints reasoning is the same as that for libmints/eri.cc. ```; py::class_<Libint2TwoElectronInt, std::shared_ptr<Libint2TwoElectronInt>>(m, ""TwoElectronInt"", pyTwoBodyAOInt,; ""Computes two-electron repulsion integrals""); .def(""compute_shell"", compute_shell_ints(&TwoBodyAOInt::compute_shell), ""Compute ERIs between 4 shells""); .def(""shell_significant"", compute_shell_significant(&TwoBodyAOInt::shell_significant),; ""Determines if the P,Q,R,S shell combination is significant"");. py::class_<Libint2ERI, std::shared_ptr<Libint2ERI>>(m, ""ERI"", pyTwoBodyAOInt, ""Computes normal two electron repulsion integrals"");; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2392#issuecomment-1007660665:84,down,downgrade,84,https://psicode.org,https://github.com/psi4/psi4/pull/2392#issuecomment-1007660665,1,['down'],['downgrade']
Availability,forrtl: error (76): Abort trap signal,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2084:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/2084,1,['error'],['error']
Availability,"four/runner.py"", '; 'line 137, in build_input\n'; ' cfourrec[""infiles""][""GENBAS""] = '; 'genbas.read_text()\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1236, in read_text\n'; "" with self.open(mode='r', encoding=encoding, ""; 'errors=errors) as f:\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1222, in open\n'; ' return io.open(self, mode, buffering, '; 'encoding, errors, newline,\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1078, in _opener\n'; ' return self._accessor.open(self, flags, '; 'mode)\n'; 'FileNotFoundError: [Errno 2] No such file or '; 'directory: '; ""'/xstorage/tobias/bin/cfour/basis/GENBAS'\n"",; 'error_type': 'unknown_error',; 'extras': None},; 'extras': None,; 'id': None,; 'input_data': {'driver': 'energy',; 'keywords': {'CC_CONV': 12, 'SCF_CONV': 12},; 'model': {'basis': 'aug-pvqz', 'method': 'ccsd(t)'},; 'molecule': {'atom_labels': ['', '', ''],; 'atomic_numbers': [8, 1, 1],; 'fix_com': False,; 'fix_orientation': False,; 'fragment_charges': [0.0],; 'fragment_multiplicities': [1],; 'fragments': [[0, 1, 2]],; 'geometry': [0.0,; 0.0,; -0.12403886030029525,; 0.0,; -1.431430901356359,; 0.9842933627189459,; 0.0,; 1.431430901356359,; 0.9842933627189459],; 'mass_numbers': [16, 1, 1],; 'masses': [15.99491461957,; 1.00782503223,; 1.00782503223],; 'molecular_charge': 0.0,; 'molecular_multiplicity': 1,; 'name': 'H2O',; 'provenance': {'creator': 'QCElemental',; 'routine': 'qcelemental.molparse.from_string',; 'version': 'v0.24.0'},; 'real': [True, True, True],; 'schema_name': 'qcschema_molecule',; 'schema_version': 2,; 'symbols': ['O', 'H', 'H'],; 'validated': True},; 'provenance': {'cpu': 'Intel(R) Xeon(R) CPU E7-4870 v2 @ '; '2.30GHz',; 'creator': 'QCEngine',; 'hostname': 'nod10',; 'qcengine_version': 'v0.23.0',; 'username': 'tobias',; 'version': 'v0.23.0',; 'wall_time': 1.2955999374389648}},; 'success': False}; ```; ; Could you please help me what causes this error?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048:3504,error,error,3504,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048,1,['error'],['error']
Availability,frac test cast truncated to a couple points that reliably converge across computers via 9439a808a05c48b0ee3c7d319998721bd38e403b. the end.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/129#issuecomment-157785748:49,reliab,reliably,49,https://psicode.org,https://github.com/psi4/psi4/issues/129#issuecomment-157785748,1,['reliab'],['reliably']
Availability,free() error in rasci calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2309:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/2309,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:8163,error,error,8163,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:9990,error,error,9990,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7902,error,error,7902,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,9,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7641,error,error,7641,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7380,error,error,7380,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:7119,error,error,7119,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,"future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead; ret.nph[n].flat[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:36090,error,error,36090,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. -- Docs: https://docs.pytest.org/en/latest/warnings.html; ================================================ 12 pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:83389,error,error,83389,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6858,error,error,6858,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,"future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead; ret.nph[n].flat[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:35829,error,error,35829,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6597,error,error,6597,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,9,['error'],['error']
Availability,"future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead; ret.nph[n].flat[:] = np.fromstring(json_data[""data""][n], dtype=np.double). /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:35568,error,error,35568,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:. /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6336,error,error,6336,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/p4util/numpy_helper.py:454: Depre,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:35307,error,error,35307,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:6075,error,error,6075,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,220,['error'],['error']
Availability,"fwiw, no difference in test system behavior between the two originally reported environments. Both fail to converge with nthreads=8 and show the same small error with nthreads=1. Psi is the 1.4 conda package, so bugfix in the PR not applied. MKLs and iomp5's in the 2019–2021 range. Defaults-based env has gomp present (been so since the gcc 7.3->7.5 transition a couple months ago) but it's not linked into psi or showing trouble. ```; (trial140def) psilocaluser@bash:psinet:/psi/gits/trial: conda list -n trial140def | grep -e gcc -e ""\-ng"" -e gomp -e mkl -e intel -e ""1\.4+94""; _libgcc_mutex 0.1 main ; blas 1.0 mkl ; intel-openmp 2021.3.0 h06a4308_3350 ; libgcc-ng 9.3.0 h5101ec6_17 ; libgfortran-ng 7.5.0 ha8ba4b0_17 ; libgomp 9.3.0 h5101ec6_17 ; libstdcxx-ng 9.3.0 hd4cf53a_17 ; mkl 2020.2 256 ; mkl-service 2.3.0 py38he904b0f_0 ; mkl_fft 1.3.0 py38h54f3939_0 ; mkl_random 1.1.1 py38h0573a6f_0 ; psi4 1.4+9485035 py38hd63c0ca_0 psi4; (trial140def) psilocaluser@bash:psinet:/psi/gits/trial: conda list -n trial140ana | grep -e gcc -e ""\-ng"" -e gomp -e mkl -e intel -e ""1\.4+94""; blas 1.0 mkl anaconda; intel-openmp 2020.2 254 anaconda; libgcc-ng 9.1.0 hdf63c60_0 anaconda; libgfortran-ng 7.3.0 hdf63c60_0 anaconda; libstdcxx-ng 9.1.0 hdf63c60_0 anaconda; mkl 2019.4 243 anaconda; mkl-service 2.3.0 py38he904b0f_0 anaconda; mkl_fft 1.2.0 py38h23d657b_0 anaconda; mkl_random 1.1.0 py38h962f231_0 anaconda; psi4 1.4+9485035 py38hd63c0ca_0 psi4; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-905661580:156,error,error,156,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-905661580,1,['error'],['error']
Availability,"g &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8893,error,error,8893,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"g things there unless absolutely necessary for my research. > Unfortunately, open-shell Brueckner or OO coupled cluster does not seem to be a common feature in QC programs, so I am trying to survey which programs have open-shell capable OO methods. Also, a performant OMP2 or OMP2.5 implementation could potentially be useful for us, even if it does not directly solve the lack of an RBCCD(T) implementation. I don't know if your Robosurfer can use this, but depending on your orbital-optimized method, once you have the energy, the gradient is free. All the orbital-optimized methods in Psi have this property. > o_O No, in fact I would have completely missed that! I checked the method table [here](http://www.psicode.org/psi4manual/master/notes_c.html#alternate-implementations) and thought Psi4 cannot do BCCD(T) at all. Perhaps BCCD and BCCD(T) could be added as methods to that docpage?. That page is for methods that _multiple modules_ support, so you can straighten out which module you want given your specific use for a method. That said, is there a place in the manual where we list all the methods we have? I genuinely don't think so. We should add it, if there isn't one. If you want to see all the energy keywords that Psi recognizes, you can find it in the code [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc_table.py#L41). I'd be remiss if I didn't point out that the `dct` module _also_ has some orbital optimized methods. The best one is the default upon entering `energy(dct)`, ODC-12. Use of the others is not recommended for _any_ purpose other than benchmarking. We also have density-fitting for ODC-12. I'll warn you that there is some slight error in the DF gradients, on the order of E-5. That is _also_ on my to-fix list, but given some other papers I need to write, I don't expect to get to that until Winter 2020. The other potential dealbreaker is that method _also_ lacks frozen core support, DF or not. Fixing that is a Spring 2021 target.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863#issuecomment-612018450:1981,error,error,1981,https://psicode.org,https://github.com/psi4/psi4/issues/1863#issuecomment-612018450,1,['error'],['error']
Availability,"g::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3493,error,error,3493,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"g_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Debug/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Development/cmTC_a8cfe. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=paralle",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:10474,Error,Error,10474,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['Error'],['Error']
Availability,"gdma1 is the test that's failing on Travis. (For once, timeout is not at fault.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-275582318:73,fault,fault,73,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-275582318,1,['fault'],['fault']
Availability,"ge:; > >; > > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In; > function ‘bool py_psi_set_local_option_array(const string&, const; > string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a; > member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/; > psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool; > py_psi_set_global_option_array(const string&, pybind11::list,; > psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13:; > error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])); > { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36:; > error: expected primary-expression before ‘>’ token if; > (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374:; > recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for; > unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for; > target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: ***; > [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; > CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all'; > failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127:; > recipe for target 'all' failed make[3]: *** [all] Interrupt; > CMakeFiles/psi4_core.dir/build.make:111: recipe for target; > 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]:; > *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; > CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all'; > failed make[1]: *** [CMakeFiles/psi4_core.dir/all] I",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074858:1831,error,error,1831,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074858,1,['error'],['error']
Availability,"general note: now that I have the correct base of `master`, azure should run and fail on mbis-3. @zachglick tracked the problem down to nondeterministic root solutions of the degenerate states. a PR will happen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2003#issuecomment-687845899:128,down,down,128,https://psicode.org,https://github.com/psi4/psi4/pull/2003#issuecomment-687845899,1,['down'],['down']
Availability,"git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3290,Error,Error,3290,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127: recipe for target 'all' failed make[3]: *** [all] Interrupt CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt Makefile:138: recipe for target '",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1542,error,error,1542,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['error'],['error']
Availability,"got it, thanks. I asked basisset_parser.cc to print out the basis file it was reading, ; and I found in addition to read the basis file; $(PSI4)/share/psi/basis/6-31g.gbs. it also reads; $(PSI4)/share/psi/basis/cc-pvdz-jkfit.gbs. On 6/14/13 10:37 AM, Lori Burns wrote:. > The reason this doesn't work in the beta branch is that scf_type ; > direct does a few steps density-fitted, then switches over to the ; > exact algorithm. The necessary auxiliary basis set (cc-pvdz-jkfit ; > http://sirius.chem.vt.edu/psi4manual/master/basissets_byfamily.html) ; > is not available for the atoms the original poster listed. In the ; > development branch, there's a check that automatically turns off the ; > density-fitting steps if the aux basis is not available. We'll be ; > releasing the development branch fairly soon, so this shouldn't come ; > up again. In the meantime, if you add |set df_scf_guess false| for ; > atoms that are missing the aux set, it won't try the density-fitting ; > steps and your inputs should work fine.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/psi4/psi4.0b4/issues/7#issuecomment-19470973.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7#issuecomment-19472479:561,avail,available,561,https://psicode.org,https://github.com/psi4/psi4/issues/7#issuecomment-19472479,2,['avail'],['available']
Availability,"gs_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:4045,error,error,4045,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include""` and all the other envvars also set similarly, and the build appears to be OK, no ctests or pytests failed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1483,echo,echo,1483,https://psicode.org,https://github.com/psi4/psi4/issues/2416,3,"['echo', 'redundant']","['echo', 'redundant']"
Availability,"h of these external projects simply worries about their dependencies and their building process. Finally, because each external project is a good CMake project it makes a `XXXConf.cmake` file or a `FindXXX.cmake` file is included in `psi4/cmake`, which set `XXX_LIBRARIES` and `XXX_INCLUDE_DIRS` appropriately. Hence all other external projects simply need to keep appending dependencies and everyone gets to play nicely together.; # Detailed Change Log; ## Build scripts. I metaphorically ripped all the old build scripts out and started fresh. In my opinion the scripts are far easier to read. It also means I may have not added some functionality back. In particular there were many complicated scripts for setting compile flags. At least on my box these scripts did not find all the optimizations to begin with (didn't turn on many of the Intel optimizations). They also didn't respect some of the CMake variables. The scripts themselves are designed to be quite terse by factoring out redundant code, although admittedly the `ExternalProject_Add` commands are still repetitive. Also note I heavily use empty targets and variables to avoid lots of if/else statements.; ## Added an External Folder. The top-level Psi4 directory is primarily split into a directory, `psi4`, where the source for the core of Psi4 lives and a folder `external` where optional modules and dependencies live. The general strategy for determining where something goes is if you personally didn't write the code, or it is intended to be used with many other packages, it probably falls under the category of going in the external folder. Each package in `external` should be designed in such a manner so that it doesn't leak dependencies into the core. For example if the package returns its results in a class `MyGreatMatrix` the wrapper code that copies it to a Psi4 `Matrix` should live in external. This prevents Psi4 proper from having to know about `MyGreatMatrix`. ; ## Libraries that are not part of Psi4 core are",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442:3086,redundant,redundant,3086,https://psicode.org,https://github.com/psi4/psi4/pull/442,1,['redundant'],['redundant']
Availability,"h), r/u ks set exclusively by option. You can use ‘scf’ to mean HF, and then it works just the same as DFT. I’d advocate thoroughly adding ‘hf’ (that is not just to energy() like it has been) so it’s on-par with DFT. The r/u/ro options were a nice thought, but not thoroughly carried out, with disturbing consequences, as you found. # Integrate DFT with driver routines. for ssuper in superfunctional_list():; procedures['energy'][ssuper.name().lower()] = run_dft. for ssuper in superfunctional_list():; if ((not ssuper.is_c_hybrid()) and (not ssuper.is_c_lrc()) and (not ssuper.is_x_lrc())):; procedures['gradient'][ssuper.name().lower()] = run_dft_gradient. > On Jun 8, 2015, at 9:49 PM, David Sherrill notifications@github.com wrote:; > ; > Is there an advantage to doing; > ; > gradient('b3lyp'); > ; > instead of; > ; > set reference rks; > set dft_functional b3lyp; > gradient('scf')?; > ; > I guess the former is certainly shorter. But primarily I'm wondering; > whether one is easier to check than the other regarding whether the; > gradient is available. We need to know on a functional-by-functional basis; > whether we have analytic gradients or not. If that's much easier to handle; > with one style vs the other, that would be an argument for doing it that; > way. Then we can decide what to do with the HF cases to make them play; > nicely with our desired solution for the DFT ones.; > ; > David; > ; > On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > > ; > > # (a) for HF; > > ; > > energy(‘scf’); > > ; > > # (b) for unrestricted HF; > > ; > > set reference uhf; > > energy(‘scf’); > > ; > > # (c) for B3LYP; > > ; > > set dft_functional b3lyp; > > set reference rks; > > energy(‘scf’); > > ; > > # (d) also for B3LYP; > > ; > > energy(‘b3lyp’); > > ; > > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > > ; > > set dft_functional b3lyp; > > energy(‘scf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110199772:1447,avail,available,1447,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110199772,1,['avail'],['available']
Availability,"har,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvx，该符号在函数 ""int __cdecl psi::C_DSYGVX(int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48182,error,error,48182,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"har,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52438,error,error,52438,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"har,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12520,error,error,12520,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"hat happens, then the old binary; file should be wiped out, and I guess it is not being removed. It is; possible this bug has been fixed in the latest version as we have looked at; this problem before, but I'm not sure. The 'dynamic_level' idea is still under development, and hasn't been much; tested.; If you look in /psi4/psi4/src/psi4/optking/set_params.cc, you can see what; the dynamic level is doing. It is changing parameters towards typically; more robust levels. You can do the same thing by changing input keywords.; For example, the behavior of dynamic_level=3 shown there can be produced by; setting the analogous keywords. Opt_params.coordinates = OPT_PARAMS::BOTH;. Opt_params.consecutive_backsteps_allowed = 1;. Opt_params.step_type = OPT_PARAMS::RFO;. Opt_params.intrafragment_step_limit = 0.1;. Opt_params.intrafragment_step_limit_min = 0.1;. Opt_params.intrafragment_step_limit_max = 0.1;. All this to say that you can skip the dynamic_level usage (or simply start; with dynamic_level = 3 [don't know if anyone has ever done that!] and I; expect the i/o error will go away. On the stability of the back-transformation, optking accounts for Delta(q); for a torsion value going from -178 to +178 degrees, etc.. However, the; formula for the derivative (B-matrix element) is undefined and also; discontinuous at 180. A real pain. I hope to try to fix this someday, but; when I do, it'll probably be in the newer python optimizer I'm developing. On Wed, Nov 15, 2017 at 5:21 PM, Chaya Stern <notifications@github.com>; wrote:. > This seems to be an error in writing rather than an error in the; > constrained optimization, isn't it?; >; > This error shows up when dynamic level is raised to 3 after the first; > convergence check when it tries to write optimization data to binary file.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/858#issuecomment-344762514>, or mute; > the t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344949158:1183,error,error,1183,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344949158,1,['error'],['error']
Availability,"he PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the questions in the https://github.com/psi4/psi4/wiki/0_FAQ.; - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/109:1969,echo,echo,1969,https://psicode.org,https://github.com/psi4/psi4/issues/109,1,['echo'],['echo']
Availability,"he compilation flag list when enabled. The `-pedantic-errors` flag has the compilation fail any time the code does not strictly follow the C++ language standard, i.e., whenever a compiler-specific language extension is used. `FORCE_PEDANTIC` is currently set to be enabled by default. ; 2. Fixes any instances of the code where the above option/flag would cause a compilation failure. This only requires two changes currently - removing extra semicolons in `libdiis/diismanager.h`, and replacing use of variable-length C-style arrays in `libmints/extern.cc`. The goal of these changes is to improve code portability across different compilers. By effectively disabling compiler-specific language extensions, the code no longer relies on specific compiler functionalities to work, and therefore should be compatible with a larger range of compilers across a wider variety of systems. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds a new compile-time setting, `FORCE_PEDANTIC`, that causes compilation to fail whenever use of a compiler-specific extension is detected.; - [X] Removes extraneous semicolons in `libddis/diismanager.h` that led to compiler error with the `FORCE_PEDANTIC` option enabled.; - [X] Replaces the use of variable-length C-style arrays in `libmints/extern.cc` with `std::vector` constructs. ## Questions; - [X] Should this new option be on by default?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145:1665,error,error,1665,https://psicode.org,https://github.com/psi4/psi4/pull/3145,1,['error'],['error']
Availability,"he wrong vector.; 5. One of the tensor contractions involving TEI was incorrect. After fixing those five bugs, I observed three things:; 1. After accounting for whether you index by (v,o) or (o, v), the matrix-vector products of the new occ implementation match those of the SOUHF P4N tutorials,; 2. The X (kappa) converged to does satisfy Ax=b; 3. The orbital equations refuse to converge. My conclusion is that the implementation of the algorithm is now correct, but it's not a good way to generate orbital steps. The off-diagonal terms can end up being significant for the open-shell systems that would lead you to use an orbital-optimized method. This didn't cause obvious problems before because the previous errors rendered the PCG procedure non-convergent, so you would always fall back to the crude diagonal step _unless_ your orbital gradient was so low that you didn't need to iterate at all. So what we expect to see from this bug is difficulties converging occ tightly, which has been my experience. To remedy the situation, the default orbital step is now the crude semicanonical step. The next PR should be the final one in the series. I'll just need to rebase it onto this one, repair the two tests I mentioned on broken tests, and confirm the test suite is clean. Pinging the usual suspects: @loriab, especially @dgasmith for PCG, and @jturney. I think Jet is sick today, so a different third reviewer would be welcome. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Debugged HF MO hessian based orbital step; - [x] Made HF MO hessian based orbital step opt-in rather than default; Not recommended. ## Checklist; Can't run tests if the tests were already broken!; - [x] Confirmed b-Ax approximately zero for the first step of the `ocepa-grad2` test case; - [x] Confirmed Ax reproduces the Psi4Numpy reference SOUHF Ax by acting on a test alpha orbital and a test beta orbital. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829:1966,repair,repair,1966,https://psicode.org,https://github.com/psi4/psi4/pull/1829,2,"['Ping', 'repair']","['Pinging', 'repair']"
Availability,"heck if the diagonalization failed, because they _cannot_. This is now rectified by adding failure checks wherever the new DSYEV wrappers are called.; Checks against non-square matrices are also added where there is both a row and column count at the call site. Some of the call sites would be dfocc territory, this PR does not include them to avoid conflicts with the dfocc overhaul.; This is another shard of the https://github.com/psi4/psi4/pull/2642 mega-PR that can be merged after PR #2678 and #2738 are in. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:1290,failure,failure,1290,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"heel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. installing: snsmp2-1.0.3-py36he403277_2 ...; installing: openfermionpsi4-0.4-py36h934b37d_0 ...; installing: psi4-rt-1.3.2-py36ha6b60c8_0 ...; if: Expression Syntax.; ERROR: executing post_install.sh failed; [chenh@Pauling programs]$ psi4 -V; Segmentation fault (core dumped); ```; This problem is not a special case, and I have also found that someone has the same problem in other forums. My system is 2.6.32-431.el6.x86_64 #1 SMP Sun 2013 x86_64 x86_64 x86_64 GNU/Linux.; If you have any questions, please don't hesitate to ask me.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:5067,ERROR,ERROR,5067,https://psicode.org,https://github.com/psi4/psi4/issues/1788,2,"['ERROR', 'fault']","['ERROR', 'fault']"
Availability,"helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; >; > - DLDF+D09/cc-pVDZ: *GRADIENTS FAILED*; >; > Segmentation fault: 11; >; > - Both disk_DF and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:4527,fault,fault,4527,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['fault'],['fault']
Availability,"hen PYMOD_INSTALL_LIBDIR is non-default.; - [x] export psi4::core target. use it in plugin. much simplify the psi4Config. tidy up the share installs.; - [x] flatten install dir structure. no more `external/`; - [x] shift importing of official plugins. rename psi4 --plugin* options. add cmake -C line. update CM templates.; - [x] switch over Py detection to PythonLibsNew. Beautify components printing. ; - [x] Move threads detection to target.; - [x] start testing the plugin templates again; - [x] standardize `Psi4Macros` --> `psi4OptionsTools`.; - [x] Correct CXX comp names in autocmake_static_lib (@robertodr, I copied this from you, so you may have it wrong, too). Check enabled langs properly rather than compilers defined so OptionsTools usable to other projects with diff enabled langs.; - [x] switch pybind11 to upstream source. better handle c++ std wrt pybind. `PSI4_CXX_STANDARD` --> `psi4_CXX_STANDARD`.; - [x] compile test of gcc version able to account for -gcc-name/-gxx-name (@bennybp, here's the code for what we talked about once in `custom_cxxstandard.cmake`); - [x] convert restrict test to write its own file.; - [x] kill off LAB and @jturney config files. replace with `cmake -C psi4PluginCache.cmake` suited config file.; - [x] `psi4pasture` --> `pasture`.; - [x] always whole-archive dpd and qt; - [x] `external` --> `external/upstream`, `internals` --> ``external/downstream`; - [x] remove old Find*cmake files. * **User-Facing for Release Notes**; - [x] We changed our python detection module to the one used by NumPy. Also changed so that not actually using libpython anywhere.; - [x] Used to do `psi4 --new-plugin-makefile` to generate `Makefile`. Now do `psi4 --plugin-compile` to get a cmake command to generate a `Makefile` against that psi4.; - [x] `--new-plugin` --> `--plugin-name`.; - [x] `ctest -L mini` --> `ctest -L smoke`; ; - [x] @amjames, the pasture is going to need a slight update to mesh with the new plugin infrastructure. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/554:1782,down,downstream,1782,https://psicode.org,https://github.com/psi4/psi4/pull/554,1,['down'],['downstream']
Availability,"her ones, such as the Continuous Fast Multipole Method (CFMM), are planned for the future, and even more (e.g., J-Engine, Local DF methods) exist beyond the work done in Psi4 for the past year. The problem is, Psi4's JK class does not have a framework that truly supports the existence of these separate J and K algorithms. DFJLinK and DFJCOSK work for now, given the low number of separate J and K algorithms current in Psi4. But, as more separate J and K algorithms are added to Psi4, the number of JK subclasses will skyrocket, assuming every combination of separate J and separate K algorithm is stored in its own JK subclass. This will lead to a nasty problem with code duplication, not even discussing the pollution of the JK hierarchy that would result. Thus, for continued research into separate J and K construction algorithms, a proper framework for supporting such algorithms is paramount. CompositeJK is that framework. CompositeJK is a single JK subclass which enables the combination and execution of any separate J and K build algorithm available in Psi4. CompositeJK can enable this without duplication of separate build algorithms across different subclasses. Additionally, CompositeJK is designed to enable simple expansion of itself, enabling the easy addition of new separate J and K builds to Psi4 with minimal programming issues. The current PR is the first implementation of the CompositeJK framework into Psi4, and it has two components:; - Front end. The front end changes control of how composite combinations of separate J and K build algorithms can be called by the user. The most important aspect is that, for CompositeJK, any combinations of its sub-algorithms can be called by setting SCF_TYPE to `J_alg+K_alg`, where _J_alg_ is the separate J build algorithm of choice, and _K_alg_ is the separate K algorithm of choice. As of now, the two CompositeJK options available are `DIRECTDFJ+LINK` representing the old DFJLinK class, and `DIRECTDFJ+COSX` representing the old ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2833:1653,avail,available,1653,https://psicode.org,https://github.com/psi4/psi4/pull/2833,1,['avail'],['available']
Availability,"here-mentioned DETCI and MRCC changes integrated in.; - [x] CCD is given select_ccd* functions to raise a sensible error message since the default (cc_type=CONV) isn't implemented. ; - [x] CC2 and CC3 are given select_* functions since now CCENERGY and MRCC cover them. This led to controversy (unresolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:9026,error,error,9026,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['error']
Availability,"herical Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.0.0; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1\u20135 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-V <= . wB97M-V Hyb-GGA Exchange-Correlation Functional. N. Mardirossian and M. Head-Gordon., J. Chem. Phys. 144, 214110 (2016) (10.1063/1.4952647). Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => VV10 Non-Local Parameters <=. VV10 B = 6.0000E+00; VV10 C = 1.0000E-02. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 281815; Total Blocks = 2159; Max Points = 256; Max Functions = 305; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 4, 6 entry O line 318 file .../share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2-3, 9-13 entry H line 18 file .../share/psi4/basis/def2-universal-jkfit.gbs ; atoms 5, 7-8 entry C line 198 file .../share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Integrals threads: 1; Memory [MiB]: 243; Algorithm: Disk; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVPPD AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 192; Number of basis functions: 582; Number of Cartesian functions: 686; Spherical Harmonics?: true; Max angular momentum: 4. Cached 2.7% of DFT collocation bl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051:6455,Toler,Tolerance,6455,https://psicode.org,https://github.com/psi4/psi4/issues/3051,1,['Toler'],['Tolerance']
Availability,"hi friends,did you change the code recently?; libscf_solver/hf.cc:772:22: error: qualified-id in declaration before ‘(’ token; 772 | void HF::compute_fcpi() {; | ^. i think that cause of missing ""}"" after line 770 in this file, it is right?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3185:74,error,error,74,https://psicode.org,https://github.com/psi4/psi4/issues/3185,1,['error'],['error']
Availability,"home/toon/miniconda3/envs/p4dev/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 2045, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 1281, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 1056, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/p4util/python_helpers.py"", line 80, in _pybuild_basis; mol.to_dict(), key, resolved_target, fitrole, other, return_dict=True, return_atomlist=return_atomlist); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 679, in pyconstruct; verbose=verbose); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 838, in construct; filename = cls.make_filename(basgbs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 1396, in make_filename; basisname = basisname.lower(). AttributeError: 'NoneType' object has no attribute 'lower'. Printing out the relevant lines from the Psithon --> Python processed input file:; core.IO.set_default_namespace(""""); core.set_global_option(""SCF_TYPE"", ""pk""); core.set_global_option(""BASIS"", ""ano-rcc""); core.set_global_option(""RELATIVISTIC"", ""x2c""); core.set_global_option(""REFERENCE"", ""uhf""); --> energy('hf'). Psi4 stopped on: Monday, 29 April 2019 07:36PM; Psi4 wall time for execution: 0:00:00.18. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807:5559,error,error,5559,https://psicode.org,https://github.com/psi4/psi4/issues/1613#issuecomment-487675807,1,['error'],['error']
Availability,"home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/90:1213,Error,Error,1213,https://psicode.org,https://github.com/psi4/psi4/issues/90,1,['Error'],['Error']
Availability,"hon Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile.; > ; > If it helps, I'm running Ubuntu, with gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127: recipe for target 'all' failed make[3]: *** [all] Interrupt CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt CMakeFiles/Make",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1384,error,error,1384,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['error'],['error']
Availability,how to brack down the dual descriptor results from cubprop() into atom level?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3108:13,down,down,13,https://psicode.org,https://github.com/psi4/psi4/issues/3108,1,['down'],['down']
Availability,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3198:240,error,error,240,https://psicode.org,https://github.com/psi4/psi4/issues/3198,2,['error'],['error']
Availability,"https://github.com/psi4/psi4/pull/1316/files#diff-ed72addaa8414fc1c5e4b58b14f3b1d1R3 will make sure builds with conda pkg 0.1.2 don't use that and instead build and use an internal 0.1.3. But b/c that's an ATLEAST not EXACT, ppl with 0.1.3 in conda and building pre-this-PR psi4 will get errors at runtime. unfortunate, but that's what we get for violating semantic versioning. hopefully far fewer of these in future as approach 1.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1316#issuecomment-447904724:288,error,errors,288,https://psicode.org,https://github.com/psi4/psi4/pull/1316#issuecomment-447904724,1,['error'],['errors']
Availability,"hub.com/evaleev/libint/pull/233 | 23Mar22, after #2413, v1.6, v1.7 | `5-4-3-6-5-4_mm4f12ob2.tgz` | gss | `eri_c4_d1_l5` | `_15` | `_7` | `_4` |; | C[^8] | McMurchie Davidson | any | 31Mar22, after #2414, v1.6, v1.7 |; | ~A[^6]~ | ~standardize ordering~ | ditto step B | #2537 | ditto step B | sss | `g5` | rm `_16` | rm `_8` | — |; | A' [^9] | flex solid-harm ordering | [loriab:new-cmake-2023-take2-b](https://github.com/loriab/libint/tree/new-cmake-2023-take2-b) https://github.com/evaleev/libint/pull/259 | 8May23, after #2861, v1.8, v1.9 (see also A'') | `libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1` | sss | `eri_c4_d1_l5` | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2231,down,download,2231,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"i was trying to parameterize a compound with FFParam and i wanted to do a dihedral scan for one of the dihedrals in my molecule, however, an error was produced saying that the atoms should not be in a ring. . is there a way to overcome this error?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2599:141,error,error,141,https://psicode.org,https://github.com/psi4/psi4/issues/2599,2,['error'],['error']
Availability,"i4.energy('ccsd', return_wfn=True); t2 = wfn.T2(); ```; At the time when the python bound function is called and the code for `CCEenergyWavefunction::T2()` is executed the `global_dpd_` the dpd object that the `global_dpd_` points to has been deleted out from under it (you can see [here](https://github.com/psi4/psi4/blob/3fdf17415282884ec86e78ba34087ddd6c3645e8/psi4/src/psi4/libdpd/init.cc#L59) that `dpd_set_default` will assign the `global_dpd_` pointer to `dpd_list[0]`, and below it is the code for `dpd_close` that will delete the object. I see two possible solutions. . - The easiest to implement would be to have the getters/setters check that `global_dpd_` is not `nullptr`, and if it is construct the dpd. Before doing the geting/setting. The function would also have to free the dpd object as well as other modules will assume that `global_dpd_` is null until they initialize it and `dpd_init` will throw when they try to create it. - The other option is to simply start phasing out the `global_dpd_` entirely. A data member can be added to the `CCEnergyWavefunction` and the member functions of the class can be modified to use that data member instead of the `global_dpd_`. The initialization of the data member is moved into the construtor and the dpd will be valid until the wavefunction is destroyed. The same would need to be done for the cclambda wavefunction as well. . The constructing the dpd object is far from trival as it allocates memory for and computes index translations for all possible pairs and quartets of the orbital subspaces provided, since this is only done once at the beginning of each module using a DPD I haven't looked into how significan the overhead is but it may be an issue for the first option. The second option is better for code quality, and I once played around with this idea in a plugin years ago, but I never got to the point where I could test if there were any unforeseen consequences down the pipeline (subsequent calls to other CC* modules).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978:2664,down,down,2664,https://psicode.org,https://github.com/psi4/psi4/pull/1061#issuecomment-415107978,1,['down'],['down']
Availability,"i::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:17111,error,error,17111,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"i::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15021,error,error,15021,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"i::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1229,error,error,1229,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"iab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: P",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3344,down,download,3344,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"ib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(man",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7715,error,error,7715,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNP",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10014,error,error,10014,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python2 (found version ""2.7.11"") ; -- Found Python: /usr/lib64/libpython2.7.so ; -- Boost version: 1.60.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /home/piton/gitdir/psi4/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. Error message:. [100%] Linking CXX executable ../../../bin/psi4; CMakeFiles/psi4_objlib.dir/create_new_plugin.cc.o: In function `boost::re_detail_106000::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_imp()':; create_new_plugin.cc:(.text._ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv[_ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv]+0x42d): undefined reference to`boost::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::maybe_assign(boost::match_results<__gnu_cxx::__normal_itera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/312:5422,Error,Error,5422,https://psicode.org,https://github.com/psi4/psi4/issues/312,1,['Error'],['Error']
Availability,"id::buildGridFromOptions(psi::MolecularGrid::MolecularGridOptions const&); psi::DFTGrid::buildGridFromOptions(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >); psi::DFTGrid::DFTGrid(std::shared_ptr<psi::Molecule>, std::shared_ptr<psi::BasisSet>, psi::Options&). *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. Are there plans to include support for the SG-1 grid in Psi4? If not, are there any alternative grids that do work? _Removing_ the SG-1 option from the input file simply results in a segfault. The input file is below:. ```; memory 13500 Mb; molecule {; 0 1; C 4.067369 -2.240127 -0.129252; C 4.972458 -1.390566 3.098494; C 2.921005 -1.630865 0.608144; C 2.878286 -1.651992 2.002187; C 0.763829 -0.484138 1.955055; C 1.885141 -1.036307 -0.112440; C 1.799700 -1.078640 2.675676; C 0.806556 -0.463011 0.561006; O 3.881939 -2.228505 2.721026; Br -0.697406 0.294370 2.866925; H 4.856028 -1.495441 -0.288527; H 4.492277 -3.085465 0.426246; H 3.750214 -2.627370 -1.105706; H 5.701654 -1.973847 3.666076; H 4.602203 -0.560418 3.705314; H 5.446916 -0.996749 2.196547; H 1.908587 -1.015574 -1.198747; H 1.775186 -1.100057 3.762739; H 0.006619 -0.004988 -0.014918; }; set dft_radial_points 99; set dft_spherical",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/827:1466,error,error,1466,https://psicode.org,https://github.com/psi4/psi4/issues/827,1,['error'],['error']
Availability,"ide; - Psi4 now requires C++14 (up from C++11); - The C++ code base was reformatted using clang-format and the provided format file (many PRs). # Developer Interests; - Cleans up the Matrix class for non-totally symmetric irrupts (#1383).; - Psi4 is now C++17 compatible (#1345).; - DFT grid generation is now threaded (#1291).; - `findif` is now ""metadata""-based to allow for greater serialization (#1289).; - Additional documentation and notes on alpha/beta for DFT functionals (#1260).; - `dpd.gbl` has been removed (#1254).; - The CC* modules are moving to a CCWavefunction based solution (#1253).; - CBS has been reworked to be dictionary based to allow for greater flexibility (#1235).; - Updated conversion factors to CODATA 2014 (#1213).; - `pthreads` has been removed from Psi4 (shall not return, #1199).; - Empirical Dispersion has been refactored to a new unified interface (#1151).; - OEProp has been split into many small modules allowing greater flexibility (#1133).; - SCF now throws a SCFConverenceError upon reaching maximum iterations (#1130).; - Standardizes memory printing to `[GiB]` (#1097, ...). # Documentation; - NYI. # Miscelaneous; - NYI. # Bug Fixes; - Fixes an error where the CBS extrapolation technology was not comparable with FNO-CC* methods (#1377); - Fixes an issue where relativistic basis sets were not compatible with SCF stability analysis (#1374).; - Fixes an issue where JSON called from the command line did not correctly write an output (#1369).; - Fixed an error where float options when set as integer were not correctly cast (#1352 ).; - Correctly throws when Yukawa functionals are called from LibXC (#1260).; - Prevents the code from incorrectly trying cast densities between symmetries in some circumstances (#1139).; - Ghost atoms where incorrectly attributing to `core` electron counts (#1139).; - Fixes an issue in DFHelper memory estimation (#1100).; - Fixes range-separate disk gradient paging (backported in v1.2.1, #1096 ) . # Known Bugs; - NYI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:3975,error,error,3975,https://psicode.org,https://github.com/psi4/psi4/issues/1406,2,['error'],['error']
Availability,"if you'll rebase now, the Linux `using_mp2d` CI error should go away. there'll also be a Windows spot check section, https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-windows.yml#L191-L197 . If you add your failing Win test there, we should get better output for debugging.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-565606760:48,error,error,48,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-565606760,1,['error'],['error']
Availability,"igen_maps()` functions, then, return Eigen matrix-like objects that directly link with the Psi4 matrix data buffer of the Psi4 matrix for which the function was called. This provides an efficient fashion by which to utilize Psi4 matrices in contexts which require Eigen constructs, with no data deepcopying or Eigen-to-Psi4 back-conversions required. There is a key difference between the two functions. `eigen_map()` assumes that the matrix has a single irrep, and returns a single `Eigen::Map` object. `eigen_maps()` , on the other hand, is used for matrices with multiple irreps, and returns a `std::vector` of `Eigen::Map` objects, each `Map` in the `vector` corresponding to one irrep of the Psi4 matrix. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Adds two new functions, `eigen_map()` and `eigen_maps()`, usable in Psi4 plugins and downstream programs, that return a formulation of the calling `Psi::Matrix` object, that is usable in contexts where `Eigen::Matrix` objects are required/desired. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds two new member functions to `Psi4::Matrix`, `eigen_map()` and `eigen_maps()`, that return `Eigen::Map` representations of the Psi4 matrix object. ## Questions; - [X] N/A. ## Notes; - [X] I did look into forward declaring the necessary Eigen classes, but forward declaring `Eigen::Map` turns out to be a bit ugly, as it is a class template that, to forward declare, ends up requiring forward declarations for other Eigen classes and enums (such as `Stride` and `AlignmentType`) that aren't specifically necessary for the Psi4 use case. Therefore, I have skipped forward declarations here.; - [X] I can confirm the correctness ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3143:1632,down,downstream,1632,https://psicode.org,https://github.com/psi4/psi4/pull/3143,1,['down'],['downstream']
Availability,"ight want to test run with lower AM), there'll be a `libint-*.tgz` file produced.; * Now back at your psi4 clone, edit this line https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L63 to the location of that tarball (according to cmake manual a filepath is ok -- needn't be URL).; * Configure Psi4. The buildsys can build from source most QC dependencies, but you'll need the basics of Python, NumPy, etc. as described https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L36-L50 . I'd definitely suggest passing in `-D BUILD_SHARED_LIBS=ON`, too. Note L2 has its dependency needs, too: https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L86-L87; * If that configures, let it build `cmake --build <build_dir> -j<N>`. definitely do this step in parallel. ### Note on AM=7; Regular AM is 5. If you only need 7, you can use this tarball rather than generating your own with `--target export` in L2 repo: https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2_rev1.tgz Start above directions at ""Now back at your psi4 clone..."". Still GCC only, not Intel compilers. ### Exhibit A; ```; cmake -S. -Bbuild \; -G Ninja \; -D LIBINT_BUILD_LIBRARY_AS_SUBPROJECT=OFF \; -D CMAKE_INSTALL_PREFIX=/path/to/l2/install \; -D REQUIRE_CXX_API=ON \; -D REQUIRE_CXX_API_COMPILED=OFF \; -D BUILD_TESTING=ON \; -D CMAKE_PREFIX_PATH=""/psi/toolchainconda/envs/singleboost;/psi/toolchainconda/envs/singlegmp;/psi/toolchainconda/envs/singleeigen"" \; -D ENABLE_MPFR=OFF \; -D LIBINT_LOCAL_EIGEN3_INSTALL=OFF \; -D CMAKE_CXX_COMPILER=$CXX \; -D CMAKE_C_COMPILER=$CC \; -D ENABLE_FORTRAN=OFF \; -D LIBINT2_SHGAUSS_ORDERING=standard \; -D ERI3_PURE_SH=OFF \; -D ERI2_PURE_SH=OFF \; -D ENABLE_ERI=2 \; -D ENABLE_ERI3=2 \; -D ENABLE_ERI2=2 \; -D ENABLE_ONEBODY=2 \; -D ENABLE_G12=1 \; -D DISABLE_ONEBODY_PROPERTY_DERIVS=ON \; -D MULTIPOLE_MAX_ORDER=4 \; -D WITH_G12_MAX_AM=3 \; -D WITH_ERI_MAX_AM=""10;3;2"" \; -D WITH_ERI3_MAX_AM=",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906:2418,down,download,2418,https://psicode.org,https://github.com/psi4/psi4/issues/1341#issuecomment-1374405906,1,['down'],['download']
Availability,"il.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:6782,error,error,6782,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,ilds. ```; [ 15%] Building CXX object src/psi4/libqt/CMakeFiles/qt.dir/ras_set.cc.o; cd /home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libqt && /usr/bin/g++-6 -DFC_SYMBOL=2 -I/home/travis/build/psi4/psi4/psi4/include -I/home/travis/build/psi4/psi4/psi4/src -isystem /home/travis/miniconda/envs/p4env/include/python3.5m -march=native -O3 -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/qt.dir/ras_set.cc.o -c /home/travis/build/psi4/psi4/psi4/src/psi4/libqt/ras_set.cc; [ 15%] Building CXX object src/psi4/libqt/CMakeFiles/qt.dir/reorder_qt.cc.o; cd /home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libqt && /usr/bin/g++-6 -DFC_SYMBOL=2 -I/home/travis/build/psi4/psi4/psi4/include -I/home/travis/build/psi4/psi4/psi4/src -isystem /home/travis/miniconda/envs/p4env/include/python3.5m -march=native -O3 -DNDEBUG -fPIC -fopenmp -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/qt.dir/reorder_qt.cc.o -c /home/travis/build/psi4/psi4/psi4/src/psi4/libqt/reorder_qt.cc; /home/travis/build/psi4/psi4/psi4/src/psi4/libqt/reorder_qt.cc:310:1: error: expected ‘}’ at end of input; } // namespace psi; ^; make[5]: *** [src/psi4/libqt/CMakeFiles/qt.dir/reorder_qt.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; make[5]: Leaving directory `/home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [src/psi4/libqt/CMakeFiles/qt.dir/all] Error 2; make[4]: Leaving directory `/home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory `/home/travis/build/psi4/psi4/build'; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory `/home/travis/build/psi4/psi4/build'; make: *** [all] Error 2; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1186#issuecomment-418163840:1215,error,error,1215,https://psicode.org,https://github.com/psi4/psi4/pull/1186#issuecomment-418163840,7,"['Error', 'error']","['Error', 'error']"
Availability,"ils; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused function `MOInfoBase::correlate` is removed; - [x] The only thing the `MOInfoBase` dtor does is call `MOInfoBase::cleanup()`, an empty function. Removed both.; - [x] Moved the contents of `MOInfo::free_memory()` into its only caller, the `MOInfo` dtor; - [x] Added a lot of new machine-readable docstrings, moved some existing ones; - [x] Some ""obsolete code"", commented out a long time ago is deleted from `moinfo_mappings.cc`; - [x] Moved the `double** scf` MO array and the `get_scf_mos()` getter from `MOInfoBase` to `MOInfo` and made the array private; - [x] Moved the contents of `MOInfoBase::startup()` into its only caller, the `MOInfoBase` ctor; - [x] Moved `MOInfoBase::nmo` to `MOInfo` and made it private; - [x] Made the molecular charge `const` and private in `MOInfoBase`; - [x] Made `MOInfoBase::sopi` private, added a protected getter fn to give access in derived classes; - [x] Made `MOInfoBase::nso`, `MOInfoBase::nuclear_energy` and `MOInfoBase::irr_labs` private; - [x] All functions in `MOInfoBase` that have previously returned copies of `std::vector` members now return `const&` to the vector in the object, avoiding a potential copy.; - [x] Since `MOInfoBase::silent` is only used in the ctor of `MOInfo,`, I removed it from `MOInfoBase` and `MOInfoSCF`; - [x] Inlined `MOInfo::get_actv(size_t i)` and `MOInfo::get_docc(size_t i)` as both were only called once. Since these overloads are now gone from `MOInfo`, it can now just use `get_docc()` and `get_actv()` from `MOInfoBase` instead of having to reimplement or explicitly inherit them. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing; - [x] Errors in the full test suite appear to be unrelated to `libmoinfo`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3155:3296,Error,Errors,3296,https://psicode.org,https://github.com/psi4/psi4/pull/3155,1,['Error'],['Errors']
Availability,"im/anaconda3/include"" ../configure --enable-eri=2 --enable-eri3=2 --enable-eri2=2 --with-eri-max-am=5 --with-eri2-max-am=6 --with-eri3-max-am=6 --with-shgauss-ordering=gaussian --prefix=/u/andysim/programming/libint/installdir3 --enable-eri2-pure-sh --enable-eri3-pure-sh`. 3. `make install` (this will take a *very* long time). 4. `make export` - this will generate a tarball that can be used to build a version for Psi4 called `libint-2.7.0-beta.1.tgz`. 5. Untar that tarball somewhere else and modify the file `include/libint2_params.h` to read; ```; #ifndef LIBINT2_MAX_AM_default; # define LIBINT2_MAX_AM_default 4; #endif. #ifndef LIBINT2_MAX_AM_default1; # define LIBINT2_MAX_AM_default1 LIBINT2_MAX_AM_default; #endif. #ifndef LIBINT2_MAX_AM_default2; # define LIBINT2_MAX_AM_default2 LIBINT2_MAX_AM_default; #endif; ```; from line 81 onwards. 6. Make a `build` subdir and from there `cmake .. -DCMAKE_INSTALL_PREFIX=/u/andysim/programming/libint/installdir_2.6 -DLIBINT2_SHGAUSS_ORDERING=gaussian -DCMAKE_CXX_FLAGS=""-fPIC""` The fPIC flag is needed, or you'll get some nasty link errors. 7. Now you can build Psi4. Yay! `cmake .. -DCMAKE_BUILD_TYPE=Debug -DLibint2_DIR=/u/andysim/programming/libint/installdir_2.6/lib/cmake/libint2 -DLibint_DIR=/u/andysim/programming/libint1/installdir/share/cmake/Libint -DCMAKE_CXX_FLAGS=""-g -O0 -gxx-name=/v/apps/gcc/5.4.0/bin/g++ $CXXFLAGS""` The libint1 should be the hacked version with the `Libint_t` changed to `Libint1_t`. Also I strongly recommend adding the `-O0` flag to the compiler flags, because our CMake debug build doesn't do this (we should change that) and the code takes a _very_ long time to compile with optimization. A lot of this will be streamlined in the not so distant future, and much of the complication will be eased when we nuke libint1. Until then, the above command should be sufficient to get you up and running with a development build. Please try it out - I'd love to have some help with getting the derivatives working :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417:1620,error,errors,1620,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-537945417,1,['error'],['errors']
Availability,"imary Basis <==. Basis Set: JUN-CC-PVDZ; Blend: JUN-CC-PVDZ; Number of shells: 6; Number of basis function: 10; Number of Cartesian functions: 10; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (JUN-CC-PVDZ AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry HE line 39 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/def2-qzvpp-jkfit.gbs . Computing basis projection from 3-21G to JUN-CC-PVDZ. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 10 10 0 0 0 0; -------------------------------------------------------; Total 10 10 1 1 1 0; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 0.000 GiB; user supplied 0.366 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Memory [MiB]: 375; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (JUN-CC-PVDZ AUX); Blend: DEF2-QZVPP-JKFIT; Number of shells: 18; Number of basis function: 46; Number of Cartesian functions: 50; Spherical Harmonics?: true; Max angular momentum: 2. Minimum eigenvalue in the overlap matrix is 3.6142168109E-01.; Using Symmetric Orthogonalization. SCF Guess: Orbitals guess was supplied from a previous computation. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -2.85515015411516 -2.85515e+00 1.19401e-03 ; @DF-UHF iter 1: -2.85520007568163 -4.99216e-05 7.84987e-05 DIIS; @DF-UHF iter 2: -2.85520042336024 -3.47679e-07 7.68575e-06 DIIS; @DF-UHF iter 3: -2.85520042767878 -4.31854e-09 3.18063e-07 DIIS; @DF-UHF iter 4: -2.85520042768697 -8.19389e-12 7.59854e-09 DIIS; @DF-UHF iter 5: -2.85520042768698 -6.66134e-15 1.13220e-11 DIIS; @DF-UHF iter 6: -2.85520042768698 -4.44089e-16 7.51303e-13 DIIS; Ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:7692,Mask,Mask,7692,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,1,['Mask'],['Mask']
Availability,"in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. - [x] Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - [x] A Logging file has been introduced. All its contents should be considered experimental and subject to change.; - [x] Dipole derivatives through finite difference of dipoles added, so IR intensities available; - [x] The dummy wavefunctions returned from wrappers always had some questionable properties (e.g., single method for mixed method, largeset HF basis for cbs wavefunction) can be even less realistic (e.g., always def2-svp basis for cbs).; - [x] n-body qcvars renamed (grace period applies); ```; ""CP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""NOCP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""COUNTERPOISE CORRECTED TOTAL ENERGY"": (""CP-CORRECTED TOTAL ENERGY"", 1.7),; ""COUNTERPOISE CORRECTED INTERACTION ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:5445,down,down,5445,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['down'],['down']
Availability,"ined mid-bond sets. To do this I have placed a set of mid-bond definitions in mb-set.gbs and used the heavier rare-gas atoms (Kr, Xe, Rn) to label the mid-bond sets. Using the commands. basis {; assign aug-cc-pVDZ; assign Rn mb-set # gets the basis set for the ghost Rn atoms from mb-set.gbs; }. Psi4 is able to perform standard (non-DF) MP2 and CC calculations using mid-bond functions. However I have encountered problems getting this to work using the DF variants of these methods. As I understand it, to get the DF-MP2, DF-CC etc to work I need to do the following:. 1. Create a set of auxiliary functions for these mid-bond sets. This I have done (mb-set-ri.gbs); 2. Specify the auxiliary basis set using; assign <aux basis> df_basis_scf/mp2. The only source of information I was able to find on the latter was at http://www.psicode.org/psi4manual/master/basissets.html#sec-basisuserdefined. Step 2 is where things fall over. First of all, the correct syntax seems to be ; assign df_basis_scf/mp2 <aux basis>; There seems to be an error on the wiki page shown above. . This syntax works as it allows me to define a specific auxiliary basis for *all* atoms. If I wish to define a specific aux basis for a particular atom (as needs to be done when using mid-bonds) then the command should be; assign Rn df_basis_scf mb-set-ri; This fails in inputparser.py with the following error:. Traceback (most recent call last):; File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 734, in process_input; temp = re.sub(basis_block, process_basis_block, temp); File ""/home/alston/Psi4/psi4conda/lib/python2.7/re.py"", line 155, in sub; return _compile(pattern, flags).sub(repl, string, count); File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 357, in process_basis_block; raise TestComparisonError(message); p4util.exceptions.TestComparisonError: Conflicting basis set specification: assign lines present but shells have no [basname] label. It seems like the line ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/626:1135,error,error,1135,https://psicode.org,https://github.com/psi4/psi4/issues/626,1,['error'],['error']
Availability,"ineq_pople` (never called and not PSI_API) **(merged #2679)**; - [x] Delete unused functions/overloads from `dfocc`: `Array2d::diagonalize, Array2d::davidson, Array2d::cdsyev, Array2d::cdgesv, Array2d::lineq_flin, Array2d::lineq_pople` and `Tensor2d::davidson, Tensor2d::cdsyev, Tensor2d::cdgesv, Tensor2d::lineq_flin, Tensor2d::lineq_pople` (PR #2684); - [x] Delete unused function overloads from `libmints`: `Matrix::diagonalize` (PR #2693); - [x] Delete commented out code, an unused `extern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. A",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:1854,failure,failure,1854,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.h; -- Looking for include file dlfcn.h - found; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for erf; -- Looking for erf - found; -- Looking for MPI_Finalize; -- Looking for MPI_Finalize - not found; -- Checking for restrict keyword; -- Checking for restrict keyword - **restrict**; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran sgemm; -- Looking for Fortran sgemm - not found; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; CMake Error at /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindBLAS.cmake:594 (message):; A required library with BLAS API not found. Please specify library; location.; Call Stack (most recent call first):; /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindLAPACK.cmake:142 (find_package); CMakeLists.txt:135 (find_package),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/36:4366,Error,Error,4366,https://psicode.org,https://github.com/psi4/psi4/issues/36,1,['Error'],['Error']
Availability,"ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found libutil: /usr/lib/x86_64-linux-gnu/libutil.so; -- Found libm: /usr/lib/x86_64-linux-gnu/libm.so; -- Found librt: /usr/lib/x86_64-linux-gnu/librt.so; -- Found libdl: /usr/lib/x86_64-linux-gnu/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /home/vayu/anaconda3/bin/python (found version ""3.5.2""); -- Found Python: /home/vayu/anaconda3/lib/libpython3.5m.so; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: intel-linux; -- CheMPS2 not found. The pre-packaged version will be built.; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - not found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - not found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- GDMA is ENABLED; -- PCMSolver not found. The pre-packaged version will be built.; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/CMakeFiles/CMakeError.log"". ```; The CmakeOutput.log and CMakeError.log are attached. . [CMakeError.log.txt](https://github.com/psi4/psi4/files/801080/CMakeError.log.txt); [CMakeOutput.log.txt](https://github.com/psi4/psi4/files/801081/CMakeOutput.log.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:9111,error,errors,9111,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['error'],['errors']
Availability,"ing some keywords. I don't know how to deprecate these. If they're provided as module-level keywords, then I don't know the technical details of how you would raise a warning message. The bigger problem is when they're global keywords. DFOCC still uses ""level shifting"", so I can only raise a warning when I know what module the user is in. Thoughts on how to handle this?; * Should we be losing ""level shifting""? We can add _damping_ to `libdiis` if there's demand for it. I think there are better things to do with my time. ## Quick Test Status; * Switching out the DIIS version caused the `omp2p5-2` test's OMP2.5 energy to fall outside convergence criteria, again emphasizing how unstable orbital convergence in OCC is. We'll find out what the actual value is by the time I'm done.; * Losing ""level shifting"" was enough to break the `ocepa-grad2` test. This test asks for a higher-than-normal convergence from OCC, so that's no surprise. (I imagine Psi ups the energy convergence default when the user requests a gradient.) As a temp fix, I lowered the demanded energy convergence from 8 to 7. Even after that, we're outside the test tolerance, so I changed the value to boot. If anybody is dying to know the correct answer, I can run it on my Python code.; * `omp2-2` encountered oscillatory convergence, and I responded by lowering the convergence we seek. Again, coupling amplitude and orbital DIIS will break the oscillations and render this test hack unnecessary.; * We may have lost other full tests, but we'll get them back at the end. ## So Lori Knows What to Put in Changelog; - [x] Overhauled orbital convergence in the OCC module. As a result, the `level_shift` and `do_level_shift` keywords have been removed. Contact the developers if you've found a case where the new convergence is worse than old!. ## Checklist; - [x] [Quick tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783:3662,toler,tolerance,3662,https://psicode.org,https://github.com/psi4/psi4/pull/1783,1,['toler'],['tolerance']
Availability,"ing the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), fci, cepa(1), cepa(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc, svwn, and wb97x are verified against external programs (for qcdb's and qcengine's good, not because I distrusted longstanding Psi4 implementations), usually cfour, nwchem, gamess; * ROHF DETCI doesn't match gamess/cfour for CISD or FCI, but doubtless that's implementation choice that I haven't identified. Anyway, that's why thos",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:9611,error,errors,9611,https://psicode.org,https://github.com/psi4/psi4/pull/2731,2,"['avail', 'error']","['available', 'errors']"
Availability,"ing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions.; > ; > Andy.; > ; > > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > > ; > > I think the short answer may be that a lot of the developers are still used; > > to version control models like SVN or CVS.; > > ; > > Honestly I think you have the right idea though, with git there really; > > isn't a need for two repositories for an open source code so long as we; > > adopt the accompanying philosophy. It's now a matter of getting everyone; > > on board.; > > ; > > Sent f",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1888,down,down,1888,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['down'],['down']
Availability,"ing>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die (which this PR now does) and ppl can catch the error if they want print-error-msg. For a long time we had geometry optimizations exit smoothly even if failed for iterations exceeded. That caused some problems (I think @dsirianni hit them), so we switched toward the die+traceback. Now SCF will behave like optimizations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:1632,error,error,1632,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,5,['error'],"['error', 'error-msg']"
Availability,"initially asked in the [forum](http://forum.psicode.org/t/mo-basis-dipole-moments-and-amplitudes-at-positions/1856). my desired use-case is to calculate the amplitude at some list of points, actually (not over all space), so that would also be an reasonable API. the current ""state of the art"" is [here](https://gist.github.com/hokru/9b93fffc093dce0e8af8b9e54c120bb2), which clearly is a lot of work to get amplitudes, and prone to user error. perhaps a useful jumping-off point: [here is where the cubemap creates orbital iso-amplitude contours](https://github.com/psi4/psi4/blob/fbb2ff444490bf6b43cb6e027637d8fd857adcee/psi4/src/psi4/libcubeprop/csg.cc#L628-L653)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1941:437,error,error,437,https://psicode.org,https://github.com/psi4/psi4/issues/1941,1,['error'],['error']
Availability,"inking step. The last lines of the output of `make` are; ```/usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been written to: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/libint2_extern",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:1154,Error,Error,1154,https://psicode.org,https://github.com/psi4/psi4/issues/2572,1,['Error'],['Error']
Availability,install and import errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768:19,error,errors,19,https://psicode.org,https://github.com/psi4/psi4/issues/768,1,['error'],['errors']
Availability,"int,char,char,char,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYGVX@psi@@YAHHDDDHPEANH0HNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48417,error,error,48417,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24997,error,error,24997,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13095,error,error,13095,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39902,error,error,39902,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15915,error,error,15915,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ion as the error mentions. This is either occurring because:; 1) Your PSIDATADIR path is pointing to an older library version; 2) You wrote a custom plugin that still uses this functionality. Please view the following topic: http://forum.psicode.org/t/wavefunction-passing-update/139. Cheers,; Daniel Smith. > On Mar 10, 2016, at 9:58 AM, hernan3009 notifications@github.com wrote:; > ; > It was possible to compile and install psi4 without problems, but the make command returned; > ; > hernan@carlos:~/Power Method/Psi4/pluginintegrales$ make; > /usr/bin/g++ -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DFC_SYMBOL=2 -DHAVE_SYSTEM_NATIVE_LAPACK -DHAVE_SYSTEM_NATIVE_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused -I/home/hernan/Programas/psi4/instalacion/interfaces/include -I/home/hernan/Programas/psi4/instalacion/src/lib -I/home/hernan/Programas/psi4/psi4/src/lib -I/home/hernan/Programas/psi4/psi4/include -I/home/hernan/Programas/psi4/instalacion/include -I/home/hernan/Programas/psi4/instalacion/boost/include -I/usr/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include -c pluginintegrales.cc; > pluginintegrales.cc: In function ‘psi::PsiReturnType psi::pluginintegrales::pluginintegrales(psi::Options&)’:; > pluginintegrales.cc:63:64: error: ‘class psi::Process::Environment’ has no member named ‘wavefunction’; > boost::shared_ptr<Wavefunction> wfn = Process::environment.wavefunction();; > ^; > make: **\* [pluginintegrales.o] Error 1; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/308#issuecomment-194954608.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/308#issuecomment-194993406:1763,error,error,1763,https://psicode.org,https://github.com/psi4/psi4/issues/308#issuecomment-194993406,2,"['Error', 'error']","['Error', 'error']"
Availability,"ion with the CASPT2 interface at one point in the future.; - I don't use the current HEAD of psi4/psi4, but use the tagged version https://github.com/psi4/psi4/releases/tag/0.5, but from the git commit tag in your input above, I gather you use this version as well. @loriab : good thing psi4 prints the commit tag!; - The compiler with which I compiled psi4 and chemps2 is gcc/g++ 5.2.1 and I am on Ubuntu 15.10. I also tried the intel compiler 16.0.0 20150815 and mixtures of both, but only by compiling everything with the GNU compiler I was able to make things work thus far. This means that before releasing v1.7 I also need to check several compiler combinations and make things work, but because compilers get updated at regular times, I will wait with that.; - That all being said, I don't know what is going on. You clearly use the right git commit of psi4 (8e01b1f), but the plugin API is clearly wrong. The following is copied from a message above:. ```; An error has occurred Py-side; Traceback:; : Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in . File ""/home/LUCA/psi-master_18_02.2016/psi4-0.5/share/python/driver.py"", line 586, in energy; wfn = procedures['energy']lowername. File ""./../dmrg/pymodule.py"", line 52, in run_dmrg; returnvalue = psi4.plugin('dmrg.so'); ```. For the record I copy my file 'pymodule.py' here:. ```; import psi4; import re; import os; import inputparser; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; import p4util; from p4xcpt import *. def run_dmrg(name, **kwargs):; r""""""Function encoding sequence of PSI module and plugin calls so that; dmrg can be called via :py:func:`~driver.energy`. For post-scf plugins. >>> energy('dmrg'). """"""; lowername = name.lower(); kwargs = p4util.kwargs_lower(kwargs). # Your plugin's psi4 run sequence goes here; #psi4.set_global_option('BASIS', 'sto-3g'); psi4.set_lo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:1844,error,error,1844,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,1,['error'],['error']
Availability,"ion': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated)) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1125; #50 0x00007faabd6e0783 in run_mod (mod=<optimized out>, filename=<optimized out>, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawText",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:18387,error,error,18387,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"ionError as err:; # * this can legitimately happen if total chg or mult has been set; # independently b/c fragment chg/mult not reset. so try again.; @@ -1474,7 +1474,7 @@ class Molecule(LibmintsMolecule):; ); molrec['fragment_charges'] = [None] * len(fragments); molrec['fragment_multiplicities'] = [None] * len(fragments); - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', tooclose=1.e-6, **molrec); forgive.append('fragment_charges'); forgive.append('fragment_multiplicities'); compare_molrecs(validated_molrec, molrec, 'to_dict', atol=1.e-6, forgive=forgive, verbose=0); ; diff --git a/psi4/src/psi4/libmints/molecule.h b/psi4/src/psi4/libmints/molecule.h; index 30ef61e..6129121 100644; --- a/psi4/src/psi4/libmints/molecule.h; +++ b/psi4/src/psi4/libmints/molecule.h; @@ -317,9 +317,9 @@ class PSI_API Molecule {; ; /// @{; /// Tests to see of an atom is at the passed position with a given tolerance; - int atom_at_position1(double*, double tol = 0.05) const;; - int atom_at_position2(Vector3&, double tol = 0.05) const;; - int atom_at_position3(const std::array<double, 3>&, const double tol = 0.05) const;; + int atom_at_position1(double*, double tol = 1.e-6) const;; + int atom_at_position2(Vector3&, double tol = 1.e-6) const;; + int atom_at_position3(const std::array<double, 3>&, const double tol = 1.e-6) const;; /// @}; ; /// Do we reinterpret coordentries during a call to update_geometry?; @@ -505,7 +505,7 @@ class PSI_API Molecule {; * Force the molecule to have the symmetry specified in pg_.; * This is to handle noise coming in from optking.; */; - void symmetrize(double tol = 0.05, bool suppress_mol_print_in_exc = false);; + void symmetrize(double tol = 1.e-6, bool suppress_mol_print_in_exc = false);; /// @}; ; /**; @@ -668,7 +668,7 @@ class PSI_API Molecule {; /// Returns the Schoenflies symbol; std::string schoenflies_symbol() const;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879:1880,toler,tolerance,1880,https://psicode.org,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879,1,['toler'],['tolerance']
Availability,"iout_1620666994506/work/tests/sapt-exch-disp-inf/input.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/testresults.log"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-pa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1685,ERROR,ERROR,1685,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"ipment will be moved to a script named ""psi4"" in the binary location. This will allow all current Psi4 input files to be run normally. **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if yo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:2974,error,errors,2974,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['error'],['errors']
Availability,"ir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313:1545,error,errors,1545,https://psicode.org,https://github.com/psi4/psi4/issues/313,1,['error'],['errors']
Availability,"is is a draft of the DLPNO-CCSD PR that will be coming in the next few months. The purpose of this is for the developers and research groups to be able to run and test DLPNO-CCSD before it is officially part of the code. . Credit to @JoseMadriaga for the derivations ; [LocalCCSD1to10.pdf](https://github.com/psi4/psi4/files/11114337/LocalCCSD1to10.pdf). Useful References:; [Original DLPNO-CCSD Paper](https://aip.scitation.org/doi/full/10.1063/1.47735); [Sparse Maps II Paper](https://aip.scitation.org/doi/10.1063/1.4939030). Example Input File; ```; memory 20 GB. molecule mol {; 0 1; O 0.705 0.744 0.16; H -0.071 0.264 0.45; H 1.356 0.064 -0.014; symmetry c1; }. set {; basis cc-pVDZ; scf_type df; freeze_core true; pno_convergence normal; }; energy('dlpno-ccsd'); ```. ### Results (Waterclusters in TZ); [Speedups, relative to DF-CCSD]; ![wc_tz_speedups](https://user-images.githubusercontent.com/60559795/228892229-c3269bf9-3386-4861-8660-92a6dcc3685e.jpeg). [Percent Correlation Energy Recovered, relative to DF-CCSD, all >= 99.9%]; ![wc_tz_percent_corr_recovered](https://user-images.githubusercontent.com/60559795/228892322-7c968c62-f874-496c-84e3-06b65c84803d.jpeg). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Implement the DLPNO-CCSD algorithm. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feel free to use this code, it is not fully tested yet, but preliminary tests show encouraging results, and is MUCH faster than conventional CCSD; - [ ] If you benchmark my code, please post results in the thread. ## Questions; - [ ] Question1. ## Checklist; - [ ] Add documentation; - [ ] Add references to terms and equations; - [ ] Tests added for any new features; - [ ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2915:1026,Recover,Recovered,1026,https://psicode.org,https://github.com/psi4/psi4/pull/2915,1,['Recover'],['Recovered']
Availability,issue installing from downloaded .exe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236:22,down,downloaded,22,https://psicode.org,https://github.com/psi4/psi4/issues/2236,1,['down'],['downloaded']
Availability,"ists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3793,Error,Error,3793,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"itals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a lot to break the sigma-pi symmetry. There's often enough of numerical noise so that your solution vecto",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3051,error,error,3051,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,1,['error'],['error']
Availability,"itals guess (#1672); - Analytic Hessians for LSDA functionals (#1664); - Add qc2p basis set from CFOUR (#1718); - Update to g2g v2 API (#1718); - Density cumulant functional theory (DCFT) thoroughly rebranded to density cumulant theory (DCT). Adjust your calls and keywords accordingly or psi will reproach you (#1719).; - Drop Travis-CI (thank you for years of compiling) and consolidate on Azure for Linux and Windows builds so we can host more complex pipelines (#1752).; - Update orthogonalization routines and consolidate them back to libmints instead of SCF (#1759); - Let the `Deriv` class be instructable in the flavor it computes, rather than trying to devine SCF vs correlated (#1756); - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#1854) ; - Improved general error reporting (#1862,#1868) ; - Removes CEPA0 from DCT module (#1873) ; - Remove debugging and timing code from psimrcc (#1879, #1901) ; - Add cython (#1889) ; - Update tolerances for mkl 2020.1 (#1896) ; - LGTM (#1905, #2038) ; - MP2/MP3 test suite (#1850, #1971) ; - Standardize CEPA and LCCD (#1909) ; - LCCD test suite (#1913, #1937) ; - Extensive improvements to DFGrad (#1915, #1923, #1953, #1974, #2049, #2079) ; - Expose cube-generating functions to python (#1917) ; - Fix cppe interface (#1922) ; - Move import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:7636,avail,available,7636,https://psicode.org,https://github.com/psi4/psi4/issues/1562,3,"['avail', 'error', 'toler']","['available', 'error', 'tolerances']"
Availability,"its<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::psio_write_entry(unsigned long, char const*, char*, unsigned long); ```; This then results in a second PSIO error upon each subsequent optimization iteration, when attempting to read the binary optimization data from file:; ```; Fatal Error: PSIO Error; Error occurred in file: /theoryfs2/ds/sirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::psio_error(unsigned long, unsigned long); psi::PSIO::open(unsigned long, int); psi::psio_open(unsigned long, int); opt::opt_io_is_present(); ```; This finally results in the optimizer spinning its wheels for the remainder of the allotted iterations. The usual PSIO error-culprit, an un-touchable filesystem, was ruled out for both machines on which this behavior was observed. Input:; ```; # index A24-7-dimer label Dimer from ammmonia_methane_C3v. memory 14000 mb. molecule mol {; units Angstrom; no_com; no_reorient; 0 1; N 0.001106462041 -0.000130846927 1.849133409958; H 0.938627974105 -0.000139345380 2.221618285244; H -0.467316580071 -0.811849948182 2.222477040520; H -0.467307391010 0.811579719379 2.222474714333; H -0.000457075852 -0.000011938197 -0.942103507206; C -0.001019750816 0.000109523659 -2.027776337389; H 0.509840850903 0.885353515687 -2.394362733084; H 0.509834400679 -0.885039296153 -2.394623104348; H -1.023308879978 0.000128616114 -2.393761958029. }. set e_convergence 11; set basis cc-pvtz; set scf guess sad; set scf dft_radial_points 150; set scf scf_type df; set scf dft_spherical_points 434; set scf maxiter 100; set guess_persist true; set geom_maxiter 300. set optking {; dynamic_level=1; full_hess_every 0; max_energy_g_convergence 1e-6; max_force_g_convergence 1.5e-5; rms_force_g_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789:1364,error,error-culprit,1364,https://psicode.org,https://github.com/psi4/psi4/issues/789,1,['error'],['error-culprit']
Availability,"itude more lines of code than the variadic version) and is limited to about 10-20 parameters (depending on the compiler). In fact the lack of variadic templates is why the boost tuple is limited to 10 parameters. Although 10 is often more than enough, there are reasons to need more, particularly for loop unrolling and extensive logic trees. For example I was able to replace 118 lines of logic (assigning atomic names/masses/ etc.) with about 4 thanks to variadic templates. I think the latter is far easier to read and maintain. I know I get a lot of hate about my love of variadic templates so perhaps this analogy will help: anytime you have used a Python tuple, the only true equivalent is a variadic template. Rvalue references are probably the only other feature I'd label as an essential C++11 feature. Not supporting them can lead to needing extensive code redesign or major performance hits when objects interact. With foresight, rvalue references can be simulated by unique pointers (available in Boost), but the reality is it is often hard to have such foresight. As for the other main C++11 features, standard library implementations of shared/unique pointers, the new chrono and random number generator libraries are all in Boost, a dependency I foresee us having forever. Lamdas are syntactic sugar for static functions. Strong enums are just little wrapper classes around a primitive type . Initializer lists are perhaps borderline essential, but ultimately I think are not needed when you realize that they have always existed for primitive data types, and a constructor is meant to provide essentially the same support for user created objects. The auto keyword is an abomination and should never be used [there is a big difference between you knowing what type something is and the compiler knowing what type something is; the compiler has caught many of my errors where I thought I was getting an object of type T, but really it was type M (usually failing to dereference a share",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/85#issuecomment-97772824:2318,avail,available,2318,https://psicode.org,https://github.com/psi4/psi4/issues/85#issuecomment-97772824,1,['avail'],['available']
Availability,"iver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasiri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:2210,Error,Error,2210,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['Error'],['Error']
Availability,"k (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:3604,Error,Error,3604,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,3,['Error'],['Error']
Availability,"l Python Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile. . If it helps, I'm running Ubuntu, with gnu compilers. . Here's the error message: . `/home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed; make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt; Makefile:127: recipe for target 'all' failed; make[3]: *** [all] Interrupt; CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:1096,error,error,1096,https://psicode.org,https://github.com/psi4/psi4/issues/536,1,['error'],['error']
Availability,"l bring it to fruition within the Python-side SCF iteration scheme. The `PCM` object wraps the PCMSolver library and offers one method: `compute_PCM_terms` to calculate the polarization energy **and** the Fock matrix contributions due to the continuum. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Clean-up the `PCM` object and corresponding sources:; * Forward-declare as much stuff as possible instaed on `include`-ing; * Remove raw pointers in favor of `std::vector`, `Vector` or `std::shared_ptr`; * Use a [scoped `enum`](http://en.cppreference.com/w/cpp/language/enum) instead of an [unscoped `enum`](http://en.cppreference.com/w/cpp/language/enum); - [x] Moved `HF::print_energies()` Py-side; - [x] Mirror changes introduced in #896 ; - [x] Add tests for density-fitted SCFs (thanks @CDSherrill for pointing this out); * **User-Facing for Release Notes**; - [x] Exposing the `PCM` object to Python.; - [x] Restoring PCM functionality with Py-side iterations.; - [ ] Document behavior for gradients (see question). ## Questions; - @andysim and/or @lothian, the file [psi4/libmints/integral.h](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/integral.h#L487) has a comment `/// Want to change the name of this after the PCM dust settles`. Do you remember what was the intention there?; - The electrostatic potential and apparent surface charge vectors are now dimensioned using a `Dimension` object that keeps track of how many cavity points per irrep there are. This is one step to get PCM fully functional with point group symmetry. It seems to me the integrals are always calculated using C1. How can I get them to be calculated with symmetry?; - As (probably not very clearly) noted in the manual, **analytical gradients including PCM are NOT available**. Should there be a stop in the code when such a request is made or should the code be routed to use a numerical gradient?. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/878:1939,avail,available,1939,https://psicode.org,https://github.com/psi4/psi4/pull/878,1,['avail'],['available']
Availability,"l object now has Hessian-Vector functionality.; - [x] Added many C++ calls to the Python interface.; - [x] Reworked the building of superfunctionals. Note that the coefficients set when building a functional are no longer modified by exact exchange or MP2 correlation factors.; - [x] DFT Functionals now takes advantage of polarized vs unpolarized DFT kernels.; - [x] Added generalized solvers in `p4util/solvers.py`. These include DIIS, CG, BiCGSTAB, and Davidson.; - [x] New density-fitted AO->MO transform object. More efficient than previous objects and has multiple modes depending on the type of computation (direct or AO storage).; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order SCF convergence to DFT Wavefunctions.; - [x] Adds the gradient regularized asymptotic correction (GRAC) to DFT through the option `DFT_GRAC_SHIFT`.; - [x] Adds a density-fitted second-order Electron Propagator code. ; - [x] Adds the density-fitted SAPT(DFT) code.; - [x] Adds linear response DFT.; - [ ] Adds TDDFT methodologies.; - [x] To avoid conflict the function `property` was renamed to `properties`.; - [x] More involved JSON input/output interface.; - [x] Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - [x] Def2 family of basis ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:1641,avail,available,1641,https://psicode.org,https://github.com/psi4/psi4/pull/698,1,['avail'],['available']
Availability,"l of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain integrals, not derivative ints, and is built with autotools.; * Psi uses a different integral ordering than every other open-source QC package, and this is a *compile-time* option, not a run-time option https://github.com/evaleev/libint/issues/190 That is, no single build of libint2 could work for all the downstreams on c-f that want to use it. (It could be worse -- in integral package land, there's also commonly source-generation-time options :-); * the production-level Linux libint2 package has 26k source files, takes way more than 6h to build running on 12 cores, and needs `ulimit` reset on the building computer to complete; * Windows libint2 package has only ever been built on @andysim 's laptop. I worry that between the careful choice of compiler he had to make and the clang-cl details that something would conflict with c-f's locked-down build tooling. Of course we get away with this now because libint2 gets pulled along with psi from `-c psi4`. I've read some of those threads that it took to get OpenMM GPU code working at production grade on c-f, and I judge that a bigger hurdle than libint2. But libint2 is formidable nonetheless. Glad to talk further, though I don't think I have blocks of time to actually work on this this year. Thanks for using psi4 enou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:2397,down,downstreams,2397,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['down'],['downstreams']
Availability,"l psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMM@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymv，该符号在函数 ""void __cdecl psi::C_DSYMV(char,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:12306,error,error,12306,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"l psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44408,error,error,44408,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"l/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed; make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt; Makefile:127: recipe for target 'all' failed; make[3]: *** [all] Interrupt; CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed; make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt; Makefile:138: recipe for target 'all' failed; make: *** [all] Interrupt; `",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:1508,Error,Error,1508,https://psicode.org,https://github.com/psi4/psi4/issues/536,1,['Error'],['Error']
Availability,"l: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:21582,Toler,Tolerance,21582,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Toler'],['Tolerance']
Availability,"l: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:9184,Toler,Tolerance,9184,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Toler'],['Tolerance']
Availability,"ld/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find this function, I took a lucky guess that Psi4 had some kind of cleanup function since independent calculations succeeded. Instead, this should probably be in: https://psicode.org/psi4manual/master/psiapi.html. I am fully willi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:1946,error,error,1946,https://psicode.org,https://github.com/psi4/psi4/issues/3164,1,['error'],['error']
Availability,"le ""/scratch/glick/psi4/objdir/stage/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 31, in <module>. RuntimeError: ; Fatal Error: Broken Symmetry; Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc on line: 284; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::symmetrize(double, bool); psi::Molecule::symmetrize_to_abelian_group(double). Printing out the relevant lines from the Psithon --> Python processed input file:; ; ; """""",""mol""); core.IO.set_default_namespace(""mol""); print(mol.schoenflies_symbol()); --> mol.symmetrize(0.14); print(mol.schoenflies_symbol()). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Broken Symmetry !; ! Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc !; ! on line: 284 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Molecule::symmetrize(double, bool) !; ! psi::Molecule::symmetrize_to_abelian_group(double) !; ! !; !----------------------------------------------------------------------------------!; ```. Curiously, if I use a slightly different starting geometry (obtained by symmetrizing the above geometry with Avogadro2, loose setting), the `symmetrize` function behaves as expected: any tolerance above some small value (2e-6) results in the correct point group, and the above error is never triggered. input: ; ```; molecule mol {; 0 1 ; O 2.135493 0.369610 1.674880; C 2.154973 0.136801 2.845879; H 2.843921 -0.510511 3.261214; H 1.483799 0.571691 3.498996; }. tol = 2e-6; print(mol.schoenflies_symbol()); mol.symmetrize(tol); print(mol.schoenflies_symbol()); ```; stdout:; ```; c1; c2v; ```. Has anyone seen this error before?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2579:2266,toler,tolerance,2266,https://psicode.org,https://github.com/psi4/psi4/issues/2579,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"le *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36489,error,error,36489,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:36064,error,error,36064,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,ch",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50591,error,error,50591,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35099,error,error,35099,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/90:1452,Error,Error,1452,https://psicode.org,https://github.com/psi4/psi4/issues/90,4,['Error'],['Error']
Availability,"led); 	263 - omp2-3 (Failed); 	274 - omp3-3 (Failed); ```. The error message for `pywrap-checkrun-rhf` is also consistent with convergence issues:; ```; 45 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 3.01e-15; 46 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 1.73e-15; 47 -75.0144633211 -1.42e-14 1.85e-05 1.42e-04 9.95e-16; 48 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 5.65e-16; 49 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 3.27e-16; 50 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 1.88e-16; ======================== OCEPA IS NOT CONVERGED IN 50 ITERATIONS ============; Traceback (most recent call last):; File ""/Users/fevange/Source/psi4/objdir-Debug/stage/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 54, in <module>; File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/driver.py"", line 711, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/procrouting/proc.py"", line 752, in select_olccd_gradient; return func(name, **kwargs); File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/procrouting/proc.py"", line 2147, in run_occ_gradient; occ_wfn = core.occ(ref_wfn); RuntimeError:; Fatal Error: OCC iterations did not converge; Error occurred in file: /Users/fevange/Source/psi4/psi4/src/psi4/occ/occ_iterations.cc on line: 363; The most recent 5 function calls were:; Printing out the relevant lines from the Psithon --> Python processed input file:; for method in Earray:; water.reset_point_group(sym); water.fix_orientation(True); water.update_geometry(); banner('Testing %s' % (method)); --> G, wfn = gradient(method, return_wfn=True); ans = wfn.energy(); print('%16s\t%s\t%s\t%s' % (method, water.schoenflies_symbol(), variable('CURRENT ENERGY') - ans, ans)); clean(); print(' Checking gradient methods (excited state) ...'); Earray = [; Psi4 stopped on: Friday, 31 January 2020 05:10PM; Psi4 wall time for execution: 0:00:06.47; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793:1741,Error,Error,1741,https://psicode.org,https://github.com/psi4/psi4/issues/1793,2,['Error'],['Error']
Availability,"length in Eh. Options added to properties(‘ccsd’, properties=[‘polarizability’, ‘rotation’]): ; - local_method: `PNO`, `PNO++` and `CPNO++`; - local_pert: `DIPOLE`; - unpert_cutoff: double between 0 and 1. Pytest added to check the functionality at:; - Tcut=0 against the conventional CC code; - Tcut=1e-5 against hardcoded values. Some additional tweaks to existing code that were needed for me to run the simulation code:. - Under cclambda/ , L1_build and dijabL2 functions were outside of the CCLambdaWavefunction class, while L2 build functions were not. So I moved `L1_build`, `cc2_L1_build` and `dijabL2` into the class to make it more consistent and also to help run the simulation code. - cctransort/local.cc has an extra function to localize the occupied orbitals before the transformation of the one- and two-electron integrals. - Overloaded the schmidt_add_row function in libmints/matrix.cc in order to specify the cutoff value for vector norms to be discarded. - The ccenergy function that is called when Psi4 fails attempts to switch off the ‘ccenergy’ timer twice. The error was mentioned in issue #1864. And I see a new pull request that removes the line (#2150). I just commented out the line that was redundantly switching off the timer and that causes Psi4 to exit correctly when iterations fail to converge. - The psio_tocprint function under libpsio/psio.h didn’t match its definition in libpsio/tocprint.cc so I commented out the extra argument. ## Todos; - [x] Add simulation code to CCLR; - [x] Add tests; - [x] Remove the `WERNER` option completely, since it’s not implemented. ## Questions; - [ ] Old (non-working) code in ccenergy/ has been shifted to local_old.cc and Local_old.h, is it okay if I get rid of this code? There are also identical local.cc files under cclambda/ and ccresponse/ that are not needed. ## Checklist; - [x] Tests added for any new features; - [x] All or relevant fraction of full tests run. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2151:1689,error,error,1689,https://psicode.org,https://github.com/psi4/psi4/pull/2151,2,"['error', 'redundant']","['error', 'redundantly']"
Availability,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34:3101,avail,available,3101,https://psicode.org,https://github.com/psi4/psi4/issues/34,4,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3; -- Fortran compiler flags: -fcray-pointer -DVAR_GFORTRAN -DVAR_MFDS -fno-range-check -fautomatic -fPIC -fimplicit-none -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -funroll-all-loops -w -ftree-vectorize; -- Libraries : /cluster/apps/openblas/0.2.13_seq/x86_64/gcc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7678,Error,Error,7678,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"libboost_regex.so -DBoost_SERIALIZATION_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_serialization.so -DBoost_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7112,Error,Error,7112,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,libmints/matrix class error?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/274:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/issues/274,1,['error'],['error']
Availability,"lid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/p4util/text.py ...; File ""/usr/lib64/psi4/driver/p4util/text.py"", line 197; print(stuff, file=sys.stdout); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/interface_cfour.py ...; File ""/usr/lib64/psi4/driver/procrouting/interface_cfour.py"", line 356; print('Unable to remove CFOUR temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/proc.py ...; File ""/usr/lib64/psi4/driver/procrouting/proc.py"", line 3767; print('Unable to remove MRCC temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/interface_gcp.py ...; File ""/usr/lib64/psi4/driver/qcdb/interface_gcp.py"", line 285; raise OSError('Unable to remove gcp temporary directory: {}'.format(gcp_tmpdir)) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/intf_dftd3/runner.py ...; File ""/usr/lib64/psi4/driver/qcdb/intf_dftd3/runner.py"", line 135; raise RuntimeError(err) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/intf_dftd3/worker.py ...; File ""/usr/lib64/psi4/driver/qcdb/intf_dftd3/worker.py"", line 45; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/tests/test_matrix.py ...; File ""/usr/lib64/psi4/tests/test_matrix.py"", line 203; doublet_args.append((group_size, *aargs, *bargs, t, t, 'rectangular')); ^; SyntaxError: invalid syntax. error: Bad exit status from /var/tmp/rpm-tmp.WhlbsT (%install). RPM build errors:; Bad exit status from /var/tmp/rpm-tmp.WhlbsT (%install); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1565:3198,error,error,3198,https://psicode.org,https://github.com/psi4/psi4/issues/1565,2,['error'],"['error', 'errors']"
Availability,"lies_symbol()); ```; stdout (0.13 tolerance):; ```; c1; c1; ```; stdout (0.14 tolerance):; ```; c1; Traceback (most recent call last):; File ""/scratch/glick/psi4/objdir/stage/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 31, in <module>. RuntimeError: ; Fatal Error: Broken Symmetry; Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc on line: 284; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::symmetrize(double, bool); psi::Molecule::symmetrize_to_abelian_group(double). Printing out the relevant lines from the Psithon --> Python processed input file:; ; ; """""",""mol""); core.IO.set_default_namespace(""mol""); print(mol.schoenflies_symbol()); --> mol.symmetrize(0.14); print(mol.schoenflies_symbol()). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Broken Symmetry !; ! Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc !; ! on line: 284 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Molecule::symmetrize(double, bool) !; ! psi::Molecule::symmetrize_to_abelian_group(double) !; ! !; !----------------------------------------------------------------------------------!; ```. Curiously, if I use a slightly different starting geometry (obtained by symmetrizing the above geometry with Avogadro2, loose setting), the `symmetrize` function behaves as expected: any tolerance above some small value (2e-6) results in the correct point group, and the above error is never triggered. input: ; ```; molecule mol {; 0 1 ; O 2.135493 0.369610 1.674880; C 2.154973 0.136801 2.845879; H 2.843921 -0.510511 3.261214; H 1.483799 0.571691 3.498996; }. tol = 2e-6; print(mol.schoen",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2579:1567,Error,Error,1567,https://psicode.org,https://github.com/psi4/psi4/issues/2579,2,['Error'],['Error']
Availability,"line 81, in <module>; from .driver import endorsed_plugins; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 32, in <module>; import v2rdm_casscf; File ""/opt/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 39, in <module>; psi4.core.plugin_load(sofile); RuntimeError: ; Fatal Error: load_plugin: Cannot open library: /opt/psi4/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZNK3psi12Wavefunction26tpdm_gradient_contributionEv; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1514132855674/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 51; The most recent 5 function calls were:. psi::plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&); py_psi_plugin_load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >); pybind11::cpp_function::dispatcher(_object*, _object*, _object*). forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002AC3069B82CD Unknown Unknown Unknown; libpthread.so.0 00002AC301BBD1F0 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC30148A0D1 Unknown Unknown Unknown; ld-linux-x86-64.s 00002AC3014847A6 Unknown Unknown Unknown; libdl.so.2 00002AC301DCB5EC Unknown Unknown Unknown; libdl.so.2 00002AC301DCB10F Unknown Unknown Unknown; core.so 00002AC303C6DC02 Unknown Unknown Unknown; core.so 00002AC303DC58E2 Unknown Unknown Unknown; core.so 00002AC303DE4A13 Unknown Unknown Unknown; core.so 00002AC303955DEC Unknown Unknown Unknown; libpython3.6m.so. 00002AC30175D1C9 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301705E96 Unknown Unknown Unknown; libpython3.6m.so. 00002AC3018614B5 Unknown Unknown Unknown; libpython3.6m.so. 00002AC301810E03 Unknown Unknown Unknown; libpython3.6m.so. 00002AC30182F8FA Unknown Unknown Unknown; python 0000000000400C1D Unknown Unknown Unknown; libc.so.6 00002AC3026F9A15 Unknown Unknown Unknown; python 000000000040",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936#issuecomment-373052900:1334,fault,fault,1334,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373052900,1,['fault'],['fault']
Availability,link: http://forum.psicode.org/t/compute-property-at-given-3d-coordinates/1781. The basic functionality is already available in the ESP code: https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1015,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1888:115,avail,available,115,https://psicode.org,https://github.com/psi4/psi4/issues/1888,1,['avail'],['available']
Availability,linking error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/785:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/785,1,['error'],['error']
Availability,"lob/master/psi4/src/psi4/libfock/cubature.cc#L5125. But from what I can tell, it never gets called. In the attached minimal example I set a breakpoint at `void SphericalGrid::initialize_lebedev()` and it's _never hit_. I also set a breakpoint at `s->order_ = lebedev_mapping_[npoints];` (the line where things hang on an Unlucky Run), and that line is definitely hit (so my breakpoints are firing correctly). I'm not sure what the consequences of this all are, as I seem to be getting sensible energies (though I suppose I haven't compared to a known good literature benchmark calculated without psi4). I don't think I'm the first person to run into concerns in this part of the code, though, given this comment:; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L3812. Here's a minimal file to just check that `initialize_lebedev` is never called:; ```; set freeze_core 1; set {; basis STO-3G; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; dft_vv10_postscf False; wcombine False; }; molecule mol {; 0 1; C 0.9314972462818318 9.553873448534286 1.4618215727211896; C 0.407816021141855 8.469506309378442 2.18786320317928; C 0.8158282265296265 7.159078273321417 1.778073368593668; C 1.6705486753474763 6.941146237307343 0.7209312466052733; C 2.2362488662446047 8.008509869086277 0.003971742160492786; C 1.911850027633602 9.341079539288122 0.4146901215657727; H 0.614495362639488 10.566900793575911 1.4754165926364617; H -0.36704844148631577 8.614110059906363 3.04421928826377; H 0.4567894628980789 6.157197048912012 2.369426098541459; H 1.8364925212621395 5.872552432013023 0.3910028702339573; H 2.9471948988553818 7.873466587177986 -0.782748863606265; H 2.4659886000145983 10.188822366489614 -0.03294075189628659; units angstrom; no_reorient; no_com; symmetry c1; }; energy('pbe'); ```. And below is the fu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735:3555,robust,robust,3555,https://psicode.org,https://github.com/psi4/psi4/issues/2735,1,['robust'],['robust']
Availability,"long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8371,error,error,8371,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"long run (for us and presumably other users) if we can get conda packaging for the Psi4 stack moved over to `conda-forge` - something we'd be happy to take a role in. * **Would this be useful for Psi4 developers and/or users?** I have personally had good experiences with migrations, both as a developer/maintainer and user. Getting everything on one channel (and using `conda-forge`'s existing automation) should help with dependency resolution/compatibility and in principle should also make build processes smoother. It would unblock some production issues with our software and be generally valuable for us - but we absolutely don't want to make life harder on for Psi4 developers/maintainers.; * **What technical blockers exist?** In the past we have gotten over some large hurdles (migrating OpenMM included contributing a recipe for CUDA toolkits) and more tedious blockers (migrating the OpenFF stack involved contributing something like 10-20 separate packages, piece by piece). `conda-forge` has [some tooling](https://conda-forge.org/docs/maintainer/knowledge_base.html#using-cmake) built around CMake, including MKL and some number of compilers. (Sorry - I'm not really an expert in packaging compiled code so I can't say much more about this - others may chime in!). But I don't know if there are insurmountable blockers to this process, or if that's been explored recently.; * **What can we do to help?** We have a significant amount of person-time available to contribute from people with experience contributing and maintaining packages on `conda-forge`. If needed, we are likely able to pull in further resources to get support from people with vastly more conda-related expertise than myself, including `conda-forge` core team members. . I presume this has been discussed in the past, but I could not find a stub issue nor [earlier attempts](https://github.com/conda-forge/staged-recipes/pulls?q=is%3Apr+is%3Aclosed+psi4) at doing this. cc: @SimonBoothroyd @dotsdl @j-wags @jthorton",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300:2195,avail,available,2195,https://psicode.org,https://github.com/psi4/psi4/issues/2300,1,['avail'],['available']
Availability,"looks like it found another one . ```; [ 5%] Building CXX object src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o; cd /home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libdiis && /usr/bin/g++-10 -DUSING_LAPACK_MKL -I/home/vsts/work/1/s/psi4/include -I/home/vsts/work/1/s/psi4/src -I/usr/share/miniconda/envs/p4env/include/python3.8 -isystem /usr/share/miniconda/envs/p4env/include -march=native -pedantic-errors -O3 -DNDEBUG -std=c++17 -fPIC -fvisibility=hidden -fvisibility-inlines-hidden -fopenmp -MD -MT src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o -MF CMakeFiles/diis.dir/diismanager.cc.o.d -o CMakeFiles/diis.dir/diismanager.cc.o -c /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc; In file included from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.h:38,; from /home/vsts/work/1/s/psi4/src/psi4/libdiis/diismanager.cc:29:; /home/vsts/work/1/s/psi4/include/psi4/pybind11.h:46:52: error: extra ‘;’ [-Wpedantic]; 46 | PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);; | ^; make[5]: *** [src/psi4/libdiis/CMakeFiles/diis.dir/build.make:76: src/psi4/libdiis/CMakeFiles/diis.dir/diismanager.cc.o] Error 1; make[5]: Leaving directory '/home/vsts/work/1/s/build/psi4-core-prefix/src/psi4-core-build'; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033:432,error,errors,432,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-1992067033,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"looks like pcmsolver is the culprit. add `psi4::libint2=*=hc9558a2_9 pytest=5 psi4::pcmsolver=*=py38h6d17ec8_2` to the env specs. py38 passes with that. note that you'll have to adjust the python version in the pcmsolver buildstring. Yes, v1.5 would be the primary victim. v1.6 is latest, so the newest-solving packages from `-c psi4` are built to work with it. Like wise v1.7.dev* and `-c psi4/label/dev`. In this case, v1.5 could have benefitted from more pins. For solid reproducibility, the psi4conda installers have the advantage. I'll have to add the add'l packages to the psicode download page command matrix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2596#issuecomment-1151558412:587,down,download,587,https://psicode.org,https://github.com/psi4/psi4/issues/2596#issuecomment-1151558412,1,['down'],['download']
Availability,"looks like typos in options snagging up the docs:. ```; /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:359: ERROR: Undefined substitution referenced: ""optking_frag_ref_atoms"".; /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/optking.rst:359: ERROR: Undefined substitution referenced: ""otking__frag_ref_atoms"".; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1337727223:134,ERROR,ERROR,134,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1337727223,2,['ERROR'],['ERROR']
Availability,"losure=0x0) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:4327; #48 0x00007faabd6bfe3b in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:718; #49 0x00007faabd6e1068 in run_eval_code_obj (co=0x7faa87377d40, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawText",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:16135,error,error,16135,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"low is the full file that is an example of one I ran into the hang with (note that if I run it again, it usually runs just fine... I have only noticed this horrible hang behavior because I am running a _very large_ number of calcs on a daily basis, and eventually get unlucky!). Note that when things hang, they hang on the very first step of the first SCF run and _only_ there. I think that is because if you aren't unlucky and `lebedev_mapping_` gets successfully populated, there's no more hangs that can happen. (Sorry the below is LONG, I wanted to reproduce exactly all settings that went into a run, in case they are important. It is hard to figure out the ""minimal example"" as the crashes are rare _enough_ to make it very hard to reproduce them ""in captivity""). ```; np.set_printoptions(threshold=sys.maxsize); set DF_INTS_NUM_THREADS = 16; set freeze_core 1; set {; basis def2-tzvppd; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; dft_vv10_postscf False; }; set {; wcombine False; }; molecule mol {; 0 1; @C 0.265781511352271 0.841876264095443 -0.6914658815200431; @C 1.4413385866197737 0.3288357318169406 -1.1836757404873801; @C 2.2289711018973604 -0.6237867174726249 -0.5257029978620363; @C 1.8767103570771173 -0.9962343566137659 0.6986750981164255; @C 0.6545489119459532 -0.6147226134119103 1.2098027282027453; @C -0.21957387152459434 0.2564142719883635 0.5001192004375371; @H -0.3723596175396408 1.4255337233361631 -1.1634648379610923; @H 1.9177612974037643 0.7339585876082476 -2.2134537293183647; @H 3.30111923095952 -0.8660596018835396 -0.9695609764149236; @H 2.5278636235464713 -1.4596675993689474 1.3422341203604324; @H 0.5072122755030857 -0.940559021032073 2.215163414817783; @H -0.998224655511569 0.6769295855057103 1.0319031933299063; @C 1.317102898709397 -4.2559640682725135 -5.346326015162741; @C 2.61289132",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735:5516,robust,robust,5516,https://psicode.org,https://github.com/psi4/psi4/issues/2735,1,['robust'],['robust']
Availability,"low. In general tests where MKL found. Has compare_values, but really better suited for running by hand and judging results, as `-jN` defeats the purpose.; - [x] Added some CCSD(T) table docs requested by @CDSherrill ; * **User-Facing for Release Notes**; - [x] Change Mac math precedence to `MKL SYSTEM_NATIVE OPENBLAS ESSL ATLAS ACML` so native accelerate only behind MKL; - [x] New mechanism to pass in math libs explicitly through `LAPACK_LIBRARIES` and `LAPACK_INCLUDE_DIRS`; - [x] Collects all the addon libraries into a list, then forms RPATH of internal (relative to ORIGIN), then all non-static, non `/usr/` paths. Redundancy removed and math libs paths _always_ first. This takes over from `INSTALL_RPATH_USE_LINK_PATH`.; - [x] Bumped CMake minimum version to 3.2; - [x] Added some extra badges to README. ## Questions; - [x] I had already implemented the isMKL? detection in ConfigMath before I looked back and found [mkl testing] (https://github.com/psi4/psi4private/blob/71ea2ea8ee142ee42541c589c42977fff2d3c381/CMakeLists.txt#L173-L174). Do we want to do that way instead? Who added the ""NEEDS"" there? _From discussion below, No, bad idea._; - [x] @robertodr and/or @bast, I've commented out all the EXPLICIT_LIB and EXTERNAL_LIB stuff from ConfigMath because the new CMake scheme isn't doing anything with those libs, and the TargetLAPACK uses only `BLAS/LAPACK_LIBRARIES`. But we do need a way to take in a raw library string. By inclination, I would just have that if user specifies `BLAS/LAPACK_LIBRARIES`, then those get processed immediately into the TargetLAPACK. But I thought I'd see if you had other/opposing opinions. _From discussion below, they approve._; - [x] Currently require CMake 3.1. Can we require 3.2 (for `continue()`) or 3.3 (for HDF5 versioning)? 3.3 and 3.6 available on conda.; - [x] RPATH work focused on Linux. Mac I don't think is a problem, plus it's so easy to adjust after link. I'm hoping to continue ignoring rpath on Mac. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/615:3790,avail,available,3790,https://psicode.org,https://github.com/psi4/psi4/pull/615,1,['avail'],['available']
Availability,"lpers.py"", line 99, in pybuild_basis; psibasis = core.BasisSet.construct_from_pydict(mol, basisdict, puream). RuntimeError: ; Fatal Error: CoordEntry::basisset: Basisset not set for O and type of DF_BASIS_CC; Error occurred in file: /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 134; ```; My own investigations have partially uncovered the cause of this. During basis set construction, [basis set labels are set on all atoms](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L101). This occurs by [iterating over all atoms in full_atoms_](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2879) and [setting basis set labels for them.](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2880) However, there is a very subtle problem. The basis set is constructed from this labels [here](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L173). The [constructor](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L567) sets the basis by [calling atom_entry](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L651). The problem is that atom_entry is [tied not to full_atoms_ but to atoms_](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2912). Setting the basis set labels for full_atoms_ atoms never set them for the atoms_ atoms, hence the error. I've confirmed directly this code sets the basis set label for the first atom of atoms_ in the non-bugged case of a gradient computation, but not in the case of a bugged frequency computation. In both cases, the first atom of full_atoms_ has its basis set labels properly submitted. My hunch is that these two arrays are supposed to be synced up, modulo ghosts and dummies, so there was probably a problem with pointers somewhere that caused the objects in the two arrays to not be the same. Core devs, am I understanding atoms_ and full_atoms_ correctly?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1093:3411,error,error,3411,https://psicode.org,https://github.com/psi4/psi4/issues/1093,1,['error'],['error']
Availability,"lq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30114,error,error,30114,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"lready has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for bac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5184,down,download,5184,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"ls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/pro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11946,Error,Error,11946,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,4,"['Error', 'error']","['Error', 'error']"
Availability,"ls, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here sinc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5037,down,download,5037,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"lue of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2756,failure,failure,2756,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"luser/conda-builds/psi4-multiout_1557940846948/work/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); ```. and here is the script:. ```; import os; import numpy as np; psi4.set_memory(int(2e9)). # Conical intersection in Formaldimine; pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; psi4.core.set_output_file(""formaldimine.txt"", False); # sto-3g : 13 orbitals, cc-pVDZ: 43, cc-pVTZ: 102. Nelec: 16. def get_energies_formaldimine(alpha,phi):; #name = ""formaldimine_alpha"" + str(alpha) + "".txt""; #psi4.core.set_output_file(name, False); psi4.core.clean(); variables = pes_origin[:] + [alpha, phi]; psi4.geometry(; """"""0 1; N; C 1 {0}; H 2 {1} 1 {3}; H 2 {1} 1 {3} 3 180; H 1 {2} 2 {4} 3 {5}; symmetry c1"""""".format(*variables)); psi4.set_options({'basis': 'cc-pVDZ',; 'reference': 'rhf',; 'scf_type': 'pk', # set e_convergence and d_convergence to 1e-8 instead of 1e-6; 'num_roots': 2,; #'frozen_docc':[2],; 'active':[16]}); E0_casci = psi4.energy('fci'); E1_casci = psi4.variable('CI ROOT 1 TOTAL ENERGY'); return E0_casci, E1_casci. output = open(""formaldimine_CASCI-16e-16o.dat"", ""w""). phi = 90; start_angle = 90; end_angle = 160; number_of_steps = abs(end_angle - start_angle) + 1; print(""{:10s} {:10s} {:10s}"".format(""alpha"",""E0"",""E1""), file = output); for alpha in np.linspace(start_angle,end_angle,number_of_steps):; en0_casci,en1_casci = get_energies_formaldimine(alpha,phi); print(""{:10.6f} {:10.6f} {:10.6f}"".format(alpha,en0_casci,en1_casci)); print(""{:10.6f} {:10.6f} {:10.6f}"".format(alpha,en0_casci,en1_casci), file = output); ```. does anyone understand the error ? Again, replacing active = 16 by active = 14 works just fine, so I first assumed that it was a memory issue but the error does not mention anything about memory. Note that I ask for 16gb memory on the cluster for this calculation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959:2741,error,error,2741,https://psicode.org,https://github.com/psi4/psi4/issues/1959,2,['error'],['error']
Availability,"m `git describe`; - get the branch and tag contents, including when ppl have neglected to pull tags and have none defined; - make it so when ppl download zip distributions, they're not prevented from compiling for lack of version info; - be able to reset commit increment to preserve monotonic versioning as in https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/src/bin/psi4_main/gitversion.py#L105; - make sure the version gets recomputed _every_ time, even if someone just pulls a change to `README.md` that technically changes the version; - get all that info ; - into the output file header; - to essentially ""configure_file"" the https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/psi4/psi4-config.in file so that it gets written to the bottom of it; - into place for https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/doc/sphinxman/source/conf.py.in#L58-L73 to absorb it for the docs build; - so that psi4 command-line can report version. The test is if the docs index.html, an output file, `psi4 --version`, and `psi4-config --version --githash` all return the same correct thing after a pull that doesn't technically require any recompile. I don't doubt that a better formulation than at present could be devised, and that'd be nice to have, especially pure CMake, but as the initial formulation only partially hit the first point, I just reverted back to what worked. I did have to change from the pre-CMakeRewrite version this bit (https://github.com/ryanmrichard/psi4/commit/18a41e0d01a9fa903cdce98bba52c785f81560b2) which is probably why it's compiling again upon install. Perhaps that bit could be fixed by moving the `versioned_code` object lib up to the top level?. Basically, I'm open to fixes, but versioning is a real can of worms, and I'm willing to tolerate eight extra file compiles to avoid opening it. btw, I'm storing my changes at https://github.com/loriab/psi4/commits/CMakeRewrite for the moment, since I'm breaking some things that are purportedly working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239050499:1973,toler,tolerate,1973,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239050499,1,['toler'],['tolerate']
Availability,"m, diag, CS,spatial, HF,ndoub, nacto, nactv, tol,maxex, sacc, freq,dboc, mem; 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; ===== End fort.56 input for MRCC ======; **********************************************************************; MRCC program system; **********************************************************************. Written by; Mihaly Kallay, Peter R. Nagy, David Mester, Zoltan Rolik, Gyula Samu,; Jozsef Csontos, Jozsef Csoka, P. Bernat Szabo, Laszlo Gyevi-Nagy,; Bence Hegely, Istvan Ladjanszki, Lorant Szegedy, Bence Ladoczki,; Klara Petrov, Mate Farkas, Pal D. Mezei, and Adam Ganyecz. Department of Physical Chemistry and Materials Science; Budapest University of Technology and Economics; Budapest P.O.Box 91, H-1521 Hungary. www.mrcc.hu. Release date: February 22, 2020. ************************ 2020-04-12 06:03:22 *************************; Executing minp... Reading input from MINP... Input file:. Checking keyword combinations... Basis set is not specified!. Fatal error in exec minp.; Program will stop. ************************ 2020-04-12 06:03:22 *************************; Error at the termination of mrcc.; **********************************************************************; ```. As it so happens, I was running `mrccsdt` not too long ago on the CCQC cluster. What I see looks like ; ```; Generating fort.55 integral file...done.; Generating fort.56 input file...done. *** tstop() called on n081 at Sun Mar 8 14:10:25 2020; Module time: ; user time = 1.90 seconds = 0.03 minutes; system time = 0.87 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes; Total time: ; user time = 164.68 seconds = 2.74 minutes; system time = 15.26 seconds = 0.25 minutes; total time = 2719 seconds = 45.32 minutes. ===== Begin fort.56 input for MRCC ======; 3 1 0 0 1 0 0 1 0 1 1 1 0 0 0 6 0 0 0.00 0 60000 ; ex.lev,nsing,ntrip, rest,CC/CI, dens,conver, symm, diag, CS,spatial, HF,ndoub, nacto, nactv, tol,maxex, sacc, freq,dboc, mem; 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866:1857,error,error,1857,https://psicode.org,https://github.com/psi4/psi4/issues/1866,1,['error'],['error']
Availability,"ma2lapl2=0x0, v4sigma2lapltau=0x0, v4sigma2tau2=0x0, v4sigmalapl3=0x0, v4sigmalapl2tau=0x0, v4sigmalapltau2=0x0, v4sigmatau3=0x0, v4lapl4=0x0, v4lapl3tau=0x0, v4lapl2tau2=0x0, v4lapltau3=0x0, ; > v4tau4=0x0) at /psi/gits/libxc/src/mix_func.c:119; > #5 0x00007fffecf71998 in xc_gga (func=0x555556ca7500, np=255, rho=0x555556e575c0, sigma=0x555556ccda80, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, v2rho2=0x0, v2rhosigma=0x0, v2sigma2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rhosigma2=0x0, v3sigma3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho2sigma2=0x0, v4rhosigma3=0x0, v4sigma4=0x0); > at /psi/gits/libxc/src/gga.c:126; > #6 0x00007fffecf71b16 in xc_gga_exc_vxc (p=<optimized out>, np=<optimized out>, rho=<optimized out>, sigma=<optimized out>, zk=<optimized out>, vrho=<optimized out>, vsigma=0x555556c12720) at /psi/gits/libxc/src/gga.c:160; > #7 0x00007fffef1a9541 in psi::LibXCFunctional::compute_functional (this=0x896d, in=..., out=..., npoints=-1, deriv=1) at /psi/gits/hrw-demo/psi4/src/psi4/libfunctional/LibXCfunctional.cc:549; > #8 0x00007fffef1b899f in psi::SuperFunctional::compute_functional (this=0x896d, vals=..., npoints=6) at /psi/gits/hrw-demo/psi4/src/psi4/libfunctional/superfunctional.cc:633; > #9 0x00007fffef1737ba in psi::RV::compute_V (this=0x896d, ret=<error reading variable: Cannot access memory at address 0x896d>) at /psi/gits/hrw-demo/psi4/src/psi4/libfock/v.cc:1350; > #10 0x00007fffef7752c3 in psi::scf::RHF::form_V (this=0x896d) at /psi/gits/hrw-demo/psi4/src/psi4/libscf_solver/rhf.cc:180; > #11 0x00007fffef77451b in psi::scf::RHF::form_G (this=0x896d) at /psi/gits/hrw-demo/psi4/src/psi4/libscf_solver/rhf.cc:185; > ```; > ; > Please let me know when is a good point to try Psi4+Libxc 5.1 again and if your Libxc 6 PR needs adding atop this (surely not?), thanks. Yes, it turns out that the hotfix branch was still a work-in-progress by the time I was forced to go on holidays. I hope to get the remaining issues in the Python frontend fixed today.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798:3266,error,error,3266,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754743798,1,['error'],['error']
Availability,macpsinet seems out of sorts even though I rebooted it earlier this week. Will attend to it tomorrow.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/798#issuecomment-327985876:43,reboot,rebooted,43,https://psicode.org,https://github.com/psi4/psi4/pull/798#issuecomment-327985876,1,['reboot'],['rebooted']
Availability,"make configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other computers. 6. ~Once libint2 is finished building and psi4 starts, psi4 will error with `error: 'LIBINT2_MAX_AM_default1' was not declared in this scope`. The fix is the same as [Andy's (5)](https://github.com/psi4/psi4/pull/1721#issuecomment-537945417), editing `objdir/stage/include/libint2/libint2_params.h`. Fix that up and resume compiling psi4.~. 7. ~If you fiddle with the external/upstream/libint2/CM file and the generator starts rebuilding, you're toast. `rm -rf objdir/external/upstream/libint2` and `make` again from objdir to restart. Details: The way EFV does the AM defaulting is not a way CMake wants to act. I'm still working on a fix. You'll see ""exponent has no digits"" errors. In any case, if the generator has to run again (which is probably correct -- it's not the dependency structure that's wrong, it's the generated config.h), there's no time to be saved.~. EDIT: latest push fixes step 6; EDIT: latest push fixes step 7, also the MAX_AMs now start with WITH_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:2280,error,error,2280,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,3,['error'],"['error', 'errors']"
Availability,make error: /usr/bin/ld: cannot find -lMathOpenMP_LIBRARIES-NOTFOUND,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998:5,error,error,5,https://psicode.org,https://github.com/psi4/psi4/issues/2998,1,['error'],['error']
Availability,"managed to get a pair of builds (current master and this PR's branch) that do not entirely swallow the exception messages for write errors in the PK integral calculation. For me, it took building Psi4 entirely from source, with nothing from conda at all. stdout/stderr before this PR:. ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; stdout/stderr after this PR:; ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: WRITE failed. Only some of the bytes were written!; Error writing the first partial page, unit 34.; PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; The reason why there is no ""disk is full"" error message, is because `SYSTEM_WRITE` only reports a failure and sets errno if the disk is already full when it is called. As long as it can write at least one out of _however many_ bytes it does not set errno. I both cases there is no error message at all",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857:1101,Error,Error,1101,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857,1,['Error'],['Error']
Availability,"manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9652,error,error,9652,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,maybe a bkgd dependency like clang version changed such that mac isn't getting dftd4 3.6 but an oldr 3.3 hence the errors.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586:115,error,errors,115,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2018794586,1,['error'],['errors']
Availability,mbis failure for iodine containing molecules with DZVP basis,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2728:5,failure,failure,5,https://psicode.org,https://github.com/psi4/psi4/issues/2728,1,['failure'],['failure']
Availability,"me = name.lower(); kwargs = p4util.kwargs_lower(kwargs). optstash = p4util.OptionsState(; ['SCF', 'DF_INTS_IO']). core.set_local_option('SCF', 'DF_INTS_IO', 'SAVE'). # Your plugin's psi4 run sequence goes here; ref_wfn = kwargs.get('ref_wfn', None); if ref_wfn is None:; ref_wfn = psi4.driver.scf_helper(name, **kwargs). # if restarting from a checkpoint file, this file; # needs to be in scratch with the correct name; filename = core.get_option(""V2RDM_CASSCF"",""RESTART_FROM_CHECKPOINT_FILE""). # todo PSIF_V2RDM_CHECKPOINT should be definied in psifiles.h; if ( filename != """" ):; molname = ref_wfn.molecule().name(); p4util.copy_file_to_scratch(filename,'psi',molname,269,False). # Ensure IWL files have been written when not using DF/CD; scf_type = core.get_option('SCF', 'SCF_TYPE'); if ( scf_type == 'PK' or scf_type == 'DIRECT' ):; proc_util.check_iwl_file_from_scf_type(core.get_option('SCF', 'SCF_TYPE'), ref_wfn). > returnvalue = core.plugin('v2rdm_casscf.so', ref_wfn); E RuntimeError:; E Fatal Error: v2RDM did not converge.; E Error occurred in file: /scratch/psilocaluser/conda-builds/v2rdm_casscf_1491348825317/work/v2rdm_solver.cc on line: 1799; E The most recent 5 function calls were:; E; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::v2rdm_casscf::v2RDMSolver::compute_energy(); E py_psi_plugin(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<psi::Wavefunction>). /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/pymodule.py:66: RuntimeError; ---------------------------------------------- Captured stdout call -----------------------------------------------; N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A; =========================== 1 failed, 15 passed, 2 skipped, 1 xfailed in 201.46 seconds ===========================; ```. </details>; Also here is the current status of the conda installation:; <details>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:5519,Error,Error,5519,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['Error'],['Error']
Availability,"me/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/lib-dynload', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages']; >>> import psi4; /home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; ```. If I run inside a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 conda-forge; certifi 2017.7.27.1 py36_0 conda-forge; chemps2 1.8.4 0 psi4/label/dev; cloog 0.18.0 0 ; decorator 4.1.2 py36_0 conda-forge; dftd3 3.2.0 7 psi4; dkh 1.2 1 psi4/label/dev; erd 3.0.6 1 psi4/label/dev; gcc-5 5.2.0 1 psi4; gcc-5-mp 5.2.0 0 psi4; gcp 2.0.1 0 psi4; gdma 2.2.6 3 p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:2009,recover,recovers,2009,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['recover'],['recovers']
Availability,"mebody looking over the code for the first time (which is what we want). _Accordingly_, here's my proposal for how to make the code more readable. First and foremost, we abandon the Ochsenfeld pseudo-algorithm (Figure 1) as the definitive way to organize the code. We'll refer to it as appropriate, but it will not always be appropriate. The code is now divided into the following => level chunks:. => Prep Auxiliary Quantities <=; * Zeroing, Sizing, Atom Blocking all go here. => Prep Atom Pairs <=; * In my ideal world, you'd compute this at the same time as the bra-bra shell pairs below, but getting that to work would require that atom_pairs be an ordered_set. There's not much gain for it. => Prep Bra-Bra Shell Pairs <=; * What is currently, ""Store shell pairs that are significant by Schwarz estimate"". => Prep Bra-Ket Shell Pairs <=; * This is ""Pre-ordering and Pre-selection to find significant elements in Puv"" and includes both shell ceiling computation and computing the kets. => Integral Formation Loop <=; * Note that this is the one section that doesn't start with ""Prep"". That's a clue that everything previous to this was for the integral formation loop. The next code chunks down are: build intermediate buffers, form the minilists, compute to K buffers, write to K (stripe out), and then finalize. Refer to the Ochsenfeld algorithm for the minilist part, but I think that's the only part where Ochsenfeld is worth mentioning. _______________________________________________. How does that all sound to you? I know this is asking you to undo a lot of the changes I requested earlier, but I think this will make the code much easier to read for those who haven't been poring over the Ochsenfeld paper. If it sounds good, then please update the comments accordingly (I don't think we'll actually need code changes for this), and let me know when it's ready for another look. And of course, if you don't like the idea, we can talk this out. As we've seen already, I can make mistakes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-1043550653:1498,down,down,1498,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-1043550653,1,['down'],['down']
Availability,"merge conflicts now repaired, @JonathonMisiewicz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2536#issuecomment-1092933878:20,repair,repaired,20,https://psicode.org,https://github.com/psi4/psi4/pull/2536#issuecomment-1092933878,1,['repair'],['repaired']
Availability,"metry template; cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". # Define R values for scanning; a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). # Dictionary to store energies; ecp = {}. # Loop over R values; for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). # Create CF molecule geometry; cf = psi4.geometry(cf_geometry.format(R)); ; # Run CASSCF calculation; try:; casscf_energy = psi4.energy('casscf'); ; # Store energies; ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; except Exception as e:; print(f""Error at R={R}: {e}""); ; # Clean up Psi4 core; psi4.core.clean(); ```; The new error message is: ; ```; Warning: iopen=0,opentype!=closed. Making iopen=1; ras_set3():Warning:Occupied electrons beyond ACTIVE orbs!; (set_ras_parms): detecting 1 alpha electrons in RAS III for irrep 3.; Some parts of DETCI assume all elec in I and II; Traceback (most recent call last):; File ""cf_casscf_pec.py"", line 50, in <module>; casscf_energy = psi4.energy('casscf'); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5466, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 49, in mcscf_solver; ciwfn = core.CIWavefunction(ref_wfn); RuntimeError:; Fatal Error",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631:1522,Error,Error,1522,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2153825631,1,['Error'],['Error']
Availability,"ming install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f3728f000); libpython2.7.so.1.0 => /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0 (0x0000151f36d12000); libcublas.so.9.1 => /usr/lib/x86_64-linux-gnu/libcublas.so.9.1 (0x0000151f3377b000); libcusolver.so.9.1 => /usr/lib/x86_64-linux-gnu/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1654,down,downstream,1654,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,1,['down'],['downstream']
Availability,"mints9 is known failure – it's the only test case failure remaining after KtB-INV, my fault. When the python & json tests alone fail, it's probably because the `which python` python is of a different version than that with which psi4 was compiled. All other test cases have the compilation python baked in to `bin/psi4` shebang, but python & json tests are using the library directly and hence the `which python` python. More to the point, good to know this problem further confirmed with ATLAS. Absent changes to dfocc, and since OpenBLAS seems free and sound, perhaps we should just discourage ATLAS and promote OpenBLAS.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-277546386:16,failure,failure,16,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-277546386,3,"['failure', 'fault']","['failure', 'fault']"
Availability,"mize()` function. In addition, a dictionary of GeomeTRIC-specific keywords and options (like constraints) may be passed to the optimizer. The `test_h2o_constrained` pytest demonstrates how this is done. . ```; e = optimize(..., engine=`geometric`, optimizer_keywords={...}); ```; Output is consistent with Psi4's default geometry optimization:; <details><summary>Example result </summary>; <p>. ```; >>> grep ""~"" output.dat. ==> GeomeTRIC Optimizer <== ~; Psi4 convergence criteria QCHEM not recognized by GeomeTRIC, switching to GAU_TIGHT ~; Measures of convergence in internal coordinates in au. ~; Criteria marked as inactive (o), active & met (*), and active & unmet ( ). ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 1.50e-05 1.00e-05 6.00e-05 4.00e-05 ~; --------------------------------------------------------------------------------------------- ~; 0 -7.64427364e+01 -------- 5.01e-02 4.03e-02 -------- -------- ~; 1 -7.64446505e+01 -1.91e-03 2.68e-03 1.95e-03 3.06e-02 2.16e-02 ~; 2 -7.64446681e+01 -1.77e-05 5.27e-04 4.17e-04 4.22e-03 3.98e-03 ~; 3 -7.64446684e+01 -3.06e-07 * 2.27e-05 2.03e-05 4.11e-04 2.93e-04 ~; 4 -7.64446684e+01 6.91e-10 * 3.28e-06 * 2.74e-06 * 1.78e-05 * 1.49e-05 * ~; Optimization converged! ~. ```. </p>; </details>. ## Todos; - [x] Working GeomeTRIC interface; - [x] Improved printing and error handling; - [x] Pytest(s); - [x] Constrained optimizations; - [x] Process GeomeTRIC keywords in Psi4 input; - [x] Composite energy calls (CBS, etc.); - [x] Documentation. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1813:1789,error,error,1789,https://psicode.org,https://github.com/psi4/psi4/pull/1813,1,['error'],['error']
Availability,"mmend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent, but its effects on COM, inertial frame, symmetry, etc. would need to be probed. Or maybe our moments of inertia are even now wrong in the presence of ghosts. Summary: I would love a rationalization pass through the Mol accessor fns. But what I value more than that is (1) Mol not breaking for downstream code we don't control, (2) a pass through the psi codebase making sure `Z` and `mass` are being used in accordance with the programmers' intentions (apparently not in optrot), and (3) you not going down a Mol rabbit hole. Maybe we should talk more at the conf call tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-363473061:2296,down,downstream,2296,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061,2,['down'],"['down', 'downstream']"
Availability,"mol {; > 0 3; > symmetry c1; > C 0.0000000000 0.0000000000 -0.5928430915; > H -0.0000000000 0.9469373770 -1.1509808737; > H 0.0000000000 -0.9469373770 -1.1509808737; > }; >; > basis = core.BasisSet.build(mol, ""ORBITAL"", ""cc-pvdz"", quiet=True); > factory = core.IntegralFactory(basis); >; > # np.dot(so2ao, ao2so) should always be the identity. The functions are inverses.; >; > # We have a problem!; > petite = core.PetiteList(basis, factory, True); > so2ao = petite.sotoao().nph[0]; > print(so2ao); > print(so2ao.shape) # (24, 25); > ao2so = petite.aotoso().nph[0]; > print(np.dot(so2ao, ao2so)); >; > # Works fine!; > petite = core.PetiteList(basis, factory, False); > so2ao = petite.sotoao().nph[0]; > print(so2ao); > print(so2ao.shape) # (24, 24); > ao2so = petite.aotoso().nph[0]; > print(np.dot(so2ao, ao2so)); >; > The next question is what we do about this. I see two solutions:; >; > 1. Put a flag in sotoao that throws if include_pure_transform_ is; > true. I've run this change through full tests and didn't get any errors.; > However, somebody can assume sotoao() is the transpose of aotoso() and; > get rubbish.; > 2. Remove the functionality of the include_pure_transform flag; > entirely. The transformations are always invertible, but we lose whatever; > efficiency gain motivated including the flag in the first place.; >; > I don't know which is the best solution, or if there's a third.; >; > Pinging @andysim <https://github.com/andysim>, @susilehtola; > <https://github.com/susilehtola>, @jturney <https://github.com/jturney>,; > and @fevangelista <https://github.com/fevangelista>, all of whom have; > either touched this code or expressed interest in this issue previously.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1763?email_source=notifications&email_token=AAXVA5WSYVY7DDERYLO3GDLQWURWFA5CNFSM4JTXOXB2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1763#issuecomment-560454475:2769,error,errors,2769,https://psicode.org,https://github.com/psi4/psi4/issues/1763#issuecomment-560454475,1,['error'],['errors']
Availability,mpmath is a required for one of the dependencies which was probably added sometime between your first cloning and your re-clone. . A couple of things: ; - Was the installation of mpmath successful? ; - Did you install into the base env or a different one? ; - Is that one active? ; - You can see if mpmath is available in the env that is active while you are trying to build by looking at the output from `conda list`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954#issuecomment-382181157:309,avail,available,309,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-382181157,1,['avail'],['available']
Availability,"mpossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2885,failure,failure,2885,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"my 2 cents on this:; The geometry you posted looks broken to me (too long 'bonds'). I'd guess the optimizer had some troubles displacing the geometry correctly.; Often it is enough to set `opt_coordinates both`, which mixes cartesian and redundant coordinates.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-953037136:238,redundant,redundant,238,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-953037136,1,['redundant'],['redundant']
Availability,"n I use two different step sizes for the finite difference (1e-3 and 1e-4 a.u., both using central (3-point) finite difference; see fd-ana-grad.txt file in attached data.zip). By contrast, for a different system (a water dimer calculated at HF/STO-3G), the max difference between numerical and analytic gradients using a 1e-3 step size is around 1e-6. I've attached a picture where the numerical gradient, analytic gradient, and the difference are visualized. The difference is mainly on the La and Br atoms, with smaller components on the other atoms. These forces do not appear to be purely translational/rotational, but I think there is a translational/rotational component because the ""trajectory"" of the optimization appears to include some translational/rotational motion as well as distortion (attached qce_optim.xyz in data.zip). ![1](https://github.com/psi4/psi4/assets/1441560/e3dea159-d922-40c8-bad9-868b20f710e3). Although the gradient difference in this case is larger than geomeTRIC's convergence criterion for the RMS / max gradient, a smaller difference of 1e-5 to 1e-4 could still cause a failure to converge by causing the optimizer to take incorrect steps with step sizes larger than the convergence criterion for the displacement. I suspect these subtle errors are also occurring in DFT calculations on organic molecules, but because the errors are smaller there, the convergence failures do not happen consistently but only occasionally. (I can provide another example for an organic molecule if needed.). As an aside, I ran the geometry optimization in Q-Chem with the same settings (except Q-Chem does not use DF-SCF) and the optimization converged in 83 steps (attached qchem/ subfolder in data.zip). It would be really great if the development team could look at this. An improvement in the accuracy of DFT gradients would lead to great improvements in geometry optimization performance. . Thanks,. - Lee-Ping. [data.zip](https://github.com/psi4/psi4/files/13192796/data.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066:2173,failure,failure,2173,https://psicode.org,https://github.com/psi4/psi4/issues/3066,5,"['Ping', 'error', 'failure']","['Ping', 'errors', 'failure', 'failures']"
Availability,"n and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLis",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2449,Error,Error,2449,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"n easily loop over things, I favor any lists of energies or; dipoles as also including the ground state (state 0). So, we can have. CI/CC ROOT 0 ENERGY [or whatever it's called, I forget]; CI/CC ROOT 1 ENERGY; etc. as well as. CI/CC ROOT 0 DIPOLE x; CI/CC ROOT 1 DIPOLE x. Including ROOT 0 in the lists above will remove unnecessary annoying logic; when looping over roots for processing/printing output. For CI use cases,; we will always want to loop over all roots including ROOT 0. For the ground state only, we can also duplicate the ROOT 0 information; into variable names without the ""ROOT n"" designation, which is what people; will want to grab if they just want g.s. info. CI/CC DIPOLE x. (Actually, strictly speaking, the root number that should go here should; probably be FOLLOW_ROOT, which defaults to ROOT1 (now should be ->; ROOT0)... FOLLOW_ROOT is supposed to allow you to optimize an excited state; instead of the ground state in an MCSCF or geometry opt). The CI code has always assumed numbering starts with 1 in the user; interface, so any input options regarding roots will need to have -1 added; (except the total number of roots, obviously). Best,; David. On Fri, Nov 11, 2016 at 10:27 PM, Andy Simmonett notifications@github.com; wrote:. > This is great; I really like that you've addressed the inconsistency; > between CI and CC, which I didn't notice before. The scheme in your last; > message looks good to me. I think that numbering the first excited state 1,; > and the second 2, _etc._ makes the most sense, for obvious reasons. Zero; > basing the excited states would lead to an off-by-one error in the cardinal; > and ordinal notation. LGTM.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/506#issuecomment-260098726, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9QdlnHpEnsW3uYECUYCgCd3NnmYLimks5q9TIfgaJpZM4Krp5j; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-260126337:2791,error,error,2791,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-260126337,1,['error'],['error']
Availability,"n lib3index.a(denominator.cc.o); __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv in libefp_solver.a(efp_solver.cc.o); __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv in libmints.a(oeprop.cc.o); ...; ""__ZTISt13bad_exception"", referenced from:; __ZTIN5boost16exception_detail14bad_exception_E in libpsio.a(filemanager.cc.o); __ZTIN5boost16exception_detail14bad_exception_E in libboost_thread-1_57.a(thread.o); ""__ZTISt13runtime_error"", referenced from:; __ZTIN5boost9xpressive11regex_errorE in create_new_plugin.cc.o; __ZTIN5boost9xpressive11regex_errorE in libplugin.a(load_plugin.cc.o); __ZTIN3psi12PsiExceptionE in libpsi4util.a(exception.cc.o); __ZTIN5boost9xpressive11regex_errorE in libmints.a(basisset.cc.o); __ZTIN5boost6system12system_errorE in libboost_filesystem-1_57.a(operations.o); __ZTIN5boost16exception_detail19error_info_injectorISt13runtime_errorEE in libboost_regex-1_57.a(instances.o); __ZTIN5boost17bad_function_callE in libboost_python-1_57.a(errors.o); ...; ""__ZTISt14overflow_error"", referenced from:; __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libmints.a(sieve.cc.o); __ZN5boost7numeric6odeint24bulirsch_stoer_dense_outINSt3__16vectorIdNS3_9allocatorIdEEEEdS7_dNS1_13range_algebraENS1_18default_operationsENS1_17initially_resizerEE7do_stepIN10interfaces19LnTransformedRadialEEENS3_4pairIddEET_ in libpcm.a(Meddle.cpp.o); __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libpcm.a(Meddle.cpp.o); __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libpcm.a(CPCMSolver.cpp.o); __ZTIN5boost16exception_detail19error_info_injectorISt14overflow_errorEE in libpcm.a(IEFSolver.cpp.o); ""__ZTISt16invalid_argument"", referenced from:; __ZTIN5boost16exception_detail19error_info_injectorISt16invalid_argumentEE in create_new_plugin.cc.o; __ZTIN5boost16exception_detail19error_info_injectorISt16invalid_argumentEE in libmints.a(basisset_parser.cc.o); __ZTIN5boost16excepti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199#issuecomment-169139808:73927,error,errors,73927,https://psicode.org,https://github.com/psi4/psi4/issues/199#issuecomment-169139808,1,['error'],['errors']
Availability,"n particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), fci, cepa(1), cepa(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc, svwn, and wb97x are verified against external programs (for qcdb's and qcengine's good, not because I distrusted longstanding Psi4 implementations), usually cfour, nwchem, gamess; * ROHF DETCI doesn't match gamess/cfour for CISD or FCI, but doubtless that's implementation choice that I haven't identified. Anyway, that's why those are separate entries (away from qcng) in `standard_suite_ref_local.py`; * In filling out the capabilities tables for Hessians, I tried to collect CD Hessians for HF and SVWN by FD of energies. They failed the per-element CD result ~= CONV result check. Not surprising since CD thresh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:10209,down,down,10209,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['down'],['down']
Availability,"n the method). Meanwhile, `test_erisieve.py`, after the updates introduced in https://github.com/psi4/psi4/pull/2973, tests a wide variety of screening types, but with limited testing in conjunction with different JK builds (the only tests that don't use the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI screening methods. ## Questions; - [x] Would the test in `test_comprehensive_jk_screening.py` be better placed in `test_erisieve.py`? I placed the test in the former because I considered it large enough to warrant not having the quick pytest mark, but I'm ambivalent about where the test goes between those two test modu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:1314,toler,tolerance,1314,https://psicode.org,https://github.com/psi4/psi4/pull/2978,1,['toler'],['tolerance']
Availability,"n/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEEDED) Shared library: [libimf.so]; 0x0000000000000001 (NEEDED) Shared library: [libsvml.so]; 0x0000000000000001 (NEEDED) Shared library: [libstdc++.so.6]; 0x0000000000000001 (NEEDED) Shared libr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1478,error,errors,1478,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188,1,['error'],['errors']
Availability,"n::detail::final_vector_derived_policiesstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>,; > boost::python::detail::container_elementstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, unsigned long,; > boost::python::detail::final_vector_derived_policies<std::__1::vector&lt; > ;boost::shared_ptr<psi::Matrix>,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true> >, unsigned; > long>, boost::shared_ptrpsi::Matrix, unsigned; > long>::base_get_slice_data(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&, PySliceObject_,; > unsigned long&, unsigned long&) in export_mints.cc.o; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ""_PyExc_OverflowError"", referenced from:; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > long>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > int>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > short>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > char>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > ""_PyExc_ReferenceError"", referenced from:; > boost::python::converter::(anonymous; > namespace)::lvalue_result_from_python(_object_,; > boost::python::converter::registration const&, char const*) in; > libboost_python-1_57.a(from_python.o); > ""_PyExc_RuntimeError"", referenced from:; > translate_psi_ex",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:24163,error,errors,24163,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,1,['error'],['errors']
Availability,"nce; 306:psimrcc-ccsd_t-4; 420:psi4numpy-cphf; 421:psi4numpy-dfmp2; 422:psi4numpy-rhf; 423:psi4numpy-rhf-gradient; 424:psi4numpy-rhf-hessian; 425:psi4numpy-fci; 429:python-energy; 430:python-curve; 431:python-pubchem; 432:python-mints9; 433:python-mints2; 434:python-cc54; 435:python-3-index-transforms; 436:python-mints13; 437:python-cc_amps; 438:json-schema-1-energy; 439:json-schema-1-ghost; 440:json-schema-1-orient; 441:json-schema-1-throws; 442:json-schema-1-gradient; 443:json-schema-1-properties; 444:gcp-pbeh3c; 445:gcp-hf3c; 446:gcp-hf3c-gradient; 447:gcp-hf3c-hessian; 448:gcp-dft-custom-hybrid; ```. And now my problem is on the import psi4. I tried adding the correct PYTHONPATH as follows:. ```; export PATH=/usr/local/bin:$PATH # python interpreter; export PATH=/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/bin:$PATH # psi4 executable; export PYTHONPATH=/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib//:$PYTHONPATH # psi4 pymodule; ```. But I get a new kind of error. Any idea how to fix it? :. ```; >>> import psi4; Traceback (most recent call last):; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Symbol not found: __gfortran_concat_string; Referenced from: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; Expected in: flat namespace; in /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614773796:1072,error,error,1072,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614773796,1,['error'],['error']
Availability,"nctions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure. ## Questions; - [x] Is `libciomr` a good place for the new wrappers to live in? The one they are r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:1952,failure,failure,1952,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"nd fills in defaults, emitting a standardized (to become MolSSI JSON) molrec dict. Plain fn produces dict. `psi4.core.Molecule.from_arrays` and `qcdb.Molecule.from_arrays` go a step further and return a Mol.; - Function `validate_and_fill_chgmult` addresses current problems (1) create_mol_from_string's problem of not allowing overall chgmult to be set, defaulting all frag to `0 1`, and defaulting overall to fragA, (2) physical reasonableness (chg/mult/#elec compatible) not being tested for fragments at all and for overall not until the SCF code, (3) problems like psi4/psi4#114, and (4) overall and frag chgmult getting out of whack upon set_chg/mult, extract_subsets, not having frag chgmult editable, scf singlet/doublet defaulting. Taking given tot/frag chg/mult info and reasoning out the missing info would have been massive logic for chg/mult/#elec simultaneously, so this just codes up the rules and the defaults and throw `itertools.product` at it. Slows down a bit by 10 frag, but there's room for performance optimization. Ideally we'd call this at every reinterpret_coordentry, but that's not feasible for psi4 Mol. A good newdev starter project would be (for impossible reconciliations) to keep track of the least offending combo, and print out a summary of what rules it's violating.; - Function `reconcile_nucleus` addresses problems (1) can't specify atoms by atomic number, (2) can't specify masses by mass number, (3) faced with A, Z, E, real/ghost, and label `@C_special@12.1`, all as inputs, need to make sure (a) extracting as much user info as possible, (b) not allowing contradictory info, and (c) filling in everything else from periodictable. Like chgmult, fn handles this by defining rules and candidate values, and letting itertools do the rest. Expand atom label spec so can specify isotope and atomic number e.g., `Gh(27@58.933)` or `2H_deut`.; - Validates atoms-too-close all at once, rather than per-atom, which can run into units, coordsys, and? old CoordEntry tr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:5948,down,down,5948,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['down'],['down']
Availability,"nda3-latest-Linux-x86_64.sh; ./Miniconda3-latest-Linux-x86_64.sh -b; conda create -n p4dev psi4-dev python=3.6 -c psi4/label/dev; conda activate p4dev; conda install libint am8 -c psi4/label/dev; git clone https://github.com/psi4/psi4.git && cd psi4; `psi4-path-advisor --gcc` -DMAX_AM_ERI=8; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; ```. (The info on the forum is also confusing and due to formatting issues, some essential quotes are missing.). From the output of the penultimate line, it seems that the right AM options is picked up:. ```; ...; -- Setting option MAX_AM_ERI: 8; ...; ```. Alas, this does not work. The error I get from the last command is:. ```; -- Maximum AM: 8; -- Maximum Derivative: 0; -- CMAKE_C_FLAGS: -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- CMAKE_CXX_FLAGS: -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- SIMINT_C_INCLUDES: /home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external;/home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build/stage; -- SIMINT_C_FLAGS: -std=c99;-Wall;-Wextra;-pedantic;-Wno-unused-parameter;-Wno-unused-variable;-fopenmp;-mavx; -- SIMINT_LINK_FLAGS: -fopenmp; CMake Error at simint/CMakeLists.txt:7 (message):; Maximum angular momentum set is greater than I have available (7); ```. I've checked manually that my libint supports the right angular momenta:. ```; grep MAX ~/miniconda3/envs/p4dev/include/libint/*.h ; /home/toon/miniconda3/envs/p4dev/include/libint/libderiv.h:#define LIBDERIV_MAX_AM1 8; /home/toon/miniconda3/envs/p4dev/include/libint/libderiv.h:#define LIBDERIV_MAX_AM12 7; /home/toon/miniconda3/envs/p4dev/include/libint/libint.h:#define LIBINT_MAX_AM 9; ```. I have no other version of libint installed on my test system. Any suggestions? Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341:1984,Error,Error,1984,https://psicode.org,https://github.com/psi4/psi4/issues/1341,2,"['Error', 'avail']","['Error', 'available']"
Availability,"ne 1283, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; - DLDF+D09/cc-pVDZ: **GRADIENTS FAILED**; ```; Segmentation fault: 11; ```; - Both `disk_DF` and `mem_DF` gradients yield above segfault, no message in outfile or message printed to stdout; - PBE/cc-pVDZ: Passed; - wPBE/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Us",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:4031,fault,fault,4031,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['fault'],['fault']
Availability,"ne 2008, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; > e_scf = scf_wfn.compute_energy(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; > raise e; > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; > self.iterations(); > File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; > raise ConvergenceError(""""""SCF iterations"""""", self.iteration_); >; > ConvergenceError: Could not converge SCF iterations in 4 iterations.; >; > Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; > Psi4 wall time for execution: 0:00:01.01; >; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.; >; > It looks like die_if_not_converged; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113>; > toggled print-error-msg/die+traceback previously for SCF and DETCI, with; > defaulting toward print-error-msg. I think it's better to default toward; > die (which this PR now does) and ppl can catch the error if they want; > print-error-msg.; >; > For a long time we had geometry optimizations exit smoothly even if failed; > for iterations exceeded. That caused some problems (I think @dsirianni; > <https://github.com/dsirianni> hit them), so we switched toward the; > die+traceback. Now SCF will behave like optimizations.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1130#issuecomment-411567479>, or mute; > the thread; > <https://github.com/notificatio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303:1928,error,error,1928,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411580303,1,['error'],['error']
Availability,"ne. *** tstop() called on dx7-lehtola.chem.helsinki.fi at Wed Oct 25 21:00:43 2017; Module time:; 	user time = 0.42 seconds = 0.01 minutes; 	system time = 0.37 seconds = 0.01 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 5.26 seconds = 0.09 minutes; 	system time = 0.90 seconds = 0.02 minutes; 	total time = 6 seconds = 0.10 minutes. *** tstart() called on dx7-lehtola.chem.helsinki.fi; *** at Wed Oct 25 21:00:43 2017. *******************************************************; * *; * CISD *; * Singles Doubles Configuration Interaction *; * *; * Eugene DePrince *; * *; *******************************************************. ==> Input parameters <==. Freeze core orbitals? no; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 0; Number of active occupied orbitals: 17; Number of active virtual orbitals: 56; Number of frozen virtual orbitals: 0. ==> Memory <==. available memory = 500.00 mb; minimum memory requirements for QCISD = 20.82 mb; memory requirements for QCISD(T) = 19.95 mb. ==> Define tiling <==. v(ab,cd) diagrams will be evaluated in 1 blocks.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov2.; v(ab,ci) diagrams will be evaluated in 1 blocks over ov. Allocate cpu memory ( 43.60 mb).....done.; Initialize cpu memory..................done. Begin CISD iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -0.2857372527 -0.2857372527 0.4555767847 1; 1 1 1 -0.2414094495 0.0443278032 0.1511464352 0; 2 2 1 -0.2579356267 -0.0165261772 0.0652368320 0; 3 3 1 -0.2611541701 -0.0032185434 0.0125293726 1; 4 4 1 -0.2613216972 -0.0001675272 0.0032942797 0; 5 5 1 -0.2613427037 -0.0000210064 0.0012770712 0; 6 6 1 -0.2613456527 -0.0000029491 0.0004335425 1; 7 7 1 -0.2613460204 -0.0000003677 0.0001363866 0; 8 8 1 -0.2613460594 -0.0000000390 0.0000408574 1; 9 8 2 -0.2613460625 -0.0000000031 0.0000130842 0; 10 8 3 -0.2613460628 -0.0000000003 0.0000034499",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828#issuecomment-339418202:12331,avail,available,12331,https://psicode.org,https://github.com/psi4/psi4/issues/828#issuecomment-339418202,1,['avail'],['available']
Availability,"ne; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /usr/bin/python (found version ""2.7.12"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so ; -- Using pybind11: /usr/qc/psi4.git/objdir/stage/usr/qc/psi4.bin/include (version 2.0.0 for Py2.7.12 and -std=c++11) ; -- Using Python 2.7: /usr/bin/python ; -- Looking for include file pthread.h ; -- Looking for include file pthread.h - found ; -- Looking for pthread_create ; -- Looking for pthread_create - found ; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; -- Disabled CheMPS2 ; -- Disabled dkh ; -- Using libefp: /usr/qc/psi4.bin/lib/libefp.a (version 1.3.0) ; -- Disabled erd ; -- Disabled gdma ; -- Using libint: /usr/qc/psi4.bin/lib/libint.a (version 1.1.6) ; -- Configuring done ; -- Generating done ; ``` . And just for completeness the pybind11 part:. ```; [ 12%] Performing download step (git clone) for 'pybind11_external'; Cloning into 'pybind11_external'...; Note: checking out 'v2.0.0'. You are in 'detached HEAD' state. You can look around, make experimental; changes and commit them, and you can discard any commits you make in this; state without impacting any branches by performing another checkout. If you want to create a new branch to retain commits you create, you may; do so (now or later) by using -b with the checkout command again. Example:. git checkout -b <new-branch-name>. HEAD is now at e33ef9c... v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:2361,down,download,2361,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,1,['down'],['download']
Availability,"nel directly. may need to clear out space.; * Go through each active conda package off https://anaconda.org/psi4/repo, find the most recent build set (L/M, active py versions) that psi/psi-rt/psi-dev is using and _add_ (not replace) the `main` label. this makes a `conda install psi4 -c psi4` get everything psi4 needs. for the moment `conda install psi4 -c psi4/label/dev` will get the same set, until package psi4-1.4a1.dev1 gets uploaded. may help to check versions and build versions against ltrtver in conda_build_config.yaml. this step takes a while. ### constructor stage. * move into constructor_cutter_unified. there's a rEADME there. ; * edit pythons if necessary; * edit release/hash/ltrtver of cookiecutter.json .; * for non-rc's channel_tag should be empty string; * leave git set to a `rc` since that has more details; * copy cookiecutter.json to cookiecutter.json-vXXX; * cookiecutter/{{.../construct.yaml rarely needs editing; * do clear out .constructor so that everyting downloaded afresh; * clean out build/; * python run.py check for an py_ bad noarch pkgs; * if fetching times out, may have to run run.py several times. clear out build/ in between. it's the fetching that takes a long time, not constucting; * in the end, should have several constructors; ```; >>> lh build/psi4conda-1.3-py3.*/*64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; -rwxr-xr-x. 1 psilocaluser psilocaluser 299M Feb 28 20:31 build/psi4conda-1.3-py3.7-osx-64/psi4conda-1.3-py37-MacOSX-x86_64.sh; ```. * use command in readme to upload to vergil; * log in to vergil to make windows wsl symlinks. * worth downloading at least one L and M and installing it and r",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372:1243,down,downloaded,1243,https://psicode.org,https://github.com/psi4/psi4/issues/1496#issuecomment-468535372,1,['down'],['downloaded']
Availability,"nergies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _absolute energy molecule 35_; * dev. old BS to new BS: 3.41e-07; * (newBS) `NONE` to `ROBUST`: 4.93e-07; * (newBS) `NONE` to `TREUTLER`: 1.46E-04. _gradient energy molecule 35_; * (newBS) MAD `NONE` to `ROBUST`: ~ 1E-7; * (newBS) MAD `NONE` to `TREU",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:4084,ROBUST,ROBUST,4084,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,"nergy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(boost::shared_ptr<psi::Wavefunction>, psi::Options&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391:2317,Error,Error,2317,https://psicode.org,https://github.com/psi4/psi4/issues/391,2,['Error'],['Error']
Availability,new python detection downstream,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2096:21,down,downstream,21,https://psicode.org,https://github.com/psi4/psi4/pull/2096,1,['down'],['downstream']
Availability,"new to conda (used to pip), needed to create env first...; `conda create -n p4dev35 python=3.5`. `psi4-path-advisor --intel`; ```; ...; -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include); ```; Any ideas what that is about?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386429024:360,Error,Error,360,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386429024,1,['Error'],['Error']
Availability,"ng &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9474,error,error,9474,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ng of CDS's memory and comparison to GAMESS concluded that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: after discussion below, MRCC _will_ be defaulted to if available. Practically, the only confusion should arise for a-ccsd(t) where Psi4 has the method sometimes (rhf) but not others (uhf/rohf). Methods like ccsd will always default to ccenergy, and methods like ccsdt will always go to mrcc.; - [x] Like to the MRCC case above, the arbitrary-order methods mp_n_, zapt_n_, ci_n_ that were intercepted and then transferred around as a method (e.g., ""mp"") and a level (kwarg ""level=5"") were requiring extra complication to work with the distributed driver. Now all such methods and a reasonable number of levels are added explicitly to the procedures table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:6239,avail,available,6239,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"ng&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt Makefile:127: recipe for target 'all' failed make[3]: *** [all] Interrupt CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt Makefile:138: recipe for target 'all' failed make: *** [all] Interrupt; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1789,Error,Error,1789,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['Error'],['Error']
Availability,"ng<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOLI', 'BORDER', 'BORDER_N_REDIST', 'BORDER_REDIST_ORDER', 'BORDER_REDIST_POL', 'BORDER_RMIN', 'BORDER_RMIN_UNIT', 'BORDER_TYPE', 'BRUECKNER_MAXITER', 'BRUECKNER_ORBS_R_CONVERGENCE', 'B_RAS3_MAX', 'CACHELEVEL', 'CACHETYPE', 'CALC_S_SQUARED', 'CANONICALIZE_ACTIVE_FAVG', 'CANONICALIZE_INACTIVE_FAVG', 'CARTESIAN_SYM_TOLERANCE', 'CART_HESS_READ', 'CC', 'CC3_FOLLOW_ROOT', 'CCD_E_CONVERGENCE', 'CCD_MAXITER', 'CCD_T_CONVERGENCE', 'CCL_ENERGY', 'CC_A_RAS3_MAX', 'CC_B_RAS3_MAX', 'CC_DIIS_MAX_VECS', 'CC_DIIS_MIN_VECS', 'CC_EX_LEVEL', 'CC_FIX_EXTERNAL', 'CC_FIX_EXTERNAL_MIN', 'CC_LAMBDA', 'CC_MACRO', 'CC_MAXITER', 'CC_MIXED', 'CC_NUM_THREADS', 'CC_OS_SCALE', 'CC_RAS34_MAX', 'CC_RAS3_MAX",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:6202,Avail,Available,6202,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['Avail'],['Available']
Availability,"ngle alpha, not a different alpha for each spin.; 2. For the same reason, you need a single beta.; 3. The Fock term assumed semicanonical orbitals. OCC does not use semicanonical orbitals.; 4. The Fock matrix was acting on the wrong vector.; 5. One of the tensor contractions involving TEI was incorrect. After fixing those five bugs, I observed three things:; 1. After accounting for whether you index by (v,o) or (o, v), the matrix-vector products of the new occ implementation match those of the SOUHF P4N tutorials,; 2. The X (kappa) converged to does satisfy Ax=b; 3. The orbital equations refuse to converge. My conclusion is that the implementation of the algorithm is now correct, but it's not a good way to generate orbital steps. The off-diagonal terms can end up being significant for the open-shell systems that would lead you to use an orbital-optimized method. This didn't cause obvious problems before because the previous errors rendered the PCG procedure non-convergent, so you would always fall back to the crude diagonal step _unless_ your orbital gradient was so low that you didn't need to iterate at all. So what we expect to see from this bug is difficulties converging occ tightly, which has been my experience. To remedy the situation, the default orbital step is now the crude semicanonical step. The next PR should be the final one in the series. I'll just need to rebase it onto this one, repair the two tests I mentioned on broken tests, and confirm the test suite is clean. Pinging the usual suspects: @loriab, especially @dgasmith for PCG, and @jturney. I think Jet is sick today, so a different third reviewer would be welcome. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Debugged HF MO hessian based orbital step; - [x] Made HF MO hessian based orbital step opt-in rather than default; Not recommended. ## Checklist; Can't run tests if the tests were already broken!; - [x] Confirmed b-Ax approximately zero for t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829:1487,error,errors,1487,https://psicode.org,https://github.com/psi4/psi4/pull/1829,1,['error'],['errors']
Availability,"ngly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:1381,error,error,1381,https://psicode.org,https://github.com/psi4/psi4/pull/3186,1,['error'],['error']
Availability,"nmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 1595, in hessian; E, wfn = energy(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1608, in run_dfocc; ""RIFIT"", core.get_global_option(""BASIS"")); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/p4util/python_helpers.py"", line 99, in pybuild_basis; psibasis = core.BasisSet.construct_from_pydict(mol, basisdict, puream). RuntimeError: ; Fatal Error: CoordEntry::basisset: Basisset not set for O and type of DF_BASIS_CC; Error occurred in file: /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 134; ```; My own investigations have partially uncovered the cause of this. During basis set construction, [basis set labels are set on all atoms](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L101). This occurs by [iterating over all atoms in full_atoms_](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2879) and [setting basis set labels for them.](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2880) However, there is a very subtle problem. The basis set is constructed from this labels [here](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L173). The [constructor](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L567) sets the basis by [calling atom_entry](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L651). The problem is that a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1093:2105,Error,Error,2105,https://psicode.org,https://github.com/psi4/psi4/issues/1093,2,['Error'],['Error']
Availability,"nsigned int>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned short>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned char>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); ""_PyExc_ReferenceError"", referenced from:; boost::python::converter::(anonymous namespace)::lvalue_result_from_python(_object*, boost::python::converter::registration const&, char const*) in libboost_python-1_57.a(from_python.o); ""_PyExc_RuntimeError"", referenced from:; translate_psi_exception(psi::PsiException const&) in python.cc.o; _no_init in libboost_python-1_57.a(class.o); boost::python::objects::(anonymous namespace)::get_class(boost::python::type_info) in libboost_python-1_57.a(class.o); boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); boost::python::objects::function::add_to_namespace(boost::python::api::object const&, char const*, boost::python::api::object const&, char const*) in libboost_python-1_57.a(function.o); boost::python::detail::pure_virtual_called() in libboost_python-1_57.a(function.o); boost::python::(anonymous namespace)::instance_reduce(boost::python::api::object) in libboost_python-1_57.a(pickle_support.o); ...; ""_PyExc_StopIteration"", referenced from:; boost::python::objects::stop_iteration_error() in libboost_python-1_57.a(iterator.o); ""_PyExc_TypeError"", referenced from:; boost::python::indexing_suite<std::__1::vector<double, std::__1::allocator<double> >, boost::python::detail::final_vector_derived_policies<std::__1::vector<double, std::__1::allocator<double> >, true>, true, false, double, unsigned long, double>::base_set_item(std::__1::vector<double, std::__1::allocator<double> >&, _object*, _object*) in export_mints.cc.o; boost::python::vector_indexing_suite<std::__1::vector<double, st",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:24069,error,errors,24069,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,1,['error'],['errors']
Availability,"nst std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3314,error,error,3314,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"nstallation stops with some errors (the entire log of the configuration attempt is at the bottom of this post). Errors:. ```. CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi4-1.0]$; ```; At the end of the output of the setup script, the user is pointed to CMa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:1073,Error,Error,1073,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"nt __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29554,error,error,29554,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"nt state of the master branch (last included commit: 97761b111b68c56e3763ad7b471ec603da90ed25) of psi4 fails to build at the linking step. The last lines of the output of `make` are; ```/usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been w",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:994,Error,Error,994,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,['Error'],['Error']
Availability,"nt,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49173,error,error,49173,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"nt,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebak，该符号在函数 ""int __cdecl psi::C_DGEBAK(char,char,int,int,int,double *,int,double *,int)"" (?C_DGEBAK@psi@@YAHDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebal，该符号在函数 ""int __cdecl psi::C_DGEBAL(char,int,double *,int,int *,int *,double *)"" (?C_DGEBAL@psi@@YAHDHPEANHPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgebrd，该符号在函数 ""int __cdecl psi::C_DGEBRD(int,int,double *,int,double *,double *,double *,double *,double *,int)"" (?C_DGEBRD@psi@@YAHHHPEANH00000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18274,error,error,18274,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"nt-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3480,down,download,3480,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"nt2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5480,down,download,5480,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"ntage of having a centralized library that all of Psi is supposed to use to do I/O. Then, improvements can be done in only one place (that library), unless there is a design problem with that library's API. The I/O library could be improved to use HDF5, or whatever, on the backend. So, do we need an all-new interface between the CC libraries and libpsio, or is it just that libpsio itself needs its backend replaced?. Best,. David. ________________________________; From: Andrew James <notifications@github.com>; Sent: Thursday, September 20, 2018 10:33:45 AM; To: psi4/psi4; Cc: Sherrill, David; Mention; Subject: [psi4/psi4] Coupled Cluster Rewrite (#1247). We (@amjames<https://github.com/amjames> and @robertodr<https://github.com/robertodr>) propose a partial rewrite of the coupled cluster and DPD functionalities in Psi4.; The main motivation is to make the pending PR #1061, Expose wavefunction and amplitudes to python<https://github.com/psi4/psi4/pull/1061> available satisfying the constraints and comments offered by @dgasmith<https://github.com/dgasmith> and @amjames<https://github.com/amjames>.; Exposing the T and Lambda amplitudes to the Python layer will have a series of beneficial consequences:. * It will be possible to experiment with these quantities easily.; * Writing and reading amplitudes to file (HDF5<https://portal.hdfgroup.org/display/support>, Zarr<https://zarr.readthedocs.io/en/stable/>, or any other format) is more easily managed from Python, especially if we need to preserve compatibility with Windows.; * Restart capabilities. Summary of proposed changes (incomplete); cc* modules. * Create a single cc folder where all the other cc* folders will live as subfolders.; * Provide a top-level CCWavefunction class, partly modeled on the existing CIWavefunction class to overtake the whole implementation of the CC functionality.; * The class will manage MOInfo,Params, DPD as local data members. This will ensure that the lifetime of these objects is tied to a pa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1247#issuecomment-423216907:1321,avail,available,1321,https://psicode.org,https://github.com/psi4/psi4/issues/1247#issuecomment-423216907,1,['avail'],['available']
Availability,"ntfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:19871,error,error,19871,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ntfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41803,error,error,41803,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ntirely from source, with nothing from conda at all. stdout/stderr before this PR:. ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; stdout/stderr after this PR:; ```; PSIO_ERROR: unit = 34, errval = 12; terminate called after throwing an instance of 'psi::PsiException'; what():; Fatal Error: WRITE failed. Only some of the bytes were written!; Error writing the first partial page, unit 34.; PSIO_ERROR: 12 (error writing to file). Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/error.cc on line: 131; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*). Aborted (core dumped); ```; The reason why there is no ""disk is full"" error message, is because `SYSTEM_WRITE` only reports a failure and sets errno if the disk is already full when it is called. As long as it can write at least one out of _however many_ bytes it does not set errno. I both cases there is no error message at all in the output file. The current theory is that the `python` process gets aborted by a SIGABRT and cannot write the message to the output file. I think chasing that down is beyond the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857:1224,error,error,1224,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304899857,7,"['Error', 'down', 'error', 'failure']","['Error', 'down', 'error', 'failure']"
Availability,"ntra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==10081==ABORTING; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). =================================================================; ==10025==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 282802 byte(s) in 124 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f1794b8b3 in PyObject_Malloc (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe88b3). Direct leak of 2 byte(s) in 2 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f17949fe0 in _PyObject_Alloc.isra.0 (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe6fe0). Indirect leak of 19819 byte(s) in 22 object(s) allocated from:; #0 0x7f0f92dd6afc in __interceptor_malloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:62; #1 0x557f1794b8b3 in PyObject_Malloc (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0xe88b3). Indirect leak of 648 byte(s) in 1 object(s) allocated from:; #0 0x7f0f92dd6df8 in __interceptor_realloc /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libsanitizer/asan/asan_malloc_linux.cc:75; #1 0x557f1797673c in _PyObject_GC_Resize (/shared/raimis/opt/miniconda/envs/psi4/bin/python3.6+0x11373c). SUMMARY: AddressSanitizer: 303271 byte(s) leaked in 149 allocation(s). 0% tests passed, 1 tests failed out of 1. Label Time Summary:; casscf = 27.28 sec*proc (1 test); psi = 27.28 sec*proc (1 test); quicktests = 27.28 sec*proc (1 test). Total Test time (real) = 27.46 sec. The following tests FAILED:; 	 3 - casscf-fzc-sp (Failed); Errors while running CTest; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756:19438,Error,Errors,19438,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-421335756,1,['Error'],['Errors']
Availability,"nts standard class. If necessary, write it back at the end of the function call. This allows us to take the task of rewriting all of OCC (and its coupled variables) into going function-by-function. When we can, we'll then just change the variable in the header and eliminate the relevant converters.; * To eliminate code duplication, I added some new objects to the wavefunction that ""contain"" alpha/beta specific quantities. So instead of needing to write the orbital rotation code once for closed-shell, once for open-shell alpha, and once for open-shell beta, you only write it once. I'm not sure how well it generalizes to other functions, but it sure cleaned up update_mo!. ## Capability Loss/Gain; As a result of this switch, we lose the ability to ""level shift"" in OCC. ""Level shift"" is a misnomer and actually refers to scaling the diagonal elements of the DIIS B-matrix. When I'm done, the orbital convergence will be so much better that we won't notice it's gone. In the short term, this does cause more test failures. ## Questions; * Because we're losing ""level shifting"", we're losing some keywords. I don't know how to deprecate these. If they're provided as module-level keywords, then I don't know the technical details of how you would raise a warning message. The bigger problem is when they're global keywords. DFOCC still uses ""level shifting"", so I can only raise a warning when I know what module the user is in. Thoughts on how to handle this?; * Should we be losing ""level shifting""? We can add _damping_ to `libdiis` if there's demand for it. I think there are better things to do with my time. ## Quick Test Status; * Switching out the DIIS version caused the `omp2p5-2` test's OMP2.5 energy to fall outside convergence criteria, again emphasizing how unstable orbital convergence in OCC is. We'll find out what the actual value is by the time I'm done.; * Losing ""level shifting"" was enough to break the `ocepa-grad2` test. This test asks for a higher-than-normal convergence",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783:2450,failure,failures,2450,https://psicode.org,https://github.com/psi4/psi4/pull/1783,1,['failure'],['failures']
Availability,"nually-specified variables were not used by the project:. OpenMP_CXX_LIBRARY_DIRS. ```; The second way to edit link.txt gives error message from OMP:; ```; OMP: Error #15: Initializing libiomp5.so, but found libiomp5.so already initialized.; OMP: Hint: This means that multiple copies of the OpenMP runtime have been linked into the program. That is dangerous, since it can degrade performance or cause incorrect results. The best thing to do is to ensure that only a single OpenMP runtime is linked into the process, e.g. by avoiding static linking of the OpenMP runtime in any library. As an unsafe, unsupported, undocumented workaround you can set the environment variable KMP_DUPLICATE_LIB_OK=TRUE to allow the program to continue to execute, but that may cause crashes or silently produce incorrect results. For more information, please see http://www.intel.com/software/products/support/.; Aborted (core dumped); ```; To force running psi4, I follow OMP error message's suggestion (`export KMP_DUPLICATE_LIB_OK=TRUE`), but dft-custom-gga does not work (failed due to the same reason - not converged ). From my several trials, this problem seems not to be related to OMP libraries. Regardless of using either `gomp` or `iomp`, dft-custom-gga test fails under single thread. In other words, whenever multi-thread is used for calculations, it gives good SCF convergence within few iterations, which seems similar with the issue #994 @hokru reported. I thought it might be problem of incompatibilities between GCC compiler and Intel OMP libraries. Like @loriab setting, I changed to use icpc intel compiler (v 18.0.3), instead of gcc (v5.4.0). Re-built '<objdir>' by cmake. Then, opened '<objdir>/psi4-core-prefix/src/psi4-core-build/src/CMakeFiles/core.dir/link.txt' and added '/opt/intel/lib/intel64' (basically intel 64bit libraries) to set library folder path.; Then, Intel Compiler + Intel OMP libraries works even single thread calculation for dft-custom-gga test. Anyway, I am not sure why on",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-397364809:1129,error,error,1129,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-397364809,1,['error'],['error']
Availability,"nutes on a 20-core machine with no individual test over 4m. That's not reasonable for a laptop. Blame the slow-to-converge oo methods, and it's going to get worse with occd and friends.; - [ ] TODO https://github.com/MolSSI/QCEngine/pull/376 and a new version of QCEngine are a prereq.; - [x] https://github.com/qcdb/qcdb/pull/57 is associated QCDB PR (psi4 PR is a prereq to it); - [ ] TODO full stdsuite in the presence of MRCC will have a couple faults of the ""not NYI"" variety after the MRCC defaulting logic switch from Q. I haven't decided how to remedy this, but it's unlikely to be hit, so I'll defer. ## Questions; - [ ] My version of Psi4+MRCC doesn't run CC2. Anyone else see this? (Just curious, not really needed for PR.); - [ ] I don't think the original module authors will find issues, but if you want to look over pertinent docs and capabilities tables, please do so.; - [x] [ADDED from #2737 For methods (or methods in certain circumstances, say reference or conv/df) only available through an external add-on, do we want those opt-in? That is, certainly the external must be (1) installed and detectable. But do we also want to (2) require the user to set qc_module=mrcc|adcc|chemps2 ? CheMPS2 has a long history of not requiring (2). ADCC has a shorter history of being the preferred backend and automatic choice, if present. @maxscheurer prefers not requiring (2). In this PR, I just switched MRCC syntax to yes require (2). That was in keeping with the user opt-ing in via energy(""mrccsd""). I can go either way, and I guess I'm now leaning toward not requiring (2) and adjusting MRCC accordingly. But it seems like something to discuss and settle on a consistent treatment. EDIT: ok, MRCC can be a default. above section edited. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:13699,avail,available,13699,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"o replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2538,failure,failure,2538,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"o the C core as well at the moment, but our long-term plan is to shuffle more and more to the python layer, so it's most likely not going to be a very sustainable idea. On the upside it would lead to a deep integration of the codes and allow to re-use parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one could also just return it to the user as is. Again the idea being that a psi4 user can use adcc implicitly for calculations, without needing to worry that he/she does. > Should adcc be distributed/build with psi4 in the end? (conda, cmake, etc.). Not sure what will work best. We are working on getting adcc distributed via conda ourselves, so I guess one could just pull it from there as part of the usual psi4 installation procedure. If the interfacing is done on the python level as I described above and as I did in the PR so far, this should not introduce big changes. One could even easily make th",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:1609,toler,tolerances,1609,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['toler'],['tolerances']
Availability,"o the superior [standalone library](https://github.com/robashaw/libecpint), also written by Rob Shaw. That library also provides gradient and Hessian terms, which will greatly improve performance. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Hook up external build; - [x] Get energies working; - [x] Get gradients working; - [x] Get Hessians working; - [x] Remove old native implementation; - [x] Make all tests / references to ECPs conditional depending on libECP activation. LAB: conditional build marked by `USING_ecpint` compile definition. This turned out uglier than should strictly be needed because as soon as you ifdef the ao_ecp declarations in integrals.cc, all calcs, w/ or w/o ecp segfault. Possibly I'm missing something, but present ifdef pattern is working stably.; - [x] Linux and Mac conda packages are available off psi4/label/dev. Windows untested. These packages have stylistic problems, but they'll do for now. There are also Linux and Mac conda packages off conda-forge. At least the Linux works fine. Installation is mildly involved with the mixed base channels, so the psi4 packages exist for simplicity of availability.; - [x] NYI message on stability code added to close #2577 ; - [ ] build docs will be in a separate PR. ## Questions; - Can anyone think of how one might access code with ecp ifdefs _without_ building a psi4 BasisSet (besides zerobasis)? Particularly though some non-driver mintshelper API call? This is important because the nearly sole whoa-your-mol+basis-needs-ecp-but-libecpint-not-built warning happens at the BasisSet build in export_mints. If users get around that, they'll be surprised by missing electrons b/c ecp code is deactivated. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135:1275,avail,availability,1275,https://psicode.org,https://github.com/psi4/psi4/pull/2135,1,['avail'],['availability']
Availability,"o/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/Li",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1389,error,error,1389,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"object at 0x7f6fc473c360>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; 	",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:42305,Error,Error,42305,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4a59eb8>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; P",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:30833,Error,Error,30833,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4b93fc0>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; C",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:13332,Error,Error,13332,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4be7678>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; ________________________________________________________________ test_psi4_basic _________________________________________________________________. d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:20633,Error,Error,20633,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4ccd780>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; _________________________________________________________________ test_psi4_cas __________________________________________________________________. d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:23764,Error,Error,23764,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4cd6b48>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; C",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:7823,Error,Error,7823,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fef0343b8>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; __________________________________________________________________ test_psi4_cc __________________________________________________________________. d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:27192,Error,Error,27192,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"oc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char const*, char*, unsigned long, !; ! psi::psio_address, psi::psio_address*) !; ! psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int) !; ! !; !----------------------------------------------------------------------------------!; Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procroutin",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:1599,Error,Error,1599,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,3,['Error'],['Error']
Availability,"occ': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181:1244,error,error,1244,https://psicode.org,https://github.com/psi4/psi4/issues/3181,1,['error'],['error']
Availability,occasional failure of sapt inf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:11,failure,failure,11,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['failure'],['failure']
Availability,"oh no, not again. Yes, one had to download patched files for the previous version from their homepage.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497#issuecomment-1077501281:34,down,download,34,https://psicode.org,https://github.com/psi4/psi4/issues/2497#issuecomment-1077501281,1,['down'],['download']
Availability,"ok, I have built psi4 v1.3.2 with python v3.11 from conda-forge. I had to make one src modification to get it to compile:. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) git diff; diff --git a/psi4/src/create_new_plugin.cc b/psi4/src/create_new_plugin.cc; index 3734a7b..6f2bde2 100644; --- a/psi4/src/create_new_plugin.cc; +++ b/psi4/src/create_new_plugin.cc; @@ -32,6 +32,7 @@; #include <regex>; #include <sstream>; #include <string>; +#include <iterator>; ; #include ""psi4/psi4-dec.h"". ```. After that, I get the error, just like you reported: `ImportError: cannot import name 'core' from partially initialized module 'psi4' (most likely due to a circular import)`. However, the suffix for the `core<stuff>.so` library is badly formed, so it's `coreNone`. When I add a symlink to a proper name, it works just fine. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) ll stage/lib/psi4/; total 25704; lrwxrwxrwx. 1 psilocaluser psilocaluser 8 Nov 1 15:57 core.cpython-311-x86_64-linux-gnu.so -> coreNone; -rwxr-xr-x. 1 psilocaluser psilocaluser 26286096 Nov 1 16:14 coreNone; drwxr-xr-x. 7 psilocaluser psilocaluser 4096 Nov 1 15:58 driver; -rw-r--r--. 1 psilocaluser psilocaluser 5898 Nov 1 15:08 extras.py; -rw-r--r--. 1 psilocaluser psilocaluser 2934 Nov 1 14:50 header.py; -rw-r--r--. 1 psilocaluser psilocaluser 3693 Nov 1 15:08 __init__.py; -rw-r--r--. 1 psilocaluser psilocaluser 1144 Nov 1 16:14 metadata.py; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 16:14 __pycache__; drwxrwxr-x. 2 psilocaluser psilocaluser 4096 Nov 1 15:20 tests; ```; ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; 	SCF energy........................................................PASSED; ```. Full conda env is this:. ```; (py311cf_L1) psilocaluser@bash:psinet:/psi/gits/hrw-v132/objdir_py311cf_L1: (1.3.x) conda list; # packages in envi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719:558,error,error,558,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1299103719,1,['error'],['error']
Availability,"ok, docs and hopefully a fix for efp is up. > especially need to know how developers decide what's worth logging. I don't have a good answer. On the DDD side, stuff goes in the log that no longer appends nicely to the output (because its run in a separate process), so logging is on the generous side. In general, the stuff we want to log doesn't map evenly to the (critical=50, error=40, warn=30, info=20, debug=10) levels that Python sets up. Something more like https://www.ibm.com/docs/en/cognos-analytics/10.2.2?topic=SSEP7J_10.2.2/com.ibm.swg.ba.cognos.ug_rtm_wb.10.2.2.doc/c_n30e74.html with ""debug-low"" etc. might be better. After all, geometry of the molecule is pretty essential, but it's not ""progress of the job"", so I called it debug. For the moment, log contents are a free-for-all, so I've tried to make that clear in the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2512#issuecomment-1082126210:379,error,error,379,https://psicode.org,https://github.com/psi4/psi4/pull/2512#issuecomment-1082126210,1,['error'],['error']
Availability,"ok, folks, this now gives correct answers and fixes the azure error. * @dgasmith, what's the prospect of a g2g 2.0 release; * all those who consider pointers their allies should check that my formation of `xyz` is equivalent to https://github.com/dgasmith/gau2grid/compare/v1.3.1...master#diff-f8f6cc08ea43fcbc6d2e07d960e118c2L69-R94",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1718#issuecomment-531592608:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/pull/1718#issuecomment-531592608,1,['error'],['error']
Availability,"ok, i updated to gcc_5.1.0, however when running ./psi4 : i get the following error : . Traceback (most recent call last):; File ""./psi4"", line 126, in <module>; import psi4; File ""/home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/**init**.py"", line 59, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /home/LUCA/psi-master_18_11_2016/psi4/TS/stage/usr/local/bin/../lib//psi4/core.so: undefined symbol: __intel_avx_rep_memset. Any idea how to get rid of this ?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522#issuecomment-261747759:78,error,error,78,https://psicode.org,https://github.com/psi4/psi4/issues/522#issuecomment-261747759,1,['error'],['error']
Availability,"ok, the `dft_blocking_schemes` error only appears with a new l2, so for now this PR is good to go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2446#issuecomment-1045014086:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/pull/2446#issuecomment-1045014086,1,['error'],['error']
Availability,"ompositeJK is a single JK subclass which enables the combination and execution of any separate J and K build algorithm available in Psi4. CompositeJK can enable this without duplication of separate build algorithms across different subclasses. Additionally, CompositeJK is designed to enable simple expansion of itself, enabling the easy addition of new separate J and K builds to Psi4 with minimal programming issues. The current PR is the first implementation of the CompositeJK framework into Psi4, and it has two components:; - Front end. The front end changes control of how composite combinations of separate J and K build algorithms can be called by the user. The most important aspect is that, for CompositeJK, any combinations of its sub-algorithms can be called by setting SCF_TYPE to `J_alg+K_alg`, where _J_alg_ is the separate J build algorithm of choice, and _K_alg_ is the separate K algorithm of choice. As of now, the two CompositeJK options available are `DIRECTDFJ+LINK` representing the old DFJLinK class, and `DIRECTDFJ+COSX` representing the old DFJCOSK class. The key here, is that the ""+"" delimiter in SCF_TYPE serves as a signal to Psi4 that a CompositeJK algorithm is being used. ; - Back end. Basically all of the back-end changes can be classified into two categories - merging DFJLinK and DFJCOSK into the initial CompositeJK implementation, and modifications of functions where necessary to support the above front-end changes. . ## User API & Changelog headlines; - [X] The ""COSX"" keyword for ""SCF_TYPE"" has been replaced with ""DIRECTDFJ+COSX"".; - [X] The ""LINK"" keyword for ""SCF_TYPE"" has been replaced with ""DIRECTDFJ+LINK"". ## Dev notes & details; - [X] Refactors the DFJLinK and DFJCOSK classes into the combined CompositeJK JK subclass. CompositeJK can perform the computations previously performed by both DFJLinK and DFJCOSK within a single JK subclass. These changes are largely localized to the commits f0c4f6c8e31696f6690e101d71bef1863bcf324c - ca66c91976cb5e8",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2833:2493,avail,available,2493,https://psicode.org,https://github.com/psi4/psi4/pull/2833,1,['avail'],['available']
Availability,"on MacOS bigSur I am using `-DOpenMP_LIBRARY_DIRS=/usr/local/Cellar/libomp/12.0.1/lib` where I have brew installation `libomp.a` and `libomp.dylib1 but still getting:. ```; ld: library not found for -lMathOpenMP_LIBRARIES-NOTFOUND; clang: error: linker command failed with exit code 1 (use -v to see invocation); ```. I used conda's version and it worked. In the words of GROMACs, ""Sadly, the interactions of hardware, libraries, and compilers are only going to continue to get more complex."". And to add ""Thanks to MacOS and Intel :( """,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636:239,error,error,239,https://psicode.org,https://github.com/psi4/psi4/issues/1118#issuecomment-1001873636,1,['error'],['error']
Availability,"on `molecule` with engine `DFTD3`. See; `dashparam.from_array` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; > dftd3_driver(jobrec). ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:131:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'gradient', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)""...a': [12, 12, 1, 1, 1, 1, ...], 'elem': ['C', 'C', 'H', 'H', 'H', 'H', ...], 'elez': [6, 6, 1, 1, 1, 1, ...], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:4331,error,error,4331,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['error'],['error']
Availability,"on and linking were completed successfully! However, one of 299 tests was failed. Regards,; Alexander. > 99% tests passed, 1 tests failed out of 299; > ; > Label Time Summary:; > adc = 34.90 sec (2 tests); > autotest = 175.66 sec (26 tests); > casscf = 8.94 sec (8 tests); > cc = 402.14 sec (59 tests); > cdomp2 = 1.93 sec (2 tests); > cepa = 2.56 sec (5 tests); > ci = 0.76 sec (1 test); > cisd = 13.09 sec (7 tests); > cubeprop = 1.58 sec (1 test); > dcft = 237.84 sec (13 tests); > df = 162.69 sec (32 tests); > dfccd = 0.38 sec (1 test); > dfccd-grad = 1.05 sec (1 test); > dfccdl = 0.39 sec (1 test); > dfccsd = 0.46 sec (1 test); > dfccsd-grad = 1.40 sec (1 test); > dfccsdat = 0.82 sec (1 test); > dfccsdl = 0.48 sec (1 test); > dfccsdt = 0.63 sec (1 test); > dfmp2 = 50.96 sec (8 tests); > dfomp2 = 8.14 sec (6 tests); > dfomp2.5 = 6.34 sec (4 tests); > dfomp3 = 6.42 sec (4 tests); > dfscf = 77.65 sec (1 test); > dft = 549.70 sec (10 tests); > docs = 0.49 sec (3 tests); > fci = 18.26 sec (6 tests); > findif = 360.17 sec (5 tests); > fnocc = 12.59 sec (4 tests); > freq = 2.36 sec (1 test); > gradient = 19.53 sec (13 tests); > libefp = 4.24 sec (5 tests); > longtests = 2490.57 sec (5 tests); > mcscf = 0.79 sec (3 tests); > mints = 20.27 sec (8 tests); > misc = 125.96 sec (14 tests); > mp2 = 240.79 sec (10 tests); > ocepa = 31.90 sec (6 tests); > omp = 35.55 sec (18 tests); > opt = 911.35 sec (19 tests); > properties = 13.38 sec (3 tests); > psi = 5265.29 sec (299 tests); > psimrcc = 44.08 sec (8 tests); > pywrap = 98.47 sec (14 tests); > quicktests = 348.61 sec (87 tests); > rasci = 28.47 sec (3 tests); > sapt = 1698.31 sec (7 tests); > scf = 751.84 sec (29 tests); > shorttests = 2425.46 sec (206 tests); > sowreap = 1.22 sec (3 tests); > stability = 2.04 sec (2 tests); > tutorial = 23.38 sec (6 tests); > x2c = 0.96 sec (3 tests); > ; > Total Test time (real) = 5267.01 sec; > ; > The following tests FAILED:; > 259 - pywrap-opt-sowreap (Failed); > Errors while running CTest",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/312#issuecomment-196383757:2065,Error,Errors,2065,https://psicode.org,https://github.com/psi4/psi4/issues/312#issuecomment-196383757,1,['Error'],['Errors']
Availability,"on of one-electron integrals on a quadrature grid. Therefore, there are a number of improvements to be made, in order of increasing difficulty:. - Do a better job at screening small integrals before they're computed (like [these](https://aip.scitation.org/doi/pdf/10.1063/1.5048491)); - Use better grids (such as [here](https://aip.scitation.org/doi/full/10.1063/1.5049435)); - Compute individual integrals faster. This could be done by reusing intermediates in the recursion for integrals involving the same shell-pair and different grid points. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement semi-numerical exchange in the `DFCOSK` class; - [x] Add tests & docs. ## Questions; - [x] What do we want the `SCF_TYPE` keyword for this algorithm to be? It's currently `COSK`. It could also be `DFJCOSK`. It might make more sense to call the algorithm `SNK` (for semi-numerical exchange) over `COSK`, as the latter is more general, and will still be accurate even if we change the screening procedure. (The former refers to a very specific screening procedure).; - [x] For anyone who regularly uses COSK: do you have a preference for how the tightness of the integration grids are specified? Currently, the user gives the number of spherical/angular points. We could also predefine a set of allowed spherical/angular combos. That might be easier for users (they don't have to know about lebedev numbers, for example), but it sacrifices flexibility.; - [x] This is less a question and more of a note: the `DFTGrid` class is in serious need of a refactor so that it does not read from global options. This PR kicks the can down the road by adding another constructor to the class, which takes `double`-type options. I'd be happy to hear any thoughts on what to do with this class, though that probably deserves its own issue. ## Checklist; - [x] Tests added for any new features. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2567:3176,down,down,3176,https://psicode.org,https://github.com/psi4/psi4/pull/2567,1,['down'],['down']
Availability,"on value of 15 degrees and want to keep it there, apparently. If you; can build a starting geometry that satisfies the desired constraint, then; you've got better odds of success using ""frozen"" coordinates. I tried a; double-zeta HF optimization with frozen_dihedral = ""4 10 11 6"" with; dynamic_level =1, and the optimization converged within 10 iterations. On Tue, Nov 14, 2017 at 11:28 AM, Chaya Stern <notifications@github.com>; wrote:. > I tried running it again with opt_coordinates = cartesian with a; > restrained dihedral and dynamic_level = 1. However, it crashed again,; > this time when it raises dynamic level to 3 it crashed when it tries to; > write the optimization data to binary file. Here's; > <https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.out#L12821-L12831>; > the traceback:; >; > 	Writing optimization data to binary file.; > 	; > Fatal Error: PSIO Error; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495011512596/work/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); > psi::psio_error(unsigned int, unsigned int); > psi::PSIO::write(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); > psi::PSIO::write_entry(unsigned int, char const*, char*, unsigned long); > psi::psio_write_entry(unsigned int, char const*, char*, unsigned long); >; > Also, it still seems to be using internal coordinates (unless I'm not; > understanding the output file).; > Here is the new input; > <https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.dat>; > and output; > <https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.out>; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858#issuecomment-344476280:1021,Error,Error,1021,https://psicode.org,https://github.com/psi4/psi4/issues/858#issuecomment-344476280,4,"['Error', 'error']","['Error', 'error']"
Availability,"on ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!. [CMakeError.log](https://github.com/psi4/psi4/files/1515094/CMakeError.log); [CMakeOutpu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:1200,Error,Error,1200,https://psicode.org,https://github.com/psi4/psi4/issues/871,1,['Error'],['Error']
Availability,"on-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > short>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > char>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > ""_PyExc_ReferenceError"", referenced from:; > boost::python::converter::(anonymous; > namespace)::lvalue_result_from_python(_object_,; > boost::python::converter::registration const&, char const*) in; > libboost_python-1_57.a(from_python.o); > ""_PyExc_RuntimeError"", referenced from:; > translate_psi_exception(psi::PsiException const&) in python.cc.o; > _no_init in libboost_python-1_57.a(class.o); > boost::python::objects::(anonymous; > namespace)::get_class(boost::python::type_info) in; > libboost_python-1_57.a(class.o); > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ; > boost::python::objects::function::add_to_namespace(boost::python::api::object; > const&, char const_, boost::python::api::object const&, char const_) in; > libboost_python-1_57.a(function.o); > boost::python::detail::pure_virtual_called() in; > libboost_python-1_57.a(function.o); > boost::python::(anonymous; > namespace)::instance_reduce(boost::python::api::object) in; > libboost_python-1_57.a(pickle_support.o); > ...; > ""_PyExc_StopIteration"", referenced from:; > boost::python::objects::stop_iteration_error() in; > libboost_python-1_57.a(iterator.o); > ""_PyExc_TypeError"", referenced from:; > boost::python::indexing_suite<std::__1::vector<double,; > std::__1::allocator<double> >,; > boost::python::detail::final_vector_derived_policies<std::__1::vector<double,; > std::__1::allocator<double> >, true>, true, false, double, unsigned long,; > double>::base_set_item(std::__1::vector<double, std::__1::allocator<double>; > &, _object_, _object_) in export_mints.cc.o; > boost::pyt",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:25482,error,errors,25482,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,1,['error'],['errors']
Availability,"on.tcl; Parse Config file:/home/raimis/psi4.git/linux_build/DartConfiguration.tcl; Test project /home/raimis/psi4.git/linux_build; Constructing a list of tests; Done constructing a list of tests; Updating test list for fixtures; Added 0 tests to meet fixture requirements; Checking test dependency graph...; Checking test dependency graph end; test 360; Start 360: cubeprop-esp. 360: Test command: /shared/raimis/opt/miniconda/envs/psi4/bin/python ""/home/raimis/psi4.git/tests/runtest.py"" ""/home/raimis/psi4.git/tests/cubeprop-esp/input.dat"" ""/home/raimis/psi4.git/linux_build/testresults.log"" ""false"" ""/home/raimis/psi4.git"" ""false"" ""/home/raimis/psi4.git/linux_build/tests/cubeprop-esp/output.dat"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/share/psi4"" ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/""; 360: Test timeout computed to be: 1500; 360: 	Comparing Dt......................................................PASSED; 360: Traceback (most recent call last):; 360: File ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/bin/psi4"", line 264, in <module>; 360: exec(content); 360: File ""<string>"", line 37, in <module>; 360: File ""/home/raimis/psi4.git/linux_build/stage/home/raimis/psi4.git/linux_install/lib/psi4/driver/p4util/util.py"", line 387, in compare_cubes; 360: raise TestComparisonError(message); 360: ; 360: TestComparisonError: 	Comparing ESP: computed cube file does not match expected cube file.; 360: Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); 1/1 Test #360: cubeprop-esp .....................***Failed 6.27 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; cubeprop = 6.27 sec*proc (1 test); psi = 6.27 sec*proc (1 test). Total Test time (real) = 6.33 sec. The following tests FAILED:; 	360 - cubeprop-esp (Failed); Errors while running CTest; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403465937:2245,Error,Errors,2245,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403465937,1,['Error'],['Errors']
Availability,"on::detail::no_proxy_helperstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >,; > boost::python::detail::final_vector_derived_policiesstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>,; > boost::python::detail::container_elementstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, unsigned long,; > boost::python::detail::final_vector_derived_policies<std::__1::vector&lt; > ;boost::shared_ptr<psi::Matrix>,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true> >, unsigned; > long>, boost::shared_ptrpsi::Matrix, unsigned; > long>::base_get_slice_data(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&, PySliceObject_,; > unsigned long&, unsigned long&) in export_mints.cc.o; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ""_PyExc_OverflowError"", referenced from:; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > long>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > int>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > short>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > boost::python::converter::(anonymous; > namespace)::unsigned_int_rvalue_from_python<unsigned; > char>::extract(_object_) in libboost_python-1_57.a(builtin_converters.o); > ""_PyExc_ReferenceError"", referenced from:; > boost::python::converter::(anonymous; > namespace)::lvalue_result_from_python(_object_,; > boost::python::conv",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:24016,error,errors,24016,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,1,['error'],['errors']
Availability,"on; cmake version 3.18.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; $ ls /path/to/eigen3/share/eigen3/cmake; Eigen3Config.cmake Eigen3ConfigVersion.cmake Eigen3Targets.cmake UseEigen3.cmake; ```. Here Eigen 3.3.7 is manually installed. ```console; $ git describe --always; v1.5-178-gd725195826a1; $ cmake -G Ninja -B build -S . -D BOOST_ROOT:PATH=/path/to/boost -D Eigen3_DIR:PATH=/path/to/eigen3/share/eigen3/cmake; $ cmake --build build -- external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://github.com/evaleev/libint ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:977,error,errors,977,https://psicode.org,https://github.com/psi4/psi4/issues/2606,1,['error'],['errors']
Availability,"onal={..., 'dispersion': {...}}` now work. they go through the same route, but the pieces are treated a little differently. ""params"" are the final say -- the user option `DFT_DISPERSION_PARAMETERS` has no effect. ""name"" and ""citation"" aren't ""blessed"" like the official ones, so they're not going to get printed unless they match official ones. I think that's reasonable -- don't want to be printing citations unquestioned.; - [x] now tracing citations again. see below for examples. always printing the disp level citation. printing the dash param citation if available (not listed for many common functionals. No opportunity for user-defined citation. It can be put it, but I didn't see the point of trusting unverified values.; - [x] put in a few more checks that'll catch some problems when adding new official fctl dictionaries.; - [x] renamed some files based on slack discussion. ```; ================================================================================; => DLDF+D09: Empirical Dispersion <=. Podeszwa and Szalewicz Dispersion Correction; Pernal, K.; Podeszwa, R.; Patkowski, K.; Szalewicz, K. (2009), Phys. Rev. Lett., 103: 263201. s6 = 1.000000. ================================================================================; => OTPSS-D: Empirical Dispersion <=. Grimme's -D2 Dispersion Correction; Grimme, S. (2006), J. Comp. Chem., 27: 1787-1799; Parametrisation from: L. Goerigk, S. Grimme, J. Chem. Theory. Comput. 6, 107-126, 2010. s6 = 1.000000; alpha6 = 20.000000; sr6 = 1.150000. ================================================================================; => Custom: Empirical Dispersion <=. Grimme's -D2 Dispersion Correction; Grimme, S. (2006), J. Comp. Chem., 27: 1787-1799. s6 = 2.750000; alpha6 = 20.000000; sr6 = 1.100000. ================================================================================; ```. Also been rebased. Windows is failing b/c it's downloading py27. I'll have to investigate why. In particular, 7921cf1 and 2a273ca ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1151#issuecomment-426866307:1981,down,downloading,1981,https://psicode.org,https://github.com/psi4/psi4/pull/1151#issuecomment-426866307,1,['down'],['downloading']
Availability,"onst std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Sourc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1731,error,error,1731,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"ooked at this ~D3h Mn(NO)(CO)4 complex. It is pathologically interesting.; 1. There are no reasonable torsions defined among the bonded atoms in this molecule, as each of the 5 spokes out from the metal involve 2 ~collinear atoms.; 2. The reason that optking was trying to use torsions is that the input geometry is so crowded that the covalent radii * 1.3 formula was bonding the Mn to the atom once removed (beta?). That is, in the linear Mn-N-O, both Mn-N and Mn-O bonds were being created. So I tried covalent_connect=1.2, which results in only linear bends being defined and no torsions. This raises the question of whether we should use something beyond a linear scaling, or count on the user to provide a reasonable structure. (The clean tool in Spartan lengthened the Mn-N bond by 25%.). For the moment, I am not changing. ; 3. Using these coordinates (all stretches and bends), the first step blew up to 100 Angstroms Cartesian step. This was not due to forces, which were large but not that ridiculous.; 4. The numerical test of the B matrix passed. (a non-trivial accomplishment for this thing); 5. I figured out that the pseudoinverse of (B B^T) was blowing up, due to inversion of very small values. It is customary to invert only those eigenvalues whose magnitude is >1e-10 or so. A numerical problem was introduced when my custom linear algebra function was replaced by numpy.linalg.pinv which uses a default of 1e-14. I'm actually surprised if this threshold isn't causing problems more commonly. Anyway, I increased this to 1e-12 and added a keyword to increase it further. More testing is needed to see if we can make the default larger. This particular case needs 1e-8 and then the optimization iterates successfully downhill. The geometry is very far from equilibrium and may be changing electronic states, so I'm not pursuing its STO-3G to a minimum whatever that might be.; So I am going to commit some related things but I'm not going to attend to this particular case further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316:1745,down,downhill,1745,https://psicode.org,https://github.com/psi4/psi4/issues/2213#issuecomment-1583231316,1,['down'],['downhill']
Availability,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. compilation aborted for /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc (code 2); src/lib/libmints/CMakeFiles/mints.dir/build.make:583: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o' failed; make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o] Error 2; CMakeFiles/Makefile2:1861: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/all' failed; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. With the GNU compiler (g++ (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010) it works fine. I'm just warning because many HPCs prefer the intel compiler and you might want to provide support. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:15507,Error,Error,15507,https://psicode.org,https://github.com/psi4/psi4/issues/262,3,['Error'],['Error']
Availability,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(156): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::difference_type difference_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instanti",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:9953,error,error,9953,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"optking was aborting prematurely. I just pushed the fix to the problem. For this case I found consecutive_backsteps = 2 [or more], as well as dynamic_level = 1 to now be helpful. (Don't use both at once as that is somewhat redundant.) Sometime I will type up some tips on problematic optimizations. But now optking will at least move you substantially closer to the minimum. Though one may always have to restart an optimization, these options will minimize the manual effort necessary.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/153#issuecomment-127808983:223,redundant,redundant,223,https://psicode.org,https://github.com/psi4/psi4/issues/153#issuecomment-127808983,1,['redundant'],['redundant']
Availability,"or LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25646,error,error,25646,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"or LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:43251,error,error,43251,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"or: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:2650,error,error,2650,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"ories/psi4/objdir]$ otool -L /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so:; 	@rpath/core.cpython-37m-darwin.so (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1); 	@rpath/libmkl_rt.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libiomp5.dylib (compatibility version 5.0.0, current version 5.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libgomp.1.dylib (compatibility version 2.0.0, current version 2.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.25.0); 	/usr/local/lib/gcc/8/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0); ```. As you said, it seems ```gcc``` tries to impose ```gomp```. How can I bypass it ?; Because I still have the error:; ```; E ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Symbol not found: __gfortran_concat_string; E Referenced from: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; E Expected in: flat namespace; E in /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; ```. which (I think) is due to that right ?. PS: ```echo $DYLD_LIBRARY_PATH``` gives ```/opt/intel/lib``` only. And in case it helps, here is the output of my configuration step, which seems correct:; ```cmake -H. -Bobjdir -DOpenMP_LIBRARY_DIRS=/opt/intel/lib```; ```; -- The C compiler identification is GNU 8.3.0; -- The CXX compiler identification is GNU 8.3.0; -- Checking whether C compiler has -isysroot; -- Checking whether C compiler has -isysroot - yes; -- Checking whether C compiler supports OSX deployment target flag; -- Checking whether C compiler supports OSX deployment target flag -",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308:1933,error,error,1933,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-615163308,1,['error'],['error']
Availability,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:16312,error,errors,16312,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['error'],['errors']
Availability,"ost recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:11275,Error,Error,11275,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,"['Error', 'error']","['Error', 'error']"
Availability,"ouble *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbcon，该符号在函数 ""int __cdecl psi::C_DPBCON(char,int,int,double *,int,double,double *,double *,int *)"" (?C_DPBCON@psi@@YAHDHHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbequ，该符号在函数 ""int __cdecl psi::C_DPBEQU(char,int,int,double *,int,double *,double *,double *)"" (?C_DPBEQU@psi@@YAHDHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbrfs，该符号在函数 ""int __cdecl psi::C_DPBRFS(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:32880,error,error,32880,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"ous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; ```; and started with a clean build directory. I am on the current master, commit 42016c2a4462b6d7e9f030df4e75e7d81b50b9a8. This is on Fedora 28 with; ```; $ gcc --version; gcc (GCC) 8.1.1 20180712 (Red Hat 8.1.1-5); Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:4258,Error,Error,4258,https://psicode.org,https://github.com/psi4/psi4/issues/1256,3,['Error'],['Error']
Availability,"out_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in run_sapt_dft; sapt_dft(dimer_wfn, wfn_A, wfn_B, sapt_jk=sapt_jk, data=data, print_header=False); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/dri",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1969,ERROR,ERROR,1969,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:9039,error,error,9039,https://psicode.org,https://github.com/psi4/psi4/issues/1562,2,"['down', 'error']","['downstream', 'error']"
Availability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:3432,error,error,3432,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,2,"['down', 'error']","['downstream', 'error']"
Availability,"owername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/driver.py"", line 639, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2068, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/proc.py"", line 1360, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/home/psilocaluser/gits/hrw-release/objdir37/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 178, in scf_initialize; self.initialize_jk(self.memory_jk_). RuntimeError:; Fatal Error: DFHelper: not enough memory for (p shell) AO blocking! required memory: 0.105622[GiB].; Error occurred in file: /home/psilocaluser/gits/hrw-release/psi4/src/psi4/lib3index/dfhelper.cc on line: 568; ```. ```; @@ -556,8 +557,11 @@ std::pair<size_t, size_t> DFHelper::pshell_blocks_for_AO_build(const size_t mem,; constraint = total;; constraint += full_3index;; constraint += (hold_met_ ? naux_ * naux_ : total);; + printf(""AAAA %4d: %10d > %d || %4d == %4d\n"", count, constraint, mem, i, pshells_-1);; if (constraint > mem || i == pshells_ - 1) {; + printf("" AAA %d || %d\n"", constraint > mem, i == pshells_ - 1);; if (count == 1 && i != pshells_ - 1) {; + printf("" AA %d && %d\n"", count == 1, i != pshells_ - 1);; std::stringstream error;; error << ""DFHelper: not enough memory for (p shell) AO blocking!""; << "" required memory: "" << constraint * 8 / (1024 * 1024 * 1024.0) << ""[GiB]."";; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862:1844,Error,Error,1844,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428754862,4,"['Error', 'error']","['Error', 'error']"
Availability,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:38916,error,error,38916,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHNPEAH00H0H11@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygst，该符号在函数 ""int __cdecl psi::C_DSYGST(int,char,int,double *,int,double *,int)"" (?C_DSYGST@psi@@YAHHDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygv，该符号在函数 ""int __cdecl psi::C_DSYGV(int,char,char,int,double *,int,double *,int,double *,double *,int)"" (?C_DSYGV@psi@@YAHHDDHPEANH0H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsygvd，该符号在函数 ""int __cdecl psi::C_DSYGVD(int,char,char,int,double *,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYGVD@psi@@YAHHDDHPEANH0H00HPEAHH@Z) 中被引用;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:46282,error,error,46282,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"pack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53105,error,error,53105,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"patibility/) since people compile against our packages. The `gcc-5` on the psi4 channel is one I swiped from msarahan a year or so ago at the time of our last gcc crisis. I'd very much like to go back to using a defaults channel gcc, esp. for the gcc/libgcc separation. I tried out their `gcc_linux-64` at SciPy and it worked great. I planned to use their new toolchain system underneath Intel compilers but haven't had a chance to work on it. One aspect that might be immediately helpful to you is that because of our initial drive to make psi4 as static as possible, the psi4 package has no `libstdc++.so` runtime dependency. Only dep is on `libgcc_s.so` which can usually be picked up anywhere. In fact, we keep `gcc-5` away from travis builds so that different compilers can be properly tested. Below is a dependency readout from a recent build for general consultation. And yes, I've hit the conda inspect multiple packages message, too. There are plans down the road to drop `std::regex`, which means we could go back to general c++11 compliance and 4.8.5 would be ok. But because the packages are compiled against, we'd prefer to stay >=5.2 anyways. So summary is that current setup is stable but not ideal and we're not attached. Just haven't had time or need to roll out the latest tools. Short of another gcc packages revamp, are there particular problems/conflicts we could help tackle?. ```; + ldd -v /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/core.so; 	linux-vdso.so.1 => (0x00007fff87fc4000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4318faf000); 	libc.so.6 => /lib64/libc.so.6 (0x00007f4318bed000); 	libpcm.so.1 => /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/../../../libpcm.so.1 (0x00007f4312184000); 	libxc.so => /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/../../../libxc.so (0x00007f4311d74000); 	libdl.so.2 => /lib64/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/812#issuecomment-332960335:1166,down,down,1166,https://psicode.org,https://github.com/psi4/psi4/issues/812#issuecomment-332960335,1,['down'],['down']
Availability,"per](https://onlinelibrary.wiley.com/doi/full/10.1002/jcc.20604) behind Rob's implementation. All three codes will get the same relaxed PDMs and solve orbital response terms by conjugate gradients, but they do not agree on which terms should be called orbital response or the exact form of the conjugate gradient equation to be solved. The caller code should be able to compute the PDMs however they want, with just a link to the relevant paper in the comments. ## Open Questions; * @dgasmith, what do you need to get MP2 RDM information passed to double hybrid functionals (#1333)?; * Crawford group in general, how willing are you to adapt the CC gradients to the new style of gradients?; * What is the fate of CI gradients? These were operational in Psi3 but were not hooked back up to Psi4. This means that at present, Psi can't even do CASSCF gradients. I believe this is enough of an issue for @fevangelista that he was playing with getting these hooked back in.; * Do we want to allow blocks to only include the correlation density but not the reference density? This is simple enough for a Hartree-Fock reference but does introduce ambiguity for other references, e.g., if MR-DSRG wants the gradient code to add a CAS reference to its correlation density.; * Is there some inherent problem with Psi's 3-index tensor technology that would have forced Ugur to use his own tensor classes? I'm not familiar with 3-index manipulations.; * One of the other major problems with the current approach to gradients is prefactors. When writing different blocks of the gradient code to `libiwl`, there's a prefactor you need for different blocks. At present, the needed prefactor seems completely random. I'd _like_ to figure out the origin of these prefactors and determine if there's a way to make them saner, or at least documented. I'll get to this when I've recovered, but if anybody has any knowledge about this, let us know! This issue will be especially important for _spin-restricted_ gradients.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1736:8475,recover,recovered,8475,https://psicode.org,https://github.com/psi4/psi4/issues/1736,1,['recover'],['recovered']
Availability,"perhaps this analogy will help: anytime you have used a Python tuple, the only true equivalent is a variadic template. Rvalue references are probably the only other feature I'd label as an essential C++11 feature. Not supporting them can lead to needing extensive code redesign or major performance hits when objects interact. With foresight, rvalue references can be simulated by unique pointers (available in Boost), but the reality is it is often hard to have such foresight. As for the other main C++11 features, standard library implementations of shared/unique pointers, the new chrono and random number generator libraries are all in Boost, a dependency I foresee us having forever. Lamdas are syntactic sugar for static functions. Strong enums are just little wrapper classes around a primitive type . Initializer lists are perhaps borderline essential, but ultimately I think are not needed when you realize that they have always existed for primitive data types, and a constructor is meant to provide essentially the same support for user created objects. The auto keyword is an abomination and should never be used [there is a big difference between you knowing what type something is and the compiler knowing what type something is; the compiler has caught many of my errors where I thought I was getting an object of type T, but really it was type M (usually failing to dereference a shared pointer). If M has the same members as T, auto will allow this behavior to work, undermining the type system and leading to hard to find errors, in my opinion]. The nullptr type is nice, but the fringe cases I've seen where standard NULL fails to accomplish the same behavior are bit contrived. . I think those are the main features of C++11 that people would be using; I think many of them are nice, and simplify code (except for auto, which I still facepalm on). I'm curious to hear other developers' thoughts on the matter. Edit: clean-up, clarification, and removal of repost of initial post.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/85#issuecomment-97772824:3200,error,errors,3200,https://psicode.org,https://github.com/psi4/psi4/issues/85#issuecomment-97772824,2,['error'],['errors']
Availability,"persion::compute_gradient(boost::shared_ptr<psi::Molecule>) in libdisp.a(dispersion.cc.o); psi::SuperFunctional::build(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, int) in libfunctional.a(superfactory.cc.o); ""_Py_SetProgramName"", referenced from:; psi::Python::run(__sFILE*) in python.cc.o; ""__PyEval_SliceIndex"", referenced from:; boost::python::api::(anonymous namespace)::apply_slice(_object*, _object*, _object*) in libboost_python-1_57.a(object_protocol.o); boost::python::api::(anonymous namespace)::assign_slice(_object*, _object*, _object*, _object*) in libboost_python-1_57.a(object_protocol.o); ""__PyObject_New"", referenced from:; boost::python::objects::make_nurse_and_patient(_object*, _object*) in libboost_python-1_57.a(life_support.o); ""__PyType_Lookup"", referenced from:; boost::python::class_setattro(_object*, _object*, _object*) in libboost_python-1_57.a(class.o); ""__Py_NoneStruct"", referenced from:; boost::python::detail::none() in export_psio.cc.o; boost::python::converter::shared_ptr_from_python<psi::PSIOManager>::convertible(_object*) in export_psio.cc.o; boost::python::converter::pointer_arg_from_python<char const*>::operator()() const in export_psio.cc.o; boost::python::converter::pointer_arg_from_python<char const*>::pointer_arg_from_python(_object*) in export_psio.cc.o; boost::python::converter::shared_ptr_from_python<psi::PSIO>::convertible(_object*) in export_psio.cc.o; boost::python::api::object::object() in export_psio.cc.o; boost::python::detail::none() in export_mints.cc.o; ...; ""__Py_NotImplementedStruct"", referenced from:; boost::python::objects::(anonymous namespace)::not_implemented(_object*, _object*) in libboost_python-1_57.a(function.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:77193,error,error,77193,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,4,"['Error', 'error']","['Error', 'error']"
Availability,"pgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: after discussion below, MRCC _will_ be defaulted to if available. Practically, the only confusion should arise for a-ccsd(t) where Psi4 has the method sometimes (rhf) but not others (uhf/rohf). Methods like ccsd will always default to ccenergy, and methods like ccsdt will always go to mrcc.; - [x] Like to the MRCC case above, the arbitrary-order methods mp_n_, zapt_n_, ci_n_ that were intercepted and then transferred around as a method (e.g., ""mp"") and a level (kwarg ""level=5"") were requiring extra complication to work with the distributed driver. Now all such methods and a reasonable number of levels are added explicitly to the procedures table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp2_type`, `mp_type`, `ci_type`, `cc_type` keywords were a good idea in that they allow different defaults for different levels of theory and are fairly easy to guess and uniform to use. One flaw is that you don't know programmatically what controls what method -- it's all hard-coded, sometimes",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:6569,avail,available,6569,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"pherical Harmonics?: false; Max angular momentum: 1. ==> DFT Potential <==. => LibXC <=. Version 5.2.3; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: B3LYP-D3ZERO <= . B3LYP-d3zero Hyb-GGA Exchange-Correlation Functional. P. J. Stephens, F. J. Devlin, C. F. Chabalowski, and M. J. Frisch, J. Phys. Chem. 98, 11623 (1994) (10.1021/j100096a001). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 0.0800 Slater exchange; 0.7200 Becke 88. => Exact (HF) Exchange <=. 0.2000 HF . => Correlation Functionals <=. 0.1900 Vosko, Wilk & Nusair (VWN5_RPA); 0.8100 Lee, Yang & Parr. => LibXC Density Thresholds <==. XC_HYB_GGA_XC_B3LYP: 1.00E-15 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 1908346; Total Blocks = 13882; Max Points = 256; Max Functions = 485; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (6-31G AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-4, 9-12, 21-24, 33-34 entry H line 51 file PATH\envs\psi4\lib\share\psi4\basis\cc-pvdz-jkfit.gbs ; atoms 5-8, 13-20, 25-32, 35-36 entry C line 121 file PATH\envs\psi4\lib\share\psi4\basis\cc-pvdz-jkfit.gbs ; atoms 37-38, 41-42, 45-46, 49-50, 53-54, 57-58, 61-62, 65-66, 69-70, 73-74, 77-78, 81-82, 85-86, 89-90, 93-94, 97-98 entry CL line 667 file PATH\envs\psi4\lib\share\psi4\basis\cc-pvdz-jkfit.gbs ; atoms 39-40, 43-44, 47-48, 51-52, 55-56, 59-60, 63-64, 67-68, 71-72, 75-76, 79-80, 83-84, 87-88, 91-92, 95-96, 99-100 entry NA line 498 file PATH\envs\psi4\lib\share\psi4\basis\def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 4; Integrals threads: 4; Memory [MiB]: 16093; Algorithm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2709:18875,Toler,Tolerance,18875,https://psicode.org,https://github.com/psi4/psi4/issues/2709,1,['Toler'],['Tolerance']
Availability,"phinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFOR",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3632,Error,Error,3632,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"ping that this needs a rebase to resolve a conflict. does anything special need to be added for UHF dipole derivatives?. it'd be nice to get an open-shell in the test_vib_analysis II/III/IV section, at least checking hessian and DD match for dertype=2/1/0. that can be a follow-up PR, but if you have reference Hessian and other arrays lying around from another code, let's collect them into that file. (it's a convoluted file to handle different programs' std orientations, so if you wade in, feel free to ping me for a map.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/842#issuecomment-583597940:0,ping,ping,0,https://psicode.org,https://github.com/psi4/psi4/pull/842#issuecomment-583597940,2,['ping'],['ping']
Availability,"pinging @loriab for review, not sure who else is intimately familiar with the schema harness (besides DGAS, not sure if he's reviewing lately?)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2126#issuecomment-821885823:0,ping,pinging,0,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-821885823,1,['ping'],['pinging']
Availability,pinging @yxie326 that there's things to address in case the GH notification got buried.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1865#issuecomment-618496737:0,ping,pinging,0,https://psicode.org,https://github.com/psi4/psi4/pull/1865#issuecomment-618496737,1,['ping'],['pinging']
Availability,"plain won't load the basis file. I think some extra checks get turned on during the conda build. Hence [this knowledge](http://psicode.org/psi4manual/master/manage_git.html#how-to-locate-non-ascii-characters-in-the-codebase). Agree that it'd be nice to allow non-ascii. And probably much easier now that we're py3-only. I just haven't investigated the codecs stuff. ```; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1543347940767/work/build/stage/lib//python3.6/site-packages/psi4/driver/qcdb/libmintsbasisset.py"", line 859, in construct; names[index] = parser.load_file(fullfilename); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1543347940767/work/build/stage/lib//python3.6/site-packages/psi4/driver/qcdb/libmintsbasissetparser.py"", line 78, in load_file; contents = infile.readlines(); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1543347940767/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.6/encodings/ascii.py"", line 26, in decode; return codecs.ascii_decode(input, self.errors)[0]. UnicodeDecodeError: 'ascii' codec can't decode byte 0xce in position 169: ordinal not in range(128); Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 3.43 sec; ----------------------------------------------------------; Test Failed.; ""cbs-xtpl-energy"" end time: Nov 27 14:59 EST; ""cbs-xtpl-energy"" time elapsed: 00:00:03; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1380#issuecomment-442458119:1166,error,errors,1166,https://psicode.org,https://github.com/psi4/psi4/pull/1380#issuecomment-442458119,1,['error'],['errors']
Availability,"ps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7400,Error,Error,7400,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,psi4 does not crash. I was at first under the impression it did because of all the errors that got thrown at me. If the stderr from the subprocess is hidden from the user (i guess it's stderr) it should be all good.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/656#issuecomment-288354092:83,error,errors,83,https://psicode.org,https://github.com/psi4/psi4/issues/656#issuecomment-288354092,1,['error'],['errors']
Availability,psi4 forum error: 502 Bad Gateway,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2868:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/2868,1,['error'],['error']
Availability,psi4 installation failed-Segmentation fault (core dumped),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:38,fault,fault,38,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['fault'],['fault']
Availability,"psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-linux-gnu/libpthread.so ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:97 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:45 (find_dependency); CMakeLists.txt:25 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/CMakeFiles/CMakeOutput.log"".; CMakeFiles/psi4-core.dir/build.make:108: recipe for target 'psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure' failed; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-confi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041:3358,Error,Error,3358,https://psicode.org,https://github.com/psi4/psi4/issues/1041,1,['Error'],['Error']
Availability,"psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\procrouting\proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError: ; Fatal Error: Iterations did not converge.; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112. Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 88% tests passed, 3 tests failed out of 24. Label Time ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:5382,Error,Error,5382,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Error'],['Error']
Availability,"psi::Matrix> > >, boost::python::detail::final_vector_derived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true>, boost::python::detail::container_element<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, unsigned long, boost::python::detail::final_vector_derived_policies<std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >, true> >, unsigned long>, boost::shared_ptr<psi::Matrix>, unsigned long>::base_get_slice_data(std::__1::vector<boost::shared_ptr<psi::Matrix>, std::__1::allocator<boost::shared_ptr<psi::Matrix> > >&, PySliceObject*, unsigned long&, unsigned long&) in export_mints.cc.o; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); ""_PyExc_OverflowError"", referenced from:; boost::python::handle_exception_impl(boost::function0<void>) in libboost_python-1_57.a(errors.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned long>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned int>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned short>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); boost::python::converter::(anonymous namespace)::unsigned_int_rvalue_from_python<unsigned char>::extract(_object*) in libboost_python-1_57.a(builtin_converters.o); ""_PyExc_ReferenceError"", referenced from:; boost::python::converter::(anonymous namespace)::lvalue_result_from_python(_object*, boost::python::converter::registration const&, char const*) in libboost_python-1_57.a(from_python.o); ""_PyExc_RuntimeError"", referenced from:; translate_psi_exception(psi::PsiException const&) in python.cc.o;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131149225:22814,error,errors,22814,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131149225,1,['error'],['errors']
Availability,"psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:41197,error,error,41197,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:10521,error,error,10521,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,pybind11 2.0.0 compiling error with gcc 5.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/issues/577,1,['error'],['error']
Availability,"python.so` into psi4's `core.*.so` -- this is new in the revamped pb11 add_pybind11_module that calls [Python_add_library](https://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/FindPython/Support.cmake#L3306-3313); * sets `DT_SONAME` on the `core.*.so`. This shows up as `Library soname` below in `readelf -d` of core.*.so. *This is important* b/c w/o this set, the full path to `core.*.so` gets linked into consumers like plugins, rather than just the library name. [trouble](https://stackoverflow.com/questions/27261288/cmake-linking-shared-c-object-from-externalproject-produces-binaries-with-rel); * designed for ordinary library linking like how the plugins are using symbols from psi4. The https://github.com/psi4/psi4/blob/master/psi4/psi4Config.cmake.in#L141 does the linking of core.*.so to the plugins. ### MODULE; * does *not* link `libpython.so` into psi4; * does *not* set `DT_SONAME` on psi4. that's ok for the local plugins where the full path that's baked in is the same as the RPATH+SONAME resolved through `ld`, but this breaks down during the v2rdm conda build. I've been unable to force a `DT_SONAME` entry onto a `MODULE` library; * one can perhaps get away with it (no errors; current state of `master`), but it's [advised not to link to a MODULE](https://stackoverflow.com/a/4968940). ### printouts from SHARED; ```; >>> readelf -d stage/lib/psi4/core.cpython-39-x86_64-linux-gnu.so . Dynamic section at offset 0x21a4aa0 contains 40 entries:; Tag Type Name/Value; 0x0000000000000001 (NEEDED) Shared library: [libpython3.9.so.1.0]; 0x0000000000000001 (NEEDED) Shared library: [libgg.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libxc.so.9]; 0x0000000000000001 (NEEDED) Shared library: [libint2.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libdl.so.2]; 0x0000000000000001 (NEEDED) Shared library: [libmkl_rt.so]; 0x0000000000000001 (NEEDED) Shared library: [libiomp5.so]; 0x0000000000000001 (NEEDED) Shared library: [libpthread.so.0]; 0x0000000000000001 (NEE",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188:1333,down,down,1333,https://psicode.org,https://github.com/psi4/psi4/pull/2048#issuecomment-771213188,1,['down'],['down']
Availability,"python3.8/site-packages/qcengine/util.py"", '; 'line 114, in compute_wrapper\n'; ' yield metadata\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/compute.py"", '; 'line 91, in compute\n'; ' output_data = executor.compute(input_data, '; 'config)\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/programs/cfour/runner.py"", '; 'line 71, in compute\n'; ' job_inputs = self.build_input(input_model, '; 'config)\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/qcengine/programs/cfour/runner.py"", '; 'line 137, in build_input\n'; ' cfourrec[""infiles""][""GENBAS""] = '; 'genbas.read_text()\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1236, in read_text\n'; "" with self.open(mode='r', encoding=encoding, ""; 'errors=errors) as f:\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1222, in open\n'; ' return io.open(self, mode, buffering, '; 'encoding, errors, newline,\n'; ' File '; '""/xstorage/tobias/bin/psi4/lib/python3.8/pathlib.py"", '; 'line 1078, in _opener\n'; ' return self._accessor.open(self, flags, '; 'mode)\n'; 'FileNotFoundError: [Errno 2] No such file or '; 'directory: '; ""'/xstorage/tobias/bin/cfour/basis/GENBAS'\n"",; 'error_type': 'unknown_error',; 'extras': None},; 'extras': None,; 'id': None,; 'input_data': {'driver': 'energy',; 'keywords': {'CC_CONV': 12, 'SCF_CONV': 12},; 'model': {'basis': 'aug-pvqz', 'method': 'ccsd(t)'},; 'molecule': {'atom_labels': ['', '', ''],; 'atomic_numbers': [8, 1, 1],; 'fix_com': False,; 'fix_orientation': False,; 'fragment_charges': [0.0],; 'fragment_multiplicities': [1],; 'fragments': [[0, 1, 2]],; 'geometry': [0.0,; 0.0,; -0.12403886030029525,; 0.0,; -1.431430901356359,; 0.9842933627189459,; 0.0,; 1.431430901356359,; 0.9842933627189459],; 'mass_numbers': [16, 1, 1],; 'masses': [15.99491461957,; 1.00782503223,; 1.00782503223],; 'molecular_charge': 0.0,; 'molecular_multiplicity': 1,; 'name': 'H2O',; 'p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048:1939,error,errors,1939,https://psicode.org,https://github.com/psi4/psi4/issues/2608#issuecomment-1155516048,1,['error'],['errors']
Availability,"qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsd，该符号在函数 ""int __cdecl psi::C_DGELSD(int,int,int,double *,int,double *,int,double *,double,int *,double *,int,int *)"" (?C_DGELSD@psi@@YAHHHHPEANH0H0NPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelss，该符号在函数 ""int __cdecl psi::C_DGELSS(int,int,int,double *,int,double *,int,double *,double,int *,double *,int)"" (?C_DGELSS@psi@@YAHHHHPEANH0H0NPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelsy，该符号在函数 ""int __cdecl psi::C_DGELSX(int,int,int,double *,int,double *,int,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:20067,error,error,20067,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"r devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.ma",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3194:1230,error,error,1230,https://psicode.org,https://github.com/psi4/psi4/pull/3194,1,['error'],['error']
Availability,"r message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181:2173,Error,Error,2173,https://psicode.org,https://github.com/psi4/psi4/issues/3181,2,['Error'],['Error']
Availability,"r(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; @using_gcp; def test_grimme_3c():. s16di = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; symmetry c1; """"""). > ene = psi4.energy('pbeh3c', bsse_type='nocp'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:830:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/driver/driver.py:494: in energy; return driver_nbody.nbody_gufunc(energy, name, ptype='energy', **kwargs); ../lib/pyth",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:16786,avail,available,16786,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"r(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; def test_dftd3():; """"""dftd3/energy""""""; #! Exercises the various DFT-D corrections, both through python directly and through c++. ref_d2 = [-0.00390110, -0.00165271, -0.00058118]; ref_d3zero = [-0.00285088, -0.00084340, -0.00031923]; ref_d3bj = [-0.00784595, -0.00394347, -0.00226683]. ref_pbe_d2 = [-0.00278650, -0.00118051, -0.00041513]; ref_pbe_d3zero = [-0.00175474, -0.00045421, -0.00016839]; ref_pbe_d3bj = [-0.00475937, -0.00235265, -0.00131239]. eneyne = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:7949,avail,available,7949,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"r, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:173: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: no matching function for call to ‘psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData()’; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:279: note: candidates are: psi::TableData<T>::TableData(const T&, int, int, int, char, char, char, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:189: note: psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::TableData(const psi::TableData<psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&); /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >]’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:174: instantiated from here; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: initializer expression list treated as compound expression; make[2]: **\* [src/lib/libPsiUtil/CMakeFiles/PsiUtil.dir/Implementations/Timer.cc.o] Error 1; make[1]: **\* [src/lib/libPsiUtil/CMakeFiles/PsiUtil.dir/all] Error 2; make: **\* [all] Error 2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:4720,error,error,4720,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,4,"['Error', 'error']","['Error', 'error']"
Availability,"r,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\q",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52859,error,error,52859,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"r,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYMV@psi@@YAXDHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr，该符号在函数 ""void __cdecl psi::C_DSYR(char,int,double,double *,int,double *,int)"" (?C_DSYR@psi@@YAXDHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2，该符号在函数 ""void __cdecl psi::C_DSYR2(char,int,double,double *,int,double *,int,double *,int)"" (?C_DSYR2@psi@@YAXDHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyr2k，该符号在函数 ""void __cdecl psi::C_DSYR2K(char,char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSYR2K@psi@@YAXDDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:13511,error,error,13511,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,rad1 (Failed); 	125 - dfmp2-grad2 (Failed); 	126 - dfmp2-grad3 (Failed); 	127 - dfmp2-grad4 (Failed); 	132 - dfomp2-grad1 (Failed); 	133 - dfomp2-grad2 (Failed); 	136 - dfomp3-grad1 (Failed); 	137 - dfomp3-grad2 (Failed); 	140 - dfomp2p5-grad1 (Failed); 	141 - dfomp2p5-grad2 (Failed); 	146 - dft-freq (Failed); 	147 - dft-grad (Failed); 	151 - dft1 (Failed); 	152 - dft1-alt (Failed); 	154 - dft3 (Failed); 	157 - extern1 (Failed); 	165 - fd-freq-energy-large (Failed); 	166 - fd-freq-gradient (Failed); 	167 - fd-freq-gradient-large (Failed); 	168 - fd-gradient (Failed); 	169 - freq-isotope (Failed); 	171 - fnocc2 (Failed); 	176 - gibbs (Failed); 	192 - mp2-1 (Failed); 	194 - mp2-grad1 (Failed); 	195 - mp2-grad2 (Failed); 	196 - mp2-module (Failed); 	197 - mp2_5-grad1 (Failed); 	198 - mp2_5-grad2 (Failed); 	199 - mp3-grad1 (Failed); 	200 - mp3-grad2 (Failed); 	206 - ocepa-grad1 (Failed); 	207 - ocepa-grad2 (Failed); 	216 - omp2-grad1 (Failed); 	217 - omp2-grad2 (Failed); 	220 - omp2_5-grad1 (Failed); 	221 - omp2_5-grad2 (Failed); 	227 - omp3-grad1 (Failed); 	228 - omp3-grad2 (Failed); 	229 - opt-lindep-change (Failed); 	230 - opt1 (Failed); 	232 - opt2 (Failed); 	233 - opt2-fd (Failed); 	234 - opt3 (Failed); 	235 - opt4 (Failed); 	236 - opt5 (Failed); 	237 - opt6 (Failed); 	238 - opt7 (Failed); 	239 - opt8 (Failed); 	240 - opt9 (Failed); 	241 - opt11 (Failed); 	242 - opt12 (Failed); 	243 - opt13 (Failed); 	244 - opt14 (Failed); 	245 - opt-irc-1 (Failed); 	246 - opt-irc-2 (Failed); 	247 - opt_freeze_coords (Failed); 	261 - pubchem1 (Failed); 	263 - pywrap-alias (Failed); 	264 - pywrap-all (Failed); 	268 - pywrap-checkrun-rhf (Failed); 	269 - pywrap-checkrun-rohf (Failed); 	270 - pywrap-checkrun-uhf (Failed); 	272 - pywrap-db2 (Failed); 	275 - pywrap-freq-g-sowreap (Failed); 	301 - scf6 (Failed); 	309 - tu3-h2o-opt (Failed); 	310 - tu4-h2o-freq (Failed); 	322 - cubeprop-esp (Failed); 	335 - dftd3-energy (Failed); 	336 - dftd3-grad (Failed); Errors while running CTest; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/605#issuecomment-277397753:2930,Error,Errors,2930,https://psicode.org,https://github.com/psi4/psi4/pull/605#issuecomment-277397753,1,['Error'],['Errors']
Availability,"rc/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFra",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:2212,error,error,2212,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"re errors if I continue. In file included from /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/Timer.cc:29:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:147: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, int, int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected ‘)’ before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Tabl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:939,error,error,939,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"re lots o' blockers:; * no mkl; * no c++11; * no intel compiler capability for multiarch packages; * psi4 has dependencies that aren't quite vanilla upstream; * psi4 likes to provide addons from projects that aren't released cleanly; * psi4 users have grown accustomed to `-c psi4` and `-c psi4/label/dev`; * we like packages to be least restrictive so that devs can use conda like a package manager and build with their own tooling. That said, many of those blockers have receded, and Windows psi4 is, in fact, c-f -based.; * mkl is in for several years; * c-f gcc is plenty ahead of where psi needs it; * intel is becoming more integral and _maybe_ we could still user multiarch instead of the uniform c-f flag set; * gau2grid and libxc dependencies are now good wrt upstream and are packaged on c-f for L/M/W. (for gau2grid, the c-f Linux package had to have an optimization turned off, weirdly.) (for libxc, I think the only Linux downgrade was the multiarch, but I don't remember exactly); * a lot of the psi4 addons aren't fast-moving anymore, so they can be pressed into minting a stable version. or we can patch in the recipe.; * users can adapt to -c c-f for releases and -c psi4 for nightly builds and dev helpers. Moving psi4 releases to c-f has been a low-simmering goal of mine for a while, so you'll only get technical objections from me :-). That said, there's a lot of work involved. About 24 of these recipes are active, https://github.com/psi4/psi4meta/tree/master/conda-recipes . They're not all required to get a minimal psi4 package, but most would be needed to complete the migration. But that's just work :-); The big, multidimensional technical hurdle is libint2, a required dependency.; * I adapted their buildsys for cmake, then the developer adapted that further, but then I was busy and haven't re-reconciled it with psi4. There has never been a release or even a commit on master that works with psi4.; * There is already a libint2 package on c-f, but it has only plain in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624:1026,down,downgrade,1026,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-926939624,1,['down'],['downgrade']
Availability,"re/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2420, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2325, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1543, in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule(), scf_wfn); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/empirical_dispersion.py"", line 210, in compute_energy; jobrec = qcng.compute(; File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/compute.py"", line 83, in compute; config = get_config(local_options=local_options); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/config.py"", line 308, in get_config; raise KeyError(""Number of jobs per node exceeds the number of available cores.""); KeyError: 'Number of jobs per node exceeds the number of available cores.'. ```. This job is submitted on a SLURM cluster with the following script:; ```; #!/bin/bash. #SBATCH --partition=compute-16core-64gb-preemptible; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=1; #SBATCH --output=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters.slurm.out; #SBATCH --job-name=test-C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters. source /home/jacobson/software/setup.psi4; export PSI_SCRATCH=/scratch/jacobson/; export OMP_NUM_THREADS=1; export MPI_NUM_THREADS=1; echo psi4 scratch set to $PSI_SCRATCH; fname=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters; python /home/jacobson/bin/psi4_wb97xd3_def2tzvp.py $fname"".xyz"" > $fname"".log""; ```. one cpu is available for the job. I tracked the issue to qcengine/config.py which seems not to recognize my host and then set a default of 2 for jobs_per_node. Then ncores / jobs_per_node is zero and a KeyError is rai",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548:2069,avail,available,2069,https://psicode.org,https://github.com/psi4/psi4/issues/2548,1,['avail'],['available']
Availability,"regarding v2rdm_casscf, I think everything is now compatible with this PR on the C side; the plugin compiles against @robertodr 's fcidump branch. However, I get python errors when running any input file that are unrelated to v2rdm_casscf:. Traceback (most recent call last):; File ""/Users/deprince/software/robertodr/psi4/install/bin/psi4"", line 158, in <module>; import psi4; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/__init__.py"", line 81, in <module>; from .driver import endorsed_plugins; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/__init__.py"", line 31, in <module>; from psi4.driver.molutil import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/molutil.py"", line 35, in <module>; from psi4.driver.p4util import constants, filter_comments; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/__init__.py"", line 32, in <module>; from .util import *; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/p4util/util.py"", line 39, in <module>; from psi4.driver.procrouting.proc_util import check_iwl_file_from_scf_type; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/proc_table.py"", line 35, in <module>; from . import sapt; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft; File ""/Users/deprince/software/robertodr/psi4/install/lib//psi4/driver/procrouting/sapt/sapt_proc.py"", line 32, in <module>; from psi4.driver import p4util; ImportError: cannot import name p4util",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355307312:169,error,errors,169,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355307312,1,['error'],['errors']
Availability,removed redundant code in rhf hessian test file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/894:8,redundant,redundant,8,https://psicode.org,https://github.com/psi4/psi4/pull/894,1,['redundant'],['redundant']
Availability,reporting on the forum:; http://forum.psicode.org/t/esp-cube-generation-failure/1827. related to #1871,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1932:72,failure,failure,72,https://psicode.org,https://github.com/psi4/psi4/issues/1932,1,['failure'],['failure']
Availability,"resumably they'd work if added to the original cmake command. Once built, it fails when trying to install gpu_dfcc within the tree:; ```; [ 64%] Performing build step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; [ 70%] Performing install step for 'gpu_dfcc_external'; [100%] Built target gpu_dfcc; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f37",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1270,down,downstream,1270,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,4,"['Error', 'down']","['Error', 'downstream']"
Availability,"revious to QCEngine v0.26.0 (required by this Psi4 PR), the pairwise dispersion analysis returned by executable/classic/psi4-channel `dftd3` was scaled differently from that by `s-dftd3` and `dftd4` (any channel). This has been fixed. However, one must be consistent about QCEngine/Psi4/fsapt.py versions. A consistent set are QCEngine >=0.26.0 and `Empirical_Disp.dat` file generated in the course of `energy(""fisapt0-d"")` by this PR or later Psi4 (approx. v1.7.0 Psi4) and script `fsapt.py` released with Psi4 v1.7.0 or later. This is semi-enforced since v1.7 requires v0.26 (`fsapt.py` is a free agent). Another consistent set is QCEngine <0.26.0 and Psi4 and `fsapt.py` <v1.7. Mixing old Psi4 or fsapt.py with new QCEngine and classic dftd3 can yield wrong fisapt analysis, and this isn't trapped.; - [x] `psi4.core.Molecule.run_dftd3` and `qcdb.Molecule.run_dftd3` don't work with `s-dftd3`. Please file an issue if you really want this capability. `run_gcp` will use classic `gcp` or `mctc-gcp` interchangeably, whichever you have available. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] first look at `_engine_can_do` and observe that compared to good ol' dftd3, s-dftd3 (aka simple-dftd3) _can't_ do d2 and by default does d3 variants with ATM dispersion built in (s9=1.0); - [x] in contrast, mctc-gcp is a drop-in replacement for good ol' gcp (probably b/c I stuck with cmdline and didn't write an elaborate interface on top of it :-); - [x] this goes with https://github.com/MolSSI/QCEngine/pull/385; - [x] I didn't think we could just drop the most popular psi4 addon and demand replacement, so all of dftd3/s-dftd3/gcp/mctc-gcp work with psi4. s-dftd3 and mctc-gcp are preferred if present; - [x] need docs; - [x] status (special qcng = v0.26.0 unreleased at time of writing); - [x] PR psi4 wit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2791:2981,avail,available,2981,https://psicode.org,https://github.com/psi4/psi4/pull/2791,1,['avail'],['available']
Availability,"rgy', **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 225, in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 411, in compute_nbody_components; current_mol = molecule.extract_subsets(list(pair[0]), ghost). RuntimeError: ; Fatal Error: Coordinates have been set in the wrong order; Error occurred in file: /home/vulcan/vadmin/programs/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 239 ; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::operator=(psi::Molecule const&); psi::Molecule::Molecule(psi::Molecule const&); ```. Given that the user's problem is failure for the SCF to converge, I can only assume some change since the 1.2.1 release is at fault. I've been able to get the crash with the following simplified input file:; ```; molecule dimer {; 1 1; C1 0.000000 0.513942 0.000000; N2 0.628754 1.703580 0.000000; H3 0.109407 2.571793 0.000000; H4 1.638743 1.762759 0.000000; N5 -1.342220 0.473050 0.000000; H6 -1.890262 1.323784 0.000000; H7 -1.839824 -0.407373 0.000000; N8 0.700723 -0.623756 0.000000; H9 1.712010 -0.555355 0.000000; C10 0.085273 -1.957243 0.000000; H11 0.892679 -2.697454 0.000000; H12 -0.522596 -2.104233 0.905528; H13 -0.522596 -2.104233 -0.905528; --; -1 1; I N8 3.6 H9 90.0 C1 90.0; }. basis {. assign H def2-tzvpd; assign C def2-tzvpd; assign N def2-tzvpd. assign I def2-tzvpd; }. set guess sad; set scf_type df; set maxiter 500; set soscf true; set soscf_max_iter 15; set soscf_conv 1.e-4; set freeze_core false ## false for ions. energy(""mp2"", bsse_type = ""cp""); ```; This can probably be simplified further. It would be worth investigating w",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325:1660,failure,failure,1660,https://psicode.org,https://github.com/psi4/psi4/issues/1325,1,['failure'],['failure']
Availability,"ring system: Ubuntu; cmake -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:1695,Error,Error,1695,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"ring the HF energy of the first Brueckner iteration as `SCF TOTAL ENERGY` and the quantities from the final B iteration as `CCSD TOTAL ENERGY`, `CCSD(T) TOTAL ENERGY`, and `(T) CORRECTION ENERGY`. In the below, I've reworked it so:; * final B energies get their own qcvars `(BCCD|BCCD(T)) (TOTAL|CORRELATION) ENERGY` in accordance with the principle that `energy(mtd)` should set `mtd TOTAL ENERGY`; * MP2 and CCSD qcvars are now collected from the first B iteration, not the last, so they have canonical values. `SCF TOTAL ENERGY` still from first B iteration.; * `(BCCD|BCCD(T)) CORRELATION ENERGY` now defined as total E of last B iteration minus HF of first B iteration. This is in accordance with the pattern that `mtd CORRELATION ENERGY` = `mtd TOTAL ENERGY` - `SCF TOTAL ENERGY`, but it is admittedly wacky when applied to Brueckner. It is, however, the same way the orbital-optimized methods of occ/dfocc have been handled. The OO methods additionally set a `mtd REFERENCE CORRECTION ENERGY` so that one can recover the ref/corl split of the final OO iteration. That could be added to the BCCD methods. Does the above sound ok, or does it need further reworking? I also tightened up the B r_conv formula a bit because the standard tests (not shown in PR) weren't matching (to 1.e-6) the highly converged values under default conditions (e_conv = 6 --> brueckner_r_conv =4). I've also been on a rampage of late to better (and automatically) document what methods are available under what detailed conditions (e.g., dertype, reference, conv/df/cd type, all-electron/frozen-core). I'd like to add the table snapshotted below to the main [CC docs page](https://psicode.org/psi4manual/master/cc.html). Unfortunately, it doesn't cover excited states or properties, so it can't replace the existing summary table, but it does provide more detail. Does it look ok, and are there any cc* capabilities in the ground-state realm that I've missed?. **Note:** No worries if the CI on this fails. I've copi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708:1135,recover,recover,1135,https://psicode.org,https://github.com/psi4/psi4/pull/2708,1,['recover'],['recover']
Availability,"ripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\ground_state_solvers\ground_state_eigensolver.py in solve(self, problem, aux_operators); 80 # note that ``aux_ops`` contains not only the transformed ``aux_operators`` passed by the; 81 # user but",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:1173,error,error,1173,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['error'],['error']
Availability,"river/driver.py"", line 548, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/proc.py"", line 685, in select_lccd; return func(name, **kwargs); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/proc.py"", line 2095, in run_dfocc; dfocc_wfn = core.dfocc(ref_wfn); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 375, in extrapolate; coeffs = self.diis_coefficients(); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 254, in diis_coefficients; B[i, j] = self.get_dot_product(i, j); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 198, in get_dot_product; dot_product += Rix.vector_dot(Rjx). RuntimeError: ; Fatal Error: Matrix::vector_dot: Dimensions do not match!. Error occurred in file: /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on line: 1703; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::vector_dot(psi::Matrix const*). Printing out the relevant lines from the Psithon --> Python processed input file:; energy('scf',write_orbitals='scf_mos'); Avals=[0.00, 0.05, 0.10, 0.12, 0.15, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00]; for A in Avals:; psi4.core.print_out(""running step %5.2f"" % A); core.set_global_option(""REMP_A"", A); --> energy('oremp',restart_file='scf_mos'); core.set_global_option(""MO_READ"", ""true""); psi4.core.print_out(""""). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::vector_dot: Dimensions do not match! !; ! Error occurred in file: !; ! /home/tu/tu_tu/tu_ctibc01/prog/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591:2043,Error,Error,2043,https://psicode.org,https://github.com/psi4/psi4/issues/2591,1,['Error'],['Error']
Availability,"river/qcdb/molecule.py; @@ -1470,11 +1470,11 @@ class Molecule(LibmintsMolecule):; # * this can legitimately happen if total chg or mult has been set; # independently b/c fragment chg/mult not reset. so try again.; print(; - """"""Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred.""""""; + """"""Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.""""""; ); molrec['fragment_charges'] = [None] * len(fragments); molrec['fragment_multiplicities'] = [None] * len(fragments); - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, nonphysical=True, verbose=0, domain='qm', **molrec); forgive.append('fragment_charges'); forgive.append('fragment_multiplicities'); compare_molrecs(validated_molrec, molrec, 'to_dict', atol=1.e-6, forgive=forgive, verbose=0). ```. Uncomment:; https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/from_schema.py#L85; For numerical hessians (FINDIF) one needs to set `nonphysical=True,` above as a work around or figure out the following error:. ```; File ""/Users/kruse/qc/psi4.bin/lib/psi4/driver/driver_findif.py"", line 417, in assemble_gradient_from_energies; mol = core.Molecule.from_schema(findifrec[""molecule""], verbose=0); File ""/Users/kruse/qc/psi4.bin/lib/psi4/driver/molutil.py"", line 200, in molecule_from_schema; molrec = qcel.molparse.from_schema(molschema, verbose=verbose); File ""/Users/kruse/qc/miniconda3/envs/p4dev/lib/python3.7/site-packages/qcelemental/molparse/from_schema.py"", line 85, in from_schema; nonphysical=nonphysical,. NameError: name 'nonphysical' is not defined; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1903:1952,error,error,1952,https://psicode.org,https://github.com/psi4/psi4/issues/1903,1,['error'],['error']
Availability,"rix::vector_dot: Dimensions do not match!. Error occurred in file: /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on line: 1703; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::vector_dot(psi::Matrix const*). Printing out the relevant lines from the Psithon --> Python processed input file:; energy('scf',write_orbitals='scf_mos'); Avals=[0.00, 0.05, 0.10, 0.12, 0.15, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00]; for A in Avals:; psi4.core.print_out(""running step %5.2f"" % A); core.set_global_option(""REMP_A"", A); --> energy('oremp',restart_file='scf_mos'); core.set_global_option(""MO_READ"", ""true""); psi4.core.print_out(""""). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::vector_dot: Dimensions do not match! !; ! Error occurred in file: !; ! /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on !; ! line: 1703 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::vector_dot(psi::Matrix const*) !; ! !; !----------------------------------------------------------------------------------!; ```; (the example uses a custom method but the problem should be reproducible with DF-OMP2).; The molecule in question has 86 occupied and 773 virtual correlated orbitals, giving rise to (depending on the storage scheme) ~2.2E9 amplitudes. The root cause of the issue seems to be missing type casts to size_t in libmints/matrix.cc. Inserting debug printout shows that the size calculation of the second vector in vector_dot (line 1699) and axpy(line 1443) overflows, while the size calculations of the first vector have ""e",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591:2972,Error,Error,2972,https://psicode.org,https://github.com/psi4/psi4/issues/2591,2,['Error'],['Error']
Availability,"rk/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib libz.dylib core.so; $ install_name_tool -change /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib libz.dylib core.so; $ otool -L core.so; core.so:; 	@rpath/core.so (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libpcm.1.dylib (compatibility version 1.0.0, current version 0.0.0); 	@rpath/libxc.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	@rpath/libgdma.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libderiv.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libint.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libdkh.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/liberd.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libsimint.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libefp.dylib (compatibility version 0.0.0, current version 0.0.0); 	libz.dylib (compatibility version 1.0.0, current version 1.0.0); 	libz.dylib (compatibility version 1.0.0, current version 1.0.0); 	@rpath/libchemps2.2.dylib (compatibility version 2.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0); ```. Now, this will lead to a ton of undefined symbols. But I don't really care, since I don't want to actually call any functions from `core.so` anyways. So I change the `sys.setdlopenflags` to RTLD_LAZY. i.e. ```; import sys; flags = sys.getdlopenflags(); sys.setdlopenflags(0x1) # RTLD_LAZY; import core; sys.setdlopenflags(flags). import numpy as np. random = np.random.RandomState(0); N = 46; A = random.randn(N, N). U, s, VT = np.linalg.svd(A, full_matrices=True); A_reconstructed = U.dot(np.diag(s)).dot(VT); print(np.linalg.norm(A-A_reconstructed)); ```. And I still get the error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311749244:3837,error,error,3837,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311749244,1,['error'],['error']
Availability,"rnal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInpu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3160:1851,error,error,1851,https://psicode.org,https://github.com/psi4/psi4/pull/3160,1,['error'],['error']
Availability,"roblem which will only get worse as new separate J and K algorithms like CFMM are added. Additionally, the scattering of separate J and K build algorithms throughout the JK class in Psi4 in an non-standardized fashion is unfortunate from a code design perspective. The goal of the CompositeJK project is, ultimately, to create a new JK class (_CompositeJK_) that offers a proper framework for combining separate J and K algorithms for use in JK construction. Such a class will provide a home for any new separate J and K algorithm that gets added to Psi4 in the future (such as the in-progress CFMM). Additionally, the CompositeJK class will be designed in such as a way to enable arbitrary combinations of any available separate J and K build algorithm through a single JK subclass. This arbitrary mixing and matching is planned to be accesible in a user-friendly way. DFJLinK is the first step to this process. DFJLinK, itself, is a new JK subclass that combines the integral-direct density fitted J build algorithm from DFJCOSK with the LinK algorithm previously available in DirectJK. LinK was previously available for use in Psi4 via DirectJK, but was always disrecommended due to its combination with a normal DirectJK implementation for J construction. In conjunction with Direct DF-J to form the Coulomb matrix, LinK performs much better. Some benchmarks comparing the Direct DF-J + LinK algorithm combination to other JK options in Psi4, for water clusters of varying sizes at the cc-pVDZ basis set, are attached:. ![Timing Plots of Water Clusters at cc-pVDZ](https://user-images.githubusercontent.com/26306559/198107808-42f3b855-13f0-4e14-8a50-c0402c16b94f.png). Small, non-diffuse basis sets are the specialty of Direct DF-J + LinK, and it reflects here, with DFJLinK outperforming the other integral-direct JK options for most of the water clusters, and being the fastest JK option tested overall for large water clusters. For specific comparisons to Direct DF-J + COSX, the closest curre",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:1959,avail,available,1959,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['avail'],['available']
Availability,"rocedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File [REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/proc.py"", line 2455, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/proc.py"", line 1670, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 412, in scf_iterate; for engine_used in self.diis(Dnorm):; File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/scf_proc/subclass_methods.py"", line 111, in _RHF_diis; return self.diis_manager_.extrapolate(self.Fa(), Dnorm=Dnorm); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/diis.py"", line 407, in extrapolate; coeffs = m * initial_coefficient_function() + (1 - m) * self.diis_coefficients(); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/diis.py"", line 288, in adiis_coefficients; raise Exception(""ADIIS minimization failed. File a bug, and include your entire input and output files.""). Exception: ADIIS minimization failed. File a bug, and include your entire input and output files. Printing out the relevant lines from the Psithon --> Python processed input file:; no_com; symmetry c1; """""",""mol""); core.IO.set_default_namespace(""mol""); mol.update_geometry(); --> e, wf = energy('wb97m-v',return_wfn=True,). !----------------------------------------------------------------------------------!; ! !; ! ADIIS minimization failed. File a bug, and include your entire input and output !; ! files. !; ! !; !----------------------------------------------------------------------------------!. Psi4 stopped on: Friday, 22 July 2022 01:19PM; Psi4 wall time for execution: 0:02:55.44. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:13479,error,error,13479,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['error'],['error']
Availability,rollback detect dynamic Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/425:0,rollback,rollback,0,https://psicode.org,https://github.com/psi4/psi4/pull/425,1,['rollback'],['rollback']
Availability,"rop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3954,Error,Error,3954,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"ror at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3; -- Fortran compiler flags: -fcray-pointer -DVAR_GFORTRAN -DVAR_MFDS -fno-range-check -fautomatic -fPIC -fimplicit-none -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -funroll-all-loops -w -ftree-vectorize; -- Libraries : /cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so;/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so; -- Definitions : USE_FCMANGLE_H;SYS_L",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7812,Error,Error,7812,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"ror at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi4-1.0]$; ```; At the end of the output of the setup script, the user is pointed to CMake log files:. ```; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log"".; See also ""/scratch/appssf/psi4-1.0/objdir/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:1207,Error,Error,1207,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"ror logs and output are attached (check bottom of the post). Any suggestions ? . ```; ./setup --prefix=""/home/vayu/ChemPackage/psi4/opt_ins"" --cc=icc --cxx=icpc --fc=ifort --mkl=parallel build; Configuring system: Ubuntu; cmake -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:1579,Error,Error,1579,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3177:2045,redundant,redundant,2045,https://psicode.org,https://github.com/psi4/psi4/pull/3177,2,"['error', 'redundant']","['errors', 'redundant']"
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; 	Nuclear repulsion energy..........................................PASSED; ========================================================",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:42400,Error,Error,42400,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; Case Study Test of all SCF algorithms/spin-degeneracies: Singlet-Triplet O2; -Integral package: ERD; -Nuclear Repulsion:; 	Triplet ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:7918,Error,Error,7918,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; Case Study Test of all SCF algorithms/spin-degeneracies: Singlet-Triplet O2; -Integral package: SIMINT; -Nuclear Repulsion:; 	Tripl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:13427,Error,Error,13427,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; Performing finite difference calculations; 5 displacements needed ... 1; __________________________________________________________",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:30928,Error,Error,30928,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; ________________________________________________________________ test_psi4_basic _________________________________________________________________. def test_psi4_basic():; """"""tu1-h2o-energy""""""; #! Sample HF/cc-pVDZ H2O computation; ; h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:20728,Error,Error,20728,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; _________________________________________________________________ test_psi4_cas __________________________________________________________________. def test_psi4_cas():; """"""casscf-sp""""""; #! CASSCF/6-31G** energy point; ; geom = psi4.geometry(""""""; O; H 1 1.00; H 1 1.00 2 103.1; """,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:23859,Error,Error,23859,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; __________________________________________________________________ test_psi4_cc __________________________________________________________________. def test_psi4_cc():; """"""cc1""""""; #! RHF-CCSD 6-31G** all-electron optimization of the H2O molecule; ; h2o = psi4.geometry(""""""; O; H ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:27287,Error,Error,27287,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rror LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42729,error,error,42729,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"rror LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:51165,error,error,51165,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,run error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/issues/266,1,['error'],['error']
Availability,"ry Basis <==. Basis Set: DEF2-TZVPPD; Blend: DEF2-TZVPPD; Number of shells: 240; Number of basis functions: 648; Number of Cartesian functions: 732; Spherical Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 5.1.6; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-V <= . wB97M-V Hyb-GGA Exchange-Correlation Functional. N. Mardirossian and M. Head-Gordon, J. Chem. Phys. 144, 214110 (2016) (10.1063/1.4952647). Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => VV10 Non-Local Parameters <=. VV10 B = 6.0225E-02; VV10 C = 7.4505E-01. => Molecular Quadrature <=. Radial Scheme = EM; Pruning Scheme = ROBUST; Pruning Type = REGION; Nuclear Scheme = SBECKE. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 99; Spherical Points = 590; Total Points = 912458; Total Blocks = 6145; Max Points = 256; Max Functions = 640; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 13-18 entry C line 198 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-12, 19-24 entry H line 18 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 14; Integrals threads: 14; Memory [MiB]: 337; Algorithm: Disk; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVPPD AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 372; Number of basis functions: 1116; Number of Car",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:9433,ROBUST,ROBUST,9433,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['ROBUST'],['ROBUST']
Availability,"s I haven't met it before. Thanks!. ```; > (gha_eco_rb5) PYTHONPATH=stage/lib/ pytest stage/lib/psi4/tests/ -k ""basic or tu1""; ============================================================================================================ test session starts ============================================================================================================; platform linux -- Python 3.10.0, pytest-7.1.0, pluggy-0.13.1; rootdir: /psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4, configfile: pytest.ini; plugins: forked-1.3.0, xdist-2.3.0; collected 3507 items / 3504 deselected / 3 selected . stage/lib/psi4/tests/test_psi4.py F [ 33%]; stage/lib/psi4/tests/test_psi4_qcschema.py . [ 66%]; stage/lib/psi4/tests/tu1-h2o-energy/test_input.py F [100%]. ================================================================================================================= FAILURES ==================================================================================================================; ______________________________________________________________________________________________________________ test_psi4_basic ______________________________________________________________________________________________________________. @pytest.mark.smoke; def test_psi4_basic():; """"""tu1-h2o-energy""""""; #! Sample HF/cc-pVDZ H2O computation; ; h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""); ; psi4.set_options({'basis': ""cc-pVDZ""}); psi4.energy('scf'); ; > assert psi4.compare_values(-176.0266327341067125, psi4.variable('SCF TOTAL ENERGY'), 6, 'SCF energy'). stage/lib/psi4/tests/test_psi4.py:23: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; stage/lib/psi4/driver/qcdb/testing.py:104: in _mergedapis_compare_values; return qcel.testing.compare_values(expected, computed, **kwargs); /psi",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:1497,FAILURE,FAILURES,1497,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,1,['FAILURE'],['FAILURES']
Availability,"s a cutoff for small weights. The grid points with small weights are not included in the final grid. Such a cutoff is a standard procedure in many programs. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] expert option `DFT_WEIGHTS_TOLERANCE` keyword (current default `1e-14`).; - [x] small error overview added; - [x] together with pruning ca. 40% faster calculation for C60 compared to `v1.3` :-); - [x] simple test added. ## Questions; - [x] which default value? -> `1e-15` conservative or `1e-14` like in ORCA. ## Checklist; - [x] all `ctest -L dft` pass. ## Status; - [x] Ready for review; - [x] Ready for merge. ------; water dimer (RKS total energy): `PBE/aug-cc-pVTZ (99,520)` econv=1e-10 dconv=1e-8. | tolerance | error | #points |; | --- | --- | ---|; | off | 0.0 | 350460 | ; | 1e-30 | 1.36e-12 | 349417 |; | 1e-25 | 1.65e-12 | 348670 |; | 1e-20 | 1.65e-12 | 346918 |; | 1e-18 | 1.68e-12 | 345747 |; | 1e-16 | 1.63e-11 | 340646 |; | 1e-15 | 2.74e-11 | 339647|; | 1e-14 | 5.73e-09 | 335089 |; | 1e-13 | 3.65e-08 | 331285 |; | 1e-12 | 3.18e-07 | 326462 |. c2 sym. C60 isomer (RKS total energy): `PBE/aug-cc-pVDZ (75,302)` econv=1e-10 dconv=1e-8. | tolerance | error | #points |; | --- | --- | ---|; | off | 0.0 | 1359000 | ; | 1e-30 -| 3.17e-10| 1229846|; | 1e-25 | -5.34e-10| 1209622|; | 1e-20 | 5.94e-10 |1183674|; | 1e-18 | 5.41e-10 |1171102|; | 1e-16 | -6.25e-10 |1156776|; | 1e-15 | 2.48e-09| 1131228|; | 1e-14 | 3.54e-09| 1123018|; | 1e-13 | 1.25e-07 |1110668 |; | 1e-12 |1.07e-06 |1085824 |. -----. *further timings*; C60 fullerene (C2h) :PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; comparison to `v1.3.1`; * pruning `ROBUST`=1.33 // `1361880/1953000` grid points // dE=2E-11; * pruning `TREUTLER=1.36`// `1064520/1953000` grid points // dE=-4E-05; * pruning `ROBUST` + `screening(1e-14)` = 1.39; `1070388/1953000` grid points //dE=-2E-09; * pruning `TREUTLER` + `screening(1e-14)` = 1.44; `773028/1953000` grid points //dE=-4E-05",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581:1329,toler,tolerance,1329,https://psicode.org,https://github.com/psi4/psi4/pull/1581,4,"['ROBUST', 'error', 'toler']","['ROBUST', 'error', 'tolerance']"
Availability,"s corresponds to L2 at https://github.com/evaleev/libint/pull/233 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switches psi4 to use a Libint2 forked from upstream in 2022, not in 2019; - [x] changes a couple cmake knobs and changes the required components to EFV's preferred syntax (`g5` -> `eri_c4_d1_l5`); - [x] avoided grid points discrepancies that I had hit by implementing Holger's suggestion.; - [x] I and others have reported needing `pybind11::headers` in extra places, so adding those; - [x] The defines `INT_NCART` and `INT_CARTINDEX` in psi https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/integral.h#L46-L64 are also in L2. They used to be `#define` in the current/2019 fork of L2, but now in L2 master, it’s an inline function. To avoid errors like the below, they're namespaced and inlined here now, too. ```; < namespace libint2 {; < inline int INT_NCART(int am) { return ((am + 2) * (am + 1)) >> 1; }; < }; < LIBINT_DEPRECATED(""please use libint2::INT_NCART instead""); < inline int INT_NCART(int am) { return libint2::INT_NCART(am); }; ---; > #define INT_NCART(am) ((((am)+2)*((am)+1))>>1); ```; With that situation (define in psi and inlined in L2), I get lots of; ```; In file included from /psi/gits/hrw-pybind/psi4/src/psi4/libmints/integral.cc:28:; /psi/gits/libint2-efv/install-p01/include/libint2/cgshell_ordering.h:104:12: error: expected unqualified-id before 'int'; 104 | inline int INT_CARTINDEX(unsigned int am, int i, int j) {; | ^~~~~~~~~~~~~; ```; I can fix the problem by renaming in psi to `INT_NCART_PSI` and `INT_CARTINDEX_PSI`. What's a cleaner solution than renaming? Should we inline? Or add to the `psi {}` namespace?. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2413:1510,error,error,1510,https://psicode.org,https://github.com/psi4/psi4/pull/2413,1,['error'],['error']
Availability,"s function: 32; Number of Cartesian functions: 34; Spherical Harmonics?: true; Max angular momentum: 2. => Loading Basis Set <=. Name: (AUG-CC-PVDZ AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1 entry LI line 59 file /home/filip/software/psi4-1.4rc/share/psi4/basis/def2-qzvpp-jkfit.gbs ; atoms 2 entry H line 70 file /home/filip/software/psi4-1.4rc/share/psi4/basis/aug-cc-pvdz-jkfit.gbs . Computing basis projection from 3-21G to AUG-CC-PVDZ. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 32 32 0 0 0 0; -------------------------------------------------------; Total 32 32 1 0 0 1; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 0.001 GiB; user supplied 0.715 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Memory [MiB]: 732; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (AUG-CC-PVDZ AUX); Blend: AUG-CC-PVDZ-JKFIT + DEF2-QZVPP-JKFIT; Number of shells: 29; Number of basis function: 83; Number of Cartesian functions: 95; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 3.7125823143E-03.; Using Symmetric Orthogonalization. SCF Guess: Orbitals guess was supplied from a previous computation. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -0.49904529387990 -4.99045e-01 5.81466e-04 ; @DF-UHF iter 1: -0.49933835527994 -2.93061e-04 9.46849e-05 DIIS; @DF-UHF iter 2: -0.49935062691594 -1.22716e-05 2.23284e-05 DIIS; @DF-UHF iter 3: -0.49935159814175 -9.71226e-07 4.41164e-06 DIIS; @DF-UHF iter 4: -0.49935164375895 -4.56172e-08 5.33254e-07 DIIS; @DF-UHF iter 5: -0.49935164423349 -4.74539e-10 5.00344e-08 DIIS; @DF-UHF iter 6: -0.49935164423748 -3.99308e-12 6",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830:8120,Mask,Mask,8120,https://psicode.org,https://github.com/psi4/psi4/issues/1830,1,['Mask'],['Mask']
Availability,"s have stuff in src and built forms; ```; > cat ../psi4/metadata.py ; __version__ = '1.7'; __version_long = '1.7+6ce35a5'; __version_upcoming_annotated_v_tag = '1.8a1'. def version_formatter(dummy):; return '(inplace)'; > cat stage/lib/psi4/metadata.py ; __version__ = '1.7'; __version_branch_name = ''; __version_cmake = '1.7.0.0'; __version_is_clean = 'True'; __version_last_release = '1.7'; __version_long = '1.7+6ce35a5'; __version_prerelease = 'False'; __version_release = 'True'. def version_formatter(formatstring='{version}'):; if formatstring == 'all':; formatstring = '{version} {{{branch}}} {githash} {cmake} {clean} {release} {lastrel} <-- {versionlong}'. release = 'release' if (__version_release == 'True') else ('prerelease' if (__version_prerelease == 'True') else ''). ans = formatstring.format(version=__version__,; versionlong=__version_long,; githash=__version_long[len(__version__)+1:],; clean='' if __version_is_clean == 'True' else 'dirty',; branch=__version_branch_name,; lastrel=__version_last_release,; cmake=__version_cmake,; release=release); return ans. if __name__ == '__main__':; print(version_formatter(formatstring='all')); ```. So I think tarballs are roughly still working. But I can totally believe that either I'm working in an edge case or the two of you have found one. My closest suspects:; * perhaps you're in a repo that isn't the psi repo. I bet that'd defeat https://github.com/psi4/psi4/blob/master/psi4/versioner.py#L50 that switches the version logic from git to tarball; * that version logic is tested for release tarballs only, not tarballs of random commits; * the increasing dependency on qcengine (which arose long after the versioning system design) for finite difference and dispersion depends a lot on computing the psi4 (and other) versions. Hence the ""pull tags"" message. I can believe there's a way that communication breaks down. I'd suggest you compare commands and cat-ed files and see where the discrepancy in workflow/environment arises.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826:4448,down,down,4448,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358169826,1,['down'],['down']
Availability,"s of C; (n = 1): 275 ; (n = 1): 275 ; Asym: 0, Bsym: 0, Csym: 0; Mismatch in index Ha = 0; ```. Additionally, the following error message is given:; ```; Traceback (most recent call last):; File ""/oasis/tscc/scratch/ebullvul/projects/POPC/timings/debug/psi4test/psi4_ccsdt.py"", line 28, in <module>; e = psi4.energy(model, molecule=mol); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/driver.py"", line 526, in energy wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 989, in select_ccsd_t_ return func(name, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 2898, in run_ccenergy core.cctransort(ref_wfn); RuntimeError: ; Fatal Error: Matrix::gemm error: Number of rows and columns do not match.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1670993662927/work/psi4/src/psi4/libmints/matrix.cc on line: 1389The most recent 5 function calls were:. psi::Matrix::gemm(bool, bool, double, psi::Matrix const*, psi::Matrix const*, double); psi::Matrix::transform(psi::Matrix const&, psi::Matrix const&, psi::Matrix const&); ```. I am not technically knowledgeable enough to interpret the information about the 'A', 'B', and 'C' matrices in the log file, but it seems like the problem is that their dimensions do not match. Additionally, I can also report that the calculation works if ANY of the following changes are made to the input:; 1) The ghost atoms are removed.; 2) The non-augmented basis set is used. (cc-pvtz rather than aug-cc-pvtz); 3) If {'cc_type': 'df'} is passed to psi4.set_options() to do density-fitted coupled cluster. I installed the stable branch of psi4 through anaconda, I have version ""1.7+6ce35a5"". Let me know if there is any more information you need to help solve this issue. The full log file from the CC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916:2698,Error,Error,2698,https://psicode.org,https://github.com/psi4/psi4/issues/2916,1,['Error'],['Error']
Availability,"s out-of-date with psi4 master's requirements. I, for one, don't often use `psi4-dev` b/c I want more flexibility with switching out packages. **So, I'd be glad to hear thoughts on what form and contents the build helpers should take. A few plans and questions below, but any feedback appreciated.**. 1. Do you want docker images of the stuff that was in `psi4-dev`? I think from PsiCon2022 the answer is yes.; 2. Do you want minimal (build tools & req'd deps) or maximal (+ optional addons) or micro (no build tools, just L2, g2g, libxc, qcng, scipy, pytest) or several of those choices Docker images? (I have one vote for minimal.); 3. Docker images are hefty (~600MB for the built psi4). Can I just push them to a `latest` tag and overwrite old ones, or does there need to be a history?; 4. For Docker of psi4 itself, I'm only doing linux-64 (https://hub.docker.com/r/psi4/psi4/tags). Since docker is usually run VM-like, is that all developers want, or should I be building containers for other arch? Certainly I have the other-arch conda pkgs available -- it's just a matter of figuring out docker from them.; 5. I can build singularity/apptainer images from the Docker images, but I haven't figured out how to upload them yet. _For devs_, are apptainers wanted, or will docker alone do?; 6. I'll probably revive the `psi4-dev` pkg, just because it is simple and durable. (And it's the easiest way to convey the Intel-atop-GNU flags.) It'll be a `conda install psi4/label/dev::psi4-dev -c conda-forge` access. Thoughts on improving it?; 7. Those `devtools/*/*buildrun*yaml` env specs are semi-auto-generated from the ecosystem GHA. Are they handy enough to maintain and promote, even though they don't come with `cmake` lines?; 8. Any other build tools to support other workflows wanted? It's easier to set them up all at once. ### Psi4 Conda Packages at Present with Channels. Built psi4 packages are slightly off-topic, but I thought this could be a handy reference for the more exotic ones. N",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:4220,avail,available,4220,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['avail'],['available']
Availability,"s to symmetry-adapted pure angular momentum functions. If `d` or higher angular momentum functions are present, then choosing to transform from Cartesian functions means you have more atomic orbitals than basis functions, so the row and column dimensions don't match. The transformation isn't even square, let alone invertible, so of course `sotoao()` returns nonsense. The following input file almost demonstrates the problem. You'll need to PyBind the `PetiteList` initializer over as well for it to run. ```; molecule mol {; 0 3; symmetry c1; C 0.0000000000 0.0000000000 -0.5928430915; H -0.0000000000 0.9469373770 -1.1509808737; H 0.0000000000 -0.9469373770 -1.1509808737; }. basis = core.BasisSet.build(mol, ""ORBITAL"", ""cc-pvdz"", quiet=True); factory = core.IntegralFactory(basis). # np.dot(so2ao, ao2so) should always be the identity. The functions are inverses. # We have a problem!; petite = core.PetiteList(basis, factory, True); so2ao = petite.sotoao().nph[0]; print(so2ao); print(so2ao.shape) # (24, 25) ; ao2so = petite.aotoso().nph[0]; print(np.dot(so2ao, ao2so)). # Works fine!; petite = core.PetiteList(basis, factory, False); so2ao = petite.sotoao().nph[0]; print(so2ao); print(so2ao.shape) # (24, 24) ; ao2so = petite.aotoso().nph[0]; print(np.dot(so2ao, ao2so)); ```. The next question is what we do about this. I see two solutions:; 1. Put a flag in sotoao that throws if `include_pure_transform_` is true. I've run this change through full tests and didn't get any errors. However, somebody can assume `sotoao()` is the transpose of `aotoso()` and get rubbish.; 2. Remove the functionality of the `include_pure_transform` flag entirely. The transformations are always invertible, but we lose whatever efficiency gain motivated including the flag in the first place. I don't know which is the best solution, or if there's a third. Pinging @andysim, @susilehtola, @jturney, and @fevangelista, all of whom have either touched this code or expressed interest in this issue previously.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1763:2400,error,errors,2400,https://psicode.org,https://github.com/psi4/psi4/issues/1763,2,"['Ping', 'error']","['Pinging', 'errors']"
Availability,"s will give better predictions of; molecular properties. C2H4 is not a classic ""symmetry breaking molecule"" to my knowledge, so I'm; surprised that there is a symmetry-breaking solution to the SCF equations. On Tue, Dec 5, 2017 at 3:11 PM, Daniel Smith <notifications@github.com>; wrote:. > I believe we have had this problem in the past. Take a symmetric molecule; > who's optimal wavefunction should contain less symmetry:; >; > import numpy as np; >; > mol = psi4.geometry("""""" 0 1C 0.0 0.0 0.673055C 0.0 0.0 -0.673055H 0.0 0.934981 1.246807H 0.0 -0.934981 1.246807H 0.934981 0.0 -1.246807H -0.934981 0.0 -1.246807symmetry c1""""""); > # Set reference and guess.; > psi4.set_options({; > ""reference"": ""rhf"",; > ""guess"": ""sad"",; > ""basis"": ""DZP"",; > ""soscf"": ""true"",# ""sad_frac_occ"": ""true""; > }); >; > energy = energy('scf')if np.allclose(energy, -77.87781349420317):; > print(""Found non-symmetric minima! Success!"")elif np.allclose(energy, -77.84789770426966):; > print(""Found symmetric minima... failure."")else:; > print(""You found something... wrong.""); >; > The -77.847 result should be found when the molecule is constrained to; > symmetry. However, without that constraint there is a lower SCF result to; > be found. The kicker is even without the symmetry restraint (computation in; > c1) we fairly consistently end up with a symmetric wavefunction. Any; > ideas on how to avoid this?; >; > Note 1: The stability analysis is showing that it is indeed finding the; > wrong answer and there are negative eigenvalues present. We should be able; > to follow these once the py-scf iterations are finished.; >; > Note 2: This is not deterministic for which result we land in (whoo!).; >; > Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find; > the correct energy. Really any noise lets the diagonalizer break out of its; > self-imposed symmetry constraints.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349464469:1784,failure,failure,1784,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349464469,1,['failure'],['failure']
Availability,"s, and ran the `dft-bench-ionisation` test (wB97X-D, revTPSS, PW6B95, TPSS, PWB6K only):.   | N=1 | N=4 | N=1 | N=4; -- | -- | -- | -- | --; Psi4/1.2-rc2-acml-5.3.1 | FAIL |   |   |  ; Psi4/1.2-rc2-lapack-3.8.0 | 395.944 | 299.438 | 1.00 | 1.32; Psi4/1.2-rc2 (1.2rc2.dev35) | 268.523 | 223.574 | 1.47 | 1.77; Psi4/1.2-rc2-blis-0.3.2 | 356.723 | 262.964 | 1.11 | 1.51; Psi4/1.2-rc2-openblas-0.2.20 | FAIL |   |   |  ; Psi4/1.2-rc2-openblas-0.3.0 | FAIL |   |   |  . All compiled with gcc-7.1.0, cmake-3.8.2, dftd3-3.2-r0:. `cmake -H. -BBUILDS/$1 -DCMAKE_INSTALL_PREFIX=/opt/packages/psi4/$1 -DLAPACK_INCLUDE_DIRS=/path/to/lapack -DMAX_AM_ERI=5` . ACML-5.3.1 is a binary. . Netlib's BLAS and lapack (3.8.0) compiled with `-O3 -march=barcelona -fPIC` and `-O3 -frecursive -march=barcelona -fPIC` respectively, including deprecated functions. I had to add `-DENABLE_dkh=ON` to the psi4 build options, otherwise the fortran compiler wouldn't get picked up. The 1.2rc2.dev35 is a binary that was available in conda, compiled against `mkl 2018.0.2, intel-openmp 2018.0.0`. Flame's blis-0.3.2 was compiled into netlib's lapack-3.8.0, with `./configure auto`; lapack compiled as above. OpenBLAS-0.2.20 was compiled with `USE_THREAD=0 USE_OPENMP=0 TARGET=BARCELONA`. OpenBLAS-0.3.0 was compiled with both: ; `make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32` and ; `make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32 CFLAGS=""-fPIC -fopenmp -fstack-protector-strong"" FFLAGS=""-fPIC -fopenmp -fstack-protector-strong""` and; `make CC=gcc FC=gfortran DYNAMIC_ARCH=1 BINARY=64 NO_LAPACK=0 NO_AFFINITY=1 USE_THREAD=0 USE_OPENMP=0 NUM_THREADS=32 CFLAGS=""-fopenmp -march=barcelona -ftree-vectorize -fPIC -fstack-protector-strong -O2 -pipe"" FFLAGS=""-fopenmp -march=barcelona -ftree-vectorize -fPIC -fstack-protector-strong -O2 -pipe""` ; linked using the `.so` and `.a`; it doesn't pass at all even with `psi4 -n 1`. The node I used is a 2 x Quad-Core AMD Opteron(tm) Process",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-394986909:1160,avail,available,1160,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-394986909,1,['avail'],['available']
Availability,"s=0x55555e408d20, psi_fp=..., qc_fp=0x0, geom=0x55555d874e30, ; off=0) at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/bend.cc:269; #4 0x00002aaaadd6cff2 in opt::FRAG::print_simples (this=0x55556b8407e0, psi_fp=..., qc_fp=0x0, atom_offset=0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/frag_print.cc:123; #5 0x00002aaaadd8db62 in opt::MOLECULE::print_coords (this=0x55555e405dd0, psi_fp=..., qc_fp=0x0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/molecule_print.cc:209; #6 0x00002aaaadd5abd5 in opt::optking (options=...); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/optking.cc:261; #7 0x00002aaaad0dd557 in py_psi_optking () at /home/laz/build/psi4/psi4/psi4/src/core.cc:239; #8 0x00002aaaad118e95 in pybind11::detail::argument_loader<>::call_impl<int, int (*&)()>(int (*&)(), pybind11::detail::index_sequence<>) (this=0x7fffffffc667, f=@0x5555560adc28: 0x2aaaad0dd4f4 <py_psi_optking()>); ... [Pythony bits snipped]; ```; In v3d_axpy(const double a, const double *X, const double *Y, double *Z), X and Y are undefined in my case and cause the seg fault. I've not dug into this in any depth yet but it looked like the linear bends of Frag 2 were added to Frag 1, so that it dies when the internal coordinates of Frag 1 are printed to the output because the internal coords refer to atoms not in that fragment. Or something along those lines. This job gives a seg fault with current git:; ```; molecule dimer {; C 0.824239 0.890517 1.696513; C 1.957325 0.070553 1.693001; C 1.813738 -1.320699 1.693796; C 0.537119 -1.892037 1.698103; C -0.595966 -1.072073 1.701616; C -0.452379 0.319180 1.700821; H 2.954752 0.516900 1.689636; H 0.424971 -2.979016 1.698724; H -1.593394 -1.518419 1.704981; H -1.337645 0.959804 1.703565; H 0.936388 1.977496 1.695892; C 2.947914 -2.141449 1.690280; N 3.874050 -2.836596 1.687416; --; C 0.717503 0.537187 -1.697308; C 0.049935 -0.691858 -1.697308; C -1.348233 -0.728319 -1.697309; C -2.078861 0.464332 -1.697309; C -1.411293 1.693378 -1.697308",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:2141,fault,fault,2141,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,"s?; - What to do about installation layout and Config.cmake detection for normal/conda and staged/pre-built?. In the conda build, I don't want ppl confronted with. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That's not quite right, but my example install has been turned off. I'll need something like the below, so I shoved all the cmake stuff off into `share/` (https://github.com/loriab/gdma/blob/master/CMakeLists.txt#L67) according to line 5 of the `(WUA)` list above. ```; - bin/; - psi4; - psi4-config; - dftd3; - lib/; - libpython.so; - share/; - cmake/; - psi4/; - psi4Config.cmake; - psi4ConfigVersion.cmake; - psi4Targets.cmake; - gdma/; - gdmaConfig.cmake; ...; ```. Unfortunately, this complicates searches within `stage/` b/c `CMAKE_PREFIX_PATH` has to be hinted (`find_package(gdma CONFIG REQUIRED HINTS ${CMAKE_PREFIX_PATH}/gdma)`) and the current way I've done can't be robust (think ;-lists). I can understand your wanting to separate out extproj() installations as not-quite-up-to-snuff, but the extra hinting level is annoying, so how about keeping `externals/` (controlled by a keyword maybe; `INSTALL_EXTPROJ_SEPARATE`) and dropping the extra namespacing level. So a default installation looks like below. ```; - bin/; - psi4; - psi4-config; - lib/; - libpython.so; - share/; - psi4/; - python/; - psi4Config.cmake; - externals/; - bin/; - chemps2; - lib/; - libchemps2.a; - libgdma.a; - libint.a; - libderiv.a; - libdkh.a; - share/; - cmake/; - CheMPS2/; - CheMPS2Config.cmake; - gdma/; - gdmaConfig.cmake; - libint/; - libintConfig.cmake; - dkh/; - dkhConfig.cmake; ```. That way, can have `externals/` in `CMAKE_PREFIX_PATH` and all the configs can be detected. In the `INSTALL_EXTPROJ_SEPARATE`, `externals/` is missing and the external/bin-s join the main bin, etc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238370429:5415,robust,robust,5415,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238370429,1,['robust'],['robust']
Availability,"same module, so I'll add to this issue. Building simint afresh through psi4 on Mac w/`AppleClang 7.0.0.7000176` yields . ```; [ 0%] Building C object simint/CMakeFiles/simint.dir/ostei/gen/ostei_s_s_s_s.c.o; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/ostei/gen/ostei_s_s_s_s.c:1:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/boys/boys.h:3:; In file included from /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/vectorization.h:11:; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:26: warning: ; implicit declaration of function '_mm256_set_m128d' is invalid in C99 [-Wimplicit-function-declaration]; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:110:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/loriab/linux/psihub/hrw-temp/objdir/external/upstream/simint/simint_external-prefix/src/simint_external/simint/vectorization/intrinsics_avx.h:165:21: error: ; initializing '__m256d' (vector of 4 'double' values) with an expression of incompatible type 'int'; __m256d t3 = _mm256_set_m128d( _mm256_extractf128_pd(t2, 0) + _mm256_extractf128_pd(t2, 1),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1 warning and 2 errors generated.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890#issuecomment-356726977:1252,error,error,1252,https://psicode.org,https://github.com/psi4/psi4/issues/890#issuecomment-356726977,3,['error'],"['error', 'errors']"
Availability,samples/sapt3/input.dat error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/issues/936,1,['error'],['error']
Availability,scale down dmrg/caspt2-n2 test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/474:6,down,down,6,https://psicode.org,https://github.com/psi4/psi4/issues/474,1,['down'],['down']
Availability,seg fault possibly caused by or related to collocation grid cache build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366:4,fault,fault,4,https://psicode.org,https://github.com/psi4/psi4/issues/1366,1,['fault'],['fault']
Availability,seg faults in usapt0 solver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830:4,fault,faults,4,https://psicode.org,https://github.com/psi4/psi4/issues/1830,1,['fault'],['faults']
Availability,seg.fault with dft and soscf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256:4,fault,fault,4,https://psicode.org,https://github.com/psi4/psi4/issues/256,1,['fault'],['fault']
Availability,segmentation fault of computing eri with updated version of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2542:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/2542,1,['fault'],['fault']
Availability,"several minutes. Press CTRL-C to abort.; Examining python=3.9: 43%|██████████████████████████▏ | 6/14 [00:20<00:30, 3.87s/it]|Examining libblas[build=*mkl]: 64%|█████████████████████████████████▍ | 9/14 [00:30<00:24, 4.99s/it]|Examining conflict for geometric torsiondrive: 43%|███████████████▍ | 6/14 [00:16<00:10, 1.28s/it]\Examining conflict for matplotlib psi4 geometric torsiondrive: 86%|████████████████▎ | 12/14 [00:43<00:07, 3.92s/it]|Examining conflict for matplotlib psi4 geometric: 93%|█████████████████████████████▋ | 13/14 [00:47<00:04, 4.52s/it]/Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 19it [01:06, 3.74Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 20it [01:06, 3.94Examining conflict for matplotlib python: : 20it [01:11, 3.94s/it] failed /. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions. Package libblas conflicts for:; matplotlib -> numpy=1.11 -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; psi4 -> numpy -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; torsiondrive -> numpy[version='>=1.11,<2.0a0'] -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; libblas[build=*mkl]; geometric -> numpy[version='>=1.18,<2.0a0'] -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']; qcelemental -> numpy[version='>=1.12.0'] -> libblas[version='>=3.8.0,<4.0a0|>=3.9.0,<4.0a0']. Package vs2008_runtime conflicts for:; qcelemental -> python -> vs2008_runtime; geometric -> python -> vs2008_runtime; qcengine -> python -> vs2008_runtime; matplotlib -> python[version='>=2.7,<2.8.0a0'] -> vs2008_runtime[version='>=9.0.30729.1,<10.0a0']. Package six conflicts for:; matplotlib -> cycler -> six[version='>=1.5']; geometric -> six; psi4 -> pytest -> six[version='>=1.10.0']; torsiondrive -> geometric[version='>=0.9.7'] -> six. Package blas conflicts for:; blas[bui",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:5223,Avail,Available,5223,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['Avail'],['Available']
Availability,"sform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!. [CMakeError.log](https://github.com/psi4/psi4/files/1515094/CMakeError.log); [CMakeOutput.log](https://github.com/psi4/psi4/files/1515095/CMakeOutput.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:1262,Error,Error,1262,https://psicode.org,https://github.com/psi4/psi4/issues/871,7,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,short study of the total error in the absolute energies for two cases added.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581#issuecomment-475229104:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/pull/1581#issuecomment-475229104,1,['error'],['error']
Availability,"si4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular momentum error on mac binary.; * simint max is AM7 both past and near future. Only libint is changing.; * Between higher AM and optimizing for multiple architectures, the new libint pkg is heavy, >120mb zipped. For psi4 CI, I'm planning to pull the old AM6 to lessen the strain on Travis. This won't help downstream projects that summon a built psi4 to test their addon.; * I haven't posted the AM8 package yet, as I want the stack to finish building, and I wanted to give you all a heads-up. I'll post to this issue when the package goes up. Will only be in -c psi4/label/dev for now, not -c psi4. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/issues/1533>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJyuo4E3GnVs6-g7y6p4rUmgxalOsks5vNL55gaJpZM4a6ozS>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:3265,error,error,3265,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,2,"['down', 'error']","['downstream', 'error']"
Availability,"si4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:1707,error,error,1707,https://psicode.org,https://github.com/psi4/psi4/issues/3164,1,['error'],['error']
Availability,"si4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2420, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2325, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1543, in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule(), scf_wfn); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/empirical_dispersion.py"", line 210, in compute_energy; jobrec = qcng.compute(; File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/compute.py"", line 83, in compute; config = get_config(local_options=local_options); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/config.py"", line 308, in get_config; raise KeyError(""Number of jobs per node exceeds the number of available cores.""); KeyError: 'Number of jobs per node exceeds the number of available cores.'. ```. This job is submitted on a SLURM cluster with the following script:; ```; #!/bin/bash. #SBATCH --partition=compute-16core-64gb-preemptible; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=1; #SBATCH --output=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters.slurm.out; #SBATCH --job-name=test-C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters. source /home/jacobson/software/setup.psi4; export PSI_SCRATCH=/scratch/jacobson/; export OMP_NUM_THREADS=1; export MPI_NUM_THREADS=1; echo psi4 scratch set to $PSI_SCRATCH; fname=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters; python /home/jacobson/bin/psi4_wb97xd3_def2tzvp.py $fname"".xyz"" > $fname"".log""; ```. one cpu is available for the job. I tracked the issue to qcengine/config.py which seems not to recognize my host and then set a default of 2 for jobs_per_node. Then ncores / jobs_per_node is zero and a KeyError is raised.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548:2146,avail,available,2146,https://psicode.org,https://github.com/psi4/psi4/issues/2548,3,"['avail', 'echo']","['available', 'echo']"
Availability,"si@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapac",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45423,error,error,45423,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"signed __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,double *)"" (?C_DSPR2@psi@@YAXDHNPEANH0H0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsymm，该符号在函数 ""void __cdecl psi::C_DSYMM(char,char,int,int,double,double *,int,double *,int,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11347,error,error,11347,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"simint PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_json PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf FAILED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED. ==================================================== FAILURES =====================================================; ________________________________________________ test_v2rdm_casscf ________________________________________________. @using_v2rdm_casscf; def test_v2rdm_casscf():; """"""v2rdm_casscf/tests/v2rdm1""""""; #! cc-pvdz N2 (6,6) active space Test DQG. print(' N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A'). import v2rdm_casscf. n2 = psi4.geometry(""""""; 0 1; n; n 1 r; """"""). interloper = psi4.geometry(""""""; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; """"""). psi4.set_options({; 'basis': 'cc-pvdz',; 'scf_type': 'cd',; 'cholesky_tolerance': 1e-12,; 'd_convergence': 1e-10,; 'maxiter': 500,; 'restricted_docc': [ 2, 0, 0, 0, 0, 2, 0, 0 ],; 'active': [ 1, 0, 1, 1, 0, 1, 1, 1 ],; }); ##psi4.set_module_options('v2rdm_casscf', {; psi4.set_options({; # 'positivity': 'dqg',; 'r_convergence': 1e-5,; 'e_convergence': 1e-6,; 'maxiter': 20000,; # #'orbopt_frequency': 1000,; # #'mu_update_frequency': 1000,; }). psi4.activate(n2). n2.r = 0.5; refscf = -103.04337420425350; refv2rdm = -103.086205379481. > psi4.energy(",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:2424,FAILURE,FAILURES,2424,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['FAILURE'],['FAILURES']
Availability,simint header error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890:14,error,error,14,https://psicode.org,https://github.com/psi4/psi4/issues/890,1,['error'],['error']
Availability,site-packages/psi4/tests/test_addons.py:925: Psi4 not detecting plugin resp. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_resp). ================================================================== warnings summary ==================================================================; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:5553,error,error,5553,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,"sive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3741,ROBUST,ROBUST,3741,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,smother CI linux ecosys assembly error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2644:33,error,error,33,https://psicode.org,https://github.com/psi4/psi4/pull/2644,1,['error'],['error']
Availability,"somehow we're hitting gcc 4.8 headers (from gfortran?!) in the clang build, hence no regex, hence fail. ```; 7%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/benchmark.cc.o; cd /home/travis/build/psi4/psi4/build/psi4-core-prefix/src/psi4-core-build/src/psi4/libmints && /usr/bin/clang++-3.6 -DMAX_AM_ERI=6 -DUSING_Libint -DUSING_dkh -DUSING_simint -I/home/travis/build/psi4/psi4/psi4/include -I/home/travis/build/psi4/psi4/psi4/src -I/home/travis/build/psi4/psi4/psi4/src/psi4/libiwl/options -isystem /home/travis/miniconda/envs/p4env/include/python3.6m -isystem /home/travis/miniconda/envs/p4env/include -march=native -O3 -DNDEBUG -fPIC -fvisibility=hidden -std=c++11 -std=c++11 -o CMakeFiles/mints.dir/benchmark.cc.o -c /home/travis/build/psi4/psi4/psi4/src/psi4/libmints/benchmark.cc; /home/travis/build/psi4/psi4/psi4/src/psi4/libmints/basisset.cc:855:17: error: no matching function for call to 'regex_replace'; basisname = std::regex_replace(basisname, std::regex(""\\(|\\)|,""), ""_"");; ^~~~~~~~~~~~~~~~~~; /usr/bin/../lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/regex.h:2182:5: note: candidate template ignored: could not match 'basic_string<type-parameter-0-1, char_traits<type-parameter-0-1>, allocator<type-parameter-0-1> >' against 'char const[2]'; regex_replace(const basic_string<_Ch_type>& __s,; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/regex.h:2162:5: note: candidate function template not viable: requires at least 5 arguments, but 3 were provided; regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,; ^; ```. probably something in the win adds, I guess (thinmints diff btwn fail & pass https://github.com/psi4/psi4/commit/466138dd585209f6fe20d530c10ecb2896c2eef6). will keep investigating. fyi @raimis",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1197#issuecomment-417072124:874,error,error,874,https://psicode.org,https://github.com/psi4/psi4/pull/1197#issuecomment-417072124,1,['error'],['error']
Availability,"spgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42504,error,error,42504,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"splay the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method); except Exception:; pass. print(""Available Methods:""); print(available_methods). # List available options; options = psi4.core.get_global_option_list(); print(""\nAvailable Options:""); print(options). # Check specific option; print(""\nIs 'tdscf_type' available?"", 'tdscf_type' in options). And here's the result I got when I ran the script:; (psi4_env) -bash-4.2# python3 CF_PEC_Project.py. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/. Scratch directory: /tmp/; Available Methods:; []. Available Options:; ['ABCD', 'ACTIVE', 'ACTIVE_NAT_ORBS', 'ADD_AUXILIARY_BONDS', 'AIO_CPHF', 'AIO_DF_INTS', 'ALGORITHM', 'ANALYZE', 'AO_BASIS', 'AUXILIARY_BOND_FACTOR', 'AVG_STATES', 'AVG_WEIGHTS', 'A_RAS3_MAX', 'BASIS', 'BASIS_GUESS', 'BASIS_RELATIVISTIC', 'BCCD_MAXITER', 'BENCH', 'BENDAZZOL",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:5491,avail,available,5491,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,1,['avail'],['available']
Availability,"ssues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line search, you're less likely to get stuck on local minima compared to DIIS. For instance, the reason why I found that PP theory breaks sigma-pi symmetry in the acenes was that compared to previous work that had ""showed"" it preserves sigma-pi symmetry, the line search implemented in my code actually just went close to the symmetry preserving saddle point solution, and then recovered from it to decrease the energy quite a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:3000,error,error,3000,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,1,['error'],['error']
Availability,"st.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7639,error,error,7639,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"st_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DND",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7256,Error,Error,7256,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"stall/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF-CASSCF/cc-pVDZ: Passed; 4. DFT Smoketests; - B2PLYP/cc-pVDZ: Passed; - CAM-B3LYP/cc-pVDZ: **FAILED**; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:1759,Error,Error,1759,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['Error'],['Error']
Availability,still getting the same error after running the following:. conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge -c psi4; psi4 --test. :(,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640:23,error,error,23,https://psicode.org,https://github.com/psi4/psi4/issues/2614#issuecomment-1175688640,1,['error'],['error']
Availability,"stop() called on filip-ThinkPad-E495 at Wed Mar 4 16:29:33 2020; Module time:; 	user time = 0.55 seconds = 0.01 minutes; 	system time = 0.01 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 1.79 seconds = 0.03 minutes; 	system time = 0.07 seconds = 0.00 minutes; 	total time = 2 seconds = 0.03 minutes; Constructing Basis Sets for SAPT... => Loading Basis Set <=. Name: (AUG-CC-PVDZ AUX); Role: RIFIT; Keyword: DF_BASIS_SAPT; atoms 1 entry LI line 90 file /home/filip/software/psi4-1.4rc/share/psi4/basis/def2-qzvpp-ri.gbs ; atoms 2 entry H line 30 file /home/filip/software/psi4-1.4rc/share/psi4/basis/aug-cc-pvdz-ri.gbs . //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SAPT0 //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. *** tstart() called on filip-ThinkPad-E495; *** at Wed Mar 4 16:29:34 2020. 	 --------------------------------------------------------; 	 SAPT ; 	 Rob Parrish and Ed Hohenstein ; 	 Open-shell: Jérôme Gonthier ; 	 --------------------------------------------------------. ==> Sizes <==. => Resources <=. Memory [MiB]: 878. => Orbital Ranges <=. ------------------; Range M_A M_B; ------------------; natom 1 1; nso 32 32; ------------------; Alpha orbitals ; ------------------; nmo 32 32; nocc 2 1; nvir 30 31; nfocc 0 0; naocc 2 1; navir 30 31; nfvir 0 0; ------------------; Beta orbitals ; ------------------; nmo 32 32; nocc 1 0; nvir 31 32; nfocc 0 0; naocc 1 0; navir 31 32; nfvir 0 0; ------------------. => Primary Basis Set <=. Basis Set: AUG-CC-PVDZ; Blend: AUG-CC-PVDZ; Number of shells: 14; Number of basis function: 32; Number of Cartesian functions: 34; Spherical Harmonics?: true; Max angular momentum: 2. SCF TERMS:. [1] 11021 segmentation fault (core dumped) python minimal_example.py; ```. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007fffea9b8e06 in psi::sapt::USAPT0::build_Sijb(std::shared_ptr<psi::Matrix>) (); from /home/filip/software/psi4-1.4rc/lib/psi4/core.cpython-36m-x86_64-linux-gnu.so; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830:13102,fault,fault,13102,https://psicode.org,https://github.com/psi4/psi4/issues/1830,2,['fault'],['fault']
Availability,"structure of `qcdb.molparse` (or `qcel.molparse`) which now handles Molecule I/O; ```; def from_arrays(**arrays):; validate_and_type ...; construct_molrec_dictionary ...; return molrec. def from_string(str):; parse ...; return from_arrays(**arrays). def from_schema(schema_dict):; process ...; return from_arrays(**arrays). def to_string(molrec, dtype):; format_by_dtype ...; return str. def to_schema(molrec, dtype):; depending_on_schema_flavor_dtype_rearrange_and_remove_fields ...; return dict; ```. then proper objects like `qcdb.Molecule` and `psi4.core.Molecule` can hook in through; ```; class Molecule():; def to_dict(self):; convert_object_structure_into_molrec ...; return molrec. @classmethod; def from_dict(cls, molrec):; construct_object_from_molrec_contents ...; return mol. @staticmethod; def from_string(str):; molrec = molparse.from_string(str); return Molecule.from_dict(molrec). def to_string(self, dtype):; return molparse.to_string(self.to_dict(), dtype=dtype). @staticmethod; def from_arrays(**arrays):; molrec = molparse.from_arrays(**arrays); return Molecule.from_dict(molrec). def to_schema(self, dtype):; return molparse.to_schema(self.to_dict(), dtype=dtype); ```. The above is more detailed than you need, but it's about time I wrote it down. By external function, I just meant one that returns your findif dictionary. If you want to keep arrays as numpy structures, then can have a flag that does or does not call `unnp` (or similar) and things that are destined for a JSON file (like a `to_schema()` call) can be sure to use `to_dict(np_out=False)` while internal calls can do `to_dict(np_out=True)`. I suggest it merely as a way to avoid lots of `np.array(inp)` and `to_list`s. And keep in mind that the above structure is necessary b/c the ""molrec"" psi4 internal repr dict isn't quite the same as the QCSchema dict, so some translation necessary. Possibly you can avoid that complication. This answer is more background than specifics. Glad to talk the latter instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1289#issuecomment-429944965:1298,down,down,1298,https://psicode.org,https://github.com/psi4/psi4/pull/1289#issuecomment-429944965,1,['down'],['down']
Availability,"sual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\CMakeFiles\core.dir/intermediate.manifest src\CMakeFiles\core.dir/manifest.res"" failed (exit code 1120) with the following output:; 正在创建库 src\core.lib 和对象 src\core.exp; F:\fnocc.lib(diis.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv_，该符号在函数 ""void __cdecl psi::fnocc::DGESV(long &,long &,double *,long &,long *,double *,long &,long &)"" (?DGESV@fnocc@psi@@YAXAEAJ0PEAN0PEAJ100@Z) 中被引用; F:\mcscf.lib(scf_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2001: 无法解析的外部符号 dgesv_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv_，该符号在函数 ""void __cdecl psi::fnocc::DGEMV(char &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMV@fnocc@psi@@YAXAEADAEAJ1AEANPEAN131231@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm_，该符号在函数 ""void __cdecl psi::fnocc::DGEMM(char &,char &,long &,long &,long &,double &,double *,long &,double *,long &,double &,double *,long &)"" (?DGEMM@fnocc@psi@@YAXAEAD0AEAJ11AEANPEAN131231@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(algebra_interface.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\psimrcc.lib(operation_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:7064,error,error,7064,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,submodule error on fresh clone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/189:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/issues/189,1,['error'],['error']
Availability,symbol error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/96:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/96,1,['error'],['error']
Availability,"system /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include""` and all the other envvars also set similarly, and the build appears to be OK, no ctests or pyt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1292,echo,echo,1292,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['echo'],['echo']
Availability,"t *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:49630,error,error,49630,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstebz，该符号在函数 ""int __cdecl psi::C_DSTEBZ(char,char,int,double,double,int,int,double,double *,double *,int *,int *,double *,int *,int *,double *,int *)"" (?C_DSTEBZ@psi@@YAHDDHNNHHNPEAN0PEAH101101@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42913,error,error,42913,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29366,error,error,29366,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:1509,error,error,1509,https://psicode.org,https://github.com/psi4/psi4/pull/3186,1,['error'],['error']
Availability,"t at /psi/toolchainconda/envs/py310:; #; # Name Version Build Channel; dftd3 3.2.1 h84218bc_2 psi4; (py310) psilocaluser@bash:psinet:/psi/gits/hrw-detangle/objdir_py310: (r2scan) conda list gcp; # packages in environment at /psi/toolchainconda/envs/py310:; #; # Name Version Build Channel; gcp 2.0.2 he991be0_2 psi4; gcp-correction 2.3.1 h1990efc_3 conda-forge; (py310) psilocaluser@bash:psinet:/psi/gits/hrw-detangle/objdir_py310: (r2scan) pytest ../tests/pytests/test_psi4.py ; ================================================================================== test session starts ==================================================================================; platform linux -- Python 3.10.4, pytest-7.1.2, pluggy-1.0.0; rootdir: /psi/gits/hrw-detangle, configfile: pytest.ini; plugins: forked-1.3.0, xdist-2.5.0; collected 0 items / 1 error . ======================================================================================== ERRORS =========================================================================================; ______________________________________________________________________ ERROR collecting tests/pytests/test_psi4.py ______________________________________________________________________; ImportError while importing test module '/psi/gits/hrw-detangle/tests/pytests/test_psi4.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; ../tests/pytests/test_psi4.py:4: in <module>; import psi4; stage/lib/psi4/__init__.py:75: in <module>; from .driver import endorsed_plugins; stage/lib/psi4/driver/__init__.py:46: in <module>; from psi4.driver.molutil import *; stage/lib/psi4/driver/molutil.py:36: in <module>; from psi4.driver.p4util import temp_circular_import_blocker; stage/lib/psi4/driver/p4util/__init__.py:35: in <module>; from .fcidump import *; stage/lib/psi4/driver/p4util/fcidump.py:43: in <module>; from psi4.driver.procrouting.proc_util import check_iwl_file_from_scf_type; stage/lib/psi4/driver/procrouting/__init__.py:2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1444984342:1341,ERROR,ERRORS,1341,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1444984342,2,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"t can be merged after PR #2678 and #2738 are in. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls i",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:1749,failure,failure,1749,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"t has already been patched into c-f builds as of v1.8.2 `_1`. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] test py312 where possible (mac py312 works, but to keep testing legacy qcfractal (until psi4 v1.9), need to stick with py39); - [x] switch azure windows to miniforge, so it doesn't spend 18m switching default channels and doing the solve to get mamba. (note that this isn't a weakness of miniconda (which has packaged conda and mamba since this summer) but of the age of the miniconda on chocolatey vs the age of the miniforge.; - [x] tested the new qcfractal 0.51 and found that (1) there's a snowflake threading bug that Ben has since fixed (unreleased) and (2) there's a new space-saving step on qcfractal, so psi4 driver needs to regenerate qcvars info for distributed driver thru qcf runs (fixed here).; - [x] on py312 on windows, there's a change in `shutil.which` that affects us through qcel. currently patched, but awaiting a new release there.; - [x] py312 starts visible SyntaxWarning about non-escaped special characters (like '\n' newline or '\b' bell) and unfortunately, they abound in Windows paths. Further unfortunately, the error detection in the new version parsing for psi4 in qcengine (implemented to avoid those ""[-1] index is not accessible"" means ""pull psi4 tags or otherwise fix version"" errors) springs into defense and thinks a clean psi4 isn't present. So, let's convert possible filepaths to raw strings so no confusion with special chars. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3049:1484,error,error,1484,https://psicode.org,https://github.com/psi4/psi4/pull/3049,2,['error'],"['error', 'errors']"
Availability,"t parser (#1743); - In `-o stdout` mode, `core.be_quiet()` followed by `core.reopen_outfile()` no longer petulantly deprives you of output (#1735); - Fix bug in DF-CC when reading wfn with scf_type CD (#1771) ; - Fix computation of properties in DFOCC (#1772) ; - Fix ROHF and CUHF for asymmetric orthogonalizing matrix X (#1781) ; - Fix to NBO, move to python (#1790) ; - Fix memory bug in DMRG (#1802) ; - Add missing E(30)ind term in SAPT (#1803) ; - Typo in error message (#1811) ; - Fix Azure clang omp (#1822) ; - Remove Psi3 from docs (#1815) ; - Fix to omp call (#1823) ; - Handle very bad linear dependencies (#1844) ; - Fixes to vibrational analysis (#1845) ; - Fix threading in SAPT CPHF (#1849) ; - Fix MP2 handling of 1-electron cases (#1857) ; - Replace seg fault with error in DETCI and DFOCC (#1858, #1861) ; - Fix printing of custom basis sets in banner (#1880) ; - Remove omp_set_nested (#1883) ; - Fix seg fault in CCEnergyWavefunction::rotation() (#1887) ; - Threading fix in ESP potential build (#1900) ; - Proper computation of TDMs from DETCI (#1910) ; - Close DETCI files (#1926) ; - Fix UHF after RHF CCSD gradient crash (#1928) ; - Fix ECPa f-electron combinations (#1930) ; - Keep default_psio_manager alive (#1933) ; - Fix printing of coordinates (#1938) ; - Fixes to Treutler gcc5 (#1945) ; - Fix string setting in options (#1955) ; - USAPT spin fix (#1948, #1969) ; - Distinguish SCF and CC densities (#1962) ; - Improvement to PCMsolver interface (#1977) ; - Fix to occ orbital gradient (#1988) ; - Fix to PK (#1990) ; - Fix bug in scf response (#1999) ; - Correct Bragg-Slater radius for Zn (#2000) ; - Skip Ghost atoms interacting with external charges (#1993) ; - Fix inconsistent basis set parsing (#2002) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.6.0 (#2028) ; - Fix memory bug in libtrans (#2027) ; - Fix to large DF-MP2 (#",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:11835,error,error,11835,https://psicode.org,https://github.com/psi4/psi4/issues/1562,5,"['alive', 'error', 'fault']","['alive', 'error', 'fault']"
Availability,"t recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3062, in run_detci; ciwfn = core.detci(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:12365,Error,Error,12365,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,4,"['Error', 'error']","['Error', 'error']"
Availability,"t set on the remote machine; (probably didn't re-source ~/.bashrc after installing psi4. However, it; should be writing to local disks. I can see psi...clean files in the local; directory, are those scratch files?. No, psi.[pid].clean is a little text file that contains a list of all the; scratch files to clean up. You should look at the list of scratch files in; this psi.[pid].clean file to see where it is writing the scratch files, and; make sure that it isn't to a NFS-mounted directory. Otherwise you'll take; a huge performance hit. On Thu, Mar 1, 2018 at 11:05 AM, Lori A. Burns <notifications@github.com>; wrote:. > Possible, but I really doubt it, as glibc mismatches aren't usually; > healable. Usually this is a symptom of packages depending on different; > versions of a library and symbols getting sometimes loaded one way and; > sometimes another depending on import order. Often fixable by swapping; > import order, but in the psi-in-jupyter case, there's simply nothing to; > swap.; >; > I thoroughly expected this to be fixed when I built with the newer; > compilers and was alarmed when it wasn't. @sergsb; > <https://github.com/sergsb>, would you want to try the conda env line in #862; > (comment) <https://github.com/psi4/psi4/issues/862#issuecomment-347074303>; > ? Possibly more defaults packages have been updated to the new compilers; > since November and healed the problem.; >; > Only thing else I can think of is that I'm still linking libc++ statically; > (which it should be entirely safe to do, being the least-fundamental of the; > glibc, libgcc_s, libstdc++ trio) and that's running into a symbol error; > with the jupyter stack.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/862#issuecomment-369640226>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdr3o6Z-YaJeCQ901ywG8eMHjO8c5ks5taBxDgaJpZM4Qhais>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-369646381:1749,error,error,1749,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-369646381,1,['error'],['error']
Availability,"t stage I open the PR to get some feedback from devs about the suggested changes and structure and to finalise the upstream python interface of ddX. Note that this PR Is currently deliberately done on top of an outdated master, since any commit after #2388 introduces segfaults (details see below), which so far I have not yet been able to trace down. Any help on that would be much appreciated. ## User API & Changelog headlines; - Implementation of PCM and COSMO solvation models based on the ddx library. ## Dev notes & details; - Introduction of a NumIntHelper class to compute some integrals numerically using a DFT grid; - Introduction of ddx solvation model and new ddx options. ## Reproducer for the mysterious segfault; As part of rebasing against the current master I encountered a really strange segfault. I managed to produce a minimal example, which has really nothing to do with ddx and only adds a python interface to a simple numerical electrostatic integral. See here for a [trimmed-down diff](https://github.com/psi4/psi4/compare/master...mfherbst:psi4:segfault). On my machine checking out this `segfault` branch with `0_configure.sh`, building and running the `mytests/runtests.sh` script gives a segfault inside the numerical integration in the `PCMPotentialInt` class. Note that the code I added *is not even called*, the call to `PCMPotentialInt` happens from the pcm code *which I have not modified*. Now, commenting out; ```c++; PrintIntegralsFunctor printer;; potential_integrals_->compute(printer);; ```; the segfault disappears. I'm getting the weird feeling I'm doing something really stupid here and I just missed it. ## Questions; - [x] Thoughts on the NumIntHelper?; - [x] Is D -> D_cart needed or not ([this stuff](https://github.com/psi4/psi4/pull/2767/commits/108b6bb1a53cdc428933475dea991e08a3330d98#diff-48947c7a095c933d6843e0564043f051b0e54dff111fff222bf25cd968f6f9daR1769-R1780)); - [x] Any idea on the segfault when rebasing against master?. ## Checklist; - [x]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767:1276,down,down,1276,https://psicode.org,https://github.com/psi4/psi4/pull/2767,1,['down'],['down']
Availability,"t threading itself automatically. If we roll back to 1.1 does the issue become better?. -Daniel Smith; Sent from my iPhone. . > On Jun 6, 2018, at 04:29, Peter Kraus <notifications@github.com> wrote:; > ; > To add to Lori's table from here, I've compiled the 1.2-rc2 tag against various blas/lapack combinations, and ran the dft-bench-ionisation test (wB97X-D, revTPSS, PW6B95, TPSS, PWB6K only):; > ; > 	N=1	N=4	N=1	N=4; > Psi4/1.2-rc2-acml-5.3.1	FAIL	 	 	 ; > Psi4/1.2-rc2-lapack-3.8.0	395.944	299.438	1.00	1.32; > Psi4/1.2-rc2 (1.2rc2.dev35)	268.523	223.574	1.47	1.77; > Psi4/1.2-rc2-blis-0.3.2	356.723	262.964	1.11	1.51; > Psi4/1.2-rc2-openblas-0.2.20	FAIL	 	 	 ; > Psi4/1.2-rc2-openblas-0.3.0	FAIL	 	 	 ; > All compiled with gcc-7.1.0, cmake-3.8.2, dftd3-3.2-r0.; > ; > ACML-5.3.1 is a binary.; > ; > Netlib's BLAS and lapack (3.8.0) compiled with -O3 -march=barcelona -fPIC and -O3 -frecursive -march=barcelona -fPIC respectively, including deprecated functions. I had to add -DENABLE_dkh=ON to the psi4 build options, otherwise the fortran compiler wouldn't get picked up.; > ; > The 1.2rc2.dev35 is a binary that was available in conda, compiled against mkl 2018.0.2, intel-openmp 2018.0.0.; > ; > Flame's blis-0.3.2 was compiled into netlib's lapack-3.8.0, with ./configure auto; lapack compiled as above.; > ; > OpenBLAS-0.2.20 was compiled with USE_THREAD=0 USE_OPENMP=0 TARGET=BARCELONA. OpenBLAS-0.3.0 was compiled with both make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32 and make TARGET=BARCELONA BINARY=64 USE_THREAD=1 USE_OPENMP=1 NUM_THREADS=32 CFLAGS=""-fPIC -fopenmp -fstack-protector-strong"" FFLAGS=""-fPIC -fopenmp -fstack-protector-strong"" and linked using the .so and .a; it doesn't pass at all even with psi4 -n 1.; > ; > The node I used is a 2 x Quad-Core AMD Opteron(tm) Processor 2352, running up-to-date Debian 8.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-395091290:1198,avail,available,1198,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-395091290,1,['avail'],['available']
Availability,"t"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in run_sapt_dft; sapt_dft(dimer_wfn, wfn_A, wfn_B, sapt_jk=sapt_jk, data=data, print_header=False); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 421, in sapt_dft; fdds",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:2032,ERROR,ERROR,2032,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"t, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:1631,Error,Error,1631,https://psicode.org,https://github.com/psi4/psi4/issues/3164,1,['Error'],['Error']
Availability,"t,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45150,error,error,45150,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:15258,error,error,15258,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGQRF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggrqf，该符号在函数 ""int __cdecl psi::C_DGGRQF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_DGGRQF@psi@@YAHHHHPEANH00H00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvd3，该符号在函数 ""int __cdecl psi::C_DGGSVD3(char,char,char,int,int,int,int *,int *,double *,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *,int,int *)"" (?C_DGGSVD3@psi@@YAHDDDHHHPEAH0PEANH1H111H1H1H1H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggsvp3，该符号在函数 ""int __cdecl psi::C_DGGSVP3(char,char,char,int,int,int,double *,int,double *,int,double,double,int *,int *,double *,int,double *,int,double *,int,int *,double *,double *,int)"" (?C_DGGSVP3@psi@@YAHDDDHHHPEANH0HNNPEAH10H0H0H100H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtcon，该符号在函数 ""int __cdecl psi::C_DGTCON(char,int,double *,double *,double *,double *,int *,double,double *,double *,int *)"" (?C_DGTCON@psi@@YAHDHPEAN000PEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtrfs，该符号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:25949,error,error,25949,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,int *,double,int *,double *)"" (?C_DGELSX@psi@@YAHHHHPEANH0HPEAHN10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqlf，该符号在函数 ""int __cdecl psi::C_DGEQLF(int,int,double *,int,double *,double *,int)"" (?C_DGEQLF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqp3，该符号在函数 ""int __cdecl psi::C_DGEQP3(int,int,double *,int,int *,double *,double *,int)"" (?C_DGEQP3@psi@@YAHHHPEANHPEAH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeqrf，该符号在函数 ""int __cdecl psi::C_DGEQRF(int,int,double *,int,double *,double *,int)"" (?C_DGEQRF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerfs，该符号在函数 ""int __cdecl psi::C_DGERFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGERFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgerqf，该符号在函数 ""int __cdecl psi::C_DGERQF(int,int,double *,int,double *,double *,int)"" (?C_DGERQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesdd，该符号在函数 ""int __cdecl psi::C_DGESDD(char,int,int,double *,int,double *,double *,int,double *,int,double *,int,int *)"" (?C_DGESDD@psi@@YAHDHHPEANH00H0H0HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesv，该符号在函数 ""int __cdecl psi::C_DGESV(int,int,double *,int,int *,double *,int)"" (?C_DGESV@psi@@YAHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvx，该符号在函数 ""int __cdecl psi::C_DGESVX(char,char,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGESVX@psi@@YAHDDHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgetrf，该符号在函数 ""int __cdecl psi::C_DGETRF(int,int,double *,int,int *)"" (?C_DGETRF@psi@@YAHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:21544,error,error,21544,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,double *,int,double *,int *)"" (?C_DSGESV@psi@@YAHHHPEANHPEAH0H0H01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspcon，该符号在函数 ""int __cdecl psi::C_DSPCON(char,int,double *,int *,double,double *,double *,int *)"" (?C_DSPCON@psi@@YAHDHPEANPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspev，该符号在函数 ""int __cdecl psi::C_DSPEV(char,char,int,double *,double *,double *,int,double *)"" (?C_DSPEV@psi@@YAHDDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevd，该符号在函数 ""int __cdecl psi::C_DSPEVD(char,char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPEVD@psi@@YAHDDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspevx，该符号在函数 ""int __cdecl psi::C_DSPEVX(char,char,char,int,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPEVX@psi@@YAHDDDHPEANNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK20",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:40117,error,error,40117,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGBTRF@psi@@YAHHHHHPEANHPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrs，该符号在函数 ""int __cdecl psi::C_DGBTRS(char,int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBTRS@psi@@YAHDHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16347,error,error,16347,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgges，该符号在函数 ""int __cdecl psi::C_DGEGS(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGS@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggesx，该符号在函数 ""int __cdecl psi::C_DGGESX(char,char,char,char,int,double *,int,double *,int,int *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGGESX@psi@@YAHDDDDHPEANH0HPEAH0000H0H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggev，该符号在函数 ""int __cdecl psi::C_DGEGV(char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEGV@psi@@YAHDDHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggevx，该符号在函数 ""int __cdecl psi::C_DGGEVX(char,char,char,char,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGGEVX@psi@@YAHDDDDHPEANH0H0000H0HPEAH10000000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggglm，该符号在函数 ""int __cdecl psi::C_DGGGLM(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGGLM@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgghrd，该符号在函数 ""int __cdecl psi::C_DGGHRD(char,char,int,int,int,double *,int,double *,int,double *,int,double *,int)"" (?C_DGGHRD@psi@@YAHDDHHHPEANH0H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgglse，该符号在函数 ""int __cdecl psi::C_DGGLSE(int,int,int,double *,int,double *,int,double *,double *,double *,double *,int)"" (?C_DGGLSE@psi@@YAHHHHPEANH0H0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dggqrf，该符号在函数 ""int __cdecl psi::C_DGGQRF(int,int,int,double *,int,double *,double *,int,double *,double *,int)"" (?C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:24203,error,error,24203,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyrfs，该符号在函数 ""int __cdecl psi::C_DSYRFS(char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSYRFS@psi@@YAHDHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysv，该符号在函数 ""int __cdecl psi::C_DSYSV(char,int,int,double *,int,int *,double *,int,double *,int)"" (?C_DSYSV@psi@@YAHDHHPEANHPEAH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsysvx，该符号在函数 ""int __cdecl psi::C_DSYSVX(char,char,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *)"" (?C_DSYSVX@psi@@YAHDDHHPEANH0HPEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrd，该符号在函数 ""int __cdecl psi::C_DSYTRD(char,int,double *,int,double *,double *,double *,double *,int)"" (?C_DSYTRD@psi@@YAHDHPEANH0000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrf，该符号在函数 ""int __cdecl psi::C_DSYTRF(char,int,double *,int,int *,double *,int)"" (?C_DSYTRF@psi@@YAHDHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytri，该符号在函数 ""int __cdecl psi::C_DSYTRI(char,int,double *,int,int *,double *)"" (?C_DSYTRI@psi@@YAHDHPEANHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsytrs，该符号在函数 ""int __cdecl psi::C_DSYTRS(char,int,int,double *,int,int *,double *,int)"" (?C_DSYTRS@psi@@YAHDHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:48621,error,error,48621,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"t__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cannot copy file; ""/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build/src/core.so""; to; ""/scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so"".; Call Stack (most recent call first):; cmake_install.cmake:167 (include). gmake[3]: *** [install] Error 1; gmake[3]: Leaving directory `/scratch/appssf/psi4/build/psi4_core-prefix/src/psi4_core-build'; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-install] Error 2; make[2]: Leaving directory `/scratch/appssf/psi4/build'; make[1]: *** [CMakeFiles/psi4_core.dir/all] Error 2; make[1]: Leaving directory `/scratch/appssf/psi4/build'; make: *** [all] Error 2; ```; For compiling, I was using ""make -j 8"". I will try to compile serially and see if that was the cause for the installation problem. Best regards and thank you very much for your help. Sam",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:5012,Error,Error,5012,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,5,['Error'],['Error']
Availability,"t_tu1_h2o_energy():; > ctest_runner(__file__). stage/lib/psi4/tests/tu1-h2o-energy/test_input.py:5: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. inputdatloc = '/psi/gits/hrw-testgcc/objdir-defenv10/stage/lib/psi4/tests/tu1-h2o-energy/test_input.py', extra_infiles = None, outfiles = None. def ctest_runner(inputdatloc, extra_infiles: List =None, outfiles: List =None):; """"""Called from a mock PyTest function, this takes a full path ``inputdatloc`` to an ``""input.dat""`` file set up for; CTest and submits it to the ``psi4`` executable. Any auxiliary files with names listed in ``extra_infiles`` that reside; alongside ``inputdatloc`` are placed in the Psi4 execution directory.; ; """"""; from qcengine.util import execute; import psi4; ; # Pass runtime env through to `execute`; # * appending Psi4 import path (after all, it worked previous line) since partial/relative paths not robust; psiimport = Path(psi4.__file__).parent.parent; env = os.environ.copy(); env[""PYTHONPATH""] = env[""PYTHONPATH""] + os.pathsep + str(psiimport); ; ctestdir = Path(inputdatloc).resolve().parent; ; if (ctestdir / ""input.dat"").exists():; inputdat = ""input.dat""; elif (ctestdir / ""input.py"").exists():; inputdat = ""input.py""; ; infiles = [inputdat]; if extra_infiles:; infiles.extend(extra_infiles); infiles_with_contents = {Path(fl).name: (ctestdir / fl).read_text() for fl in infiles}; ; # Note: The simple `command = [""psi4"", ""input.dat""]` works fine for Linux and Mac but not for Windows.; # L/M/W ok with `command = [which(""psi4""), ""input.dat""]` where `which` on Windows finds the psi4.bat file that points to the psi4 python script. -or-; # L/M/W ok with `command = [sys.executable, psi4.executable, ""input.dat""]` aka `python /full/path/bin/psi4 input.dat`.; # Latter chosen as `psi4.executable` is path computed by `imp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888:5704,robust,robust,5704,https://psicode.org,https://github.com/psi4/psi4/pull/2454#issuecomment-1078282888,1,['robust'],['robust']
Availability,"table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp2_type`, `mp_type`, `ci_type`, `cc_type` keywords were a good idea in that they allow different defaults for different levels of theory and are fairly easy to guess and uniform to use. One flaw is that you don't know programmatically what controls what method -- it's all hard-coded, sometimes in more than one place, in proc.py . Now there's a method:type association dict in procrouting/proc_data.py . There's also a little function there serving up the info, so you can get out the keyword and current value with `method_algorithm_type(mtd).keyword` and `method_algorithm_type(mtd).now`, respectively. This helps clean up proc.py and allows the controlling keyword to be linked for each method in the generated tables.; - [x] in proc.py, ; - [x] select_* functions have been made more boilerplate and elsewhere-mentioned DETCI and MRCC changes integrated in.; - [x] CCD is given select_ccd* functions to raise a sensible error message since the default (cc_type=CONV) isn't implemented. ; - [x] CC2 and CC3 are given select_* functions since now CCENERGY and MRCC cover them. This led to controversy (unresolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:8161,error,error,8161,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['error']
Availability,"tage\lib\gg.lib D:\a\1\b\build\stage\lib\xc.lib D:\a\1\b\build\stage\lib\deriv.lib D:\a\1\b\build\stage\lib\int.lib C:\tools\miniconda3\Library\lib\mkl_rt.lib C:\tools\miniconda3\Library\lib\libiomp5md.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\core.cp36-win_amd64.pyd.manifest"" failed (exit code 1120) with the following output:; Creating library src\core.lib and object src\core.exp; cc.lib(lmp2.cc.obj) : error LNK2019: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ) referenced in function ""public: virtual void * __cdecl psi::MaxIterationsExceeded<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$MaxIterationsExceeded@H@psi@@UEAAPEAXI@Z); dcft.lib(dcft_compute_RHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_compute_UHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_qc.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); src\core.cp36-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix `psi::MaxIterationsExceeded` implementation; - [x] Fix `psi::ConvergenceError` implementation; - [x] Clean up includes. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1419:6294,error,error,6294,https://psicode.org,https://github.com/psi4/psi4/pull/1419,1,['error'],['error']
Availability,"tall configuration: ""Release""; -- Up-to-date: /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/lib/gpu_dfcc/gpu_dfcc.so; CMake Error at cmake_install.cmake:61 (file):; file INSTALL cannot find; ""/home/laz/build/psi4/psi4/objdir/external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external/__init__.py"". Makefile:84: recipe for target 'install' failed; make[3]: *** [install] Error 1; external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/build.make:73: recipe for target 'external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install' failed; make[2]: *** [external/downstream/gpu_dfcc/gpu_dfcc_external-prefix/src/gpu_dfcc_external-stamp/gpu_dfcc_external-install] Error 2; CMakeFiles/Makefile2:1419: recipe for target 'external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all' failed; make[1]: *** [external/downstream/gpu_dfcc/CMakeFiles/gpu_dfcc_external.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```; It looks like __init__.py isn't being generated from __init__.py.in for some reason. It _could_ be because I've been hacking stuff about: I'll try with a fresh tree (modified with your additions) tomorrow. Interestingly, the stand-alone version I built doesn't even link against libiomp5.so or and LAPACK or BLAS libraries (apart from the CUDA libraries):; ```; $ ldd gpu_dfcc.so; linux-vdso.so.1 (0x00007ffd6e3f1000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x0000151f3769b000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x0000151f37497000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x0000151f3728f000); libpython2.7.so.1.0 => /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0 (0x0000151f36d12000); libcublas.so.9.1 => /usr/lib/x86_64-linux-gnu/libcublas.so.9.1 (0x0000151f3377b000); libcusolver.so.9.1 => /usr/lib/x86_64-linux-gnu/libcusolver.so.9.1 (0x0000151f2e006000); libcudart.so.9.1 => /usr/lib/x86_64-linux-gnu/libcudart.so.9.1 (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634:1712,Error,Error,1712,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400483634,2,['Error'],['Error']
Availability,target sapt; [ 99%] Building CXX object src/CMakeFiles/core.dir/core.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_benchmarks.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_blas_lapack.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_cubeprop.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_dpd.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_fock.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_functional.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_misc.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_oeprop.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_pcm.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_plugins.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_psio.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_trans.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_wavefunction.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_options.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/create_new_plugin.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/read_options.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/python_data_type.cc.o; [100%] Linking CXX shared library core.cpython-310-x86_64-linux-gnu.so; /usr/bin/ld: cannot find -lMathOpenMP_LIBRARIES-NOTFOUND; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:417: src/core.cpython-310-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1028: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:136: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:86: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:10188: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:146: all] Error 2. How can I link to this lib and fix this error?. Sincerely THANKS!,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998:1560,error,error,1560,https://psicode.org,https://github.com/psi4/psi4/issues/2998,8,"['Error', 'error']","['Error', 'error']"
Availability,"tations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘)’ before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, psi::TableColumn<std::basic_string",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:2011,error,error,2011,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,"tegrals for the SCF and/or MP2. And if they pick an; unsupported combination (conventional SCF plus DF MP2 gradients) we should; print an error message explaining that's not available. Are we still defaulting to DF for SCF? (at least when there is no post HF; module that wants the conventional ints)? Probably should until / unless; we get efficient conventional SCF, and arguably even then. David. On Sunday, March 6, 2016, Ugur Bozkaya notifications@github.com wrote:. > Hi Lori,; > ; > Let us start with your first question for the HF molecule. I run your job,; > and it terminates ""normally"". Since it is a gradient job I do not simply; > grab integrals from SCF, but I compute both JKFIT and RI basis DF; > integrals. Hence, it does not matter to start with the conventional; > integrals the df-mp2 code proceeds. However, the gradient is not correct; > because the MO coefficients are from conventional SCF, but it should be; > from DF-SCF. I think in the case df-mp2 gradients, if user set the; > conventional SCF, then we should throw an error. Alternatively we may; > change the reference to DF-SCF and throw a warning for user to explain what; > we did. Both solutions are okay for me.; > ; > DFOCC uses frozen cores properly in energy and gradients. I did not add; > the froze virtuals yet. But I will add them soon for FNO-DF-CCSD gradients.; > However, OCC does not use frozen cores in the energy and gradients. In case; > of OCC the problem is that you need to define different MO class with; > libtrans, which is not obvious how to do it. I know it is possible now.; > Andy explained it for me. As a result, there is no plan for OCC module.; > However, frozen virtuals will be added to DFOCC. In fact, I am waiting for; > RC1 release, then I will implement add it to Psi4.; > ; > For the final question, your reference gradient is wrong (mp2tot_vals).; > This is a very good example how 3-point numeric gradients are unreliable; > for challenging systems. I reproduce problem with you",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-192920861:1505,error,error,1505,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-192920861,1,['error'],['error']
Availability,"tered. In short, the COSX K build method breaks with certain grid configurations - specifically, grid configurations which result in negative grid weights. How to best handle that issue - removing such grid configurations from Psi4 entirely, handling negative grid weights differently within COSX itself - is still under discussion, and this PR is _not_ meant to be a final fix to the aforementioned issue. Rather, this PR is meant to provide a more informative error message in the case that an end user _does_ encounter this error. Currently, when this error is encountered, it shows up as either a DGESV error (if the initial COSX grid has negative weights) or an ADIIS minimization error (if the final COSX grid has negative weights). These error outputs don't help the end user figure out what is wrong at all. So, what this PR does, is add sanity checks to ensure that the COSX grids don't have negative weights, and throw an exception if they do. The sanity check exceptions explain to the user what the error is and how they can fix it (i.e., changing the grid pruning scheme and/or number of spherical points). Again, I want to emphasize that this is _not_ intended to be a full fix to https://github.com/psi4/psi4/issues/2890. Rather, it is an intermediate step that is designed to better help end users avoid the problem if they run into it themselves. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Add sanity checks to COSX to ensure that neither of the COSX grids have negative grid weights. An exception is thrown if either of the grids do. ## Questions; - [x] Probably better discussed on https://github.com/psi4/psi4/issues/2890, but how do we want to officially solve this problem? There has been some discussion on simply removing grid configurations which lead to negative weights, as well as discussions on reformulating the X matrix (the matrix central to the observed error) to be able to handle positive grid weights. . ## Checklist; - [X] Tests added f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:1150,error,error,1150,https://psicode.org,https://github.com/psi4/psi4/pull/2906,1,['error'],['error']
Availability,"tern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2357,failure,failure,2357,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"tes for the molecule at each step of the optimization. Hooked up to MDT.; - ~adds normalmode displacement export to the api and optional saving of normal modes to the wavefunction.~; - Adds handling of several one-electron properties to the API and saves them to the wavefunction.; - `qcdb.Molecule`; - Fix some bugs, including C3/D3 symmetry detection w/o verbose and printing for Q-Chem when dummy (or ghost?, don't remember which) present; - Simplify rotational_constants, add rotational_symmetry_number, add axis_representation (probably should double-check this with a spectroscopy book); - Optimize instantiation (really, update_geometry) of large systems by a couple orders of magnitude (now ~1 min for 6000 atoms, w/symmetry); - Hook up Trent Parker's linear-scaling BFS algorithm to qcdb.Molecule or through just np arrays. Has ""seed"" argument so you can forcibly split intramolecularly or close-bound intermol.; - Selected steps (for performance) are now in numpy, as a result, `geometry(np_out=True)` and `xyz(np_out=True)` are avail to skip the cast-back-to-list step. Also, `to_arrays` returns geom, mass, elez, etc. as numpy arrays, rather than needing to iterate over natom.; - `psi4.core.Molecule`; - add rotational_symmetry_number; - export rotor_type; - faster BFS algorithm hooked up to psi4.Mol, too. Depending on Mol type, returns numpy split arrays, single large Mol with atoms rearranged and fragmentation embedded, and/or list of indiv Mols, one for each fragment. Radically pare down auto_fragments/old BFS code.; - `units` no longer exported as a property. has getter/setter, and the getter returns strings, not `Molecule::GeometryUnits` objects.; - _Both_ psi4.core.Molecule && qcdb.Molecule; - Enhanced `add_atom` to take label (in add'n to symbol) and mass number, so is a full fledged CoordEntry entry point; - Add `mass_number` storage and accessor. In Psi, this is just a pass-through – nothing done with it. Stores isotope mass number if mass corresponds to valid nuc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:2382,avail,avail,2382,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['avail'],['avail']
Availability,"test using ctest.; I have one test ""dft-custom-gga"" failed. And I wonder how I can do to pass. I upload the log file below:. ```; 373/405 Testing: dft-custom-gga; 373/405 Test: dft-custom-gga; Command: ""/usr/bin/python2.7"" ""/root/psi4/tests/runtest.py"" ""/root/psi4/tests/dft-custom-gga/input.dat"" ""/root/psi4/build/testresults.log"" ""false"" ""/root/psi4"" ""false"" ""/root/psi4/build/tests/dft-custom-gga/output.dat"" ""/root/psi4/build/stage/share/psi4/bin/psi4"" ""/root/psi4/build/stage/share/psi4/share/psi4"" ""/root/psi4/build/stage/share/psi4/lib/""; Directory: /root/psi4/build/tests/dft-custom-gga; ""dft-custom-gga"" start time: Jun 09 20:39 CDT; Output:; ----------------------------------------------------------; Ne: PBE...........................................................PASSED; Ne: BLYP..........................................................PASSED; Traceback (most recent call last):; File ""/root/psi4/build/stage/share/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 2009, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError:; Fatal Error: Iterations did not converge.; Error occurred in file: /root/psi4/psi4/src/psi4/libpsi4util/process.cc on line: 112; The most recent 5 function calls were:; psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 23.66 sec; ----------------------------------------------------------; Test Failed.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038:1615,Error,Error,1615,https://psicode.org,https://github.com/psi4/psi4/issues/1038,2,['Error'],['Error']
Availability,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgecon，该符号在函数 ""int __cdecl psi::C_DGECON(char,int,double *,int,double,double *,double *,int *)"" (?C_DGECON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeequ，该符号在函数 ""int __cdecl psi::C_DGEEQU(int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGEEQU@psi@@YAHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgees，该符号在函数 ""int __cdecl psi::C_DGEES(char,char,int,double *,int,int *,double *,double *,double *,int,double *,int)"" (?C_DGEES@psi@@YAHDDHPEANHPEAH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeesx，该符号在函数 ""int __cdecl psi::C_DGEESX(char,char,char,int,double *,int,int *,double *,double *,double *,int,double *,double *,double *,int,int *,int)"" (?C_DGEESX@psi@@YAHDDDHPEANHPEAH000H000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev，该符号在函数 ""int __cdecl psi::C_DGEEV(char,char,int,double *,int,double *,double *,double *,int,double *,int,double *,int)"" (?C_DGEEV@psi@@YAHDDHPEANH000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgeevx，该符号在函数 ""int __cdecl psi::C_DGEEVX(char,char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int *,int *,double *,double *,double *,double *,double *,int,int *)"" (?C_DGEEVX@psi@@YAHDDDDHPEANH000H0HPEAH100000H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgehrd，该符号在函数 ""int __cdecl psi::C_DGEHRD(int,int,int,double *,int,double *,double *,int)"" (?C_DGEHRD@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgelqf，该符号在函数 ""int __cdecl psi::C_DGELQF(int,int,double *,int,double *,double *,int)"" (?C_DGELQF@psi@@YAHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgels，该符号在函数 ""int __cdecl psi::C_DGELS(char,int,int,int,double *,int,double *,int,double *,int)"" (?C_DGELS@psi@@YAHDHHHPEANH0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:18967,error,error,18967,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgst，该符号在函数 ""int __cdecl psi::C_DSPGST(int,char,int,double *,double *)"" (?C_DSPGST@psi@@YAHHDHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgv，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_D",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42077,error,error,42077,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"tfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbcon，该符号在函数 ""int __cdecl psi::C_DTBCON(char,char,char,int,int,double *,int,double *,double *,int *)"" (?C_DTBCON@psi@@YAHDDDHHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbrfs，该符号在函数 ""int __cdecl psi::C_DTBRFS(char,char,char,int,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTBRFS@psi@@YAHDDDHHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtbtrs，该符号在函数 ""int __cdecl psi::C_DTBTRS(char,char,char,int,int,int,double *,int,double *,int)"" (?C_DTBTRS@psi@@YAHDDDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgevc，该符号在函数 ""int __cdecl psi::C_DTGEVC(char,char,int,double *,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTGEVC@psi@@YAHDDHPEANH0H0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgexc，该符号在函数 ""int __cdecl psi::C_DTGEXC(int,double *,int,double *,int,double *,int,double *,int,int *,int *,double *,int)"" (?C_DTGEXC@psi@@YAHHPEANH0H0H0HPEAH10H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsen，该符号在函数 ""int __cdecl psi::C_DTGSEN(int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,int *,double *,double *,double *,double *,int,int *,int)"" (?C_DTGSEN@psi@@YAHHHPEANH0H0000H0HPEAH0000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsja，该符号在函数 ""int __cdecl psi::C_DTGSJA(char,char,char,int,int,int,int,int,double *,int,double *,int,double,double,double *,double *,double *,int,double *,int,double *,int,double *,int *)"" (?C_DTGSJA@psi@@YAHDDDHHHHHPEANH0HNN000H0H0H0PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsna，该符号在函数 ""int __cdecl psi::C_DTGSNA(char,char,int,double *,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTGSNA@psi@@YAHDDHPEANH0H0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:50061,error,error,50061,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"th a couple commands. which libints are out there?. conda list. # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old. what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install conda update psi4 libint -c psi4/label/dev will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the _4 (see above) AM6 libint, which is trouble. Easy to solve by updating libint: conda update libint -c psi4/label/dev. After that, your conda list should say _5.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: conda install libint=1.2.1=h87b9b30_4 -c psi4. what can go wrong with locally-built psi4?. * A major use of the libint conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the $CONDA_PREFIX/lib/libint.so to which a psi4 core.so is linked suddenly changes identity, psi4 will be deranged.; * To fix this, cmake needs to detect the new libint headers and a half-dozen psi4 files need to rebuild. > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1). * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. Notes. * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773:2277,down,downgrade,2277,https://psicode.org,https://github.com/psi4/psi4/issues/1533#issuecomment-463524773,1,['down'],['downgrade']
Availability,"thanks @robertodr and all. In which version will this be available? @raimis, we should change our code when it's available.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/818#issuecomment-352287559:57,avail,available,57,https://psicode.org,https://github.com/psi4/psi4/pull/818#issuecomment-352287559,2,['avail'],['available']
Availability,"thanks for the ping @JonathonMisiewicz; yes, there are definitely too many irons in the fire, since I had already forgotten about this whole shenanigan. [GauXC](https://github.com/wavefunction91/GauXC) is definitely where things like the orbital and geometric Hessian matrix elements should be computed, since the code gets very complicated for meta-GGAs and it also is completely independent of the form of the atomic-orbital basis set, meaning that the same code will not only work for the 40+ Gaussian-basis DFT programs but also for programs using Slater-type orbitals or numerical atomic orbitals. Opened up https://github.com/wavefunction91/GauXC/issues/139 for tracking.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3236#issuecomment-2446007790:15,ping,ping,15,https://psicode.org,https://github.com/psi4/psi4/issues/3236#issuecomment-2446007790,1,['ping'],['ping']
Availability,"that case: ; So far everything is going smoothly on my end, but I did notice a couple of inconsistencies in detecting python/complier versions and incorrectly using a different library. On one of our clusters using the module system I have loaded gcc-5.2.0 and Anaconda with python 2.7.10. (these modules define envars $ANACONDA_LIB and $GCC_LIB, which I will refer to below. They also modify the $LD_LIBRARY_PATH variable when they are loaded.) . If I set the python executable and don't do anything to `CMAKE_PREFIX_PATH` the executable is set up correctly but the `PYTHON_INCLUDE_DIR` and `PYTHON_LIBRARY` find the ones that live in the system paths `/usr/lib/python2.6.so` and `/usr/include/python2.6` which causes problems in the linking step with undefined references to some python stuff. . Also if I set the C/CXX compiler, but again don't do anything to the `CMAKE_PREFIX_PATH` I can build + link fine, but at runtime I will get errors like this:. ```; /usr/lib64/libstdc++.so.6: version ``GLIBCXX_X.X.XX' not found ; ```. Which seems to be that cmake is linking to the libstdc++ version for the system gcc which is 4.7.2, instead of the correct library version for the compiler I am using. . If I add `-DCMAKE_PREFIX_PATH=$GCC_LIB:$ANACONDA_LIB` to my cmake command it will fix both issues are corrected. The python library is detected as `$ANACONDA_LIB/python2.7.so` and I don't have any problems with linking. And there is no errors at runtime either. In both cases cmake seems to detect the versions correctly since it has the correct executable. . So when it comes time to document the new build system for users, it may be prudent to mention they should either use the `CMAKE_PREFIX_PATH` argument, or check that cmake has detected the correct library paths for the python/compiler they actually meant to use if they are working in a environment where multiple python/compilers installed. Most clusters will have some way of swapping these out with a system default installed globally.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249621149:1446,error,errors,1446,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249621149,1,['error'],['errors']
Availability,"that would be needed; that isn't being kept. On Fri, Feb 14, 2020 at 1:08 PM Jonathon Misiewicz <notifications@github.com>; wrote:. > The following input file segfaults:; >; > molecule {; > symmetry c1; > H; > H 1 1.0; > }; >; > set basis cc-pvdz; > e, wfn = energy('fci', return_wfn=True); > wfn.form_tpdm(); >; > The issue is that the driver cleans up DETCI after every energy call; > <https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3579>.; > That cleanup frees the decode matrix; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/ciwave.cc#L458>.; > But form_tpdm works by creating a new CI vector; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/tpdm.cc#L56>,; > which is set with the decode matrix; > <https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/civect.cc#L115>,; > which the driver freed, giving rise to a bad access exception.; >; > So which code is supposed to be responsible for DETCI cleanup? If that's; > the responsibility of procrouting, then form_tpdm is always going to; > segfault, so form_tpdm shouldn't be exposed to Python at all, and the; > user should have the TPDM be formed and kept via set tpdm true. If; > cleanup is not the responsibility of procrouting, then which code is; > supposed to be responsible for it? Leave it to the destructor?; >; > DETCI design decisions are above my pay grade, so I'm leaving this to DGAS; > and CDS. The 1.4 paper is of course higher priority, but I need this; > feature working very badly, so I will start pinging on Tuesday.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1812?email_source=notifications&email_token=AAXVA5XS3UFCJKRLHOJNWI3RC3M2FA5CNFSM4KVNDPSKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4INUQSEQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAXVA5SRRGB7SRIJPXE5OATRC3M2FANCNFSM4KVNDPSA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1812#issuecomment-586421160:2383,ping,pinging,2383,https://psicode.org,https://github.com/psi4/psi4/issues/1812#issuecomment-586421160,1,['ping'],['pinging']
Availability,"the (conventional or DF) integrals written to disk. This got; handled by some logic where necessary for scf_type = disk_df, apparently,; but did not get handled for mem_df. Works ok for ccenergy? It also needs conventional integrals written to; disk. Maybe that is getting intercepted correctly. On Mon, May 14, 2018 at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/li",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:945,Error,Error,945,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['Error'],['Error']
Availability,"the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI screening methods. ## Questions; - [x] Would the test in `test_comprehensive_jk_screening.py` be better placed in `test_erisieve.py`? I placed the test in the former because I considered it large enough to warrant not having the quick pytest mark, but I'm ambivalent about where the test goes between those two test modules. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:1662,error,error,1662,https://psicode.org,https://github.com/psi4/psi4/pull/2978,1,['error'],['error']
Availability,"the one failure is just our old friend `stability1`, so merging anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/436#issuecomment-230519138:8,failure,failure,8,https://psicode.org,https://github.com/psi4/psi4/pull/436#issuecomment-230519138,1,['failure'],['failure']
Availability,there is a syntax error when [] and * are in the file.; [my3-21g] is putted in the input file?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/823#issuecomment-337808388:18,error,error,18,https://psicode.org,https://github.com/psi4/psi4/issues/823#issuecomment-337808388,1,['error'],['error']
Availability,this example with Bismuth. ```; molecule mol {; 0 1; O 2.92770 0.06060 -0.10810; Bi 2.42590 -1.82250 0.36000; O 1.18530 -0.57340 0.62950; C 0.28120 0.33690 0.82590; C 0.90790 1.68810 0.95220; O -0.93190 0.11800 0.90030; H 1.58840 1.65300 1.79070; H 0.16190 2.44800 1.16540; H 1.41360 1.98520 0.04650; }. set reference rks; set scf_type df; set basis def2-SV(P); E = optimize('pbe'). ```; fails to add ECP gradient terms. from log output:; ```; ==> Adding ECP gradient terms (computed numerically) <==; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; ```. Which I guess is leading to the failure of the optimization in the end.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1704:896,failure,failure,896,https://psicode.org,https://github.com/psi4/psi4/issues/1704,1,['failure'],['failure']
Availability,"this will get past molecule. ```; diff --git a/psi4/driver/qcdb/molecule.py b/psi4/driver/qcdb/molecule.py; index f8f7ea6..361f059 100644; --- a/psi4/driver/qcdb/molecule.py; +++ b/psi4/driver/qcdb/molecule.py; @@ -1171,7 +1171,7 @@ class Molecule(LibmintsMolecule):; provenance=None,; connectivity=None,; missing_enabled_return='error',; - tooclose=0.1,; + tooclose=1.e-6, #0.1,; zero_ghost_fragments=False,; nonphysical=False,; mtol=1.e-3,; @@ -1465,7 +1465,7 @@ class Molecule(LibmintsMolecule):; # to_dict, but is included as a check. in practice, only fills in mass; # numbers and heals user chgmult.; try:; - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', tooclose=1.e-6, **molrec); except qcel.ValidationError as err:; # * this can legitimately happen if total chg or mult has been set; # independently b/c fragment chg/mult not reset. so try again.; @@ -1474,7 +1474,7 @@ class Molecule(LibmintsMolecule):; ); molrec['fragment_charges'] = [None] * len(fragments); molrec['fragment_multiplicities'] = [None] * len(fragments); - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', tooclose=1.e-6, **molrec); forgive.append('fragment_charges'); forgive.append('fragment_multiplicities'); compare_molrecs(validated_molrec, molrec, 'to_dict', atol=1.e-6, forgive=forgive, verbose=0); ; diff --git a/psi4/src/psi4/libmints/molecule.h b/psi4/src/psi4/libmints/molecule.h; index 30ef61e..6129121 100644; --- a/psi4/src/psi4/libmints/molecule.h; +++ b/psi4/src/psi4/libmints/molecule.h; @@ -317,9 +317,9 @@ class PSI_API Molecule {; ; /// @{; /// Tests to see of an atom is at the passed position with a given tolerance; - int atom_at_position1(double*, double tol = 0.05) const;; - int atom_at_position2(Vector3&, double tol = 0.0",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879:330,error,error,330,https://psicode.org,https://github.com/psi4/psi4/pull/1843#issuecomment-595893879,1,['error'],['error']
Availability,"this'll probably pass CI, but there's a segfault lurking in `nbody-multi-level` with `Dimension` and `wfn.set_scalar_variable` that I haven't tracked down. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64; (gdb) bt; #0 0x00007fffefce24ca in psi::Dimension::Dimension(psi::Dimension const&) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #1 0x00007fffefd91a81 in psi::Matrix::Matrix(psi::Matrix const*) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #2 0x00007fffefd94334 in psi::Matrix::clone() const () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #3 0x00007fffefc687b3 in psi::Wavefunction::set_array_variable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<psi::Matrix>) () from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #4 0x00007fffefc67fba in psi::Wavefunction::set_gradient(std::shared_ptr<psi::Matrix>) (); from /home/psilocaluser/gits/hrw-quaternary/objdir37/stage/lib/psi4/core.cpython-37m-x86_64-linux-gnu.so; #5 0x00007fffeea99b09 in void pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<void, psi::Wavefunction, std::shared_ptr<psi::Matrix>, pybind11::name, pybind11::is_method, pybind11::sibling, char [34]>(void (psi::Wavefunction::*)(std::shared_ptr<psi::Matrix>), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [34])::{lambda(psi::Wavefunction*, std::shared_ptr<psi::Matrix>)#1}, void, psi::Wavefunction*, std::shared_ptr<psi::Matrix>, pybind11",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368:150,down,down,150,https://psicode.org,https://github.com/psi4/psi4/pull/1445#issuecomment-452033368,2,"['down', 'fault']","['down', 'fault']"
Availability,"thods_to_try}. for bond_length in bond_lengths:; casscf_energies, casscf_wfns = compute_energies(bond_length, num_states, methods_to_try); for method in methods_to_try:; for state in range(1, num_states + 1):; energies[method][state].append(casscf_energies[method][state]); wfns[method][state].append(casscf_wfns[method][state]). return bond_lengths, energies, wfns. # Generate potential energy curves; bond_lengths, energies, wfns = generate_potential_energy_curves(). # Compute ground state energies for plotting; ground_state_energies = [compute_energy(bond_length) for bond_length in bond_lengths]. # Writing data to a file 'PEC_data_CF.csv' for the first excited state; with open('PEC_data_CF.csv', 'w') as f:; f.write('# Bond Length (Angstrom), Ground State Energy (Hartree)\n'); for i, bond_length in enumerate(bond_lengths):; f.write(f'{bond_length:.6f}, {ground_state_energies[i]:.8f}\n'). # Plotting potential energy curves; plt.figure(figsize=(10, 6)); plt.plot(bond_lengths, ground_state_energies, label='Ground State', color='black'); for method in energies:; for state in range(1, num_states + 1):; plt.plot(bond_lengths, energies[method][state], label=f'{method}, State {state}'). plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curves for CF Molecule'); plt.legend(); plt.grid(True); plt.tight_layout(). # Saving the plot as an image file; plt.savefig('potential_energy_curve_CF.png'). # Displaying the plot; plt.show(). Here's one of the error I got after several modifications. Please I need serious help on this right now.; Error computing energies at bond length 1.0: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.2: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.4: 'NoneType' object has no attribute 'group'; Error computing energies at bond length 1.5999999999999999: 'NoneType' object has no attribute 'group'; ^CTraceback (most recent call last):",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824:4115,error,error,4115,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2172329824,5,"['Error', 'error']","['Error', 'error']"
Availability,threading error in DF-CCSD(T) gradient,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2192:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/issues/2192,1,['error'],['error']
Availability,"tility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3235:1343,down,down-electron,1343,https://psicode.org,https://github.com/psi4/psi4/issues/3235,2,['down'],['down-electron']
Availability,"time that there seems to be some little; symmetry-breaking noise in nearly all Psi4 gradients, and I have not taken; the time to follow up on it. It puzzles me, because we never saw stuff; like this in Psi3... those gradients were already symmetric and did not; need a ""symmetrize"" function to be called.... The only part of Psi that; I've checked that seems immune to this problem is Daniel Crawford's CC; gradients, which are perfectly symmetric. On Wed, Jan 30, 2019 at 10:40 AM Jonathon Misiewicz <; notifications@github.com> wrote:. > Discovered while remedying test cases where reference numbers needed to be; > changed due to my upcoming #1143; > <https://github.com/psi4/psi4/issues/1143> fix. DFOCC gradients are not; > symmetrized. If you'd like an example, just look in the reference output; > files; > <https://github.com/psi4/psi4/blob/master/tests/dfomp3-grad2/output.ref#L603-L604>!; > Symmetry of the overlap gradient is broken in the seventh decimal place.; > The other terms have some errors, but much smaller. That the overlap; > gradient is most afflicted is unsurprising, since the overlap integrals are; > contracted against one of the many ""generalized Fock matrices"". This one; > depends on the 1RDM and 2RDM, which are not currently symmetrized.; >; > I'm hoping to include this in 1.3 with the #1143; > <https://github.com/psi4/psi4/issues/1143> fix, since this bug could lead; > to optimizations failing, as we saw with DFMP2 two weeks ago (#1483; > <https://github.com/psi4/psi4/pull/1483>). Because individual terms are; > printed, the individual terms need to be symmetrized, and it may take me; > some time to find where the symmetrize calls need to be placed. If it; > takes too long, I'm fine with delaying to 1.4.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1504>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qd",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1504#issuecomment-458993782:1034,error,errors,1034,https://psicode.org,https://github.com/psi4/psi4/issues/1504#issuecomment-458993782,1,['error'],['errors']
Availability,"tion_contraction.cc.obj) : error LNK2001: 无法解析的外部符号 dgemm_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev_，该符号在函数 ""void __cdecl psi::fnocc::DSYEV(char &,char &,long &,double *,long &,double *,double *,long &,long &)"" (?DSYEV@fnocc@psi@@YAXAEAD0AEAJPEAN12211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2001: 无法解析的外部符号 dsyev_; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dspev_，该符号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,doub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:8750,error,error,8750,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"tions from Psi4 entirely, handling negative grid weights differently within COSX itself - is still under discussion, and this PR is _not_ meant to be a final fix to the aforementioned issue. Rather, this PR is meant to provide a more informative error message in the case that an end user _does_ encounter this error. Currently, when this error is encountered, it shows up as either a DGESV error (if the initial COSX grid has negative weights) or an ADIIS minimization error (if the final COSX grid has negative weights). These error outputs don't help the end user figure out what is wrong at all. So, what this PR does, is add sanity checks to ensure that the COSX grids don't have negative weights, and throw an exception if they do. The sanity check exceptions explain to the user what the error is and how they can fix it (i.e., changing the grid pruning scheme and/or number of spherical points). Again, I want to emphasize that this is _not_ intended to be a full fix to https://github.com/psi4/psi4/issues/2890. Rather, it is an intermediate step that is designed to better help end users avoid the problem if they run into it themselves. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Add sanity checks to COSX to ensure that neither of the COSX grids have negative grid weights. An exception is thrown if either of the grids do. ## Questions; - [x] Probably better discussed on https://github.com/psi4/psi4/issues/2890, but how do we want to officially solve this problem? There has been some discussion on simply removing grid configurations which lead to negative weights, as well as discussions on reformulating the X matrix (the matrix central to the observed error) to be able to handle positive grid weights. . ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:2053,error,error,2053,https://psicode.org,https://github.com/psi4/psi4/pull/2906,1,['error'],['error']
Availability,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3184:1053,down,downgrade,1053,https://psicode.org,https://github.com/psi4/psi4/issues/3184,1,['down'],['downgrade']
Availability,"token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘,’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:221: error: expected constructor, destructor, or type conversion before ‘+’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘std::string psi::Table<T, Args>::PrintOut(int) const’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:228: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘{’ before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: At global scope:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected unqualified-id before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:235: error: expected ‘)’ before numeric constant; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In member function ‘void psi::Table<T, Args>::SetBorder(psi::TableSide, char)’:; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: sorry, unimplemented: cannot expand ‘Args ...’ into a fixed-length argument list; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h:251: error: invalid type in declaration before ‘(’ token; /home/ubgroup/psi4/src/lib/libPsiUtil/Implementations/../Table.h: In constructor ‘psi::Table<T, Args>::Table(int, const T&, Args& ...) [with T = psi::TableColumn<std::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Args = psi::TableColum",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404#issuecomment-224865906:1819,error,error,1819,https://psicode.org,https://github.com/psi4/psi4/issues/404#issuecomment-224865906,1,['error'],['error']
Availability,too obscure PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1965:17,error,errors,17,https://psicode.org,https://github.com/psi4/psi4/issues/1965,1,['error'],['errors']
Availability,"trapolated Fock matrix `F_DIIS = \sum_i c_i F_i`. If I remember correctly, there's a paper that shows that ADIIS and EDIIS are the same method, assuming that you're running at Hartree-Fock level of theory. However, I think the methods are not the same for DFT. With ADIIS+DIIS, you can converge most systems without any kind of problems. The only cases where you get problems are the ones where there really are physical issues with the wave function, like e.g. with flat angular surfaces of the energy, where rotating the orbitals changes the energy only very slowly. These are fundamentally better described by orbital rotation techniques, e.g. the geometric direct minimization method #2214, where you just do everything in terms of orbital rotations. Direct minimization is bound to converge, and the convergence rate is often quite rapid. If you program ADIIS and/or EDIIS, one can tie them with C2-DIIS with linear interpolation. For instance, when the DIIS error is greater than `1e-2`, the DIIS extrapolation will be crap and might take you far up in energy. In this case it is better to use the ADIIS/EDIIS energy functional, which is just an **interpolation** between the current and previous iterations' Fock matrices. ADIIS/EDIIS takes you very quickly to the radius of convergence of DIIS, unless the problem is fundamentally ill-behaved (which you again can solve efficiently using GDM). If the DIIS error is in the range `1e-3, ..., 1e-2`, i.e. `log error = [-3, -2]`, then the DIIS solution likely has some truth in it, but it should still be guided by the ADIIS/EDIIS solution. Then you weigh the ADIIS/EDIIS and the C2DIIS solutions by linear interpolation from full ADIIS to `1e-2`, then linear interpolation to full C2DIIS at `1e-3`. Orbital rotation methods like GDM are often also quite good at finding a local minimum. Moreover, if you have analytical orbital derivatives, you can implement an analytical, numerically accurate line search very easily. When you use an exact line",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568:2550,error,error,2550,https://psicode.org,https://github.com/psi4/psi4/issues/2235#issuecomment-874461568,1,['error'],['error']
Availability,"trf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28176,error,error,28176,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"try running the psiapi test outright, like https://github.com/psi4/psi4/blob/master/.travis.yml#L179 to see more errors. any extra packages needed that the bare travis env doesn't have?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-356018808:113,error,errors,113,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356018808,1,['error'],['errors']
Availability,"try:; dftd3rec['stdout']; except KeyError as err:; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; @using_gcp; def test_grimme_3c():. s16di = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.126185; --; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; symmetry c1; """"""). > ene = psi4.energy('pbeh3c', bsse_type='nocp'). ../lib/python3.6/site-packages/psi4/tests/test_addons.py:830:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../lib/python3.6/site-packages/psi4/dri",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:16671,avail,available,16671,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"try:; dftd3rec['stdout']; except KeyError as err:; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err. # amalgamate output; text = dftd3rec['stdout']; text += '\n <<< DFTD3 Results >>>\n'. for fl in ['dftd3_gradient']:; field = 'output_' + fl.lower(); if field in dftd3rec:; text += '\n DFTD3 scratch file {} has been read.\n'.format(fl); text += dftd3rec[field]. # parse energy output (could go further and break into E6, E8, E10 and Cn coeff); real = np.array(jobrec['molecule']['real']); full_nat = real.shape[0]; real_nat = np.sum(real). for ln in dftd3rec['stdout'].splitlines():; if re.search('DFTD3 V', ln):; version = ln.replace('DFTD3', '').replace('|', '').strip().lower(); elif re.match(' Edisp /kcal,au', ln):; ene = Decimal(ln.split()[3]); elif re.match(' normal termination of dftd3', ln):; break; else:; if not ((real_nat == 1) and (jobrec['driver'] == 'gradient')):; > raise Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.'); E psi4.driver.qcdb.exceptions.Dftd3Error: Unsuccessful run. Possibly -D variant not available in dftd3 version. ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:301: Dftd3Error. The above exception was the direct cause of the following exception:. @pytest.mark.smoke; @using_dftd3; def test_dftd3():; """"""dftd3/energy""""""; #! Exercises the various DFT-D corrections, both through python directly and through c++. ref_d2 = [-0.00390110, -0.00165271, -0.00058118]; ref_d3zero = [-0.00285088, -0.00084340, -0.00031923]; ref_d3bj = [-0.00784595, -0.00394347, -0.00226683]. ref_pbe_d2 = [-0.00278650, -0.00118051, -0.00041513]; ref_pbe_d3zero = [-0.00175474, -0.00045421, -0.00016839]; ref_pbe_d3bj = [-0.00475937, -0.00235265, -0.00131239]. eneyne = psi4.geometry(""""""; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.232253 -2.126185; H -0.923621 1.232253 -2.126185; H 0.923621 1.232253 -2.1261",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:7834,avail,available,7834,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"ts --; * can each mp2-capable module do something sensible with each scf_type?; * can each mp2-capable module return the same right answer for each capable scf_type/mp2_type?; * can each mp2_type returns something good w/o the user knowing about modules?; * all above for gradient, plus check against findif; * for all these, is the full qcvars, return values, `CURRENT ENERGY`, etc. contract fulfilled for both P::e and wfn? . ## Todos; - [x] check mp2 fundamentals from mp2 energy targets (e.g., `MP2 TOTAL ENERGY` from `energy('mp2')`; - [x] check mp2 fundamentals from mp2 gradient targets (e.g., `MP2 TOTAL ENERGY` from `gradient('mp2')`; - [ ] check scs mp2 from mp2 targets (e.g., `CUSTOM SCS-MP2 TOTAL ENERGY` from `energy('mp2')`; - [x] check mp2 fundamentals from post-mp2 targests (e.g., `MP2 TOTAL ENERGY`) from `energy('fnoccsd')`; - [x] routing; - [x] I think we got the logic of `check_disk_df` off a little in proc.py in that we were checking if correlated method type was `DISK_DF` (my fault) and along the way forbidding `PK` refs with `DF` correlated. I think I fixed this for dfocc but haven't done df with fnocc yet.; - [x] Also corrected logic that was letting through mixed ref+corl derivatives (e.g., pk+df) that had gotten lost. See #245 for much discussion. tl;dr we have none, so let's not continue to let psi proceed with calculations that give beer + wrong answers; - [x] CISD is a poor way to calculate MP2, and it's not like we don't have other modules for RHF & ROHF besides DETCI. And @CDSherrill has allowed that we're unlikely to get to the bottom of it, so closes #311 . And the mp2 detci code is unsteady for multiple-detci-single-psi4 calcs, so it's not smooth to test.; - [x] qcvars; - [x] Newly sets `<mtd> TOTAL GRADIENT` from findif in driver on wfn and P::e; - [x] Newly sets `MP2 SINGLES ENERGY` and `MP2 DOUBLES ENERGY` in C++ where available.; - [x] Fixes up the conventional CCSD qcvars in ccenergy, including closes #1702 ; - [x] Fixes up CD/DF-CCSD qcv",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850:1227,fault,fault,1227,https://psicode.org,https://github.com/psi4/psi4/pull/1850,1,['fault'],['fault']
Availability,turns out the downloaded basis sets files from the SI don't comply with the expected angular momentum notation. E.g. there is a J where a K should be. (psi4 does G-H-I-K-L etc.),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1346#issuecomment-437581646:14,down,downloaded,14,https://psicode.org,https://github.com/psi4/psi4/pull/1346#issuecomment-437581646,1,['down'],['downloaded']
Availability,"uadratic Force Constant -0.0241494 MDYNE/A; Cubic Force Constant 0.0817885 MDYNE/A**2; Quartic Force Constant -0.1482087 MDYNE/A**3. Traceback (most recent call last):; File ""/home/martin/miniconda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 41, in <module>; File ""/home/martin/miniconda/lib//python3.7/site-packages/psi4/driver/diatomic.py"", line 194, in anharmonicity; roots2 = np.roots(coefs2); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/lib/polynomial.py"", line 245, in roots; roots = eigvals(A); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/linalg/linalg.py"", line 1059, in eigvals; _assertFinite(a); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/linalg/linalg.py"", line 219, in _assertFinite; raise LinAlgError(""Array must not contain infs or NaNs""). numpy.linalg.LinAlgError: Array must not contain infs or NaNs. Printing out the relevant lines from the Psithon --> Python processed input file:; -108.48749538322693, -108.48743328369225, -108.48738988401745, -108.4873615842295, -108.4873453843509, -108.48733858440185, -108.48733918439734, -108.48734528435165, -108.487544082862,; -108.4875574827616, -108.48757248264921, -108.48758858252856, -108.48760498240567, -108.48762118228429, -108.48763708216514, -108.48765208205275, -108.4876661819471, ; -108.48767918184969, -108.48769108176053, -108.4877016816811, -108.48771108161066, -108.48771918154995, -108.48772618149751, -108.48773188145479, -108.48773658141958, ; -108.48774018139261, -108.48774268137387, -108.48774438136114, -108.48774518135515, -108.48774518135515, -108.48774438136114, -108.48774298137162, -108.48774098138661, ; -108.48773838140609, -108.48773538142858, -108.48720108543215]; --> psi4.diatomic.anharmonicity(r,eng,'result.out'). Psi4 stopped on: Sunday, 14 April 2019 03:29PM; Psi4 wall time for execution: 0:00:00.26. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600:11739,error,error,11739,https://psicode.org,https://github.com/psi4/psi4/issues/1600,1,['error'],['error']
Availability,"ub.com wrote:; > ; > Dear Pis4 developers.; > ; > I've got in issue when link psi4 binary:; > ; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of`tmpnam_r' is dangerous, better use `mkstemp'; > /usr/local/lib/libpython2.7.a(posixmodule.o): In function`posix_tempnam':; > /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use`mkstemp'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; > builtin_converters.cpp:(.text+0x1286): undefined reference to`PyUnicodeUCS4_AsWideChar'; > /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; > builtin_converters.cpp:(.text+0x455): undefined reference to`PyUnicodeUCS4_FromEncodedObject'; > collect2: error: ld returned 1 exit status; > make[2]: **\* [bin/psi4] Ошибка 1; > make[1]: **\* [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; > make: **\* [all] Ошибка 2; > I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x; > ; > Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; > http://packages.ubuntu.com/trusty/libboost-all-dev; > ; > My python interpreter support UCS-4.; > ; > python -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > python3 -c ""import sys; print(sys.maxunicode)""; > returns 1114111; > ; > Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; > in particular, I only need to generate MOLDEN file from SCF calculations.; > ; > With respect, Vladimir.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/94#issuecomment-100760375:1644,error,error,1644,https://psicode.org,https://github.com/psi4/psi4/issues/94#issuecomment-100760375,2,"['avail', 'error']","['available', 'error']"
Availability,"ubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ^; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libqt/qt.h:47:7: note: forward declaration of 'psi::Options'; class Options;; ^; 2 errors generated. ```. I'm doing this on my intel mac: `2.6 GHz 6-Core Intel Core i7`; using clang++ ; ```; (base) gwood@EXS-001355 build % /usr/local/opt/llvm/bin/clang++ -v; Homebrew clang version 15.0.7; Target: x86_64-apple-darwin22.4.0; Thread model: posix; InstalledDir: /usr/local/opt/llvm/bin`; ```. The only issue prior to this was to install libxc and point to it, which i did with 6.2.2; I downloaded the source from git and am using master:. ```; git clone git@github.com:psi4/psi4.git; (base) gwood@EXS-001355 src % git branch; * master; ```; my cmake version is:. ```; (base) gwood@EXS-001355 src % cmake --version; cmake version 3.23.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; blas and lapack is picked up from xcode, e.g.:; ```. //BLAS libraries; BLAS_LIBRARIES:STRING=/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/lib/libblas.tbd ; ```. any ideas, any more information you might need?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:2240,error,errors,2240,https://psicode.org,https://github.com/psi4/psi4/issues/3006,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"uble *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,doubl",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:34075,error,error,34075,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uble *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,d",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52658,error,error,52658,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uble *,int,double *,double *,double *,int *)"" (?C_DPBRFS@psi@@YAHDHHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbstf，该符号在函数 ""int __cdecl psi::C_DPBSTF(char,int,int,double *,int)"" (?C_DPBSTF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsv，该符号在函数 ""int __cdecl psi::C_DPBSV(char,int,int,int,double *,int,double *,int)"" (?C_DPBSV@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbsvx，该符号在函数 ""int __cdecl psi::C_DPBSVX(char,char,int,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPBSVX@psi@@YAHDDHHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrf，该符号在函数 ""int __cdecl psi::C_DPBTRF(char,int,int,double *,int)"" (?C_DPBTRF@psi@@YAHDHHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpbtrs，该符号在函数 ""int __cdecl psi::C_DPBTRS(char,int,int,int,double *,int,double *,int)"" (?C_DPBTRS@psi@@YAHDHHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpocon，该符号在函数 ""int __cdecl psi::C_DPOCON(char,int,double *,int,double,double *,double *,int *)"" (?C_DPOCON@psi@@YAHDHPEANHN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpoequ，该符号在函数 ""int __cdecl psi::C_DPOEQU(int,double *,int,double *,double *,double *)"" (?C_DPOEQU@psi@@YAHHPEANH000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dporfs，该符号在函数 ""int __cdecl psi::C_DPORFS(char,int,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPORFS@psi@@YAHDHHPEANH0H0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposv，该符号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:33511,error,error,33511,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uble with intel 16.0.3 on my mac. I have not been able to compile PSI4 with intel. . Here is what appears if I do, icpc -v. ```; icpc version 16.0.3 (gcc version 4.9.0 compatibility) ; ```. I got a bunch of errors in dcft/dcft_df_tensor.cc about how the compiler can't recognize "">>"", so I changed all instances of "">>"" to ""> >"". This seems to work, but I get another error in detci/ciwave.h. . ```; In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(414): error: namespace ""std"" has no member ""tuple""; std::vector<std::tuple<int, int> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(414): error: expected a "">""; std::vector<std::tuple<int, int> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(414): error: expected a "")""; std::vector<std::tuple<int, int> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(434): error: namespace ""std"" has no member ""tuple""; std::vector<std::tuple<int, int, double> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(434): error: expected a "">""; std::vector<std::tuple<int, int, double> > states_vec);; ^. In file included from /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc(49):; /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/ciwave.h(434): error: expected a "")""; std::vector<std::tuple<int, int, double> > states_vec);; ^. compilation aborted for /Users/kevinhannon/Programs/psi4/psi4src/src/bin/detci/params.cc (code 2); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444#issuecomment-232825635:1081,error,error,1081,https://psicode.org,https://github.com/psi4/psi4/issues/444#issuecomment-232825635,4,['error'],['error']
Availability,"uble,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEA",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44941,error,error,44941,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"uh-oh, it's finding pedantic errors in integratorxx now `/include/integratorxx/generators/s2_factory.hpp:24:2: error: extra ‘;’ [-Wpedantic]` . this would be a fault of our appending to `CMAKE_CXX_FLAGS`, which wasn't so outrageous back in the day. thinking about it, there would be a lot more of these interferences with other projects if the CI wasn't detecting so much as pre-built. which means that developers building deps from source will likely have builds fail since force_pydantic defualts to ON and if the dep projects aren't pedantic clean. so this was probably a lucky block to the merge. I'm not sure right off if there's a quick+good solution. you could move the option to here https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L222 _after_ the externals have been added. and maybe turn the default to OFF but add it (`-D`) as ON to the azure CI. I'm going to put a needs-changes block so I remember it isn't just a spurious test fail in the merge queue. lmk if you disagree with any of my hasty conclusions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547:29,error,errors,29,https://psicode.org,https://github.com/psi4/psi4/pull/3145#issuecomment-2015930547,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"ult the top-level CMakeLists.txt to get building again. See [here](https://github.com/psi4/psi4/pull/442) for more information. . **Boost:**; Much of the Boost functionality that we have depended on in Psi4 has been implemented in C++11. In order to keep Psi4 up to date with best C++11 practices, reduce complexity, and generally remove several headaches, Boost has been removed from Psi4. The C++ Python bindings have been moved to PyBind11. See [here](https://github.com/psi4/psi4/issues/450) for more information. **Inversion:**; Currently the hybrid Python/C++ architecture of Psi4 is in an odd spot where Psi4 itself is a C++ program that calls an input file as a Python executable. This circular process will be removed and Psi4 itself will become a Python library capable of being imported just like any other module. This will allow Psi4 to be used in a normal python workflow with other scientific python programs like OpenMM, iPython, MolDesign, etc. In addition, python-based error messages will be more expressive and accurate. For users who enjoy the current Psithon interface the current Psi4 Psithon parsing equipment will be moved to a script named ""psi4"" in the binary location. This will allow all current Psi4 input files to be run normally. **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:1794,error,error,1794,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['error'],['error']
Availability,"undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: erro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3159,error,error,3159,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,undefined symbol error when running test.in,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675:17,error,error,17,https://psicode.org,https://github.com/psi4/psi4/issues/675,1,['error'],['error']
Availability,"unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors genera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:4222,error,error,4222,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,update error message box: preserve newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1868:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/pull/1868,1,['error'],['error']
Availability,"urve(). # Save bond lengths and energies to a text file; data_file = 'CF_PEC_1_data.csv'; with open(data_file, 'w') as file:; file.write(""Bond Length (Angstrom) Energy (Hartree)\n""); for length, energy in zip(bond_lengths, energies):; file.write(f""{length:.6f} {energy:.8f}\n""). print(f""Potential energy data saved to {data_file}""). # Plot the potential energy curve; plt.figure(figsize=(8, 6)); plt.plot(bond_lengths, energies, marker='o', linestyle='-', color='b', label='First Excited State Energy Curve'); plt.xlabel('Bond Length (Angstrom)'); plt.ylabel('Energy (Hartree)'); plt.title('Potential Energy Curve for CF Molecule (First Excited State)'); plt.grid(True); plt.legend(); plt.tight_layout(). # Save the plot as an image file; plot_file = 'CF_PEC_Psi4_1.png'; plt.savefig(plot_file); print(f""Plot saved as {plot_file}""). # Display the plot; plt.show(). The error I got is: ; Error: option TDSCF_TYPE is not contained in the list of available options. Error: option TDSCF_TYPE is not contained in the list of available options. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Did you mean? SCF_TYPE MCSCF_TYPE SCF_TYPE. Error at bond length 5.000000000000004: Error setting options: {'tdscf_type': ('full', RuntimeError('\nFatal Error: TDSCF_TYPE is not a valid option.\nError occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/liboptions/liboptions.h on line: 55\nThe most recent 5 function calls were:\n\npsi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)\n'))}; Potential energy data saved to CF_PEC_1_data.csv; Plot saved as CF_PEC_Psi4_1.png. And here's the script I ran to see the available methods and options: ; import psi4. # Test common methods to see if they are available; methods_to_test = ['scf', 'mp2', 'ccsd', 'eom-ccsd', 'td-dft']; available_methods = []. for method in methods_to_test:; try:; psi4.energy(method); available_methods.append(method);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845:4645,Error,Error,4645,https://psicode.org,https://github.com/psi4/psi4/issues/3181#issuecomment-2192730845,2,"['Error', 'avail']","['Error', 'available']"
Availability,"used) with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! ADIIS minimization failed. File a bug, and include your entire input and output !; ! files. !; ! !; !----------------------------------------------------------------------------------!; ```. The following input, an expansion of both the initial and final grids, also fails:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type cosx; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; cosx_spherical_points_initial 146 ; cosx_radial_point_initial 50 ; cosx_spherical_points_final 302; cosx_radial_points_final 75 ; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. This one fails in the SAD-guess iteration, with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::diagonalize: DSYEV failed! !; ! Error occurred in file: !; ! /theoryfs2/ds/dpoole34/Documents/Codes/psi4/psi4/src/psi4/libmints/matrix.cc !; ! on line: 1715 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::diagonalize(psi::Matrix&, psi::Vector&, psi::diagonalize_order) !; ! !; !----------------------------------------------------------------------------------!; ```. Various things can be switched, with equally varying effects:; * Switching the COSX_PRUNING_SCHEME from ROBUST to TREUTLER fixes these calculations.; * Switching from 146 spherical points to either 110 or 170 fixes these calculations.; * Switching from 50 radial points to either 55 or 45 does _not_ fix these calculations.; * Switching from water to benzene does _not_ fix these calculations. Finally, from my observation, the problem seems to be lo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:1793,error,error,1793,https://psicode.org,https://github.com/psi4/psi4/issues/2890,3,"['Error', 'error']","['Error', 'error']"
Availability,"using intel-gdb I am getting a segfault at:; `0x00002aaac4d3f06e in std::local_Rb_tree_decrement (__x=0x2aaaae4b3ff0 <psi::SphericalGrid::lebedev_mapping_+8>)`. Possibly multi-threading related, since I have not seen an error for single-threaded _yet_.; edit: Also no error for a `debug` compilation yet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366#issuecomment-441222929:220,error,error,220,https://psicode.org,https://github.com/psi4/psi4/issues/1366#issuecomment-441222929,2,['error'],['error']
Availability,"ut = ""\nsymmetry c1\nno_reorient\nno_com""; mol = psi4.geometry(molecule_string + add_input); N_active = 11 # Define the total number of active MOs.; N_frozen = 4 # Define the number of frozen occupied MO; N_virtual = 30 # Define the total number of virtual MOs that will be discarded; psi4.set_options({ 'ACTIVE' : [ N_active ],\; 'FROZEN_DOCC' : [ N_frozen ],\; 'FROZEN_UOCC' : [ N_virtual],\; 'DIAG_METHOD' : 'DAVIDSON',\; 'CI_MAXITER' : 200\; }). # assuming you have stored you scf_wfn into water-ammonia.npy:; original_wfn = psi4.core.Wavefunction.from_file(""water-ammonia""). print(""HF energy:"",original_wfn.energy()); CASCI_energy = psi4.energy('fci', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASCI energy:"",CASCI_energy); CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASSCF :"",CASSCF_energy); ```. This outputs:; ```; HF energy : -130.74589276437956; CASCI energy : -130.7730891288199; ```. and then the error:; ```; ==> Setting up CI strings <==. There are 462 alpha and 462 beta strings; The CI space requires 213444 (2.13E+05) determinants and 1 blocks. ==> Setting up MCSCF integrals <==. Could not find requested basisset (DF_BASIS_SCF).Traceback (most recent call last):; File ""PSI4_CAS_sim.py"", line 89, in <module>; CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 570, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4804, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 100, in mcscf_solver; mcscf_obj = ciwfn.mcscf_object(); RuntimeError: ; Fatal Error: Wavefunction::get_basisset: Re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1871:1516,error,error,1516,https://psicode.org,https://github.com/psi4/psi4/issues/1871,1,['error'],['error']
Availability,v1.7 PSIO_ERROR + forrtl: error + core dumped,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:26,error,error,26,https://psicode.org,https://github.com/psi4/psi4/issues/2970,1,['error'],['error']
Availability,"v2rdm strikes again! :-). fwiw, the original author (DePrince) isn't dedicated to preserving the plugin, but it's handy for catching things that may affect downstream users. Right now we're pulling from https://github.com/loriab/v2rdm_casscf/tree/v2rdm8, so if you want to PR a switchout of ERISeive to there for post-1.8, that'd be fine. In any case, it might be worth getting in a deprecation warning now for v1.8 on ERISeive.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2933#issuecomment-1527847196:156,down,downstream,156,https://psicode.org,https://github.com/psi4/psi4/pull/2933#issuecomment-1527847196,1,['down'],['downstream']
Availability,v2rdm_casscf compilation failure: another OpenMP issue,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1063:25,failure,failure,25,https://psicode.org,https://github.com/psi4/psi4/issues/1063,1,['failure'],['failure']
Availability,"values. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure. ## Questions; - [x] Is `libciomr` a good place for the new wrappers to live in? The one they are replacing is there, so it seemed like as good of a place as any. ## Checklist; - [x] No new features; - [x] 503/503 ctests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:2364,failure,failure,2364,https://psicode.org,https://github.com/psi4/psi4/pull/2686,4,['failure'],['failure']
Availability,"vates conda env.; eval $(conda/psi4-path-advisor.py env); # (3) generate cmake cache file from conda env. ""eval $(...)"" configures and builds with cmake.; eval $(conda/psi4-path-advisor.py cmake); shows up in p4dev; =========================================; (B) flexible usage; =========================================; # (1) get code from GitHub; git clone https://github.com/psi4/psi4.git && cd psi4; # (2.0) consider dependency options; conda/psi4-path-advisor.py env -h; # (2.1) generate env spec file from codedeps.yaml.; conda/psi4-path-advisor.py env -n p4dev310 --python 3.10 --disable addons --lapack openblas; #> conda env create -n p4dev310 -f /home/psi4/env_p4dev310.yaml && conda activate p4dev310; # (2.2) edit env_p4dev310.yaml to customize software packages.; # (2.3) issue suggested or customized command to create and activate conda env.; conda env create -n p4dev310 -f /home/psi4/env_p4dev310.yaml && conda activate p4dev310; ```; - [x] For packagers or other high-level what-does-it-need folks, dependency info is programmatically available now through codedeps.yaml. ## Dev notes & details; - [x] add `codedeps.yaml` file that makes dependency and ecosystem information programmatically accessible. Presently useful for (1) people and (2) the in-repo psi4-path-advisor.py script, but more uses can follow.; - [x] add in-repo `conda/psi4-path-advisor.py` script to serve as build helper. this is the main point of the PR. will elaborate more in future.; - [x] there's a tidy new way of defining flags that are essential for the compiler _with_ the compiler in `CMAKE_<LANG>_COMPILER` instead of cluttering up the user choice var `CMAKE_<LANG>_FLAGS`. This is especially relevant for intel compilers that need gcc passed. There's something that's not set up right yet for Intel Clang. Thus, we need to pass `CMAKE_<LANG>_COMPILER_ARG1` through to psi4 subproject and all other externals.; - [x] let ctest tests run whether old or new d3 and gcp implementations present.; - [x] d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:1991,avail,available,1991,https://psicode.org,https://github.com/psi4/psi4/pull/3021,1,['avail'],['available']
Availability,"vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>, true, false,; > boost::shared_ptrpsi::Matrix, unsigned long,; > boost::shared_ptrpsi::Matrix; > ::base_set_item(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&, _object_,; > _object_) in export_mints.cc.o; > ; > boost::python::vector_indexing_suitestd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true,; > boost::python::detail::final_vector_derived_policiesstd::__1::vector<boost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >, true>; > ::base_append(std::__1::vectorboost::shared_ptr<psi::Matrix,; > std::__1::allocatorboost::shared_ptr<psi::Matrix > >&,; > boost::python::api::object) in export_mints.cc.o; > ...; > ""_PyExc_ValueError"", referenced from:; > boost::python::handle_exception_impl(boost::function0<void>) in; > libboost_python-1_57.a(errors.o); > ""_PyFile_AsFile"", referenced from:; > boost::python::exec_file(boost::python::str,; > boost::python::api::object, boost::python::api::object) in; > libboost_python-1_57.a(exec.o); > ""_PyFile_FromString"", referenced from:; > boost::python::exec_file(boost::python::str,; > boost::python::api::object, boost::python::api::object) in; > libboost_python-1_57.a(exec.o); > ""_PyFloat_FromDouble"", referenced from:; > boost::python::to_python_value<double const&>::operator()(double; > const&) const in export_mints.cc.o; > boost::python::to_python_value<double&>::operator()(double const&); > const in export_mints.cc.o; > ; > boost::python::converter::arg_to_python<double>::arg_to_python(double; > const&) in export_mints.cc.o; > boost::python::to_python_value<double const&>::operator()(double; > const&) const in export_functional.cc.o; > boost::python::to_python_value<double const&>::operator()(double; > const&) const in export_chkpt.cc.o; > boost::python::to_python_value<double const&>::",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131150834:29445,error,errors,29445,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131150834,1,['error'],['errors']
Availability,"version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given arguments:. ""VERSION_LESS"" ""4.9"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:168 (include). -- Configuring incomplete, errors occurred!; See also ""/media/BIGdisk/psi4/objdir/CMakeFiles/CMakeOutput.log"".; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ cmake --version; cmake version 3.9.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; (p4dev35) termo@Ubuntu16:/media/BIGdisk/psi4$ git describe; v1.2rc1. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:5158,Error,Error,5158,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,2,"['Error', 'error']","['Error', 'errors']"
Availability,"version from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undecl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3861,error,error,3861,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"version. > Traceback (most recent call last):; > File ""/root/miniconda3/envs/psi4/bin/psi4"", line 184, in <module>; > import psi4; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/__init__.py"", line 82, in <module>; > from .driver import endorsed_plugins; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; > import v2rdm_casscf; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; > psi4.core.plugin_load(sofile); > RuntimeError:; > Fatal Error: load_plugin: Cannot open library: /root/miniconda3/envs/psi4/lib/python3.7/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZN3psi8ERISieveC1ESt10shared_ptrINS_8BasisSetEEd; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1573157589938/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; > The most recent 5 function calls were:; > ; > ; > forrtl: severe (174): SIGSEGV, segmentation fault occurred; > Image PC Routine Line Source; > libgdma.so 00007FDBC5B360DC for__signal_handl Unknown Unknown; > libpthread-2.27.s 00007FDBD8DF2890 Unknown Unknown Unknown; > ld-2.27.so 00007FDBD9016A31 Unknown Unknown Unknown; > libc-2.27.so 00007FDBD8B472DF _dl_catch_excepti Unknown Unknown; > libc-2.27.so 00007FDBD8B4736F _dl_catch_error Unknown Unknown; > libdl-2.27.so 00007FDBD87D1735 Unknown Unknown Unknown; > libdl-2.27.so 00007FDBD87D10B3 dlclose Unknown Unknown; > core.cpython-37m- 00007FDBC6A8034A Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC672D382 Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC6756337 Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC6762AB4 Unknown Unknown Unknown; > python3.7 00007FDBD94D3B65 PyCFunction_Call Unknown Unknown; > python3.7 00007FDBD95B2E74 Unknown Unknown Unknown; > python3.7 00007FDBD95B99E7 Py_FinalizeEx Unknown Unknown; > python3.7 00007FDBD95D1C63 Unknown Unknown Unknown; > python3.7 0000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1750:1136,fault,fault,1136,https://psicode.org,https://github.com/psi4/psi4/issues/1750,1,['fault'],['fault']
Availability,version: Rev {master} 0d10de8. After entering the SOSCF psi4 exists with a segmentation fault. It prints the soscf header if soscf_print true. Occurs e.g. when I run soscf1 test case with PBE instead of HF. I don't know if SOSCF should work with DFT or not.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256:88,fault,fault,88,https://psicode.org,https://github.com/psi4/psi4/issues/256,1,['fault'],['fault']
Availability,"vided into several (3-4) regions where the; > outer region gets the most accurate grid and the grid get step-wise more; > coarse towards the inner region(s).; >; > Additionally this PR changes the Bragg-Slater (BS) radii and completes the; > Treutler-Ahlrichs integration code with the recommended mapping values. Old; > radii were of unknown origin.; >; > *Because of the updated BS radii, this PR will impact the total energies; > of any DFT calculation and can change how many grid points are generated; > even without pruning.* (11/33 DFT tests fail); > Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - updated BS radii and extended to 104 elements; > - implementation of missing Treutler-Eta mapping parameter; > - DFT_PRUNE_TYPE keyword:; > - Treutler grid pruning (DFT_PRUNE_TYPE=TREUTLER); > - a more robust grid pruning (DFT_PRUNE_TYPE=ROBUST); > - old pruning using a function (DFT_PRUNE_TYPE=FUNCTION); > - modified Becke mu from Ochsenfeld for smoother integration (however; > no time savings); > - possibility to scale Treutler-Etas to better treat diffuse basis sets; > - better print out of options; > - testing and error overview; > - option to properly disable all pruning (currently only indirect way); >; > Questions; >; > - How to C++? Explicit guidance or help is welcome.; > - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; > and confusing option?; > - Do users want access to custom pruning, e.g. via an array to define; > grids for RadialPruneMgr::ShellPruning ?; > - Pruning enabled by default? (I would vote yes); >; > Checklist; >; > - Documentation; > - Tests added; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Stat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:1260,robust,robust,1260,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,3,"['ROBUST', 'error', 'robust']","['ROBUST', 'error', 'robust']"
Availability,"vs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 1570, in update_geometry; self.set_point_group(self.find_point_group()); ^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2423, in find_point_group; pg = self.find_highest_point_group(tol) # D2h subgroup; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2523, in find_highest_point_group; return PointGroup(pg_bits); ^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1530, in __init__; self.constructor_bits(*args); File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1573, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1755, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). psi4.driver.qcdb.exceptions.ValidationError: Unrecognized point group bits: 80. Printing out the relevant lines from the Psithon --> Python processed input file:; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; """"""); core.IO.set_default_namespace(""""); --> energy(""BP86/sto-3g""). !------------------------------------!; ! !; ! Unrecognized point group bits: 80 !; ! !; !------------------------------------!. Psi4 stopped on: Friday, 30 August 2024 04:55PM; Psi4 wall time for execution: 0:00:00.03. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3213:5437,error,error,5437,https://psicode.org,https://github.com/psi4/psi4/issues/3213,1,['error'],['error']
Availability,"way your objdir and recompile from scratch. . -Daniel Smith; Sent from my iPhone. . > On Nov 30, 2016, at 23:06, nmayhall <notifications@github.com> wrote:; > ; > After a recent git pull, psi4 failed to compile. It seems that the error was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi so all Python Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile.; > ; > If it helps, I'm running Ubuntu, with gnu compilers.; > ; > Here's the error message:; > ; > /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’: /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’ if (py::isinstance<py::list>(values[n])) { ^ /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token if (py::isinstance<py::list>(values[n])) { ^ src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1 make[5]: *** Waiting for unfinished jobs.... ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed make[4]: *** [src/C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536#issuecomment-264074419:1058,error,error,1058,https://psicode.org,https://github.com/psi4/psi4/issues/536#issuecomment-264074419,1,['error'],['error']
Availability,wb97X-V with density threshold of 1e-10 stops before printing the first SCF/SAD energy in the SCF iteration output. I dont have access to gcc5 and I cannot reproduce the error otherwise for now. e.g.:; https://dev.azure.com/psi4/psi4/_build/results?buildId=2170&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=895e49e6-cad9-5b25-6d66-c0b61859d928&l=801,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1943:170,error,error,170,https://psicode.org,https://github.com/psi4/psi4/issues/1943,1,['error'],['error']
Availability,"whoa, poltype needs a lot of software! the segfault you posted is not in my power to interpret. do you have access to the file or commands poltype is submitting to psi4? I suspect a bad interaction among software libraries. does `psi4 --test` run ok (that is, no failures)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033:263,failure,failures,263,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761235033,1,['failure'],['failures']
Availability,"whoops, we forgot that this PR was adding a setter to accompany an existing getter, not exposing afresh, so a change in case was not appropriate. as usual, v2rdm found the trouble:. ```; /Users/github/builds/conda-builds/v2rdm_casscf_1608103337174/work/v2rdm_solver.cc:420:57: error: no member named 'Lagrangian' in 'psi::Wavefunction'; did you mean 'lagrangian'?; Lagrangian_ = SharedMatrix(reference_wavefunction_->Lagrangian());; ^~~~~~~~~~; lagrangian; /Users/github/builds/conda-builds/v2rdm_casscf_1608103337174/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho/include/psi4/libmints/wavefunction.h:576:18: note: 'lagrangian' declared here; SharedMatrix lagrangian() const;; ^; ```. Please change back to caps C-side. I'm inclined to have Py-side match C-side, but there's leeway for the export_ files. Sorry for the zigzag advice, @lcyyork.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2064#issuecomment-745855220:277,error,error,277,https://psicode.org,https://github.com/psi4/psi4/pull/2064#issuecomment-745855220,1,['error'],['error']
Availability,wind down psi4/psi4private,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/508:5,down,down,5,https://psicode.org,https://github.com/psi4/psi4/issues/508,1,['down'],['down']
Availability,with ENABLE_GENERIC=OFF:; ```; -- BLAS will be searched for based on MATH_ROOT=/home/termo/intel/mkl/ ; -- Found BLAS: MKL (/home/termo/intel/mkl/lib/intel64/libmkl_rt.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;/usr/lib/x86_64-linux-gnu/libdl.so); -- LAPACK will be searched for based on MATH_ROOT=/home/termo/intel/mkl/ ; -- Found LAPACK: MKL (/home/termo/intel/mkl/lib/intel64/libmkl_rt.so); -- Found LAPACK MKL: /home/termo/intel/mkl/lib/intel64/libmkl_rt.so;... ```; with ENABLE_GENERIC=ON:; ```; -- BLAS will be searched for based on MATH_ROOT=/home/termo/intel/mkl/ ; CMake Error at cmake/math/MathLibsFunctions.cmake:216 (message):; -- No external BLAS library found (have you set the MATH_ROOT environment; variable?); Call Stack (most recent call first):; cmake/math/ConfigMath.cmake:105 (config_math_service); external/common/lapack/CMakeLists.txt:12 (include); ```; [CMakeOutput.log](https://pastebin.com/pWwucBCZ),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004:614,Error,Error,614,https://psicode.org,https://github.com/psi4/psi4/issues/1004,1,['Error'],['Error']
Availability,"wrt to the security issues you brought up @yurivict I know that cmake's ExternalProject tools make it possible to check fingerprints after the download step, but this is usually done when some tarball is being downloaded. In our case we are actually using git to clone a repo with the source code, I don't know how you can check the fingerprint for a repo. Now, if we do download any of the external projects as a tarball I completely agree with you that we should probably start checking the fingerprints.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/854#issuecomment-344296003:143,down,download,143,https://psicode.org,https://github.com/psi4/psi4/issues/854#issuecomment-344296003,3,['down'],"['download', 'downloaded']"
Availability,"x-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been written to: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/libint2_external-build; [ 82%] Performing build step for 'libint2_external'; Scanning dependencies of target int-obj; [ 0%] Building CXX object CMakeFiles/int-obj.dir/Unity/unity_2001_cxx.cxx.o; ...; ```. Full outputs of cmake and make are attached. There is furthermore an issue with the adcc plugin. This plugin cannot be built anymore with -DENABLE_adcc=ON as on one hand, PSI4 requires a C++-17 compiler (and this standard seems to be enforced), on the other hand, there is code in the adcc plugin which violates the C++-17 standard (some `throw()` with variable error message) which leads to compilation errors. Best; Stefan. [make.log](https://github.com/psi4/psi4/files/8651531/make.log); [cmake.log](https://github.com/psi4/psi4/files/8651538/cmake.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:2711,error,error,2711,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,['error'],"['error', 'errors']"
Availability,"x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Mode",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3230,error,errors,3230,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['error'],['errors']
Availability,"x_ops`` contains not only the transformed ``aux_operators`` passed by the; 81 # user but also additional ones from the transformation; ---> 82 second_q_ops = problem.second_q_ops(); 83 ; 84 main_operator = self._qubit_converter.convert(. ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\problems\second_quantization\electronic\electronic_structure_problem.py in second_q_ops(self); 62 operator, and (if available) x, y, z dipole operators.; 63 """"""; ---> 64 self._molecule_data = cast(QMolecule, self.driver.run()); 65 self._molecule_data_transformed = cast(QMolecule, self._transform(self._molecule_data)); 66 . ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\drivers\psi4d\psi4driver.py in run(self); 131 os.close(file_fd); 132 try:; --> 133 PSI4Driver._run_psi4(input_file, output_file); 134 if logger.isEnabledFor(logging.DEBUG):; 135 with open(output_file, 'r') as file:. ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\drivers\psi4d\psi4driver.py in _run_psi4(input_file, output_file); 186 logger.error(lines[i]); 187 errmsg += lines[i] + ""\n""; --> 188 raise QiskitNatureError('{} process return code {}\n{}'.format(; 189 PSI4, process.returncode, errmsg)). QiskitNatureError: 'psi4 process return code 1\nTraceback (most recent call last):\n File ""C:\\Users\\user\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\Scripts\\psi4-script.py"", line 336, in <module>\n exec(content)\n\n File ""<string>"", line 31\nSyntaxError: (unicode error) \'unicodeescape\' codec can\'t decode bytes in position 2-3: truncated \\UXXXXXXXX escape\n\nPrinting out the relevant lines from the Psithon --> Python processed input file:\n\n\n!----------------------------------------------------------------------------------!\n! !\n! (unicode error) \'unicodeescape\' codec can\'t decode bytes in position 2-3: !\n! truncated \\UXXXXXXXX escape !\n! !\n!----------------------------------------------------------------------------------!\n\n'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:3183,error,error,3183,https://psicode.org,https://github.com/psi4/psi4/issues/2228,3,['error'],['error']
Availability,"xperimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _absolute energy molecule 35_; * dev. old BS to new BS: 3.41e-07; * (newBS) `NONE` to `ROBUST`: 4.93e-07; * (newBS) `NONE` to `TREUTLER`: 1.46E-04. _gradient energy molecule 35_; * (newBS) MAD `NONE` to `ROBUST`: ~ 1E-7; * (newBS) MAD `NONE` to `TREUTLER`: ~ 1E-05. _grid point reduction molecue 35_; * ``ROBUST = 30.9 %``; * ``TREUTLER = 45.8 %``",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:4656,ROBUST,ROBUST,4656,https://psicode.org,https://github.com/psi4/psi4/pull/1591,5,['ROBUST'],['ROBUST']
Availability,"y makefiles written by cmake.; You don't need to use it in your code, it always works. > You need to build psi4 with the env variable DESTDIR=/tmp/path-to-onstall-psi4-to.; /tmp/path-to-onstall-psi4-to should end up with usr and under it there should be the usual bin, share, etc. Got it, `CMAKE_INSTALL_PREFIX` and envvar `DESTDIR` can work together to produce a working installation (and ugly extra files).; ```; > cmake -H. -Bobjdir -DCMAKE_INSTALL_PREFIX=/usr; > cd objdir && cmake --build .; > make DESTDIR=/psi/gits/testinstall4 install; -- Installing: /psi/gits/testinstall4/usr//bin/psi4; ...; > /psi/gits/testinstall4/usr/bin/psi4 ../tests/tu1-h2o-energy/input.dat ; SCF energy............................................................................PASSED; ```. > DESTDIR is a GNU standard. It is totally separate from CMAKE_INSTALL_PREFIX. Yes, I see [here](https://www.gnu.org/prep/standards/html_node/DESTDIR.html) how it's a GNU recommendation that we're only half complying with (full installation plus aforementioned ugly extra files). > Can you just remove the internal stage directory and make it install like all other cmake based projects?. Not really. The internal stage directory was a compromise so that developers could continue to never have to type `make install` and was a prerequisite to them approving the transition from GNUMake to CMake at all. Since then, the stage/ has proven convenient and robust to support fairly transparent mixing of externally detected and internally build dependencies that makes having lots of dependencies (as opposed to monolithic software) tolerable to the users and developers. I'd be glad to seek or try any tweaks to the build system that remedy this install issue, but on the whole, the internal stage solves a lot and breaks a little. What I'm not quite following is how this issue is blocking you. I'm glad to have finally understood and reproduced the issue, but it sounds like an extra `rm -rf` or two gets the desired behavior?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604:1500,robust,robust,1500,https://psicode.org,https://github.com/psi4/psi4/issues/1301#issuecomment-1325775604,2,"['robust', 'toler']","['robust', 'tolerable']"
Availability,"y: -3.880037726127; * MP2 total energy: -1132.741364981384. OS CCSD correlation energy: -3.064993697167; SS CCSD correlation energy: -0.903832488611; CCSD correlation energy: -3.968826185778; * CCSD total energy: -1132.830153441035. Total time for CCSD iterations: 1811317.23 s (user); 19173.39 s (system); 130498 s (total). Time per iteration: 95332.49 s (user); 1009.13 s (system); 6868.32 s (total). *** tstop() called on r3540 at Thu Feb 6 18:51:34 2014; Module time:; user time = 1837223.92 seconds = 30620.40 minutes; system time = 19850.04 seconds = 330.83 minutes; total time = 134687 seconds = 2244.78 minutes; Total time:; user time = 1839675.94 seconds = 30661.27 minutes; system time = 19901.43 seconds = 331.69 minutes; total time = 134880 seconds = 2248.00 minutes. *** tstart() called on r3540; *** at Thu Feb 6 19:04:50 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 90390.34 mb; memory requirements = 29772.62 mb. Number of abc combinations: 46194526. Computing (T) correction... % complete total time; ```. Stderr. ```; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: 17 (Incorrect block start address); PSIO_ERROR: unit = 255, errval = 17; PSIO_ERROR: 17 (Incorrect b",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-34826327:5861,avail,available,5861,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-34826327,1,['avail'],['available']
Availability,y:762: Psi4 not detecting plugin gpu_dfcc. Build plugin if necessary and add to envvar PYTHONPATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:798: Psi4 not detecting GCP. Add `gcp` to envvar PSIPATH or PATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:909: Psi4 not detecting plugin snsmp2. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_snsmp2); SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:925: Psi4 not detecting plugin resp. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_resp). ================================================================== warnings summary ==================================================================; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:5031,error,error,5031,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['error'],['error']
Availability,"y` for parameter details. """"""; jobrec = {}; jobrec['error'] = ''; jobrec['success'] = None; jobrec['return_output'] = True; prov = {}; prov['creator'] = 'QCDB'; prov['version'] = __version__; prov['routine'] = sys._getframe().f_code.co_name; jobrec['provenance'] = prov. # strip engine hint; if name_hint.startswith('d3-'):; name_hint = name_hint[3:]. opts = {}; opts['level_hint'] = level_hint; opts['params_tweaks'] = param_tweaks; opts['dashcoeff_supplement'] = dashcoeff_supplement. jobrec['molecule'] = molrec; jobrec['method'] = name_hint; _, jobrec['driver'] = parse_dertype(ptype, max_derivative=1); jobrec['options'] = opts; #jobrec['options'] = copy.deepcopy(options). try:; > dftd3_driver(jobrec). ../lib/python3.6/site-packages/psi4/driver/qcdb/intf_dftd3/runner.py:131:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. jobrec = {'driver': 'energy', 'error': ""Dftd3Error('Unsuccessful run. Possibly -D variant not available in dftd3 version.',)"", ...ule': {'elbl': ['', '', '', ''], 'elea': [12, 12, 1, 1], 'elem': ['C', 'C', 'H', 'H'], 'elez': [6, 6, 1, 1], ...}, ...}; verbose = 1. def dftd3_driver(jobrec, verbose=1):; """"""Drive the jobrec@i (input) -> dftd3rec@i -> dftd3rec@io -> jobrec@io (returned) process. Input Fields; ------------. Optional Input Fields; ---------------------. Output Fields; -------------. Optional Output Fields; ----------------------. """"""; if verbose > 2:; print('[1] {} JOBREC PRE-PLANT (j@i) <<<'.format('DFTD3')); pp.pprint(jobrec); print('>>>'). dftd3rec = dftd3_plant(jobrec). # test json roundtrip; jdftd3rec = json.dumps(dftd3rec); dftd3rec = json.loads(jdftd3rec). if verbose > 3:; print('[2] {}REC PRE-SUBPROCESS (m@i) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). dftd3_subprocess(dftd3rec) # updates dftd3rec. if verbose > 3:; print('[3] {}REC POST-SUBPROCESS (m@io) <<<'.format('DFTD3')); pp.pprint(dftd3rec); print('>>>\n'). > dftd3_harvest(jobrec, dftd3rec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:13227,avail,available,13227,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,1,['avail'],['available']
Availability,"ymmetry molecules that make me wonder if we have some; small noise coming from our general SCF gradient machinery. She is hoping; to post an issue on that as soon as she gets a little free time. This; might be a cause of the occasional small differences between analytic and; finite difference gradients observed by @raimis. @raimis, were your tests; run with a 3 point finite difference stencil, or 5 points? 5 points should; be more numerically stable (probably good to also crank up d_convergence; like @andysim did). The check done by @andysim looks pretty clean to me and suggest that, at; least for this test case, the wB97X-D gradients are fine. On Tue, Dec 12, 2017 at 1:44 PM, Andy Simmonett <notifications@github.com>; wrote:. > Thank you very much for looking into this, @raimis; > <https://github.com/raimis> - especially the detailed benchmarks. If my; > memories from way back (circa 2010) are correct, @robparrish; > <https://github.com/robparrish> and I were trying to write a prototype DF; > gradient code and hit a very strange error. The finite difference tests we; > did for hybrids all looked good, but for range-separated functionals we; > were getting quite large noise. The direct range-separated code worked; > fine, confirming that the derivative integrals were correct, and pointing; > the fact that we somehow messed up the chain rule in our haste. Since then; > Rob did a complete rewrite of the entire SCF machinery and made it; > infinitely better so, inspired by your detailed comments, I decided to; > revisit. This input; >; > memory 6Gb; >; > molecule C4NH4 {; > -1 1; > C 0.00000000 0.00000000 2.13868804; > N 0.00000000 0.00000000 4.42197911; > C 0.00000000 0.00000000 -0.46134192; > C -1.47758582 0.00000000 -2.82593059; > C 1.47758582 0.00000000 -2.82593059; > H -2.41269553 -1.74021190 -3.52915989; > H -2.41269553 1.74021190 -3.52915989; > H 2.41269553 1.74021190 -3.52915989; > H 2.41269553 -1.74021190 -3.52915989; > units bohr; > }; >; > set {; > basis 6-3",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-351166112:1138,error,error,1138,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-351166112,1,['error'],['error']
Availability,"yne using basis cc-pvdz. memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; ------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61:1253,error,error,1253,https://psicode.org,https://github.com/psi4/psi4/issues/61,1,['error'],['error']
Availability,"中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormqr，该符号在函数 ""int __cdecl psi::C_DORMQR(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQR@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormr3，该符号在函数 ""int __cdecl psi::C_DORMR3(char,char,int,int,int,int,double *,int,double *,double *,int,double *)"" (?C_DORMR3@psi@@YAHDDHHHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrq，该符号在函数 ""int __cdecl psi::C_DORMRQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormrz，该符号在函数 ""int __cdecl psi::C_DORMRZ(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMRZ@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormtr，该符号在函数 ""int __cdecl psi::C_DORMTR(char,char,char,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMTR@psi@@YAHDDDHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:30985,error,error,30985,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37192,error,error,37192,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemm，该符号在函数 ""void __cdecl psi::C_DGEMM(char,char,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMM@psi@@YAXDDHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgemv，该符号在函数 ""void __cdecl psi::C_DGEMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGEMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dger，该符号在函数 ""void __cdecl psi::C_DGER(int,int,double,double *,int,double *,int,double *,int)"" (?C_DGER@psi@@YAXHHNPEANH0H0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dsbmv，该符号在函数 ""void __cdecl psi::C_DSBMV(char,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DSBMV@psi@@YAXDHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspmv，该符号在函数 ""void __cdecl psi::C_DSPMV(char,int,double,double *,double *,int,double,double *,int)"" (?C_DSPMV@psi@@YAXDHNPEAN0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr，该符号在函数 ""void __cdecl psi::C_DSPR(char,int,double,double *,int,double *)"" (?C_DSPR@psi@@YAXDHNPEANH0@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dspr2，该符号在函数 ""void __cdecl psi::C_DSPR2(char,int,double,double *,int,double *,int,dou",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:11139,error,error,11139,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cde",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29742,error,error,29742,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14837,error,error,14837,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号在函数 ""int __cdecl psi::C_DGTRFS(char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGTRFS@psi@@YAHDHHPEAN000000PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsv，该符号在函数 ""int __cdecl psi::C_DGTSV(int,int,double *,double *,double *,double *,int)"" (?C_DGTSV@psi@@YAHHHPEAN000H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgtsvx，该符号在函数 ""int __cdecl psi::C_DGTSVX(char,char,int,int,double *,double *,double *,double *,double *,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DGTSVX@psi@@YAHDDHHPEAN000000PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrf，该符号在函数 ""int __cdecl psi::C_DGTTRF(int,double *,double *,double *,double *,int *)"" (?C_DGTTRF@psi@@YAHHPEAN000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgttrs，该符号在函数 ""int __cdecl psi::C_DGTTRS(char,int,int,double *,double *,double *,double *,int *,double *,int)"" (?C_DGTTRS@psi@@YAHDHHPEAN000PEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhgeqz，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:27431,error,error,27431,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号在函数 ""int __cdecl psi::C_DPOSV(char,int,int,double *,int,double *,int)"" (?C_DPOSV@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dposvx，该符号在函数 ""int __cdecl psi::C_DPOSVX(char,char,int,int,double *,int,double *,int,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPOSVX@psi@@YAHDDHHPEANH0HD00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrf，该符号在函数 ""int __cdecl psi::C_DPOTRF(char,int,double *,int)"" (?C_DPOTRF@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35278,error,error,35278,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"号在函数 ""void __cdecl psi::fnocc::DSPEV(char &,char &,long &,double *,double *,double *,long &,double *,long &)"" (?DSPEV@fnocc@psi@@YAXAEAD0AEAJPEAN22121@Z) 中被引用; F:\fnocc.lib(blas.cc.obj) : error LNK2019: 无法解析的外部符号 dgesvd_，该符号在函数 ""void __cdecl psi::fnocc::DGESVD(char &,char &,long &,long &,double *,long &,double *,double *,long &,double *,long &,double *,long &,long &)"" (?DGESVD@fnocc@psi@@YAXAEAD0AEAJ1PEAN122121211@Z) 中被引用; F:\optking.lib(linear_algebra.cc.obj) : error LNK2019: 无法解析的外部符号 dgeev_，该符号在函数 opt_asymm_matrix_eig 中被引用; F:\psimrcc.lib(manybody.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(heff_diagonalize.cc.obj) : error LNK2001: 无法解析的外部符号 dgeev_; F:\psimrcc.lib(blas_diis.cc.obj) : error LNK2019: 无法解析的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9110,error,error,9110,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBEVD@psi@@YAHDDHHPEANH00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevx，该符号在函数 ""int __cdecl psi::C_DSBEVX(char,char,char,int,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBEVX@psi@@YAHDDDHHPEANH0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgst，该符号在函数 ""int __cdecl psi::C_DSBGST(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DSBGST@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgv，该符号在函数 ""int __cdecl psi::C_DSBGV(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *)"" (?C_DSBGV@psi@@YAHDDHHHPEANH0H00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvd，该符号在函数 ""int __cdecl psi::C_DSBGVD(char,char,int,int,int,double *,int,double *,int,double *,double *,int,double *,int,int *,int)"" (?C_DSBGVD@psi@@YAHDDHHHPEANH0H00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbgvx，该符号在函数 ""int __cdecl psi::C_DSBGVX(char,char,char,int,int,int,double *,int,double *,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSBGVX@psi@@YAHDDDHHHPEANH0H0HNNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbtrd，该符号在函数 ""int __cdecl psi::C_DSBTRD(char,char,int,int,double *,int,double *,double *,double *,int,double *)"" (?C_DSBTRD@psi@@YAHDDHHPEANH000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsgesv，该符号在函数 ""int __cdecl psi::C_DSGESV(int,int,double *,int,int *,double *,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:39131,error,error,39131,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C_DGBBRD(char,int,int,int,int,int,double *,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DGBBRD@psi@@YAHDHHHHHPEANH000H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbcon，该符号在函数 ""int __cdecl psi::C_DGBCON(char,int,int,int,double *,int,int *,double,double *,double *,int *)"" (?C_DGBCON@psi@@YAHDHHHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbequ，该符号在函数 ""int __cdecl psi::C_DGBEQU(int,int,int,int,double *,int,double *,double *,double *,double *,double *)"" (?C_DGBEQU@psi@@YAHHHHHPEANH00000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbrfs，该符号在函数 ""int __cdecl psi::C_DGBRFS(char,int,int,int,int,double *,int,double *,int,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DGBRFS@psi@@YAHDHHHHPEANH0HPEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsv，该符号在函数 ""int __cdecl psi::C_DGBSV(int,int,int,int,double *,int,int *,double *,int)"" (?C_DGBSV@psi@@YAHHHHHPEANHPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbsvx，该符号在函数 ""int __cdecl psi::C_DGBSVX(char,char,int,int,int,int,double *,int,double *,int,int *,char,double *,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DGBSVX@psi@@YAHDDHHHHPEANH0HPEAHD000H0H00001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbtrf，该符号在函数 ""int __cdecl psi::C_DGBTRF(int,int,int,int,double *,int,int *)"" (?C_DGB",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:16129,error,error,16129,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgrq，该符号在函数 ""int __cdecl psi::C_DORGRQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGRQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgtr，该符号在函数 ""int __cdecl psi::C_DORGTR(char,int,double *,int,double *,double *,int)"" (?C_DORGTR@psi@@YAHDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormbr，该符号在函数 ""int __cdecl psi::C_DORMBR(char,char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMBR@psi@@YAHDDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormhr，该符号在函数 ""int __cdecl psi::C_DORMHR(char,char,int,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMHR@psi@@YAHDDHHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormlq，该符号在函数 ""int __cdecl psi::C_DORMLQ(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMLQ@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dormql，该符号在函数 ""int __cdecl psi::C_DORMQL(char,char,int,int,int,double *,int,double *,double *,int,double *,int)"" (?C_DORMQL@psi@@YAHDDHHHPEANH00H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:29930,error,error,29930,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int,int,int,int,double *,double *,double *,int,double *,int,double *,int,double *)"" (?C_DBDSQR@psi@@YAHDHHHHPEAN00H0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddisna，该符号在函数 ""int __cdecl psi::C_DDISNA(char,int,int,double *,double *)"" (?C_DDISNA@psi@@YAHDHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dgbbrd，该符号在函数 ""int __cdecl psi::C",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14634,error,error,14634,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl ps",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37003,error,error,37003,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpteqr，该符号在函数 ""int __cdecl psi::C_DPTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DPTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptrfs，该符号在函数 ""int __cdecl psi::C_DPTRFS(int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *)"" (?C_DPTRFS@psi@@YAHHHPEAN0000H0H000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsv，该符号在函数 ""int __cdecl psi::C_DPTSV(int,int,double *,double *,double *,int)"" (?C_DPTSV@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptsvx，该符号在函数 ""int __cdecl psi::C_DPTSVX(char,int,int,double *,double *,double *,double *,double *,int,double *,int,double *,double *,double *,double *)"" (?C_DPTSVX@psi@@YAHDHHPEAN0000H0H0000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrf，该符号在函数 ""int __cdecl psi::C_DPTTRF(int,double *,double *)"" (?C_DPTTRF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpttrs，该符号在函数 ""int __cdecl psi::C_DPTTRS(int,int,double *,double *,double *,int)"" (?C_DPTTRS@psi@@YAHHHPEAN00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbev，该符号在函数 ""int __cdecl psi::C_DSBEV(char,char,int,int,double *,int,double *,double *,int,double *)"" (?C_DSBEV@psi@@YAHDDHHPEANH00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsbevd，该符号在函数 ""int __cdecl psi::C_DSBEVD(char,char,int,int,double *,int,do",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:37435,error,error,37435,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsycon，该符号在函数 ""int __cdecl psi::C_DSYCON(char,int,double *,int,int *,double,double *,double *,int *)"" (?C_DSYCON@psi@@YAHDHPEANHPEAHN001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyev，该符号在函数 ""int __cdecl psi::C_DSYEV(char,char,int,double *,int,double *,double *,int)"" (?C_DSYEV@psi@@YAHDDHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevd，该符号在函数 ""int __cdecl psi::C_DSYEVD(char,char,int,double *,int,double *,double *,int,int *,int)"" (?C_DSYEVD@psi@@YAHDDHPEANH00HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevr，该符号在函数 ""int __cdecl psi::C_DSYEVR(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSYEVR@psi@@YAHDDDHPEANHNNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsyevx，该符号在函数 ""int __cdecl psi::C_DSYEVX(char,char,char,int,double *,int,double,double,int,int,double,int *,double *,double *,int,double *,int,int *,int *)"" (?C_DSYEVX@psi@@YAHDDDHPEANHNNHHN",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:45686,error,error,45686,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"的外部符号 ddot_，该符号在函数 ""public: void __cdecl psi::psimrcc::CCBLAS::diis(int,double,enum psi::psimrcc::DiisType)"" (?diis@CCBLAS@psimrcc@psi@@QEAAXHNW4DiisType@23@@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dswap，该符号在函数 ""void __cdecl psi::C_DSWAP(unsigned __int64,double *,int,double *,int)"" (?C_DSWAP@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 daxpy，该符号在函数 ""void __cdecl psi::C_DAXPY(unsigned __int64,double,double *,int,double *,int)"" (?C_DAXPY@psi@@YAX_KNPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dcopy，该符号在函数 ""void __cdecl psi::C_DCOPY(unsigned __int64,double *,int,double *,int)"" (?C_DCOPY@psi@@YAX_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 drot，该符号在函数 ""void __cdecl psi::C_DROT(unsigned __int64,double *,int,double *,int,double,double)"" (?C_DROT@psi@@YAX_KPEANH1HNN@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dscal，该符号在函数 ""void __cdecl psi::C_DSCAL(unsigned __int64,double,double *,int)"" (?C_DSCAL@psi@@YAX_KNPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 ddot，该符号在函数 ""double __cdecl psi::C_DDOT(unsigned __int64,double *,int,double *,int)"" (?C_DDOT@psi@@YAN_KPEANH1H@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dnrm2，该符号在函数 ""double __cdecl psi::C_DNRM2(unsigned __int64,double *,int)"" (?C_DNRM2@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dasum，该符号在函数 ""double __cdecl psi::C_DASUM(unsigned __int64,double *,int)"" (?C_DASUM@psi@@YAN_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 idamax，该符号在函数 ""unsigned __int64 __cdecl psi::C_IDAMAX(unsigned __int64,double *,int)"" (?C_IDAMAX@psi@@YA_K_KPEANH@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dgbmv，该符号在函数 ""void __cdecl psi::C_DGBMV(char,int,int,int,int,double,double *,int,double *,int,double,double *,int)"" (?C_DGBMV@psi@@YAXDHHHHNPEANH0HN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:9843,error,error,9843,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"的外部符号 dsyrk，该符号在函数 ""void __cdecl psi::C_DSYRK(char,char,int,int,double,double *,int,double,double *,int)"" (?C_DSYRK@psi@@YAXDDHHNPEANHN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbmv，该符号在函数 ""void __cdecl psi::C_DTBMV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBMV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtbsv，该符号在函数 ""void __cdecl psi::C_DTBSV(char,char,char,int,int,double *,int,double *,int)"" (?C_DTBSV@psi@@YAXDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpmv，该符号在函数 ""void __cdecl psi::C_DTPMV(char,char,char,int,double *,double *,int)"" (?C_DTPMV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtpsv，该符号在函数 ""void __cdecl psi::C_DTPSV(char,char,char,int,double *,double *,int)"" (?C_DTPSV@psi@@YAXDDDHPEAN0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmm，该符号在函数 ""void __cdecl psi::C_DTRMM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRMM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrmv，该符号在函数 ""void __cdecl psi::C_DTRMV(char,char,char,int,double *,int,double *,int)"" (?C_DTRMV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsm，该符号在函数 ""void __cdecl psi::C_DTRSM(char,char,char,char,int,int,double,double *,int,double *,int)"" (?C_DTRSM@psi@@YAXDDDDHHNPEANH0H@Z) 中被引用; F:\qt.lib(blas_intfc23.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsv，该符号在函数 ""void __cdecl psi::C_DTRSV(char,char,char,int,double *,int,double *,int)"" (?C_DTRSV@psi@@YAXDDDHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsdc，该符号在函数 ""int __cdecl psi::C_DBDSDC(char,char,int,double *,double *,double *,int,double *,int,double *,int *,double *,int *)"" (?C_DBDSDC@psi@@YAHDDHPEAN00H0H0PEAH01@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dbdsqr，该符号在函数 ""int __cdecl psi::C_DBDSQR(char,int",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:14247,error,error,14247,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsen，该符号在函数 ""int __cdecl psi::C_DTRSEN(char,char,int,double *,int,double *,int,double *,double *,int *,double *,double *,double *,int,int *,int)"" (?C_DTRSEN@psi@@YAHDDHPEANH0H00PEAH000H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsna，该符号在函数 ""int __cdecl psi::C_DTRSNA(char,char,int,double *,int,double *,int,double *,int,double *,double *,int,int *,double *,int,int *)"" (?C_DTRSNA@psi@@YAHDDHPEANH0H0H00HPEAH0H1@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrsyl，该符号在函数 ""int __cdecl psi::C_DTRSYL(char,char,int,int,int,double *,int,double *,int,double *,int,double *)"" (?C_DTRSYL@psi@@YAHDDHHHPEANH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtri，该符号在函数 ""int __cdecl psi::C_DTRTRI(char,char,int,double *,int)"" (?C_DTRTRI@psi@@YAHDDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrtrs，该符号在函数 ""int __cdecl psi::C_DTRTRS(char,char,char,int,int,double *,int,double *,int)"" (?C_DTRTRS@psi@@YAHDDDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtzrzf，该符号在函数 ""int __cdecl psi::C_DTZRQF(int,int,double *,int,double *)"" (?C_DTZRQF@psi@@YAHHHPEANH0@Z) 中被引用; F:\src\core.cp37-win_amd64.pyd : fatal error LNK1120: 220 个无法解析的外部命令; ninja: build stopped: subcommand failed.; ninja: build stopped: subcommand failed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:53362,error,error,53362,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstedc，该符号在函数 ""int __cdecl psi::C_DSTEDC(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEDC@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstegr，该符号在函数 ""int __cdecl psi::C_DSTEGR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEGR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstein，该符号在函数 ""int __cdecl psi::C_DSTEIN(int,double *,double *,int,double *,int *,int *,double *,int,double *,int *,int *)"" (?C_DSTEIN@psi@@YAHHPEAN0H0PEAH10H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsteqr，该符号在函数 ""int __cdecl psi::C_DSTEQR(char,int,double *,double *,double *,int,double *)"" (?C_DSTEQR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsterf，该符号在函数 ""int __cdecl psi::C_DSTERF(int,double *,double *)"" (?C_DSTERF@psi@@YAHHPEAN0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstev，该符号在函数 ""int __cdecl psi::C_DSTEV(char,int,double *,double *,double *,int,double *)"" (?C_DSTEV@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevd，该符号在函数 ""int __cdecl psi::C_DSTEVD(char,int,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSTEVD@psi@@YAHDHPEAN00H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevr，该符号在函数 ""int __cdecl psi::C_DSTEVR(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,int *,double *,int,int *,int)"" (?C_DSTEVR@psi@@YAHDDHPEAN0NNHHNPEAH00H10H1H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dstevx，该符号在函数 ""int __cdecl psi::C_DSTEVX(char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSTEVX@psi@@YAHDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:44597,error,error,44597,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtgsyl，该符号在函数 ""int __cdecl psi::C_DTGSYL(char,int,int,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,int,double *,double *,double *,int,int *)"" (?C_DTGSYL@psi@@YAHDHHHPEANH0H0H0H0H0H000HPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtpcon，该符号在函数 ""int __cdecl psi::C_DTPCON(char,char,char,int,double *,double *,double *,int *)"" (?C_DTPCON@psi@@YAHDDDHPEAN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtprfs，该符号在函数 ""int __cdecl psi::C_DTPRFS(char,char,char,int,int,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTPRFS@psi@@YAHDDDHHPEAN0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptri，该符号在函数 ""int __cdecl psi::C_DTPTRI(char,char,int,double *)"" (?C_DTPTRI@psi@@YAHDDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtptrs，该符号在函数 ""int __cdecl psi::C_DTPTRS(char,char,char,int,int,double *,double *,int)"" (?C_DTPTRS@psi@@YAHDDDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrcon，该符号在函数 ""int __cdecl psi::C_DTRCON(char,char,char,int,double *,int,double *,double *,int *)"" (?C_DTRCON@psi@@YAHDDDHPEANH00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrevc，该符号在函数 ""int __cdecl psi::C_DTREVC(char,char,int,double *,int,double *,int,double *,int,int,int *,double *)"" (?C_DTREVC@psi@@YAHDDHPEANH0H0HHPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrexc，该符号在函数 ""int __cdecl psi::C_DTREXC(char,int,double *,int,double *,int,int *,int *,double *)"" (?C_DTREXC@psi@@YAHDHPEANH0HPEAH10@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dtrrfs，该符号在函数 ""int __cdecl psi::C_DTRRFS(char,char,char,int,int,double *,int,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DTRRFS@psi@@YAHDDDHHPEANH0H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:52051,error,error,52051,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"部符号 dpotri，该符号在函数 ""int __cdecl psi::C_DPOTRI(char,int,double *,int)"" (?C_DPOTRI@psi@@YAHDHPEANH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpotrs，该符号在函数 ""int __cdecl psi::C_DPOTRS(char,int,int,double *,int,double *,int)"" (?C_DPOTRS@psi@@YAHDHHPEANH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppcon，该符号在函数 ""int __cdecl psi::C_DPPCON(char,int,double *,double,double *,double *,int *)"" (?C_DPPCON@psi@@YAHDHPEANN00PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppequ，该符号在函数 ""int __cdecl psi::C_DPPEQU(char,int,double *,double *,double *,double *)"" (?C_DPPEQU@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpprfs，该符号在函数 ""int __cdecl psi::C_DPPRFS(char,int,int,double *,double *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DPPRFS@psi@@YAHDHHPEAN00H0H000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsv，该符号在函数 ""int __cdecl psi::C_DPPSV(char,int,int,double *,double *,int)"" (?C_DPPSV@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dppsvx，该符号在函数 ""int __cdecl psi::C_DPPSVX(char,char,int,int,double *,double *,char,double *,double *,int,double *,int,double *,double *,double *,double *,int *)"" (?C_DPPSVX@psi@@YAHDDHHPEAN0D00H0H0000PEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrf，该符号在函数 ""int __cdecl psi::C_DPPTRF(char,int,double *)"" (?C_DPPTRF@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptri，该符号在函数 ""int __cdecl psi::C_DPPTRI(char,int,double *)"" (?C_DPPTRI@psi@@YAHDHPEAN@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dpptrs，该符号在函数 ""int __cdecl psi::C_DPPTRS(char,int,int,double *,double *,int)"" (?C_DPPTRS@psi@@YAHDHHPEAN0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dptcon，该符号在函数 ""int __cdecl psi::C_DPTCON(int,double *,double *,double,double *,double *)"" (?C_DPTCON@psi@@YAHHPEAN0N00@Z",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:35893,error,error,35893,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"，该符号在函数 ""int __cdecl psi::C_DHGEQZ(char,char,char,int,int,int,double *,int,double *,int,double *,double *,double *,double *,int,double *,int,double *,int)"" (?C_DHGEQZ@psi@@YAHDDDHHHPEANH0H0000H0H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhsein，该符号在函数 ""int __cdecl psi::C_DHSEIN(char,char,char,int,double *,int,double *,double *,double *,int,double *,int,int,int *,double *,int *,int *)"" (?C_DHSEIN@psi@@YAHDDDHPEANH000H0HHPEAH011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dhseqr，该符号在函数 ""int __cdecl psi::C_DHSEQR(char,char,int,int,int,double *,int,double *,double *,double *,int,double *,int)"" (?C_DHSEQR@psi@@YAHDDHHHPEANH000H0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopgtr，该符号在函数 ""int __cdecl psi::C_DOPGTR(char,int,double *,double *,double *,int,double *)"" (?C_DOPGTR@psi@@YAHDHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dopmtr，该符号在函数 ""int __cdecl psi::C_DOPMTR(char,char,char,int,int,double *,double *,double *,int,double *)"" (?C_DOPMTR@psi@@YAHDDDHHPEAN00H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgbr，该符号在函数 ""int __cdecl psi::C_DORGBR(char,int,int,int,double *,int,double *,double *,int)"" (?C_DORGBR@psi@@YAHDHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorghr，该符号在函数 ""int __cdecl psi::C_DORGHR(int,int,int,double *,int,double *,double *,int)"" (?C_DORGHR@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorglq，该符号在函数 ""int __cdecl psi::C_DORGLQ(int,int,int,double *,int,double *,double *,int)"" (?C_DORGLQ@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgql，该符号在函数 ""int __cdecl psi::C_DORGQL(int,int,int,double *,int,double *,double *,int)"" (?C_DORGQL@psi@@YAHHHHPEANH00H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dorgqr，该符号在函数 ""int __cdecl psi::C_DORGQR(int,int,int,double *,int,double *,double *,int)"" (?C_DOR",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:28590,error,error,28590,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Availability,"，该符号在函数 ""int __cdecl psi::C_DSPGV(int,char,char,int,double *,double *,double *,double *,int,double *)"" (?C_DSPGV@psi@@YAHHDDHPEAN000H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvd，该符号在函数 ""int __cdecl psi::C_DSPGVD(int,char,char,int,double *,double *,double *,double *,int,double *,int,int *,int)"" (?C_DSPGVD@psi@@YAHHDDHPEAN000H0HPEAHH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspgvx，该符号在函数 ""int __cdecl psi::C_DSPGVX(int,char,char,char,int,double *,double *,double,double,int,int,double,int *,double *,double *,int,double *,int *,int *)"" (?C_DSPGVX@psi@@YAHHDDDHPEAN0NNHHNPEAH00H011@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsprfs，该符号在函数 ""int __cdecl psi::C_DSPRFS(char,int,int,double *,double *,int *,double *,int,double *,int,double *,double *,double *,int *)"" (?C_DSPRFS@psi@@YAHDHHPEAN0PEAH0H0H0001@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsv，该符号在函数 ""int __cdecl psi::C_DSPSV(char,int,int,double *,int *,double *,int)"" (?C_DSPSV@psi@@YAHDHHPEANPEAH0H@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dspsvx，该符号在函数 ""int __cdecl psi::C_DSPSVX(char,char,int,int,double *,double *,int *,double *,int,double *,int,double *)"" (?C_DSPSVX@psi@@YAHDDHHPEAN0PEAH0H0H0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrd，该符号在函数 ""int __cdecl psi::C_DSPTRD(char,int,double *,double *,double *,double *)"" (?C_DSPTRD@psi@@YAHDHPEAN000@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrf，该符号在函数 ""int __cdecl psi::C_DSPTRF(char,int,double *,int *)"" (?C_DSPTRF@psi@@YAHDHPEANPEAH@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptri，该符号在函数 ""int __cdecl psi::C_DSPTRI(char,int,double *,int *,double *)"" (?C_DSPTRI@psi@@YAHDHPEANPEAH0@Z) 中被引用; F:\qt.lib(lapack_intfc.cc.obj) : error LNK2019: 无法解析的外部符号 dsptrs，该符号在函数 ""int __cdecl psi::C_DSPTRS(char,int,int,double *,int *,double *,int)"" (?C_DSPTRS@psi@@YAHDHHPEANPEAH0H@Z) 中",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:42323,error,error,42323,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['error'],['error']
Deployability," ""--pcmsolver off"". . After successfull ./setup I went to the objdir and ran ""make"". Does anyone know, what can I do in this case? As far as I unserstand, I can only use mkl with intel compiler. Generally, I need psi4 to compute electronic density grids for fullCI and Coupled Cluster calculations of small molecules with huge basis sets. Thank you in advance.; Best regards,; Michael Medvedev. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=gnu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -open",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:4302,release,release,4302,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability, (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:2282,Install,Install,2282,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if you need additional time to rebase in a change.; ## Summary. Changes for developers:; - **WARNING!** All clones and forks will need to be",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:3084,update,updated,3084,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['update'],['updated']
Deployability," - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; > and confusing option?; > - Do users want access to custom pruning, e.g. via an array to define; > grids for RadialPruneMgr::ShellPruning ?; > - Pruning enabled by default? (I would vote yes); >; > Checklist; >; > - Documentation; > - Tests added; > - All or relevant fraction of full tests run; > <http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests>; >; > Status; >; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/1591; > Commit Summary; >; > - first try of Treutler pruning. Error very large; > - testing; > - testing stage; > - adds Treutlers M4 fitting radii and new BS radii; > - adds switch for 3 different pruning schemes; > - BSrad in Angstrom works best..; > - cleaning up; > - adds smooth Becke mu of Ochsenfeld; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/cubature.cc; > <https://github.com/psi4/psi4/pull/1591/files#diff-0> (235); > - *M* psi4/src/psi4/libfock/cubature.h; > <https://github.com/psi4/psi4/pull/1591/files#diff-1> (9); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/1591/files#diff-2> (5); > - *M* tests/dft-b3lyp/input.dat; > <https://github.com/psi4/psi4/pull/1591/files#diff-3> (3); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/1591.patch; > - https://github.com/psi4/psi4/pull/1591.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/1591>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdvDQ8k3q9iMmt3WyUH9_hci95FKbks5vdu4LgaJpZM4ceQFR>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:3325,Patch,Patch,3325,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability, -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_simint SKIPPED (Not detecting module simint. Install package if necessary to enable tests.) [ 20%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 21%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED (Not de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1502,Install,Install,1502,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability, ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2703,install,installing,2703,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability," 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 0.00000000000000 -0.02542132788092; 2 0.00000000000000 0.00000000000000 0.04001842268283; 3 0.00000000000000 0.00000000000000 -0.00008157403367; 4 -0.01223146212679 0.00000000000000 -0.00730812502865; 5 0.01223146212679 0.00000000000000 -0.00730812502865; 6 -0.00012673181204 -0.00131081707156 0.00002518232226; 7 -0.00012673181204 0.00131081707156 0.00002518232226; 8 0.00012673181204 0.00131081707156 0.00002518232226; 9 0.00012673181204 -0.00131081707156 0.00002518232226; ```. ---. A large part of the error comes from remaining XC grid errors. Removing the XC component and switching to the following functional:. ```; func = {; ""name"": ""random"",; ""x_hf"": {; ""alpha"": 0.6,; ""beta"": 1.0,; ""omega"": 0.2; },; ""c_functionals"": {}; }; ```. We get:; ```; ## Total Gradient (Symmetry 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 0.00000000000000 0.00751539716985; 2 0.00000000000000 -0.00000000000000 -0.11630695396167; 3 0.00000000000000 0.00000000000000 -0.01206645849208; 4 0.03096553875899 0.00000000000000 0.01320113763483; 5 -0.03096553875899 -0.00000000000000 0.01320113763483; 6 0.03065040266884 0.05175861616944 0.02361393500320; 7 0.03065040266884 -0.05175861616944 0.02361393500320; 8 -0.03065040266884 -0.05175861616944 0.02361393500320; 9 -0.03065040266884 0.05175861616944 0.02361393500320. ## F-D gradient (Symmetry 0) ##; Irrep: 1 Size: 9 x 3. 1 2 3. 1 0.00000000000000 0.00000000000000 0.00751479730193; 2 0.00000000000000 0.00000000000000 -0.11630874980790; 3 0.00000000000000 0.00000000000000 -0.01206654646408; 4 0.03096551832591 0.00000000000000 0.01320234499567; 5 -0.03096551832591 0.00000000000000 0.01320234499567; 6 0.03065025750579 0.05175880408362 0.02361395224468; 7 0.03065025750579 -0.05175880408362 0.02361395224468; 8 -0.03065025750579 -0.05175880408362 0.02361395224468; ```. ---. Additional comments fixed. This is ready to go from my end. A re-review of the updated components wouldn't be a bad idea.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1043#issuecomment-397310129:3182,update,updated,3182,https://psicode.org,https://github.com/psi4/psi4/pull/1043#issuecomment-397310129,1,['update'],['updated']
Deployability," 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - FNO-DF-CCSD(T)/cc-pVDZ: *memDF FAILED* (diskDF passed all); >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 43, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3907, in run_fnodfcc; > set_cholesky_from('CC_TYPE'); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 3897, in set_cholesky_from; > raise ValidationError("" FNOCC requires SCF_TYPE = DISK_DF""); >; > ValidationError: FNOCC requires SCF_TYPE = DISK_DF; >; > 7. DFOCC (OMP2/cc-pVDZ): *memDF FAILED* (disk",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:7804,install,install,7804,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability," <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2008, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1362, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 93, in scf_compute_energy; raise e; File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/psilocaluser/gits/hrw-patch/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 358, in scf_iterate; raise ConvergenceError(""""""SCF iterations"""""", self.iteration_). ConvergenceError: Could not converge SCF iterations in 4 iterations. Psi4 stopped on: Wednesday, 08 August 2018 05:42PM; Psi4 wall time for execution: 0:00:01.01. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. It looks like [`die_if_not_converged`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L105-L113) toggled print-error-msg/die+traceback previously for SCF and DETCI, with defaulting toward print-error-msg. I think it's better to default toward die (which this PR now does) and ppl can catch the error if they want print-error-msg. For a long time we had geometry optimizations exit smoothly even if failed for iterations exceeded. That caused some problems (I think @dsirianni hit them), so we switched toward the die+traceback. Now",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479:1267,patch,patch,1267,https://psicode.org,https://github.com/psi4/psi4/pull/1130#issuecomment-411567479,1,['patch'],['patch']
Deployability," > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers;",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11260,install,install,11260,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,2,['install'],['install']
Deployability," All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most rece",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:1664,install,install,1664,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; in",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1371,install,installing,1371,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability," CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; > /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; > double Econstant = wfn->molecule()->nuclear_repulsion_energy();; > ^; > In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; > double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; > ^; > /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; > make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; > make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; > make[3]: *** [all] Error 2; > make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; > make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; > make: *** [all] Error 2; > The output generated by psi4-path-advisor --gcc is; > ; > /home/shouck/miniconda3/envs/p4dev/bin/cmake \; > -H. \; > -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; > -Bobjdir; > @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to ON in psi4DepsCache.cmake by default; changing it to; > ; > set(ENABLE_CheMPS2 OFF CACHE BOOL """"); > set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); > allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!; > ; > CMakeError.log; > CMakeOutput.log; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871#issuecomment-347970165:2385,update,updated,2385,https://psicode.org,https://github.com/psi4/psi4/issues/871#issuecomment-347970165,1,['update'],['updated']
Deployability," File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; > e_scf = scf_wfn.compute_energy(); >; > RuntimeError:; > Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; > The most recent 5 function calls were:; >; > 2. HF/cc-pVDZ: Passed; > 3. AO DF-CASSCF/cc-pVDZ: Passed; > 4. DFT Smoketests; > - B2PLYP/cc-pVDZ: Passed; > - CAM-B3LYP/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > super",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:3044,install,install,3044,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," In function `boost::mpi::detail::packed_archive_recv(int, int, int, boost::mpi::packed_iarchive&, MPI_Status&)':; point_to_point.cpp:(.text+0x2c1): undefined reference to `MPI_Recv'; point_to_point.cpp:(.text+0x318): undefined reference to `MPI_Recv'; point_to_point.cpp:(.text+0x40a): undefined reference to `MPI_Free_mem'; point_to_point.cpp:(.text+0x4a7): undefined reference to `MPI_Alloc_mem'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::wait()':; request.cpp:(.text+0x82): undefined reference to `MPI_Waitall'; request.cpp:(.text+0xd4): undefined reference to `MPI_Wait'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::test()':; request.cpp:(.text+0x201): undefined reference to `MPI_Testall'; request.cpp:(.text+0x283): undefined reference to `MPI_Test'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::cancel()':; request.cpp:(.text+0x38e): undefined reference to `MPI_Cancel'; request.cpp:(.text+0x3a9): undefined reference to `MPI_Cancel'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(exception.o): In function `boost::mpi::exception::exception(char const*, int)':; exception.cpp:(.text+0xaf): undefined reference to `MPI_Error_string'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```. It looks to me like a problem with my external Boost installation. Can you confirm this? I just wanted to make sure there wasn't some linking flag I'm missing before contacting the Boost developers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/411:36572,install,installation,36572,https://psicode.org,https://github.com/psi4/psi4/issues/411,1,['install'],['installation']
Deployability," Libxc 3-->4 changes + new dict func initialization. This is the first use of `use_libxc` for a LRC. ---. Ok, I believe I'm now using `use_libxc` correctly for LRC fctls (test case still unhappy):. ```; funcs.append({; ""name"": ""M11"",; ""x_functionals"": {; ""HYB_MGGA_X_M11"": {; ""use_libxc"": True; }; },; ""x_hf"": {; ""use_libxc"": ""HYB_MGGA_X_M11""; },; ""c_functionals"": {; ""MGGA_C_M11"": {}; },; ""description"": ' M11 Meta-GGA XC Functional\n',; ""citation"": ' R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011\n',; ""doi"": '10.1021/jz201170d',; }); ```. Aren't really any other M11 fctls in Libxc to get confused by:; ```; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11_L 75 /*M11-L correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_C_M11 76 /*M11 correlation functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_MGGA_X_M11_L 226 /*M11-L exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs.h:#define XC_HYB_MGGA_X_M11 297 /*M11 hybrid exchange functional from Minnesota */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_MGGA_X_M11 225 /* Worker for M11 functional */; ./install-libxc/include/libxc/xc_funcs_removed.h:#define XC_HYB_MGGA_XC_M11 462 /* M11 functional from Minnesota */; ```; This turns into psi output; ```; => Composite Functional: M11 <=. M11 Meta-GGA XC Functional. R. Peverati and D. G. Truhlar, J. Phys. Chem. Lett., 2, 2810, 2011. Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_HYB_MGGA_X_M11 [omega = 0.2500]. => Exact (HF) Exchange <=. 1.5720 HF,LR [omega = 0.2500]; 0.4280 HF. => Correlation Functionals <=. 1.0000 XC_MGGA_C_M11; ```; which doesn't match; ![screen shot 2018-04-20 at 2 19 31 pm](https://user-images.githubusercontent.com/2314730/39067238-f8f2c778-44a5-11e8-9e51-deda8f244f1a.png); from page 7 of https://comp.chem.umn.edu/mfm/mfm_Manual_v1.9.pdf",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802#issuecomment-383182397:1154,install,install-libxc,1154,https://psicode.org,https://github.com/psi4/psi4/pull/802#issuecomment-383182397,3,['install'],['install-libxc']
Deployability," New Methods ; ----------- ; ; - Implementation of partial Cholesky orthogonalization (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT (#1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) ; ; New External Libraries ; ---------------------- ; ; - ADC from ADCC callable from Psi (#1744, #1827, #1848, #1892, #1914) ; - Enables use of GeomeTRIC optimizer in Psi (#1813) ; - Interoperability via Molssi Driver (#1676, #1929, #2163) ; - Psi4fockci (#1855) ; - CCT3 (#1934) ; - Interface to i-pi (#1057) ; - BrianQC GPU module (#1893) ; - Upgrade to Libint2 (#1721) ; - Update RESP and PSIXAS (#2065) ; - Move to LibXC5 (#1101, #2113, #2169, #2191) ; ; Performace Optimizations ; ------------------------ ; ; - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) ; ; Developer Interests ; ------------------- ; ; - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683:1109,Upgrade,Upgrade,1109,https://psicode.org,https://github.com/psi4/psi4/issues/1562#issuecomment-871887683,1,['Upgrade'],['Upgrade']
Deployability," NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4co",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12575,Install,Install,12575,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," OFF); option(ENABLE_gdma ""Enables Stone's GDMA multipole code (requires Fortran)"" OFF); option(ENABLE_PCMSolver ""Enables PCMSolver library (requires Fortran)"" OFF); -option(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_UBSAN"" Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF); -option(ENABLE_MSAN"" Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF); # These options are relevant to pasture; option(ENABLE_ccsort ""Enables ccsort plugin installed from psi4pasture"" OFF); option(ENABLE_transqt2 ""Enables transqt2 plugin installed from psi4pasture"" OFF); @@ -114,6 +110,14 @@ option_with_flags(ENABLE_CODE_COVERAGE ""Enables details on code coverage"" OFF; ""-ftest-coverage""); option_with_flags(ENABLE_BOUNDS_CHECK ""Enables bounds check in Fortran"" OFF; ""-ftrapuv -check all -fpstkchk"" ""-fcheck=all"" ""-fbounds-check -fcheck-array-temporaries""); +option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=address -fno-omit-frame-pointer""); +option_with_flags(ENABLE_TSAN ""Enables thread sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=thread -fPIE -pie -fno-omit-frame-pointer""); +option_with_flags(ENABLE_UBSAN ""Enables undefined behavior sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=undefined -fno-omit-frame-pointer""); +option_with_flags(ENABLE_MSAN ""Enables memory sanitizer (requires similarly compiled Python and Numpy)"" OFF; + ""-fsanitize=memory -fPIE -pie -fno-omit-frame-pointer""); option_with_default(MAX_AM_ERI ""Maximum angular momentum for integrals"" 5); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); option_with_default(FC_SYMBOL ""The type of Fortran name mangling"" 2); diff --git a/cmake/custom_sanitize.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343290538:2448,Release,Release,2448,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343290538,2,['Release'],['Release']
Deployability," PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] This includes some changes I salvaged from the old clean-python branch.; - [x] Ambit builds with `ENABLE_ambit` as directed from the `external/upstream/ambit/CM`.; - [x] Ambit _does not_ link into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:1069,Release,Release,1069,https://psicode.org,https://github.com/psi4/psi4/pull/593,1,['Release'],['Release']
Deployability," S 1 1.0; 20.0 1.0; S 1 1.0; 2.0 1.0; ****; Li 2; S 1 1.0; 10.0 1.0; S 1 1.0; 1.0 1.0; ****; }. energy('scf'); ```; should give me the first basis set on atom 1 and the second basis set on atom 2. What I get instead is. ```; $ psi4 . QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['LI']; Basis Sets: [('anonymous8452ca2a', 'anonymous8452ca2a', None)]; File Path: /tmp/crc, /tmp/crc, /home/work/psi4/install/share/psi4/basis; Input Blocks: anonymous8452ca2a. Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 48, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 493, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1266, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); File ""/home/work/psi4/install/lib/psi4/driver/p4util/python_helpers.py"", line 115, in pybuild_wavefunction; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); File ""/home/work/psi4/install/lib/psi4/driver/p4util/python_helpers.py"", line 77, in pybuild_basis; return_atomlist=return_atomlist); File ""/home/work/psi4/install/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 683, in pyconstruct; verbose=verbose); File ""/home/work/psi4/install/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 902, in construct; (at + 1, key, text2)). BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['LI']; Basis Sets: [('anonymous8452ca2a', 'anonymous8452ca2a', None)]; File Path: /tmp/crc, /tmp/crc, /home/work/psi4/install/share/psi4/basis; Input Blocks: anonymous8452ca2a; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1270:1288,install,install,1288,https://psicode.org,https://github.com/psi4/psi4/issues/1270,5,['install'],['install']
Deployability," Sebastian,. Which version of Psi is this, beta5? We have been having a little trouble; reproducing the problem. Also, do you have a .psi4rc file, and if so, what's in it?. Thanks,; David. On Wed, Feb 4, 2015 at 5:47 PM, Sebastian Wouters notifications@github.com; wrote:. > Hi,; > ; > The input file for the problem described below:; > ; > molecule C6H6 {; > 0 1; > C 0.0 1.855 0.0; > C 0.0 -1.855 0.0; > C 1.6064771240201337 0.9275 0.0; > C 1.6064771240201337 -0.9275 0.0; > C -1.6064771240201337 0.9275 0.0; > C -1.6064771240201337 -0.9275 0.0; > H 0.0 3.289 0.0; > H 0.0 -3.289 0.0; > H 2.848357553047019 1.6445 0.0; > H 2.848357553047019 -1.6445 0.0; > H -2.848357553047019 1.6445 0.0; > H -2.848357553047019 -1.6445 0.0; > units au; > }; > ; > set basis cc-pVDZ; > set reference rhf; > set e_convergence 1e-12; > set d_convergence 1e-12; > set ints_tolerance 0.0; > ; > optimize('b3lyp'); > ; > When you run the geometry optimization in the /tmp folder, the geometry of; > the SCF doesn't get updated:; > ; > First SCF:; > ; > Geometry (in Bohr), charge = 0, multiplicity = 1:; > ; > Center X Y Z; > ; > ---; > ; > ```; > C -0.000000000000 1.855000000000 0.000000000000; > C 0.000000000000 -1.855000000000 0.000000000000; > C 1.606477124020 0.927500000000 0.000000000000; > C 1.606477124020 -0.927500000000 0.000000000000; > C -1.606477124020 0.927500000000 0.000000000000; > C -1.606477124020 -0.927500000000 0.000000000000; > H -0.000000000000 3.289000000000 0.000000000000; > H 0.000000000000 -3.289000000000 0.000000000000; > H 2.848357553047 1.644500000000 0.000000000000; > H 2.848357553047 -1.644500000000 0.000000000000; > H -2.848357553047 1.644500000000 0.000000000000; > H -2.848357553047 -1.644500000000 0.000000000000; > ```; > ; > At the end of optking:; > ; > ```; > Writing optimization data to binary file.; > Structure for next step:; > Cartesian Geometry (in Angstrom); > C -0.0000000000 0.9816237969 0.0000000000; > C 0.0000000000 -0.9816237969 0.0000000000; > C 0.850111145",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/66#issuecomment-73061426:1003,update,updated,1003,https://psicode.org,https://github.com/psi4/psi4/issues/66#issuecomment-73061426,1,['update'],['updated']
Deployability," Setting option MAX_AM_ERI: 6; -- Setting (unspecified) option CMAKE_BUILD_TYPE: Release; -- Setting (unspecified) option FC_SYMBOL: 2; -- Setting (unspecified) option BUILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4033,configurat,configuration,4033,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,2,['configurat'],['configuration']
Deployability," So I would make another python module, `psi2adcc` say, and in it implement the routing between psi4 and adcc. Then adcc is one of its `setup.py` dependencies. In this python module I will need to adapt `psi4.driver.procedures['energy']['adc2']` and similar and add my energy function. So far, so good. Now the problem I see is that in a vanilla Psi4 version without adcc-support, `psi4.driver.procedures['energy']['adc2']` is assigned to `run_adc`, which rightfully runs the ADC(2) implementation in Psi4. If my plugin is loaded, however, this should become a `select_adc2` method, which either picks the `run_adc` in my plugin or the `run_adc` in Psi4, depending on some user settings. One option to resolve this is to give the adcc methods a different name, e.g. `adcc-adc(2)`. This is roughly what is done e.g. in the `gpu_dfcc` plugin to distinguish against the CPU versions if I understand correctly. For me this solution does not feel very satisfying, however, because now it's again the user's responsibility to select the right ADC implementation.; Another option is to implement a dummy `select_adc` in Psi4, which does no branching and always falls to the built-in implementation. This could then be monkey-patched in my plugin by wrapping it somehow ... but that is not clean either. . Alternative is to integrate deeper into the python layer and subject to the availablity of the `adcc` module either have two branches in `select_adc` or just one. That's what I will pursue now if there are no other thoughts. --. About the wavefunction object: I have not looked at the Psi4 implementation details (or the schema) so far, but roughly speaking it's (for each excited state) the excitation energy, a few property vectors and AO density matrices. Theoretically one could also export the full excitation vector, but that involves copying a rank-4 tensor, so I would not do that. But one can export important amplitudes, which is a mapping from a pair / quadruple of integers to a real value.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547652584:1573,patch,patched,1573,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547652584,2,"['integrat', 'patch']","['integrate', 'patched']"
Deployability," The final CompositeJK PR will be the refactoring of the CompositeJK backend to truly support arbitrary mixing and matching of J/K build algorithms. ## User API & Changelog headlines; - [x] The DO_LINK option has been removed.; - [x] The SCF_TYPE option ""LINK"" has been added, enabling use of the integral-direct density-fitted J + Linear Exchange K algorithm combination for JK computations. ## Dev notes & details; - [x] The new JK subclass ""DFJLinK"" has been added to Psi4. DFJLinK combines the integral-direct density fitted formation of J with the linear-scaling formation of the exact K through the LinK algorithm. DFJLinK supports both density screening and incremental Fock construction, using machinery similar to the DirectJK class to do so.; - [x] The computation of LinK, and all references thereof, have been removed from DirectJK. This includes, e.g., removal of the build_linK() function from DirectJK entirely.; - [x] All relevant tests, samples, and documentation (particularly those pertaining to LinK) have been updated to reflect the two previous changes. ## Questions; - [ ] How do we feel about having the integral-direct DF-J implementation in two separate JK subclasses? The plan is to remove this in the second CompositeJK PR, when DFJLinK and DFJCOSK are combined, but is the dual implementation of DF-J something people would take issue with?; - [ ] Do we want to the update the definition of num_computed_shells() for DFJLinK? For now, I have this set to the default JK definition for DFJLinK, and the issue is that, since there are shell triplet counts from DFJ and shell quartet counts from LinK, there would have to be a slightly more expansive change to how num_computed_shells() works in the JK class hierarchy to support DFJLinK. I'm thinking updating this will be a problem for the second CompositeJK PR, but I'm curious to see what others have to say. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:4614,update,updated,4614,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['update'],['updated']
Deployability," Then, there was #2354 that added remp2 E & G to `occ` and `dfocc` and made extensive improvements to `dfocc` in the matter of combined DIIS (vital for convergence) and int overflows. All based on pre-DIIS overhaul #2369 . To untangle this, I started from master, cherry-picked the dfocc2 commits, cherry-picked the #2354 commits, modernized the DIIS calls, then added the neglected stdsuite testing and attendant qcvar fixups for existing occ/dfocc methods and new methods remp2 and categories (1) and (2) from dfocc2 branch. That mega-changeset lives at #2633 for now. This PR breaks off the `occ` portion for review. ## Todos; - [x] @behnle added REMP2 and OREMP2 hybrid perturbation theories (https://doi.org/10.1063/1.5086168) with conventional integrals added to `occ` module, as originally proposed in #2354; - [ ] note that this uses a specialty QCEngine for reference values. https://github.com/MolSSI/QCEngine/pull/375 It'll build by itself. I'll need to mint a QCEngine patch release before building conda packages with this PR in master.; - [x] docs-wise, I picked off a bit and included it in this PR. on the whole, let's defer docs edits until the dfocc PR; - [x] reworked the run_occ* driver functions a bit so that method defs are localized and there's less risk of missing an internal setting when adding new methods.; - [x] added stdsuite testing for new methods remp2 energy and oremp2 energy and gradient. added stdsuite testing for existing E & G for omp2, omp2.5, omp3, oremp2, olccd and filled in some gaps for ccsd, ccsd(t), a-ccsd(t). all conventional ints. fixed up some mis-set byproducts uncovered by stdsuite testing: OO ROHF was printing and setting wrong plain MP2 energies, OMP3 & OMP2.5 wasn't setting right `Wfn.energy_`, stop setting ROHF MP3 and MP2.5 out of caution.; - [x] tightened the min rms_mograd_convergence from 6.0 to 6.5 so that stdsuite (3 mol/basis sets) could reliably compute energies, gradients, and findif gradients to 1e-6. ## Questions; - [x] so",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2653:1336,patch,patch,1336,https://psicode.org,https://github.com/psi4/psi4/pull/2653,2,"['patch', 'release']","['patch', 'release']"
Deployability, [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4181,Install,Install,4181,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability, [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enabl...) [ 45%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_ipi_broker1 SKIPPED (Not detecting module ipi. Install package if necessary to...) [ 47%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to...) [ 49%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enabl...) [ 50%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_dftd3 PASSED [ 52%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to e...) [ 54%];,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:4354,Install,Install,4354,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3229:2240,release,release,2240,https://psicode.org,https://github.com/psi4/psi4/pull/3229,1,['release'],['release']
Deployability," [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.6.3 would require; │ │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.4 would require; │ │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.5|3.6.6] would require; │ │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.6 would require; │ │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.7|3.6.8] would require; │ │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ │ └─ python 3.6.9 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ └─ psi4-rt 1.1 would require; │ └─ python 2.7* , which can be installed;; └─ python 3.6** , which can be installed",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:3301,install,installed,3301,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Deployability," [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 conda-forge; certifi 2017.7.27.1 py36_0 conda-forge; chemps2 1.8.4 0 psi4/label/dev; cloog 0.18.0 0 ; decorator 4.1.2 py36_0 conda-forge; dftd3 3.2.0 7 psi4; dkh 1.2 1 psi4/label/dev; erd 3.0.6 1 psi4/label/dev; gcc-5 5.2.0 1 psi4; gcc-5-mp 5.2.0 0 psi4; gcp 2.0.1 0 psi4; gdma 2.2.6 3 psi4/label/dev; gmp 6.1.2 0 conda-forge; hdf5 1.8.17 11 conda-forge; intel-openmp 2018.0.0 h15fc484_7 ; ipykernel 4.6.1 py36_0 conda-forge; ipython 6.2.1 py36_0 conda-forge; ipython_genutils 0.2.0 py36_0 conda-forge; isl 0.12.2 0 ; jedi 0.10.2 py36_0 conda-forge; jupyter_client 5.1.0 py36_0 conda-forge; jupyter_core 4.4.0 py_0 conda-forge; libefp 1.5b1 0 psi4/label/dev; libgfortran 3.0.0 1 ; libint 1.2.1 1 psi4/label/dev; libsodium 1.0.10 0 conda-forge; libxc 3.0.0 6 psi4/label/dev; mkl 2018.0.0 hb4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:2526,release,release,2526,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['release'],['release']
Deployability," _A_ tests/isapt2/plot-ref/Geom.png; > https://github.com/psi4/psi4/pull/470/files#diff-239 (0); > - _A_ tests/isapt2/plot-ref/Geom.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-240 (0); > - _A_ tests/isapt2/plot-ref/VA.png; > https://github.com/psi4/psi4/pull/470/files#diff-241 (0); > - _A_ tests/isapt2/plot-ref/VA.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-242 (0); > - _A_ tests/isapt2/plot-ref/VB.png; > https://github.com/psi4/psi4/pull/470/files#diff-243 (0); > - _A_ tests/isapt2/plot-ref/VB.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-244 (0); > - _A_ tests/isapt2/plot-ref/VC.png; > https://github.com/psi4/psi4/pull/470/files#diff-245 (0); > - _A_ tests/isapt2/plot-ref/VC.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-246 (0); > - _A_ tests/isapt2/plot-ref/dDA.png; > https://github.com/psi4/psi4/pull/470/files#diff-247 (0); > - _A_ tests/isapt2/plot-ref/dDA.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-248 (0); > - _A_ tests/isapt2/plot-ref/dDB.png; > https://github.com/psi4/psi4/pull/470/files#diff-249 (0); > - _A_ tests/isapt2/plot-ref/dDB.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-250 (0); > - _A_ tests/isapt2/plot-ref/geom.xyz; > https://github.com/psi4/psi4/pull/470/files#diff-251 (0); > - _A_ tests/isapt2/plot-ref/orient.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-252 (0); > - _A_ tests/isapt2/plot-ref/run.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-253 (0); > - _A_ tests/isapt2/plot-ref/vis.pymol; > https://github.com/psi4/psi4/pull/470/files#diff-254 (0); > ; > Patch Links:; > - https://github.com/psi4/psi4/pull/470.patch; > - https://github.com/psi4/psi4/pull/470.diff; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/470, or mute the thread; > https://github.com/notifications/unsubscribe-auth/ACizP-4KJoFubALyaZOx9fsbCOSSIV8Pks5qs0hXgaJpZM4KElEp; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470#issuecomment-249267903:27429,Patch,Patch,27429,https://psicode.org,https://github.com/psi4/psi4/pull/470#issuecomment-249267903,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability," a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 conda-forge; certifi 2017.7.27.1 py36_0 conda-forge; chemps2 1.8.4 0 psi4/label/dev; cloog 0.18.0 0 ; decorator 4.1.2 py36_0 conda-forge; dftd3 3.2.0 7 psi4; dkh 1.2 1 psi4/label/dev; erd 3.0.6 1 psi4/label/dev; gcc-5 5.2.0 1 psi4; gcc-5-mp 5.2.0 0 psi4; gcp 2.0.1 0 psi4; gdma 2.2.6 3 psi4/label/dev; gmp 6.1.2 0 conda-forge; hdf5 1.8.17 11 conda-forge; intel-openmp 2018.0.0 h15fc484_7 ; ipykernel 4.6.1 py36_0 conda-forge; ipython 6.2.1 py36_0 conda-forge; ipython_genutils 0.2.0 py36_0 conda-forge; isl 0.12.2 0 ; jedi 0.10.2 py36_0 conda-forge; jupyter_client 5.1.0 py36_0 conda-forge; jup",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:2302,install,install,2302,https://psicode.org,https://github.com/psi4/psi4/issues/862,2,['install'],['install']
Deployability," adding machine-readable (for eg. VSCode) docstrings, adding const to arguments, replacing `int` with `size_t` to match `std::vector::operator[](std::size_t)` and cautiously deprecating member functions that deal with pointers. Not only are pointers more error-prone, they are currently involved in some strange interaction between `Dimension` and `Matrix` objects, resulting in awkward roundabout initialization/construction that I hope to untangle before Psi4 1.11? (1.11, or maybe 1.12?).; Please let me know if you feel the three deprecations in this PR would be too disruptive or otherwise undesirable, this PR is very much a ""request for comments"". ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] API change: The custom assignment operator for `Dimension` objects (`Dimension& operator=(const int*)`) is being deprecated. Unless someone speaks up, 1.10 may be the last release to have it.; - [x] API change: Cast-to-pointer operators for `Dimension` objects (`operator int*()` and `operator const int*() const`) are being deprecated. Unless someone speaks up, 1.10 may be the last release to have them.; - [x] Minor API change: Several constructors and member functions of `Dimension` are now using `size_t` instead of `int` for indexing:; −`Dimension::Dimension(int, const std::string&)` is now `Dimension::Dimension(size_t, const std::string&)`; −`void Dimension::init(int, const std::string&)` is now `void Dimension::init(size_t, const std::string&)`; −`int Dimension::n() const` is now `size_t Dimension::n() const`; −`int& Dimension::operator[](int)` is now `int& Dimension::operator[](size_t)`; −`const int& Dimension::operator[](int) const` is now `const int& Dimension::operator[](size_t) const`; −`const int& Dimension::get(int) const` is now `const int& Dimension::get(size_t) const`; −`void Dimension::set(int, int)` is now `void Dimension::set(size_t, int)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953:1144,release,release,1144,https://psicode.org,https://github.com/psi4/psi4/pull/2953,1,['release'],['release']
Deployability," after #2388 introduces segfaults (details see below), which so far I have not yet been able to trace down. Any help on that would be much appreciated. ## User API & Changelog headlines; - Implementation of PCM and COSMO solvation models based on the ddx library. ## Dev notes & details; - Introduction of a NumIntHelper class to compute some integrals numerically using a DFT grid; - Introduction of ddx solvation model and new ddx options. ## Reproducer for the mysterious segfault; As part of rebasing against the current master I encountered a really strange segfault. I managed to produce a minimal example, which has really nothing to do with ddx and only adds a python interface to a simple numerical electrostatic integral. See here for a [trimmed-down diff](https://github.com/psi4/psi4/compare/master...mfherbst:psi4:segfault). On my machine checking out this `segfault` branch with `0_configure.sh`, building and running the `mytests/runtests.sh` script gives a segfault inside the numerical integration in the `PCMPotentialInt` class. Note that the code I added *is not even called*, the call to `PCMPotentialInt` happens from the pcm code *which I have not modified*. Now, commenting out; ```c++; PrintIntegralsFunctor printer;; potential_integrals_->compute(printer);; ```; the segfault disappears. I'm getting the weird feeling I'm doing something really stupid here and I just missed it. ## Questions; - [x] Thoughts on the NumIntHelper?; - [x] Is D -> D_cart needed or not ([this stuff](https://github.com/psi4/psi4/pull/2767/commits/108b6bb1a53cdc428933475dea991e08a3330d98#diff-48947c7a095c933d6843e0564043f051b0e54dff111fff222bf25cd968f6f9daR1769-R1780)); - [x] Any idea on the segfault when rebasing against master?. ## Checklist; - [x] Find and fix segfaults when using psi4 master; - [x] Remove debug restriction to one thread in numerical integrals; - [x] Documentation; - [x] Bring forward more options to change numerical grid details for DDX solvation models; - [x] ~~Merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767:1523,integrat,integration,1523,https://psicode.org,https://github.com/psi4/psi4/pull/2767,1,['integrat'],['integration']
Deployability," and mem_DF gradients yield above segfault, no; > message in outfile or message printed to stdout; > - PBE/cc-pVDZ: Passed; > - wPBE/cc-pVDZ: *FAILED*; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 31, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1283, in scf_helper; > scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; > superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; > ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); >; > ValidationError: SCF: SCF_TYPE (MEM_DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:5621,install,install,5621,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," are now unified, so we don't need to edit all three generators when one is bugged.; - [x] Various PyBinding has been done. Among other things, the new Py-side compute_atom_map function from pyvib2 now works with psi4 molecules.; - [x] Fixes a bug in the `CharacterTable` copy constructor member initialization list, which used to require a string to be an integer.; - [x] Fixes a bug in vibrational analysis where the zero K enthalpy variable was misspelled.; - [x] Getting geometries for finite difference calculations is now Py-side.; - [x] Computing gradients from energies is now Py-side.; - [x] Computing hessians from gradients is now Py-side.; - [x] Computing hessians from energies is now Py-side.; - [x] Finish renaming the finite difference functions.; - [x] Overly picky changes for consistent style and commenting.; - [x] Review the findif test suite and add any tests as needed.; - [x] Add the banner.; - [x] Remove old FINDIF code (after migrating to attic).; - [x] Removed the C-side gradient writer.; - [x] Added several new gradient writing formats.; * **User-Facing for Release Notes**; - [x] A warning now displays if you attempt to access-by-index or iterate over an irreped object, instead of using a NumPy accessor.; - [x] Gradients can now be written, even for analytic hessians.; - [x] The .grad file will now only write the latest hessian. ## Questions; - [x] I had to change the internals of SymmetryOperation to make PyBind happy. I trust there are no objections?; - [x] Since pyvib2 made hessian writing no longer FINDIF's responsibility, shall I make gradient writing no longer FINDIF's responsibility as well? Then `comp_grad_from_hess` could return a Numpy array, like the `comp_hess_from_X` functions. ## Checklist; - [x] Tests added for any new features (or rather, edited in); - [x] [Relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1024:1340,Release,Release,1340,https://psicode.org,https://github.com/psi4/psi4/pull/1024,1,['Release'],['Release']
Deployability," are present here. * Use the observed hash to edit psi4/metadata.py and commit immediately. ```; >>> git tag -a v1.1rc1 6100822 -m ""v1.1rc1"". >>> vi psi4/metadata.py ; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; index 6cbc05e..fdc202e 100644; --- a/psi4/metadata.py; +++ b/psi4/metadata.py; @@ -1,5 +1,5 @@; __version__ = '1.1rc1'; -__version_long = '1.1rc1+zzzzzzz'; +__version_long = '1.1rc1+6100822'; __version_upcoming_annotated_v_tag = '1.1rc2'. >>> psi4/versioner.py ; Amazing, this can't actually happen that git hash stored at git commit.; >>> git add psi4/metadata.py; >>> git commit -m ""Records tag for v1.1rc1""; ```. * 5. **OBSERVE** Current versioning state. * Nothing to make note of, this is just a snapshot. ```; >>> psi4/versioner.py ; Defining development snapshot version: 1.1rc2.dev1+4e0596e (computed); 1.1rc2.dev1 {master} 4e0596e 1.0.0.999 1.0 <-- 1.1rc2.dev1+4e0596e. >>> git describe --abbrev=7 --long --always HEAD; v1.1rc1-1-g4e0596e. >>> git describe --abbrev=7 --long --dirty; v1.1rc1-1-g4e0596e. >>> git tag; v1.0; v1.1a1; v1.1rc1. >>> cat psi4/metadata.py ; __version__ = '1.1rc1'; __version_long = '1.1rc1+6100822'; __version_upcoming_annotated_v_tag = '1.1rc2'. >>> cat metadata.out.py | head -8; __version__ = '1.1rc2.dev1'; __version_branch_name = 'master'; __version_cmake = '1.0.0.999'; __version_is_clean = 'True'; __version_last_release = '1.0'; __version_long = '1.1rc2.dev1+4e0596e'; __version_prerelease = 'False'; __version_release = 'False'. >>> git log --oneline; 4e0596e Records tag for v1.1rc1; 6100822 v1.1rc1; cbee32b Fixes pcmsolver/scf for py3. Moves source for libefp upstream.; ```. 6. **ACTION** Move bump to remote. * Temporarily disengage ""Include administrators"" on protected master branch. ```; >>> git push origin master; >>> git push origin v1.1rc1; ```. * Now https://github.com/loriab/psi4/releases says v1.1rc1 6100822. Notes; -----. * To delete a tag:. * >>> git tag -d v1.1a1; * >>> git push origin :refs/tags/v1.1a1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-292102715:7133,release,releases,7133,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-292102715,1,['release'],['releases']
Deployability," be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4', 'python=3.10']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:6180,install,installed,6180,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability," dependencies `conda install boost mpfr eigen ninja`. Only header-only parts of Boost are used. Eigen is needed for the l2 c++ interface. Ninja is because l2 now makes files with weird enough names that when the get written to `Makefile`s, `make` can't process them. EFV is strongly recommending Ninja, too. . 2. Make sure a Libint1 package is **not** in your conda environment. Even if you're properly pointing to a `Libint1_t`-modified l1 via `-DLibint_DIR`, the compiler will still find those conventional Libint1 headers in `$CONDA_PREFIX`. If you have `psi4-dev` installed, `conda remove libint --force` to remove libint(1) but keep `psi4-path-advisor`. 3. In https://github.com/loriab/psi4/blob/libint2/external/upstream/libint2/CMakeLists.txt and https://github.com/loriab/psi4/blob/libint2/psi4/CMakeLists.txt, there are three `CHOOSE!` toggles between detect-prebuilt-libtool-l2 or detect-or-build-pure-cmake-l2. Comment out the one in each pair you don't need. 4. Normal cmake configuration of Psi4 into a new objdir. I recommend tacking on the following `-DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=""-O0"" -DMAX_AM_ERI=5 -DBOOST_ROOT=$CONDA_PREFIX -DMPFR_ROOT=$CONDA_PREFIX -DEigen3_DIR=$CONDA_PREFIX/share/eigen3/cmake/`. The `MAX_AM_ERI` only controls Libint1. The Libint2 MAX_AMs are set [here](https://github.com/psi4/psi4/pull/1721/files#diff-3cbeb175ac8e4122ee11133c203e49b4R32). On command-line, modify by e.g., `-DENABLE_ERI=1 -DWITH_ERI_MAX_AM=""5;4"" -DENABLE_ERI3=0 -DWITH_ERI3_MAX_AM=5`. 5. Build. The downloading source for library step will take a loooong time because that's when it's running the generator. Don't disrupt it during this step or it'll start over. The first time you build through this procedure, you may want to turn Hessians off and AM down to threes or fours to test the whole procedure. I'm pretty confident that the libraries itself are built right, but I wouldn't be surprised at can't-find-dependencies-or-headers problems on other c",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901:1192,configurat,configuration,1192,https://psicode.org,https://github.com/psi4/psi4/pull/1721#issuecomment-538130901,1,['configurat'],['configuration']
Deployability, detecting module cfour. Install package if necessary to enable tests.) [ 23%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED (Not detecting module v2rdm_casscf. Install package if necessary t...) [ 25%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED (Not detecting module gpu_dfcc. Install package if necessary to enable...) [ 27%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED [ 29%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dkh SKIPPED (Not detecting module dkh. Install package if necessary to enable tests.) [ 30%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED (Not detecting module snsmp2. Install package if necessary to enable tests.) [ 32%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 34%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_resp_2 SKIPPED (Not detecting module resp. Install package if necessary to enable tests.) [ 36%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psi4fockci SKIPPED (Not detecting module fockci. Install package if necessary to enable...) [ 38%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cppe SKIPPED (Not detecting module cppe. Install package if necessary to enable tests.) [ 40%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_cct3 SKIPPED (Not detecting module cct3. Install package if necessary to enable tests.) [ 41%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_psixas SKIPPED (Not detecting module psixas. Install package if necessary to enable tests.) [ 43%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons_qcschema.py::test_gdma SKIPPED (Not detecting mo,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:3499,Install,Install,3499,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," developer a beer!; ```. The worst output was that one time I got two summaries for CBS energies at the end of the file, and the results were different. ```; ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -0.15577370 xtpl_highest_1; total CBS -1011.27544804; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 03:03PM; Psi4 wall time for execution: 1 day, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ----------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:1415,install,install,1415,https://psicode.org,https://github.com/psi4/psi4/issues/1279,1,['install'],['install']
Deployability, enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:584: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:666: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:681: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:688: Not detecting module fockci. Install,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:16145,Install,Install,16145,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability, eternal loop in the ambit install. Trying to install the current HEAD with ambit enabled results in. -- Up-to-date: /home/work/psi4/psi4/include/psi4/FCMangle.h; -- Up-to-date: /home/work/psi4/psi4/include/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/wo,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:941,Install,Installing,941,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability," external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://github.com/evaleev/libint does not seem to have `find_package(Eigen3 MODULE)` line and `FindEigen3.cmake` file. A workaround is to `export EIGEN3_ROOT=/path/to/eigen3/include`, or patch; ```diff; --- a/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt; +++ b/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt; @@ -114,3 +114,3 @@; ; -find_package(Eigen3 MODULE); +find_package(Eigen3); ; ```; and remove `FindEigen3.cmake`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:1972,configurat,configuration,1972,https://psicode.org,https://github.com/psi4/psi4/issues/2606,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability," for TARGET blas:; blas.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; blas.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; blas.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; blas.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapk:; lapk.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; lapk.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapk.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapk.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapack:; lapack.INTERFACE_COMPILE_DEFINITIONS = ""USING_LAPACK_MKL""; lapack.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapack.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapack.INTERFACE_LINK_LIBRARIES = ""lapk;blas;tgt::MathOpenMP"". -- Found LAPACK MKL: /opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so;... ```. Building then fails with:; ```; [ 90%] Performing configure step for 'psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- LAZ Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516:3247,Release,Release,3247,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-396738516,1,['Release'],['Release']
Deployability, from collections import OrderedDict. def main(argv):; info = OrderedDict(); info['--cc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icc'; info['--cxx'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc' # aka PLUGIN_CXX; info['--fc'] = '/theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/ifort'; info['--version'] = psiver; info['--githash'] = githash; if 'ON' == 'ON':; info['--prefix'] = '/opt/anaconda1anaconda2anaconda3'; else:; info['--prefix'] = '/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl'; info['--top-level-psi4-dir'] = '/scratch/cdsgroup/conda-builds/work'; info['--max-am-eri'] = '4'; info['--python-version'] = '2.7'; info['--has-pcmsolver'] = 'ON'; info['--has-chemps2'] = 'ON'; info['--includes'] = '-I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/theoryfs2/ds/cdsgroup/psi4-install/miniconda/envs/_build_placehold_placehold_pl/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include' # aka PLUGIN_INCLUDES; info['--defines'] = '-DHAVE_PCMSOLVER -DHAVE_DKH -DHAVE_MM_MALLOC_H -DENABLE_CHEMPS2=1 -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H'; info['--ldflags'] = ' -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel' # aka PLUGIN_LDFLAGS. skipping LIBC_INTERJECT; info['--flags'] = '-DRESTRICT=,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/214#issuecomment-172395303:1796,install,install,1796,https://psicode.org,https://github.com/psi4/psi4/issues/214#issuecomment-172395303,1,['install'],['install']
Deployability," gives you a basic cmake command covering python, sphinx, link-time qc addons, and run-time qc addons. There's a help menu `-h` that gives more info. There's other options that will also pre-configure compilers. For example, at GaTech `psi4-path-advisor --intel` works. On Macs with XCode, `psi4-path-advisor --clang` works. Just read the help. For DGAS, there's an ""--disable"""", but I don't encourage it. It gives you a fully functional cmake command, but those are just setting up CMake cache - like the plugins you can always add your own CMake variables to the command. Plugins from a conda Psi4; -------------------------. Works on Linux. I need to adjust at least cache_pybind11_DIR on Mac. How to bump a version; ---------------------. * 0. **ACTION** Check everything in. * 1. **OBSERVE** Current versioning state. * Be on master of (i) a direct clone or (ii) clone-of-fork with master up-to-date with upstream (including tags!!!) and with upstream as remote. * https://github.com/psi4/psi4/releases says v1.1a1 007a9b6. ```; >>> git tag; v1.0; v1.1a1. >>> cat psi4/metadata.py ; __version__ = '1.1a1'; __version_long = '1.1a1+007a9b6'; __version_upcoming_annotated_v_tag = '1.1a2'. >>> git describe --abbrev=7 --long --always HEAD; v1.1a1-417-gcbee32b. >>> git describe --abbrev=7 --long --dirty; v1.1a1-417-gcbee32b. >>> ./psi4/versioner.py ; Defining development snapshot version: 1.1a2.dev417+cbee32b (computed); 1.1a2.dev417 {master} cbee32b 1.0.0.999 1.0 <-- 1.1a2.dev417+cbee32b. >>> git diff. ```. * Observe that current latest tag matches metadata scipt and git describe, that GH releases matches metadata script, that upcoming in metadata script matches current versioner version. * Note that current tag is ""v1.1a1"". Decide on imminent tag, say ""v1.1rc1"". * 2. **ACTION** Bump tag in code. * Edit current & prospective tag in psi4/metadata.py. Use your decided-upon tag ""v1.1rc1"" and a speculative next tag, say ""v1.1rc2"", and use 7 ""z""s for the part you can't predict. ```; >>> vi ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/466#issuecomment-292102715:3213,release,releases,3213,https://psicode.org,https://github.com/psi4/psi4/issues/466#issuecomment-292102715,1,['release'],['releases']
Deployability," guess the former is certainly shorter. But primarily I'm wondering; whether one is easier to check than the other regarding whether the; gradient is available. We need to know on a functional-by-functional basis; whether we have analytic gradients or not. If that's much easier to handle; with one style vs the other, that would be an argument for doing it that; way. Then we can decide what to do with the HF cases to make them play; nicely with our desired solution for the DFT ones. David. On Mon, Jun 8, 2015 at 8:46 PM, Lori A. Burns notifications@github.com; wrote:. > Without The-7 (hf/rhf/uhf/rohf/rscf/roscf/uscf), one can do:; > ; > # (a) for HF; > ; > energy(‘scf’); > ; > # (b) for unrestricted HF; > ; > set reference uhf; > energy(‘scf’); > ; > # (c) for B3LYP; > ; > set dft_functional b3lyp; > set reference rks; > energy(‘scf’); > ; > # (d) also for B3LYP; > ; > energy(‘b3lyp’); > ; > # but this gets you HF (b/c ks reference is the hf/dft toggle control); > ; > set dft_functional b3lyp; > energy(‘scf'); > ; > # (e) for unrestricted B3LYP; > ; > set dft_functional b3lyp; > set reference uks; > energy(‘scf’); > ; > # (f) also for unrestricted B3LYP; > ; > set reference uks; > energy(‘b3lyp’); > ; > # (g) also for unrestricted B3LYP (since energy command trumps options,; > ; > uhf gets translated to uks); > set reference uhf; > energy(‘b3lyp’); > ; > But most people do (a), (b), (d), and (f/g) I think. rhf/uhf/rohf let you; > wrap reference into the energy() call for HF. rscf/uscf/roscf let you wrap; > reference into the energy() call for HF or DFT (though for the latter you’d; > have to use dft_functional keyword.; > ; > Francesco brings up a related and overdue point. If you specify an; > open-shell molecule and no reference, it complains at you b/c rhf (the; > default) is unsuitable. I couldn’t say concretely, but some other programs; > will switch to an appropriate reference for open-shell. For psi4, it would; > have to be rhf/rks because we don’t have roks. T",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110194494:1086,toggle,toggle,1086,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110194494,1,['toggle'],['toggle']
Deployability," here. -->; For some poorly understood confluence of reasons, for some users error messages can _sometimes_ get completely lost when Psi4 exits with a `PSIEXCEPTION`, especially when a PSIO error happens.; This can be observed in recent bug reports, see:. - https://github.com/psi4/psi4/issues/2970; - https://forum.psicode.org/t/sapt0-calculation-crashes-pointer-error/2839. In both of these cases the users were only seeing the error message that has been written to `cerr`, but not the string that `PSIEXCEPTION` should have printed. IIRC when I tried to research this quite a while ago, I have found this may be a bug in some versions of libstdc++. This PR adds a simple workaround: the exception message is also printed to `cerr` in `psio_error`. The only side effect, is that some users, who are currently not affected by the lost message problem, may start getting the same error message twice when a PSIO error happens. Spammy error exits are not great, but PSIO errors are not supposed to happen too often, and when they do loosing the error message is more annoying than having it be duplicated. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PSIO error messages are now also printed to `cerr`, fixing an issue where (under some circumstances) large parts of the error message would never reach the user, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] The same error message that gets passed to `PSIEXCEPTION` is now printed to `cerr` before throwing in `psio_error`. ## Checklist; - [x] There is no easy way to add tests for ""are error messages getting delivered or not?""; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2997:1307,release,release,1307,https://psicode.org,https://github.com/psi4/psi4/pull/2997,1,['release'],['release']
Deployability," in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 952, in select_cisd; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - MP3/cc-pVDZ & MP4/cc-pVDZ: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; return func(name, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; occ_wfn = core.occ(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - CISD/cc-pVDZ via DETCI: **FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:10610,install,install,10610,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability," in get_version\n with popen([which_prog, ""--version""]) as exc:\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\contextlib.py"", line 113, in __enter__\n return next(self.gen)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\site-packages\\qcengine\\util.py"", line 304, in popen\n ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 858, in __init__\n self._execute_child(args, executable, preexec_fn, close_fds,\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 1251, in _execute_child\n args = list2cmdline(args)\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\subprocess.py"", line 553, in list2cmdline\n for arg in map(os.fsdecode, seq):\n File ""C:\\Users\\vike\\Anaconda3\\envs\\p4env\\lib\\os.py"", line 818, in fsdecode\n filename = fspath(filename) # Does type-checking of `filename`.\nTypeError: expected str, bytes or os.PathLike object, not NoneType\n\n')); ```; From yml install; ```; Collecting package metadata (repodata.json): done; Solving environment: |; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; Examining python=3.9: 43%|██████████████████████████▏ | 6/14 [00:19<00:29, 3.66s/it]|Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental psi4: 57%|▌| 8/14 [00:22<00:10, \Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 19it [01:02, 3.49Examining conflict for geometric torsiondrive matplotlib qcengine python qcelemental gau2grid psi4: : 20it [01:02, 3.71Examining conflict for matplotlib python: : 20it [01:07, 3.71s/it] failed -; Solving environment: /; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; Examining python=3.9: 43%|██████████████████████████▏ | 6/14 [00:20<00:30, 3.87s/it]|Examining libblas[build=*mkl]: 64%|█████████████████████████████████",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020:3406,install,install,3406,https://psicode.org,https://github.com/psi4/psi4/issues/2910#issuecomment-1486892020,1,['install'],['install']
Deployability," included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:78:76: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)0, (pybind11::detail::op_type)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:1671,install,install,1671,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability," including by specifying exceptions in footnotes. This discouraged updating since it was hard to know what was right w/o extensive testing and/or it was easier to glide over details. The hand-gen table has been replaced to be more general listing maximum capabilities, the parallelism column has been removed, and the complementary auto-gen summary table has been added; - [x] the main hand-generated capabilities table in introduction.rst and the docstring methods table in driver.py (shows up in https://psicode.org/psi4manual/master/energy.html etc.) have been reconciled with the current state of the procedures table. Devs are now admonished to update all three concurrently :-); - [x] Some investigation and searching of CDS's memory and comparison to GAMESS concluded that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: af",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:5529,Upgrade,UpgradeHelpers,5529,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['Upgrade'],['UpgradeHelpers']
Deployability," installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36h",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1562,install,installing,1562,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability," into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""./../skeletonambit/pymodule.py"", line 65, in run_skeletonambit; skeletonambit_wfn = psi4.core.plugin('skeletonambit.so', ref_wfn). RuntimeError: ambit::Tensor::build: Ambit has not been initialized.; ```. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:1742,install,install-,1742,https://psicode.org,https://github.com/psi4/psi4/pull/593,2,['install'],['install-']
Deployability," is not yet released and will not be until I do a few applications and write a paper myself. The recommended version to use is still v1.6 in the meantime and CASPT2 is therefore not supported yet. But that doesn't mean it shouldn't work.; - One important thing is that I haven't made CASPT2 parallel yet. You will have to wait forever when the number of virtuals is modest / large.; - A second important remark is that I also currently use only pseudocanonical orbitals for DMRG-CASPT2, so for elongated molecules you will waste your time at the moment, because the virtual dimension is way smaller by using localized orbitals. But for that I need to implement the full 4-RDM instead of the diagonal one, and that is not for the very near future. The cumulant approximation is also ready on the other hand, but will only be used in conjunction with the CASPT2 interface at one point in the future.; - I don't use the current HEAD of psi4/psi4, but use the tagged version https://github.com/psi4/psi4/releases/tag/0.5, but from the git commit tag in your input above, I gather you use this version as well. @loriab : good thing psi4 prints the commit tag!; - The compiler with which I compiled psi4 and chemps2 is gcc/g++ 5.2.1 and I am on Ubuntu 15.10. I also tried the intel compiler 16.0.0 20150815 and mixtures of both, but only by compiling everything with the GNU compiler I was able to make things work thus far. This means that before releasing v1.7 I also need to check several compiler combinations and make things work, but because compilers get updated at regular times, I will wait with that.; - That all being said, I don't know what is going on. You clearly use the right git commit of psi4 (8e01b1f), but the plugin API is clearly wrong. The following is copied from a message above:. ```; An error has occurred Py-side; Traceback:; : Python argument types in; psi4.plugin(str); did not match C++ signature:; plugin(std::string, boost::shared_ptrpsi::Wavefunction): File """", line 48, in",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266#issuecomment-186113504:1036,release,releases,1036,https://psicode.org,https://github.com/psi4/psi4/issues/266#issuecomment-186113504,1,['release'],['releases']
Deployability," isotope and different temperatures and nonstandard isotopes and for nonstandard isotopes up through vibrations and enthalpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/345:1572,update,updated,1572,https://psicode.org,https://github.com/psi4/psi4/issues/345,1,['update'],['updated']
Deployability," method, and it also provides the method by which density screening can be added directly to the relevant JK classes.; Second, this PR uses the shell_significant() framework to reimplement screening for certain JK methods. Most significantly, as implied in the first point, the biggest change in this regard was the removal of shell_significant_density() from TwoBodyAOInt into the domain and its reimplementation into the JK shell_significant() definitions. With this change, density screening is now the domain of individual JK classes rather than the TwoBodyAOInt class, which was one of the primary goals of this overall refactor PR set in the first place. Additionally, another method that was subject to slight changes from the shell_significant() framework was the Yoshimine PKJK algorithm, in which its test for shell significance was implemented using the shell_significant() framework. Composite JK algorithms commonly implemented a density-based screening within them, as part of their formulation, but a shell_significant() formalism has been added to SplitJK. This framework isn't unified the same way it is for the base JK class, because the needs for testing shell significance for different composite subalgorithms varies from method to method. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3098:2630,release,release,2630,https://psicode.org,https://github.com/psi4/psi4/pull/3098,1,['release'],['release']
Deployability," missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.8** is installable with the potential options; ├─ python [3.8.0|3.8.1] would require; │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; ├─ python [3.8.10|3.8.11|3.8.8] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; ├─ python 3.8.12 would require; │ └─ openssl >=1.1.1l,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.8.13 would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.8.15|3.8.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.8.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.8.2 would require; │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; ├─ python [3.8.2|3.8.3|3.8.5] would require; │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; └─ python 3.8.8 would require; └─ openssl >=1.1.1j,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.9 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:2658,install,installed,2658,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability, module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14178,Install,Install,14178,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:9394,release,release,9394,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability," name you want, and comment out any optional qc addons you don't want. ; 2. Then issue something like`conda env create -f Linux-buildrun-maxeco.yaml` and activate the environment. ; 3. Clone psi4, then `cmake -S. -Bobjdir -DBUILD_SHARED_LIBS=ON ...`, and it usually configures fine. ; 4. For Apple Silicon, there isn't a env yaml file yet, but replacing `libblas=*=*mkl` with `libblas=*=*accelerate` or `libblas=*=*openblas`, getting rid of other mkl lines, and aggressively pruning qc addons (not many ported to arm64) should do the trick.; 5. For Apple in general, you probably need the `target-sdk` stuff at https://github.com/psi4/psi4/blob/master/.github/workflows/ecosystem.yml; 6. For Linux, if you want a high-AM L2, replace this line `conda-forge/label/libint_dev::libint=2.7.3dev1` https://github.com/psi4/psi4/blob/master/devtools/conda-envs/Linux-buildrun-maxeco.yaml#L22 with `psi4/label/testing::libint2=2.7.2=h2fe1556_1` . Despite the different package names, versions, and channels, they're built from the same source, just different configuration. (I can't build a big AM w/i the 6h c-f time window.). ### Future Build Tools. Previously, the main build helper has been the `psi4-dev` conda package that combines a maximal set of build tools (compilers, cmake, etc.) and psi4 buildtime ecosystem packages along with a little script `psi4-path-advisor` to firmly configure cmake with conda env locations. As far as I know, this is pretty convenient and durable, especially for build-once-use-forever workflows. Complications I've heard of are (1) Mac `CONDA_BUILD_SYSROOT` sometimes required present/absent and (2) `psi4-dev` is monolithic, awkward to update, or sometimes out-of-date with psi4 master's requirements. I, for one, don't often use `psi4-dev` b/c I want more flexibility with switching out packages. **So, I'd be glad to hear thoughts on what form and contents the build helpers should take. A few plans and questions below, but any feedback appreciated.**. 1. Do you want",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:2536,configurat,configuration,2536,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['configurat'],['configuration']
Deployability," no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if you need additional time to rebase in a change.; ## Summary. Changes for developers:; - **WARNING!** All clones and forks will need to be removed when the history rewrite occurs on October 17th. This means any current work on Psi4 will no longer be able to be merged. If you need additional time let us know ASAP!; - The build system has not been extensively tested, please try it out and report bugs.; - There is a completely new directory structure.; - No more Boost in core Psi4.; - Some external libraries may not work at current.; - Plugin structure is still fluid.; - GCC 4.9 is required due to C++11 regex. Keep in mind that ICC requires GCC. Changes for users:; - If you use any of the pre-compiled options nothing will likely change in your everyday workflow.; - If you compile Psi4 yourself, these changes will require a completely fresh compile. The build script has moved away from setup.py to a pure CMake input.; - After the inversion you will still have the option to use standard ""Psithon"" inputs or to import psi4 as a Python module.; ## Progress (master branch); - [x] CMake Rewrite; - [x] Kill the boost; - [x] Inversion; - [x] History rewrite; - [x] Official 1.1 release; ## . Sincerely,; - Lori, Jet, Andy, and Daniel",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:5114,release,release,5114,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['release'],['release']
Deployability," of atoms: 3; Number of AO shells: 5; Number of primitives: 15; Number of atomic orbitals: 7; Number of basis functions: 7. Integral cutoff 1.00e-12; Number of threads: 2. Performing in-core PK; Using 812 doubles for integral storage.; We computed 133 shell quartets total.; Whereas there are 120 unique shell quartets.; 10.83 percent of shell quartets recomputed by reordering.; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 375; Schwarz Cutoff: 1E-12. OpenMP threads: 2; Minimum eigenvalue in the overlap matrix is 4.3422219878E-01.; Using Symmetric Orthogonalization. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF. ^C; Program received signal SIGINT, Interrupt.; 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; Missing separate debuginfos, use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64 libuuid-2.23.2-33.el7.x86_64; (gdb) bt; #0 0x00007fffe3ca696f in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) [clone ._omp_fn.16] (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #1 0x00007fffec18dc21 in __kmp_api_GOMP_parallel_40_alias () from /home/psilocaluser/toolchainconda/envs/p4dev36/lib/python3.6/site-packages/numpy/../../../libiomp5.so; #2 0x00007fffe3cab007 in psi::DFHelper::contract_metric_AO_core_symm(double*, double*, unsigned long, unsigned long) (); from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #3 0x00007fffe3cbb4ae in psi::DFHelper::prepare_AO_core() () from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so; #4 0x00007fffe3cbbb99 in psi::DFHelper::initialize() () from /home/psilocaluser/gits/hrw-qcdb/objdir-gnu36/stage/usr/local/psi4/lib/psi4/core.so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-384510030:4548,install,install,4548,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384510030,1,['install'],['install']
Deployability," officially part of the code. . Credit to @JoseMadriaga for the derivations ; [LocalCCSD1to10.pdf](https://github.com/psi4/psi4/files/11114337/LocalCCSD1to10.pdf). Useful References:; [Original DLPNO-CCSD Paper](https://aip.scitation.org/doi/full/10.1063/1.47735); [Sparse Maps II Paper](https://aip.scitation.org/doi/10.1063/1.4939030). Example Input File; ```; memory 20 GB. molecule mol {; 0 1; O 0.705 0.744 0.16; H -0.071 0.264 0.45; H 1.356 0.064 -0.014; symmetry c1; }. set {; basis cc-pVDZ; scf_type df; freeze_core true; pno_convergence normal; }; energy('dlpno-ccsd'); ```. ### Results (Waterclusters in TZ); [Speedups, relative to DF-CCSD]; ![wc_tz_speedups](https://user-images.githubusercontent.com/60559795/228892229-c3269bf9-3386-4861-8660-92a6dcc3685e.jpeg). [Percent Correlation Energy Recovered, relative to DF-CCSD, all >= 99.9%]; ![wc_tz_percent_corr_recovered](https://user-images.githubusercontent.com/60559795/228892322-7c968c62-f874-496c-84e3-06b65c84803d.jpeg). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Implement the DLPNO-CCSD algorithm. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feel free to use this code, it is not fully tested yet, but preliminary tests show encouraging results, and is MUCH faster than conventional CCSD; - [ ] If you benchmark my code, please post results in the thread. ## Questions; - [ ] Question1. ## Checklist; - [ ] Add documentation; - [ ] Add references to terms and equations; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2915:1343,release,release,1343,https://psicode.org,https://github.com/psi4/psi4/pull/2915,1,['release'],['release']
Deployability," only pops up for cbs/findif/nbody jobs, which can be confusing. This PR promotes to tag complaint to upon `import psi4` for uniformity.; - [x] ""OliP"" [reported a bug at the forum](http://forum.psicode.org/t/problems-with-cbs-and-version-1-6/2494) where an input like the below returned `‘<’ not supported between instances of ‘dict’ and ‘dict’ `. This came about because I was comparing well-behaved dertype per method tuples like; ```; ['hf', 'mp2', 'ccsd(t)', 'ccsd(t)']; [(2, {}), (1, {}), (1, {}), (1, {})]; ```. rather than the real-life cases one gets with ROHF. Sorting on only the dertype fixes the bug.; ```; ['hf', 'mp2', 'ccsd(t)', 'ccsd(t)']; [(2, {}), (0, {1: ""\nPsiException: select_mp2_gradient: Method 'mp2' with MP2_TYPE 'DF', FREEZE_CORE 'True', and REFERENCE 'ROHF' not available\n\n""}), (0, {1: ""\nPsiException: select_ccsd_t__gradient: Method 'ccsd(t)' with CC_TYPE 'CONV' and REFERENCE 'ROHF' not available\n\n""}), (0, {1: ""\nPsiException: select_ccsd_t__gradient: Method 'ccsd(t)' with CC_TYPE 'CONV' and REFERENCE 'ROHF' not available\n\n""})]; ```. ```; molecule N {; 0 4; N 0.00 0.00 0.00; }. set {; scf_type direct; reference rohf; r_convergence 6; d_convergence 7; e_convergence 8; freeze_core true; }. e_cbs = energy(‘cbs’,; scf_basis=‘aug-cc-pV[TQ5]Z’,; corl_wfn=‘mp2’,; corl_basis=‘aug-cc-pV[TQ]Z’,; delta_wfn=‘ccsd(t)’,; delta_basis=‘aug-cc-pV[DT]Z’); ```. - [x] @hokru reported that `energy('SCF/def2-SVP',bsse_type=['cp','nocp'],dft_functional=my_functional)` got broken with the distributed driver. That's patched up for string `dft_functional` at least.; - [x] I noticed that a change I made to `_qcvars_transitions` to help version reported would make `variables(include_deprecated_keys=True)` fail. that's fixed. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2590:1892,patch,patched,1892,https://psicode.org,https://github.com/psi4/psi4/pull/2590,1,['patch'],['patched']
Deployability," project...; -- Install configuration: ""Release""; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/buffer_info.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/chrono.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/typeid.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/class.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/common.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/descr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/init.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/detail/internals.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eval.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/operators.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/options.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/stl_bind.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/attr.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/cast.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/complex.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/objdir-gcc/stage/include/pybind11/eigen.h; -- Installing: /home/psilocaluser/gits/hrw-quaternary/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966:2543,Install,Installing,2543,https://psicode.org,https://github.com/psi4/psi4/issues/1548#issuecomment-466729966,1,['Install'],['Installing']
Deployability," psi by GCC with OpenMP=ON and end up with both gomp and iomp5 linked, which is a subtle disaster.; - What we have been doing: cmake/math finds mkl_rt and outright adds iomp5, pthreads, etc. external/common/lapack packages those all into a target to pass along to blas-using dependencies. Meanwhile cmake/autocmake_omp detects just OpenMP flags (e.g., `-fopenmp` and `-qopenmp`) for the various compilers add adds them directly to `CMAKE_CXX_FLAGS` (for propagation to to psi4 (and consequently plugins) but **not** to deps (which might have OpenMP=OFF)). Actual OpenMP _libraries_ are not handled (except the aforementioned iomp5 hard-code) so (1) gomp can intrude with GCC and (2) the nice `-fopenmp=iomp5` capabilities of Clang aren't used.; - Trouble with sending me on long car trips (i.e., LSU) is that I begin plotting how things _should_ be. This PR is my take on answering this. It's insane to spring it at this point in the release cycle, but the first time after Setca that I tried building an OpenMP plugin, it was mixing omp libs in a sad manner, so _some_ fix is needed, maybe less drastic than this.; - New cmake (>=3.10, I think) makes nice targets for OpenMP that are per-lang (Psi only cares about CXX) and include both flags and libraries. So in this PR, BLAS is handled as before, except it stops after `mkl_rt` and doesn't add `iomp5;pthread;etc`. Those are still formed into `tgt::lapack` in cmake/common/lapack. But before formation of that final target, it first calls FindMathOpenMP that depending on compiler & isMKL=T/F & ENABLE_OPENMP=T/F, sets some stuff to guide FindTargetOpenMP. FindTargetOpenMP calls ordinary FindOpenMP provided by cmake which will return a flag-and-libs containing target from modern cmake or this is constructed in-file as compensation for old cmake. That target (which might or might not be present depending on if OpenMP is enabled or found for compiler) is passed back to FindMathOpenMP which links to it if present but _always_ returns a `tgt::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1031:1930,release,release,1930,https://psicode.org,https://github.com/psi4/psi4/pull/1031,1,['release'],['release']
Deployability," recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159:9134,install,install,9134,https://psicode.org,https://github.com/psi4/psi4/issues/3159,1,['install'],['install']
Deployability," reported error with setting basis sets. As this seems a rather sane assumption to me, it is Now enforced. This uncovered a second error when ZMAT coordinates were used: energies at displacements would be off by ~4 hartrees. When the molecule is cloned in the process of getting a c1 wavefunction, I found that the coordinates of the cloned molecules differed from those of the original molecule, right before the basis sets were set. Telling the basis sets that the atoms are not what they actually are seems like the kind of thing that would lead to garbage energies, though I didn't get a detailed mechanism for this. To get the geometries consistent, I had to change the atom cloning procedure. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Molecule clone now guarantees that each elements of the atom_ list is identical to some element of the full_atom_ list.; - [x] Atom clone now guarantees that ZMATs with computed coordinates carry the computed coordinates over to the clone.; * **User-Facing for Release Notes**; - [x] Fixed a bug where using density fitting for a frequency computation would cause an error unless the symmetry was explicitly set to c1. ## Questions; - [x] Symmetry is used for the purposes of generating displacements, but not for labeling normal modes. Even if we can't take advantage of symmetry for the energetics, we should be able to use symmetry for displacements and normal modes. My hunch is that this is a problem with changing the symmetry of the molecule between the two findif calls, but I'd like Py-side findif to be accepted before looking into this, just in case. Sound good?. ## Checklist; - [x] Tests added for any newly functional features; - [x] [All of full tests run, modulo DFT benchmarks and plugins](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge (as soon as the last review is in)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1108:1620,Release,Release,1620,https://psicode.org,https://github.com/psi4/psi4/pull/1108,1,['Release'],['Release']
Deployability," repository. And it doesn’t allow you to make private a fork of a public repo, though there does seem to be an alternative: https://help.github.com/articles/duplicating-a-repository/ https://help.github.com/articles/duplicating-a-repository/ . And in the beginning we didn’t want everyone to have to pay for storing private repositories if they wanted private forks (moot now since github offers private storage for scientists). That’s more of the history of how the current scheme came to be. I’m open to better schemes, but I think most of our problems can be solved by an automated public/private master sync when safe. Lori. > On May 3, 2015, at 12:18 PM, andysim notifications@github.com wrote:; > ; > It’s not really an SVN/CVS thing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them.; > ; > The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date.; > ; > These issues were mooted a few years ago whe",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98501924:1168,release,release,1168,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98501924,1,['release'],['release']
Deployability, resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:185: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:196: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:242: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:308: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:377: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:489: Not detecting module v2rdm_casscf. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:15467,Install,Install,15467,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED (Not detecting module erd. Install package if necessary to enable tests.) [ 18%]; psi4conda/envs/psi4e",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:1162,Install,Install,1162,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE')); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1000, in scf_wavefunction_factory; superfunc, disp_type = dft_funcs.build_superfunctional(name, (reference in [""RKS"", ""RHF""])); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6407,install,install,6407,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,2,['install'],['install']
Deployability," select_cisd; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4156, in run_cepa; > fnocc_wfn = core.fnocc(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - MP3/cc-pVDZ & MP4/cc-pVDZ: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 28, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 333, in select_mp3; > return func(name, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_occ; > occ_wfn = core.occ(ref_wfn); >; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; > The most recent 5 function calls were:; >; > - CISD/cc-pVDZ via DETCI: *FAILED*; >; > PSIO_ERROR: Can't find TOC Entry IWL Buffers; > PSIO_ERROR: unit = 33, errval = 13; > PSIO_ERROR: 13 (no such TOC entry); > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 29, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:11640,install,install,11640,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,1,['install'],['install']
Deployability," src\psi4\mrcc\mrcc.lib src\psi4\occ\occ.lib src\psi4\optking\optking.lib src\psi4\psimrcc\psimrcc.lib src\psi4\sapt\sapt.lib src\psi4\scfgrad\scfgrad.lib src\psi4\lib3index\3index.lib src\psi4\libciomr\ciomr.lib src\psi4\libcubeprop\cubeprop.lib src\psi4\libdiis\diis.lib src\psi4\libdisp\disp.lib src\psi4\libdpd\dpd.lib src\psi4\libfilesystem\filesystem.lib src\psi4\libfock\fock.lib src\psi4\libfunctional\functional.lib src\psi4\libiwl\iwl.lib src\psi4\libmints\mints.lib src\psi4\libmoinfo\moinfo.lib src\psi4\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\Extensions\Microsoft\Python\Miniconda\Miniconda3-x64\libs\Python37.lib"" F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\gg.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\xc.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\deriv.lib F:\psi4_v1.3.2\out\build\x64-Release\stage\lib\int.lib D:\OpenBLAS\lib\openblas.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib && cd .""; LINK Pass 1: command ""C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMa",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:3545,Release,Release,3545,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['Release'],['Release']
Deployability," the TOC, moving it to a separate page, to be followed by notes.; - [x] the main hand-generated capabilities table in introduction.rst tried to do a lot in specifying allowed refs, types, dertypes, and parallelism, including by specifying exceptions in footnotes. This discouraged updating since it was hard to know what was right w/o extensive testing and/or it was easier to glide over details. The hand-gen table has been replaced to be more general listing maximum capabilities, the parallelism column has been removed, and the complementary auto-gen summary table has been added; - [x] the main hand-generated capabilities table in introduction.rst and the docstring methods table in driver.py (shows up in https://psicode.org/psi4manual/master/energy.html etc.) have been reconciled with the current state of the procedures table. Devs are now admonished to update all three concurrently :-); - [x] Some investigation and searching of CDS's memory and comparison to GAMESS concluded that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deplo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:5166,update,update,5166,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['update'],['update']
Deployability," the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to ca",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3239:1409,release,release,1409,https://psicode.org,https://github.com/psi4/psi4/pull/3239,1,['release'],['release']
Deployability," to the slack channel. I usually don't use slack, but I'll try to get something set up. > There are different levels of integration. An independent plugin, a deep C-layer integration and a; > python-level integration. Some of the questions depends on what you want to aim for (or need). Well, also depends a bit what you guys have in mind and how deep we want the integration to be. My thoughts:; - A **C-layer integration** is possible, but might be quite hard, since our iterative solvers are written in `python`. Given one falls back to solvers in C from psi4, in theory one can integrate adcc into the C core as well at the moment, but our long-term plan is to shuffle more and more to the python layer, so it's most likely not going to be a very sustainable idea. On the upside it would lead to a deep integration of the codes and allow to re-use parts of adcc elsewhere, e.g. the tensor library we are using (I know you are working on xtensor, but just an example).; - **Independent plugin** or **python-level integration**. I'm not sure what the difference is. Maybe you can detail?; What I primarily had in mind was to be able to use adcc from psi4 integrating with the psi4-way to set up and run calculations. My ideas was to be able to use the psi4 interface to setup ADC-related settings for adcc and transfer defaults or preferences from the psi4 setup to adcc. Right now you can already use psi4 SCF results in adcc (see e.g. [this example](https://github.com/adc-connect/adcc/blob/master/examples/water/psi4_ccpvdz_adc2_spectrum.py)), but some parameters (like convergence tolerances) need to be manually tweaked to agreement in both programs. That's an annoyance I'd like to see resolved.; In turn the results from adcc are right now in our own python datastructure. From this they could be easily transformed in some other datastructure more useful / agreeing with the rest of psi4. So far I was, however, unable to deduce what this would be from the psi4 code base. Of course one coul",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797:1038,integrat,integration,1038,https://psicode.org,https://github.com/psi4/psi4/pull/1744#issuecomment-547385797,1,['integrat'],['integration']
Deployability," use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_json; Using `psi4.json_wrapper.run_json` instead of `psi4.schema_wrapper.run_qcschema` is deprecated, and in 1.5 it will stop working. -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================= short test summary info =========================================================================; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:13: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:162: Not detecting module mrcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:186: Not detecting module chemps2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:233: Not detecting module mp2d. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:12414,Install,Install,12414,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['Install'],['Install']
Deployability," v2.0.0 release; Submodule 'tools/clang' (https://github.com/wjakob/clang-cindex-python3) registered for path 'tools/clang'; Cloning into 'tools/clang'...; Submodule path 'tools/clang': checked out '254c7a91e3c6aa254e113197604dafb443f4d429'; [ 25%] No update step for 'pybind11_external'; [ 25%] No patch step for 'pybind11_external'; [ 31%] Performing configure step for 'pybind11_external'; -- The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found PythonInterp: /usr/bin/python3.4 (found version ""3.4.5"") ; -- Found PythonLibs: /usr/lib64/libpython3.4m.so; -- pybind11 v2.0.0; -- Configuring done; -- Generating done; -- Build files have been written to: /usr/qc/psi4.git/objdir/external/upstream/pybind11/pybind11_external-prefix/src/pybind11_external-build. ```. For reasons unknown to me I cannot reproduce my previous compilation error. Previously I could reproduce it even when cloning a brand new copy of psi4. Now it finishes the compilation normally.; Maybe the old psi4 installation directory interfered somehow? Just guessing at this point. However, I still cannot execute psi4. If I use a symlink to the installed binary I get a python error:; ```; import psi4; ImportError: No module named psi4; ```; If I use the full path i get `Intel MKL FATAL ERROR: Cannot load libmkl_avx.so or libmkl_def.so.` instead. But maybe PR https://github.com/psi4/psi4/pull/563 will fix these things for me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:4485,install,installation,4485,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,2,['install'],"['installation', 'installed']"
Deployability," with a random assortment of bytes. In the above example, the full host name should be `ip-172-31-XX-XXX.us-east-2.compute.internal`. We then examined how psi4 determines and processes the host name. It turns out, psi4 uses the `gethostname` function from the C API to get up to the first 40 bytes of the host name, and then it writes those bytes to `timer.dat`. The host name of this particular compute cluster is over 40 chars/bytes. This is unsafe because if a host name has more than 40 characters, the null byte (`\0`) won't be written to `timer.dat` to signify the end of the string, and psi4 will continue to write whatever is in memory past the 40 chars/bytes until it hits a null byte. This also explains the original error, b/c writing random bytes to a file can lead to non-utf-8-compliant files. It turns out that [linux defines a maximum host name length of 64](https://man7.org/linux/man-pages/man2/gethostname.2.html), so the easy fix here is to just increase the size of the host name buffer from 40 to 65 (== 64 + 1 for the null byte at the end). I have no idea why this length was previously limited to 40. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fix bug resulting in `UnicodeDecodeError` and corrupted `timer.dat` files. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] increase the buffer size used to retrieve the host name and enforce that the host name ends in a null byte before writing to `timer.dat`. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3043:3267,release,release,3267,https://psicode.org,https://github.com/psi4/psi4/pull/3043,1,['release'],['release']
Deployability," | C[^8] | McMurchie Davidson | any | 31Mar22, after #2414, v1.6, v1.7 |; | ~A[^6]~ | ~standardize ordering~ | ditto step B | #2537 | ditto step B | sss | `g5` | rm `_16` | rm `_8` | — |; | A' [^9] | flex solid-harm ordering | [loriab:new-cmake-2023-take2-b](https://github.com/loriab/libint/tree/new-cmake-2023-take2-b) https://github.com/evaleev/libint/pull/259 | 8May23, after #2861, v1.8, v1.9 (see also A'') | `libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1` | sss | `eri_c4_d1_l5` | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2368,release,releases,2368,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['release'],['releases']
Deployability," | c-f | | C; qcelemental | yes | | | | psi4 copied from c-f | Py; qcengine | yes | | | | psi4 copied from c-f | Py; ambit | no | psi4 | psi4 | --- | | C++; chemps2 | no | psi4 | psi4 | --- | | C++; dftd3 | no | psi4 | psi4 | psi4 | | Fortran; dkh | no | psi4 | psi4 | --- | | Fortran; gcp | no | psi4 | psi4 | psi4 | | Fortran; gdma | no | psi4 | psi4 | --- | | Fortran; pcmsolver | no | psi4 | psi4 | --- | | C++, Fortran; simint | no | psi4 | psi4 | --- | | C++. * not req'd means present in Linux conda package but not required for a minimal conda package; * gcp should switch to mctc-gcp already on c-f for L but needs a MKL build; * gdma is a little behind in releases b/c psi actually uses a home-adapted library instead of the executable; * pcmsolver latest (v1.3, I think) can't work with psi4 after core-developer of both gave a medium-effort try. But there's a slight problem with previous release v1.2, too, so psi4 uses an unpublished v1.2.1.1 (or something like that). a patch in the conda-recipe from v1.2.1 upstream is probably the better sol'n; * simint is peculiar in that you need to choose a target instruction set at compile time. usual psi default may not be general enough for c-f. ### `psi4-rt`. project | req'd | linux | osx | win | noarch | lang; -----|-----|-----|-----|-----|-----|-----; libtensorlight | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; adcc | no | psi4 copied from adcc | psi4 copied from adcc | --- | | C++; fockci | no | | | | psi4 | Py; mp2d | no | psi4 | psi4 | --- | | C++; openfermion | no | | | | psi4 | Py; openfermionpsi4 | no | | | | psi4 | Py; pycppe | no | psi4 | psi4 | --- | | C++; pylibefp | no | psi4 | psi4 | --- | | C++; libefp | no | psi4 | psi4 | --- | | C; resp | no | | | | psi4 | Py; snsmp2 | no | | | | psi4 | Py; v2rdm_casscf | no | psi4 | psi4 | --- | | C++, Fortran. * openfermion is better housed on c-f anyways. devs are willing (I have an open issue on this with them). only issue is that they have several o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900:1279,patch,patch,1279,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-945995900,1,['patch'],['patch']
Deployability, |*** psi4_/cmake/math/MathLibs.cmake 2017-01-20 09:35:51.000000000 +0100; |--- psi4/cmake/math/MathLibs.cmake 2017-01-24 09:28:13.812117187 +0100; --------------------------; Patching file cmake/math/MathLibs.cmake using Plan A...; Hunk #1 succeeded at 73.; done; [sfux@develop01 psi4]$; ```; The code (using OpenBLAS instead of MKL) compiles without error but fails in an installation step:. ```; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/filesystem.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/util/tty/color.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_autofrag.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib//psi4/driver/wrapper_database.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/header.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/extras.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/__init__.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/config.py; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4Config.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/share/cmake/psi4/psi4ConfigVersion.cmake; -- Installing: /scratch/appssf/psi4/build/stage/cluster/apps/psi4/1.1a1/x86_64/lib/psi4/core.so; CMake Error at src/cmake_install.cmake:44 (file):; file INSTALL cann,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274762486:4045,Install,Installing,4045,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274762486,1,['Install'],['Installing']
Deployability," │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8.17 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [0.0.10|0.1.100|...|0.5.0] would require; │ │ └─ python 2.7* , which can be installed;; │ ├─ psi4 1.1+add49b9 would require; │ │ └─ gcc-5-mp , which requires; │ │ └─ mpc 1.0.1 , which does not exist (perhaps a missing channel);; │ ├─ psi4 [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; └─ python 3.9** is installable with the potential options; ├─ python 3.9.0 would require; │ └─ openssl >=1.1.1h,<1.1.2a , which can be installed;; ├─ python 3.9.1 would require; │ └─ openssl >=1.1.1i,<1.1.2a , which can be installed;; ├─ python [3.9.11|3.9.12] would require; │ └─ openssl >=1.1.1n,<1.1.2a , which can be installed;; ├─ python 3.9.12 would require; │ └─ openssl >=1.1.1o,<1.1.2a , which can be installed;; ├─ python [3.9.13|3.9.15] would require; │ └─ openssl >=1.1.1q,<1.1.2a , which can be installed;; ├─ python [3.9.15|3.9.16] would require; │ └─ openssl >=1.1.1s,<1.1.2a , which can be installed;; ├─ python 3.9.16 would require; │ └─ openssl >=1.1.1t,<1.1.2a , which can be installed;; ├─ python 3.9.2 would require; │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; ├─ python [3.9.4|3.9.5|3.9.6] would require; │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; └─ python 3.9.7 would require; └─ openssl >=1.1.1l,<1.1.2a , which can be installed.; (ecv) [vike]$ mamba install psi4 psi4 python=3.10 -c psi4. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966:5620,install,installed,5620,https://psicode.org,https://github.com/psi4/psi4/issues/2912#issuecomment-1488619966,1,['install'],['installed']
Deployability,"""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/dft_funcs/superfuncs.py"", line 130, in build_superfunctional; ""SCF: SCF_TYPE (%s) not supported for range-separated functionals."" % core.get_option(""SCF"", ""SCF_TYPE"")); ; ValidationError: SCF: SCF_TYPE (MEM_DF) not supported for range-separated functionals.; ```; 5. SAPT0/cc-pVDZ (energies only; water dimer): Passed!; 6. FNOCC; - QCISD(T)/cc-pVDZ: **ENERGY FAILED**; ```; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 4052, in run_fnocc; fnocc_wfn = core.fnocc(ref_wfn); ; RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:; ```; - FNO-DF-CCSD(T)/cc-pVDZ: **memDF FAILED** (diskDF passed all); ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:6777,install,install,6777,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,1,['install'],['install']
Deployability,"""Nightly"" isn't actually nightly, so it's missing some bug fixes. My hunch is that this is the same bug #1938 fixed. In which case, all we can do is tell you to compile from master or wait until we update ""nightly"" again. @bgpeyton, does this look right to you?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1954#issuecomment-658153944:198,update,update,198,https://psicode.org,https://github.com/psi4/psi4/issues/1954#issuecomment-658153944,1,['update'],['update']
Deployability,"""`; - L: -/244/ 10/3229/4/4/303; - M: -/229/ 25/3229/6/2/304; - W: -/144/112/3229/2/4/303; - skipped on Linux are things like gpu_dfcc (needs gpus), mrcc (proprietary), cct3 (no package), fock-ci (apparently I packaged the wrong thing); - [ ] there's an unresolved issue on macOS where with Py39 adcc shows pulled from pypi but it tests fine. with Py310, adcc and others pulled from pypi and it doesn't get found for testing. leaving at Py39 for now, but mysterious; - [ ] I haven't removed all the addons from the Azure pipelines yet but I can if everyone comfortable. - Testing Strategy; - [x] `ctest` is familiar, easy to read, and doesn't require configuration. on the other hand, it can't test installations, it can't do parameterizations, and by passing through TestingMacros and runtest.py, you can't always pass environment info into it. Don't worry, it's staying exactly as it is. I've added a single short file to several ctest directories ...; - [x] moved `setup.cfg` to `pytest.ini` and install it. only pytest was using the setup.cfg file anyways. all labels (things you can `pytest -m quick` akin to `ctest -L quick`) are stored here instead of duplicated btwn setup.cfg and conftest.py. The GHA will complain if you hit unregistered label.; - [x] changed the pytest import_mode from default to ""importlib"". this means (1) we don't need to have empty `__init__.py` in all 500 ctest directories and (2) avoid name conflicts when collecting ctests. Result is that tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking generic, so may need to rename in future. - Testing Details; - [x] in tests, rewrote `using(package)` function whose role is to detect whether package present and skip test otherwise. now the fn additionally adds ""addon"" label and the name of the package label, so one can run `pytest -m dftd3`. to do this, had to separate into two fns: `uusing` for nested decorator marks and `using` ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:2874,install,install,2874,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['install']
Deployability,"""gg"" is ""gau2grid"" which is a required dependency. that's built in to the dep list (search for ""nofortran"" build and click the little ""i"") https://anaconda.org/psi4/psi4/files, so I don't know how mamba let you install that psi4 without gau2grid. I'm not quite sure what you're trying to solve. iirc, the ambertools issue was a libgfortran one, so ideally defaults and c-f would get back in sync. I can build a new nofortran build for you, but not for several days. Alternately, you can try a dual-environment setup keeping psi in a defaults-based env and keeping c-f based deps in a c-f-based env. There's a gha that models that at [github/workflows/ecosys](https://github.com/psi4/psi4/blob/master/.github/workflows/ecosystem.yml). If you continue with the nofortran build, be aware that in psi4 current master, py37 isn't supported, libint is now v2, and libxc is v5.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578#issuecomment-1125631043:211,install,install,211,https://psicode.org,https://github.com/psi4/psi4/issues/2578#issuecomment-1125631043,1,['install'],['install']
Deployability,"# **Upgrade Guide**; ~~wavefunctions must declare a density fitted basis, even if density fitting is not used. This may be ""bypassed"" by selecting zero as the basis, as in:`wfn.set_basisset(""DF_BASIS_SCF"", core.BasisSet.zero_ao_basis_set())`~~; No longer necessary, per #1014 . # **Bug Fixes**; A bug causing IRCs to converge to the initial transition state was fixed (#882)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-388170219:4,Upgrade,Upgrade,4,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-388170219,1,['Upgrade'],['Upgrade']
Deployability,"# Description; Substantial changes to the Psi4 DFT infrastructure to add several hundred new DFT functional forms. In addition, adds the SAPT(DFT) and EP2 methods. Several major performance enhancements are included as well as well. This is also one of the primary patches for the Psi4 1.2 release. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] SCF Wavefunctions can now do Hessian-Vector builds see `RHF.Hx` and `RHF.solve` for examples. This functionality supports non-totally symmetric tensors.; - [x] The DFT V Potential object now has Hessian-Vector functionality.; - [x] Added many C++ calls to the Python interface.; - [x] Reworked the building of superfunctionals. Note that the coefficients set when building a functional are no longer modified by exact exchange or MP2 correlation factors.; - [x] DFT Functionals now takes advantage of polarized vs unpolarized DFT kernels.; - [x] Added generalized solvers in `p4util/solvers.py`. These include DIIS, CG, BiCGSTAB, and Davidson.; - [x] New density-fitted AO->MO transform object. More efficient than previous objects and has multiple modes depending on the type of computation (direct or AO storage).; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:265,patch,patches,265,https://psicode.org,https://github.com/psi4/psi4/pull/698,2,"['patch', 'release']","['patches', 'release']"
Deployability,"# Known bugs; - PCM-ROHF is broken. See #999; # Library updates; - PCMSolver is updated to its latest version (1.2.1) This new release of PCMSolver is a maintenance release and no new features were added to Psi4 through this upgrade. However, more tests were added for PCM used in conjunction with ERI algorithms other than PK. A test was also added for geometry optimizations with PCM run using finite differences. See the [library's changelog](https://github.com/PCMSolver/pcmsolver/blob/release/1.2/CHANGELOG.md) for more information on what changed in the library itself.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959#issuecomment-386064898:56,update,updates,56,https://psicode.org,https://github.com/psi4/psi4/issues/959#issuecomment-386064898,6,"['release', 'update', 'upgrade']","['release', 'updated', 'updates', 'upgrade']"
Deployability,"# Overview. This is version 2.0.0 of the Psi4 build system. It is designed to speed-up build times as well as aid in transitioning to a more modular model driven by QCDB or incorporated into the Pulsar framework.; ## Disclaimer. This is _NOT_ quite ready to merge yet, but represents a substantial change that I wanted developers to start looking at and provide feedback on. In particular:; - [x] Get remote builds via Travis-CI working; - [x] @lothian 's coupled cluster code tests are failing (really could use help there); - [x] Fix sow/reap tests (not using installed data dir?); - [x] Failing test cases:; - [x] cbs-xtpl-freq; - [x] fnocc2; - [x] tu4-h2o-freq ; - [x] Hook back-up: ; - [x] chemps2; - [x] erd; - [x] dkh; - [x] gdma; - [x] ambit; - [x] pcmsolver; - [ ] Get binary working (need help from @loriab); - [x] Test (and then most likely fix) plugin system; - [x] Move GTFock to external; - [x] Libint is now external, closes #355 ; ## Speed. By means of comparison, on my box the old build system took 34 minutes and this build took 14 minutes. Both build times are for a debug build, ignore the time to build Boost, use the default angular momentum, and are run on 6 cores. Furthermore, this new build does a dramatically better job of tracking dependencies among files. For example libint/libderiv should only build once and editing a single file in mints no longer triggers a full recompilation (of course touching a file like Molecule.h basically will). This means subsequent builds should be dramatically faster, in my experience so far typically only the file that was changed needs recompiled.; ## Modularity. Under the old build the entire Psi4 build project had to track dependencies for all plugins and external interfaces. This was quickly becoming a nightmare as evidenced by the 3,000,000 emails we have been getting about chemps2 breaking. I have transitioned us to what is known in CMake land as a superbuild. In such a build all pieces of a package, including the depend",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442:562,install,installed,562,https://psicode.org,https://github.com/psi4/psi4/pull/442,1,['install'],['installed']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8cb0765`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1315/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1315 +/- ##; =========================================; Coverage ? 70.32% ; =========================================; Files ? 1508 ; Lines ? 326837 ; Branches ? 0 ; =========================================; Hits ? 229863 ; Misses ? 96974 ; Partials ? 0; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=footer). Last update [8cb0765...ed8cf13](https://codecov.io/gh/psi4/psi4/pull/1315?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1315#issuecomment-433574980:1164,update,update,1164,https://psicode.org,https://github.com/psi4/psi4/pull/1315#issuecomment-433574980,1,['update'],['update']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=h1) Report; > Merging [#1671](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=desc) into [master](https://codecov.io/gh/psi4/psi4/commit/7fb7634f7f591a7c53bdf885228731390782df28?src=pr&el=desc) will **not change** coverage.; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1671/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1671 +/- ##; =======================================; Coverage 70.9% 70.9% ; =======================================; Files 1468 1468 ; Lines 316368 316368 ; =======================================; Hits 224327 224327 ; Misses 92041 92041; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=footer). Last update [7fb7634...b61a16b](https://codecov.io/gh/psi4/psi4/pull/1671?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1671#issuecomment-504721011:1172,update,update,1172,https://psicode.org,https://github.com/psi4/psi4/pull/1671#issuecomment-504721011,1,['update'],['update']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@8d6a59d`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).; > The diff coverage is `n/a`. [![Impacted file tree graph](https://codecov.io/gh/psi4/psi4/pull/1676/graphs/tree.svg?width=650&token=w7A43dTksA&height=150&src=pr)](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=tree). ```diff; @@ Coverage Diff @@; ## master #1676 +/- ##; =========================================; Coverage ? 71.08% ; =========================================; Files ? 1468 ; Lines ? 315595 ; Branches ? 0 ; =========================================; Hits ? 224354 ; Misses ? 91241 ; Partials ? 0; ```. ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=footer). Last update [8d6a59d...aeac164](https://codecov.io/gh/psi4/psi4/pull/1676?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676#issuecomment-510816321:1164,update,update,1164,https://psicode.org,https://github.com/psi4/psi4/pull/1676#issuecomment-510816321,1,['update'],['update']
Deployability,"# [Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=h1) Report; > :exclamation: No coverage uploaded for pull request base (`master@51ebbbd`). ------. [Continue to review full report at Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=continue).; > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta); > `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`; > Powered by [Codecov](https://codecov.io/gh/psi4/psi4/pull/594?src=pr&el=footer). Last update [51ebbbd...410be6f](https://codecov.io/gh/psi4/psi4/compare/51ebbbd3257f39b516004b987f2ca650a036c320...410be6f525e84987e109ad06e4af65f2dbc289f0?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/594#issuecomment-276026020:522,update,update,522,https://psicode.org,https://github.com/psi4/psi4/pull/594#issuecomment-276026020,1,['update'],['update']
Deployability,"## Big Picture of the Project; See #1783. tl;dr: The goal is to improve orbital convergence in `occ`, but I need the module cleaned up to make it easier to think about the code I'm needing to mess with. I'm breaking a monolith PR into several. ## Description of the PR; The current PR has two objectives. First, condense the MP2 amplitude functions, MP2 energy functions, and MP2 1RDM functions into one function each. Although several methods needed these functions with minimal changes, there were two or three functions created for each of those three. Dealing with how he handled spin-scaling forced me to take a second objective: to clean OCC's handling of spin-scaling variables. OCC previously allowed the user to overwrite the definitions of opposite-spin scaling and spin-component-scaling schemes and used far too many variables. The current scheme still allows users to make their own definitions, but those are now sent to custom variables. In addition, many keywords have been eliminated. OCC's handling of spin-scaling now differs from DFOCC's, but I am not fool enough to take on that module. Obligatory ping of @susilehtola and @hokru, who expressed opinions about this on Slack, and @loriab, who expressed many opinions about this on Slack. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] We have shed another 800+ lines of code.; - [x] Major refactor of spin-scaling in OCC. All keywords for manual handling of spin scaling in OCC are removed. Please use `os_scale` and `ss_scale` for custom scaling. Select the spin scaling method that goes to the current energy by the method string you pass to the energy call.; ~~- [ ] Update documentation accordingly.~~ Deferred to Lori PR. ## Checklist; - [x] Quick tests, occ related tests, manual diff checks, and `test_mp2.py` all pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789:1691,Update,Update,1691,https://psicode.org,https://github.com/psi4/psi4/pull/1789,1,['Update'],['Update']
Deployability,"## DESCRIPTION; Using `DF_Helper`'s density fitting technology, both integral and exchange matrix computations can be sped up for in-core investigations. I have created a `JK` derived class, `symm_JK`, which wraps the technology of `DF_Helper` and enables its use for J/K building in Psi4. ## RESULTS; Here are some timing results for entire SCF procedures across various systems, using two different architectures. Notice that relative speedup between `symm_JK` and `DFJK` improves for non-uniform memory access (NUMA) architectures. ![april research update](https://user-images.githubusercontent.com/19575820/38739410-de32a49c-3f02-11e8-9512-c4edc165f259.png). ![april research update-1](https://user-images.githubusercontent.com/19575820/38739454-f5f0a6e2-3f02-11e8-9196-cdcd97cdcd34.png). ## TODO; The new JK building object, `symm_JK`, will be faster than DFJK for in-core implementations. However, it will be slower for disk-based implementations. ; - [x] Add check to figure out which object to use for J/K building. (in-core vs disk)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961:552,update,update,552,https://psicode.org,https://github.com/psi4/psi4/pull/961,2,['update'],"['update', 'update-']"
Deployability,"## Description. ## Dev notes & details; - [x] when we link of functions/classes outside psi4, it looks for the intersphinx object inventory to link to their docstring. this updates the location from the old RTD pages to the new GHpages docs for QCArchive. not a surprise that it broke since the QCFractal release is triggering site shuffling of all the supporting material. ## Checklist; - [x] docs build works locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3048:173,update,updates,173,https://psicode.org,https://github.com/psi4/psi4/pull/3048,2,"['release', 'update']","['release', 'updates']"
Deployability,## Description. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `set_tweak(vec)` killed off (deprecated since v1.5); - [x] allows LibXC v5 or v6; - [x] fixes one test for python 3.11 and requires a new pb11 for it. ## Checklist; - [ ] ~Tests added for any new features~; - [x] full tests run with libxc6 and python 3.11. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2817:149,release,release,149,https://psicode.org,https://github.com/psi4/psi4/pull/2817,1,['release'],['release']
Deployability,"## Description. #### background; We keep needing periodic table and physical constants data upstream of psi4 (psi4 Molecule, pyoptking, mol parsing, common driver, etc.), so it makes little sense that the Source of Truth is c-side Psi4 headers, `masses.h` and `physconst.h`. Nowadays, physical constants are in psi three times (c-side, py-side, qcdb) and masses are twice but of the 4 arrays in `masses.h`, only one, `an2masses` is ever called in theory, and I don't see it called in practice. #### solution; Move these aspects into their own [lightweight python module that's easily updated](https://github.com/qcdb/qcelemental). That module can write psi4 header files, which are what's copied here. #### stages; - [x] c-side `physconst.h` updated here CODATA 2010 (Andy c.2012) --> CODATA 2014; - [x] py-side `psi4.driver.constants.physconst.py` updated here, through autogeneration from c-side; - [x] qcdb-side `psi4.driver.qcdb.physconst.py` updated here, through copying and prefixing from py-side; - [x] c-side `masses.h` updated here from undated NIST document (that includes through element 117, so it can't be too old). changing this alone has no effect on the tests.; - [ ] py-side `psi4.driver.qcdb.periodictable` NOT updated here. (so effectively masses are unchanged in this PR.) Later, py-side psi4 will import this new module to get its periodictable data.; - [x] Implications to the test suite:; - [x] lots of nuclear repulsion energies wanted changing. I took them at their word; - [x] wherever we tested SCF or SCF+ to 9+ decimals, comparisons failed. I've copied in the new values. energy figures tended to be good beyond 6 decimals. #### PT changes; * Main major change is to Krypton, where the generic (non-isotope) element had been assigned to the wrong isotope. Then there's lots of unstable elements that had the same thing wrong, so the below generic elements differ by 1–13 [u]. Only other element to differ by > 1.e-5 is Darmstadtium.; ```; Checking z2el vs. Psi4 ... Check",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1213:584,update,updated,584,https://psicode.org,https://github.com/psi4/psi4/pull/1213,4,['update'],['updated']
Deployability,"## Description. A general update to the MCSCF module within Psi4.; ## Features; - [x] More canonical MCSCF printing, including NO occupation numbers.; - [x] Adds Augmented Hessian iterations.; - [x] Adds the popular MCSCF ""rotate"" command; - [x] Fixed rare segfault on macs.; - [x] Removed many memory leaks.; - [x] Switched a python-based driver for more flexibility in the future.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/482:26,update,update,26,https://psicode.org,https://github.com/psi4/psi4/pull/482,1,['update'],['update']
Deployability,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/365:28,update,updates,28,https://psicode.org,https://github.com/psi4/psi4/pull/365,1,['update'],['updates']
Deployability,"## Description. Accumulated fixes from Mac binary build round; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fix some ambit import and temporarily reroute source location until @jturney around to process cmake changes; - [x] in an effort to standardize internal builds as using static libraries and detected builds as using shared, **boost detection now looks for shared**; - [x] install `psi4.so` to site-packages rather than bin; - [x] fix mollerplesset plugin; - [x] misc. cleanup; - [x] switched Intel to `-qopenmp`; - [x] added a couple include paths so plugin includes so that plugins can be compiled against installed instead of source psi4; - [x] fix imports and iwl checks in plugin templates; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/413:423,install,install,423,https://psicode.org,https://github.com/psi4/psi4/pull/413,2,['install'],"['install', 'installed']"
Deployability,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/318:50,upgrade,upgrade,50,https://psicode.org,https://github.com/psi4/psi4/pull/318,1,['upgrade'],['upgrade']
Deployability,"## Description. Bumped Clang Travis test to clang-3.8 from clang-3.7; - [x] Makes me hum ""New Slang"" by The Shins.; - [x] Makes Travis use the latest Clang (3.8) instead of 3.7 for the release build.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/439:185,release,release,185,https://psicode.org,https://github.com/psi4/psi4/pull/439,1,['release'],['release']
Deployability,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/277:59,install,install,59,https://psicode.org,https://github.com/psi4/psi4/pull/277,6,"['install', 'update']","['install', 'update']"
Deployability,## Description. DF_SCF_GUESS was not completely suppressed for PK integrals. The code is now cleaned up and the documentation updated.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Clean up DF_SCF_GUESS so that it only acts on integral direct computations; - [x] Update the documentation; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/284:126,update,updated,126,https://psicode.org,https://github.com/psi4/psi4/pull/284,2,"['Update', 'update']","['Update', 'updated']"
Deployability,## Description. Distilli should provide PR testing on mac for all future updates. This is a test PR for this functionality.; ## Status; - [ ] Do NOT merge me.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/445:73,update,updates,73,https://psicode.org,https://github.com/psi4/psi4/pull/445,1,['update'],['updates']
Deployability,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/401:305,install,installed,305,https://psicode.org,https://github.com/psi4/psi4/pull/401,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"## Description. Documentation for plugin creation using binary distribution (on linux only).; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] Documents setup of conda envs (w gcc and openblas), compilation of Makefile.conda, and updates documentation of --new-plugin with `+ambit` keyword.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/366:270,update,updates,270,https://psicode.org,https://github.com/psi4/psi4/pull/366,1,['update'],['updates']
Deployability,"## Description. Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and makes F/I-SAPT postprocessing scripts available in install/share. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [ ] Enables the average citizen to quickly begin using F/I-SAPT.; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/467:142,install,install,142,https://psicode.org,https://github.com/psi4/psi4/pull/467,1,['install'],['install']
Deployability,"## Description. Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and makes F/I-SAPT postprocessing scripts available in install/share.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Enables the average citizen to quickly begin using F/I-SAPT.; ## Status; - [x] Ready to go. Looks ready to me, though there may well be further reST changes after viewing the docs build. @robparrish may want to look it over. We'll close the other PR.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470:142,install,install,142,https://psicode.org,https://github.com/psi4/psi4/pull/470,1,['install'],['install']
Deployability,"## Description. Finally, the first of @bozkaya's new methods. These are the canonical (non-orbital-optimized, non-FNO) CC methods with UHF reference by density-fitting and Cholesky decomposition. Gradients available for the most popular methods. This is PR No. 5 in the mega-dfocc-remp series. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] new methods!; - [x] uhf df ccd E & G; - [x] uhf df ccsd E & G ; - [x] uhf df ccsd(t) E & G (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf df a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd-ccd E; - [x] uhf cd-ccsd E; - [x] uhf cd-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] pick over canonical methods and run some basic timings tests; - [x] TODO: kill `new` pass; - [x] TODO: there might be UHF CCD in there, too.; - [x] TODO: merge #2731 first. it has a lot of stdsuite changes that I don't want to rebase through. nevertheless, stdsuite on the new methods is working fine locally. the azure errors are that uhf cc methods are running rather than throwing NYI as it expects.; - [x] TODO: df ccsd(t) gradients need to be marked experimental and semi-hidden until optimization. REVISED 25 Oct; ```; Module comparison timings [s] for CCSD & CCSD(T) energy & gradient; * Benzene, C6H6; * Either aug-cc-pVDZ (192 nbf) or cc-pVDZ (119 nbf); all-electron; * Same singlet system run as RHF & UHF; * CC converged to 1e-7; * 20 GiB, 8 threads. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2739:426,release,release,426,https://psicode.org,https://github.com/psi4/psi4/pull/2739,1,['release'],['release']
Deployability,"## Description. Fix for ROHF stability analysis.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes the old ROHF stability analysis code, to account for the updated ROHF ordering used in libtrans.; - [x] Provides a test (taken from Psi3) to verify the correctness of the ROHF stability code.; ## Notes. This code will surely be replaced by a Davidson-like solver sometime soon, but it may be useful for debugging such an implementation.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/280:202,update,updated,202,https://psicode.org,https://github.com/psi4/psi4/pull/280,1,['update'],['updated']
Deployability,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/383:623,install,installed,623,https://psicode.org,https://github.com/psi4/psi4/pull/383,4,"['install', 'patch']","['install', 'installation', 'installed', 'patch']"
Deployability,"## Description. If a DFT functional gives `NaN` when we attempt to numerically integrate it, throw the functional under the bus immediately instead of leaving my ADIIS code to take the blame, i.e., give a better error message. Closes #2609. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611:79,integrat,integrate,79,https://psicode.org,https://github.com/psi4/psi4/pull/2611,1,['integrat'],['integrate']
Deployability,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/323:554,release,released,554,https://psicode.org,https://github.com/psi4/psi4/pull/323,2,['release'],"['release', 'released']"
Deployability,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/275:75,configurat,configuration,75,https://psicode.org,https://github.com/psi4/psi4/pull/275,3,"['Update', 'configurat']","['Updates', 'configuration']"
Deployability,"## Description. Just removes the VERSION file, because the information is already contained in CMake's configuration files.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Gets rid of the superfluous VERSION file.; - [x] Allows me to see how the new template and contributing files work in practice.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/272:103,configurat,configuration,103,https://psicode.org,https://github.com/psi4/psi4/pull/272,1,['configurat'],['configuration']
Deployability,"## Description. License and unit printing overhaul from the Psi4 Meeting on 4/19/2016.; ## Todos; - [x] Update the GNU license for every file, finishes and closes #213 ; - [x] Adds script to always in /share/scripts to update these headers; - [x] Also contains the unit handling update, closes #357; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/363:104,Update,Update,104,https://psicode.org,https://github.com/psi4/psi4/pull/363,3,"['Update', 'update']","['Update', 'update']"
Deployability,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/334:117,update,update,117,https://psicode.org,https://github.com/psi4/psi4/pull/334,2,"['Update', 'update']","['Updated', 'update']"
Deployability,"## Description. Minor mods to gdma docs, commas in basis sets, and kJ/mol; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Make GDMA manual pdf linkable from sphinx docs, autodoc gdma setting of array variables, small other GDMA documentation tweaks; - [x] Add the warning about 5930 processors + fnocc + Intel 2015 compilers composed by @ryanmrichard ; - [x] Process basis sets in input parser a little differently so that can use commas in `6-311G(2d,2p)` mentioned in #43 ; - [x] Updated SAPT output format (@jgonthier & @andysim, note); - added third column in kJ/mol ; - realigned output columns (Total SAPT were off) and between SAPT levels; - changed `scal.` to `sc.` to save space; - adjusted fisapt formatting accordingly; - added `[]` around units; - [x] added kJ/mol in `cp()`, `n_body()`, `database()`; ## Questions; - [x] @andysim, I think you were the one who set it up in the input parser so that comma was always signal for python list. Do you foresee any trouble with the scheme here?; ## Status; - [x] Ready to go, though changes to thermo aren't in yet",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/330:524,Update,Updated,524,https://psicode.org,https://github.com/psi4/psi4/pull/330,1,['Update'],['Updated']
Deployability,"## Description. Modernization, efficiency, and flexibility improvements for the CI code.; ## Todos; - [x] RSP Diagonalization now writes out CIVectors for OPDM, TPDM, etc uses. Fixes #83.; - [x] Removes several deprecated features such as exporting of CI Vectors in an old format.; - [x] The Numpy interface has been updated. Now uses a single `std::vector` instead of a `double *`. This change has been propagated throughout the entire code.; - [x] More CI routines have been exported to the python layer allowing the creation of complex python-based CI methods.; - [x] Adds a new Matrix routine that removes irreps.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/372:317,update,updated,317,https://psicode.org,https://github.com/psi4/psi4/pull/372,1,['update'],['updated']
Deployability,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315:496,Update,Update,496,https://psicode.org,https://github.com/psi4/psi4/pull/315,1,['Update'],['Update']
Deployability,"## Description. Several tweaks to prepare for the 1.0 release.; ## Todos; - [x] Throws a error if NumPy is not install and prints documentation for installation, closes #407.; - [x] Tweaks CI convergence and will throw PsiException if CI/MCSCF does not converge, closes #394.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/412:54,release,release,54,https://psicode.org,https://github.com/psi4/psi4/pull/412,3,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"## Description. The DOI Foundation [started recommending a new resolver](https://www.doi.org/doi_handbook/3_Resolution.html#3.8). While their URL change may be a bit ironic, it's now [encrypted](https://www.ssllabs.com/ssltest/analyze.html?d=doi.org) and the old `dx` subdomain is being redirected. So, there is no urgency here. However, for consistency, this PRs suggests to update all static DOI links accordingly, plus the code that generates new DOI links. ## Checklist; - [-] Tests added for any new features; - [-] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1761:376,update,update,376,https://psicode.org,https://github.com/psi4/psi4/pull/1761,1,['update'],['update']
Deployability,## Description. The `GIT_TAG` argument to `ExternalProject_Add` was changed to `v1.1.3` to reflect a version bump in [PCMSolver](https://github.com/PCMSolver/pcmsolver/releases/tag/v1.1.3); ## Todos; - [x] Update the version of PCMSolver shipped with Psi4.; ## Questions; - [ ] @loriab should re-build the conda package; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/434:168,release,releases,168,https://psicode.org,https://github.com/psi4/psi4/pull/434,2,"['Update', 'release']","['Update', 'releases']"
Deployability,"## Description. The `GIT_TAG` argument to `ExternalProject_Add` was changed to `v1.1.4` to reflect a version bump in [PCMSolver](https://github.com/PCMSolver/pcmsolver/releases/tag/v1.1.4); I had introduced a bug with v1.1.3 The polarization charges were computed with a degraded accuracy. This was caught neither by the library own unit tests nor by Psi4 tests, as it becomes apparent only when trying to calculate higher-order response properties (available in DALTON, but I failed to run the PCM tests there...); I apologize for any inconvenience!; ## Todos; - [x] Update the version of PCMSolver shipped with Psi4.; ## Questions; - [x] @loriab should re-build the conda package; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/440:168,release,releases,168,https://psicode.org,https://github.com/psi4/psi4/pull/440,2,"['Update', 'release']","['Update', 'releases']"
Deployability,"## Description. Thermo and isotope improvements; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fixed bug whereby mass specification in `molecule {...}` through `C@14.0` led to no basis fns being placed on those atoms; - [x] updated thermo printing to include kJ, Cp, and hopefully be easier to orient oneself in; - [x] compared our thermo output for isotopes to other programs' in new test case freq-isotope; ## Questions; - [x] Would be good to get #345 resolved; - [x] @psi-rking may want to look over new thermo printing (example [here](https://github.com/loriab/psi4/blob/b3lyp35/tests/freq-isotope/output.ref)); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/348:267,update,updated,267,https://psicode.org,https://github.com/psi4/psi4/pull/348,1,['update'],['updated']
Deployability,"## Description. This PR addresses psi4/#249 in that it makes the docsctrings consistent with the procedures dict.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] The manual now reflects all energy() procedures; - [ ] Some procedures don't have explicit manual entries (DMRG, CASSCF, etc). I understand this is not a top priority, but when they are done, the links in the docstrings table should be updated.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/360:440,update,updated,440,https://psicode.org,https://github.com/psi4/psi4/pull/360,1,['update'],['updated']
Deployability,## Description. Update 6-31G\* basis set; ## Todos; - [ ] Add Ga-Kr atoms to complete 3rd row; ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/335,1,['Update'],['Update']
Deployability,## Description. Update PCMSolver to v1.1.1; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Update PCMSolver to v1.1.1; - [x] Make sure that PCMSolver uses Boost version bundled with Psi4; - [x] Re-tighten thresholds in `compare_values`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/338:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/338,2,['Update'],['Update']
Deployability,"## Description. Update links to Grimme's DFT-D3. Note that the link to the parameter source may not be correct - those with knowledge of the source, please chime in. Fixes #1084. ## Questions; - [ ] Is the link to the parameter source correct?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1085:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/1085,1,['Update'],['Update']
Deployability,"## Description. Update of the scratch directory documentation.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch; - [x] csh/bash example of setting PSI_SCRATCH; - [x] Example of a threaded job (needs approval); - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.; ## Questions; - [x] @loriab, @dgasmith : Could you have a look at the PBS job file example section and tell me if that looks convenient ?; - [x] @loriab : I actually don't understand what you mean by your last point. Does https://github.com/psi4/psi4/blob/master/samples/tu1-h2o-energy/input.dat need an update ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/361:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/361,2,"['Update', 'update']","['Update', 'update']"
Deployability,## Description. Update the list of additional contributors printed at the top of the Psi4 output; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/320:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/320,1,['Update'],['Update']
Deployability,## Description. Update to new location of the FCHKWriter - now in core. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Reflect new location of writer so that examples work.; * **User-Facing for Release Notes**; - [ ] Updated documentation so that the example code snippets work. ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1050:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/1050,3,"['Release', 'Update']","['Release', 'Update', 'Updated']"
Deployability,"## Description. Updates the FNOCC documentation so that it includes a disclaimer about running in parallel on i7-5930 processors when compiling with Intel 15 and MKL 15.0.2; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Has not introduced further Fortran; - [x] Has warned the world of an impending evil lurking in their somewhat homely appearing CCSD correlation energy, caused by an apparent Intel bug; ## Questions; - [ ] Is the placement of the disclaimer satisfactory?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/324:16,Update,Updates,16,https://psicode.org,https://github.com/psi4/psi4/pull/324,1,['Update'],['Updates']
Deployability,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388:65,update,updates,65,https://psicode.org,https://github.com/psi4/psi4/pull/388,2,"['Update', 'update']","['Updated', 'updates']"
Deployability,## Description. Yearly sync of qcdb. And other issues that cropped up.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] implemented and disabled new -D3 variants. consolidated dftd3-driving code into qcdb; - [x] qcdb synched from upstream and considerably updated for py3k; - [x] added scf5 to quicktests. it's only 20 seconds and was passing unpredictably until I started a fresh objdir; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/305:297,update,updated,297,https://psicode.org,https://github.com/psi4/psi4/pull/305,1,['update'],['updated']
Deployability,"## Description. docs and licenses and castup, oh my; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] few tweaks to the energy/grad docstring tables, #249 ; - [x] improve molecule and fn return docs, #351 & #352 ; - [x] update licenses in plugin template dir, since those are mixed py/c++ and awkward to do by script; - [x] hesitant replacement of cast-up with pyconstruct basis machinery. no differences detected in relevant output files (castup1/2/3, sapt2/4/5, pywrap-all), #285 ; - [x] do `[s]` on seconds in sapt; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/364:260,update,update,260,https://psicode.org,https://github.com/psi4/psi4/pull/364,1,['update'],['update']
Deployability,"## Description. mostly, polishes off CheMPS2; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] update dmrg keywords. add docs. fixes #414, #150; - [x] updates some tests for documentation; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/427:135,update,update,135,https://psicode.org,https://github.com/psi4/psi4/pull/427,2,['update'],"['update', 'updates']"
Deployability,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/370:168,configurat,configuration,168,https://psicode.org,https://github.com/psi4/psi4/pull/370,3,"['configurat', 'update']","['configuration', 'updated']"
Deployability,## Description. update docs and driver in prep for psiworkday; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/354:16,update,update,16,https://psicode.org,https://github.com/psi4/psi4/pull/354,1,['update'],['update']
Deployability,## Description/Todos; - [x] Updated documentation for the `Ca_subset` and `Cb_subset` functions to explicitly show the accepted argument values. ## Checklist; - [x] Built the docs. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1882:28,Update,Updated,28,https://psicode.org,https://github.com/psi4/psi4/pull/1882,1,['Update'],['Updated']
Deployability,"## Description; **Currently a work-in-progress**. **Currently requires intel compiler**. Implements the simint two-electron integral library into Psi4. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [X] Implement ENABLE_SIMINT option; - [X] Download & build via ExternalProject_Add; - [ ] Download & use precompiled library; - [X] Simint is being used rather than libint; - [ ] Batching interface to interface classes in libmints (partially done); - [ ] Use batching in JK objects (partially done); - [ ] Fix some GCC issues in simint; - [ ] Port new batching interface to libint & erd; - [ ] Higher AM, or split between simint and erd; - [ ] Derivatives (WIP in simint...). * **User-Facing for Release Notes**; - [ ] Hmmm. ## Questions; - [ ] Where to put tarballs (that is more permanent for psi4). Git is probably not a good idea. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/533:759,Release,Release,759,https://psicode.org,https://github.com/psi4/psi4/pull/533,1,['Release'],['Release']
Deployability,"## Description; - Adds the popular `return_energy` field so that downstream programs can always easily obtain this quantity instead of trying to parse the level of theory and keyword.; - Now correctly updates the geometry of the output result if a molecule orientation is changed by Psi4.; - Psi4 may reorder atoms for non-contiguous fragments, schema input now throws if this is the case. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1011:201,update,updates,201,https://psicode.org,https://github.com/psi4/psi4/pull/1011,1,['update'],['updates']
Deployability,## Description; - Update to adcc 0.15.0 and adapt interface (plural forms of keys have been deprecated).; - Add PE-ADC test as adcc now automatically detects PE ground states and includes appropriate corrections. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1914:18,Update,Update,18,https://psicode.org,https://github.com/psi4/psi4/pull/1914,1,['Update'],['Update']
Deployability,"## Description; - [x] Addresses #1820 with new syntax. Let's see if Windows and Mac setups can cope.; - [x] Addresses #1819 with explicit rounding direction. before (stride, memory, collocation_size) `MEM 1 954741720.0000 1678037264`; ```; (dev10) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-release/objdir: (safeforqcel2018) grep iB dftmem.out ; Memory: 500.0 MiB; Memory set to 14.901 GiB by Python driver.; 1 Threads, 15258 MiB Core; DFHelper Memory: AOs need 3.981 GiB; user supplied 3.981 GiB. Using in-core AOs.; Memory [MiB]: 4076; Cached 100.0% of DFT collocation blocks in 12.502 [GiB].; ```; after `MEM 2 954741720.0000 1678037264`; ```; (dev10) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-release/objdir: (safeforqcel2018) grep iB dftmem2.out ; Memory: 500.0 MiB; Memory set to 14.901 GiB by Python driver.; 6 Threads, 15258 MiB Core; DFHelper Memory: AOs need 4.062 GiB; user supplied 4.062 GiB. Using in-core AOs.; Memory [MiB]: 4159; Cached 50.0% of DFT collocation blocks in 6.277 [GiB]. ```. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1823:301,release,release,301,https://psicode.org,https://github.com/psi4/psi4/pull/1823,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. --> ; Fixes a couple of minor issues for a research project of mine. See todos. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Within the OCC module, updating the opdm to the wavefunction; - [x] Exposed a function to update the num_frozen_uocc global. ## Checklist. - [x] quick tests, occ module tests, standard suite tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2072:352,update,update,352,https://psicode.org,https://github.com/psi4/psi4/pull/2072,1,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; - [x] Releases keep getting easier and easier, but they still have a lot of little parts. I had snippets gathered all this year, so I gathered them back into the docs. This is a revision of postrelease, not prerelease or release. I'll add those once they come up again.; - [x] Old sections are commented (`..` is sphinx comment) rather than deleted in case I want to copy from them for nightly build setup (NYI). ## Checklist; - [x] docs build cleanly locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3059:110,Release,Releases,110,https://psicode.org,https://github.com/psi4/psi4/pull/3059,2,"['Release', 'release']","['Releases', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3194:886,update,updates,886,https://psicode.org,https://github.com/psi4/psi4/pull/3194,1,['update'],['updates']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Some setups were using a BLAS that doesn't support the extension AXPBY, so #2887 caused runtime can't-find-symbol errors. Most notably, this occurred for Mac users linking to Accelerate. This bypasses the trouble by rerouting to dscal+daxpy; - [x] clarifies who's getting scaled in the export docs.; - Note that the CI error was due to ongoing changes in QCArchive `next` branch. I've pinned the dep back a release so that psi4's interface to it can be fixed later. ## Questions; - [ ] Can someone confirm this works with the Accelerate setup? Below is a quick test.; ```; import psi4; import numpy as np. vecX = np.array([1., 1., 1.]); pvecX = psi4.core.Vector.from_array(vecX); print(pvecX.np) # 1. vecY = np.array([5., 5., 5.]); pvecY = psi4.core.Vector.from_array(vecY); print(pvecY.np) # 5. pvecX2 = pvecX.clone(); pvecX2.axpy(2.0, pvecY); print(pvecX2.np) # 11. pvecX2 = pvecX.clone(); pvecX2.axpby(2.0, 1.0, pvecY); print(pvecX2.np) # 11. pvecX2 = pvecX.clone(); pvecX2.axpby(2.0, 3.0, pvecY); print(pvecX2.np) # 13; ```. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2895:727,release,release,727,https://psicode.org,https://github.com/psi4/psi4/pull/2895,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; This seems a silly PR since there's no net change to the physical constants, but it came up as a nice self-contained part of a DDD solution I'm working on. Plus, it closes #1795 .; - [x] instead of code importing physical constants from qcel everywhere, import it once, ensure that it's codata 2014 to match the c-side, and then everywhere in the driver that needs constants grabs this one instance. qcdb, too. for background, qcel has 2014 and 2018 with default 2014. so no net change.; - [x] removed some out-of-date import trials (csx and pasture) and co-opted the `dependency_check.py` for (1) the above physconst purpose and (2) to define some print formats that were cluttering `driver/__init__.py`, then renamed it `constants.py`. `extras.py` might have been better, but that gets confused with `psi4/extras.py`.; - [x] directed all the `pkg_resources` to qcel that has the same call https://github.com/MolSSI/QCElemental/blob/master/qcelemental/util/importing.py#L110-L116 . `pkg_resources` is deprecated, so this'll let us upgrade it consistently from one place someday. ## Checklist; - [ ] ~Tests added for any new features~; - [x] passes quicktests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3027:1136,upgrade,upgrade,1136,https://psicode.org,https://github.com/psi4/psi4/pull/3027,1,['upgrade'],['upgrade']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; - [x] Psi doesn't use ambit directly so never has required a version. Now that it's had its python interface updated (kill the boost!), most uses in the presence of Psi4 will need the new version, so let's not let lingering old versions pass.; - [x] The ecosystem GHA seems to have settled in nicely to testing addons, so let's remove that responsibility from the Azure CI lanes.; - leaving dftd3 and gcp since they're fast, easy, and important; - now addons tested with less compiler variety on Linux, but I don't think that's too big a problem. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2546:199,update,updated,199,https://psicode.org,https://github.com/psi4/psi4/pull/2546,1,['update'],['updated']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; - [x] Something about how CMake detects NumPy during FindPython is different between NumPy 1.22 and 1.23; only on Windows. No apparent changes in CMake FindPython. No apparent changes in conda NumPy recipe. All header files in the same places in a Windows c-f 1.22 and 1.23 NumPy distribution. Linux builds fine with a c-f NumPy 1.23. I don't know what's the real change, so we'll tell CMake where to look in the Azure recipe and pass the hint on to psi4/CM for the second `find_package(Python ...)`.; - [x] My other theory for solving the Azure problem was that my patched `anaconda-client` was behind the times. That wasn't the problem, but it's updated to v1.10.0 anyways.; - [x] Pinned qcelemental and qcengine in Windows recipe; * There's upcoming changes to those packages such that all of psi4 should be pinned and then advanced with the changes. This does that for the Windows recipe.; * fixes #2614 where Windows conda package had _no_ qcel pinning, so depending on channel order, sometimes took a really old qcel and pydantic. after this, channel order shouldn't matter. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2624:656,patch,patched,656,https://psicode.org,https://github.com/psi4/psi4/pull/2624,2,"['patch', 'update']","['patched', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Nowadays, ctest (quick) followed by pytest (quick) runs a lot of duplicate tests (unless the latter uses ""quick and api""). Let's not do that. This switches Azure to ctest(smoke) followed by pytest (quick).; - before: ; - W: 1h30m; - L: 41-57m; - after:; - W: 1h5m; - L: 34-38m; - In working on dfocc, I found some stdsuite updates that hadn't been ported from qcng to psi4 and some general improvements.; - [x] better check expected vs intended modules. (can catch if the default compute module for a method+circs changes.); - [x] `test_*_default` in stdsuite changed meaning slightly. now PASSED means get final method answer correctly and XFAIL means known NYI. formerly, inputs that got the final method answer correctly but were not able to supply some submethod (like same-spin mp2 for ccsd) also got the XFAIL result.; - [x] have a mini ref file so can add reference data w/o waiting for a new qcengine release; - [x] regex and human-directed error messages to simplify and consolidate NYI methods testing. ## Checklist; - [x] Tests added for any new features; - [x] full stdsuite runs. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2632:510,update,updates,510,https://psicode.org,https://github.com/psi4/psi4/pull/2632,2,"['release', 'update']","['release', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] With the release of Sphinx 4, a line in one of the cloud sphinx theme's extensions stopped working. Sphinx has long ago incorporated the extension's capability, so drop from list to allow newer Sphinx and fix the docs build workflow on master.; - [x] Further investigation on the ""expandtabs"" issue building the psi docs (https://github.com/pybind/pybind11/pull/2925), shows that neither of my first two fixes are any good. So let's `sed` a better file. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2179:196,release,release,196,https://psicode.org,https://github.com/psi4/psi4/pull/2179,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switch gcp interface to QCEngine; - [x] add dftd4 interface calling QCEngine; - [x] update types return for disp. engine can handle ndarray, so leave arrays as np and shaped rather than flat lists; - [x] more tests -- psiapi, parameters extend func; - [x] add docs; - [x] note min qcng version, prob. v0.19; - [x] this passes cleanly locally but that's with custom engine and dftd4, so several PRs ahead of this one; - [x] allow doi as citations for dft; - [x] note that for `Mol.run_dftd4`, func overrides parameters in keeping with dftd4 API behavior, whereas in dftd3, parameters extend or override func. ## Questions; - [x] @jeffschriber should fisapt grab 2-body disp analysis or total disp analysis; - [x] a couple of the interface updates should be in v1.4 but d4 itself can be in v1.5. so this can get split after upstream settles down. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Aug 2021 Notes; - [x] rebased. the only thing that's left of the original PR checklist is dftd4 itself. gcp and dftd3 updates were pulled in in #2180.; - [x] note that it's not the dftd4 exe that this (that is, qcng) needs; rather, it's the dftd4 pymod that's needed.; - [x] one _can_ use the c-f `dftd4-python` conda package if you know how to set up your env to install both it and psi4 deps. But for linux only, I've prepared a `dftd4` conda package (not in final build form) off `-c psi4/label/dev`. ## Status; - [x] Ready for review; - [x] Ready for merge. EDIT: closes #1710",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2142:271,update,update,271,https://psicode.org,https://github.com/psi4/psi4/pull/2142,4,"['install', 'update']","['install', 'update', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; - [x] I was seeing 17m to solve the env last week, so let's switch to mamba solve.; - [x] Have to turn off analytic Hessian testing for windows since no ints.; - [x] Looks like it was testing twice -- one exe and one lib. Not really necessary.; - [x] Turn c-b back on. It was only off so I could get a green check on the release last week. ## Checklist; - ~Tests added for any new features~; - ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2961:460,release,release,460,https://psicode.org,https://github.com/psi4/psi4/pull/2961,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] It turns out one can build a psi4 with Fortran extensions (detected, not compiled) w/o a Fortran compiler by letting the CXX compiler handle the linking. This is very useful on Windows where we want a `clang-cl` C/CXX compiler, but the only cohesive Fortran-including stack is the ming (gcc/g++/gfortran) one. So this adds an option `psi4_SKIP_ENABLE_Fortran` to _not_ enable Fortran when the code otherwise would. It doesn't check that the circumstances are suitable (that is, all detected, none to-be-compiled). Works great on Windows (that's how the conda pkg has dkh); haven't tried it on Linux.; - [x] Increasingly, where the <project>Config.cmake files get installed to is configurable, esp. as there's no one place cmake looks for linux/mac/win. So adding that option `psi4_INSTALL_CMAKEDIR`. You won't see a change unless you were customizing `CMAKE_INSTALL_DATADIR`.; - [x] also fix a couple install locations that were obvious for windows install.; - [x] stop testing the extra cli qcf tests for qcf master since those are run on mac, and it hangs. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2946:1018,install,installed,1018,https://psicode.org,https://github.com/psi4/psi4/pull/2946,3,['install'],"['install', 'installed']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Update binder environment and regenerate image.; - [x] Fix obscure bug where `psi4 --test quick_not_d2ints` couldn't be run serial and needed `-n2`.; - [x] Update some headmatter badges. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2966:355,Update,Update,355,https://psicode.org,https://github.com/psi4/psi4/pull/2966,2,['Update'],['Update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] on c-f Linux and Mac, iomp5=omp, so need the threading ldd test altered to build psi4-dev pkg. also update some printing to f-strings; - [x] closes #3006 by adding a header. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3007:455,update,update,455,https://psicode.org,https://github.com/psi4/psi4/pull/3007,1,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; - [x] Allow psi4 to be used with pydantic v1 or v2. ## Dev notes & details; - [x] still using pydantic v1 API but now tolerant of a v1 or v2 pydantic environment. qcel v0.26 and qcng v0.27 have recieved the same treatment. This is that part that's worthy of backport. It's already available on the c-f 1.8.1 build number `_2` conda packages, having been applied by patch.; - [x] bump qcel and qcng versions. for local build cases, switch from `python setup.py` to `pip install` from src. the latter is preferred as setup.py gets phased out, and, in any case, was necessary for qcel, which has transitioned from a setuptools to poetry build backend. this only handles the module, so if a module comes with an executable (e.g., `bin/qcengine` from qcng, that doesn't end up in the right place. ; - [x] fix docs GHA by constraining pb11 to 2.10 for the docs build spec. https://github.com/pybind/pybind11/pull/4679 seems to be the culprit. It's a good and standards-conforming change, but other tooling and/or typing stores on the internet to which sphinx refers all need time to adapt.; - [x] generalize a few cmake config dir locations for addons.; - [x] remove youtube links to F/I SAPT tutorials that have been taken private.; - [x] some build docs I had lying around. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3019:480,patch,patch,480,https://psicode.org,https://github.com/psi4/psi4/pull/3019,2,"['install', 'patch']","['install', 'patch']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] fix bug where final findif and nbody quantities are computed and probe-able but not printed or logged.; - [x] update CI for c-f based; - [x] add docs warnings about out-of-dateness for build; - [x] work around windows console not liking strikethrough; - [x] psi4.addons() isn't the definitive word on ecosys availability -- testing.using is -- but it's simpler. This updates the Grimme addons to detect the favored distributions. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2959:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2959,3,"['release', 'update']","['release', 'update', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] one test failed in full tests. I can't check it easily, but I think this is the fix after #2885 ; - [ ] Feature2. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2908:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2908,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2960:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2960,8,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `samples/` changes are autogenerated -- don't read them; - [x] update docs env to use psi4-path-advisor; - [x] the old versions of `variable`/`set_variable` fns on core and wfn have been warning-and-forwarding since v1.4 . we had a debugging case where that forward was the problem, so it's time to actually disable them. they'll still give upgrade advice but won't run; - [x] allow running a a GRID_ESP or GRID_FIELD property through qcschema. need to pass in grid.dat contents through `atin.extras[""extra_infiles""] = {""grid.dat"": <contents>}` and be sure to `atin.protocols.native_files = ""all""`, then one can retrieve through `atres.native_files[""grid_esp.dat""]` or `""grid_field.dat""` closes #2307 . ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3095:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3095,3,"['release', 'update', 'upgrade']","['release', 'update', 'upgrade']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Allow the use of upstream master for Libint2. The L2 build that v1.8 required also still works. ## Dev notes & details; - [x] Very recent L2 upstream master (after [10ca429217977bc2baac78fdaf3ac8d4f8aa05d9](https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9) on 24 Nov) has everything Psi4 needs to run, namely Windows compatibility and runtime solid harmonic order (sho) switching. 🎉 ; - [x] However, for *this* L2 changeover, there's no particular reason to demand users switch from the L2 (loriab branch) you've been using since 8 May & v1.8. The runtime internals are all the same.; - [x] So the goal of this PR is to make Psi4 compatible with both L2 branches: May 2023 loriab and Nov 2023 upstream. The differences are:; - [x] there's a different components scheme, so max_am_eri=5 energy is represented as `eri_c4_5_d0` for May but `None` (if not patched) or `eri_hhhh_d0` (patched) for Nov. This PR makes sure psi4 can process both schemes for outfile printout and to redirect to findif if Hessian ints aren't available.; - [x] `find_package(Libint2 COMPONENTS eri_... cxx_ho ss.)` on May properly checks components but for Nov it's not picky. Only thing to do is be aware.; - [x] Note that upstream master has Jonathon's erfc nuclear fix, so a time is coming soon when your May 2023 L2 branches will have to be retired. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3047:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3047,3,"['patch', 'release']","['patched', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Einsums v0.6 needs gcc 11 or clang 16. don't want to bump psi4 requirements for opt'l dep, so bump gcc from 10->11 and don't build w/clang (currently 11). note that azure matrix vars like this _must_ be all caps to register. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3224:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3224,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] I think CI is hitting a brownout to deprecate the non-redundant mambaforge, so completing the switch. I've done it at other repos; - [x] windows nightly builds are in great demand, I don't have much more to delete to create space for them, and I'm tired of build always looking like it's failing at master. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3233:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3233,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] If you call `psi4.set_output_file()` (note that this is the usual fancy one, not the low-level `psi4.core.set_output_file()`), that file will have a psi4 header so suitable for cclib parsing. closes #2893; - [x] Sometimes you don't want psi4 managing the logging. Added a `inherit_loglevel` to exe and set_output_file so that psi4 doesn't tamper with loglevel. @bennybp request. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] we always had `set_output_file` and `print_header` separate, but I'm guessing that that was originally b/c former in C++ and latter in Py. Now that we have the former in python to set up logging, too, it's reasonable to combine them, I think. Note that in exe, we do need to set up threads & mem first so that header stats are as correct as possible.; - [x] I set it up so that the header prints whenever a new file is opened. seemed reasonable. had to rewire core.cc calls to take notice of ""stdout"". Any problem with that?; - [x] `-o stdout` now gets a logging file `stdout.log` bug? feature?; - [x] a plain `import psi4; psi4.energy()` is still going to print to screen w/o header. `import psi4; set_output_file(""asdf""); psi4.energy()` newly has a header. DDD calcs still have repetitive header, but it's no worse that before. ## Questions; - [x] @AlexHeide, does removing those two `root` lines in `psi4.__init__.py` mess up your optking logging?. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2932:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2932,1,['release'],['release']
Deployability,## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Libxc 5.2.3 (latest in the 5 series) has had full tests run; - [x] fix qcng to 0.25.0 for the sake of fsaptd-terms before #2791 fixes it again. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2815:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2815,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Of the three exchange calculations for non-decomposed FISAPT, skip the DCBS. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3133:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3133,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PCMSolver now works with Windows. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] This note in Py docs was why pcmsolver through psiapi wasn't working on Windows https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile . ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2972:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2972,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 can use a standard ordering Libint2 build. But not one that's in upstream master for now. If you really want, you can switch the internal spherical harmonics ordering Psi4 uses.; - [x] Psi4 works with next-gen Intel compilers `icpx` and now uses c++17 standard throughout. ## Dev notes & details; - [x] Prepare to use a L2 that can be initialized into gaussian or cca ordering for ``Operator::nuclear``. In practice, this means we can use the same built L2 as other open-source projects. https://github.com/evaleev/libint/pull/259; - [x] Make it easy to experiment with gss or sss ordering combinations with a build-time setting in psi `psi4_SHGAUSS_ORDERING`; - [ ] successor to #2537 . no plans to transition to `sss` though. grab the fchk changes from that PR so it can be closed unmerged. fchk changes can be a follow-up PR.; - [x] need to transform cmake var from str to int; - [x] need to print gau/std to output file; - [x] ~only Linux CI expected to pass, as that's the only conda package built with the new L2. unedit docs-cf, two azure files, and one ecosystem file~; - [x] removed all the `LGTM_SRC` stuff since it's defunct and all the ""CHOOSE"" stuff, since a master L2 won't work anymore b/c need the shg order switching.; - [x] finishes the job of fully C++17 from #2392 . Newest Intel compilers from 2023.0 oneapi (versions icpc 2021.8 and icpx 2023.0) are ok with Libint2 and C++17. For older Intel, there's a keyword `psi4_CXX_STANDARD_Libint2` that can be reset to 14.; - [ ] pull together accumulated xhost changes (hiccup here is that `icpx` can take `-xHost` but `icx` can't, and our `option_with_flags` routine tries both so it throws an unnecessary warning. not a must for this PR).; - [x] the linux L2 is my local c-b, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2861:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2861,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] While not recommended to use a `/` character in your molecule labels, if you do, at least now it won't segfault if density fitting is involved. Thanks to @bennybp for the bug report. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Error can be triggered with below. Shows up in `DFHelper::put_tensor()`. ```; import psi4. mymol = psi4.Molecule.from_arrays(geom=[0, 0, 0, 2, 0, 0], elem=[""h"", ""h""], name=""h2/mol""). # segfaults if any DF (that is, following line commented). runs if DF suppressed (following line active); #psi4.set_options({""scf_type"": ""pk"", ""df_basis_guess"": ""false""}). ene = psi4.energy(""b3lyp/cc-pvtz"", molecule=mymol); print(ene); ```. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2984:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2984,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `basis_relativistic <name> {...}` now works; - [x] Python 3.11 basically tested. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Windows CI allowed to access new qcel bump 0.25.1 that has broader pint compatibility; - [x] closes #2754 and fixes dft-pruning test. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2764:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2764,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3186,2,"['release', 'update']","['release', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] gdma is bumped from upstream v2.2.06 to v2.3.3 (can now use h-functions); - [x] gdma is now selectable at runtime, not just compile-time. use `conda install pygdma -c conda-forge` (presently in staged-recipes https://github.com/conda-forge/staged-recipes/pull/22882 ). ## Dev notes & details; - [x] A perhaps obscure point is that psi hasn't been using exactly upstream GDMA, which is a Fortran executable. Instead, Andy Simmonett did lots of I/O conversion and turned it into a library and bound some functions to C so psi could extract results w/o parsing. That's great, but it's meant we've been fixed at upstream v2.2.06.; - [x] I was startled to realize gdma is GPL. For background, roughly speaking, GPL probably does adhere to psi4 if libgdma statically linked, might adhere if dynamically linked (FSF thinks yes; everyone else thinks no; result is that any GPL makes ppl nervous), doesn't adhere if dlopen'ed or runtime optional. Conda-package-wise, we've always dynamically linked to libgdma, and scouring my memory, there was a plan to have an alternate gdma- and chemps2-free conda build of psi4 to remove doubt; that never happened.; - [x] To get past these problems and get a c-f package going, I; - [x] Started with current upstream https://gitlab.com/anthonyjs/gdma/-/tree/master and applied Andy's and Holger's gdma->libgdma changes; - [x] Updated the cmake buildsys with the usual checklist https://github.com/psi4/gdma/issues/6; - [x] Added back the gdma executable so c-f package wouldn't lose functionality from upstream; - [x] pybind11-'d the C functions Andy created; - [x] psi4-side, moved the gdma_interface c-side function over to the driver, so it's pure runtime; - [x] got the conda package going https://github.com/conda",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2968:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2968,2,"['install', 'release']","['install', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] gets rid of old `conda-forge/label/libint_dev` that were littered around the CI files. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] In order to upload the big AM L2 v281, I had to delete some libint pkgs that were used in CI, so this fixes CI; - [x] Update the L2 src tarballs; - [x] Prep for some extra functions that L2 will someday provide; - [x] Do proper float testing on a file; - [x] build einsums (still optional) on linux azure. this needs min gcc10. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3107:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3107,2,"['Update', 'release']","['Update', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2746:212,release,release,212,https://psicode.org,https://github.com/psi4/psi4/pull/2746,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. #### Review guide; below are the key files for review; * proc.py; * sapt-compare/input.dat; * sapt.rst. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] update various build docs, especially for Libint2 and libecpint; - [x] a coalition including @konpat and @CDSherrill agree that it's better to update the default for elst terms for sapt0 in Ed's code for (1) physics and (2) match the other two sapt codes. this implements that decision. hopefully the docs additions are clear. glad of suggestions. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2582:291,update,update,291,https://psicode.org,https://github.com/psi4/psi4/pull/2582,2,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. (To review, turn on ""hide whitespace"" at the little gear to see that task_base changes are just deleted alternate logic.). ## User API & Changelog headlines; - [x] Since v1.7, Psi4 has supported legacy v0.15.8 qcfractal (latest release until Sep 2023) and the incipient ""next"" branch. ""next"" was released in Sep 2023 as v0.50, so for v1.9 we support only ""next"" (currently v0.52) and drop legacy support. ## Dev notes & details; - [x] Cancel all the v0.51 + tweaks we were using to keep snowflakes running and pull the new qcfractal v0.52; - [x] Cease supporting legacy (pre-next) v0.15.8 qcfractal in anticipation of the v1.9 release. Now the Mac eco GHA will be testing ""next"", not ""legacy"", so we're not restricted to old python.; - [x] Addresses the CMake version problem pointed out in closes #3089 ; - [x] T~he urllib3 thing I think might help the Win nightly build uploads~. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3090:308,release,release,308,https://psicode.org,https://github.com/psi4/psi4/pull/3090,3,['release'],"['release', 'released']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. @lothian, the primary files to look at are procedures/proc.py, cc.rst, preview_capabilities_ccenergy.rst, and (for example) cc13b/input.dat. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Conventional ccsd(t) gradients will now proceed as finite-difference calculations, which are much more memory efficient. If you still want to access the analytic gradients, add `set qc_module ccenergy`. ## Dev notes & details; - [x] the main change is disabling default conv rhf/uhf ccsd(t) analytic gradients through ccenergy in proc.py . they're still accessible by setting `qc_module=ccenergy` explicitly; - [x] changes to tests so that we're still testing the gradients; - [x] changes to the capabilities auto-documentation that starts with stdsuite, gets stored in samples/stdsuite_psi4.txt, and gets processed into docs tables, a viz preview of which are stored in sphinxman/source/.; - [x] simpler docs-building environment!. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). closes #2913 . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2943:354,release,release,354,https://psicode.org,https://github.com/psi4/psi4/pull/2943,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. Collect SAPT changes in the progress of SAPT consolidation. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] avoid stumbling into memdf with disk algorithem. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3131:273,release,release,273,https://psicode.org,https://github.com/psi4/psi4/pull/3131,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3171:281,release,release,281,https://psicode.org,https://github.com/psi4/psi4/pull/3171,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. GXX 7.5 from conda is throwing bizarre assembly-level errors during libmints compile like `open CFI”` and `Error: .size expression for does not evaluate to a constant`. This compiler is working fine locally and the conda env hasn't changed since it was working fine on GHA. Searching suggests things like running of of memory for compile or binutils patches. conda has moved from 7.5 to 11.2 pinning, so that's probably a good next step. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2644:430,patch,patches,430,https://psicode.org,https://github.com/psi4/psi4/pull/2644,1,['patch'],['patches']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. Refactor `electric_field()` to return ElectricFieldInt rather than OneBodyAOInt. Fixes #2793 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] ElectricFieldInt returned now by `IntegralFactory.electric_field()`; - [x] Equivalent changes in `libmintshelper` made to stop immediate `static cast`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] ElectricFieldInt returned now by `IntegralFactory.electric_field()`; - [x] Equivalent changes in `libmintshelper`. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2795:308,release,release,308,https://psicode.org,https://github.com/psi4/psi4/pull/2795,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3160:223,install,installed,223,https://psicode.org,https://github.com/psi4/psi4/pull/3160,3,"['install', 'release', 'update']","['installed', 'release', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. `Molecule::atom_at_position` is supposed to return the index of the atom found in a specified radius of a specified point in 3D space, or -1 if no atom is found in the radius. The current implementation assumes there is never more than one atom within the given radius, and returns the index of the first atom found to be within the tolerance.; This can hypothetically happen in two ways: the atoms are either extremely close, or the tolerance is set to a large value. The new implementation behaves more like one would expect it to behave: under the aforementioned extreme circumstances it throws an exception and informs the user with an error message. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Detect corner case and throw error if encountered; - [x] Update docstrings to better describe implementation. ## Questions; - [x] Apparently, `qcdb.Molecule` has its own independent Python implementation of `atom_at_position`. As is, this PR means that calling `qcdb.Molecule.atom_at_position` and `psi4.core.Molecule.atom_at_position` from a Python program may return different results for the same geometry, if the aforementioned corner case happens.; Not sure what to do about this, at first glance it would be neater if both `qcdb.Molecule.atom_at_position` and `psi4.core.Molecule.atom_at_position` ended up calling the same C++ implementation, but I am not sure how feasible that would be.; Thoughts?. ## Checklist; - [x] No new features; - [x] `ctest -j24` and `make pytest` both passed locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2465:899,Update,Update,899,https://psicode.org,https://github.com/psi4/psi4/pull/2465,1,['Update'],['Update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. closes #2867 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] functionals created by dict (like TPSS or custom) weren't hitting XC_build where the libxc citation was being set. Fixed by setting the citation from a static fn on LibXCFunctional. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2877:228,release,release,228,https://psicode.org,https://github.com/psi4/psi4/pull/2877,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. closes #3040. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] print_variables prints array variables. (first and last element); - [x] Used this to test scf guesses in pytest.; - [x] Store new qc variable ""SCF TOTAL ENERGIES"" that is a list of all the SCF iteration energies. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3052:227,release,release,227,https://psicode.org,https://github.com/psi4/psi4/pull/3052,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; @carolinesargent identified a bug where running FSAPT with an external potential w/o having frozen the orientation with no_com + no_reorient would run but give the wrong answer. :-(. External potentials has long been one of those cases where we required the user to freeze the orientation at molecule creation time so that the potential could be set in the same frame. This couldn't be fixed driver-side because as soon as the `core.Mol` builds w/o freeze directives, it loses the original Cartesian coordinates. (The clone, set_nocom, set_noreorient calls in the driver allow _regular_ sapt to forego user setting by preventing the dimer, monoA, monoB from having different frames.). Happily, in the intervening period, @maxscheurer ran into exactly this problem for polarizable embedding potentials and solved it by tacking a copy of the original Cartesians onto the molecule. So we're applying this to FSAPT also. . I've been getting some segfaults that I think are a quirk of my directory, hence the cc31 testing. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixes bug where FSAPT with an external potential and without no_com/no_reorient set would return wrong answer. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Let's use this route to accommodate aux info in the frame of the Cartesianmol. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2934:1231,release,release,1231,https://psicode.org,https://github.com/psi4/psi4/pull/2934,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A lot of error exits in `libdpd` are implemented with `exit(1)` or equivalent. This makes debugging harder, and results in less informative error messages when a test fails in the CI environment. This PR modernizes all `exit(1)` error exits in `libdpd` into `throw PSIEXCEPTION`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now prints more detailed error messages if an error happens in its DPD module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `exit(1)` and `exit(PSI_RETURN_FAILURE)` calls in `libdpd` have been replaced with a `throw PSIEXCEPTION`. ## Checklist; - [x] No new features; - [x] CI tests are failing only due to libint being in flux. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3117:493,release,release,493,https://psicode.org,https://github.com/psi4/psi4/pull/3117,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A quick cleanup removing `new` and `delete` in favor of `std::vector` in SOBasis. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3024:295,release,release,295,https://psicode.org,https://github.com/psi4/psi4/pull/3024,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3172:284,release,release,284,https://psicode.org,https://github.com/psi4/psi4/pull/3172,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Addressing Issue #2226, changing the gemm() method in Matrix.cc. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calculates row and column totals from rowspi_ and colspi_; - [x] Throws a Psi exception error if the dimensions don't match up. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2729:277,release,release,277,https://psicode.org,https://github.com/psi4/psi4/pull/2729,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds SAPT0-D and FISAPT-D routines, continuation of #1786. This code only works with the latest QCEngine commit, so it will fail the tests until the next QCEngine release. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [X] Add SAPT0-D and FISAPT0-D, for any -D variant available to HF; - [X] Enable access to pairwise dispersion decomposition from dftd3; - [x] Adapt fsapt.py analysis to use -D dispersion info. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [x] Test fsaptdiff.py. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2081:243,release,release,243,https://psicode.org,https://github.com/psi4/psi4/pull/2081,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds optking keywords missed in #3204. For users, if these options are needed with an older version of Psi4, they can be passed through `psi4.optimize(..., 'optimizer_keywords'=)` to optking. Features require `optking >= 0.3.0`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Adds shortcut for freezing all dihedrals in a molecule `freeze_all_dihedrals` and `unfreeze_dihedrals` . ## Checklist; - [x] Ran -L opt subset; - [x] keywords checked explicitly in optking's tests . ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3209:442,release,release,442,https://psicode.org,https://github.com/psi4/psi4/pull/3209,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds shorthand for SPW92 functional. Also removes a spurious citation from SVWN. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calculations can be launched with SPW92. ## Questions; - [x] Can someone add in the test reference energies? I don't have a running version of Psi4... ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2784:294,release,release,294,https://psicode.org,https://github.com/psi4/psi4/pull/2784,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; After seeing some GCC warnings related to sprintf usage I decided to modernize SAPTDIIS label generation with the use of `std::string` and a new utility function to retain the output format of `%2d`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No user-visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New function: `to_str_width`: converts any type supported by `std::to_string` to an `std::string`, and prepends as many spaces as required to meet the specified minimum width.; - [x] `SAPTDIIS::get_vec_label` and `SAPTDIIS::get_err_label` are modernized to return an `std::string`, instead of a `char*` that the caller needs to deallocate.; - [x] Functions using these two functions have been adapted to the changes. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2804:413,release,release,413,https://psicode.org,https://github.com/psi4/psi4/pull/2804,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; After the removal of `sem_test` in #2776, the only remaining internal user of `libqt/schmidt_add.cc` is `libqt/david.cc`. That too is destined for removal, if its only user in `dfocc` is removed by #2684. So it looks like `schmidt_add` could be removed in the future, when all of its callers are gone. To keep the promise of not randomly breaking API without fair warning, this PR deprecates the function, setting up its eventual removal. Note that this `schmidt_add` is not the same function as the `schmidt_add` in `cceom` or `detci`, even though the name is the same. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `PSI_API` function `int schmidt_add(double** A, int rows, int cols, double* v)` is deprecated and 1.7 will be the last release with it present. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Deprecation message is added to `schmidt_add` in `libqt`. ## Questions; - [ ] This function was tagged as `PSI_API` in #1077 by @raimis, do we know why it was necessary back then?. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2822:784,release,release,784,https://psicode.org,https://github.com/psi4/psi4/pull/2822,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Apparently `errno` is not defined on FreeBSD by default, so we have to explicitly include `<cerrno>` in files that use it. This PR adds that include.; Fixes and closes #2810. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None? The offending code has not made it to any release yet. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `#include <cerrno>` is added to the few PSIO files that use `errno`. ## Checklist; - [x] No new features; - [x] CI tests are passsing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2811:388,release,release,388,https://psicode.org,https://github.com/psi4/psi4/pull/2811,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Around the time when the Boost dependency was being removed, some `PRAGMA_WARNING` manipulations were inserted, presumably to reduce warning noise during builds.; The Boost includes have since been removed and these are no longer necessary. `#include <memory>` thankfully does not require such guarding. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No user visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Stop unnecessarily guarding `#include <memory>` with `PRAGMA_WARNING_IGNORE_DEPRECATED_DECLARATIONS` . ## Checklist; - [x] No new features; - [ ] CI tests are passing. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3088:517,release,release,517,https://psicode.org,https://github.com/psi4/psi4/pull/3088,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; As discussed in #2997 and #3117, no debugging information is produced in many places in Psi4. I believe this is because of improper calls to `exit()`, which is a remnant of the C history of Psi. #3117 replaces the calls to `exit()` with `throw`s in libdpd. This PR replaces the calls in the rest of Psi4. Sorry for the verbose changes; I ran clang-format on the files since my editor's indentation doesn't match that in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Obsoleted calls to `exit()` have been replaced by exceptions, which should better guarantee the passing of error messages to the end user. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Spurious calls to `exit()` have been removed in favor of exceptions, which should better guarantee error messages getting through to the user. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3118:639,release,release,639,https://psicode.org,https://github.com/psi4/psi4/pull/3118,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; As it says in the title, see #2942 and #2938. Closes #2942. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `adcc` version `0.15.16` at least required due to bugfixes in `adcc`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Check `adcc` min version at runtime. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). closes #2938 closes #2942. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2944:273,release,release,273,https://psicode.org,https://github.com/psi4/psi4/pull/2944,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Both `normalize` and `schmidt_add` are now unused. `schmidt_add` is `PSI_API`, but it has been given a deprecation period of one release. The files will be submitted to the attic after this is merged. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `schmidt_add(double** A, int rows, int cols, double* v)` has been removed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused `normalize` function and file are removed; - [x] Deprecated `PSI_API` function `schmidt_add` and file are removed. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2927:209,release,release,209,https://psicode.org,https://github.com/psi4/psi4/pull/2927,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Cleanup to libmints/petitelist to remove manual memory management in favor of `std::vector`. Some of the code was not really clear (use of both `len` and `length` in some of the SO objects). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3026:404,release,release,404,https://psicode.org,https://github.com/psi4/psi4/pull/3026,1,['release'],['release']
Deployability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #2712. Please do not use C-style casting for complicated types. ## Release Notes Delta; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] **Bugfix:** Seeding an SCF gradient with a ref_wfn that isn't SCF now raises an error rather than a segfault. ## Checklist; - [x] `grad` and `hess` ctests pass. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2714:154,Release,Release,154,https://psicode.org,https://github.com/psi4/psi4/pull/2714,1,['Release'],['Release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #2799 : prints out the name of the file that failed to open. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2801:281,release,release,281,https://psicode.org,https://github.com/psi4/psi4/pull/2801,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #3115. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The default definition for a molecule has been removed. Prior to this release, if a `molecule` had not been defined, Psi4 would run on a hydrogen molecule with bond length 0.74 Å. This change only affects Psithon input. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3116:227,release,release,227,https://psicode.org,https://github.com/psi4/psi4/pull/3116,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Definitions of various IO system call macros are currently replicated and/or scattered across files. These macros were added to paper over differences between Windows and Linux/Mac.; This PR coalesces all of them into `psio.h`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `SYSTEM_WRITE`, `SYSTEM_READ`, `SYSTEM_LSEEK`, `SYSTEM_OPEN`, `SYSTEM_CLOSE`, `SYSTEM_UNLINK`, `PSIO_OPEN_OLD_FLAGS`, `PSIO_OPEN_NEW_FLAGS `and `PERMISSION_MODE `are now only defined in `psio.h`, which is already included by pretty much all PSIO-related files anyways.; - [x] Same goes for the Windows specific `io.h` include, and the non-Windows `unistd.h`. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2741:440,release,release,440,https://psicode.org,https://github.com/psi4/psi4/pull/2741,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3168:482,release,release,482,https://psicode.org,https://github.com/psi4/psi4/pull/3168,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167:348,release,release,348,https://psicode.org,https://github.com/psi4/psi4/pull/3167,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes a bug encountered when running optimizations in BAKERJCC96. All calculations in a finite difference; calculation were writing orbitals to disk and overwriting the old orbitals. Only reference calculation should; be saved. In cases were the symmetry was lowered in one of the last displacements, subsequent gradient calculations; were failing to read orbitals. ``` ; File ""/home/zander/github/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 1761, in scf_helper; raise ValidationError(""Cannot compute projection of different symmetries.""); ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] scf_helper assumes orbitals should always be written. Passes `write_orbitals` = `false` through kwargs for displacements. ## Questions; - [ ] The new test is an optimization, would a test in ddd-function-kwargs or similar be preferred?. ## Checklist; - [x] Tests added for any new features; - [x] full ctest (Psi4, Psi4 + [CheMPS2, DFTD3, dkh, gCP, gdma, simint, ecpint]). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2827:775,release,release,775,https://psicode.org,https://github.com/psi4/psi4/pull/2827,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes a bug in `sad.cc`: pseudo-orbitals should be obtained by multiplying the orbital with the square root of their occupation to reproduce the correct density matrix C occ C^T. Closes #3137. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3138:406,release,release,406,https://psicode.org,https://github.com/psi4/psi4/pull/3138,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3215:266,release,release,266,https://psicode.org,https://github.com/psi4/psi4/pull/3215,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; GT will trial this before it's ready for merging, but it's good to get eyes on it and to not lose track of the changes. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Users of QCFractal `next` can now customize protocols, tags, priorities, and owner_groups. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Allow psi4 to turn all the knobs qcportal allows: https://github.com/MolSSI/QCFractal/blob/next/qcportal/qcportal/client.py#L903-L915. ## Questions; - [x] @bennybp look ok? Ben has looked this over and approved. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3013:333,release,release,333,https://psicode.org,https://github.com/psi4/psi4/pull/3013,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3232:624,release,release,624,https://psicode.org,https://github.com/psi4/psi4/pull/3232,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I think whoever brought up the new ""warnings"" in the sphinx log was on the right track. We do have the treat-warnings-as-errors flag on. It's the treat-broken-links-as-errors flag that we can't enable yet. Between that and the 9800 PR in the newest sphinx changelog released 17 Jan https://www.sphinx-doc.org/en/master/changes.html#release-4-4-0-released-jan-17-2022, I bet that's what's causing our docsbuild fail. Hopefully I haven't added any new syntax errors. - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2422:346,release,released,346,https://psicode.org,https://github.com/psi4/psi4/pull/2422,3,['release'],"['release-', 'released', 'released-jan-']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I was looking through the source code to understand what the `DFT_REMOVE_DISTANT_POINTS` keyword does, and realized I could not understand what the `remove_distant_points` function was doing. I also suspect that that code was partly wrong. This PR cleans up that function so that it now does what it should. However, it is also evident that the logic of this function is not optimal. Instead of checking if any nucleus is within the maximal spatial extent of the basis set, one should check if any nucleus is within the extent of that nucleus' basis functions. This is just a drive-by commit, as I don't think it's worthwhile to spend time on Psi4's quadrature code, since [IntegratorXX](https://github.com/wavefunction91/IntegratorXX/) and [GauXC](https://github.com/wavefunction91/GauXC) offer a reusable solution that could be used also in Psi4 with significant negative LOCs. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3012:754,Integrat,IntegratorXX,754,https://psicode.org,https://github.com/psi4/psi4/pull/3012,3,"['Integrat', 'release']","['IntegratorXX', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Implements OpenOrbitalOptimizer support in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] (Optional) If OpenOrbitalOptimizer support is enabled at compile-time, an improved atomic Hartree-Fock solver is used in the SAD, SADMO, and HUCKEL guesses. In contrast to the legacy solver in Psi4, the OpenOrbitalOptimizer atomic self-consistent field is fully symmetry aware, which is especially important for e.g. transition metal atoms. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3136:262,release,release,262,https://psicode.org,https://github.com/psi4/psi4/pull/3136,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Improvements discussed in a comment to #3043. The 64-character limit may not be valid on all architectures; this PR should avoid having to revisit the patch. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3044:231,patch,patch,231,https://psicode.org,https://github.com/psi4/psi4/pull/3044,2,"['patch', 'release']","['patch', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3173:336,release,release,336,https://psicode.org,https://github.com/psi4/psi4/pull/3173,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It is done. The beast lays slain.; This PR replaces the last calls of the `sq_rsp` function in the `dfoccwave::Tensor2d::diagonalize` overloads with the new DSYEV wrappers, and removes the function and its file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `void sq_rsp(int nm, int n, double **array, double *evals, int matz, double **evecs, double toler)` has been removed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Merge `dfoccwave::Tensor2d::diagonalize` overloads to minimize code dupliaction; - [x] Add machine-readable docstrings in the header file; - [x] `dfoccwave::Tensor2d::diagonalize` overloads now throw on non-square matrices or diagonalizer failure; - [x] Replace calls of `sq_rsp` with `DSYEV_ascending` and `DSYEV_descending`; - [x] Delete `sq_rsp` function and file. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2928:425,release,release,425,https://psicode.org,https://github.com/psi4/psi4/pull/2928,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It looks like `libmints/svd.cc` is unused. Psi4 appears to build just fine without it. It contains what looks like ancient LAPACK code that was auto-translated with f2c. This PR deletes the file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused file `libmints/svd.cc` is deleted. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3169:409,release,release,409,https://psicode.org,https://github.com/psi4/psi4/pull/3169,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Just comments a cryptic line in xhost.cmake. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2983:258,release,release,258,https://psicode.org,https://github.com/psi4/psi4/pull/2983,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Looks like I didn't push the updated reference output for the MODHUCKEL guess... ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3011:109,update,updated,109,https://psicode.org,https://github.com/psi4/psi4/pull/3011,2,"['release', 'update']","['release', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Main point is to add scipy to Windows conda requirements, so package builds. Also updates some labels for 3.8+. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2455:162,update,updates,162,https://psicode.org,https://github.com/psi4/psi4/pull/2455,1,['update'],['updates']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3222:752,release,release,752,https://psicode.org,https://github.com/psi4/psi4/pull/3222,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; NOTE: this commit was applied to v1.8.1 even though not merge to master until after that release. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] closes #3003 we usually have pytest around, but it shouldn't be absolutely required. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3008:169,release,release,169,https://psicode.org,https://github.com/psi4/psi4/pull/3008,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3216:168,patch,patch,168,https://psicode.org,https://github.com/psi4/psi4/pull/3216,2,"['patch', 'release']","['patch', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; PR #2684 has removed the last remaining call site of the `libqt` Davidson solver. This PR removes this unused function and file.; The file will be submitted to the attic after this is merged. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None, `david` was not `PSI_API`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused `libqt` function `david` and its file are removed.; - [x] Declared-but-never-defined function `print_block` is removed from `qt.h`. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2925:405,release,release,405,https://psicode.org,https://github.com/psi4/psi4/pull/2925,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; PR #2686 has accidentally added some superfluous includes of `libpsi4util/PsiOutStream.h`, and I also missed removing a superfluous printf line. No real harm done, but they can be removed. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Remove some includes added by #2686 ; - [x] Remove a printf added by #2686 . ## Checklist; - [x] No new features; - [ ] CI tests are passing. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2813:402,release,release,402,https://psicode.org,https://github.com/psi4/psi4/pull/2813,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Printf format specifiers are required to match the type of the variable being printed. Using an incorrect format specifier may be UB. This PR resolves instances where the format specifier was incorrect. At least some of these have been triggering GCC warnings, so Psi4 now compiles with a couple fewer warnings. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Likely no user-visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `cctransort/memcheck`: Replace 14 instances of `%1lu` being used for printing an `int`, with `%d`. Make argument `const`.; - [x] `detci/olsengraph.cc`: fix one instance of `%3d` being used for printing a `size_t` integer; - [x] `dlpno/mp2.cc`: fix 12 instances of %d being used for `size_t` integers; - [x] `fnocc/lowmemory_triples.cc`: fix `%i` being used to print a `long`; - [x] `libfock/DirectJK.cc`: fix %3d being used for `size_t` integer; - [x] `libfock/solver.cc`: fix %d being used for `size_t` integer; - [x] `libmints/cdsalclist.cc`: fix 5 instances of %d being used for `size_t` integers; - [x] `libmints/extern.cc`: fix 3 instances of %d being used for `size_t` integers. Make argument `const &`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2771:525,release,release,525,https://psicode.org,https://github.com/psi4/psi4/pull/2771,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Psi4 has wrappers for seven LAPACK functions which have been marked as deprecated by the LAPACK devs for a long time. These functions have also been marked as deprecated within Psi4. Luckily they are not marked as `PSI_API`, nor are they used by Psi4. This PR removes them. Note that the default git diff algorithm is getting confused by the repetitive text in `lapack_intfc.cc` and incorrectly indicates that some lines were added. The correct diff can be obtained with `--diff-algorithm=minimal` :; ```; $ git diff --stat --diff-algorithm=minimal master remove_deprecated_lapack; psi4/src/export_blas_lapack.cc | 7 -; psi4/src/psi4/libmints/psimath.cc | 50 --; psi4/src/psi4/libmints/psimath.h | 27 -; psi4/src/psi4/libqt/CMakeLists.txt | 19 -; psi4/src/psi4/libqt/lapack_intfc.cc | 1021 -----------------------------; psi4/src/psi4/libqt/lapack_intfc_mangle.h | 35 -; psi4/src/psi4/libqt/qt.h | 25 -; 7 files changed, 1184 deletions(-); ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now requires the LAPACK library to provide `DGGSVD3` and `DGGSVP3`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fortran, C and C++ style wrappers for `DGEGS`, `DGEGV,` `DGELSX,` `DGEQPF,` `DGGSVD,` `DGGSVP` and `DTZRQF` are removed.; - [x] CMake checks for the availability of `DGGSVD3` and `DGGSVP3` are removed. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2823:1158,release,release,1158,https://psicode.org,https://github.com/psi4/psi4/pull/2823,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Refactored code in the WaveFunction class as per #2875. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] No changes to user experience. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Removed `nmo_` cache variable in favor of `nmopi_.sum()` to keep things in sync; - [ ] Refactored code to reflect removal of variable. ## Questions; - [ ] Best ways to test this change?. ## Checklist; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge. #2875",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2980:269,release,release,269,https://psicode.org,https://github.com/psi4/psi4/pull/2980,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Remove c++ optking. Add new python optking driver. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] RN 1 The fixed_* optimization keywords have been changed to ranged_* options; - [x] RN 2 output will be changed. Check output.dat for simple convergence / step info. output.log for detailed info; - [x] RN 3 IRC convergence behavior different for minima and substep. ; - [x] Downstream plugin users who were still getting wfn from globals will find it has now departed. Please follow the advice it's been issuing for years to do wfn passing. [LAB added]. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New optimizer. Most of driver is very similar; - [x] Hessian Updating and optimization logic is in optking as much as possible; - [x] Restarting optimizations now supported. Optking can write entire state to disc (json); - [x] Driver attempts to symmetrize geometries; - [x] New keywords added. Some removed / updated. ; - [x] old optking removed from CMakeLists.txt from `/psi4/src/psi4`; - [x] optking py_funcs removed from core.cc; - [x] All tests have been verified for equal or better convergence. (except opt-irc-2); - [x] globals legacy gradient, wfn, and molecule removed [LAB added]. ## Questions; - [ ] A document describing differences between the optimzers may be necessary; - [ ] Unclear if I have fully removed old optking and building with new optking is fully working. ## Checklist; - [x] test15 tests restart; - [x] Can remove old deprecated set_gradient; - [x] ctest -L opt run. ## Status; - [x] Ready for review; - [ ] Ready for merge. For documentation on the new optimizer please see",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727:263,release,release,263,https://psicode.org,https://github.com/psi4/psi4/pull/2727,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Some overloads of `Matrix::diagonalize` in `libmints` are never called anywhere within Psi4, and some more are currently taking pointer arguments. They should be removed, but as discussed in #2693 the entire `Matrix` class is `PSI_API` and Forte is for sure using these diagonalization functions. To keep the promise of not randomly breaking API without fair warning, this PR deprecates said functions but keeps them usable. Call sites within Psi4 are however converted to use non-deprecated overloads, so after 1.7 is out, completing the removal should just be a simple deletion of the deprecated overloads. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix* eigvectors, Vector* eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& metric, SharedMatrix& eigvectors, std::shared_ptr<Vector>& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, int nMatz = 1)` is now using the `diagonalize_order` enum, like the other overloads: `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)`. But since `ascending = 1`, this should not cause disruptions. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2738:821,release,release,821,https://psicode.org,https://github.com/psi4/psi4/pull/2738,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Sometime between https://github.com/psi4/psi4/commit/5b54376e4f358ec1318539d3ac0a2e42ea0483f8 and https://github.com/psi4/psi4/commit/7e4ecf968ec7920ab404cb357de827cf3785a254, the original(?) code for generating broken-symmetry guesses for UHF/UKS was disabled, and parts of it may have been removed since.; These days, the way to get a BS guess seems to be setting `guess_mix true`, which does not use the old BS code fragments in `scf_helper`.; So, as far as I can tell it is dead code. This PR removes it. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None, option/feature has been defunct/superseded for 6+ years. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Defunct broken-symmetry code is removed from Python function `scf_helper`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2774:722,release,release,722,https://psicode.org,https://github.com/psi4/psi4/pull/2774,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; TBA. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] TBA. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3114:218,release,release,218,https://psicode.org,https://github.com/psi4/psi4/pull/3114,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; TODO. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3101:219,release,release,219,https://psicode.org,https://github.com/psi4/psi4/pull/3101,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The `-H<path>` option for CMake is technically not part of the CMake public interface, it is not documented and was never meant for public use. Since CMake 3.13 there is a proper alternative, `-S<path>`, so Psi4 should use that and stop suggesting users to use `-H<path>`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 no longer suggests users to use the undocumented `-H<path>` CMake option when building from source. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace `-H<path>` with `-S<path>` in CMake invokations. ## Questions; - [ ] I have no idea where to make a PR for fixing this in psi4-path-advisor. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2797:486,release,release,486,https://psicode.org,https://github.com/psi4/psi4/pull/2797,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The common thread of this PR is be more explicit in what calculations Psi4 can do and conveying that to the user at runtime and through the docs. In practice, this involves expanding the coverage of stdsuite, using those results to autogenerate docs tables, reconciling hand-generated docs tables, referring to all in runtime errors, and cleaning stuff up along the way. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] MRCC now called with `set qc_module mrcc` rather than ""mr"" prefix onto method; - [x] Many NYI messages, whether from ManagedMethodError, MissingMethodError, or plain ValidationError from run_* fns have changed their wording and added content. On the whole, this should be helpful, but if you're searching for particular phrasing, you'll likely need to adjust regexes.; - [x] New tables in the docs with details on accessible methods.; - [x] Arbitrary-order MPn no longer runable with ROHF. Arbitrary-order ZAPTn no longer runable with RHF.; - [x] Running DF through CCENERGY (experimental, expert only) may now require `set qc_module ccenergy`. ## Dev notes & details; - [x] running stdsuite writes a storage file, and a new document_capabilities script turns the storage file into various tables that newly (1) include all-electron/frozen-core info (notated ""aefc"" in places), (2) show default modules and default e.g., mp2_type, (3) cover most single-ref ground-state total-energy methods, (4) are proven to honor return val and qcvar contracts. details of how and why this works are at [psi4/share/psi4/scripts/merge_stdsuite.py](https://github.com/psi4/psi4/pull/2731/files#diff-4a81ee0fb4705fe6acd6ac7f6417f5a899437a93780329a5f647a94eea425c24R8) . If you want to suggest changes to notation, keep in mind that main-body cell contents must be expressible in a single unicod",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:584,release,release,584,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The version of ADCC that the Psi4 CMake system currently requires (and tries to build if not found) is incompatible with C++17, and thus always fails to build. See https://github.com/adc-connect/adcc/issues/131 for the error message. This error was also mentioned in issue #2572.; This has been resolved by the ADCC/libtensor devs since, so bumping the required/built ADCC version to the latest release should fix _this particular_ issue with the ADCC build process. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now requires ADCC version 0.15.13 or newer.; - [x] Fixed issue where building Psi4 from source with the ADCC plugin enabled-but-not-found resulted in a build failure with the error message `ISO C++17 does not allow dynamic exception specifications`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] CMake now looks for ADCC 0.15.13 or newer, if not found the 0.15.13 tarball is downloaded and built. ## Checklist; - [x] No new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2785:475,release,release,475,https://psicode.org,https://github.com/psi4/psi4/pull/2785,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; There are some IO functions declared in psio.**h** instead of psio.**hpp**, which manipulate the state of the global PSIO object. Some of these functions are never called, a few other functions are declared but never defined.; This PR removes them. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] No user facing or API changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused global-scope psio_* functions are removed. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2724:461,release,release,461,https://psicode.org,https://github.com/psi4/psi4/pull/2724,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; There are some char arrays in `ccdensity::RHO_Params` that are set in `get_rho_params` but are otherwise never used. This PR removes them. This rectifies a few warnings with GCC 12, caused by the `sprintf `calls used to set them. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No user-visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `R1B_lbl` and similar unused members of `RHO_Params` are removed, except `R1A_lbl` which becomes not unused if `EOM_DEBUG` is defined. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2805:443,release,release,443,https://psicode.org,https://github.com/psi4/psi4/pull/2805,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; These functions are relics from Psi3 (or before?) and they have many issues, unfortunately one of them is their function signature. Stemming from the awful interface, users of `rsp(...)` and `sq_rsp(...)` never check if the diagonalization failed, because they _cannot_. To keep the promise of not randomly breaking API without fair warning, this PR deprecates said functions but keeps them usable. After #2776, `rsp(...)` has no internal callers left. As for `sq_rsp(...)`:. - many former callers of `sq_rsp(...)` have turned out to be unused functions and have been removed; - If #2686 is merged the vast majority of remaining callers are migrated to a new wrapper around DSYEV; - The remaining call sites of `sq_rsp(...)` will all be in `dfocc`, which is not touched for the time being to avoid causing merge conflicts for the many pending PRs for that module. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `PSI_API` function `void rsp(int nm, int n, int nv, double *array, double *evals, int matz, double **evecs, double toler)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` function `void sq_rsp(int nm, int n, double **array, double *evals, int matz, double **evecs, double toler)` is deprecated and 1.7 will be the last release with it present. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Added deprecation notices to `rsp(...)` and `sq_rsp(...)`. ## Checklist; - [x] No new features; - [x] Tests pass as per Lori. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2798:1077,release,release,1077,https://psicode.org,https://github.com/psi4/psi4/pull/2798,3,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR aims to improve the Dimension object in various ways, by adding machine-readable (for eg. VSCode) docstrings, adding const to arguments, replacing `int` with `size_t` to match `std::vector::operator[](std::size_t)` and cautiously deprecating member functions that deal with pointers. Not only are pointers more error-prone, they are currently involved in some strange interaction between `Dimension` and `Matrix` objects, resulting in awkward roundabout initialization/construction that I hope to untangle before Psi4 1.11? (1.11, or maybe 1.12?).; Please let me know if you feel the three deprecations in this PR would be too disruptive or otherwise undesirable, this PR is very much a ""request for comments"". ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] API change: The custom assignment operator for `Dimension` objects (`Dimension& operator=(const int*)`) is being deprecated. Unless someone speaks up, 1.10 may be the last release to have it.; - [x] API change: Cast-to-pointer operators for `Dimension` objects (`operator int*()` and `operator const int*() const`) are being deprecated. Unless someone speaks up, 1.10 may be the last release to have them.; - [x] Minor API change: Several constructors and member functions of `Dimension` are now using `size_t` instead of `int` for indexing:; −`Dimension::Dimension(int, const std::string&)` is now `Dimension::Dimension(size_t, const std::string&)`; −`void Dimension::init(int, const std::string&)` is now `void Dimension::init(size_t, const std::string&)`; −`int Dimension::n() const` is now `size_t Dimension::n() const`; −`int& Dimension::operator[](int)` is now `int& Dimension::operator[](size_t)`; −`const int& Dimension::operator[](int) const` is now `const int& Dimension::operator[](size_t) const`; −`const int& Dimensi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953:932,release,release,932,https://psicode.org,https://github.com/psi4/psi4/pull/2953,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR aims to make a lot of tiny improvements to libmoinfo.; While trying to modernize a bit of libmoinfo code to eliminate some (ab)use of the Dimension functions deprecated by PR #2953 I had to try to get at least some grip on what-does-what, but libmoinfo has accumulated some clutter which made that harder than necessary.; One thing led to another, and now this PR is here to hopefully make it easier for the next person.; Docstring addition and more are the subject of a future PR. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No user-facing changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Removed a some unused macro definitions, inlined the single use of `#define size_det`; - [x] Removed `std::vector<size_t> ioff`, its getter function, and initialization from `MOInfoBase`. It looks like this 5 M element array was getting non-trivially initialized every time an `MOInfoBase` object (or one derived from it) was constructed. RAM usage of these objects should now be 40 MB lower, and their construction should be faster by an unknown amount.; - [x] Removed some class declarations, included the appropriate `.h` instead where required instead of them (Note: some of this was reverted after reviews, see discussion on this PR.); - [x] Touched-up what-includes-what, along the lines of removing what is not required, but adding what is; - [x] Removed declarations for `tuning()` and `read_mo_spaces2()`, as they are never defined; - [x] Removed some getters from `MOInfo`, either unused or already defined in the base class.; - [x] Removed unused fn `MOInfoBase::get_irr_labs()`; - [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3112:703,release,release,703,https://psicode.org,https://github.com/psi4/psi4/pull/3112,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR allows for using basis sets from the Basis Set Exchange library (https://github.com/MolSSI-BSE/basis_set_exchange) directly in psi4. To use a basis set from the BSE, you prefix the name of the basis set with `bse:`. Optionally, you can specify the version with a suffix (like `:1`). ```; # use most recent def2-tzvp version; set basis bse:def2-tzvp. # specifically use version 0 of sto-3g; set basis bse:sto-3g:0; ```. Also can be used with `assign`. ```; basis {; assign DZ; assign C bse:sto-3g:0; }; ```. Using these of course requires that the BSE be installed. This should be accessible from both schema/json and psithon. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Add capability to use basis sets from the Basis Set Exchange. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Adds optional dependency to basis_set_exchange; - [x] Adds handling for basis sets that start with `bse:`; - [ ] Modifies some regexes to allow for colons in basis set names. ## Questions; None. ## Checklist; - [x] Optional dependency added to build chain; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2905:642,install,installed,642,https://psicode.org,https://github.com/psi4/psi4/pull/2905,2,"['install', 'release']","['installed', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR builds upon the functions added in #2711 and #2700 to provide more informative error messages if a `SYSTEM_READ`, `SYSTEM_WRITE` or `SYSTEM_LSEEK` fails, including the OS-provided error message, which may have clues for the cause of the error (disk is full, no permission, etc). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] Error messages related to some IO errors are now more specific and detailed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New function: `psio_compose_err_msg`. This helps composing PSIO error messages without too much code duplication. It can optionally take an errno value and tack on the error message provided by the OS.; - [x] `psio_volseek` has been reworked to handle any errors internally by calling `psio_error`, instead of returning -1 on error. Appropriate error message generation and some `const` qualifiers were added.; - [x] `PSIO::rw` has been adapted to the changes to `psio_volseek` and error message generation was added after each read/write/seek.; - [x] Functions in `toclen.cc` are now also using `psio_compose_err_msg` to generate messages. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756:499,release,release,499,https://psicode.org,https://github.com/psi4/psi4/pull/2756,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR fixes #3147 . Basically the psithon way of defining molecules converted _initial_cartesian on parsing.; When adding an external potential this was used as; molecule.set_geometry(clone_molecule._initial_cartesian).; set_geometry applies the conversion again. The two python ways I found, which set initial_cartesian did not do the conversion leading to incorrect geometries, when using external_potential and molecules defined as unit=angstrom. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixes #3147: Parsing molecules with angstrom units and using external_potential from python was broken. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes #3147: Parsing molecules from psithon and python left mol._initial_cartesian in a different unit. This aligns the units. Downstream this had the effect of breaking using molecules with angstrom units with an external_potential from python. ## Questions; - [x] Question1. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3148:665,release,release,665,https://psicode.org,https://github.com/psi4/psi4/pull/3148,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR implements another variant of the Hückel guess.; The only modification is that the `k` parameter in the GWH rule is replaced by the updated rule from [doi:10.1021/ja00480a005](https://doi.org/10.1021/ja00480a005). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3002:220,update,updated,220,https://psicode.org,https://github.com/psi4/psi4/pull/3002,2,"['release', 'update']","['release', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR removes the `Matrix::diagonalize` overloads deprecated in PR #2738 and closes #2693 as done/superseded. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` member function `Matrix::diagonalize(Matrix* eigvectors, Vector* eigvalues, diagonalize_order nMatz = ascending)` is removed.; - [x] Deprecated `PSI_API` member function `Matrix::diagonalize(SharedMatrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)` is removed.; - [x] Deprecated `PSI_API` member function `Matrix::diagonalize(SharedMatrix& metric, SharedMatrix& eigvectors, std::shared_ptr<Vector>& eigvalues, diagonalize_order nMatz = ascending)` is removed. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2837:325,release,release,325,https://psicode.org,https://github.com/psi4/psi4/pull/2837,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR removes the `rsp` diagonalizer which was deprecated in #2798, and its supporting functions `tqli` and `tred2`, which are not used anywhere else.; These can be preserved in psi4attic after this PR is merged. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `void rsp(int nm, int n, int nv, double *array, double *evals, int matz, double **evecs, double toler)` is removed. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2838:428,release,release,428,https://psicode.org,https://github.com/psi4/psi4/pull/2838,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This adds the missing citation to Libxc in the manual's introduction. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2975:283,release,release,283,https://psicode.org,https://github.com/psi4/psi4/pull/2975,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This changes the name of the controller for all three SAPT modules and standardizes their convergences as residual only with default of 1e-8. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3105:355,release,release,355,https://psicode.org,https://github.com/psi4/psi4/pull/3105,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is an implementation of the fitted version of the SAP guess, described in [J. Chem. Phys. 152, 144105 (2020)](https://doi.org/10.1063/5.0004046). The repulsive potential on every atom is fit in terms of error function potentials, which means that the guess can be evaluated with few two-electron integrals; namely. $$ {\bf F}^\text{SAP} = {\bf H} + {\bf V}^\text{SAP} $$. $$ V_{\mu \nu}^\text{SAP} = \sum_{A} (A|\mu \nu) $$. where $A$ is a fully contracted $1s$ function on each atom. I have no idea how the integrals work in Psi4. I followed [a Psi4Numpy example](https://github.com/psi4/psi4numpy/blob/master/Moller-Plesset/DF-MP2_NAF.py) @loriab hinted me at. The appears to compile; the only problem being the final assembly, i.e. the sum over the 3-center integrals. If anyone can tell me what I should be doing, help would be appreciated... Closes #2054 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Implement scheme and get something that matches ERKALE; - [ ] Use optimal storage. ## Questions; - [ ] Is the basis build call correct? Should I also add a new basis role somewhere?. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3036:1080,release,release,1080,https://psicode.org,https://github.com/psi4/psi4/pull/3036,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is an implementation of the fitted version of the SAP guess, described in [J. Chem. Phys. 152, 144105 (2020)](https://doi.org/10.1063/5.0004046). The repulsive potential on every atom is fit in terms of error function potentials, which means that the guess can be evaluated with few two-electron integrals; namely. $$ {\bf F}^\text{SAP} = {\bf H} + {\bf V}^\text{SAP} $$. $$ V_{\mu \nu}^\text{SAP} = \sum_{A} (A|\mu \nu) $$. where $A$ is a fully contracted $1s$ function on each atom. The implementation is not optimal, since I use `ao_eri` to compute the integrals. An optimal implementation would accumulate the auxiliary functions' integrals on-the-fly; however, optimization can be safely left to a later stage... Closes #2054 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Implement scheme and get something that matches ERKALE. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3039:951,release,release,951,https://psicode.org,https://github.com/psi4/psi4/pull/3039,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is for after #2861. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Add option `psi4_SHGAUSS_ORDERING` to use `sss` (all CCA standard orderings internally). expert only! all tests will pass (this pulls over Andy Simmonett's fchk fix from #2537) except mints3, and this adds alternate refs for that, too. This by no means means that all exported formats are safe -- only the ones we test :-) ; - [x] Uses a new commit for dkh that has some build updates. also passes it blas that it uses and I apparently missed before. closes #2537. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests) These changes fixed all test on a different branch. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2949:757,update,updates,757,https://psicode.org,https://github.com/psi4/psi4/pull/2949,1,['update'],['updates']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is the variant of DirectJK I mentioned at the end of @davpoolechem's talk at PsiCon last Saturday. The idea is simple: instead of updating the reference every iteration, which is subject to creeping numerical noise, use a fixed reference density and JK matrix for all iterations. I also simplified some of the DirectJK code, and added missing documentation. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Should full formation still happen every N iterations? I don't know if this truly is less susceptible to numerical noise accumulation... ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3111:576,release,release,576,https://psicode.org,https://github.com/psi4/psi4/pull/3111,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This pull request fixes the functionality of the EMBPOT perturbation to the core Hamiltonian in SCF calculations and adds appropriate gradients for the EMBPOT potential. The EMBPOT perturbation works by reading x, y, z, w, and v coordinates from a file (`EMBPOT`) during the call to `HF::form_H()`. The core Hamiltonian of the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3239:505,integrat,integration,505,https://psicode.org,https://github.com/psi4/psi4/pull/3239,2,"['integrat', 'release']","['integration', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This updates the Windows Azure for testing and conda build from 2016 to 2022 environment and 11 to 13 llvm. It's definitely needed soonish as 2016 is getting retired. I don't see any reason the llvm change should hurt the broad usability of the conda package, so I'm for trying it in the wild. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2415:85,update,updates,85,https://psicode.org,https://github.com/psi4/psi4/pull/2415,1,['update'],['updates']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; To implement the SAP guess (#3036), I need to toy with the contraction coefficients. Currently, there is duplicated data in BasisSet, as the Libint2 shells are built alongside the basis set itself. The idea of this PR is to modularize the Libint2 shell data creation so that the data can be refreshed based on the data in the BasisSet. The PR also fixes an issue in that the `n_prim_per_shell_` member of BasisSet was never populated. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3037:648,release,release,648,https://psicode.org,https://github.com/psi4/psi4/pull/3037,1,['release'],['release']
Deployability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Update LLVM version to suit Azure Windows. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2979:80,Update,Update,80,https://psicode.org,https://github.com/psi4/psi4/pull/2979,1,['Update'],['Update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Update the manual to clarify that exchange-scaling of S^2-approximated terms; is no longer done by default, and explain why (cite 2013 Jansen paper). This is just a quick text edit of the manual, nothing else has changed. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3035:80,Update,Update,80,https://psicode.org,https://github.com/psi4/psi4/pull/3035,1,['Update'],['Update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Updates CMakeLists to pull libxc 7.0.0. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3231:80,Update,Updates,80,https://psicode.org,https://github.com/psi4/psi4/pull/3231,2,"['Update', 'release']","['Updates', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; While testing PR https://github.com/psi4/psi4/pull/2756, I have discovered a regression introduced by an earlier PR (#2700) of mine.; Before `throw`ing, `psio_error()` tries to write some data to the scratch files. But if `psio_error()` is called due to a write error, and the scratch disk is completely full, then this write will also fail, leading to `psio_error()` getting called again, and an infinite recursion ensues. The source of the regression is that `psio_tocwrite()` ends up calling `wt_toclen()`, which has been enhanced in #2700 to use `psio_error()` if it fails.; This PR resolves the issue by not trying to write anything to scratch if `psio_error()` is called due to a write failure. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None? This regression was new enough that no release suffered from it. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Do not call `psio_tocwrite()` in `psio_error()` if `errval == PSIO_ERROR_WRITE`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2773:914,release,release,914,https://psicode.org,https://github.com/psi4/psi4/pull/2773,2,['release'],['release']
Deployability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Yearly maintenance -- update copyright. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2394:102,update,update,102,https://psicode.org,https://github.com/psi4/psi4/pull/2394,1,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; `Matrix::swap_rows` and `Matrix::swap_columns` do no seem to have any internal users, but since `Matrix` as a whole is `PSI_API`, it would be rude to suddenly remove them. This PR adds deprecation notices. The motivation for removal is that these two functions are the only internal users of the DSWAP BLAS interface. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `PSI_API` functions `Matrix::swap_rows` and `Matrix::swap_columns` are now deprecated due to a lack of users. Unless someone speaks up, 1.8 will be the last release to have them. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Deprecation notices added to `matrix.h`. ## Checklist; - [x] No new features; - [ ] CI tests are passing. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2909:531,release,release,531,https://psicode.org,https://github.com/psi4/psi4/pull/2909,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; `Molecule::clear()` is currently almost a no-op, because it is calling `std::vector::empty()`, which is a getter function that does not modify the object. This PR corrects that. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The `clear()` member function of `PSI_API` class `Molecule` now correctly clears `Molecule::atoms_` and `Molecule::full_atoms_`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Use `std::vector::clear()` instead of `std::vector::empty()` in `Molecule::clear()`. ## Questions; - [ ] What is the user/caller expectation for the state of `Molecule::atoms_` and `Molecule::full_atoms_` after `Molecule::clear()` returns? In `molecule.h` the comment suggests it should be ""zeroed out"": https://github.com/psi4/psi4/blob/61c0b47982ceafd92f567934a29601610fbb1520/psi4/src/psi4/libmints/molecule.h#L137-L138 But that is not what `std::vector::clear()` does, it destructs all elements, leaving the vector with a size of zero. Moreover, the elements of `Molecule::atoms_` and `Molecule::full_atoms_` are `std::shared_ptr`, so what does ""zeroing"" really mean here?. Is the comment misleading as I suspect it is, or do callers of `Molecule::clear()` really expect it to preserve the size of `Molecule::atoms_` and `Molecule::full_atoms_`?. ## Checklist; - [x] No new features; - [ ] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2864:391,release,release,391,https://psicode.org,https://github.com/psi4/psi4/pull/2864,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; `block_matrix` should not let its callers discard the arrays it allocates. This PR adds the `[[nodiscard]]` attribute.; Also, if an allocation fails, `block_matrix` now throws instead of calling `exit(1)` and tells the user how many bytes it has tried and failed to allocate. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PSI_API function `double **block_matrix(size_t n, size_t m, bool mlock = false)` now has the `[[nodiscard]]` attribute, as discarding its return value is a guaranteed memory leak (unless n or m is zero, in which case no allocation happens). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `[[nodiscard]]` attribute added to declaration and definition; - [x] `exit(PSI_RETURN_FAILURE)` replaced with `throw PSIEXCEPTION`; - [x] VScode can now parse the docstring of the function. ## Checklist; - [x] No new features; - [x] All tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3104:489,release,release,489,https://psicode.org,https://github.com/psi4/psi4/pull/3104,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; `libqt/ras_set.cc` has a lot of commented-out code in it, some of it would not even compile anymore.; `qt.h` declares a pair of functions that are never defined, but would be used in the commented-out `ras_set` code.; This PR removes this dead code. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Commented out code is removed from `libqt/ras_set.cc`; - [x] Declarations of `int* get_frzcpi()` and `int* get_frzvpi()` are removed from `qt.h`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2814:463,release,release,463,https://psicode.org,https://github.com/psi4/psi4/pull/2814,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; addresses #3099. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix libxc min to v6.1. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] fix some `assert()`. tests still pass on linux. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3103:230,release,release,230,https://psicode.org,https://github.com/psi4/psi4/pull/3103,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; closes #2939 . ## User API & Changelog headlines; - [x] fix bug where `optimize(..., engine=""geometric"", molecule=mol)` would not run; - [x] undo some hack fixes and make distributed driver runs through QCFractal ""next"" branch more reliable by making array qcvars shaped numpy arrays. Works with QCFractal >=v0.50beta10. Show examples of using `get_psi_results()` to prepare the results of distributed driver runs in ""normal"" psi4 way. ## Dev notes & details; - [x] In the early days (before ddd entered psi4), all array-like pieces of AtomicResults came back as flat lists, so we had to ""plump"" them into e.g., (nat, 3) for gradient. Then, by the time of v1.6 and QCFractal master v15.8, the AtomicResults preserved all that, so we stopped using the plumper. Now in qcfractal next, they're back to lists again _and_ qcvars have been mingled with other properties, so both separation and plumping are required.; - [x] promote `get_psi_results` as a drop-in replacement after running distributed. It sets up a dummy wfn and qcvariables, just like an internal run, so one doesn't have to deal with picking results off the AtomicResult QCSchema.; - [x] Added labels to tests (mostly findif) so that one can catch all ddd-using tests with `pytest -m ""findif and cbs and nbody""`; - [x] set up a mechanism where can parameterize both pytests and ctests with a snowflake with minimum clutter. ## Questions; - [x] This won't work with current qcf release. I'll ask @bennybp to mint a beta10, then this should work. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review (for review, the 4th commit has the material changes. 3rd are test changes. 1st & 2nd are labeling and syntax.); - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2929:1519,release,release,1519,https://psicode.org,https://github.com/psi4/psi4/pull/2929,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; closes #3016 (supersedes); closes #3084 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] For users, replaces the `psi4-dev` conda package that brought psi4 build dependencies and a ""psi4-path-adivsor.py` script that produced cmake configure lines. Now, that script is in-repo at `conda/psi4-path-advisor.py` and running the help menu provides the following. This should be more configurable for folks who like to choose all conda or byo.; ```; =========================================; (A) black-box usage (copy/paste-able); =========================================; # (1) get code from GitHub; git clone https://github.com/psi4/psi4.git && cd psi4; # (2) generate env spec file from codedeps.yaml. ""eval $(...)"" creates and activates conda env.; eval $(conda/psi4-path-advisor.py env); # (3) generate cmake cache file from conda env. ""eval $(...)"" configures and builds with cmake.; eval $(conda/psi4-path-advisor.py cmake); shows up in p4dev; =========================================; (B) flexible usage; =========================================; # (1) get code from GitHub; git clone https://github.com/psi4/psi4.git && cd psi4; # (2.0) consider dependency options; conda/psi4-path-advisor.py env -h; # (2.1) generate env spec file from codedeps.yaml.; conda/psi4-path-advisor.py env -n p4dev310 --python 3.10 --disable addons --lapack openblas; #> conda env create -n p4dev310 -f /home/psi4/env_p4dev310.yaml && conda activate p4dev310; # (2.2) edit env_p4dev310.yaml to customize software packages.; # (2.3) issue suggested or customized command to create and activate conda env.; conda env create -n p4dev310 -f /home/psi4/env_p4dev310.yaml && conda activate p4dev310; ```; - [x] For packagers or other high-level what-does-it-need folks, dependency info is programmatically available ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:255,release,release,255,https://psicode.org,https://github.com/psi4/psi4/pull/3021,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; ~Ignore this for now. This is so I can get a build snapshot.~ It might well fail tests b/c needs qcel and qcng snapshots. Full tests is clean locally. Changes for the most part are RTG except for two lines noted below. UPDATE: go ahead and review, please. I'll take out the 2 improper lines noted below before merge. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] report FD G & H more fully in core and wfn vars; - [x] add MP2 Hessian testing to stdsuite; - [x] I guess the a-ccsd(t) docs changes didn't make it into #2241 ?; - [x] some cfour interface expansions that are really only useful for internal debugging. use the regex harvesting from qcng, not here; - [x] this bit https://github.com/psi4/psi4/compare/master...loriab:sept21qcdb?expand=1#diff-3abbb4f37a59cc2e6cfbff3f4cb73b312dfd94044a19f38b00bf7ae140db13e7R540-R541 needs removing before actual merge is considered. proper way to handle would be if the select_ccsd_gradient was smart enough to say ""can't do"" to FC gradients, so it'd fall back to FD by ene. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2293:299,UPDATE,UPDATE,299,https://psicode.org,https://github.com/psi4/psi4/pull/2293,1,['UPDATE'],['UPDATE']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; ~Note: this isn't going to pass until after #2946~. ## Dev notes & details; - [x] We had the odd situation where the install directories (GNUInstallDirs) were pretty flexible. But it wasn't quite flexible enough for the usual Windows install layout (see https://github.com/psi4/psi4/blob/master/conda/win/meta.yaml#L32-L41). And if you got those all in the right place, the paths computation in `run_psi4.py` (-> `bin/psi4`) and `psi4/__init__.py` wasn't quite as flexible as GNUInstallDirs allowed. So I modernized the lot with pathlib and hopefully systemitized it a bit, too.; - [x] There's a weird case on linux c-f where we're in a git repo, but it's not the psi git repo. Thus versioning is much confused. The versioner can now escape from that case and version as if tarball. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [x] works for lin, mac, win conda-builds. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2948:197,install,install,197,https://psicode.org,https://github.com/psi4/psi4/pull/2948,2,['install'],['install']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; ~for now must enable with `-D ENABLE_IntegratorXX=ON`. recc installing catch2 first to avoid downloading each time.~. ~CI will fail because I added a integratorxx header to a file for trial, but haven't enabled the addon in the buildsys everywhere.~. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] optionally build integratorXX with `-D ENABLE_IntegratorXX=ON`. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3041:140,install,installing,140,https://psicode.org,https://github.com/psi4/psi4/pull/3041,4,"['install', 'integrat', 'release']","['installing', 'integratorXX', 'integratorxx', 'release']"
Deployability,"## Description; @andysim added the `dcft` module to Psi in 2010, as its pilot implementation. As the method was developed, @ssh2 decided that it was best to drop the `f` and name it `dct`. The abbreviation `dcft` hasn't been used in papers since 2012, and DCT papers since last year have just called the method density cumulant theory, cutting out the `f` entirely. This PR brings Psi up-to-the-present and calls the method `dct` everywhere. Now that we know what the method _is called_, this PR fixes a bug reported on the forums, where the method's density fitting basis set wasn't picked up by the input parser. This was the motivation for this massive PR, and it took one whole line of code. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Replaces `dcft` and `DCFT` with `dct` and `DCT`, throughout all C- and Py- side code; - [x] Added UpgradeHelper errors for users who try `energy('dcft')` and some such; - [x] Added PsiException errors for users who try a dcft option block; - [x] Added PsiException errors for users who try a dcft option; - [x] Updates the tests; - [x] Updates the samples; - [x] Updates the documentation (abbreviations kept when they are part of a paper title); - [x] Removed debug options which the code didn't even use anymore; - [x] Adds the one line of code needed to fix the instigating bug. ## Checklist; - [x] Every `ctest` test calling DCT is run and passes (14 dedicated DCT tests plus four additional tests); - [x] I've confirmed that you encounter the various errors when expected; - [x] I've manually checked the documentation. The only thing not working is the link to the `dct` folder, which won't exist until _after_ the PR is accepted. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1719:892,Upgrade,UpgradeHelper,892,https://psicode.org,https://github.com/psi4/psi4/pull/1719,4,"['Update', 'Upgrade']","['Updates', 'UpgradeHelper']"
Deployability,"## Description; @bennybp pointed out [here](https://github.com/psi4/erd/pull/5) that we need to be paying attention to thread safety in called libraries, even if they don't have OpenMP, because Psi4 does. This is trying to follow the guidance in [the venerable document (search `ifcoremt`)](https://software.intel.com/en-us/articles/threading-fortran-applications-for-parallel-performance-on-multi-core-systems). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Adds rtl_init and rtl_finalize calls. According to the sample code below, also supposed to set reentrancy, but I don't know what to do about that.; - [x] Drops clang-3.9 travis test that's a little slow. I'm told that clang 3.9 is the same as Mac/Distelli is running anyways.; * **User-Facing for Release Notes**. ## Questions; - [x] I don't know much about this, but it appears harmless, at least for Intel compilers. Going to let Travis test other build systems. Any thoughts?. ## Status; - [x] Ready to go. ```; /*; * Multithreaded C-Fortran mixed language test program; */. #include <stdio.h>; #include <stdlib.h>; #include <unistd.h>; #include <pthread.h>; #include <errno.h>; #include ""threadpool.h"". #include ""forreent.h"". #define NUM_THREADS 12; #define NUM_JOBS 10. /* definitions for Fortran Runtime library init/finalize */; extern void for_rtl_init_ (int *, char **);; extern int for_rtl_finish_ ( );; extern int for_set_reentrancy (int *);. /* declare the external Fortran function 'fpa' */; extern void fpa(int io, char *filename); . void job_thread(void *arg1, void *arg2);. int main(int argc, char **argv); {; threadpool tp;; int i;; int *reent ;; int fstat;. char filenames[NUM_JOBS][100];; int io[NUM_JOBS];. int io_status;; /* Call the Fortran Runtime library for initialization */; for_rtl_init_ (&argc, argv);; *reent = FOR_K_REENTRANCY_THREADED;; fstat = for_set_reentrancy( reent );; printf (""fstat %i \n"", fstat);. /* Create a thread pool of 12 thre",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/604:825,Release,Release,825,https://psicode.org,https://github.com/psi4/psi4/pull/604,1,['Release'],['Release']
Deployability,"## Description; @dgasmith and I had to do some preliminary work to get the Hessian code extended, and here's the result. Essentially, we've centralized the construction of the core Hamiltonian and its derivatives, which ensures that different codes will correctly obey any new one electron contributions (field perturbation, MM point charges, ECPs, *etc.*) and derivatives thereof. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] @psi-rking: your perturbed CC gradient request should be addressed by this fix.; - [x] Test cases for DFOCC and CCENERGY gradients, with dipole field.; * **User-Facing for Release Notes**; - [x] Improved support for ECPs and external fields, and their gradients, in correlated calculations. . ## Questions; - [x] How should we handle the new signature for mol's `nuclear_repulsion_energy()`? The current solution is to mandate that the field be specified C++-side, but py-side just provides a default zero field. Another option would be to overload with an arg-less function, and provide a deprecation warning for that version (to force the programmer to think about whether they really mean to compute the nuc. energy ignoring the field). ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/844:669,Release,Release,669,https://psicode.org,https://github.com/psi4/psi4/pull/844,1,['Release'],['Release']
Deployability,## Description; A few additional tweaks for the Psi4 1.2 release. - Updates gCP alias function testing so that basis sets are applied for aliases.; - Hides DeepDiff import so that *most* of Psi4 is usable without this module.; - Updates the JSON spec to the V1 release.; - Ensures QCSchema input is correctly *copied* and not just updated. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1030:57,release,release,57,https://psicode.org,https://github.com/psi4/psi4/pull/1030,5,"['Update', 'release', 'update']","['Updates', 'release', 'updated']"
Deployability,"## Description; A few testing bugs and completing the pytest access route. Nothing controversial. Most of this PR is autogenerated. Due diligence on review can be achieved by examining:; * `empirical_dispersion.py`; * `addons.py`; * `extern1/input.dat`; * `tester.py`; * `test_addons.py`. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] fixed bug that wouldn't allow plain pytest of installed `psi4/` b/c would bring in incorrectly configured qcdb tests. workaround was to pytest `psi4/tests/`; - [x] add a couple corrections I had promised to #2536 but had forgotten to push; - [x] fixes #2548 by passing psi4's `-n` to qcng for dftd3/gcp/mp2d; - [x] corrects `dfmp2-freq2` ctest was registered as `dfmp2-freq1`; - [x] I realized externalpotentials weren't getting unset after a energy/grad/etc. command. This is probably a new bug after #2515 but didn't confirm. It's healed in DDD, but the solution didn't port, so I added the test and temporary workaround to extern1; - [x] Added feature to ctest_runner to allow directory structure to be copied into test scratch for psithon2. This is proven to work but needs a couple lines added to qcengine, so hidden for now.; - [x] Fixed resp addon tests that always failed in parallel. these write to fixed-name files that aren't configurable, so they need to be chdir'd, if not run serially.; - [x] Added a script tester.py that checks some config stuff and writes out missing `test_input.py`. See the goals there for details. Running it produces a list of flaws like the below. I'll post this to an issue for later attention. Someday this can be hooked up to GHA and replace the perl script.; ```; Complaints; ----------; - [ ] 1. cc5: missing cmake directory registration. `vi CMakeLists.txt`; - [ ] 2. cookbook/manual-sow-reap: missing cmake directory registration. `vi cookbook/CMakeLists.txt`; - [ ] 3. cookbook/manual-sow-reap: missing CMakeLists. `vi cookbook/manual-sow-reap/CMakeLists.txt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2549:442,install,installed,442,https://psicode.org,https://github.com/psi4/psi4/pull/2549,1,['install'],['installed']
Deployability,"## Description; A friend noticed that the samples bundled with Conda are out of date and at least one (`dfmp2-grad1`) doesn't run as a result. He also had problems compiling with python 2.6, but solved them with python 2.7, which should just be the minimum supported. ## Todos; Notable points that this PR has either accomplished or will accomplish. * **Developer Interest**; - [x] Updates samples, mostly for Conda users.; - [x] Forces cmake to look for Python 2.7+.; * **User-Facing for Release Notes**; - [x] Python2.7+ is now required by cmake. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/766:382,Update,Updates,382,https://psicode.org,https://github.com/psi4/psi4/pull/766,2,"['Release', 'Update']","['Release', 'Updates']"
Deployability,"## Description; A pull request aiming to simplify the Psi4 gradients. Doing this ensures dipole perturbations and external potentials are used throughout Psi4 and not just in the SCF and MP2 codes. Also, will either provide basic infrastructure for DFT Hessians or the Hessians themselves. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Potential/Kinetic/Overlap/Perturbation gradients from MintsHelper; * **User-Facing for Release Notes**; - [ ] RKS DFT Hessians. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/839:492,Release,Release,492,https://psicode.org,https://github.com/psi4/psi4/pull/839,1,['Release'],['Release']
Deployability,"## Description; A small, simple companion to https://github.com/psi4/psi4/pull/2833. This updates to the reference output files for the tests that use CompositeJK methods (linK-1, linK-2, linK-3, and scf5), especially notable since the current reference files use `DIRECTDFJ` for composite `SCF_TYPE` methods instead of the current `DFDIRJ`. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Regenerate the reference output files for the tests linK-1, linK-2, linK-3, and scf5. ## Questions; N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [X] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2954:90,update,updates,90,https://psicode.org,https://github.com/psi4/psi4/pull/2954,1,['update'],['updates']
Deployability,"## Description; A typo in the overlap integral second derivatives caused errors in the analytic hessians. The error seems to be confined to one of the three contributions to matrix elements where the angular momentum in the bra and ket differ, and only when the derivatives both refer to the same perturbation; which is why the code made it through the initial tests. I'm still trying to wrap my head around exactly why those tests work, so I'd like a day or two before this is ready to merge. My sincere apologies to all whom this bug inconvenienced. Fixes #791 and #901. ## Todos; Notable points that this PR has either accomplished or will accomplish. * **User-Facing for Release Notes**; - [ ] Fixed a bug in the analytic Hessian code. ## Questions; - [x] Which extra tests do you have in mind, @loriab?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/903:675,Release,Release,675,https://psicode.org,https://github.com/psi4/psi4/pull/903,1,['Release'],['Release']
Deployability,"## Description; According to [clang source](http://llvm.org/svn/llvm-project/cfe/trunk/lib/Frontend/InitPreprocessor.cpp) (about half way down the page), clang always reports version 4.2.1 when using ```__GNUC__```, ```__GNUC_MINOR__```, ```__GNUC_PATCHLEVEL__```. This PR updates the version tester to use ```__clang_major__```, ```__clang_minor__```, ```__clang_patchlevel__``` when clang is detected. This issue appeared when using Intel compilers on a Mac. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/579:273,update,updates,273,https://psicode.org,https://github.com/psi4/psi4/pull/579,1,['update'],['updates']
Deployability,"## Description; Accumulated docs improvements. Update samples. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Add download/install notes for Windows; - [x] Update header and doc citation to JCTC article. Add licensing blurb.; - [x] Fix and document building plugins from conda on Mac; - [x] Make X2C input and output consistent. @fevangelista, is this what you wanted?; - [x] Fix `basisset_ = basisset_;` typo noticed by CDS; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go **Everyone**, stop review when you hit ""samples/""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/703:47,Update,Update,47,https://psicode.org,https://github.com/psi4/psi4/pull/703,4,"['Release', 'Update', 'install']","['Release', 'Update', 'install']"
Deployability,"## Description; Add HF- and PBEh-3c capabilities, now that the former have been verified from Orca and the latter through S. Grimme private communications. ## Todos; * **Developer Interest**; - [x] gcp smoke tests going to pytest PR; - [x] write a bit of docs; - [x] So this is where my compare_values improvements ran off to. Now have a toggle to fail or not and can check mismatch by val, not just by order of magnitude value.; - [x] Add `gcp` interface, but not as advanced as `dftd3` b/c not writing to a file, just takes one of the pre-def values. ; * **User-Facing for Release Notes**; - [x] Semi-semiempirical methods HF-3c and PBEh-3c of Grimme can now be accessed (with `dftd3` and `gcp` executables detectable in PATH). Access through `energy('hf3c')` and `energy('pbeh3c')`. Can run with or without preferred basis set specified (minix and def2-msvp, respectively). ## Questions; * @dgasmith, this'll need a little adaption for 1.2. ## Status; - [x] Ready to go. Not averse to a squash.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/630:338,toggle,toggle,338,https://psicode.org,https://github.com/psi4/psi4/pull/630,2,"['Release', 'toggle']","['Release', 'toggle']"
Deployability,"## Description; Add PSI_API to libmints/multipolesymmetry.h, so that it can support a version of v2rdm_casscf plugin. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1131:263,Release,Release,263,https://psicode.org,https://github.com/psi4/psi4/pull/1131,1,['Release'],['Release']
Deployability,"## Description; Add cct3 plugin. Patch liboptions. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] add build connection, proc.py connection, and token smoke test; - [x] fix embarrassing bug where enum-like string options weren't validating when set in local scope. that is, `set guess nonsense` would protest, but `set scf guess nonsense` would pass. this isn't perfect as validation occurs against a union of allowed values among different local scopes, but it's an improving patch.; - [x] @edeustua is going to rename the repo to plain `cct3`, so this'll need a name adjustment pass.; - this is connected with https://github.com/piecuch-group/psi4_cct3/pull/2; - note that cct3 builds slowly as it has some hefty fortran files. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1934:33,Patch,Patch,33,https://psicode.org,https://github.com/psi4/psi4/pull/1934,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"## Description; Added a couple of new features to cubeprop. The functionality seems to work, but the PR is rather unpolished. An illustration of me while writing this PR can be found here:. https://ih0.redbubble.net/image.511550362.9563/flat,1000x1000,075,f.u1.jpg. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Implements printing of ECP electrons, issue #1136 ; * **User-Facing for Release Notes**; - [x] Added keyword `""FRONTIER_ORBITALS""` to cubeprop tasks. This computes the alpha HOMO and LUMO (if nalpha == nbeta), or the highest-energy doubly occupied (DOMO), the singly occupied (SOMO) and the unoccupied (LUMO) orbitals of both spins.; - [x] Added keyword `""DUAL_DESCRIPTOR""` to cubeprop tasks. Computes (for closed shell systems) the dual descriptor function (ie. the difference of the Fukui functions) from the HOMO and LUMO. Some references: [10.1021/jp046577a](http://dx.doi.org/10.1021/jp046577a) and [10.1007/s10910-014-0437-7](http://dx.doi.org/10.1007/s10910-014-0437-7). ## Checklist; - [x] Add documentation of the new features to the manual.; - [X] Add tests; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1138:453,Release,Release,453,https://psicode.org,https://github.com/psi4/psi4/pull/1138,1,['Release'],['Release']
Deployability,"## Description; Added a dictionary-based method for implementing density functionals. All non-dispersion versions of original functionals are working with some exceptions, the new definition of functionals has ""TEST-"" prefix for now. Not working functionals are: HF+D and HJS-B88 which do not run, HF3C for unknown reason, B97-D which should be -D2 not -D3 corrected in master. Some dispersion corrected methods already implemented - all BLYP functionals, for example. Script used for testing attached:; [test.dat.txt](https://github.com/psi4/psi4/files/1735039/test.dat.txt). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix for Issue #920 ; - [x] Easy implementation of new functionals; - [x] LibXC parameters (ALPHA, BETA, OMEGA) now exposed to python; - [x] Check functionals against Q-Chem; - [ ] oPBE-D, oTPSS-D, oPWLYP-D ,oBLYP-D, TPSSh-D3BJ - not included in PR #880 ; - [x] B97-D; - [x] wB97X-D3 - needs tweaks - was disabled.; - [x] DSD-***; - [x] [PBE]HF3C; * **User-Facing for Release Notes**; - [ ] Eventually: let user pass a dict to psi4 with custom functionals? . ## Questions; - [ ] What do you think about the current interface?. ## Status; - [x] Dashparams for functionals need to be migrated too.; - [x] Ready to go - from my PoV at least.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922:1059,Release,Release,1059,https://psicode.org,https://github.com/psi4/psi4/pull/922,1,['Release'],['Release']
Deployability,"## Description; Address issue #2087. Specifically:. On `numpy.rst`:; 1) Updated Numpy quickstart guide link; 2) Updated Psi4Numpy Repo link; 3) Updated psi4.{Matrix, Vector, Dimension} -> psi4.core.{Matrix, Vector, Dimension}; 4) Added link to Psi4's Symmetry quick guide. On `numpy_helper.py`:; 1) Updated docstring example to `psi4.core.Matrix`. . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [ ]. ## Questions; - [ ] Section ""Array to Matrix"" and ""Matrix to Array"" print and run the docstring. For ""Matrix to Array"" the example can be run with no problem. But ""Matrix to Array"" can only be run by its own class. Should this example be updated as well? e.g. replace both examples of; https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/numpy_helper.py#L99 with:. ```; >>> data = np.random.rand(20,1); >>> vector = psi4.core.Matrix.from_array(data); ```; My concern is that the example would not be calling the function directly. What would be the best way to proceed?. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2089:72,Update,Updated,72,https://psicode.org,https://github.com/psi4/psi4/pull/2089,5,"['Update', 'update']","['Updated', 'updated']"
Deployability,"## Description; Addresses #1431 . ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Changes ORBSYM (the symmetry of each orbital) from Psi4's internal convention of ordering irreps to the traditional FCIDUMP ordering; - [x] Adds ISYM (the symmetry of the overall wavefunction); - [x] Updates the `fcidump` test to match new ordering. ## Questions; - [x] Does this change in convention break anything in Psi4? (Or anything that uses Psi4?); - [x] Since I altered the tests to match the output, how to verify correctness of this change?. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1453:332,Update,Updates,332,https://psicode.org,https://github.com/psi4/psi4/pull/1453,1,['Update'],['Updates']
Deployability,"## Description; Addresses #885 by refactoring N-Body driver to three newly independent functions, driven by the existing `nbody_gufunc()`:; - `build_nbody_compute_list()`: Builds list of all N-body computations to be performed; - `compute_nbody_components()`: Performs given N-body computation(s), could be exploited as pleasantly parallel; - `assemble_nbody_components()`: Stitches components back together into _bona fide_ N-body energies (currently standard behavior of N-body driver). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - Opportunity for ""pleasantly parallel"" N-body computations; * **User-Facing for Release Notes**; - UI to N-Body driver unchanged; - Standard N-body calls, e.g., `energy(..., bsse_type='cp')` retain current functionality via `nbody_gufunc()`. ## Questions; - [x] Docstring styleguide: For the new functions, should the docstrings be in NumPy format or should they look more like the docstring in `nbody_gufunc()` so that sphinxman can scrape them for the manual?. ## Checklist; - [x] Tests added for any new features (existing tests sufficient); - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/975:679,Release,Release,679,https://psicode.org,https://github.com/psi4/psi4/pull/975,1,['Release'],['Release']
Deployability,## Description; Addresses issue #548 by appending the process identification (PID) number to file prefixes generated with; the `get_writer_file_prefix` function. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] PID is now appended to all file prefixes generated with the `get_writer_file_prefix` function; - [x] Fixes `const` correctness in this function as well as simplifies internal guts; - [x] Now ignores all file extensions (not just `.out` and `.dat`) when determining base file name; * **User-Facing for Release Notes**; - [x] Some (all at the moment) of the generated ASCII file's names now contain the PID. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/549:578,Release,Release,578,https://psicode.org,https://github.com/psi4/psi4/pull/549,1,['Release'],['Release']
Deployability,"## Description; Adds ECP capabilities by interfacing the integrals written @robashaw. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - Def2 family of basis sets available for all atoms supported by those basis sets. Followup projects include:; - Add fully analytic when derivative integrals are available.; - Add CPHF terms and consolidate the OE derivatives from scfgrad and mp2grad.; - Try to clean up Python/C++ parsing and processing of basis sets. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/681:519,Release,Release,519,https://psicode.org,https://github.com/psi4/psi4/pull/681,1,['Release'],['Release']
Deployability,## Description; Adds NumPy to the psi4-dev environment as it is 1) required to build gau2grid and 2) required to run Psi4. We also need to install deep-diff here as well which is only available on pip/conda-forge. Should this be: `conda create -n p4dev python=x.x psi4-dev numpy deep-diff -c psi4 -c conda-forge`; ; ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/970:139,install,install,139,https://psicode.org,https://github.com/psi4/psi4/pull/970,1,['install'],['install']
Deployability,"## Description; Adds ability to call Axilrod-Teller-Muto (ATM) 3-body dispersion correction from Grimme's DFTD3. Fixes #1407 . ## Todos; - [x] Callable ATM correction from DFTD3 using `<func-name>-atmgr`; - [x] Moves all the dftd3 interface stuff out of psi and now calls qcengine MolSSI/QCEngine#46; - [x] Adds mp2d energies, also through qcengine. ## Questions; - [x] I've added QCEngine as if it were a required dependency. This is debatable, but there'll be lots of things we'll want to run this way, possibly efp/efp, geometric, pyoptking, etc. Let's debate. ## Notices; - For this month as things move quickly, I'm not copying (light py) packages over from conda-forge to psi4 channels. You'll have to `-c psi4/label/dev -c conda-forge` during `conda install` at times. (drat, there's a libxc on c-f and old qcel on psi4, which means that there's not a good channel ordering ...). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1491:757,install,install,757,https://psicode.org,https://github.com/psi4/psi4/pull/1491,1,['install'],['install']
Deployability,"## Description; Adds convergence threshold option for geometry optimization of supermolecular complexes which is slight relaxation of `g_convergence gau_tight` criteria which allows for:; - tight convergence of energy and forces, and; - relaxed convergence of `max_disp` and `rms_disp` displacement criteria. . These criteria allow for successful optimization on flat potential surfaces, especially those associated with interfragment (supermolecular) geometry optimizations. ## Todos; Adds `interfrag_gau_tight` value to `g_convergence` OPTKING convergence threshold control keyword. . * **User-Facing for Release Notes**; - Basic users can use keyword to achieve quality geometry optimizations of supermolecular complexes, without manual manipulation of individual `g_convergence` components. ## Questions; - [x] `interfrag_gau_tight` vs. `gau_tight_interfrag`? One one hand, it's a modification of `gau_tight`, but on the other hand, it has no counterpart within the Gaussian package. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/776:607,Release,Release,607,https://psicode.org,https://github.com/psi4/psi4/pull/776,1,['Release'],['Release']
Deployability,## Description; Adds diagnostic pragmas for clang to pragma.h and updates a couple of places to use them. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/774:66,update,updates,66,https://psicode.org,https://github.com/psi4/psi4/pull/774,1,['update'],['updates']
Deployability,"## Description; Adds external potentials (PCM, PE) to the CP-SCF solver. Design and majority of the work done by @maxscheurer. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] static polarizabilties with PCM + PE (no UHF in response_solver); - [x] TD-SCF excitation energies with PCM + PE (RHF/UHF); - [x] python callback function to easily add external potentials at the python level; - [x] `print 2` shows which ext. pot. is added. ## Checklist; - [x] docs update; - [x] new test: RHF static dipole polarizabilities with PCM + PE; - [x] new test: RHF TD-SCF excitation energies with PCM + PE; - [x] new test: UHF TD-SCF excitation energies with PCM + PE (regression-only); - [x] `ctest -L pcm/cppe/quick` pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006:517,update,update,517,https://psicode.org,https://github.com/psi4/psi4/pull/2006,1,['update'],['update']
Deployability,"## Description; Adds libint2 one electron integrals. A few integrals still use the hand-written code for now, but they will be addressed in subsequent PRs, as linked below.; ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Add libint2 one electron integrals.; - [x] Convert all double shell loops to use Onebody object's shell pair list instead.; - [x] Convert multipole potential ints to use L2 engines or McMurchie-Davidson recursions (#2414); - [x] Convert X2C ints to use L2 engines.; - [x] Convert AngularMomentum ints to use L2 engines. (#2414); - [x] Delete unused hand written code for recursions and integrals. (#2414); - [x] Document changes; - [x] Build Windows Libint2 Conda package. ## New Features for Release Notes; - Screening of one electron integrals to improve efficiency of PCM, EFP, and embedding methods; - Parallelized PCM integral computations, which are typically rate-limiting for implicit solvent SCF. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2388:774,Release,Release,774,https://psicode.org,https://github.com/psi4/psi4/pull/2388,1,['Release'],['Release']
Deployability,"## Description; Adds minao Br. Update CheMPS2 upstream. Remove Fort checking. Whiteli……st Cfour parallelism variable. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Remove copied-in CMake CheckFortranCompilerFlag module now that min cmake is 3.3 which always provides it. Also echo-target, which was more of a devel utility.; - [x] Fixed the suggest-near-option-match for py3.; - [x] Whitelist CFOUR_NUM_CORES envvar for Cfour, closing psi4/psi4#661, fix `psi4 -s` not handling relpaths property with Cfour.; * **User-Facing for Release Notes**; - [x] Pull CheMPS2 from upstream v1.8.3-12, now that the lapack & hdf5 cmake target have been included upstream.; - [x] From Rob, add Br to cc-pvtz-minao.gbs; - [x] Adjusted the molecule name parsing in inputparser. Now allow practically any name through the `molecule ... {...}`, then test if valid Py object name, printing error msg if not. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/672:31,Update,Update,31,https://psicode.org,https://github.com/psi4/psi4/pull/672,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,"## Description; Adds missing CPHF terms, so that DF-MP2 gradients are correct when an external potential is present. Fixes #618. ## Todos. * **Developer Interest**; - [x] Fixed DF-MP2 gradient code.; - [x] Added test case for DF-MP2 QM/MM gradients (extern2, not currently in quicktests, but runs in 12 seconds).; * **User-Facing for Release Notes**; - [x] Fixed bug so that QM/MM gradients are correct for DF-MP2. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/622:334,Release,Release,334,https://psicode.org,https://github.com/psi4/psi4/pull/622,1,['Release'],['Release']
Deployability,"## Description; Adds new density functional approximations and Grimme group composite methods. closes #2121 #1898 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] new DFA: `r2SCAN0`, `r2SCANh`, `r2SCAN50` (plus `-D4` versions); - [x] new DFA composite methods: `r2SCAN-3C`, `B97-3C` ; - [x] new basis sets for the composite methods: `def2-mTZVP`, `def2-mTZVPP`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - `B97-3c` requires `s-dftd3` and `mctc-gcp`; - `r2SCAN-3c` requires `mctc-gcp` and `dftd4 3.5.0`; - `[dispersion]['params']` functional dictionary can be incomplete. Defaults will be added automatically.; - allow parameter tweaking of pre-defined LibXC functionals.; - keep compatibility with LibXC 5 for windows; - requires `qcengine` update https://github.com/MolSSI/QCEngine/pull/393#pullrequestreview-123770667 ; - and `dftd4-python` with https://github.com/dftd4/dftd4/pull/184; - needs Libxc v6.0; - adds wb97x-3c closes #2850. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842:249,release,release,249,https://psicode.org,https://github.com/psi4/psi4/pull/2842,2,"['release', 'update']","['release', 'update']"
Deployability,## Description; Adds spin-flip SAPT to Psi4. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Adds Spin-Flip SAPT for computing all multiplet interactions between two high-spin monomers. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1027:148,Release,Release,148,https://psicode.org,https://github.com/psi4/psi4/pull/1027,1,['Release'],['Release']
Deployability,"## Description; Adds the tensors generated from the CC response code to the reference wave function, eventually to be included in the JSON output for a [QCEng](https://github.com/molssi/qcengine) run. Also patched CC-level dipoles and (static) quadrupoles in `proc.py` to be consistent with other naming conventions, allowing them to pass through `schema_wrapper.py`. This means that all (ground state, static) CC one-electron properties should follow the naming convention used on wfn. Old excited state (EOM) and dynamic property variables remain unchanged. . Updates to the schema wrapper to allow the other tensors though are coming in a separate PR. . ## Todos; - [x] Electric dipole polarizability tensor; - [x] Optical rotation (electric-dipole/magnetic-dipole) tensor; - [x] Electric dipole-quadrupole polarizability tensor (stored as three 3x3 components) (calculated through `roa.cc`); - [x] Patch CC dipole and (static) quadrupole QCVars; - [x] New pytest for all new QCVars; - [x] Update `cc46` to adhere to new ground state `psi4.core.variables()` names. ## Questions; - [x] `tests/pytests/test_qcschema.py` doesn't include any properties (yet). Are the existing returns of dipoles / quadrupoles in `schema_wrapper` tested anywhere? @loriab . ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests) `ctest -L cc` comes clean.; - [x] New pytest `test_ccresponse.py` comes clean. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2022:206,patch,patched,206,https://psicode.org,https://github.com/psi4/psi4/pull/2022,4,"['Patch', 'Update', 'patch']","['Patch', 'Update', 'Updates', 'patched']"
Deployability,"## Description; All the basis set stuff that simply had to be done for 1.1 to be at least as capable as 1.0. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fixes psi4/psi4#617; - From psi4/psi4#43, fixes; - [x] 1. `decontract` now py-side and signaled by `-decon`. This was done some time ago.; - [x] 2. `basis_rel` also now `basis_relativistic`, etc. Also some time ago; - [x] 3. user-def basis sets have names/handles and are recallable as shown in mints9 and python/mints9. docs corrected and elaborated on this point; - [x] 7. got taken out last fall, and its replacement has not been added.; - [x] 12. fixed up the basisset.rst docs; - [x] 14. covered by comments at 6; - [x] fixed mints9 and enabled symmetry detection to show through to C-side mol; - [x] assigned a rough zeta to most built-in basis sets. * **User-Facing for Release Notes**; - [x] Extends `basis <opt_name> {...}` blocks to PsiAPI via `psi4.basis_helper(name='mybas', key='DF_BASIS_JKFIT', block=""""""; assign ...; """""")`; - From psi4/psi4#43, fixes; - [x] 4. didn't try it on a `db()`, but basis blocks aren't anonymous and can be reused at will. Even `basis mybas {....}; energy('hf/mybas')`; - [x] 6. vastly improved basis printing by always printing file and line origin on each basis set load (called in the driver so no longer mass rebuilding of basissets). separated name into a name field that is the handle by which it can be recalled (that is, the BASIS* keyword value) and a composition that'll look like `aug-cc-pvdz + cc-pvdz + 6-31g`; - [x] 8. fixed. now if first-preference fitting basis not avail and orbitals basis is _known_ to be >quad-zeta, _won't_ default to def2-qz* fitting sets. ## Questions; - [ ] @WDerricotte, there was that decon example in the manual that we agreed was wrong. Can you fix that?; - [ ] PsiAPI folks: getting a lot of these ""helper"" functionals for processing input blocks: pcm_helper, basis_helper. Shall we settle o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/649:901,Release,Release,901,https://psicode.org,https://github.com/psi4/psi4/pull/649,1,['Release'],['Release']
Deployability,"## Description; All the docs links fixes that don't involve restructuring the driver imports. . ## Todos; - [x] fix qcvar collection and referencing. envvar referencing.; - [x] add mechanism for renaming, retiring qcvars; - [x] there's an extension for using typing in sphinx autodoc now, so move typing from docstrings to signature.; - [x] been partially isort-ed. these are the harmless changes.; - [x] edited a few misc. narrative docs; - [x] extensive additions to qcvar glossary so everything's defined. feel free to edit; - [x] instead of registering each pytest file, let cmake install all pytest tests by glob; - [x] added kwargs and some docstring cleanup to exports; - [x] removed broken option and added alias to run_psi4. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2164:585,install,install,585,https://psicode.org,https://github.com/psi4/psi4/pull/2164,1,['install'],['install']
Deployability,"## Description; Allow Alhrichs (`def2-`), Jensen (`pcseg-`) and custom Dunning (`cc-[...]z`) families of basis sets into CBS expansion. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `p4util.kwargs_lower()` no longer mangles floats to True or False; * **User-Facing for Release Notes**; - [x] CBS extrapolation possible with `def2-` bases; - [ ] CBS extrapolation possible with `roos-ano-` bases; - [x] CBS extrapolation possible with `pcseg-` bases; - [x] CBS extrapolation possible with custom `*-cc-pvxz-*` bases; - [x] SCF extrapolations of Truhlar and Kanton and Martin added ; - [x] custom alpha possible for `scf_xtpl_[...]_2` and `corl_xtpl_helgaker_2`; - [x] custom `corl_alpha` as well as `delta_alpha` parsing for eg. `MP2/[TQ] +D: CCSD(T)/[DT]`; - [ ] ~~handle fallbacks for light atoms in `[aug]-cc-pv[dtq]z-PP` bases using non-PP bases~~; - [x] tests for `def2-` extrapolation. ## Checklist; - [x] Tests added for any new features; - [x] All relevant tests run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/963:338,Release,Release,338,https://psicode.org,https://github.com/psi4/psi4/pull/963,1,['Release'],['Release']
Deployability,"## Description; Allow access to wfn (incl. geom) after optking errors. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; * **User-Facing for Release Notes**; - [x] If optking fails internally or through exceeding max cycles and throws a `ConvergenceError`, you can now catch it with:. ```; try:; optimize('hf'); except psi4.ConvergenceError as err:; gotcha = err.wfn; print(gotcha.molecule().nuclear_repulsion_energy()); ```. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/881:200,Release,Release,200,https://psicode.org,https://github.com/psi4/psi4/pull/881,1,['Release'],['Release']
Deployability,"## Description; Allow symmetry to be used in SCF, but then convert the symmetrized wavefunction to a desymmetrized (C1) format for use by non-symmetry-aware modules. ## Todos; * **Developer Interest**; - [x] Correct bug in D_subset_helper() and F_subset_helper() for nonsymmetric matrices; - [x] Refactor D_subset_helper() and F_subset_helper() to a generic matrix_subset_helper(); - [x] Implement Wavefunction::c1_deep_copy() function; - [ ] Update bassisset_ to be C1 inside c1_deep_copy() function; - [ ] Call the new c1 deep copy from the driver in the appropriate places. * **User-Facing for Release Notes**; - [ ] Allow symmetry to be used in SCF even when post-SCF module is C1-only. ## Questions; - [x] The wavefunction object has a bassiset_ member that needs to be updated to C1. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/737:443,Update,Update,443,https://psicode.org,https://github.com/psi4/psi4/pull/737,3,"['Release', 'Update', 'update']","['Release', 'Update', 'updated']"
Deployability,"## Description; Allow users to provide custom functionals using the new `dict_func` syntax. The following calls are now equivalent:; ```; energy(""PBE""); energy(""SCF"", dft_functional=""PBE""); energy(""SCF"", dft_functional={ ""name"": ""PBE"",; ""x_functionals"": { ""GGA_X_PBE"": {} },; ""c_functionals"": { ""GGA_C_PBE"": {} }, ; } ); ```. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `dict_builder.build_superfunctional_from_dictionary()` now builds superfunctionals from dictionaries, not strings ; * **User-Facing for Release Notes**; - [x] allow users to supply DFT functionals using the new syntax directly. ## Checklist; - [x] Tests added for any new features - modified `dft_smoke`; if that's not appropriate let me know; - [x] original part of `dft_smoke` runs fine. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/986:577,Release,Release,577,https://psicode.org,https://github.com/psi4/psi4/pull/986,1,['Release'],['Release']
Deployability,"## Description; Apparently UKS Meta-GGA's have been wrong since the LibXC patch. I have fixed this error and get quite a nice agreement across our test set. I have changed the `dft1` test to cover these cases and be a bit more specific in what we are testing. I have also started on UKS VV10; however, I am not quite confident it is correct. The VV10 energy is certainly correct, but the gradient might not be scaled correctly. This is the last chance I have to look at it for several weeks so it will need to wait. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/897:74,patch,patch,74,https://psicode.org,https://github.com/psi4/psi4/pull/897,1,['patch'],['patch']
Deployability,"## Description; As a side effect of #961, all wavefunctions had to have a density-fitted basis set when doing any energy computations, even if not density-fitted. Any scripts calling `psi4.core.Wavefunction.build` would have to manually set the DF basis to zero. `psi4.core.Wavefunction.build` now automatically sets the DF basis to zero - one less upgrade problem for users to worry about. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `psi4.core.Wavefunction.build` have zero DF basis by default. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1014:349,upgrade,upgrade,349,https://psicode.org,https://github.com/psi4/psi4/pull/1014,1,['upgrade'],['upgrade']
Deployability,## Description; As discussed CI moves to a zero-indexed scheme. ## Todos; * **Developer Interest**; - [x] Zero-indexing scheme.; - [x] Returned value for CAS was returning lowest root instead of average for SA computations. ; * **User-Facing for Release Notes**; - [x] CI Roots are now zero index (the ground state is now 0 instead of 1). ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/542:246,Release,Release,246,https://psicode.org,https://github.com/psi4/psi4/pull/542,1,['Release'],['Release']
Deployability,"## Description; As discussed, full circle — plugins are back in `tests/`. Also, removed old plugins that hadn't been maintained compilable. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] There was some dpd code deleted that possibly shouldn't fade out of memory, in case we ever want a dpd plugin again.; - [x] `ctest -L plug` works same as before.; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/640:438,Release,Release,438,https://psicode.org,https://github.com/psi4/psi4/pull/640,1,['Release'],['Release']
Deployability,"## Description; As documented in #859, an IRC performed on a tightly converged transition state would converge to the initial transition state. The obvious workaround showed non-deterministic optking steps, as documented in #860. Both bugs originate from neglecting the possibility of near-zero gradients and have been fixed. Also as documented in #860, there is still some non-deterministic behavior after the minimum has been found. As optking is going to be moved Python-side soon and this behavior is irrelevant for most users, I'll hold off from investigating that until we see if the Python-version has the problem. I have added a test case for tightly converged transition states, thanks to the oddly prescient #881. For the sake of other developers, I added a page on how to add test cases. ## Todos; Notable points that this PR has either accomplished or will accomplish. * **User-Facing for Release Notes**; - [x] Fixes a bug disabling IRCs for tightly converged transition states. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/882:901,Release,Release,901,https://psicode.org,https://github.com/psi4/psi4/pull/882,1,['Release'],['Release']
Deployability,"## Description; As it turns out I need these for an upcoming project so I started looking into them. This was quite a hurdle with @andysim rederiving the equations and worked on this in parallel. In the end a simple line fix in `eribase.cc` would have fixed this. There are quite a few simplifications that were due to desperation of trying to find the error. These can be removed, but I think this enhances the clarity of the GradDFJK code. Happy to go either way. Fixes #867 . Psi4NumPy script can be found [here](https://gist.github.com/dgasmith/999f5a100e38968457898ecb1e2c22fe). ## Todos; - [x] UKS Gradients need re-fixing. Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Enables range-seperated gradients for density fitting JK objects. ## Questions; - [x] @andysim @jturney Are the `eribase.cc` tweaks fine?. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1043:723,Release,Release,723,https://psicode.org,https://github.com/psi4/psi4/pull/1043,1,['Release'],['Release']
Deployability,"## Description; As of qcengine 0.24, the keyword `local_options` is deprecated in favor of `task_config`. This PR updates the keywords in any remaining qcng calls (looks like main call in `task_base.py` was caught in a previous PR). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Deprecated qcng keywords updated. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2755:114,update,updates,114,https://psicode.org,https://github.com/psi4/psi4/pull/2755,2,['update'],"['updated', 'updates']"
Deployability,"## Description; As part of #1005, UHF instability analysis is migrated over to use the Python Davidson solver. This adds LDA UKS instability analysis. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The keyword `SOLVER_ROOTS_PER_IRREP` has been added to allow more fine-tuned control over the roots converged during instability analysis.; - [x] Instability keywords have moved from the `CPHF` module to the `SCF` module. See the corresponding SCF subsection of the documentation for details. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] LoC reduced by nearly 2000; - [x] Several CPHF keywords have been removed or copied over to SCF.; - [x] UHF LDA stability analysis is now enabled.; - [x] SOLVER_ROOTS_PER_IRREP keyword has been added. It overrides SOLVER_N_ROOT.; - [x] If SOLVER_N_GUESS is not set, the number of guess vectors is taken from SOLVER_CONVERGENCE, per the TDSCF code.; - [x] To the handling of landing in the same instability: the check is made more precise by checking absolute value, and we remember to reset the step scaling after landing in a new instability.; - [x] The Davidson solver no longer eliminates zero and negative eigenvalues by default. ## Question; - [x] Do we need more test coverage? I haven't actually _checked_ LDA instability analysis. Imagining a test is tricky. ## Checklist; - [x] Tests should still be passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2766:284,release,release,284,https://psicode.org,https://github.com/psi4/psi4/pull/2766,1,['release'],['release']
Deployability,"## Description; As part of #1877, and the ongoing subproject to give `psimrcc` a wavefunction, the goal of this PR is to eliminate the various `allocate` and `release` calls in psimrcc so we can remove the MemoryManager global. They will be replaced with `std::vector`, smart pointers, or more direct creation of raw pointers where appropriate. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Modernizing of `psimrcc` memory management.; - [x] Speed is fine!. ## Questions; - [x] ~~Is there a better way to handle the `std::vector` replacements in `blas_diis.cc`? I'm not happy that I need to do a `reinterpret_cast`, but it's at least (marginally) better than C-style casts. Just focus on the third commit.~~ There is no better way.; ## Checklist; - [x] All psimrcc tests pass as of the last commit. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901:159,release,release,159,https://psicode.org,https://github.com/psi4/psi4/pull/1901,1,['release'],['release']
Deployability,"## Description; As the title says, plus some preparatory work for solvated response (but not yet implemented or tested). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The interface towards the pyddx library for continuum solvation is extended by support for the linearized Poisson-Boltzmann model (LPB). ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2918:254,release,release,254,https://psicode.org,https://github.com/psi4/psi4/pull/2918,1,['release'],['release']
Deployability,"## Description; As the title says. PSIO errors now give suggestions on how to fix the observed PSIO issue. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] PSIO errors now provide advice on how to rerun the calculation to fix the PSIO issue. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adjusts PSIO error printout so that advice is now given on how to rerun calculations to fix the observed PSIO issue. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3139:240,release,release,240,https://psicode.org,https://github.com/psi4/psi4/pull/3139,1,['release'],['release']
Deployability,"## Description; At long last, kill the Fork!. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Adjust LibxcFunctional for new tweakers interface. Have to pad tweakers array sometimes; - [x] ~Any fctl involving PW91 is failing. Keeps segfaulting when I uncomment that block~. ## Questions; - [ ] Need to find out from M. Oliveira if there's a released version with this interface. tagged 5.0.0; - [ ] https://gitlab.com/libxc/libxc/issues/61. ## Checklist; - [ ] ~Tests added for any new features~; - [x] Any fctl involving PW91 is failing. Keeps segfaulting when I uncomment that block; ```; 	372 - dft-custom-dhdf (Failed); 	373 - dft-custom-hybrid (Failed); 	376 - dft-bench-ionization (Failed); 	377 - dft-bench-interaction (Failed); ```; - [x] All tests pass. ## Status; - [x] Ready for review; - [ ] Ready for merge. closes #2057",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101:408,release,released,408,https://psicode.org,https://github.com/psi4/psi4/pull/1101,1,['release'],['released']
Deployability,"## Description; At the moment, psi4 + adcc 0.15.14 is passing but 0.15.16 is not. @maxscheurer suspects a bugfix in adcc that the psi4 ref data needs to be updated to reflect. Pinning this for now so other PRs don't need to be held up. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2938:156,update,updated,156,https://psicode.org,https://github.com/psi4/psi4/pull/2938,1,['update'],['updated']
Deployability,"## Description; Basic smart SCF solver. Contains a smart_solver class for easy extensibility of convergence aids. This is still WIP, just looking for feedback on my first PR!. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Adds smart_solver class that shares data with a wfn object during SCF iterations.; * **User-Facing for Release Notes**; - [ ] With SMART_SCF set to `true`, SOSCF is automatically engaged in case of trailing convergence and the initial oscillations of SAD, GWH, and CORE guesses are damped. . ## Questions; - [ ] Do we want 'macroiterations' i.e. restarting the SCF with different initial conditions to be included in this PR, or another?. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [ ] Ensure SOSCF exists for current method before turning it on. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1135:394,Release,Release,394,https://psicode.org,https://github.com/psi4/psi4/pull/1135,1,['Release'],['Release']
Deployability,"## Description; Ben Pritchard has been extensively revamping QCFractal/QCArchive. It has reached the point that the QCFractal `master` branch (latest release v0.15.8) will get no more support, and the `next` branch (no releases or conda packages) is in beta testing. This PR switches Psi4 distributed driver from `master` to `next` interfaces. It shouldn't affect many, if any. Only affects ppl running Psi4 and have `client = FractalClient(...)` in their inputs. User-side, was:; ```; from qcfractal.interface import FractalClient; client = FractalClient(""localhost:7777"", verify=False); ...; plan = gradient('scf', dertype=0, return_plan=True); plan.compute(client); ret = plan.get_results(client); ```. User-side, now:; ```; from qcportal import PortalClient; client = PortalClient(""http://localhost:7777"", verify=False); ...; plan = gradient('scf', dertype=0, return_plan=True); plan.compute(client); ret = plan.get_results(client); ```. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Updates interface for QCFractal `next`. Core snippet written by Ben.; - [x] ADDED: Also, updated to `task_config` from `local_options`. This isn't urgently needed, but it'll silence a repeated warning, at the cost of requiring latest qcng and hence latest qcel. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [x] I've tested it on GT cluster. Various calls were changed out for new ones. I'm not sure if error handling is any worse or better. ## Status; - [x] Ready for review; - [ ] Ready for merge, no particular hurry",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2645:150,release,release,150,https://psicode.org,https://github.com/psi4/psi4/pull/2645,4,"['Update', 'release', 'update']","['Updates', 'release', 'releases', 'updated']"
Deployability,## Description; Breaks off documentation and `.travis.yml` linting off of #809. I have added a `.pre-commit-config.yaml` that will check for:; - Filenames that would conflict on a case-insensitive filesystem; - Files that contain merge conflict strings.; - Python formatting with YAPF.; - C++ formatting with clang-format. Hooks are **opt-in** and require you to install [`pre-commit`](https://pre-commit.com/) (with pip or conda) and then run `pre-commit install` to integrate the actual hooks. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Document code style and how to enforce it.; - [x] Add `.pre-commit-config.yaml` and explain how to use it.; - [x] Use build stages on Travis and lint/clean up `.travis.yml` . ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1594:363,install,install,363,https://psicode.org,https://github.com/psi4/psi4/pull/1594,3,"['install', 'integrat']","['install', 'integrate']"
Deployability,"## Description; Build gau2grid as required dep. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Build gau2grid as required dep. Not doing anything yet, just building; - [x] Still needs hooking up and polishing; - [x] Mint a gau2grid version so that we are not pulling from HEAD.; - [x] Hook gau2grid MAX AM to Psi4 LibInt MAX AM.; * **User-Facing for Release Notes**. ## Questions; - [x] attn @dgasmith . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/869:418,Release,Release,418,https://psicode.org,https://github.com/psi4/psi4/pull/869,1,['Release'],['Release']
Deployability,"## Description; Bump gau2grid to v1.0 and lose `mpmath`. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] gau2grid is `v1.0` now, so pointing to that. This drops the `mpmath` requirement.; - Note that bumping the `find_package(gau2grid 1.0)` is only for appearances sake since 0.1 tag worked just fine. ; - [x] Fix pcm test links closes #967; * **User-Facing for Release Notes**. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/968:429,Release,Release,429,https://psicode.org,https://github.com/psi4/psi4/pull/968,1,['Release'],['Release']
Deployability,"## Description; Bump some dependencies. Update psi to pybind11 2.2.1. Deal accompanying visibility issues through Jet's `PSI_API` macro. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] CheMPS2 to 1.8.4; - [x] ~Libint to latest v1 head~ (RDR already covered this); - [x] Pybind11 to 2.2.1; - [x] had to add some psio unsavoriness (recomputing integrals whether present or not) since pb11-221 won't seem to give me my `None` for `nullptr`. This only affects stability analyses, and I figure they're due for an overhaul anyways.; - [x] add enough `PSI_API` to get shipped plugins to work.; * **User-Facing for Release Notes**. ## Questions; - [ ] Big question here is do we want to make the pybind jump?. * Not immediately until https://github.com/pybind/pybind11/issues/1121 is cleared up; * Likely to cause some building headaches and entanglements of 200 and 221 versions at build-time, no matter how tightly I try to instruct CMake where to find it.; * Pybind folks are [pretty adamant about symbol visibility](http://pybind11.readthedocs.io/en/stable/upgrade.html#stricter-enforcement-of-hidden-symbol-visibility-for-pybind11-modules). We do something they truly disapprove of and use pb as a plain dependency rather than their (very nice) module maker, so I think our plugins (double use of `core.so` as python module and ordinary Linux lib) should be fine, but we'll want to test Forte, @fevangelista.; * Can take a look at the [Changelog](http://pybind11.readthedocs.io/en/stable/changelog.html) for new goodies. Note that Psi4 is currently pinned at v2.0.0 (1 Jan 2017).; * When @ryanmrichard was dealing with two pybind projects (Psi4, Pulsar), he came to the conclusion that it was very important to have all pybind projects on exactly the same version. Right now we control all ecosystem projects using pybind (Psi4, Forte, PylibEFP (which needs >=2.2.0, incidentally)) so can just made decisions in consensus. That may not a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/814:40,Update,Update,40,https://psicode.org,https://github.com/psi4/psi4/pull/814,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,"## Description; CI updates. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] geometric 1.0 compatible. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] update interface to geometric for 1.0 release; - [x] closes #2749 . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2750:19,update,updates,19,https://psicode.org,https://github.com/psi4/psi4/pull/2750,4,"['release', 'update']","['release', 'update', 'updates']"
Deployability,"## Description; Ca & Ga-Kr basis set fixes. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Extend non-additivity from cc-pwCVXZ to cc-pCVXZ; * **User-Facing for Release Notes**; - [x] Repair Ca cc-pCV5Z (and 5+d) from Peterson's website (wrong on EMSL); - [x] Add Ca cc-pwCV5Z (and 5+d) from Peterson's website; - [x] Extend Ga-Kr basis and polarization for 6-31G. <img width=""1096"" alt=""screen shot 2017-08-23 at 12 08 07 am"" src=""https://user-images.githubusercontent.com/2314730/29598495-38232b30-8797-11e7-8f76-a8d5349ecd4a.png"">. ## Questions; - [x] @CDSherrill may want to examine. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/788:229,Release,Release,229,https://psicode.org,https://github.com/psi4/psi4/pull/788,1,['Release'],['Release']
Deployability,"## Description; Change the Psi4 driver from being recursive to being based on compute classes that have planning, computing and querying functions. Then, integrate the new driver with the QCArchive project for parallelizing nbody, CBS and findif. Don't panic -- 55k of the lines added are an output.ref. See #1351 for history and bite-sized extractions. What's left here is the gory core. Because code is moving around, there's no good way to review it. The plain code file is often easier to read than the diff. Below are the 6 key files.; * `driver.py` — mostly deletions. notice that the main e/g/h functions instead of having several layers when you enter and ""bounce"" to other fns now have a single plan/compute/proceed-to-analytic decision step.; * `task_planner.py` — new file. all that complexity of figuring out which of cbs/findif/nbody are active (including simple things like `energy(""mp2/cc-pvdz"")` parsing) has landed here. at least it's no longer repeated in several functions. the main goal is to take user info from where user is accustomed to supplying it (options or kwargs) and use it to initialize a tree of ""computers"" whose leaves are all AtomicComputers (analytic single-points). you can see some examples of the planner's work in `tests/pytests/test_task_planner.py`; * `task_base.py` — new file. fairly simple. how to store the pieces of a single job in a qcschema AtomicInput and how to call qcengine to run psi4 (in api, not cli, mode) to turn that into an AtomicResult. all jobs that aren't analytic single-points pass through this file.; * `driver_findif.py` — moderately modified, mostly additions. this is the least-changed wrapper. a pydantic class has been added to link the planning and assembly steps instead of a function and code that used to live in driver.py. the main idea for wrappers is that everything should be generic python except for translation from qcschema to psi4.wfn at the end (finidf does poorly in this b/c salcs call libmints). at the top of th",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:154,integrat,integrate,154,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['integrat'],['integrate']
Deployability,"## Description; Cleanup EOM CC3 code a bit. ## Todos; - [x] Catchup the code with psifiles, etc., so that EOM_DEBUG toggle can be used; - [x] Change restart behavior in EOM CC3 computations to avoid odd bug. ## Checklist; - [x] No additional tests should be needed.; - [x] Tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2085:116,toggle,toggle,116,https://psicode.org,https://github.com/psi4/psi4/pull/2085,1,['toggle'],['toggle']
Deployability,"## Description; Clearly what's wrong with 2020 is that Psi4 hasn't acknowledged it. Let's fix that and update the samples, too. Don't bother reading the changes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2059:103,update,update,103,https://psicode.org,https://github.com/psi4/psi4/pull/2059,1,['update'],['update']
Deployability,## Description; Close enough to publication for these. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] SSI & BBI databases; * **User-Facing for Release Notes**; ; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/707:211,Release,Release,211,https://psicode.org,https://github.com/psi4/psi4/pull/707,1,['Release'],['Release']
Deployability,## Description; Closes #2031 . ## Todos; - [X] Add `compute_field_over_grid_in_memory` to `oeprop.cc` and `oeprop.h`; - [X] Expose `compute_field_over_grid_in_memory` in `export_oeprop.cc`.; - [X] Update `mints14` test. ## Questions; - N / A. ## Checklist; - [X] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2032:197,Update,Update,197,https://psicode.org,https://github.com/psi4/psi4/pull/2032,1,['Update'],['Update']
Deployability,"## Description; Closes #2192 : a correctness error in threaded correlated DF gradients accidentally introduced during my refactoring. I recommend making a new release candidate sooner rather than later. Sorry, Lori. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Fix DF gradient paralellization error . ## Lessons Learned; - [ ] We could _really_ use a threaded pass of quicktests as part of the test suite; - [ ] The difficulty of compiling Psi4 can be a bottleneck in the dev process. In particular, the instructions to get Psi source-compiled on Linux don't work out of the box, and Mac clang compilers are still choking on programs that are five lines of code. ## Checklist; - [x] Threaded quicktests pass. @hokru found the only failure was the bug which this PR fixed, and the failing test cases pass now. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2193:159,release,release,159,https://psicode.org,https://github.com/psi4/psi4/pull/2193,1,['release'],['release']
Deployability,## Description; Closes #2779. (@susilehtola). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Raise an error when a user requests more roots of `detci` than there are determinants. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2780:179,release,release,179,https://psicode.org,https://github.com/psi4/psi4/pull/2780,1,['release'],['release']
Deployability,"## Description; Closes #2941. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixes a bug in parallel UKS gradients. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Also minor cleanup. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2945:163,release,release,163,https://psicode.org,https://github.com/psi4/psi4/pull/2945,1,['release'],['release']
Deployability,"## Description; Closes #941. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Fixes a bug where the incorrect number of displacements would be reported during a hessian obtained by fintie difference of energies. ## Checklist; - [ ] _Somehow_, I don't think running test cases for this one is necessary. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/987:132,Release,Release,132,https://psicode.org,https://github.com/psi4/psi4/pull/987,1,['Release'],['Release']
Deployability,"## Description; Compiler gave me warnings below, so I tried to patch 'em up.; ```; [ 8%] Building CXX object src/psi4/libmints/CMakeFiles/mints.dir/oeprop.cc.o; /home/psilocaluser/gits/hrw-release/psi4/src/psi4/libmints/oeprop.cc(1047): warning #161: unrecognized #pragma; #pragma openmp parallel for; ^. /home/psilocaluser/gits/hrw-release/psi4/src/psi4/libmints/oeprop.cc(1063): warning #823: reference is to variable ""i"" (declared at line 1048) -- under old for-init scoping rules it would have been variable ""i"" (declared at line 1057); (*output)[i] = Vtot;; ^; ```. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1217:63,patch,patch,63,https://psicode.org,https://github.com/psi4/psi4/pull/1217,3,"['patch', 'release']","['patch', 'release']"
Deployability,"## Description; Compromise version with #2645. That replaced the longstanding v0.15 qcfractal/qcportal with v0.50b ""next"" branch. This one allows either. Adds a test, via ecosystem mac testing v0.15. CI testing of ""next"" didn't work out, but it's ok locally. Also switched to mamba solver for conda since qca is long to solve for. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Additionally support the `next` branch of QCArchive with the distributed driver, as well as the longstanding v0.15.8. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. closes #2645",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2821:464,release,release,464,https://psicode.org,https://github.com/psi4/psi4/pull/2821,1,['release'],['release']
Deployability,"## Description; Conda and management docs, various fixes. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Much addition and modernizing of conda, management, versioning docs; - [x] Allows, I expect, building plugins from conda on Mac; * **User-Facing for Release Notes**; - [x] Fixes `set properties_origin [""COM""]` error noticed by @lazaroid [here](http://forum.psicode.org/t/set-properties-origin-currently-broken-for-com-or-variables-as-values/503). ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/689:322,Release,Release,322,https://psicode.org,https://github.com/psi4/psi4/pull/689,1,['Release'],['Release']
Deployability,"## Description; Consider this a hacked bare minimum. Needs work. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] They are _still_ playing about with fctls so xc_funcs.h is still changing and having to be copied over into our file. I've pinned the commit for the moment so you won't get stray ""can't find libxc fctl"" errors.; - [x] From https://gitlab.com/libxc/libxc/commit/21ee6588bb8039c3c83e5b39d01b2ee4234fe5e3 , I think they've changed over 'set_params' to 'ext_params'. Haven't figured out how to do so psi-side. Not all the set_params lived so the funcs that got dropped are now commented in LibxcFunctionals.cc; - [x] They seems to have dropped lda_set_params entirely. I saw at least one commit msg indicating it was duplicate functionality; - [x] All tests but 4 (+ scf-covereage for me) pass. Fails are of the type below. ```RuntimeError: ; Fatal Error: Matrix::power: C_DSYEV failed; Error occurred in file: /home/psilocaluser/gits/hrw-dgas/psi4/src/psi4/libmints/matrix.cc on line: 2584; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::power(double, double); psi::DIISManager::extrapolate(int, ...); psi::scf::HF::iterations(); psi::scf::HF::compute_energy(); ```. ### April 2018 updates; - [x] psi's fork of Libxc resides in a branch on GH:loriab/libxc . I'd transfer that repo to psi4/libxc except then all the present cmake pulls (to the 3.0 master in that repo) would break.; - [x] added in M05, M052X, M06, M062X, M06HF, M08SO, M08HF, M11; - [x] M11 close (0.00035 E_h) but broken; - [x] MGGA_MVSh & MGGA_MVS broken; - [x] otherwise, test suite is clean; - [x] Need https://gitlab.com/libxc/libxc/merge_requests/65 to go through and hopefully 4.0.5 tag made, then pull over to GH and re-point this PR. ## Status; - [x] Ready to go. Absolutely not",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802:1397,update,updates,1397,https://psicode.org,https://github.com/psi4/psi4/pull/802,1,['update'],['updates']
Deployability,"## Description; Continues from psi4/psi4#850 in getting sns-mp2 integrated into psi as an endorsed plugin. Also various infrastructure additions to accommodate downstream and python projects. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] First downstream project buildable during superbuild; - [x] First pure python project buildable during superbuild. That is, `setup.py`, not `addonConfig.cmake`, so opt-in/detect-from machinery a lot shakier. Have to use FindPythonModule adapted from internet, rather than sturdy `find_package()`. For where-module?, relying totally on :envvar:PYTHONPATH. Seems to be behaving sensibly, but report oddities.; - [x] Add some dev docs for how to do workflows with addons; - [x] Adapt some snsmp2 test to work with psi ctest and pytest; - [x] Fix up tests/pytest/test_numpy_views so that it runs with pytest and doesn't interfere when `memory_profiler` not installed; - [x] ~Until https://github.com/DEShawResearch/sns-mp2/pull/2 goes in, pulling from my fork~; - [x] Adds some (mildly tested) versioning capabilities to FindPythonModule; * **User-Facing for Release Notes**; - [x] Enable [sns-mp2](https://github.com/DEShawResearch/sns-mp2) to be built at build-time via `cmake -DENABLE_snsmp2=ON`. Can also detect it if you put an external snsmp2 in PYTHONPATH (but as it's an optional runtime dependency, latter's only really useful for testing); - [x] Fix nasty bug that made the number of points computed for cube file dependent on rounding error. Could show up as differences in cube files btwn compilers. Tightened down cubefile checking. ## Questions; - [x] @rmcgibbo, I'd still like to know about getting the version from the imported plugin. Also, it'd be nice to get pytest in the sns-mp2 repo working in its own right.; - [x] @shannonhouck, there'll probably be a few more docs to add, if you don't mind. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/865:64,integrat,integrated,64,https://psicode.org,https://github.com/psi4/psi4/pull/865,3,"['Release', 'install', 'integrat']","['Release', 'installed', 'integrated']"
Deployability,## Description; Corrects additional JK logic edge cases found and increases the verbosity of the error messages. At the same time we should continuously discourage users to set a `SCF_TYPE` to anything besides `DF`. `MEM_DF` and `DISK_DF` are truly expert user options and I believe have been marked as such in a variety of places. Also added a throw if someone requests dlDF+D gradients as these have never been implemented. . Fixes #1021. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1023:140,continuous,continuously,140,https://psicode.org,https://github.com/psi4/psi4/pull/1023,1,['continuous'],['continuously']
Deployability,"## Description; Current qcel not compatible with the new pydantic v2. I minted a new qcel build with the constraint, but the solver sometimes optimizes for pydantic anyways. So let's try explicit constraint. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2999:341,release,release,341,https://psicode.org,https://github.com/psi4/psi4/pull/2999,1,['release'],['release']
Deployability,"## Description; Currently, DIIS files are dumped to working directory for ambit tensors. This PR moves these temporary files to the scratch directory, which seems a better place to store these files. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; I just prepend the full path before filename. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3219:333,release,release,333,https://psicode.org,https://github.com/psi4/psi4/pull/3219,1,['release'],['release']
Deployability,"## Description; Currently, the phi_ao function returns the value of the basis functions at a point. However, this ONLY works for cartesian and not spherical basis sets. I updated the code to make this change. This is important to the development of seminumerical methods, like chain-of-spheres exchange. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Code is tested in my developmental chain-of-spheres exchange branch; - [x] Made an explicit test testing the validity of my bug fix. ## Questions; - [x] Will this impact existing functions that use the phi_ao call?. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2210:171,update,updated,171,https://psicode.org,https://github.com/psi4/psi4/pull/2210,1,['update'],['updated']
Deployability,"## Description; DCT's `cepa0` capabilities are removed. Per #1872, Psi has a problem with being consistent about what `cepa0` is. DCT has `cepa0` and is contributing to the problem. The best option is to just get rid of it. We only have it for testing purposes, but that's a Psi4Numpy task nowadays. The documentation even said don't use it for production. Besides, `cepa0`'s days as a useful point of comparison to `dct` are numbered. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Removed `cepa0` functionality from `dct` module. Use `occ`, `dfocc`, or `fnocc` instead.; - [x] Removed test checking for consistency between `fnocc` and `dct` CEPA because `dct` no longer has `CEPA`. ## Questions; - [ ] One procedural concern: At what point are we pulling the plug on getting new PRs into 1.4? I do not want keeping up with my PRs to take time that core devs should be spending moving 1.4 forward. ## Checklist; - [x] `ctest -L quick` passes; - [x] `ctest -L dct` passes; - [x] Documentation updated; - [x] Error message added. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1873:1044,update,updated,1044,https://psicode.org,https://github.com/psi4/psi4/pull/1873,1,['update'],['updated']
Deployability,"## Description; DFT-NL (=non-local) adds the VV10 correlation energy to arbitrary DFT functionals using functional specific vv10_b parameter. Conceptually similar to DFT-D. DOI: 10.1021/ct200644w. Fixes https://github.com/psi4/psi4/issues/870. * **User-Facing for Release Notes**; - [x] SCF option `DFT_VV10_B` enables and adds VV10 correlation according to DFT-NL scheme (fixed `vv10_c`, user-supplied `vv10_b`). ; - [x] `DFT_VV10_C` also gives access to the C parameter.; - [x] `NL_DISPERSION_PARAMETERS` similar to `DFT_DISPERSION_PARAMETERS`; - [x] `energy('functional-nl')` sets pre-defined vv10_b parameters for over 15 functionals. Recommended usage for most users.; - [X] `DFT_VV10_POSTSCF` enables a post-scf VV10 calculation. Large gain in speed with minimal loss of VV10 correlation energy.; - [x] added documentation. . * **Developer notes**; - [x] rebase+adjustment to PR https://github.com/psi4/psi4/pull/922; - [x] figure out DSD variant and param citations; - [x] re-integrate tests. * ** Notes**; * forcing pure HF with VV10 will seg. fault. (no integration grid). Only `energy('hf')` with `set DFT_VV10_B` is caught, not `energy('scf')` to allow custom access to the scf.; * NL parameters were entered manually, someone please check over them for strange values or typos; * tests are kept short, but we also don't test every dispersion dash parameter out there.; * for double-hybrids with multiple versions, the frozen core and/or D3BJ parent variant was chosen for a sensible consistency. . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/914:264,Release,Release,264,https://psicode.org,https://github.com/psi4/psi4/pull/914,3,"['Release', 'integrat']","['Release', 'integrate', 'integration']"
Deployability,"## Description; Default memory had been raised to 500 MiB, update documentation to match it. Add some extra information about the handling of IEC/SI units. . ## Todos; * **User-Facing for Release Notes**; - [ ] Documentation about setting memory has been updated. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/891:59,update,update,59,https://psicode.org,https://github.com/psi4/psi4/pull/891,3,"['Release', 'update']","['Release', 'update', 'updated']"
Deployability,"## Description; Defines couple new XC functionals in the driver and adds few D3BJ parameters. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Double-Hybrids: B2GPPLYP, PWPB95, PTPSS, DSD-BLYP; - [x] hybrid-GGAs: PW6B95; - [x] mega-GGAs: TPSS, revTPSS; - [x] GGAs: mPWPW; - [x] tests; - [x] adding of some reference outputs; - [x] clean-up ; - [x] praying libxc 4.0 switch does not break the tweaking options. * **Developer notes/issues**; - [x] tests put into dft-custom-gga/mgga/hybrid/dhdf; supersedes a number of older tests (removed only from CMakeLists.txt):; -`dft-dsd + dft-pbe0-2 `moved into `dft-custom-dhdf`; -`dft-dldf` moved into `dft-custom-mgga`; - [x] new tests for mgga_ms0/1/2 based on libxc test data.; - incomplete dft-custom-hybrid test: missing wpbe, wpbe0, b5050lyp. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/877:197,Release,Release,197,https://psicode.org,https://github.com/psi4/psi4/pull/877,1,['Release'],['Release']
Deployability,"## Description; Ditch `QCAspect` in favor of its code descendant, `qcel.Datum`. Because vib involves strings and complex numbers, need qcel `v0.4.1` (not released at time of posting). ## Checklist; - [ ] ~Tests added for any new features~; - [x] full tests run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1654:154,release,released,154,https://psicode.org,https://github.com/psi4/psi4/pull/1654,1,['release'],['released']
Deployability,## Description; Documentation update for the new dft logic. ## Todos; - [x] Ensure currently existing docs are updated with the new dft logic; - [x] Include new examples on functional customization. Waiting on #799 to be merged to test new examples for the docs. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/805:30,update,update,30,https://psicode.org,https://github.com/psi4/psi4/pull/805,2,['update'],"['update', 'updated']"
Deployability,"## Description; During the 'inversion' we accumulated some duplicate machinery for handling basis sets in the C++ and Python sections of the code; this PR aims to streamline the process. My goal is to keep the flexible Python parser, have it create a Python ShellInfo object, and use that to pass fixed-format information into the C++ basis set construction routines. The superfluous code in the Python and C++ layers should then be nuked. I also want to clean up the horrible mess I made when implementing ECPs. Very much a work in progress with feedback welcomed, especially from @loriab, @jturney and @rmcgibbo. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Pass pre-formatted data structure to C++ basis set constructor.; - [x] Get rid of unused `center` info from ShellInfo and GShell.; - [x] Remove unneeded code:-; - [x] C++ basis set parser.; - [x] Python GaussianShell.; - [x] C++ ShellInfo.; - [x] Tolerate integers where floats are expected in basis set input.; - [x] Fold ECPs into BasisSet objects.; * **User-Facing for Release Notes**; - [x] Fixed bug that prevented integers in basis set exponents/coefficients from being handled correctly, and another that truncated them to 8 digits after the decimal. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/734:1102,Release,Release,1102,https://psicode.org,https://github.com/psi4/psi4/pull/734,1,['Release'],['Release']
Deployability,"## Description; During the L2 upgrade, I missed the function that handles diffuse external multipoles. In constructing a test case to avoid a repeat, I found some normalization problems (and a lack of gradients) which will be addressed in a followup PR. H/T to @g-andres and his group for pointing the problem out. ## Todos; - [ ] Fixes energies with external diffuse potentials. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2068:30,upgrade,upgrade,30,https://psicode.org,https://github.com/psi4/psi4/pull/2068,1,['upgrade'],['upgrade']
Deployability,"## Description; ECP basissets, counter, AM lookup. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fixed some `****` around ECP that weren't situated so as to satisfy our picky parser; - [x] Fixed unititialized ECP printing counter variable noticed by @fevangelista ; - [x] Extended dict looking up ECP AM noticed by @fevangelista ; * **User-Facing for Release Notes**; - [x] Add `ao_efp_multipole_potential` and `electric_field` integrals to mintshelper. ## Questions; - [ ] Should we suppress [this printing](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/ecpint.cc#L500)? or redirect to outfile?; - [ ] Should consider origin question with mintshelper. Some ints use the PROPERTIES option to set origin. Just added ints take origin as an arg. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/790:420,Release,Release,420,https://psicode.org,https://github.com/psi4/psi4/pull/790,1,['Release'],['Release']
Deployability,"## Description; Empty wiki and revise build docs for CMR-KTB-INV. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] all the user part of the Wiki migrated; - [x] `.lgtm` discontinued; * **User-Facing for Release Notes**; - [x] since Summer 2016, the default installation has actually been to `/usr/local/`. Now back to `/usr/local/psi4` as traditional. Naturally, you can choose your own install loc via `-DCMAKE_INSTALL_PREFIX=/path/to/install/dir`. ## Status; - [x] Ready to go. ~~This is very much a WIP, but I don't want it an invisible WIP.~~. Unpolished, but better than the Wiki, and better than nothing, so I'm calling it ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/539:269,Release,Release,269,https://psicode.org,https://github.com/psi4/psi4/pull/539,4,"['Release', 'install']","['Release', 'install', 'installation']"
Deployability,"## Description; Enable mp2-d gradients (for dfmp2 only). ## Todos; - [x] interface and test mp2-d findif and analytic gradient code, calling QCEngine and a different version of the `mp2d` executable (was v0.1, now v1.1); - [x] `dashparam.py` moved in QCEngine https://github.com/MolSSI/QCEngine/pull/85 so changes needed to be made here, too; - [x] set disp qcvars on wfn, not core; - [x] separate processing of `_disp_functor` so it can work better with mp2.; - note that mp2d energies follow the ""dft"" pattern in `proc.py`, while gradients follow the ""mp2"" pattern. This is awkward but simplest until dft double-hybrid gradients pave the way.; - [ ] none of this is going to work until aforementioned PR is merged and qcng `v0.7.0` released. ## Checklist; - [x] Tests added for any new features; - [x] full tests is clean locally, except for `dft-pruning`. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1661:734,release,released,734,https://psicode.org,https://github.com/psi4/psi4/pull/1661,1,['release'],['released']
Deployability,"## Description; Enables dispersion corrected F-/ISAPT with optimal damping parameters, calling QCEngine for pairwise DFTD3 analysis. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Toggle empirical/exact dispersion in F-/ISAPT, call relevant damping functions; - [x] Parses pairwise atomic D3 interactions from QCEngine & DFTD3; - [ ] Functional group partitioning of D3 pairwise interactions. ## Questions; - [ ] Current test ""fails"" with 1.e-5 Eh difference between direct D3 IE and supramolecular D3 IE. Likely due to precision of pairwise atomic contact energies from DFTD3, which may be addressed in subsequent PRs to QCEngine. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1753:231,Toggle,Toggle,231,https://psicode.org,https://github.com/psi4/psi4/pull/1753,1,['Toggle'],['Toggle']
Deployability,"## Description; Enables plugin gpu_dfcc as external plugin compiled with psi4. ## Todos; * **User-Facing for Release Notes**; - [x] enables GPU-accelerated DF-CCSD. ## Checklist; - [x] tests comparing energies from DF-CCSD and GPU DF-CCSD -- present in psithon and psiapi; - [x] check for NVIDIA compilers and skip compilation if they are missing -- no need since user's `ENABLE_gpu_dfcc=ON` means build-or-die-trying; - [x] For `ENABLE_gpu_dfcc=ON` and built, on a sys w/o GPUs, cmake tests will fail, pytest test will skip. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/997:109,Release,Release,109,https://psicode.org,https://github.com/psi4/psi4/pull/997,1,['Release'],['Release']
Deployability,## Description; Ensures that JSON provenance data is always written and updates its memory setter to the new type. Removes EP2 pragma's that shouldn't exists and has caused problems. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/835:72,update,updates,72,https://psicode.org,https://github.com/psi4/psi4/pull/835,1,['update'],['updates']
Deployability,"## Description; Exports intermediate energies computed within N-Body driver to psivars named `N-BODY {cluster-identity} TOTAL ENERGY` for workflow incorporation and sanity-checking. Convention for `cluster-identity`: `(monomer_tuple)@(basis_tuple)` enumerates the particular monomers involved in the cluster computation in `monomer_tuple`, and enumerates the basis set used within the cluster computation in `basis_tuple`. In this way, ghost monomers are easily identified as any fragment with basis functions (included in `basis_tuple` not present in `monomer_tuple`. For example,; ```; ""N-BODY (1, 2)@(1, 2, 3) TOTAL ENERGY"" => -529.655058639489; ```; indicates that the total energy for the fragment (1, 2) in basis set (1, 2, 3) is -529.66 [Eh]. . ## Todos; - [x] Variable documentation (pending notation consensus, see questions below). Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Psivar export of intermediate energies in N-Body for workflow integration. ## Questions; - [ ] Is the cluster identification syntax described above suitably intuitive? Should the `@` symbol be replaced with another, perhaps `:`, to remove potential confusion with ghost atoms notation in the molecule block?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/952:935,Release,Release,935,https://psicode.org,https://github.com/psi4/psi4/pull/952,2,"['Release', 'integrat']","['Release', 'integration']"
Deployability,"## Description; Exports symbols for my tutorial plugins, some private plugins, and gpu_dfcc. * **User-Facing for Release Notes**; - [x] GPU-DFCC plugin (https://github.com/edeprince3/gpu_dfcc) will compile and run. ## Checklist; - [x] quicktests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/992:113,Release,Release,113,https://psicode.org,https://github.com/psi4/psi4/pull/992,1,['Release'],['Release']
Deployability,"## Description; FINDIF's geometry generator is brought Py-Side, per [#884](https://github.com/psi4/psi4/issues/884). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Geometry generators are now unified, so we don't need to edit all three generators when one is bugged.; - [x] Various PyBinding has been done. Among other things, the new Py-side compute_atom_map function from pyvib2 now works with psi4 molecules.; - [x] Fixes a bug in the `CharacterTable` copy constructor member initialization list, which used to require a string to be an integer.; - [x] Getting geometries for finite difference calculations is now Py-side.; - [x] Computing gradients from energies is now Py-side.; - [x] Computing hessians from gradients is now Py-side.; - [ ] Computing hessians from energies _will be_ Py-side.; - [ ] Add the banner.; - [ ] Finish renaming the finite difference functions.; - [ ] Review the findif test suite and add any tests as needed. In particular, make sure the functions are agnostic as to psi4 vs. qcdb molecules.; - [ ] Run the entire test suite, to make sure my PyBind'ing hasn't caused any deep problems.; * **User-Facing for Release Notes**; - [x] A warning now displays if you attempt to access-by-index or iterate over an irreped object, instead of using a NumPy accessor. ## Questions; - [ ] I had to change the internals of SymmetryOperation to make PyBind happy. I trust there are no objections?. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1010:1209,Release,Release,1209,https://psicode.org,https://github.com/psi4/psi4/pull/1010,1,['Release'],['Release']
Deployability,## Description; Fedora switched to the use of [FlexiBLAS](https://www.mpi-magdeburg.mpg.de/projects/flexiblas) in Fedora 33 as a unified interface to various BLAS/LAPACK implementations. This PR ports the patch by Björn Esser from Fedora to Psi4 per Fedora's guidelines of contributing any patches back upstream. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2246:205,patch,patch,205,https://psicode.org,https://github.com/psi4/psi4/pull/2246,2,['patch'],"['patch', 'patches']"
Deployability,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3163:530,release,release,530,https://psicode.org,https://github.com/psi4/psi4/pull/3163,1,['release'],['release']
Deployability,"## Description; Fixes #1290 by wrapping calls to deprecated (and removed in Netlib's LAPACK 3.8.0) with appropriate replacements. **UPDATE**; I have added a `PSI_DEPRECATED` macro in `pragma.h` to be used to deprecate functions, classes, variables. It will emit a warning at compile-time. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Added a `PSI_DEPRECATED` macro; - [x] Wrap call to `DGEGS` with `DGGES`. Deprecate `C_DGEGS`.; - [x] Wrap call to `DTZRQF` with `DTZRZF`. Deprecate `C_DTZRQF`.; - [x] Wrap call to `DGEGV` with `DGGEV`. Deprecate `C_DGEGV`; - [x] Wrap call to `DGELSX` with `DGELSY`. Deprecate `C_DGELSX`; - [x] Wrap call to `DGEQPF` with `DGEQP3`. Deprecate `C_DGEQPF`; - [x] Check whether `DGGSVD3` and `DGGSVP3` are available in `tgt::lapack`. Fence off their use accordingly based on the `LAPACK_HAS_DGGSVD3` and `LAPACK_HAS_DGGSVP3` preprocessor variables, respectively. ; - [x] Wrap call to `DGGSVD` with `DGGSVD3`, if the latter is available. Deprecate `C_DGGSVD`.; - [x] Wrap call to `DGGSVP` with `DGGSVP3`, if the latter is available. Deprecate `C_DGGSVP`. ## Checklist; None of these subroutines were used in Psi4, so I only ran smoketests locally.; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1314:132,UPDATE,UPDATE,132,https://psicode.org,https://github.com/psi4/psi4/pull/1314,1,['UPDATE'],['UPDATE']
Deployability,## Description; Fixes #655 and some other possibly nasty issues that come from; - Psithon->Python replacements being executed on literal strings; - Truncation of lines with literal python strings that contain a hash character (`#`). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Improved handling of literal strings inside `inputparser.py` to avoid regex replacements being attempted inside Python literals.; * **User-Facing for Release Notes**; - None. ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/658:498,Release,Release,498,https://psicode.org,https://github.com/psi4/psi4/pull/658,1,['Release'],['Release']
Deployability,"## Description; Fixes #994 and #1038. FT97 does not want to converge, so I gave it a handicap. And with that, all the tests that run in a reasonable amount of time pass on a release build. ## Checklist; - [x] [All full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1378:174,release,release,174,https://psicode.org,https://github.com/psi4/psi4/pull/1378,1,['release'],['release']
Deployability,"## Description; Fixes a [build](http://forum.psicode.org/t/crc32-undefined-symbol-at-runtime-when-built-with-pcmsolver-gcc-4-9-4/449/10) and an [execution](http://forum.psicode.org/t/pcmsolver-inp-file-not-found-bug/438/7) issue with PCMSolver. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix build issue with Zlib. Thanks @loriab for the pull request on the PCMSolver repo.; * **User-Facing for Release Notes**; - [x] The scratch directory is now unique-ified using UUID. The PCM input parsing step happens in scratch, preventing overwriting of `pcmsolver.inp` and/or `@pcmsolver.inp` files. ## Questions; - [x] The `cavity.off`, `cavity.npz` and `PEDRA.OUT` files are **not** copied back to the execution directory. Is there functinality already in place to salvage them after successful execution?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665:467,Release,Release,467,https://psicode.org,https://github.com/psi4/psi4/pull/665,1,['Release'],['Release']
Deployability,## Description; Fixes bug reported [here](http://forum.psicode.org/t/fixed-dihedral-optimization-error/323). I was sloppy and apparently no one had tried a 0 degree fixed angle before. * **User-Facing for Release Notes**; - [ ] Fixes bug preventing fixed (target) values of exactly zero. ## Status; Passed HOOH at 0 degrees. Still need to run other psi standard tests. ; - [ ],MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/535:205,Release,Release,205,https://psicode.org,https://github.com/psi4/psi4/pull/535,1,['Release'],['Release']
Deployability,## Description; Fixes issue #3085 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `oeprop()` args are no longer case-sensitive (py-side). ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3086:169,release,release,169,https://psicode.org,https://github.com/psi4/psi4/pull/3086,1,['release'],['release']
Deployability,## Description; Fixes several OMP atomic updates likely causing #1366. Also:; - Switches from MiB to GiB memory user printing to match other areas.; - Switches internal copy loop to DCOPY for better vectorization. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1387:41,update,updates,41,https://psicode.org,https://github.com/psi4/psi4/pull/1387,1,['update'],['updates']
Deployability,## Description; Fixes the DKH interface in Psi4. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [X] Test case added comparing to a Molpro calculation. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/702:152,Release,Release,152,https://psicode.org,https://github.com/psi4/psi4/pull/702,1,['Release'],['Release']
Deployability,"## Description; Fixes the DLPNO docs (PR #2093). I can now build the docs locally, ~~although I still get the following warnings:~~; ```; /theoryfs2/ds/glick/gits/psi4/objdir/doc/sphinxman/source/dlpnomp2.rst:90: WARNING: Undefined substitution referenced: ""dlpno__pno_convergence"".; /theoryfs2/ds/glick/gits/psi4/objdir/doc/sphinxman/source/dlpnomp2.rst:207: WARNING: Undefined substitution referenced: ""dlpno__pno_convergence"".; ```; Update: Warnings are fixed thanks to a suggestion from Lori. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2313:436,Update,Update,436,https://psicode.org,https://github.com/psi4/psi4/pull/2313,1,['Update'],['Update']
Deployability,"## Description; For large systems it's often sensible to freeze HF orbitals, rather than dumping a very large FCIDUMP file, only to be slowly read in again and frozen in the downstream program. However, I noticed that the `fcidump` functionality isn't handling the frozen keywords in the expected way (the MO slice goes from `frzcpi` to `active_mopi`, when it should obviously go to `frzcpi+active_mopi`). I've also added a test in `tests/fcidump/input.dat` to check this. The added test would fail on the current master. Additionally, for some reason the patch in #2277 stopped working, and in the current master, the 1/0 e integrals are again 1 space wider than the 2e integrals. This patch also fixes it. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2545:556,patch,patch,556,https://psicode.org,https://github.com/psi4/psi4/pull/2545,2,['patch'],['patch']
Deployability,"## Description; For reasons described at https://github.com/PCMSolver/pcmsolver/issues/201, Psi4 has been fixed at PCMSolver v1.2.1 . This updates to v1.2.x with very small (e.g., 1e-8) tweaks to ref values. I do finally understand why v1.3.x was failing, but those are much larger changes to ref values (e.g., 1e-2; probably washes out in relative energies), so I'd like @robertodr to weigh in. UPDATE: The plan is to go with v1.2 for now and wait on v1.3. The conda package is RTG at 1.2 but isn't merged yet. A later rebuild of the 1.8 conda package could include pcmsolver support. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Update PCMSolver to v1.2.3 ~or v1.3.x~. ## Dev notes & details; - [x] add pcmsolver citation printing to psi4 output file; - [ ] build c-f package https://github.com/conda-forge/staged-recipes/pull/22286; - [x] update ecosys GHA to test pcmsolver; - [x] this runs fine locally, and I'm confident in it, so marking ready for review. it'll take a while for CI to catch up to that optimism. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2903:139,update,updates,139,https://psicode.org,https://github.com/psi4/psi4/pull/2903,5,"['UPDATE', 'Update', 'release', 'update']","['UPDATE', 'Update', 'release', 'update', 'updates']"
Deployability,"## Description; For some applications it may be helpful to know the converged populations and widths of all shells in MBIS, so here goes the patch. As for the initial values, the info is only printed when debug>=1. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [x] Print converged MBIS shell populations and widths when debug>=1. ## Checklist; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3102:141,patch,patch,141,https://psicode.org,https://github.com/psi4/psi4/pull/3102,1,['patch'],['patch']
Deployability,"## Description; Frozen Natural Orbitals were implemented for DF-CCSD and DF-CCSD(T) energies. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] FNOs are implemented for MP2.5, MP3, LCCD, CCD, CCSD, CCSD(T), and CCSD(AT).; - [] Both DF and CD options are available (only for RHF ref for now).; - [] The required changes were made in proc.py and proc_table.py. ; - [] Relevant doc files are revised.; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/824:484,Release,Release,484,https://psicode.org,https://github.com/psi4/psi4/pull/824,1,['Release'],['Release']
Deployability,"## Description; Get Ambit back. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] This includes some changes I salvaged from the old clean-python branch.; - [x] Ambit builds with `ENABLE_ambit` as directed from the `external/upstream/ambit/CM`.; - [x] Ambit _does not_ link into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", li",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:692,patch,patch,692,https://psicode.org,https://github.com/psi4/psi4/pull/593,1,['patch'],['patch']
Deployability,"## Description; Get Psi4 to a tagged version on pybind11 that's likely to be deployed. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Seeks only >=2.0.0 pybind11. This has the cmake export stuff we need. Note that the current release 2.0.1 has material changes only for Windows.; - [x] @dgasmith note that I had to add the buffer_protocol flag to your CIVector for runtime functioning. This was part of py11's pypy push. [Details here](https://github.com/pybind/pybind11/commit/1d1f81b278d956445287b3c491125caa11b925bd) if you want to review. I'm a little surprised that neither more nor less was required in the way of changes.; - [x] `cbs-xtpl-func` broken, but not by this PR.; * **User-Facing for Release Notes**; - [x] Uses stable 2.0 pybind11 release. ## FYI; - @ryanmrichard and @bennybp, shall we agree upon 2.0.0 as our next set point? Not much code adaptation required. Note `pybind11::pybind11` --> `pybind11::module`. There's a one-word patch I'll forward to the pb11 people, but I don't think it'll interfere with you (leftover `::pybind11` in pybind11Config.cmake). ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/557:77,deploy,deployed,77,https://psicode.org,https://github.com/psi4/psi4/pull/557,5,"['Release', 'deploy', 'patch', 'release']","['Release', 'deployed', 'patch', 'release']"
Deployability,"## Description; Gets back to full testsuite passing, fix cmake fix, better random directory labeling. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Changed all the subdirs uniqued by `random` for cfour, dftd3, gcp, basis blocks into `uuid`.; - [x] `MintsHelper::so_potential` was returning C1 matrices w/o applying perturbations, probably an oversight in psi4/psi4#635. Fixed test pcmsolver/dipole, which this had broken.; - [x] Too small memory for dftd3/version so fixed.; - [x] MRCC distributes a GENBAS with insufficient basissets that was getting picked up before psi4's GENBAS. So select psi4's GENBAS specifically.; - [x] The problem addressed by psi4/psi4#652 broke some of the underlying code, letting, for example, `/usr/lib64` into rpath, which is not the purpose of rpath. @susilehtola, please check that the current patch fixes your original psi4/psi4#648; - [x] The 180.npz wan't working for relative execution _e.g._, `(objdir >>>) stage/.../bin/psi4 ../tests/tu1.../input.dat` so fixed. Also moved orb rotation test case to cookbook dir.; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/654:898,patch,patch,898,https://psicode.org,https://github.com/psi4/psi4/pull/654,2,"['Release', 'patch']","['Release', 'patch']"
Deployability,"## Description; Here's another JK mini-PR. This one seems to be of interest in multiple future JK-related developments (such as https://github.com/psi4/psi4/pull/3158), so I figured it would be good to add it on its own. This PR changes the behavior of `CompositeJK::name()` so that, instead of returning the value ""CompositeJK"", it returns the names of the underlying `SplitJK` algorithms used. Additionally, using this feature, a new test has been added to `test_compositejk.py`, testing to make sure that proper composite algorithm pairs are called, given an input `SCF_TYPE=J_ALGO + K_ALGO`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Improves behavior of the `CompositeJK::name()` function. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] `CompositeJK::name()` now returns the combined names of the substituent `SplitJK` components rather than ""CompositeJK"".; - [X] Adds new test to ensure proper calling of CompositeJK algorithm pairs. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3182:729,release,release,729,https://psicode.org,https://github.com/psi4/psi4/pull/3182,1,['release'],['release']
Deployability,"## Description; Honestly, this started as just updating pybind11 to detect via config. It got out of hand, but to good results. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `exception.message` --> `str(exception)` since former sometimes raises an error in the course of handling another.; - [x] fix python/json testing when PYMOD_INSTALL_LIBDIR is non-default.; - [x] export psi4::core target. use it in plugin. much simplify the psi4Config. tidy up the share installs.; - [x] flatten install dir structure. no more `external/`; - [x] shift importing of official plugins. rename psi4 --plugin* options. add cmake -C line. update CM templates.; - [x] switch over Py detection to PythonLibsNew. Beautify components printing. ; - [x] Move threads detection to target.; - [x] start testing the plugin templates again; - [x] standardize `Psi4Macros` --> `psi4OptionsTools`.; - [x] Correct CXX comp names in autocmake_static_lib (@robertodr, I copied this from you, so you may have it wrong, too). Check enabled langs properly rather than compilers defined so OptionsTools usable to other projects with diff enabled langs.; - [x] switch pybind11 to upstream source. better handle c++ std wrt pybind. `PSI4_CXX_STANDARD` --> `psi4_CXX_STANDARD`.; - [x] compile test of gcc version able to account for -gcc-name/-gxx-name (@bennybp, here's the code for what we talked about once in `custom_cxxstandard.cmake`); - [x] convert restrict test to write its own file.; - [x] kill off LAB and @jturney config files. replace with `cmake -C psi4PluginCache.cmake` suited config file.; - [x] `psi4pasture` --> `pasture`.; - [x] always whole-archive dpd and qt; - [x] `external` --> `external/upstream`, `internals` --> ``external/downstream`; - [x] remove old Find*cmake files. * **User-Facing for Release Notes**; - [x] We changed our python detection module to the one used by NumPy. Also changed so that not actually using libpython anywhere.; - ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/554:530,install,installs,530,https://psicode.org,https://github.com/psi4/psi4/pull/554,3,"['install', 'update']","['install', 'installs', 'update']"
Deployability,"## Description; I didn't know https://github.com/lothian/test-psi4-map existed, so possibly others don't either. Now that we have codemeta.json for this sort of info, let's consolidate there. Added latitude and longitude fields. Also updated Alex Sokolov and Peter Kraus locations. ## Status; - [x] Ready for review; - [x] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1305:234,update,updated,234,https://psicode.org,https://github.com/psi4/psi4/pull/1305,1,['update'],['updated']
Deployability,"## Description; I don't think its too much of an exaggeration to say that only psinet and I build the psi4 documentation. Since other projects package their documentation helpers, we, too, can spin off the derived psi4 sphinx theme (now at psi4/sphinx_psi_theme) and evict a lot of code from the repo and automatically take advantage of updates to our dependencies, rather than every two years when I get to a docs overhaul. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Removes all sphinx themes and autoapi helpers from repo; - [x] To fully build the docs, follow the prompt to `conda install sphinx-psi-theme cloud_sptheme astropy-helpers graphviz python-graphviz -c conda-forge -c astropy -c psi4`; - [x] To use the psi4 theme (or do variants, e.g. http://psicode.org/pylibefpmanual/master/index.html) or autoapi setup in another project, just copy and modify the `doc/CMakeLists.txt` and `doc/source/conf.py.in`; * **User-Facing for Release Notes**; - [x] Incidentally, psi4/psi4#792 now fixed. Needed to have dot/graphviz installed at build time. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/801:337,update,updates,337,https://psicode.org,https://github.com/psi4/psi4/pull/801,4,"['Release', 'install', 'update']","['Release', 'install', 'installed', 'updates']"
Deployability,"## Description; I hate to add 7MB to the repo, but we really ought to have complete/new output.ref's, so here 'tis. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fresh output.ref for tests; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/705:279,Release,Release,279,https://psicode.org,https://github.com/psi4/psi4/pull/705,1,['Release'],['Release']
Deployability,"## Description; I have added a Python function `fcidump` that lets the user save the one- and two-electron integrals to a plain-text file in [FCIDUMP format](http://www.sciencedirect.com/science/article/pii/0010465589900337); This is largely modeled on the [fcidump plugin](https://github.com/hande-qmc/fcidump) by @jsspencer It lets the user decide whether to save additional, non-standard information to the file like orbital energies ~and other one-electron integrals: dipole, quadrupole, etc. (not yet implemented!)~; **I'll implement printing out of the property integrals in a follow-up PR**. ### Some details; The integral transformation is done C-side. Once the OEI and TEI have been transformed, the print to file is done part C-side (TEIs) and part Py-side (OEIs). Not really elegant, I think, but gets the job done. @ashutoshvt might be interesting to get the T-amplitudes in the CC codes printed to file. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Exposed Python bindings for `MOSpace` and `IntegralTransform` classes in `export_trans.cc`; - [x] Exposed Python bindings for `Slice` class in `export_mints.cc`; - [x] Exposed Python bindings for some additional member functions in the `Matrix` class; * **User-Facing for Release Notes**; - [x] Added a `fcidump` Python function.; ~- [ ] Make it possible to print property integrals to file.~. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872:1304,Release,Release,1304,https://psicode.org,https://github.com/psi4/psi4/pull/872,1,['Release'],['Release']
Deployability,"## Description; I hit a system that was raising [putenv and setenv not avail](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L136). Rather than solve it, decided (with support) to clean environment variables out of `P::e`. Only active uses were PSI_SCRATCH and PSIDATADIR. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Replaced all the PSI_SCRATCH with calls directly to psio.get_default_path(). Also cleared that fn out so it truly defaults to `/tmp/`, not TMP, TEMP, TMPDIR, then /tmp/.; - [x] Once all the parsing's py-side might be able to drop PSIDATADIR entirely. But for now, moved it to its own slot as `P::e.[gs]et_datadir()`; - [x] Can't tell if you're dealing with Clang or AppleClang by `#defines`, so lowered cxxstandard cutoff to permit Intel + !AppleClang to pass.; - [x] `FindOpenMP.cmake` attaches a lib to try_run that isn't needed just to extract versions. Shift OMP detection so cxxstandard doesn't complain about unfindable lib; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/826:1070,Release,Release,1070,https://psicode.org,https://github.com/psi4/psi4/pull/826,1,['Release'],['Release']
Deployability,"## Description; I recently discovered a bug where CBS finite-difference Hessians will crash on systems with zero dipole moment. This is due to `CompositeComputer` not loading a dipole with entries all exactly zero into qcvars. This fix checks that CBS results are not None rather than have any non-zero entries before loading into qcvars. I have verified that this fixes the crash and that e.g. non-existing Hessians are stiil not loaded into result qcvars. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixed a bug causing CBS extrapolated finite-difference Hessians to crash on systems with zero dipole moment. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `CompositeComputer` loads variables with zero'd entries in qcvars.; - [x] `FiniteDifferenceComputer` checks for dipoles when doing finite-difference by gradients. ## Checklist; - [x] cbs tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2759:591,release,release,591,https://psicode.org,https://github.com/psi4/psi4/pull/2759,1,['release'],['release']
Deployability,## Description; I think I owe everyone an update on the docs to answer the question: Which algorithm/implementation is used for which kind of one-electron integral? This PR adds a table to the integral documentation with all the necessary information. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Table added. ## Checklist; - [x] ~Tests added for any new features~; - [x] ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2527:42,update,update,42,https://psicode.org,https://github.com/psi4/psi4/pull/2527,1,['update'],['update']
Deployability,"## Description; I was investigating the ""memory not being released"" problem that @fevangelista brought up at the developer meeting. For the case of a simple HF energy, the wavefunction object indeed persisted after the energy call. Investigation showed its lifetime was controlled by the fact that we had the legacy wavefunction stored, and garbage collection didn't occur until the legacy wavefunction changed. Seeing as we don't actually use the legacy wavefunction machinery for anything in Psi, except part of a plugin interface where we tell people to prefer explicit wavefunction passing, this PR deprecates the commands for removal in 1.5, so we can collect garbage faster. This PR doesn't explain Francesco's reports of _increasing_ memory consumption for FINDIF, but it at least is a start. ## Todos; - [x] Deprecates `legacy_wavefunction` and `set_legacy_wavefunction`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2106:58,release,released,58,https://psicode.org,https://github.com/psi4/psi4/pull/2106,1,['release'],['released']
Deployability,"## Description; Implements Density matrix-based integral screening algorithms for Direct SCF, as well as Incremental Fock Build, the process of building a Fock matrix using the difference in the density matrix between SCF iterations. Reference Paper:; https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111. Updated Version of PR #2062. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Provide Massive Speedups to DirectJK Builds for HF and DFT; - [x] Accuracy of Calculations remain uncompromised. ## Questions; - [x] Is my current method of handling the density matrix for UHF and ROHF ideal?. ## Checklist; - [x] Passing cc-pVDZ and cc-pVTZ tests for HF and DFT (e_convergence 1.0e-6); - [x] Passing aug-cc-pVDZ, aug-cc-pVTZ tests for HF and DFT. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155:315,Update,Updated,315,https://psicode.org,https://github.com/psi4/psi4/pull/2155,1,['Update'],['Updated']
Deployability,"## Description; Implements a basic . ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ *] Adds a smart solver class that can easily share data with a wfn object during SCF iterations. ; - [ *] Provides a platform for quickly adding new smart solving capabilities.; - [ *] With a metric for detecting oscillation, a dynamic damping function can be turned on to limit changes in Drms to a target value. * **User-Facing for Release Notes**; - [ *] With SMART_SCF set to `true`, SOSCF is automatically turned on when trailing convergence is detected, the initial oscillations in SAD, GWH, and CORE guess are damped at 70%. ## Questions; - [ *] What can be changed about the structure of the smart_solver class for ease of readability and use?; - [ *] This code leaves out 'macroiterations', i.e. restarting the SCF upon failure with updated initial conditions and options. Do we want this functionality in this PR, or another?; ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ *] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1134:484,Release,Release,484,https://psicode.org,https://github.com/psi4/psi4/pull/1134,2,"['Release', 'update']","['Release', 'updated']"
Deployability,"## Description; In the psiapi tutorial notebook: update deprecated functions, fix typos, fix broken links. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Clean up broken links and deprecated functions in psiapi tutorial. ## Checklist; - [x] All cells still running correctly. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3018:49,update,update,49,https://psicode.org,https://github.com/psi4/psi4/pull/3018,1,['update'],['update']
Deployability,"## Description; Includes Joe's psi4/psi4#772, since the original point of this was to do properly the hacks needed to get the normco into the Wfn. This includes py-side vibrational analysis, thermo, and small-system reordering. Also fixes Hessian symmetrization (py-side; haven't moved it back c-side). ~This isn't a final product. I only re-hooked-back-up one conventional freq test case. There's plenty of organizational, naming, storage (want both freq and normco in Wfn? and if so, only vibs, not RT? and how ID imag freq if we're float and don't want `-`?) choices yet. What this does have is a substantial py test case with 6 Hessian readouts from Cfour and 6 matching p4 findif-by-grad vibrational analyses to help debug some analytic Hessian errors at wwdc.~. ~And watch out – any change to `findif.h` recompiles most of psi.~. In the end, this added a py-side vib analysis, identified two Hessian bugs, upgraded the two Molecule classes, added Molecule serialization everywhere except initial string input parsing, added alignment and BFS tools, and lots more – see below. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - This PR includes Joe's psi4/psi4#772; - adds an optional history object to the optimize output. This object contains energies, gradients, and coordinates for the molecule at each step of the optimization. Hooked up to MDT.; - ~adds normalmode displacement export to the api and optional saving of normal modes to the wavefunction.~; - Adds handling of several one-electron properties to the API and saves them to the wavefunction.; - `qcdb.Molecule`; - Fix some bugs, including C3/D3 symmetry detection w/o verbose and printing for Q-Chem when dummy (or ghost?, don't remember which) present; - Simplify rotational_constants, add rotational_symmetry_number, add axis_representation (probably should double-check this with a spectroscopy book); - Optimize instantiation (really, update_geometry) of large syst",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:912,upgrade,upgraded,912,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['upgrade'],['upgraded']
Deployability,"## Description; Initial draft. Next step is going to be ensure more backwards compatibility... This will involve more complicated manipulations of the current module, probably. Mark III of this refactor is going to use this code in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3220:371,release,release,371,https://psicode.org,https://github.com/psi4/psi4/pull/3220,1,['release'],['release']
Deployability,"## Description; It seems that in the course of harmonizing dftd4 in QCEngine, I touched enough dftd3, gcp, and mp2d that #2142 (dftd4 and minor dftd3, gcp, mp2d) can't be put off after the QCEngine v0.19 release. So here's the non-dftd4 tweaks. ## Todos; - [x] switch gcp interface to QCEngine; - [x] update types return for disp. engine can handle ndarray, so leave arrays as np and shaped rather than flat lists; - [x] Note that this won't build until new QCEngine release. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2180:204,release,release,204,https://psicode.org,https://github.com/psi4/psi4/pull/2180,3,"['release', 'update']","['release', 'update']"
Deployability,"## Description; It took me way too long to realize buf4_init could have non-zero data. Just adding a minor modification to the docstrings to clarify it a bit. . If accepted, please do a squash commit. I edited the docstring from github directly, so there's 1 commit per change. . ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/550:425,Release,Release,425,https://psicode.org,https://github.com/psi4/psi4/pull/550,1,['Release'],['Release']
Deployability,"## Description; It was agreed at PsiCon that the `Matrix` and `Vector` class be rewritten to use xtensor as storage backend. This is my work on this so far. It is not complete - indeed `Matrix` and `Vector` are still used everywhere - but I think it's better to put this up early because it will take time to transition to the new classes. **Easter update**. The Python bindings for the `Tensor` class mostly come for free through `xtensor-python`. They allow to:; * Access blocks _via_ the subscript operator.; * Assign a NumPy array to a block.; * Get a block and update it in NumPy.; ```; import numpy as np. from psi4.core import Dimension, Matrix_D. dim_row = Dimension([3, 2, 1, 4]); dim_col = Dimension([4, 2, 0, 2]); m3 = Matrix_D('m3', dim_row, dim_col); m3[0] = np.random.rand(*m3[3].shape); block = m3[3]; block[:] = np.arange(m3[3].size, dtype=float).reshape(*m3[3].shape); ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Use `_a` literal in pybind11 export sources rather that `py::arg` --> Split and merged with #1448 ; - [x] Basic templated `Tensor` class with Python bindings.; - [x] `doublet` for `Tensor<double, 2>` aka a `Matrix` of `double`-s working. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1443:349,update,update,349,https://psicode.org,https://github.com/psi4/psi4/pull/1443,2,['update'],['update']
Deployability,"## Description; It would be nice to be able to pass in an external hamiltonian to be able to test-drive some code (e.g. for the calculation of external potentials) without always needing to recompile. This PR adds this possibilty. I am testing it by making a calculation without an external hamiltonian but with a potential (and saving the nuclear_repulsion addition, which is not mediated by the additional H term) and comparing it to a simulation without an external potential, but with the captured potential hamiltonian. FYI: This is on top of #3148 , because otherwise the tests don't pass.; Also fyi: I did not build the docs. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Added possibility to pass in an external hamiltonian contribution via `energy(..., external_hamiltonian = np.array(...))`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Added possibility to pass in an external hamiltonian contribution via `energy(..., external_hamiltonian = np.array(...))`.; - [ ] Tested via simulation with external_potential and an equivalent external_hamiltonian. ## Questions. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3149:766,release,release,766,https://psicode.org,https://github.com/psi4/psi4/pull/3149,1,['release'],['release']
Deployability,"## Description; Kudos to @andysim for pointing out in January the exact 13 lines of code to change for the vast preponderance of the gaussian to standard ordering switch. As far as timeline, there's no particular reason this needs to be in for v1.6. But if we _could_ avoid hosting forever one fewer set of L2 packages for a single release, that'd be kind of nice. But fixing the output formats (i.e., fchk, qcsk, molden, fcidump) is likely to take some careful work. If anyone would like to tackle a part of this, go for it. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [ ] current test status (pretty impressive, imo); - after g2g commit; - ctest: `99% tests passed, 3 tests failed out of 487`; - pytest: `12 failed, 2971 passed, 270 skipped, 269 xfailed`; - after first solidharmonics.cc commit; - ctest: ~`90% tests passed, 50 tests failed out of 487`~; - pytest: ~`43 failed, 2911 passed, 208 skipped, 269 xfailed`~; - [ ] only Linux in CI b/c only it has an appropriate L2 conda package built. - categories to examine; - [x] tdscf; - [x] cubeprop; - [ ] fchk; - [ ] qcsk atomicresult.wavefunction; - [x] mbis; - [ ] molden; - [ ] fcidump; - [ ] nbo. - fails pytest; - [x] tdscf; - [x] dft_block_schemes; - [ ] mcmurchie_davidson_consistency_angmom (fails because ref data are deposited in Gaussian ordering); - [ ] test_rhf_fchk[df-rhf-dft)]; - [ ] test_rhf_fchk[conv-rhf-dct]; - [ ] test_rhf_fchk[df-rhf-omp2]; - [ ] test_uhf_fchk[df-uhf-mp2]; - [ ] test_rhf_fchk[conv-rhf-ccsd] ; - [ ] test_uhf_fchk[df-uhf-dft]; - [ ] test_uhf_fchk[conv-uhf-ccsd]; - [ ] test_rhf_fchk[df-rhf-mp2]; - [ ] test_uhf_fchk[df-uhf]; - [ ] test_rhf_fchk[df-rhf)]; - [ ] test_rhf_fchk[conv-rhf-cc2]. - fails ctest; - [x]	103 - cubeprop (Failed); - [x]	104 - cubeprop-frontier (Failed); - [x]	123 - density-screen-2 (Timeout); - [x]	161 - dft-grad-lr1 (Failed); - [x]	162 - dft-grad-lr2 (Failed); - [x]	163 - dft-grad-lr3 (Failed); - [x]	168 - dft-b2plyp (Fail",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2537:332,release,release,332,https://psicode.org,https://github.com/psi4/psi4/pull/2537,1,['release'],['release']
Deployability,"## Description; Last summer, I discovered that the energy _increased_ along the IRC for my complex formation coordinate. I eventually tracked this down to a bug where the molecule did not displace the initial geometry correctly, which this PR fixes. Since that time, those of us at UGA have found this fix essential to follow modes <200i. I discuss this in more detail [here](https://github.com/psi-rking/optking/issues/19). I updated a test to reflect the fact that the IRC can go a bit further when it displaces correctly. I didn't bother updating the reference files, as I expect it'll be invalidated soon anyways. The whole reason I'm submitting this PR now is to eliminate this bug from consideration when I send @psi-rking the _latest_ IRC bug I found. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix IRCs. ## Checklist; - [x] All IRC tests run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1663:427,update,updated,427,https://psicode.org,https://github.com/psi4/psi4/pull/1663,1,['update'],['updated']
Deployability,"## Description; Legacy modules that were default in the past, but have been replaced will move to the [psi4pasture](http://github.com/psi4/psi4pasture) repo. The ccsort/transqt2 modules now live there. This PR introduces some machinery for installing them from psi4's build, and allowing them to be used in the driver at run-time if they are installed. ## Todo; - [x] cleanup history; - [x] find specific libs that have missing symbols + add `${PRE/POST_LIBRARY_OPTIONS}` to each not all.; - [x] Docs: Finalize build instructions for `PastureRequiredError`; - [x] Docs: Add transqt2/ccsort note to read_options.cc; - [x] Tests: add tests as lori mentioned . * **Developer Interest**; - I would say this functionality is experimental since pasture does not have any travis checks.; - I am not completely confident in the way I have ""injected"" pasture.addins.ccsort_transqt2 into proc.py, but it seems to work okay. See the code comments; - Does the pasture module even need to be installed w/in lib/psi4/driver?. * **User-Facing for Release Notes**; - ccsort/transqt2 are no longer part of psi4_core; - adds ENABLE_ccsort and ENABLE_transqt2 flags to optionally build/install them from pasture. * **Self imposed CI checks**; - [x] MacOS/clang/python2 build + use pasture ok; - [x] MacOS/clang/python3 build + use pasture ok; - [x] Linux/gcc/python2 build + use pasture ok; - [x] Linux/gcc/python3 build + use pasture ok. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/534:240,install,installing,240,https://psicode.org,https://github.com/psi4/psi4/pull/534,5,"['Release', 'install']","['Release', 'install', 'installed', 'installing']"
Deployability,## Description; Lets packages update even though we're caching on Travis CI. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1536:30,update,update,30,https://psicode.org,https://github.com/psi4/psi4/pull/1536,1,['update'],['update']
Deployability,## Description; Libint2 and shell screening. ## Todos; - [x] initial cmake integration of fixed AM Libint2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1721:75,integrat,integration,75,https://psicode.org,https://github.com/psi4/psi4/pull/1721,1,['integrat'],['integration']
Deployability,"## Description; Longawaited maintenance on physconst and duplicate naming. ## Todos; * **Developer Interest**; - [x] There was dir driver/procedures and dict procedures['energy']... Renamed the former to procrouting to avoid future trouble. Note that all plugins will need [this line](https://github.com/edeprince3/v2rdm_casscf/blob/master/pymodule.py#L28) fixed by `procedures` --> `procrouting`.; - [x] Move i/fsapt test cases higher in list, so they can backfill.; * **User-Facing for Release Notes**; - [x] Physical constants in PsiAPI are now `psi4.constants.amu2kg` instead of `psi4.p4const.psi_amu2kg`. In Psithon, still `psi_amu2kg`. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/632:488,Release,Release,488,https://psicode.org,https://github.com/psi4/psi4/pull/632,1,['Release'],['Release']
Deployability,"## Description; Make `back_transform` consistent across the various signatures and better behaved for more ""exotic"" cases. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] Improved `Matrix::back_transform`'s ability to handle edge cases. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `back_transform` signatures now trickle down to a single function; - [x] All `back_transform` signatures resize the target matrix if necessary (only one did this previously, DGEMM error otherwise); - [x] All `back_transform` signatures handle symmetry correctly (at least some would error previously). ## Checklist; - [x] `back_transform` passing tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2745:255,release,release,255,https://psicode.org,https://github.com/psi4/psi4/pull/2745,1,['release'],['release']
Deployability,"## Description; Make `core.Matrix.np_write(filename=None)` safer. The method returns a `dict` whose values are `np.ndarray`s. Currently, those arrays are views of memory owned by the `core.Matrix`, which means code like this is actually broken:. ```; def function():; matrix = function_that_returns_a_core_Matrix(); return matrix.np_write(filename=None); ```. This PR changes `np_write` to return copies of the data when `filename=None`, so it's less of a footgun. Eventually the need for this might go away, once the numpy->core.Matrix reference counting integration is accomplished, but that's much tricker. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/750:556,integrat,integration,556,https://psicode.org,https://github.com/psi4/psi4/pull/750,1,['integrat'],['integration']
Deployability,"## Description; Make `psi4.test()` safe to run. And beer safe to grep. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] The psi4 vs numpy threading test is more likely to work if run first, so moved it there. But since that's still no guarantee, made it an expected failure, so it doesn't count against pytest either way.; - [x] with `ENABLE_GENERIC`, blas/lapack detection looks for dynamic libm.; * **User-Facing for Release Notes**; - [x] Geometry optimizations that exceed maxiter no longer just print a warning and exit successfully (beer). Now they exit unsuccesfully (coffee) and raise a `psi4.ConvergenceError`. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/638:485,Release,Release,485,https://psicode.org,https://github.com/psi4/psi4/pull/638,1,['Release'],['Release']
Deployability,"## Description; Make `transform` consistent across the various signatures and better behaved for more ""exotic"" cases. Sister PR to #2745. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] Improved `Matrix::transform`'s ability to handle edge cases. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `transform` signatures now trickle down to a single function; - [x] All `transform` signatures resize the target matrix if necessary (only one did this previously, DGEMM error otherwise); - [x] All `transform` signatures handle symmetry correctly (at least some would error previously). ## Checklist; - [x] `transform` passing tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2748:270,release,release,270,https://psicode.org,https://github.com/psi4/psi4/pull/2748,1,['release'],['release']
Deployability,"## Description; Make example 1 of #2231 at least _run_. I'm not quite sure it's correct just yet, though. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixed a bug causing crashes upon linearly dependent basis sets for some correlated methods. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] We're copying SO-basis data into this and then transforming to the MO-basis, so yes, I'm quite sure this is the correct dimension. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2857:239,release,release,239,https://psicode.org,https://github.com/psi4/psi4/pull/2857,1,['release'],['release']
Deployability,## Description; Makes print statement more clearly communicate to user which density matrix is being employed. c closes #1055 ; ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1068:273,Release,Release,273,https://psicode.org,https://github.com/psi4/psi4/pull/1068,1,['Release'],['Release']
Deployability,"## Description; Makes restarting an SCF and saving orbitals more accessible and updates documentation. Saving MOs for every SCF step to `my_mos.npy` and keeping it after psi4 finishes:; ```; energy('hf/minix',write_orbitals='my_mos'); # or; set orbitals_write my_mos; energy('hf/minix'); ```. Reading `my_mos.npy`:; ```; set guess read; energy('hf/minix',restart_file='my_mos'); ```. Using a serialized `wfn` works as well (`my_mos.npy` is just that); ```; e, scf_wfn = psi4.energy('scf', return_wfn=True); scf_wfn.to_file('saved_wfn'); set guess read; energy('scf', restart_file='saved_wfn'); ```. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] `write_orbitals' extended to also take a string to save user-named `180.npy` file; - [x] fixed and updated `restart_file` for `npy` files; - [x] added `ORBITALS_WRITE` option; - [x] if `write_orbitals=file` then MOs will be saved every iteration.; - [x] doc re-work (minimal entry on serializing a wfn and simplifying `restart_file`); - [x] adds `sphinx-autodoc-typehints` module to sphinx build hinting in cmake ; - [x] `serial-wfn` ctest to new pytest about restarts. ## Remarks; - `write_orbitals=boolean` is not documented but still an internal functionality. ; - `restart_file` doc is ambiguous on purpose. No idea which modules support restarting. If this is something a user; should be able to do, the respective module needs to add a documentation. ## Checklist; - [x] Tests; - [x] Docs; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2190:80,update,updates,80,https://psicode.org,https://github.com/psi4/psi4/pull/2190,2,['update'],"['updated', 'updates']"
Deployability,"## Description; Minor CI patches. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Closes https://github.com/psi4/psi4/issues/559 and moves these features to a wishlist.; - [x] Closes https://github.com/psi4/psi4/issues/558, RSP eigenvectors were indeed wrong. Adds a RSP MCSCF test case for future testing. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/566:25,patch,patches,25,https://psicode.org,https://github.com/psi4/psi4/pull/566,1,['patch'],['patches']
Deployability,## Description; Minor tweaks to finite differences in the atomic_displacements() function that is used only in prototype ROA calculations at present. . ## Todos; Now supports 3-point and 5-point formulae finite differences in the atomic_displacements() function.; Now returns displacements in canonical most negative to most positive order. * **Developer Interest**; I have used this function in dipole moment derivative/file17 computations. Further development along these lines is likely. * **User-Facing for Release Notes**; None at this juncture. ## Questions; None. ## Status; Should be ready to go.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/732:511,Release,Release,511,https://psicode.org,https://github.com/psi4/psi4/pull/732,1,['Release'],['Release']
Deployability,"## Description; Misc. ## Todos; * **Developer Interest**; - [x] CI: Removes align tests that require hungarian package from quicktests; - [x] Allow basis set blocks to be names ""custom"", ""special"", ""general"" w/o spewing a page of errors at you.; - [x] CMake: upgrade versioner to avoid hard-coded project version. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/974:259,upgrade,upgrade,259,https://psicode.org,https://github.com/psi4/psi4/pull/974,1,['upgrade'],['upgrade']
Deployability,"## Description; Misc. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix threading for P4C4 now that psi4 doesn't deal directly with OMP_NUM_THREADS; - [x] Devin's ncc module isn't full-fledged in v2.00beta, but let's at least allow it to be selected; - [x] Were throwing ConvError when optking exceeded requested number of cycles but not when it failed internally. Now doing so, fixing  psi4/psi4#800; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/806:491,Release,Release,491,https://psicode.org,https://github.com/psi4/psi4/pull/806,1,['Release'],['Release']
Deployability,"## Description; Miscellaneous substantive changes short of moving vars from globals to wfn. ## Todos; - [x] for FINDIF, renamed some functions for easier comprehension (e.g., `compute_gradient_from_energy` --> `compute_gradient_from_energies`). speak up, @JonathonMisiewicz if I've misinterpreted anything (it won't count in GH's reckoning, but you're always welcome to review).; - [x] `core.get_gradient`/`core.set_gradient` aren't regularly set, even in v1.2, being used only in internal communication for OPTKING. I consider this effectively a silent deprecation in 1.2, so made that official (in case downstream using it), and renamed to `legacy_gradient` internally, until the demise of C-optking.; - [x] de-py2-adapted `psi4.driver.p4util`; - [x] fixed bug where in `driver_fn(..., kwargvar=None)`, `kwargvar` turned into `False`; - [x] deprecated many old fns in p4util -- see if you agree. Most for v1.4 but a few for v1.3.; - [x] added tolerance field to `compare_wavefunctions`; - [x] renamed and `_`-prefixed many functions in python_helpers.py so connection to demangled fn name easier to track and the `import *` doesn't contaminate namespace; - [x] for dfmp2, energy was starting the timer _after_ `scf_helper`, gradient was starting timer _before_ SCF, and properties wasn't timing at all. changed the latter two to match the first.; - [x] added `set_energy` to Wfn; - [x] `psi4 --fulltest -n NTHREAD` available to run full pytest test suite. Parallel only available if `pytest-xdist` installed (`conda install pytest-xdist`). ## Checklist; - [ ] ~Tests added for any new features~; - [x] quick tests is fine at this PR. full tests of this + other commits is fine. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1394:1500,install,installed,1500,https://psicode.org,https://github.com/psi4/psi4/pull/1394,2,['install'],"['install', 'installed']"
Deployability,"## Description; Modifies how one electron properties are computed to allow the `properties` kwarg to behave consistently with other modules. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] CCDENSITY no longer calls into OEPROPs this is now done in the python layer. ; - [x] After calling CCDENSITY the `wfn.arrays['CC ROOT {n} D{a|b}']` can be used to access the OPDM for excited states in the SO basis as in the convention for matrix quantities set on the wfn. ; * **User-Facing for Release Notes**; - [x] Excited state OPDMs are now set in the wfn.arrays, so that they can be used to compute 1e properties for all roots requested in EOM-CC* calls.; - [x] Now additional valid one electron properties can be passed as part of the `properties=[]` list. These would previously cause a validation error. Valid one electron properties are now:; - dipole *; - quadrupole *; - mulliken_charges **; - lowdin_charges; - mayer_indices; - wiberg_lowdin_indices; - no_occupations **; - [x] The previous behavior was such that requesting the properties marked with * above would lead to all * -ed properties and additional (**) properties being computed automatically. The new logic implemented in the driver still has this behavior so existing workflows do no need to change, at least for now. . ## Questions; - [x] @loriab The block of code that I removed from CCDENSITY had comments that were used to trigger documentation of some psivars. Where should these go now? . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I ran all of the CC tests and there were no errors. The new logic changes where in the output file the 1 electron properties appear, but the perl script still finds them since they are labeled/formatted the same way. . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/995:551,Release,Release,551,https://psicode.org,https://github.com/psi4/psi4/pull/995,1,['Release'],['Release']
Deployability,"## Description; More `cc` tests ported over. There's one `autotest` test left. ## Todos; - [x] Documented several CC psivars; - [x] Updated dipole size managing functions to work with new ""DIPOLE -"" syntax; - [x] cc density variables renamed to new syntax; - [x] cc dipole/quadrupole variables renamed to new syntax . ## Checklist; - [x] ctests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2541:132,Update,Updated,132,https://psicode.org,https://github.com/psi4/psi4/pull/2541,1,['Update'],['Updated']
Deployability,"## Description; More build changes. ## Todos; Notable points that this PR has either accomplished or will accomplish.; - [x] enable py3 testing; - [x] fix versioning at releases, allow conda build to get version before build; - [x] fix case where Fortran compilers required, but not detectable, have to be passed in; - [x] dashboard back. ## Questions; - [x] After these two PRs, just waiting on plugins from @jturney . ## Status; - [x] Ready to go **after oct_cmake**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/488:169,release,releases,169,https://psicode.org,https://github.com/psi4/psi4/pull/488,1,['release'],['releases']
Deployability,"## Description; Mostly posting to serve as ECP test bed. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Also: HEAVY28 & RG6, but ECP convergence problems, such that they don't match pub values; * **User-Facing for Release Notes**; - [x] New Grimme databases: ADIM6, ALK6, DARC, DC9, HEAVY28, IDISP, ISO34, RG6; - [x] More Grimme databases: AL2X, ISOL22, NBPRC, RSE42. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/795:282,Release,Release,282,https://psicode.org,https://github.com/psi4/psi4/pull/795,1,['Release'],['Release']
Deployability,"## Description; Mostly xtpl refinements, plus some misc. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fixed the typo @fevangelista noticed on the GitHub workflow slide (it was definitely mine, not Andy's, in my zeal to use https). Added the link to this on the front page that CDS wanted. Added a do/don't git pull/push slide; - [x] Added ability to forward the extrapolation scheme from a method/basis spec; - [x] Tested and added docs and test for user-specified extrapolation functions. Added refs for xtpl fns.; - [x] Changed import of xtpl fns to `from driver_cbs import *` in inputparser after they had previously been named explicitly. This should be fine b/c the targeted ones are the only fns in file not beginning with underscore. This way anyone can add an extrapolation fn to driver w/o having to know to edit inputparser.; * **User-Facing for Release Notes**; - [x] Bump libefp source to upstream tag 1.4.2; - [x] Fix more int/float in basis set files that wouldn't get read correctly by parser. In particular, def2 RI fitting for Mg. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/686:926,Release,Release,926,https://psicode.org,https://github.com/psi4/psi4/pull/686,1,['Release'],['Release']
Deployability,"## Description; Mostly, get psi4 up-to-date with pybind again, remove extraneous python linking, and sanitize chemps2 & pcmsolver test case names and ctest labels. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] add message-coloring module, useable by all, and used to warn about <4.9 GCC and highlight addon detection; - [x] make autodocing tools aware of the detci properties psivars that are now set py-side; - [x] re-work some list casting that (with pybind11 Nov 16 updates) broke our array options; - [x] dropped the versioned code object library in psi4/src/CM; - [x] documented python/pybind linking a bit; - [x] ctest `shorttests` gone and `minitests` in; * **User-Facing for Release Notes**; - [x] `dmrg` tests and label now accessed through `chemps2`; - [x] `pcmsolver` tests dropped ""pcm"" prefix; - [x] tests involving external code now accessible with label `addon` rather than `ext-exe-dep`; - [x] no longer linking to libpython. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/524:538,update,updates,538,https://psicode.org,https://github.com/psi4/psi4/pull/524,2,"['Release', 'update']","['Release', 'updates']"
Deployability,"## Description; Much misc. ## Todos; - [x] Better error msg for MathOpenMP, mostly when GCC+MKL and can't find iomp5; - [x] Fix items in p4c4 interface; - [x] ccsd(t) grad in cfour v1 (came down to an unneeded `\s*`). test-suite-wise, approx works equally well with v1 or v2; - [x] DROPMO handling; - [x] backport a lot of the parsing changes from github.com/qcdb/qcdb to here; - [x] modernize Molecult.init_with_xyz(); - [ ] @JonathonMisiewicz, if you hit can't-align errors, let me know, and I'll switch it out to new mech; - [x] I forgot to obfuscate the global variable names used in pylibefp in #953, so do that here; - [x] fix [forum 1009](http://forum.psicode.org/t/nameerror-name-wfn-is-not-defined/1009/2?u=loriab); - [x] update a bunch of docs items that had accumulated; - [x] officially make python 2.7 unacceptable to the build system. ## Checklist; - [ ] ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1122:731,update,update,731,https://psicode.org,https://github.com/psi4/psi4/pull/1122,1,['update'],['update']
Deployability,"## Description; New PR for [PR#990](https://github.com/psi4/psi4/pull/990) to avoid a mess of merge conflicts. Thanks to @robertodr for the help. Provides a remedy for [#909](https://github.com/psi4/psi4/issues/909). `Molecule::mass` and `Molecule::Z` show inconsistent behavior for ghosts. This PR requires a new argument `bool zero_ghost` on the C++ side and optionally in the Python layer which gives a choice for behavior. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Required C++ argument `bool zero_ghost` for `Molecule::mass`; - [x] Optional python argument `bool zero_ghost` for `Molecule::mass` (default false); - [x] Required argument `bool zero_ghost` for `Molecule::Z`; - [x] Optional python argument `bool zero_ghost` for `Molecule::Z` (default true); - [x] Optional C++/python argument `bool zero_ghost` for `Molecule::center_of_mass`; - [x] Optional C++/python argument `bool zero_ghost` for `Molecule::inertia_tensor`; - [x] Check all C++ calls for ""intended behavior""; * **User-Facing for Release Notes**; - [x] New optional python arguments for `Molecule.mass()`, `Molecule.Z()`, `Molecule.center_of_mass`, and `Molecule.inertia_tensor`. ## Questions; - For clarity: ""previous behavior"" is that `mass` returns non-zero for ghost atoms (equivalent to `zero_ghost = false`), and `Z` returns zero for ghost atoms (`zero_ghost = true`).; - `Molecule::mass` and `Molecule::Z` on the C++ side now need to be passed either `True` or `False`, for whether or not to return zero for ghost atoms. I'm defaulting to previous behavior in most cases, though there are some (such as `optrot.cc`) that likely need to be changed. See the discussion in [#909](https://github.com/psi4/psi4/issues/909).; - May also need a logic pass of `center_of_mass` and `inertia_tensor` in a separate PR?; - Suggestions for changes C++ side or py-side are greatly encouraged. ; - This is a good chance to consider changing some `Z` calls to `tru",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1355:1076,Release,Release,1076,https://psicode.org,https://github.com/psi4/psi4/pull/1355,1,['Release'],['Release']
Deployability,"## Description; Ninja is supposed to be faster at compiling than make. CMake supports it out-of-the-box, it's enough to pass it as generator:; ```; cmake -H. -Bbuild -GNinja; ```; I have tried to use Ninja on Travis and the Clang build runs in ~21 minutes. The GCC builds however fail due to a compiler bug. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `DESTDIR=${CMAKE_BINARY_DIR}/stage` was prepended to `${CMAKE_MAKE_PROGRAM} install` appearing in all instances of `INSTALL_COMMAND`.; - [x] Same `DESTDIR`-related modifications in Libint and update of the Git commit SHA. PR towards v1 was already merged. ; * **User-Facing for Release Notes**; - [x] Psi4 core now buildable with Ninja. **Caveat** To build also the addons it might be necessary to use CMake v3.7.2 _and_ the [Kitware-maintained version of Ninja](https://github.com/Kitware/ninja/releases). The official one does not support Fortran. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/794:499,install,install,499,https://psicode.org,https://github.com/psi4/psi4/pull/794,4,"['Release', 'install', 'release', 'update']","['Release', 'install', 'releases', 'update']"
Deployability,"## Description; No need for appveyor to be building temp branches (e.g., `loriab-patch-3`) _and_ PRs. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1216:81,patch,patch-,81,https://psicode.org,https://github.com/psi4/psi4/pull/1216,1,['patch'],['patch-']
Deployability,## Description; Non-urgent stuff I found this week. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Expand my collection of Windows problems and solutions after Tuesday's fun with #2624 ; - [x] Update supported Py versions in README; - [x] Fix a test that wasn't declaring its dependencies; - [x] Make non-optional the use of `git --atomic` for versions/tags/CI conda; - [x] Expand logic on whether to build conda-pkg or not to include the 1.N.x maintenance branches. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2629:253,Update,Update,253,https://psicode.org,https://github.com/psi4/psi4/pull/2629,1,['Update'],['Update']
Deployability,"## Description; Not expected to pass, as it needs a special qcel and qcng. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3034:208,release,release,208,https://psicode.org,https://github.com/psi4/psi4/pull/3034,1,['release'],['release']
Deployability,"## Description; Occasionally we had issues cropping up where users were assigning views that were not tied to the Matrix object. Consider the following:. ```; mat = Matrix(5, 5); view = mat.np; del mat; ```. Previously, `mat` and `view` lifetimes were not tied together. The NumPy array would point to deleted memory in the above example. With this PR, the object lifetime are tied together and `mat` is not actually deleted in this example (just a handle to it) so that the `view` remains valid. This also allows operations like `view = Matrix(5, 5).np` and `Cocc = wfn.Ca_subset(""AO"", ""OCC"").np` to work without issue. A small downside is that the views cannot be cached as this would lead to circular nurse/patient relationships and prevent the objects from ever being garbage collected. This makes the `.np` accessors take slightly more time (~2-5us depending on number of irreps vs 0.5us). However, unless you are looping over individual indices and setting values this really shouldn't matter and the `mat.get/mat.set` functionality can be used for this with the ~0.4us latency. There is a chance this is fixable and we can revisit if it comes an issue. I also was able to delete a great deal of rather hideous code which makes me quite happy. Special thanks to @rmcgibbo for poking me about this and helping with idea and also to the PyBind11 team for ""fixing"" this a few months ago (doh!). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Can now obtain stand-alone views with correct reference counting (`view = Matrix(5, 5).np`).; - [x] Dimension objects can now be built python-side from list `Dimension([5, 5, 5])`.; * **User-Facing for Release Notes**; - [x] The NumPy interface is now more robust. . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/751:1715,Release,Release,1715,https://psicode.org,https://github.com/psi4/psi4/pull/751,1,['Release'],['Release']
Deployability,"## Description; OpenMP detection is very finely balanced to compensate for LAPACK demands, `libgomp` self aggrandizement, and psi4's need to sanely and transparently impose the psi4-compile-omp status on any derived plugins. Unfortunately, #1348 disturbed some of that for the particular case of plugins with fewer active languages than their parent psi4. A plugin (dfmp2) wasn't inheriting openmp from psi4 and thus was giving unknown openmp pragma warnings upon compile. This wasn't getting caught on linux because I was only checking that iomp5/gomp/omp weren't mixing, not that at least one was present. By happenstance, this did trigger an error on Mac in the course of building `psi4-dev`. This seems to patch things up on Linux. Will use this branch to try out Mac again. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1520:710,patch,patch,710,https://psicode.org,https://github.com/psi4/psi4/pull/1520,1,['patch'],['patch']
Deployability,"## Description; PSIMRCC has a wavefunction now. This is **not** the last PR in the PSIMRCC series. Another brief PR will be needed for clang format and to finish moving the responsibility of keeping track of ""free memory"" to the wavefunction. You'll notice that at present, the `free_memory_` variable isn't modified. That used to be ""done"" by myriad allocate/release statements, which were removed in #1901. This is a very long PR as it is, so I'm moving that task to a separate PR. Obligatory pings: @loriab, @fevangelista, @andysim. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] PSIMRCC has a wavefunction!. ## Checklist; - [x] Quick tests and psimrcc tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1949:360,release,release,360,https://psicode.org,https://github.com/psi4/psi4/pull/1949,1,['release'],['release']
Deployability,## Description; Parsing the PCM section of the input requires changing directories. As noted in #817 this is not really documented anywhere and affects users. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] CWD is saved before parsing PCM section and restored at the end. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/818:262,Release,Release,262,https://psicode.org,https://github.com/psi4/psi4/pull/818,1,['Release'],['Release']
Deployability,"## Description; Partial fix to #2634. thanks, @TiborGY, for that report. The mrcc interface beyond single-points was another casualty of distributed driver. The Allen test needs a further fix that involves moving a dictionary. In the meantime, this heals all the ctests. Update: I've got all parts fixed locally, and one of these changes is no longer necessary. I'll leave this open until the other PR available, in case someone needs a quick fix. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2638:271,Update,Update,271,https://psicode.org,https://github.com/psi4/psi4/pull/2638,1,['Update'],['Update']
Deployability,## Description; Patch to the plugin code to work with ```PYMOD_INSTALL_LIBDIR``` paths. Tested with and without ```PYMOD_INSTALL_LIBDIR``` set to ```/python2.7/site-packages```. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/490:16,Patch,Patch,16,https://psicode.org,https://github.com/psi4/psi4/pull/490,1,['Patch'],['Patch']
Deployability,"## Description; Patch up VV10 UKS dispersion. This had been a nagging issue for awhile now, but it turns out the only real issue is that I forgot to add the VV10 energy to the total SCF energy. I had originally started blaming the Fock term as the VV10 energy was spot on and subsequently starting playing with those values. Quite the blooper on my part:. ```; (p4dev) daniel:~/Gits/psi4ds/tests/dft-bench-ionization (vv10_uks)$ python ../../psi4/run_psi4.py --inplace input.dat; 	VSXC: Psi4 vs. Q-Chem.............................................PASSED; 	VV10: Psi4 vs. Q-Chem.............................................PASSED; 	B97M-V: Psi4 vs. Q-Chem...........................................PASSED; 	LC-VV10: Psi4 vs. Q-Chem..........................................PASSED; 	wB97M-V: Psi4 vs. Q-Chem..........................................PASSED; 	wB97X-V: Psi4 vs. Q-Chem..........................................PASSED; ```. This also fixes a small bug in meta-GGA UKS gradients from the original implementation. Fixes #982 and fixes #962. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/983:16,Patch,Patch,16,https://psicode.org,https://github.com/psi4/psi4/pull/983,1,['Patch'],['Patch']
Deployability,"## Description; Paying off an old IOU. I'll get to what Francesco and Daniel Nascimento need after this PR is in. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `RelPotentialInt` now has the same charge field API as `PotentialInt` and should be faster. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `RelPotentialInt` now delegates construction of W0 integrals to Libint; - [x] `RelPotentialInt` now has the same charge field API as `PotentialInt` . ## Checklist; - [x] `ctest -L x2c` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3153:247,release,release,247,https://psicode.org,https://github.com/psi4/psi4/pull/3153,1,['release'],['release']
Deployability,## Description; Prevents the user from using a C++ keyword as a name for a new plugin. It came up on [this](http://forum.psicode.org/t/trouble-in-build-plugin-for-psi4/349) forum post. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Prevents the user from using a C++ reserved keyword as a name for a new plugin. ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/532:288,Release,Release,288,https://psicode.org,https://github.com/psi4/psi4/pull/532,1,['Release'],['Release']
Deployability,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3226:697,Update,Updates,697,https://psicode.org,https://github.com/psi4/psi4/pull/3226,1,['Update'],['Updates']
Deployability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; - [x] bump pb11 internal build to v2.5.0; - [x] bump ambit internal build to v0.4.1; - [x] update paper and acknowledge more folks in header; - [x] add extra arg to bindings of so_overlap/kinetic so p4n ref impl can run as-is; - [x] fix missing qcvars, wfn settings in fnocc and occ for conventional LCCD; - [x] add conventional LCCD tests to standard_suite courtesy of @JonathonMisiewicz reference implementation over at p4n, https://github.com/psi4/psi4numpy/tree/master/Coupled-Electron-Pair-Approximation; - [x] depends on https://github.com/MolSSI/QCEngine/pull/244 for data. Furthermore all standard_suite tests are presently suppressed until qcng v0.15 minted. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1913:171,update,update,171,https://psicode.org,https://github.com/psi4/psi4/pull/1913,1,['update'],['update']
Deployability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; * Misc; - [x] Add PR help, as found by DGAS http://makeapullrequest.com; - [x] Add statement of support for https://python3statement.org/; - [x] Rename some DFHelper timers for the sake of alignment in timer.dat; - [x] More work on test_threading python script that will check the mkl/omp linking of psi4.so and the dfmp2 plugin template (or any other .so). Also will run psithon and psiapi tests on psi4 and dfmp2 plugin to make sure multithreads at least 1.3x speedup over single-thread; - [x] Update docs on BLAS recommendations, conda compilers. cautions on OpenBLAS sufficient to close psi4/psi4#1009; * Real part; - BLAS/LAPACK, compiler, and OpenMP are handled independently but are actually intertwined. Greatest complication comes about psi compiled by Intel with MKL (req. iomp5), then plugin built off that psi by GCC with OpenMP=ON and end up with both gomp and iomp5 linked, which is a subtle disaster.; - What we have been doing: cmake/math finds mkl_rt and outright adds iomp5, pthreads, etc. external/common/lapack packages those all into a target to pass along to blas-using dependencies. Meanwhile cmake/autocmake_omp detects just OpenMP flags (e.g., `-fopenmp` and `-qopenmp`) for the various compilers add adds them directly to `CMAKE_CXX_FLAGS` (for propagation to to psi4 (and consequently plugins) but **not** to deps (which might have OpenMP=OFF)). Actual OpenMP _libraries_ are not handled (except the aforementioned iomp5 hard-code) so (1) gomp can intrude with GCC and (2) the nice `-fopenmp=iomp5` capabilities of Clang aren't used.; - Trouble with sending me on long car trips (i.e., LSU) is that I begin plotting how things _should_ be. This PR is my take on answering this. It's insane to spring it at this point in the release cycle, but the first time after Setca that I tried building an ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1031:675,Update,Update,675,https://psicode.org,https://github.com/psi4/psi4/pull/1031,1,['Update'],['Update']
Deployability,## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1086:215,Release,Release,215,https://psicode.org,https://github.com/psi4/psi4/pull/1086,1,['Release'],['Release']
Deployability,## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/837:215,Release,Release,215,https://psicode.org,https://github.com/psi4/psi4/pull/837,1,['Release'],['Release']
Deployability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Bump CheMPS2 to v1.8.4; - [x] Bump Libint to Ninja-able version, v1.2.1+2; - [x] Bump Pybind11 to v2.2.2. Note that this invokes symbol hiding, so ...; - [x] Include Jet's `PSI_API` macro to re-expose classes for plugins.; * **User-Facing for Release Notes**; - [x] Note that anyone wanting to re-use an `objdir` will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; - `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; - `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; - `<objdir> rm -rf external/upstream/pybind11`. ## Status; - [x] Ready for review; - [x] Ready for merge. @psi4/editors, these should be quick and uncontroversial. Getting this in would help the PR assembly line.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/950:428,Release,Release,428,https://psicode.org,https://github.com/psi4/psi4/pull/950,1,['Release'],['Release']
Deployability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Inclusion of outer P-shell for cc-pVTZ-MINAO for alkali and alkali earth was split between FOR (Rob, CDS, Susi) and AGAINST (FAE, Molpro). CDS changed his vote, so deleted and added as appropriate so filled in through Kr thanks to Cici. No change in test cases. We should now match Molpro.; - [x] Added conda package instructions to obtaining psi4 docs section; - [x] Nixed `using namespace std;` in favor of explicit `std::`. Appears to have broken sapt7 test (now fixed).; - [x] Made `std::abs` and `std::fabs` explicit; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/756:728,Release,Release,728,https://psicode.org,https://github.com/psi4/psi4/pull/756,1,['Release'],['Release']
Deployability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Makes `psiapi.ipynb` build friendlier by not executing notebook (safe on Mac, highly uncertain on Linux) and by bypassing the nbsphinx altogether if not installed. Pre-executed notebook.; - [x] Starts a `conda/` dir and tidies the conda versioning file into it.; - [x] Suppress output from `_psi4_which` upon loading external exe, hopefully fixing psi4/psi4#656 ; * **User-Facing for Release Notes**; - [x] Set up Linux plugins through conda by preempting PluginCache. Plus docs.; - [x] skipping extern1/2 for py3.6 since fail. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/659:338,install,installed,338,https://psicode.org,https://github.com/psi4/psi4/pull/659,2,"['Release', 'install']","['Release', 'installed']"
Deployability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points that this PR has either accomplished or will accomplish.; - [x] renamed gtfock and erd. enable erd allowed w/o being default; - [x] add astropy docs dependence. all psi4.core and psi4.driver autodoc-ed w/o helper scripts; - [x] do absolute, not relative, imports in psi4.driver; - [x] replace cdict with variables and arrays in core.Wfn; - [x] reimplement versioning, at least internally. publish `v1.0` tag on top of `1.0`; - [x] 	Switched sto-3g and 3-21G DF fitting basis sets to def2-SVP; - [x]	Reword castup basis logic; - [x] **python 3 compatible**, now with testing!; - [x] numpy interface updates; - [x] effectively re-enable threaded MKL (build issue); - [x] reenable mostly static linked build; - [x] externals installed to `external/` not `external/{pkgname}`. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/486:693,update,updates,693,https://psicode.org,https://github.com/psi4/psi4/pull/486,2,"['install', 'update']","['installed', 'updates']"
Deployability,## Description; Provide documentation for a soon-to-follow PR from Lori that will fix the Ca basis for cc-pCV5Z. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Add notes on why we are updating the file; * **User-Facing for Release Notes**; - [x] Clarify a couple of points in the user manual regarding custom basis sets (came across this while I was testing the fixed basis). ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/781:291,Release,Release,291,https://psicode.org,https://github.com/psi4/psi4/pull/781,1,['Release'],['Release']
Deployability,"## Description; Provides a remedy for [#909](https://github.com/psi4/psi4/issues/909). `Molecule::mass` and `Molecule::Z` show inconsistent behavior for ghosts. This PR requires a new argument `bool zero_ghost` on the C++ side and optionally in the Python layer which gives a choice for behavior. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Required C++ argument `bool zero_ghost` for `Molecule::mass`; - [x] Optional python argument `bool zero_ghost` for `Molecule::mass`; - [x] Required argument `bool zero_ghost` for `Molecule::Z`; - [x] Optional python argument `bool zero_ghost` for `Molecule::Z`; - [x] Optional C++ argument `bool zero_ghost` for `Molecule::center_of_mass`; - [x] Optional C++ argument `bool zero_ghost` for `Molecule::inertia_tensor`; - [x] Check all C++ calls for ""intended behavior""; * **User-Facing for Release Notes**; - [x] New optional python arguments for `Molecule.mass()` and `Molecule.Z()`. ## Questions; - Each file changed on the C++ side needs to be passed either `True` or `False`. I'm defaulting to previous behavior in all cases except `optrot.cc` where I know functionality should change. ; - ""Previous behavior"" is that `mass` returns non-zero for ghost atoms (equivalent to `zero_ghost = false`), and `Z` returns zero for ghost atoms (`zero_ghost = true`). This behavior may want to be changed in some places, so this is a good time for a logic pass-through. . ## Checklist; - [x] Add argument for `mass`; - [x] Add argument for `Z`; - [x] Tests; - [x] Docs. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/990:901,Release,Release,901,https://psicode.org,https://github.com/psi4/psi4/pull/990,1,['Release'],['Release']
Deployability,"## Description; Provides users the ability to form a basisset composed of two combined basissets, the two can be combined simply or through use of the complementary auxiliary basis set (CABS) approach of Valeev et al. ## Dev notes & details; - [X ] Uncomments `pyconstruct_combined` in qcdb with minor changes to fit updated python; - [X ] Changes input to `build_ri_space` in OrbitalSpace to require a prebuilt combined `BasisSet` object; - [X ] Changes `build_cabs_space` in OrbitalSpace to use a full SVD; - [X ] Adds pytest `test_orbitalspace.py` to check orthonormality between orbital basis set and CABS; - [X ] Adds updated F12 basissets from the Basis Set Exchange; - [X ] Use of the CABS created works with my F12 plugin giving correct energies. ## Questions; - [ ] Shoud I generalize `_pybuild_basis` aka `BasisSet.build` to work with a list of keys, targets, roles, and other? Or create a new function to more easily access the building of a combined basisset?. ## Checklist; - [X ] `test_orbitalspace.py`; - [X ] Passes quick tests [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2982:317,update,updated,317,https://psicode.org,https://github.com/psi4/psi4/pull/2982,2,['update'],['updated']
Deployability,"## Description; Psi4 ecosystem is growing (good) and spreading (good, b/c psi4 channel isn't a natural home for openfermion, for instance; bad, b/c it's harder to install/test/keep-track-of everything at once). The initial scope of this PR was to set up a GHA that tested as many addons as conda could lay its hands on. Other stuff happened along the way ... ### Highlights for review (link permanence questionable); - [.github/workflows/README.md](https://github.com/psi4/psi4/pull/2454/files#diff-636942e0afa55e1aea027fb857aa2c6046858fb317c0b9a4f12ff3ca17e64ffb); - [.github/workflows/ecosystem.yml](https://github.com/psi4/psi4/pull/2454/files#diff-9886b1fe077112c3a9952964ed992dc3cd38b48d0a506a6b7a00241e4669d2b1); - [doc/sphinxman/source/add_tests.rst](https://github.com/psi4/psi4/pull/2454/files#diff-c35e937cac108347811127c527ab39f06b064d399a1eced0714ecdc47d954058); - representative; - [tests/tu1-h2o-energy/test_input.py](https://github.com/psi4/psi4/pull/2454/files#diff-54403c03174a7c69742c46e5553bf1ba9f7d4b855c649eae56ffb0662a0ba50e); - [tests/adcc/formaldehyde-pe-adc1/test_input.py](https://github.com/psi4/psi4/pull/2454/files#diff-58c0e6c9056f03a206a5b10c17a465c7931c41d6a9c6c8d7e434adca515084d0); - if you want to read testing docstrings [psi4/driver/p4util/testing.py](https://github.com/psi4/psi4/pull/2454/files#diff-7104dfa29c684b4211ecc2cc6e77479d18570fdadc5a67951d3442e45f462d89); - if you want to read testing code [tests/pytests/addons.py](https://github.com/psi4/psi4/pull/2454/files#diff-93c9a8823b9fa2f85a114c39cd0d17d6c66e4cb93aa00189785ff8040d3169b3). ## Todos. - CI; - [x] read [.github/workflows/README.md](https://github.com/psi4/psi4/pull/2454/files#diff-636942e0afa55e1aea027fb857aa2c6046858fb317c0b9a4f12ff3ca17e64ffb); - [x] current readings are below (fail/pass/skip/uncollected/xfail/xpass/warnings) for `pytest -m ""addon and not long""`; - L: -/244/ 10/3229/4/4/303; - M: -/229/ 25/3229/6/2/304; - W: -/144/112/3229/2/4/303; - skipped on Linux are things like ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:163,install,install,163,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['install']
Deployability,"## Description; Psi4 is currently using the RMS norm to check for wave function convergence. However, it's well known that the RMS norm isn't as robust as the absolute error in some pathological cases: even though the RMS error is small, you may still have significant gradients for a few orbitals. This PR implements the maximum absolute norm for DIIS in SCF calculations, which can be toggled by setting ```DIIS_RMS_ERROR false```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Implemented absolute error criterion for DIIS. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1460:387,toggle,toggled,387,https://psicode.org,https://github.com/psi4/psi4/pull/1460,1,['toggle'],['toggled']
Deployability,"## Description; PsiAPI docs. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Won my battle with nbsphinx on at least one computer (sadly, not the one we build docs on). So now we have @dsirianni's Jupyter PsiAPI tutorial alongside the longstanding Psithon tutorial. Also added a few PsiAPI variations to the input format page.; - [x] Review this without looking at the third commit. The ""update samples"" will just interfere.; * **User-Facing for Release Notes**; - [x] Add docs for PsiAPI. ## Questions; - @dsirianni, the small caps and the ``[`psi4.geometry()`](http://psicode.org/...)`` didn't work once sphinx had had its way. So switched to what you see now. Feel free to tidy up further. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/637:455,update,update,455,https://psicode.org,https://github.com/psi4/psi4/pull/637,2,"['Release', 'update']","['Release', 'update']"
Deployability,"## Description; Pulls in the C, CXX, and Fortran compiler flags from Psi4, this includes additional compiler flags the user provided in their initial cmake call, and passes them to the new plugin's CMakeLists.txt file. Need people to test to ensure all the needed flags are being obtained. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [ ] User provided Psi4 compiler flags are passed to new plugins. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/543:393,Release,Release,393,https://psicode.org,https://github.com/psi4/psi4/pull/543,1,['Release'],['Release']
Deployability,## Description; README.md updates. ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1074:26,update,updates,26,https://psicode.org,https://github.com/psi4/psi4/pull/1074,1,['update'],['updates']
Deployability,## Description; Raises exception to address #1045. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1048:196,Release,Release,196,https://psicode.org,https://github.com/psi4/psi4/pull/1048,1,['Release'],['Release']
Deployability,"## Description; Rebase through of qcel v0.4.0 (not yet released). ## Todos; - [x] moved `tests/pytest` to `tests/pytests` so latter can be a module w/o confusing ""import pytest""; - [x] migrated to use which, which_import, parse_version from qcl; - [x] removed alignment code that migrated to QCElemental. - [x] derived testing fns from qcel, rather than scattering and duplicating in psi4/qcdb; * there's two conflicting APIs going on:; * Psi4: `compare_something(expected, computed, significant_digits, label, verbose=1)`; * QCEl: `compare_something(expected, computed, label=None, atol=1.e-6, quiet=False)`; * and there's two sets of fn names:; * Psi4: `compare_integers`, `compare_strings`, `compare_arrays`, `compare_values`, `compare_matrices`; * QCEl: `compare` (for exact comparison scalars or np-castable arrays), `compare_values` (for floating point comparison scalaurs or np-castable arrays), `compare_recursive` (for iterables containing any of the previous); * Basically, now in psi4 or qcdb, you can use the qcel fns and the psi4 fns and the psi4 API or the qcel API. And their failure response is localized in a fn that can be switched out. ; * A few highly specialized comp fns (like `compare_molrecs` have been deprecated or psi4 API deprecated, but there should be enough UpgradeHelper guides to raise a problem and suggest solution.; * EDIT: whether using psi4 or qcel APIs, `label` is no longer required -- it'll default to the calling fn name (or `<module>` in a script). - [x] added link to binder image and fix tutorial cmd that didn't work in binder. ## Questions; - [ ] Someone should look at the old/new `compare_matrices` fns to check that the values comparison is still catching any detailed uses of the `^` operator. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1644:55,release,released,55,https://psicode.org,https://github.com/psi4/psi4/pull/1644,2,"['Upgrade', 'release']","['UpgradeHelper', 'released']"
Deployability,## Description; Recent versions of MRCC are able to compute perturbative energies [e.g. CCSDT(Q)] with an ROHF reference wave function. This updates Psi4's interface to allow these methods to be performed. Credit goes to @bzloink for updating the interface. * **User-Facing for Release Notes**; - [x] Perturbative methods using MRCC with an ROHF reference are now supported. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/634:141,update,updates,141,https://psicode.org,https://github.com/psi4/psi4/pull/634,2,"['Release', 'update']","['Release', 'updates']"
Deployability,"## Description; Regenerate samples from tests. No need to examine diff. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2757:205,release,release,205,https://psicode.org,https://github.com/psi4/psi4/pull/2757,1,['release'],['release']
Deployability,"## Description; Rehabilitates Cfour interface. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Interface working again for primary modes (~60 tests). Not yet for `vpt2()`; - [x] Test cases kw-7, kw-8, rohf-mp4 still failing for known reasons; * **User-Facing for Release Notes**; - [x] Cfour interface working again. Recc to use in communication with a developer. Cfour 2.00beta. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/730:330,Release,Release,330,https://psicode.org,https://github.com/psi4/psi4/pull/730,1,['Release'],['Release']
Deployability,"## Description; Relicense from GPL-2.0+ to LGPL-3.0. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; ```; find psi4/ -type f -exec sed -i '' 's/GNU General/GNU Lesser General/g' {} \;; find psi4/ -type f -exec sed -i '' 's/[Tt]his program/Psi4/g' {} \;; find psi4/ -type f -exec sed -i '' '/(at your option)/d' {} \;; find psi4/ -type f -exec sed -i '' 's/; either version 2 of the License, or/, version 3./g' {} \;; find psi4/ -type f -exec sed -i '' $'s/ * Psi4 is free software/ This file is part of Psi4.\\\n *\\\n * Psi4 is free software/g' {} \;; ```; * **User-Facing for Release Notes**; - [x] Relicense from GPL-2.0+ to LGPL-3.0. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/690:639,Release,Release,639,https://psicode.org,https://github.com/psi4/psi4/pull/690,1,['Release'],['Release']
Deployability,"## Description; Remove deprecated and unused `NBOWriter`, several versions late. I'm assuming this isn't worth any release notes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2856:115,release,release,115,https://psicode.org,https://github.com/psi4/psi4/pull/2856,1,['release'],['release']
Deployability,## Description; Remove some unused files. Bump qcel -- the 0.19 isn't strictly needed but it'll avert some bad qcel+pydantic combinations in the wild. Bump v2rdm -- @hokru noticed an incompatibility after #2100 . . ## Questions; - [ ] May as well wait on this PR until determine if safe to update reference of fchk+dct test. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2128:290,update,update,290,https://psicode.org,https://github.com/psi4/psi4/pull/2128,1,['update'],['update']
Deployability,"## Description; Removes cc46 from ctest temporarily to keep full tests passing. There is no major bug here, rather a bunch of conflicting logic in the `run_cc_property` driver that will be patched before final release. . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1002:189,patch,patched,189,https://psicode.org,https://github.com/psi4/psi4/pull/1002,2,"['patch', 'release']","['patched', 'release']"
Deployability,"## Description; Repercussions from trying to fix #1986 . I think this fixes #1939, fixes #1978, fixes #2011. ## Todos; - [x] standardize pytests on `@using(""<addon>"")` rather than `@using_<addon>`. addon detection is more runtime than compiletime; - [x] start a smoke tests suite of running through `psi4 --qcschema` to live alongside psithon and psiapi; - [x] finally fix the need for pe/pcm to manually set fix_com/fix_reorient. I have a strategy locally.; - [ ] expand `Mol._initial_cartesian` to other ways to construct a Mol; - [x] snsmp2 1.0.4; - [x] pybind11 2.6.1; - [x] pcmsolver ~1.3.?~ 1.3 having some numerical issues with psi, so going back to a patched v1.2.1. ## Questions; - [ ] Opening the discussion to how to deal with methods that needs no_com/no_reorient/symmetry c1 _from_the_beginning_. Many of our present symmetry tolerant methods just need their parts consistent (e.g., dimer, monoA, monoB); whereas, cppe needs the exact input Cart to match the potfile. (Fun fact: a Mol can go from fix_com T -> F but not the reverse.) The sol'n in this PR is to carry the input Cartesians along as `Mol._initial_cartesians` (so long as not a variable or zmat Mol), which can then be used to reset through `set_geometry()` if the method demands it. This member is akin to the `Mol.EFP` object that gets carried along. Presently this is implemented for just the molecule constructors that psithon/psiapi `psi4.geometry()` and qcsk `Mol.from_schema()` use, but should probably be expanded if adopted. Thoughts on whether this is the best way to solve the problem?; - [ ] @robertodr PCMSolver: I'm only imposing c1, not fix_com/orient based on your slack reply. ok? I've removed all those lines from your ctest and pytest examples (except for alpha that needed it for matching). There's a new pcm mode test in test_addons_qcschema.py. It's writing the input file for pcm input, which is a little questionable in the schema-running world, but it's working for now. Any concerns?; - [ ] @maxsche",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037:659,patch,patched,659,https://psicode.org,https://github.com/psi4/psi4/pull/2037,1,['patch'],['patched']
Deployability,"## Description; Replace char** irrep_labels() with std::vector<std::string> irrep_labels(); Convert with .c_str() when needed in print statements.; Remove calls to free(); Removed calls to delete in dcft_scf_UHF.cc. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Part of the change to std::string; * **User-Facing for Release Notes**; - [ ] None. ## Status; - [ ] Test jobs cc1, dfmp2-1, scf-occ all passed, and Irrep labels printed were the same as the reference.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/780:386,Release,Release,386,https://psicode.org,https://github.com/psi4/psi4/pull/780,1,['Release'],['Release']
Deployability,"## Description; Requiring libefp was rather a holdover from the early days of code-in-repo add-ons. This PR makes it slightly easier on packagers and enables us to have only three required compile-in dependencies in the figure in the paper (libint, blas/lapack, pybind11). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `#ifdef`-ing the EFP code probably could have been done to varying degrees of thoroughness. But since EFP is tied into `P::e` _and_ Molecule _and_ it's own interface, none of which I wanted to rexamine, this is the one that requires a minimum of recompilation if you change `ENABLE_libefp` ON/OFF. When OFF, the EFP object still exists, but only the constructor, destructor, and nfragments method (that returns 0 fragments). This way the driver needs no mods (which is a good thing, since we can't `#ifdef` python).; - If you build w/o libefp and try an efp-containing molecule, throws a runtime error with text `EFP fragments detected but are not available`.; - [x] slight fix of passing `pybind11_DIR` to plugin cache. helps with mixed install/staged psi4/pybind11. we'll see how this goes, as I'm not sure it's the best fix.; - [x] more thoroughly test cmake variable for PCMSolver path (`if ""@ENABLE_PCMSolver@"".upper() in [""1"", ""ON"", ""YES"", ""TRUE"", ""Y""]`); - Hope this helps a bit on packaging, @susilehtola ; * **User-Facing for Release Notes**; - [x] Psi4 can be build without libefp add-on. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/623:1126,install,install,1126,https://psicode.org,https://github.com/psi4/psi4/pull/623,2,"['Release', 'install']","['Release', 'install']"
Deployability,"## Description; Rewrite of CCHBAR's Wabei algorithm for UHF reference. The old algorithm did quite a bit of unnecessary I/O. The replacement has been designed to compute as many sub-intermedates in the target order to avoid storage of additional intermediate terms, and to avoid expensive sorting of ov^3 buffers. . ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] TDC has requested I take any integral sorts that were required within the Wabei_XXXX functions and move them to some setup function so that they are all preformed before any of the functions run. ; - [x] I also need to remove the first commit that I added from #513 that let me build + run on our cluster. ; * **User-Facing for Release Notes**; This change results in a performance boost, but no end-user changes should be noticed. . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/540:759,Release,Release,759,https://psicode.org,https://github.com/psi4/psi4/pull/540,1,['Release'],['Release']
Deployability,"## Description; See #2608 for background. Fixes #2608. Recent emphasis has been on Cfour through QCEngine or QCDB, so the Psi4/Cfour test suite likely hasn't been checked since pre v1.4. Nevertheless, for things like cbs, Psi4/Cfour is still the right choice. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switching away from `molecule = geometry()` in `interface_cfour.py` below isn't strictly necessary, but it helps with some import stuff in a future PR; - [x] The main thing that the distributed driver broke is that non-set basis sets get set as `(auto)`, so the interface needed to learn that was the same as unset. Also, there isn't the continuous storage of qcvars in `P::e`, so those need to be reloaded from ""wfn"".; - [x] interface used to allow gradients with ghost atoms. dropping that here, but I did implement it in qcdb and qcengine.; - [x] it looks like I hacked up the tests until they passed. broadly, this is true, but removed things are singles and same- and opposite-spin energies. harvesting all these values is tested far more extensively and carefully now over at qcdb than here, so I am not discomfited.; - [x] all psi4/cfour tests pass. ## Checklist; - ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2615:705,continuous,continuous,705,https://psicode.org,https://github.com/psi4/psi4/pull/2615,1,['continuous'],['continuous']
Deployability,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3234:187,release,release,187,https://psicode.org,https://github.com/psi4/psi4/pull/3234,1,['release'],['release']
Deployability,"## Description; Since #582, presumably, all the skeleton plugins that we check out and build from template have actually been using the same, `basic`, template. The adding to ctest bit wasn't working either. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Now we have the compacted code of #582 _and_ the testing functionality of pre- #582 .; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/624:430,Release,Release,430,https://psicode.org,https://github.com/psi4/psi4/pull/624,1,['Release'],['Release']
Deployability,## Description; Small timer mistype in VV10 NL correlation. I patched this up and added a (faster) test to the quicktests suite so that we also check VV10 in CI. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/889:62,patch,patched,62,https://psicode.org,https://github.com/psi4/psi4/pull/889,1,['patch'],['patched']
Deployability,"## Description; So all the build docs on the wiki are indeed deprecated as they announce. But all the rest of the docs are of varying levels of value and states of deprecation. This collects the ones that really shouldn't be lost. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Starts a programmers FAQ; - [x] Collects orbital naming and options naming items; - [x] Collects BLAS/LAPACK usage docs; - [x] Collects the C-style notes that RDR assembled in psi4/psi4#836 comments; * **User-Facing for Release Notes**. ## Questions; - [ ] BLAS/LAPACK docs need some editing, as they refer to old ways like `init_array` and `block_matrix`. I'd fix `em up into `Matrix`, but there's another section on `Matrix` + BLAS, so didn't want to duplicate.; - [x] @jturney, you can use, build on, renovate, or ignore any of this, but the options naming section does have to make it into the docs before the Wiki is archived and turned off.; - [x] @jturney, there may be more goodies, particularly in https://github.com/psi4/psi4/wiki/BestPractices that you want to collect. I think that doc originated back in the TRAC days. ## Status; - [ ] Ready to go. Should have BLAS edited before merge. I've no more plans to work on it, so in that sense, ready for review.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/848:566,Release,Release,566,https://psicode.org,https://github.com/psi4/psi4/pull/848,1,['Release'],['Release']
Deployability,"## Description; Solve #1462 by creating both big-endian and little-endian quadrature data files, then installing the proper one via cmake. Will probably fail cross-compile, but I don't know of such cases. ## Checklist; - [ ] no big endian machine to test on. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1464:102,install,installing,102,https://psicode.org,https://github.com/psi4/psi4/pull/1464,1,['install'],['installing']
Deployability,"## Description; Some PCM related updates/fixes that were enabled after the move of SCF to Python. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Tests ROHF with PCM. Close #999 ; ~- [ ] Do gradients with PCM semi-numerically [à la ECP](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L2095-L2132), see https://github.com/psi4/psi4/issues/402#issuecomment-386149151~ **Probably for 1.4**. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1327:33,update,updates,33,https://psicode.org,https://github.com/psi4/psi4/pull/1327,1,['update'],['updates']
Deployability,"## Description; Some Psi4-side fixes to getting @bennybp's simint AddOn added. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Includes all commits of #533 ; - [x] Temporarily based off private repo https://github.com/loriab/simint branch config6 until the integration settles down, and we can return to tarballs. Note that if you want to test this branch, you may need to supply your GH credentials during the build to clone simint.; - [x] Adds all the pre-built detection, target referencing, docs, standardized variable names, tests that we expect from an addon to simint; - [x] Continued general documentation on addons.; - [x] Modestly tested- static and dynamic on Linux, dynamic on Mac; * **User-Facing for Release Notes**; - [x] New integral library available with `-DENABLE_simint`. ## Questions for @bennybp ; - [ ] There's some questions in external/upstream/simint/CMakeLists.txt; - [ ] I've made the simint on my acct private and just added you and some core developers who may want to test it. If you don't mind it being public, as a temp repo, that'd be a little easier.; - [ ] There are spots where I supply at most separate home, docs, and source links for addons. I've got your website, http://www.bennyp.org/research/simint/, for all three at the moment, so let me know if there are more specifics.; - [ ] I filled in the installing and configuring sections of simint.rst according to the template. Other addons (http://psicode.org/psi4manual/master/interfacing.html) often have middle sections about interacting with the code. Fill in anything you like.; - [ ] Got the following unexpected failing test cases on Linux and partially confirmed on Mac, all segfaulted. Could you take a look? None are in quicktests.; ```; The following tests FAILED:; 	 16 - cbs-xtpl-wrapper (Failed); 	144 - dft-b2plyp (Failed); 	269 - pywrap-checkrun-rhf (Failed); 	270 - pywrap-checkrun-rohf (Failed); 	271 - pywrap-checkrun-uhf (F",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625:324,integrat,integration,324,https://psicode.org,https://github.com/psi4/psi4/pull/625,2,"['Release', 'integrat']","['Release', 'integration']"
Deployability,"## Description; Stops overwriting DFT energy by D3 energy only. I am not sure how to test for this, as the gradients as well as geometries with and without the patch agree to 8 DP's. I only noticed it when using the `vibrational_analysis(wfn)`, as there the current total energy plays a role... ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Resolves #1356. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1470:160,patch,patch,160,https://psicode.org,https://github.com/psi4/psi4/pull/1470,1,['patch'],['patch']
Deployability,"## Description; Substitute some int by size_t, and introduces (size_t) casts wherever multiplication of integers seemed problematic. ## Todos; * **Developer Interest**; - [x] Integer declarations in all .h files in libsapt_solver have been examined and the ones that could potentially generate overflows were converted to size_t. Probably some overkill there.; - [x] Searched the whole source in libsapt_solver for a regex representing 4 variables being multiplied, to find all the occ*vir*occ*vir that are bound to overflow. Added (size_t) cast for those that were missing it. ## Questions; - [ ] This originated in a problem reported by a user on the forum. I can't run Psi4 on good enough hardware to actually test the patch on a large system. Anyone want to give it a try ? Or do we let the user test it ?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/619:722,patch,patch,722,https://psicode.org,https://github.com/psi4/psi4/pull/619,1,['patch'],['patch']
Deployability,"## Description; Suggestion for #1711; Moves the `nmo` table to a place after the orbital guess, so that it actual contains all the information. Adds a reduced `nmo` table for SAD together with a note that no occupations are available. _Formatting details up to debate_. Perhaps especially the placement of the `Pre-Iterations` line. Edit: See updated examples in thread below. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1713:343,update,updated,343,https://psicode.org,https://github.com/psi4/psi4/pull/1713,1,['update'],['updated']
Deployability,## Description; Switch to adcc main channel and update the fallback version downloaded from github. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1827:48,update,update,48,https://psicode.org,https://github.com/psi4/psi4/pull/1827,1,['update'],['update']
Deployability,## Description; Switches off a few dependancies until they can be updated on the conda channel. Travis CI is hitting time limits fairly frequently when building these. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/930:66,update,updated,66,https://psicode.org,https://github.com/psi4/psi4/pull/930,1,['update'],['updated']
Deployability,"## Description; TDSCF/ADC and EOM can't agree on how to name variables for excitation energies. Per discussion between Lori and I, this moves the TDSCF variable names to the new standard, as I see it. This PR is not complete and is submitted for feedback from the excited-state gurus, who are likely to have strong opinions: @loriab @robertodr @lothian @maxscheurer . To demonstrate the changes, consider the example file I added. Old code would write the second transition as ""TD-HF ROOT 0 -> ROOT 2 EXCITATION ENERGY - B2 SYMMETRY"". The new code replaces that with three new psivars:. - TD-HF ROOT 0 (B1) -> ROOT 0 (B2) EXCITATION ENERGY; - TD-HF ROOT 0 -> ROOT 2 EXCITATION ENERGY; - TD-HF ROOT 0 -> ROOT 2 EXCITATION ENERGY - A2 SYMMETRY. We have one access call that requires the symmetries of initial and target states and the indices of both _within their irreps_. We have one access call that requires no symmetry information and just requires the index of the states _among all irreps_. The last access call is like the second, but adds on the symmetry of the _transition_. **This is a breaking change** because old code instead used the symmetry of the final state. After coding this all up, I'm inclined to remove the last access call. The original reason for keeping it up was consistency with the current way TDSCF operates, but it's still inconsistent, per the last paragraph. I'll add docs once we're settled about the new naming conventions. Once this PR is in, the other modules will need to update to the new style. ## Questions; - [x] Opinions on the new variable names?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2462:1509,update,update,1509,https://psicode.org,https://github.com/psi4/psi4/pull/2462,1,['update'],['update']
Deployability,"## Description; Test case cc46 was removed after it was noticed to be failing (#1002 ), it was determined that the failure was not indicating a bug, so it was temporarily removed so pre-release pakages wouldn't be reporting a failure. This PR reactivates the test with modifications so that it is passing again. . * **Developer Interest**; - cc46 checks GS and excited state Dipole/Quadrupole components against reference values generated by psi. ; - Was failing because calling `properties=['oscillator_strength']` prior to #995 was the only way to force ccdensity to make a call to OEProp for each excited state. Post #995 this does not compute one electron properties for excited states so the computed values were all zero.; - Correcting the driver call `properties=['dipole','quadrupole']` is not enough; - The test values were generated using `oscillator_strength` which triggers EOM/Lambda convergence thresholds to be reduced.; - The computed values are 'too good' and comparison with the older reference values fails in the 4th decimal place for some quadrupole components of excited states.; - *Final Solution*; - I dropped the convergence thresholds manually in the test-input to what the were set to by the driver at the time that the reference data was generated. . Side Note:; - Personally I don't think the savings achieved by this over ride of the convergence thresholds are significant enough to justify potentially confusing situations. ; - If a user sets those values manually and requested `oscilator_strength` and/or `rotational_strength` the user-set values are overridden.; - Commenting out the [relevant lines](https://github.com/psi4/psi4/blob/72c30b536201a25171fa6426c8f319e2abdbb1cb/psi4/driver/procrouting/proc.py#L2647-L2649) all cc tests still pass. Including this one (with my changes). ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for rev",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1070:186,release,release,186,https://psicode.org,https://github.com/psi4/psi4/pull/1070,1,['release'],['release']
Deployability,"## Description; The CdSalcList code is made fully accessible to the Python layer, per #884. This code does that and makes a few other changes to clean up code I found while trying to write the documentation for Pybind. Pinging @loriab and @dgasmith by request. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Moves the factory argument from the CdSalcList constructor to an argument of the method that uses it, getting rid of several null pointers and also meaning that a list of displacements no longer needs to care about orbital irreps.; - [x] Adds missing `const` declarations; - [x] The documentation no longer tells developers to use the non-existent SimpleMatrix class; - [x] Other misc. cleanup, from removing an overloaded term to simplification; * **User-Facing for Release Notes**; - [x] Exposed `CdSalcList` to Python; - [x] Made the needed irreps for Cartesian displacements more readable. ## Questions; - [x] ~~I am playing with reworking the print function. needed_irreps displays as an integer, so that part of the output is unintelligible to people who do not know that it is internally a bitstring. Would this be worth changing?~~ Changed!. ## Status; - [x] Ready to go!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/895:843,Release,Release,843,https://psicode.org,https://github.com/psi4/psi4/pull/895,1,['Release'],['Release']
Deployability,"## Description; The DFT_CUSTOM_FUNCTIONAL keyword died at some point so I started to examine how to re-enable it (@loriab) and I was also bugged about HF-3C gradients (@bwb314). Luckily it turns out I had already done most of the work at some point (I have 3 more of these branches apparently that I need to merge). Basically this works finishes the movement of trying to distinguish between DFT and SCF where SCF is now a very basic DFT ""functional"". This could lead towards ""functionals"" being just SCF + stuff where the stuff could be XC, PCM, -D, external potentials, etc. . I recall @adabbott is willing to document this. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] SCF is now basically a very vanilla case of DFT; - [x] Adds finite difference Hessians from gradients for -D corrections; * **User-Facing for Release Notes**; - [x] Enables HF-3C gradients and Hessians.; - [x] Tentatively re-enables ip_fitting and other frac procedures; - [x] Remove keyword `DFT_CUSTOM_FUNCTIONAL` in favor of `energy(""SCF"", dft_functional=...)`. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/799:884,Release,Release,884,https://psicode.org,https://github.com/psi4/psi4/pull/799,1,['Release'],['Release']
Deployability,"## Description; The PK(reordered, disk) algorithm was using twice as much memory as it should.; This is due to not deleting integral and disk-space buffers correctly:; * During the pre-iterations the `batch size` buffer that prepares the disk space (""pre-striping"", within `zero_disk`) and used during the SCF for processing the integrals on disk is not released. ; * The `buffer size` buffer that is used to calculate the integrals is not released after the computation is done. Both buffers are actually the same size and effectively lead to a doubling of the memory demand. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] memory leaks in PK(reordered, disk) algorithm addressed; - [x] Likely solution to #1985 . ## Questions; - [ ] Is there a better solution to `AIO->synchronize()` in-between the `zero_disk` operations?; - [ ] Will there be an issue with: https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/PKmanagers.cc#L886 now that `buffer()` returns a reference?. ## Checklist; - [x] ctest -L quick/dft pass; - [x] memory usage on `top` eyeballed like a hawk. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1990:354,release,released,354,https://psicode.org,https://github.com/psi4/psi4/pull/1990,2,['release'],['released']
Deployability,"## Description; The `JK_deriv2` function exists to compute the overlap-derivative-times-TEI part of the right side of the CPHF equation. It's a J-term and a K-like term. with overlap derivative integrals instead of a density.[1] The previous algorithm to do this first computed the alpha spin part in one function call, and then the beta spin part in another function call. This approach was redundant. The first function call had all the intermediates _necessary_ to compute the beta part, but didn't use them. As a result, the function re-computed JK. This PR refactors `JK_deriv2` so it computes both spin cases in a single function call. [1] = There's also a Vx term, but its implementation was both unused and buggy. Now it's just unused. Trying to use it in the _old_ way would be even more redundant. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The UHF hessian algorithm has been slightly adjusted, which should lead to slightly faster computations. Please report any errors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Refactored `JK_deriv2` to compute both spin cases in a single function call.; - [x] Makes UKS LDA hessians much less ugly.; - [x] Makes `JK_deriv2` comply with `compute_Vx`'s expected function signature . ## Checklist; - [x] `ctest -R scf-hess` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2994:941,release,release,941,https://psicode.org,https://github.com/psi4/psi4/pull/2994,1,['release'],['release']
Deployability,"## Description; The `MGGA_MVSh` functional [is aliased to `MVSh`](https://github.com/psi4/psi4/blob/bf9d20fc579995b0bc2c38b749a31c0d6f85c82e/psi4/driver/procrouting/dft/hyb_functionals.py#L326). This is inconsistent with `MGGA_MS0`, `MGGA_MS1`, `MGGA_MS2`, and `MGGA_MVS`. This change adds an alias for `MS0`, `MS1`, `MS2`, and `MVS`, respectively. **EDIT:** Similarly, there are two more functionals with inconsistent naming: PW91 and mPWPW. LibXC refers to these as PW91 and mPW91, respectively, while the mPWPW paper refers to them as PWPW and mPWPW, respectively. Hence, I added an alias of `PWPW` for `PW91`; and an alias of `mPW91` for `mPWPW`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Alias `MGGA_MS0`, `MGGA_MS1`, `MGGA_MS2`, and `MGGA_MVS` to `MS0`, `MS1`, `MS2`, and `MVS`, respectively.; - [x] Alias `PW91` to `PWPW`; and `mPWPW` to `mPW91`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Alias `MGGA_MS0`, `MGGA_MS1`, `MGGA_MS2`, and `MGGA_MVS` to `MS0`, `MS1`, `MS2`, and `MVS`, respectively.; - [x] Alias `PW91` to `PWPW`; and `mPWPW` to `mPW91`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3166:784,release,release,784,https://psicode.org,https://github.com/psi4/psi4/pull/3166,1,['release'],['release']
Deployability,"## Description; The `large-atoms` test was previously sitting around unused, waiting for improved ECPs (see discussion in #2234). This PR renovates that test, checking SCF and DF-MP2 energies and gradients on period 5/6 atoms. . ~~TODO (future PR): after MP2 ECP gradients are validated+enabled, should be added to this test~~ 01/25 update: DF-MP2 gradients now enabled and tested. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Add `test_large_atoms` pytest; - [x] Enable DF-MP2 gradients . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2836:333,update,update,333,https://psicode.org,https://github.com/psi4/psi4/pull/2836,1,['update'],['update']
Deployability,## Description; The added link gives current instructions for how to install Psi4 from source. ## Status; - [X] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/501:69,install,install,69,https://psicode.org,https://github.com/psi4/psi4/pull/501,1,['install'],['install']
Deployability,## Description; The arXiv manuscript detailing the finite-element calculations for the SAP potenials has been published; this PR updates the documentation with the final reference. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1797:129,update,updates,129,https://psicode.org,https://github.com/psi4/psi4/pull/1797,1,['update'],['updates']
Deployability,"## Description; The fcidump.py file writes out 2e integrals by calling fcidump_helper.cc, in the `%28.20E%4d%4d%4d%4d` (cpp) format, and in fcidump.py the additional 1- and 0- electron integrals are written in the `{:29.20E} {:4d} {:4d} {:4d} {:4d}` (Python) format. The whitespace in between the Python format string causes the 1/0e integrals fields to be 1 wider than the 2e integrals, causing problems in reading the file. E.g. in Fortran the 2e integrals can be read normally by `READ(*,'(1X,G28.20E2,4I4)') Z,I,J,K,L`, but will fail to read the 1/0e integrals properly. ## Todos; - [x] Update fcidump.py; - [x] Update fcidump test outputs . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2277:591,Update,Update,591,https://psicode.org,https://github.com/psi4/psi4/pull/2277,2,['Update'],['Update']
Deployability,"## Description; The final removal of the `ERISieve` class, and the culmination of the work in PRs https://github.com/psi4/psi4/pull/2935 and https://github.com/psi4/psi4/pull/2974. This fully, and completely, gets rid of `ERISieve` from Psi4, with `TwoBodyAOInt` now being the class of choice for ERI computations. Note: Now that v1.9 has released officially with ERISieve throwing an UpgradeHelper exception, I am opening this up for review. ## User API & Changelog headlines; - [X] The ERISieve class has been completely removed from Psi4. For previous ERISieve functionalities, the TwoBodyAOInt class should be used instead. ## Dev notes & details; - [X] Gets rid of all occurrences of the `ERISieve` class in Psi4, from build files to UpgradeHelper Python functions to C++ implementation details.; - [X] Slight update of integrals documentation with a better description of what is occurring. ## Questions; N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3009:339,release,released,339,https://psicode.org,https://github.com/psi4/psi4/pull/3009,4,"['Upgrade', 'release', 'update']","['UpgradeHelper', 'released', 'update']"
Deployability,"## Description; The goal of this PR is to expand test coverage of the DFJCOSK and DFJLinK JK subclasses within Psi4 by including their testing within the scf5 test. The scf5 test in Psi4 tests a variety of combinations of SCF_TYPE and SCF reference for singlet and triplet O2. As it were, the COSX and LinK SCF_TYPES were missing from the list of methods analyzed within this test. This PR simply adds COSX and LinK to the list of methods tested in scf5, expanding testing of these two methods beyond what was previously present. NOTE TO REVIEWERS: This PR is a general JK maintenance/cleanup/improvement PR and is independent of the developments occurring regarding CompositeJK and its direct implementation into Psi4. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Adds COSX and LINK to the list of SCF_TYPEs tested in the scf5 test option. ## Questions; - [ ] Is the methodology by which COSX and LinK tested acceptable? Unfortunately, the reference energies used in scf5 are either canonical (i.e., non-DF) or DF, neither of which fully describe the COSX and LINK methods. The approach I took is to compare each COSX and LINK energy to the corresponding canonical energy with an atol of 1E-4. Any feedback on this particular approach to testing COSX and LINK would be appreciated. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768:855,release,release,855,https://psicode.org,https://github.com/psi4/psi4/pull/2768,1,['release'],['release']
Deployability,## Description; The integral overflow problem in the (T) energy code was solved. . ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Feature1; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/706:228,Release,Release,228,https://psicode.org,https://github.com/psi4/psi4/pull/706,1,['Release'],['Release']
Deployability,## Description; The main script (`run_psi4.py` in the source tree or `psi4` when installed) was importing qcelemental before it had a chance to modify the Python search path. If you didn't already have a copy of qcelemental in your Python search path would cause an error. Encountered this on our cluster while trying to run the tests. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1925:81,install,installed,81,https://psicode.org,https://github.com/psi4/psi4/pull/1925,1,['install'],['installed']
Deployability,"## Description; The number of electrons as integrated on the DFT quadrature is printed as ""Post-Iterations"" quantity. Current formatting:; ```; Energy and wave function converged. ==> Post-Iterations <==. electrons on quadrature grid:; NTotal = 2.0000000000 ; deviation = -7.638e-14. Orbital Energies [Eh]; ---------------------. --; electrons on quadrature grid:; Nalpha = 5.9997499893 ; deviation = -2.500e-04; Nbeta = 4.9997504300 ; deviation = -2.496e-04; NTotal = 10.9995004192 ; deviation = -4.996e-04. @Spin Contamination Metric: 2.559910084E-05; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] NTotal/Nalpha/Nbeta electrons are printed as obtained from the grid as a health check; - [x] adds `psivars`: `GRID ELECTRONS TOTAL/ALPHA/BETA`. ## Questions; - [ ] Open to suggestions and opinions for naming and formatting. Especially regarding printing of decimals. ## Checklist; - [x] psivars doc string; - [ ] Tests?. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2001:43,integrat,integrated,43,https://psicode.org,https://github.com/psi4/psi4/pull/2001,1,['integrat'],['integrated']
Deployability,"## Description; The old instability following procedure Trotterized a matrix exponential. Now we compute it (more or less) exactly. Obligatory @susilehtola ping. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Modified the orbital instability following procedure. This should be a minor change for most applications: contact developers if you notice a problem. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Change the algorithm we use to approximate a matrix exponential when instability following from a Trotter approximation to that of the build-in `expm` function.; - [x] Added documentation for the rationale for the orbital rotation step. ## Questions; - [ ] **Warning!** None of our tests cover instability following. I've run a check that the old and new codes mostly agree for the particular instability I'm trying to track. Is this an issue?. ## Status; - [x] Ready for review; - [ ] Ready for merge after discussion",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2758:295,release,release,295,https://psicode.org,https://github.com/psi4/psi4/pull/2758,1,['release'],['release']
Deployability,"## Description; The plan is to switch away from TravisCI Linux builds to Azure for unlimited build minutes, the ability to host more complex pipelines, and to prevent splitting between multiple services. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1752:141,pipeline,pipelines,141,https://psicode.org,https://github.com/psi4/psi4/pull/1752,1,['pipeline'],['pipelines']
Deployability,"## Description; The purpose of this PR is to expose the wavefunction as well as access to all amplitudes from CC to the python side. This has the advantage to sort out the relationship of Wavefunction, CCEnergyWavefunction and CCLambdaWavefunction in a more natural C++ way through inheritance. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] CCLambdaWavefunction inherits from CCEnergyWavefunction to facilitate better runtime access from the python side.; - [x] Setter and getter for all T & L amplitudes are included in the python interface to enable more sophisticated methods in the future, e.g. in the broker from #1057.; * **User-Facing for Release Notes**; - [x] Setter and getter for all T & L amplitudes are included in the python interface to enable more sophisticated methods in the future, e.g. in the broker from #1057. ## Questions; - [ ] Does the more technical details from above (inheritance change and exposing of the amplitudes to python) require more text for the release notes?; - [ ] The python documentation should be automatically built, is there more documentation for this part required?. ## Checklist; - [x] Tests added for any new features (not required as no new functionality added); - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1061:715,Release,Release,715,https://psicode.org,https://github.com/psi4/psi4/pull/1061,2,"['Release', 'release']","['Release', 'release']"
Deployability,"## Description; The purpose of this PR is to implement the first bits and pieces to connect psi to [i-pi](https://github.com/i-pi/i-pi) to enable molecular dynamics simulations with psi. For instance, it would be possible to carry out path integral molecular dynamics simulations such as [in this reference](https://doi.org/10.1039/C4CP05192K) with psi. It would be great to get a first review of the basic idea in the code and I can add some documentation of the above infrastructure after that as well. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Infrastructure to connect to [i-pi](https://github.com/i-pi/i-pi) is included in `broker.py`; * **User-Facing for Release Notes**; - [ ] Infrastructure to connect to [i-pi](https://github.com/i-pi/i-pi) is included (but not yet documented yet). ## Questions; - [ ] Is the dynamic dependency to [i-pi](https://github.com/i-pi/i-pi) to setup the interface on runtime fine? Or would you prefer to have the Client side implementation to have fully here in psi as well? If the latter is the case, this has the disadvantage, that the client side might need adjustments with a new version of i-pi, which is why I left the client implementation in i-pi for now. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057:734,Release,Release,734,https://psicode.org,https://github.com/psi4/psi4/pull/1057,1,['Release'],['Release']
Deployability,"## Description; The purpose of this PR is to integrate with [adc-connect/adcc](https://github.com/adc-connect/adcc/) inside Psi4 and allow Psi4 users to directly run the ADC calculations supported inside adcc. The opposite direction (i.e. using Psi4 SCF results in adcc) is already implemented and working, see the [adcc manual](https://adc-connect.org/calculations.html#general-adc-n-calculations), so this should mainly be an effort of connecting the strings together on the Psi4 side. Currently I am still very much in the planning phase of this PR, thankful for any early pointers or feedback to get me moving in a sensible direction. Since this is my first PR here I still feel a little lost inside the Psi4 source :smile:. My implementation so far hooks into the driver python code of Psi4 and branches out to either `adcc` or the built-in ADC module of Psi4. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Get ADC(2) calculation triggered in adcc from Psi4 (see `adcc_examples` subfolder).; - [x] Allow all ADC variants to be run in Psi4; - [x] Proper error handling of Psi4 SCF references not supported in adcc (symmetry, density-fitting, ...); - [x] Integration of adcc installation into Psi4 build system; - Currently adcc can only be installed via `pip`, but we would love to get `conda` support working on our end.; - [x] Tests and examples; - [x] Test install process; - [x] Documentation. ## Questions; - [x] How to best branch between the builtin module and adcc? The two implementations share some features, but use different approaches to solve ADC, which can in some cases lead to differing results (related to #1033 ); - [x] How to best direct options and configurables from Psi4 and adcc? The current solution I see is to add basically everything to the big `read_options.cc`, which is pretty inflexible and could lead to a lot of duplicated information being necessary. Is there some better way to do this?; - [x] What to do with",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744:45,integrat,integrate,45,https://psicode.org,https://github.com/psi4/psi4/pull/1744,1,['integrat'],['integrate']
