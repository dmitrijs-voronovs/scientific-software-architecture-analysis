quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"Dear all,. I am trying to use the python wrapper with AD tool support. For example I want to use CDiscAdjFluidDriver(options.filename, 1, 3, comm) but it fail and returns there is no AD support for python wrapper. . Do you know how I can solve it ?!. @talbring @tobadavid . Cheers,. reza",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/539:41,wrap,wrapper,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/539,2,['wrap'],['wrapper']
Integrability,"Dear developers,; I am trying to install SU2 v6.2.0 on Ubuntu 16.04 following the [instruction](https://su2code.github.io/docs/Python-Wrapper-Build/) you provided. But it failed with errors. I have installed Swig and mpi4py as you suggested. The command I used:; ```; ./configure --prefix=/home/lab/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-PY_WRAPPER; ```; The SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure. When I run `make -j 24`, the error showed up:; ```; make[2]: Entering directory '/home/lab/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -Wall -I/home/lab/anaconda3/include/python3.7m -I/home/lab/anaconda3/include/python3.7m -I/home/lab/.local/lib/python2.7/site-packages/mpi4py/include -I/home/lab/anaconda3/lib/python3.7/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/lab/SU2/SU2_PY/pySU2/pySU2.i ; /home/lab/SU2/SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[1]: *** [all] Error 2; make[1]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:441: recipe for target 'all-recursive' failed; make: *** [all-recursive] Error 1; ```. Best.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:134,Wrap,Wrapper-Build,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,1,['Wrap'],['Wrapper-Build']
Integrability,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:705,rout,routine,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['rout'],['routine']
Integrability,"Delete dead-code for ""nearfield"" and ""interface"" boundaries",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351:38,interface,interface,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351,1,['interface'],['interface']
Integrability,Dependabot updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2234:0,Depend,Dependabot,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2234,1,['Depend'],['Dependabot']
Integrability,"Description:; With our current mesh, on an 8 node, 32 intel cores per node system, our average CPU utilization per node ranges between 31% and 86%. The interconnect fabric is far from fully utilized in terms of throughput. Memory utilization is not nearly that inconsistent (differences of 2-3x). On a different system, 4 node 128 AMD cores per node, the average CPU utilization per node ranges between 54% and 95%. The same mesh is used in both instances. To Reproduce:; Run a mesh on a multi-node system with different core counts and I expect that you will see varied CPU utilization per node depending on how ParMETIS decided to partition the mesh. System Software Environment:; OS: CentOS7; GCC 7.3.1; MPI: openMPI 3.1.2; SU2 7.0.1 (with modifications so that it can write files and to correct the fixed CL issue). Do you have recommendations on how to improve the decomposition?; Or, if parmetis does not give sufficient options to improve the decomposition result, perhaps change this to a feature request to add ptscotch and/or zoltan support?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307:596,depend,depending,596,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307,1,['depend'],['depending']
Integrability,"Develop branch, fsi_computation.py error using --parallel (with parallel building of the wrapper)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531:89,wrap,wrapper,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/531,1,['wrap'],['wrapper']
Integrability,Disabling the new parallel IO routines for the release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:30,rout,routines,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['rout'],['routines']
Integrability,Divergence when using fluid interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:28,interface,interface,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['interface'],['interface']
Integrability,Doxygen module for python wrapper functions and fixed memory errors,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1922:26,wrap,wrapper,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1922,1,['wrap'],['wrapper']
Integrability,Enable user to change Mach number and Reynolds Number from Python Interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2185:66,Interface,Interface,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/2185,1,['Interface'],['Interface']
Integrability,Error message for missing required inputs in .cfg file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/842,1,['message'],['message']
Integrability,Error message is ony printed for Rank == 0.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/564,1,['message'],['message']
Integrability,"Error messages are only printed for Rank == 0, see the function CBaseMPIWrapper::Error. inline void CBaseMPIWrapper::Error(std::string ErrorMsg, std::string FunctionName){; if (Rank == 0){; std::cout << std::endl << std::endl;; std::cout << ""Error in \"""" << FunctionName << ""\"": "" << std::endl;; std::cout << ""-------------------------------------------------------------------------"" << std::endl;; std::cout << ErrorMsg << std::endl;; std::cout << ""------------------------------ Error Exit -------------------------------"" << std::endl;; std::cout << std::endl << std::endl;; }; Abort(currentComm, 0);; }. This makes sense when the error handler is called collectively, as this avoids a messy output. However, there are quite a few situations where the error handler is not called collectively and therefore the error message is not printed when Rank != 0. Would it therefore be possible to add an additional argument (possibly default argument) to the error handler to inform whether or the call is collective or not?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564:6,message,messages,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/564,2,['message'],"['message', 'messages']"
Integrability,Expose all history outputs via the python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1986:42,wrap,wrapper,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1986,1,['wrap'],['wrapper']
Integrability,Expose mesh deformation (SU2_DEF) and AD gradient projection (SU2_DOT_AD) to the pysu2 Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:94,wrap,wrapper,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['wrap'],['wrapper']
Integrability,Failed to install SU2 by Python Wrapper Build,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:32,Wrap,Wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,1,['Wrap'],['Wrapper']
Integrability,Feature Python Wrapper - Test cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:15,Wrap,Wrapper,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,1,['Wrap'],['Wrapper']
Integrability,Feature Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:15,wrap,wrapper,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,1,['wrap'],['wrapper']
Integrability,Feature error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:14,message,message,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['message'],['message']
Integrability,Feature py wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:11,wrap,wrapper,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,1,['wrap'],['wrapper']
Integrability,Feature sliding interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:16,interface,interface,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,1,['interface'],['interface']
Integrability,Feature turbo interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:14,interface,interfaces,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,1,['interface'],['interfaces']
Integrability,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:370,interface,interface,370,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"First of all, my apologies for the mistake in creating the pull request to the master. Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulations of multi-stage turbines and compressors. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/189:327,interface,interface,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/189,1,['interface'],['interface']
Integrability,"Fix Commands for SOL_FSI, SOL and GEO in SU2_PY/SU2/run/interface.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/579:56,interface,interface,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/579,1,['interface'],['interface']
Integrability,Fix SU2 initialization when using the python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:45,wrap,wrapper,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['wrap'],['wrapper']
Integrability,"Fix multi-physics simulations with ""many-to-many"" interfaces between markers and improve associated communications.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1061:50,interface,interfaces,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061,1,['interface'],['interfaces']
Integrability,Fix spelling errors and y+ warning message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:35,message,message,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,1,['message'],['message']
Integrability,"Fixes #1588; cc @ArneVoss ; I have not fully tested the python wrapper forces, but they should be ok for dimensional simulations.; This is WIP until I add a regression test.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1595:63,wrap,wrapper,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1595,1,['wrap'],['wrapper']
Integrability,For a loosely coupled CHT analysis I need to apply the distributed wall temperature as isothermal wall temperature. Is there any possible way to do it? . I can divide the wall to some dicrete parts and apply average temperature of those nodes but I would prefer to identify each node with a certain temperature. I found a python wrapper which is shared before but do not really understand how to work with it. It could be really nice if you can help me. Thanks in advance.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1722:329,wrap,wrapper,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/1722,1,['wrap'],['wrapper']
Integrability,"From searches in the code of the develop branch, I suspect that the members ; unsigned short *Local_to_Global_Marker{nullptr}; /*!< \brief Local to Global marker. */; unsigned short *Global_to_Local_Marker{nullptr}; /*!< \brief Global to Local marker. */; of CPhysicalGeometry are not initialized anywhere in the code right now. Apart from this, from a comparison with `Global_to_Local_Point` I would infer that `G_to_L_Marker` should be of type `unordered_map<unsigned short, unsigned short>`, depending on the intended functionality of course.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110:495,depend,depending,495,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110,1,['depend'],['depending']
Integrability,Heat Flux computation in Viscous_Forces routine,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/70:40,rout,routine,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/70,1,['rout'],['routine']
Integrability,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:1374,depend,dependency,1374,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,3,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"Hello everyone,. I am starting to work on adding inlet file interpolation capabilities in SU2. I currently have a spanwise PT and TT distribution (r vs PT or TT) for an inlet boundary for a Stator (periodic, turbomachinery case). I want to carry out a spanwise interpolation at the inlet vertices. I can write a program to read an inlet file for a new format (r vs PT or TT). Then I want to 1D interpolate this data against the radii of all the vertices on the inlet face. The best way is to generate a **piecewise 1D interpolation function** that can return the value of the interpolated data at that radius. I have done this before in python using 'interp1D'. I have found the following library for C++ that does have this capability:. http://people.math.sc.edu/Burkardt/cpp_src/pwl_interp_1d/pwl_interp_1d.html. which will require _'The PWL_INTERP_1D test code needs the R8LIB and TEST_INTERP libraries._'. I hope these libraries will be integrated with SU2 without any issue. However, it would be better if I can use some of the built-in interpolation capabilities in SU2 like what I found in 'interpolation_structure.cpp'. I also look forward to extending this capability for 2D interpolation(that is, in r and theta). It would be very helpful if someone who has worked with interpolation before can point to a function that is capable of generating a piecewise interpolation function that could work for my case or can pitch in any idea related to this. Thanks!. @vdweide @clarkpede @economon @juanjosealonso @sravya91 @bmunguia @jayantmukho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791:941,integrat,integrated,941,https://su2code.github.io,https://github.com/su2code/SU2/issues/791,1,['integrat'],['integrated']
Integrability,"Hello, . when using the option INV_DESIGN_CP = YES, COutput::SetCp_InverseDesign is called to set the pressure difference. There is no problem with the allocations of values when running in serial but some problems arise when running in parallel. I haven't debugged it completely but it seems that the storage of the values of iMarker and iVertex in Point2Vertex gets mixed up by the parallel run. This in turn affects the reading of the TargetCp file (and can be checked by running the simulation in serial and in parallel, they should give different results for the Cp_diff in the history file). Also, if the inverse_design_pressure is defined on a boundary (e.g. a wing) but there are other boundaries of the same kind in the domain (e.g. some walls) these are also considered when computing the pressure difference (with a target pressure equal to 0.0) thus affecting the final value of the objective function. I believe this last problem could be solved by placing something like if (config->GetMarker_All_Designing(iMarker) ) == 1) at appropriate locations in the routine. . However, I am having troubles troubleshooting the first problem.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/486:1070,rout,routine,1070,https://su2code.github.io,https://github.com/su2code/SU2/issues/486,1,['rout'],['routine']
Integrability,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:178,depend,dependencies,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,['depend'],['dependencies']
Integrability,"Hello, I'm Minsul. I am struggling to compile SU2-feature_adap branch. My purpose for using the branch is mesh adaptation. But the problem is that whenever I command ./meson.py build,. It shows the error message: meson.build:1:0: ERROR: Value ""c++11"" for combo option is not one of the choices. Possible choices are: ""none"", ""c++98"", ""c++03"", ""gnu++98"", ""gnu++03"". So I tried to edit meson.build file. not c++11 but c++03 or c++98. But I get to know that It is necessary of c++11 to compile SU2_CFD. Is there any one else who can help me solve this problem?. Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2033:204,message,message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/2033,1,['message'],['message']
Integrability,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:46,rout,routine,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['rout'],['routine']
Integrability,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526:634,interface,interface,634,https://su2code.github.io,https://github.com/su2code/SU2/issues/526,3,"['interface', 'message']","['interface', 'message']"
Integrability,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531:366,wrap,wrapper,366,https://su2code.github.io,https://github.com/su2code/SU2/issues/531,3,"['Wrap', 'wrap']","['Wrapper-Build', 'wrapper']"
Integrability,"Hello,. I'm pretty new to python and, in general, to the logic of parallel computation. ; I'm trying to run in **parallel** the routine fsi_computation.py. Even if (as much as I noticed) the parallel computation feature is already built in the structure of the code I'm not able to do it. Moreover, I find the structure of the routine sensitively different than the one of parallel_computation.py in which, for example, I can actually choose the number of processor I can use for the run. Dose anybody know if the feature is actually implemented in fsi_computation.py and, in case, how to set it?. Thanks!. NB: I'm currently using the version of the code provided in the branch **feature_pyWrapper** which, as it was already told me, is the up-to-date version for the the python tools.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457:128,rout,routine,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/457,2,['rout'],['routine']
Integrability,"Hello,. There is a stray allocation in the Integration_Postprocessing routine in line 1804 in the develop branch. Currently reads:. if (template_solver) integration[val_iInst][TEMPLATE_SOL] = new CSingleGridIntegration(config);. instead of delete. Is this resolved in a more recent PR?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792:70,rout,routine,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/792,2,"['integrat', 'rout']","['integration', 'routine']"
Integrability,"Hello,; When using the rotating reference frame option with incompressible flow the code blows up immediately. There appears to be two issues - ; 1. Omega_ref is not initialized in the SetNondimensionalization subroutine in solver_direct_mean_inc.cpp. In the compressible version, it is defined as Velocity_ref/Length_ref whereas no definition exists in the incompressible one.; 2. Since all the definitions of gas constants have been removed from the incompressible routines, using Mach_motion to normalize forces and moments makes them all undefined. . While both the fixes are easy, it might still lead to issues when free stream velocity is zero as Omega_ref is used to normalize grid velocities in SetRotationalVelocity. ; Is it possible to implement a new config option to compute Omega_ref differently and also use it to normalize forces?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/468:467,rout,routines,467,https://su2code.github.io,https://github.com/su2code/SU2/issues/468,1,['rout'],['routines']
Integrability,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/163:224,message,message,224,https://su2code.github.io,https://github.com/su2code/SU2/issues/163,1,['message'],['message']
Integrability,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903:107,wrap,wrapper,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/903,2,"['depend', 'wrap']","['dependency', 'wrapper']"
Integrability,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1116:182,Depend,Dependent,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116,11,"['Depend', 'depend']","['Dependent', 'Depends', 'dependencies', 'dependent-issues']"
Integrability,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/21:469,depend,dependencies,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/21,4,"['depend', 'integrat']","['dependencies', 'integration']"
Integrability,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938:370,message,message,370,https://su2code.github.io,https://github.com/su2code/SU2/issues/938,5,"['interface', 'message']","['interface', 'message']"
Integrability,"Hi Folks,. I would like to collect the views of the community about something (and I apologize if this has been debated already). Context:; Once again I find myself working on a feature that will require a bit of dense algebra.; I think implementing (i.e. paraphrasing from Numerical Recipes...) that kind of routine is a waste of time because someone has done already, and they have done it well.; Moreover, we have a very inefficient implementation of small matrix-like objects (arrays of arrays) and associated operations, which also leads to code bloat due to the required allocation / initialization / destruction. Proposal:; Start using a linear algebra library such as [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page).; For this particular library:; - The learning curve is minimal;; - Their license (MPL2) is less restrictive than SU2's;; - No link time dependencies (it is all header files);; - Compatible with AD (everything is templated);; - I like their logo... I look forward to hear your opinions on this. Best regards,; Pedro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643:309,rout,routine,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/643,2,"['depend', 'rout']","['dependencies', 'routine']"
Integrability,"Hi `su2code/SU2`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request —",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:129,integrat,integrated,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,['integrat'],['integrated']
Integrability,"Hi all, hi @rsanfer,. I get a segfault when running SU2_SOL on problems with multiple Zones for the develop branch. Specifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:501,rout,routine,501,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,1,['rout'],['routine']
Integrability,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994:169,message,message,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/994,1,['message'],['message']
Integrability,"Hi all,. I noticed problems when using multiple inlet files: At the template values were mixed between the inlets because there is a (in my eyes) superfluous `sort` done. So the problem is just with the template-writing and would not happen if alphabetical and nMarker_all order between the inlet marker_tags were identical. This PR fixes this, at least for the tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -We",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:655,rout,routine,655,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,1,['rout'],['routine']
Integrability,"Hi all,. I'm new to CFD and SU2. I'm trying to modify the c++ code to add a time-dependent mach in the compressible Euler equations (SU2 Solver: EULER) for a rocket head cone design. At about line 786 of the CEulerSolver.cpp, I want to have a slight numerical change in its mach, for example, a sine function. After I saw the example of the Adding Custom Source Terms to Euler Equations I modified the code like this:. ```; const auto dt = config->GetDelta_UnstTimeND();; su2double time = config->GetTime_Step() * dt;; su2double Alpha = config->GetAoA()*PI_NUMBER/180.0;; su2double Beta = config->GetAoS()*PI_NUMBER/180.0;; const su2double MachValue = config->GetMach();; su2double Mach = 2 * MachValue + 0.01 * sin(2 * PI_NUMBER * time);; ```. But during postprocessing I noticed that Mach becomes 2 * MachValue + 0 as the ""time"" could not be updated to the series of 0, 1, 2, 3, 4... So I'm wondering how I can build a mach that could change over time. I'm not sure what kind of syntax I should be using or how exactly to implement this mach term. . I am using SU2 7.3.1. Thank you so much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:81,depend,dependent,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,1,['depend'],['dependent']
Integrability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:551,rout,routines,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,3,['rout'],"['routine', 'routines']"
Integrability,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524:134,message,message,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/524,1,['message'],['message']
Integrability,"Hi all: . I'm running a time-dependent problem and need to screen output the current time and time step. I use ; ""SCREEN_OUTPUT = CUR_TIME, TIME_STEP"" .. command in the config file for the time discretization of ""TIME_DISCRE_FLOW= EULER_EXPLICIT"" for ""NAVIER_STOKES"" and ""NEMO"" solvers, and it prints out just **ZERO** for both solvers:; ....; | 6907| 0.0000e+00| 0.0000e+00|; | 6908| 0.0000e+00| 0.0000e+00|; | 6909| 0.0000e+00| 0.0000e+00|; | 6910| 0.0000e+00| 0.0000e+00|; | 6911| 0.0000e+00| 0.0000e+00|; | 6912| 0.0000e+00| 0.0000e+00|; | 6913| 0.0000e+00| 0.0000e+00|; ....; Any suggestion and help is greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1681:29,depend,dependent,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/1681,1,['depend'],['dependent']
Integrability,"Hi everyone,. When I try to run an equivalent area calculation for a supersonic aircraft, I'm unable to obtain any results. . EQUIV_AREA= YES. EA_INT_LIMIT= ( 0, 35, 0.5 ). EA_SCALE_FACTOR= 1.0. FIX_AZIMUTHAL_LINE= 90.0. Here are the options I'm using. Are the integration limits dimensional or non-dimensionalized? How do I obtain an output equivalent area as a function of x, as in the figure below (taken from ""Adjoint-based method for supersonic aircraft design using equivalent area distributions"" by Palacios et al)?. ![image](https://user-images.githubusercontent.com/16397216/56650567-ef7b0f80-66a4-11e9-85a7-a7ec229174a6.png). The only mention of equivalent area in the output is in the history.csv file and it looks like this.; ![SU2_EQ_AREA](https://user-images.githubusercontent.com/16397216/56650782-60bac280-66a5-11e9-84f9-65c2eb582142.png). Can someone tell me where I'm going wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/673:261,integrat,integration,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/673,1,['integrat'],['integration']
Integrability,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:362,interface,interface,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,3,['interface'],['interface']
Integrability,"Hi!. I hope you can answer this question, because it's basically what I need for checking if I can use SU2 for my simulations or not, and I'd rather look for other CFD codes if this is not currently implemented in SU2:. I need to run a case (over time, unsteady, or steady for each timestep) for an incompressible natural convection lid-driven cavity in 3D, where the values of the BCs change for each timestep. . This test has no inlets, but it has a speed BC for the lid at the top, and BCs for the walls as well. The (time-dependent) unit vector and magnitude of the speed for the lid is tabulated, for each timestep, on a external file. The (time-dependent) temperature at each point in each wall is also tabulated, for each point in the walls and for each timestep, on a external file. So the question is: Can SU2 currently import data like this? I only saw this feature for inlets, but not for other types of BCs... is it implemented, or not?. Thanks a lot! As I said at the beginning, it will help me a lot to know if this is possible, so that I look elsewhere if it's not!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973:526,depend,dependent,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/973,2,['depend'],['dependent']
Integrability,"Hi, . I am trying to use SU2-pyamg on the server and got some errors. Let me ask some questions.; My issue is related to that in the #948. Actually, I am in the situation very similar to [https://github.com/su2code/SU2/issues/948#issuecomment-619332650](url) :. > ```; > Traceback (most recent call last):; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/mesh_adaptation_amg.py"", line 38, in <module>; > import SU2; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:666,interface,interface,666,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,2,['interface'],['interface']
Integrability,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:789,MESSAGE,MESSAGES,789,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,5,"['MESSAGE', 'interface', 'message']","['MESSAGES', 'interface', 'message']"
Integrability,"Hi, . I've got an issue where on starting an SU2 6.2.0 Falcon case, the preprocessing steps run but then the output gets stuck at:. ```; ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0; ```. - and remains frozen there until I kill the job. . It seems to have happened for only 3 out of nearly 400 successful cases. They are all similar, running Euler at Mach 1.7, on 40 cores. They all have similar simple body, farfield, and and symmetry conditions. I'm not sure of the best way to diagnose this, so any guidance would be appreciated. Many thanks and kind regards, ; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907:167,Interface,Interface,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/907,1,['Interface'],['Interface']
Integrability,"Hi, I want to build SU2 from source because I need python wrapper.; After I configured, I tried to type ""make"" to install it.; But I found an error:. ```; ......; CC libparmetis/libparmetis_a-serial.o; CC libparmetis/libparmetis_a-stat.o; CC libparmetis/libparmetis_a-timer.o; CC libparmetis/libparmetis_a-util.o; CC libparmetis/libparmetis_a-wave.o; CC libparmetis/libparmetis_a-weird.o; CC libparmetis/libparmetis_a-wspace.o; CC libparmetis/libparmetis_a-xyzpart.o; AR libparmetis.a; ar: `u' modifier ignored since `D' is the default (see `U'); make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/parmetis'; Making all in cgns; make[2]: Entering directory '/home/xxx/SU2-7.3.0/externals/cgns'; CC libcgns_a-cgns_error.o; CC libcgns_a-cgns_internals.o; CC libcgns_a-cgns_io.o; CC libcgns_a-cgnslib.o; In file included from cgns_error.c:24:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:430: libcgns_a-cgns_error.o] Error 1; make[2]: *** Waiting for unfinished jobs....; In file included from cgns_io.c:43:; cgns_io.h:32:10: fatal error: cgnstypes.h: No such file or directory; 32 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:458: libcgns_a-cgns_io.o] Error 1; cgns_internals.c:30:10: fatal error: cgnsconfig.h: No such file or directory; 30 | #include ""cgnsconfig.h""; | ^~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:444: libcgns_a-cgns_internals.o] Error 1; In file included from cgnslib.c:51:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:472: libcgns_a-cgnslib.o] Error 1; make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/cgns'; make[1]: *** [Makefile:398: all-recursive] Error 1; make[1]: Leaving directory '/home/xxx/SU2-7.3.0/externals'; make: *** [Makefile:440: all-recursive] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:58,wrap,wrapper,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['wrap'],['wrapper']
Integrability,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:577,message,message,577,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['message'],['message']
Integrability,"Hi, all. This PR is resuming the #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid blac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:371,synchroniz,synchronized,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['synchroniz'],['synchronized']
Integrability,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:1391,wrap,wrapper,1391,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,1,['wrap'],['wrapper']
Integrability,"Hi,. After the ""Update IO"" on April 17 (4c4c296) commit, the Yplus seems to be not right in the output files. The skin friction has been split in x,y and z components and after that I noticed that the y+ in the outputs started to be strange. It's may be a MPI synchronization issue. And just another quick question: Is there any motivation to change the names from ""Pressure_Coefficient"" to ""C<sub>p</sub>"" in the output?. Best,. Cleber.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283:260,synchroniz,synchronization,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/283,1,['synchroniz'],['synchronization']
Integrability,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:403,depend,depending,403,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,4,"['depend', 'interface']","['depending', 'interface']"
Integrability,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:208,depend,dependency,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,1,['depend'],['dependency']
Integrability,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233,1,['message'],['message']
Integrability,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888:1208,depend,dependency,1208,https://su2code.github.io,https://github.com/su2code/SU2/issues/888,3,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:57,rout,routines,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['rout'],['routines']
Integrability,How to wrapper SU2 code in a namespace automatically?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1410:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410,1,['wrap'],['wrapper']
Integrability,"I am an SU2 user simulating config_incomp_turb_sa.cfg. I would like to define a UDF to simulate an airfoil vibration dynamics.; the original configuration feature is:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= (0.25 0.0 0.0); PITCHING_OMEGA= (0.0 0.0 14.91675); PITCHING_AMPL= (0.0 0.0 8.0); ```; The pitching amplitude is a fixed number. however, in my simulation task, i would like to build a UDF to show an increasing pitching amplitude, which depends on the value of the current timestep. I would like to know if there is a related testcase that shows how a UDF is written. Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1673:454,depend,depends,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/1673,1,['depend'],['depends']
Integrability,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278:682,message,message,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278,1,['message'],['message']
Integrability,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479:364,message,message,364,https://su2code.github.io,https://github.com/su2code/SU2/issues/479,1,['message'],['message']
Integrability,"I am trying to compile SU2 for parallel runs using intel compilers. SU2 compiles perfectly when compiled without the --enable-autodiff flag, but throws an error when compiling with it. The error is: . ```; ../../../Common/lib/../src/adt_structure.cpp(1402): internal error: assertion failed at: “shared/cfe/edgcpfe/exprutil.c”, line 7266. const su2double V0x = xc[0] - 0.5*xRel[4][0] - 0.125*(xRel[1][0]+xRel[2][0]+xRel[3][0]);; ^. compilation aborted for ../../../Common/lib/../src/adt_structure.cpp (code 4); make[2]: *** [../src/libSU2_AD_a-adt_structure.o] Error 4; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory `/path/SU2_AD/Common/lib’; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory `/path/SU2_AD’; make: *** [install-SU2_AD] Error 2; ```. Looking for the error online, it seems to be something related to the compiler itself. I was wondering if anyone else had encountered this error message, and how they got around it. . I am using icc and icpc version 18.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/719:941,message,message,941,https://su2code.github.io,https://github.com/su2code/SU2/issues/719,1,['message'],['message']
Integrability,"I am trying to get the Dynamic FSI tutorial to work and have rebuilt SU2 for the python wrapper, as well as install all dependencies, including mpi4py, petsc and petsc4py. I am getting the following error and the **_fsi_computation.py_** file is showing that the **_allMarkersID_** variable has no attribute for **_keys_**. I am running the case with Ubuntu 20.04 with openmpi and python 3.8. Can someone please let me know what is causing this issue/ bug?. Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 194, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/__main__.py"", line 7, in <module>; main(); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 198, in main; run_command_line(args); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 47, in run_command_line; run_path(sys.argv[0], run_name='__main__'); File ""/usr/lib/python3.8/runpy.py"", line 265, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/usr/lib/python3.8/runpy.py"", line 97, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 259, in <module>; main(); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 165, in main; FSIInterface.connect(FSI_config, FluidSolver, SolidSolver); File ""/path/to/folder/SU2/SU2_PY/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129:88,wrap,wrapper,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129,2,"['depend', 'wrap']","['dependencies', 'wrapper']"
Integrability,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/291,1,['message'],['message']
Integrability,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:873,depend,depend,873,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,3,"['depend', 'rout']","['depend', 'routine']"
Integrability,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:1151,Integrat,Integrated,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,3,['Integrat'],['Integrated']
Integrability,"I get the following error from su2Deform when using python 3.7 and SU2 6.1.0:. ```; su2Deform( ""testing.cfg"", args.numberProc) # Run SU2 mesh deformation; File ""$SU2_RUN/mesh_deformation.py"", line 83, in mesh_deformation; info = SU2.run.DEF(config); File ""$SU2_RUN/SU2/run/interface.py"", line 158, in DEF; konfig.dump(tempname) ; File ""$SU2_RUN/SU2/io/config.py"", line 125, in dump; dump_config(filename,self); File ""$SU2_RUN/SU2/io/config.py"", line 961, in dump_config; write_config(filename,config) ; File ""$SU2_RUN/SU2/io/config.py"", line 775, in write_config; n_lists = len(new_value); TypeError: object of type 'map' has no len(); ```. Any help fixing this would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620:273,interface,interface,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/620,1,['interface'],['interface']
Integrability,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151:838,depend,dependency,838,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151,4,['depend'],['dependency']
Integrability,"I have been researching about the Sutherland's law in different CFD codes. The form and coefficients vary depending on the implementation. Assuming a 3 parameters fit (there is a less popular 2 parameters version). I. SU2 (SI units) is using:; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273.15 K; SUTHERLAND_CONSTANT = 110.4 K; from http://www.cfd-online.com/Wiki/Sutherland's_law. II. FLUENT is using ; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273.11 K; SUTHERLAND_CONSTANT = 110.56 K. III. The classical book ""Viscous Fluid Flow"" by Frank White (McGraw-Hill) proposes; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273 K; SUTHERLAND_CONSTANT = 111 K. IV. The NASA webpage https://www.grc.nasa.gov/www/BGH/viscosity.html and SU2 (US units); MU_REF = 1.733E-5 kg / ms; MU_T_REF = 288.16 K; SUTHERLAND_CONSTANT = 110.4 K. And each CFD solver seems to use some slightly different parameters. The difference between I, II and III is small...(%0.5) but large if we compare with IV (%3) (could be a typo in the NASA web page?) . Sutherland's law is very important for SU2 because the nondimensionalization is based on the Reynolds number that typically comes from the viscosity (Sutherland's law again) that we compute from the Temperature evaluated using the Standard US atmosphere. If the viscosity formula that we use to evaluate Re is not consistent with the one that is implemented in SU2 we can find large discrepancies in, for example, the static pressure at the Far-field. I have two recommendations: 1) US and SI should be consistent and we should use exactly the same number for both. 2) Instead of using an internet source I would use the values at White's book which is a classic and permanent reference. I'll implement the change as soon as possible. Best,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301:106,depend,depending,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/301,1,['depend'],['depending']
Integrability,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407:172,depend,dependencies,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407,2,['depend'],"['dependencies', 'dependency']"
Integrability,"I have seen that depending on the developer. SU2 includes (or not) a space between ""if"" and ""("" or ""for"" and ""("", etc. . From the coding style point of view I think it is better to have a common criteria:; ""if ("" ""for ("", "") {"" and ""else {"". I have implemented the previous convention in the software... it is the most popular one in order to differentiate ""if("" or ""for("" from function calls, it also improves the code readability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426:17,depend,depending,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/426,1,['depend'],['depending']
Integrability,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842:413,message,message,413,https://su2code.github.io,https://github.com/su2code/SU2/issues/842,1,['message'],['message']
Integrability,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:287,rout,routines,287,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['rout'],['routines']
Integrability,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:885,interface,interface,885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,2,['interface'],['interface']
Integrability,"I received this message when I am trying to run Dynamic FSI tutorial case ; This issue is derived from line 314 of file FSIInterface.py; What I received in terminal was like this:; File ""home/huy/SU2/bin/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'. To fix this I add this line above the error line:; allMarkersID = {marker: idx for idx, marker in enumerate(allMarkersID)}",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2365:16,message,message,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/2365,1,['message'],['message']
Integrability,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:198,interface,interface,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['interface'],['interface']
Integrability,"I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump.; Anyway, it was all incomplete or broken and there was no documentation in the code, for a change...; To anyone in the future the commit to revert is 265bfe8814ed345e9ab6288265e80858b00ae59e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351:41,interface,interface,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351,1,['interface'],['interface']
Integrability,I want to introduce two new interfaces to change the Freestream Mach number and Reynolds Numbers from the Python interface. . As there are many parameters (mostly non/dimensional) affected by those two values I would like to get your insights on the viability and potential drawbacks of offering such an interface. Your thoughts on this matter would be greatly appreciated.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2185:28,interface,interfaces,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/2185,3,['interface'],"['interface', 'interfaces']"
Integrability,"I was installing the SU2 v7.3.1 from branch feature_pysu2_fsi_adjoint using a new virtual machine. ; I was using the following environment: ; OS Ubuntu 20.04.4 LTS; Python 3.8.10; gcc 9.4.0; open-mpi 4.1.3; swig 4.0.2; I installed mpi4py, notice that mpi4py was installed in directory /home/aarons/.local/lib/python3.8/site-packages/mpi4py. While python was installed in Ubuntu system default that shipped through Ubuntu. . I tried to use default SU2 meson script and installed meson and ninja to build and compile the code. Both of them stuck at the ninja compiling step, when linking target SU2_PY/_pysu2ad.so. The following error message appears:. ```; [8/1355] Generating externals/cgns/hdf5/H5T_init.c with a custom command; [1351/1355] Linking target SU2_PY/pySU2/_pysu2.so. FAILED: SU2_PY/pySU2/_pysu2.so. c++ -o SU2_PY/pySU2/_pysu2.so SU2_PY/pySU2/_pysu2.so.p/meson-generated_pySU2.cxx.o ; SU2_CFD/src/libSU2core.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core.a.p/python_wrapper_structure.cpp.o ; SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CFluidModel.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CPengRobinson.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CNEMOGas.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CMutationTCLib.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CSU2TCLib.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_COutputFactory.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CAdjFlowOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjFlowCompOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CAdjFlowIncOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjHeatOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CMultizoneOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CElasticityOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CFlowComp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1605:633,message,message,633,https://su2code.github.io,https://github.com/su2code/SU2/issues/1605,1,['message'],['message']
Integrability,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550:218,depend,depending,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/550,4,"['Message', 'depend', 'message']","['Message', 'depending', 'message']"
Integrability,Implement prism elements in the Tecplot binary output routines (TecIO),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/57:54,rout,routines,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/57,1,['rout'],['routines']
Integrability,Implement pyramid elements in the Tecplot binary output routines (TecIO),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/56:56,rout,routines,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/56,1,['rout'],['routines']
Integrability,Implement routines/a module for evaluating grid quality metrics,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/149:10,rout,routines,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/149,1,['rout'],['routines']
Integrability,"In `CDiscAdjMultizoneDriver::HandleDataTransfer` we have the following code structure:. bool DeformMesh = false;; for (unsigned short jZone = 0; jZone < nZone; jZone++){; if (jZone != iZone && interface_container[jZone][iZone] != nullptr) {; DeformMesh = DeformMesh || Transfer_Data(jZone, iZone);; }; }; if (DeformMesh) DynamicMeshUpdate(iZone, ExtIter);. `Transfer_Data` returns `true` if and only if the interface type is `BOUNDARY_DISPLACEMENTS`. If this happens once, no further call to `Transfer_Data` will occur for this particular `iZone` because of short-circuit evaluation of the `||`. . Though I'm new to the adjoint driver, I can hardly imagine that this is intended. Maybe the order of the arguments of `||` should be swapped, or it should be coded as in `CMultizoneDriver::Update`?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1285:407,interface,interface,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/1285,1,['interface'],['interface']
Integrability,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/70:48,rout,routine,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/70,1,['rout'],['routine']
Integrability,Included github actions in the dependabot config,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:31,depend,dependabot,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,1,['depend'],['dependabot']
Integrability,Install SU2 by python wrapper build in singularity container,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739:22,wrap,wrapper,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/739,1,['wrap'],['wrapper']
Integrability,Integrate MKL 2019 into Develop branch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:0,Integrat,Integrate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,1,['Integrat'],['Integrate']
Integrability,Integrate MKL option for performance improvement on Intel Architectures.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:0,Integrat,Integrate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['Integrat'],['Integrate']
Integrability,Integrated Heatflux for flow problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:0,Integrat,Integrated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['Integrat'],['Integrated']
Integrability,Interface between the moving and stationary zones generates wrong results as the moving zone rotates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255:0,Interface,Interface,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255,1,['Interface'],['Interface']
Integrability,"Is there a way to wrap SU2 code in a namespace quickly? When I try to add new header files from another library, the SU2 constants and variables often conflict.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1410:18,wrap,wrap,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410,1,['wrap'],['wrap']
Integrability,Issue building python wrapper with CGNS support (problems with static/dynamic HDF5 dependencies),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:22,wrap,wrapper,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,2,"['depend', 'wrap']","['dependencies', 'wrapper']"
Integrability,"It shows Error: ""ValueError: mpi4py.MPI.Message size changed, may indicate binary incompatibility. Expected 40 from C header, got 32 from PyObject"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/837:40,Message,Message,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/837,1,['Message'],['Message']
Integrability,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/249:63,message,message,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/249,8,['message'],['message']
Integrability,Meson Build on Linux with Python Wrapper: python3 not found,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903:33,Wrap,Wrapper,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/903,1,['Wrap'],['Wrapper']
Integrability,More helpful messages for FFD setting,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2032:13,message,messages,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2032,1,['message'],['messages']
Integrability,Move all restart reading from solver constructors to dedicated LoadRestart() routines.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:77,rout,routines,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['rout'],['routines']
Integrability,Multi-stage time integration schemes for multiple zones,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437:17,integrat,integration,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/437,1,['integrat'],['integration']
Integrability,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/484:125,depend,depending,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/484,1,['depend'],['depending']
Integrability,Multizone py wrapper example (FSI),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2111:13,wrap,wrapper,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2111,1,['wrap'],['wrapper']
Integrability,"NDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14025,depend,dependencies,14025,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependencies']
Integrability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:197,depend,dependant,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,1,['depend'],['dependant']
Integrability,New wrapper class for Inria's direct sparse solver PaStiX (external direct sparse solver),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:4,wrap,wrapper,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['wrap'],['wrapper']
Integrability,"Not sure if you are aware, but the C++ MPI bindings have been deprecated since MPI-2.2:. http://www.mpi-forum.org/docs/mpi-2.2/mpi22-report/node328.htm. As MPI-3 becomes more prevalent, using the deprecate C++ MPI interface is dangerous for portability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/22:214,interface,interface,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/22,1,['interface'],['interface']
Integrability,"Note: moving solver_, numerics_, integration_preprocessing to driver.cpp not only possible, but necessary because if they are left in definition_structure.cpp there are recursive dependencies. (with driver_preprocessing)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/195:179,depend,dependencies,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/195,1,['depend'],['dependencies']
Integrability,Parallel run of the python routine fsi_computation.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457:27,rout,routine,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/457,1,['rout'],['routine']
Integrability,Parmetis integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135:9,integrat,integration,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/135,1,['integrat'],['integration']
Integrability,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:498,rout,routines,498,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,1,['rout'],['routines']
Integrability,Possible bug in python FSI routine FSIInterface.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:27,rout,routine,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['rout'],['routine']
Integrability,Py Wrapper hangs on Set_MPI_ActDisk in CEulerSolver,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:3,Wrap,Wrapper,3,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,1,['Wrap'],['Wrapper']
Integrability,Python interface for updating translation and rotation rates of markers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095:7,interface,interface,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095,1,['interface'],['interface']
Integrability,Python interface for updating translation and rotation rates of the moving frame,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:7,interface,interface,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,1,['interface'],['interface']
Integrability,"Python interface updated to automatically use ibrun when using slurm on a tacc machine (ie, Stampede)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/227:7,interface,interface,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/227,1,['interface'],['interface']
Integrability,Python wrapper fails to generate with MPI and AD,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/819:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/819,1,['wrap'],['wrapper']
Integrability,Python wrapper feature: unable to import pysu2 by Python on OSX,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606,1,['wrap'],['wrapper']
Integrability,Python wrapper heat solver example + disc adj minor fixes and cleanup,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2017:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2017,1,['wrap'],['wrapper']
Integrability,Python wrapper last updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/357,1,['wrap'],['wrapper']
Integrability,Reduce public interface of drivers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:14,interface,interface,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,1,['interface'],['interface']
Integrability,Relax tolerances of python wrapper hybrid AD tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:27,wrap,wrapper,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['wrap'],['wrapper']
Integrability,Replace the static char buffers at the beginning of the SetConvergence_History() routine in output_structure.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/66:81,rout,routine,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/66,1,['rout'],['routine']
Integrability,"Restructure MPI wrapper, move more files to directories",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133:16,wrap,wrapper,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133,1,['wrap'],['wrapper']
Integrability,Restructuring of Interface structure (CTransfer -> CInterface),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:17,Interface,Interface,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['Interface'],['Interface']
Integrability,SU2 V8.01: Apparently improper message: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:31,message,message,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['message'],['message']
Integrability,SU2 not getting all external dependencies,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2363:29,depend,dependencies,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/2363,1,['depend'],['dependencies']
Integrability,SU2 python wrapper build failed in win10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:11,wrap,wrapper,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['wrap'],['wrapper']
Integrability,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\U,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6898,interface,interface,6898,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['interface'],['interface']
Integrability,SU2_DOT Interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:8,Interface,Interface,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['Interface'],['Interface']
Integrability,SU2_DOT_AD works great with the ASCII Tecplot files but it is not able to write the **binary** files. The code stops with the following message. ```; Merging solution in the Master node.; Writing Tecplot Binary file (volume grid). ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 11; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; ```. Thanks!; Francisco,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/345:136,message,message,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/345,2,"['MESSAGE', 'message']","['MESSAGES', 'message']"
Integrability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:349,depend,depending,349,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['depend'],['depending']
Integrability,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/265:234,rout,routines,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/265,1,['rout'],['routines']
Integrability,Show error message when FLUID_MIXTURE is used with KIND_SCALAR_MODEL = NONE,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2345:11,message,message,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2345,1,['message'],['message']
Integrability,Sliding mesh for incompressible flows + Cleaning of transfer routines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:61,rout,routines,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['rout'],['routines']
Integrability,Small update of the python fsi interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:31,interface,interface,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['interface'],['interface']
Integrability,Species Information not transmitted across interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818:43,interface,interfaces,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818,1,['interface'],['interfaces']
Integrability,Starts to address #1604; The adjoint will be more work.; Depends on https://github.com/su2code/Tutorials/pull/22,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1616:57,Depend,Depends,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1616,1,['Depend'],['Depends']
Integrability,Stuck at Python Interface Preprocessing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907:16,Interface,Interface,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/907,1,['Interface'],['Interface']
Integrability,Su2 V5.0.0 developer branch sliding interface feature: problem with post processed Tecplot output file -reg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417:36,interface,interface,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/417,1,['interface'],['interface']
Integrability,"Summary; ========; The **fluid interface** connects RANS zones in such a way that flow can freely pass through it just as if they were a single RANS zone. We (@maxaehle, @BeckettZhou) observed convergence problems in cases where the meshes had ""boundary-layer-like"" high anisotropy at the fluid interface. However a singlezone simulation, for which the meshes are joined together, converged. Setup (.cfg, .su2); ===============; **Density for singlezone run with joined meshes, converged**:; ![singlezone-rho](https://user-images.githubusercontent.com/72806890/138854768-3f188819-c924-4025-9404-f5d58bfa6b7d.png); **Density for multizone run with separate meshes and fluid interface, diverged**:; ![multizone-rho](https://user-images.githubusercontent.com/72806890/138854792-6c71c0a9-0af7-402e-b65c-d7711e0245e1.png); **Mesh:**; ![Multizone_Mesh_Annotated](https://user-images.githubusercontent.com/72806890/138855444-8fd029bc-2f6d-4e94-b3da-a3c997ec418b.png); **Download link**: https://seafile.rlp.net/d/bb0fbb16eb414263b642/. In this issue I consider compressible flow around a circle at Re=1e6, Mach=0.15, using the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:31,interface,interface,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,3,['interface'],['interface']
Integrability,"Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulation of multi-stages turbine. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/188:240,interface,interface,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/188,1,['interface'],['interface']
Integrability,"Support both Python 2.6+ and Python 3.4+. Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260:105,message,message,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/260,4,['message'],['message']
Integrability,The interface received some modifications to clean up and update various function. The python switch has been removed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1198:4,interface,interface,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1198,1,['interface'],['interface']
Integrability,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:554,depend,depending,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,1,['depend'],['depending']
Integrability,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/81:68,integrat,integration,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/81,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:124,Message,Message,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['Message'],['Message']
Integrability,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437:70,integrat,integration,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/437,3,['integrat'],['integration']
Integrability,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/294:294,integrat,integrating,294,https://su2code.github.io,https://github.com/su2code/SU2/pull/294,1,['integrat'],['integrating']
Integrability,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,2,['wrap'],['wrapper']
Integrability,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:8,integrat,integrates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,2,"['Integrat', 'integrat']","['Integrate', 'integrates']"
Integrability,This PR integrates the source for CGNS v3.3.0 into the SU2 distribution (in externals/cgns/*) and into the autotools build so that it is automatically compiled and linked for you (on by default).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/300:8,integrat,integrates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/300,1,['integrat'],['integrates']
Integrability,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1412:46,rout,routine,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412,1,['rout'],['routine']
Integrability,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357:51,wrap,wrapper,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/357,3,['wrap'],['wrapper']
Integrability,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:422,integrat,integrated,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,3,"['depend', 'integrat']","['dependent', 'integrated', 'integration']"
Integrability,This PR makes sure that the implicit decision in the axi-symmetric source term is based on the time integration of the flow and not of the turbulence.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/456:100,integrat,integration,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/456,1,['integrat'],['integration']
Integrability,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:77,rout,routines,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,4,['rout'],['routines']
Integrability,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:349,interface,interfaces,349,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,3,['interface'],"['interface', 'interfaces']"
Integrability,"This is a SU2 user using Windows 10 system. When simulating the Tutorial Case, as long as SU2_CFD is used, it can be successfully simulated, but the parallel_computation.py required by my project cannot be used. Also, all simulations with "".py"" files suffer from the same problem, i.e. ""options.filename == None"". I wonder if this situation is a problem with the Python Wrapper? The tutorial does not mention its compilation method in Windows system. I would like to report how to use the parallel_computation.py in Windows system?. My SU2 version is v7.3.0. I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567:370,Wrap,Wrapper,370,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567,1,['Wrap'],['Wrapper']
Integrability,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/196:541,rout,routines,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/196,2,['rout'],['routines']
Integrability,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:638,message,messages,638,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['message'],['messages']
Integrability,"This pull request contains a bunch of clean up within the parallel mesh readers and partitioning routines. It should reduce memory usage quite a bit during preprocessing, and several important leaks have been fixed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/263:97,rout,routines,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/263,1,['rout'],['routines']
Integrability,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322:1035,interface,interface,1035,https://su2code.github.io,https://github.com/su2code/SU2/pull/322,2,['interface'],"['interface', 'interfaces']"
Integrability,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:36,interface,interface,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['interface'],['interface']
Integrability,This pull request introduces major structural changes to the discrete adjoint solver. I moved some of the routines to the driver level so that multi-zone problems work with the discrete adjoint. The basic implementation works for Fluid-Fluid zones. Other drivers follow soon (e.g. turbomachinery). Along with that there also some other minor changes:. - The low memory tecplot output (which was not working properly anyway) is now removed.; - The issue with the unsteady cont. adjoint referenced in #377 is solved.; - Restart for the discrete adjoint works properly (as long as the same number of procs is used); - I added options for frozen eddy viscosity and frozen limiter. This can be enabled with the options FROZEN_VISC_DISC/FROZEN_LIMITER_DISC. The default is NO for both.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/407:106,rout,routines,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/407,1,['rout'],['routines']
Integrability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:59,wrap,wrapper,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,3,['wrap'],"['wrapped', 'wrapper']"
Integrability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:40,wrap,wrapping,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,5,"['interface', 'wrap']","['interface', 'wrapper', 'wrapping']"
Integrability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:207,rout,routines,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,4,['rout'],['routines']
Integrability,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:102,rout,routines,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,3,['rout'],"['routine', 'routines']"
Integrability,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473:562,wrap,wrapper,562,https://su2code.github.io,https://github.com/su2code/SU2/pull/473,1,['wrap'],['wrapper']
Integrability,This should help with keeping the GitHub actions updated on new releases. This will also help with keeping it secure. Dependabot helps in keeping the supply chain secure https://docs.github.com/en/code-security/dependabot. GitHub actions up to date https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot. https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool; Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:118,Depend,Dependabot,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,6,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency-update-tool']"
Integrability,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:216,wrap,wrap,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['wrap'],['wrap']
Integrability,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462:198,wrap,wrapped,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/462,1,['wrap'],['wrapped']
Integrability,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:63,rout,routines,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['rout'],['routines']
Integrability,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/171:154,rout,routine,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/171,1,['rout'],['routine']
Integrability,Turbulent fluid interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:16,interface,interface,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['interface'],['interface']
Integrability,"U2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedb",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4905,interface,interface,4905,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['interface'],['interface']
Integrability,"Unable to compile Python wrapper (invalid static_cast in parallel, undefined symbols in serial)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551:25,wrap,wrapper,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/551,1,['wrap'],['wrapper']
Integrability,Unify Flow and FEA unsteady options + fix unsteady FEA adjoints + add FEA python wrapper examples,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2008:81,wrap,wrapper,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/2008,1,['wrap'],['wrapper']
Integrability,Until now we have always patched the interface.py by hand to make it run on Windows Server 2012 R2.; By issueing a PR we hope this won't be necessary in the future anymore.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331:37,interface,interface,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/331,1,['interface'],['interface']
Integrability,Update LUT routine,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:11,rout,routine,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['rout'],['routine']
Integrability,Update of the python fsi interface and new feature coupling SU2 with Nastran,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:25,interface,interface,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,1,['interface'],['interface']
Integrability,Updates to the Elastic mesh solver and AD-wrapped code,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:42,wrap,wrapped,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['wrap'],['wrapped']
Integrability,Updating some of the NEMO viscous solver routines.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:41,rout,routines,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['rout'],['routines']
Integrability,"V_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1047,wrap,wrapper,1047,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['wrap'],['wrapper']
Integrability,Velocity transfer at fluid-structure interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:37,interface,interface,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['interface'],['interface']
Integrability,"Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1563,Depend,Dependency,1563,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Depend'],['Dependency']
Integrability,"Via adding SetTime_Step routines, which call the corresponding flow solution's time step calculation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/132:24,rout,routines,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/132,1,['rout'],['routines']
Integrability,"We did some modifications to the incompressible solver. In particular:. - Leftovers from the compressible solver are removed in the non-dimensionalization routine, the time-step computation and the Jacobian computation in numerics.; - The surface analysis now works correctly for incompressible cases and the mass flux average finally works (only uses the modulus of the mass flux now). ; - There is now again a BC_Isothermal_Wall() routine. It just features as a wrapper for the BC_HeatFlux_Wall... until we found a better solution (maybe adding MARKER_WALL/MARKER_NO_SLIP or something).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/472:155,rout,routine,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/472,3,"['rout', 'wrap']","['routine', 'wrapper']"
Integrability,"We need to improve the behavior of SU2 for `TIME_DISCRE_TURB=EULER_EXPLICIT`. Currently explicit Euler (and also the Runge-Kutta variants) are not implemented for the turbulence solvers, see https://github.com/su2code/SU2/issues/1414#issuecomment-964236535, but also no error message is thrown when a user specifies this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1432:276,message,message,276,https://su2code.github.io,https://github.com/su2code/SU2/issues/1432,1,['message'],['message']
Integrability,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431:392,message,message,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/431,1,['message'],['message']
Integrability,"When WRT_CSV_SOL = NO, the adjoint gradient method results in 0 valued gradients because the SU2_DOT method depends on the data in the surface_adjoint.csv file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/165:108,depend,depends,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/165,1,['depend'],['depends']
Integrability,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478:77,rout,routines,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/478,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"When i am evaluating RANS simulation with fixed cl model in su2-5.0, after it reached the convergence criteria (I have tried EXT_ITER, CAUCHY and RESIDUAL) and executed ""Deleted CIntegration container. Deleted CIntegration container. "", the routine always stopped with this message: *** Error in `/home/wanghao/software/SU2-5.0.0/bin/SU2_CFD': double free or corruption (!prev): 0x00000000045312d0 ***.; But applying fixed AOA won't has this problem. ; My command is :parallel_computation.py -n 8 -f opt_crm.cfg ; Ubuntu 16.04. ![screen](https://cloud.githubusercontent.com/assets/23302629/23536602/0932d9a6-0001-11e7-989d-2515b6942dd1.png). [opt_crm.txt](https://github.com/su2code/SU2/files/815706/opt_crm.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383:241,rout,routine,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/383,2,"['message', 'rout']","['message', 'routine']"
Integrability,"When monitoring the forces on a large number of markers, the output won’t fit in the buffer(s), and this causes memory issues: the code either hangs, has a buffer overflow, or segfaults depending on the compiler, etc. As a temporary fix, the monitoring_coeff[] buffer has been increased, but this should be remedied asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/66:186,depend,depending,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/66,1,['depend'],['depending']
Integrability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:243,message,message,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['message'],['message']
Integrability,"When using `srun` version 15.08.7 `parallel_computation.py` launches `-n` instances of my SU2 call rather than one instance of SU2 with `n` processes. This does not happen with `srun` version 2.6.5. I fixed this issue by commenting out the line in `interface.py` that calls `srun` if a SLURM jobID number is in the environment variables. This causes `parallel_computation.py` to call `mpirun`, which works as expected.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469:249,interface,interface,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/469,1,['interface'],['interface']
Integrability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:1743,depend,depend,1743,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['depend'],['depend']
Integrability,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252:1250,rout,routine,1250,https://su2code.github.io,https://github.com/su2code/SU2/issues/252,2,['rout'],"['routine', 'routines']"
Integrability,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207:192,Interface,Interface,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/207,1,['Interface'],['Interface']
Integrability,Wrap MPI_Allgatherv for NdFlattener,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:0,Wrap,Wrap,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,1,['Wrap'],['Wrap']
Integrability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9,depend,dependabot-start,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,3,"['Depend', 'depend']","['Dependabot', 'dependabot-end', 'dependabot-start']"
Integrability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:9,depend,dependabot-start,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,3,"['Depend', 'depend']","['Dependabot', 'dependabot-end', 'dependabot-start']"
Integrability,[WIP] Aero-Structural Discrete Adjoint Sensitivities and Python Wrapper Developments,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:64,Wrap,Wrapper,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['Wrap'],['Wrapper']
Integrability,[WIP] Change unsteady timestep using Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['wrap'],['wrapper']
Integrability,[WIP] Composition dependent fluid properties for multicomponent flow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:18,depend,dependent,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,1,['depend'],['dependent']
Integrability,[WIP] Composition-dependent heat capacities and mass diffusivity models for incompresible flows,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1758:18,depend,dependent,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1758,1,['depend'],['dependent']
Integrability,[WIP] Improve implementation of periodicity for implicit integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:57,integrat,integration,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['integrat'],['integration']
Integrability,[WIP] Update turbo interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:19,interface,interfaces,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,1,['interface'],['interfaces']
Integrability,[WIP] pyBeam integration into SU2 as a subproject,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:13,integrat,integration,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['integrat'],['integration']
Integrability,"[here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:1504,interface,interface,1504,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['interface'],['interface']
Integrability,"_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a dimensional issue_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thought this behavior could be traced to a bug since my previous mesh deformation always proceeded smoothly (_from flow past cylinder to other internal flow scenarios_), either with arbitrary or gradient based deformation. However, none of these were investigated with turbomachinery settings, which are necessary for this scenario for two main reasons:. 1. post processing parameters computed by SU2; 6. this mesh is part of a turbomachinery multi-block simulation. **To reproduce**; [config.txt](https://github.com/su2code/SU2/files/11416238/config.txt) -> cfg file; [mesh_out.txt](https://github.com/su2code/SU2/files/11416239/mesh_out.txt) -> mesh (_FFD box attached_). Thank you in a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:2876,depend,dependency,2876,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['depend'],['dependency']
Integrability,"`SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no ne",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:3078,wrap,wrapper,3078,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['wrap'],['wrapper']
Integrability,"a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10902,Depend,Dependabot,10902,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Depend'],['Dependabot']
Integrability,"a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5332,depend,dependabot,5332,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7580,depend,dependabot,7580,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v3.5.3"">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>; <h2>v3.5.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Use correct API url / endpoint in GHES by <a href=""https://github.com/fhammerl""><code>@​fhammerl</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1289"">actions/checkout#1289</a> based on <a href=""https://redirect.github.com/actions/checkout/issues/1286"">#1286</a> by <a href=""https://github.com/1newsr""><code>@​1newsr</code></a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.1...v3.5.2"">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>; <h2>v3.5.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20<",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:5433,depend,dependency,5433,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependency']
Integrability,"ach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1100,depend,depending,1100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['depend'],['depending']
Integrability,"ache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull reque",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6538,depend,dependabot,6538,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5854,depend,dependabot-security-updates,5854,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['depend'],['dependabot-security-updates']
Integrability,"ad to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6547,depend,dependabot-automerge-start,6547,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,adding tutorial for composition-dependent model to tutorials.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:32,depend,dependent,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,1,['depend'],['dependent']
Integrability,"ages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data overhead is considerable. **Additional context**; I performed my tests so far with the RANS solver, employing SST turbulence and SLAU2 scheme. Time-averaging started at around time-iteration 160k and cintinous for another 200k iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:1698,message,message,1698,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['message'],['message']
Integrability,"ame| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:8646,Integrat,Integration,8646,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,3,"['Integrat', 'Interface']","['Integration', 'Interface']"
Integrability,"arruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1018,interface,interface,1018,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,2,['interface'],['interface']
Integrability,"ase 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10845,depend,dependabot-security-updates,10845,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependabot-security-updates']
Integrability,"ata by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed to the SST. 2. Airfoils. If only a part of the wall is rough, as is the case on airfoils with corrosion for ex, we can split the marker definition as follows:. MARKER_HEATFLUX= (wall1, hf1, wall2, hf2 ...); WALL_TYPE= SMOOTH,ROUGH,...; WALL_ROUGHNESS= 0.0, k1... In case there is even a single rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the revie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:4052,rout,routines,4052,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['rout'],['routines']
Integrability,"ated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2409,integrat,integration,2409,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Integrability,"ation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/home/bu/SU2/bin""; export SU2_HOME=""/home/bu/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:9808,Wrap,Wrapper,9808,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Wrap'],['Wrapper']
Integrability,"ave expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1507,integrat,integration,1507,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['integrat'],['integration']
Integrability,avoid calls to blas routines when the data type is not compatible,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:20,rout,routines,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['rout'],['routines']
Integrability,"be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2903,Integrat,Integration,2903,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Integrability,build(github): use dependent-issues action,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1116:19,depend,dependent-issues,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116,1,['depend'],['dependent-issues']
Integrability,"c3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5129,depend,dependabot-security-updates,5129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot-security-updates']
Integrability,"ca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5532,integrat,integration,5532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2622,rout,routines,2622,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['rout'],['routines']
Integrability,"code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6518,depend,dependabot,6518,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependabot']
Integrability,"code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6036,Depend,Dependabot,6036,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6315,depend,dependabot-security-updates,6315,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependabot-security-updates']
Integrability,"com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15883,Depend,Dependabot,15883,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Depend'],['Dependabot']
Integrability,"com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6057,depend,dependabot,6057,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['depend'],['dependabot']
Integrability,"compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:11113,depend,dependabot,11113,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6704,Depend,Dependabot,6704,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"ctions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/act",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3467,depend,dependabot,3467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"d `WALL_TIME` is supposed to hold the . > Current average wall-clock time for one iteration. as per the documentation and dry-run output. However, the screen and history outputs of this field do not seem to actually represent this value. The screen-output of the 0th inner iteration of each time-iteration seems to represent the accumulated WCT since the last output (or restart file) was written. What the screen- and history-output of other inner iterations within a timestep mean is not obvious. See attached discussion for more details. **Expected behaviour**; During transient simulations the `WALL_TIME` history output should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1167,integrat,integration,1167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['integrat'],['integration']
Integrability,"d for that. Maybe here the root cause for the cht problems is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 200 Iterations; ```; -12.6894989871 -13.0272466772 -12.776380701 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.30259065606; ```. 200 Iterations (No CHT interface at all, i.e. still ""multizone"" but no coupling between the zones); ```; -12.6993664689 -13.037441642 -12.7880987801 -0.895636121058 -16.5806369934; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; ```. 2000 Iterations; ```; -17.5073098614 -17.7104073858 -17.9003808832 -3.34538088409 -9.30160418764; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.30160418771; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.425709713; ```. Also note that the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:3468,interface,interface,3468,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['interface'],['interface']
Integrability,"d non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2244,Integrat,Integration,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Integrability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4391,integrat,integrated,4391,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integrated']
Integrability,"d-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6135,depend,dependency-name,6135,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependency-name']
Integrability,"d-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if nece",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1642,depend,dependencies,1642,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,2,"['depend', 'rout']","['dependencies', 'routine']"
Integrability,"d.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2100,Wrap,Wrapper,2100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Wrap'],['Wrapper']
Integrability,"d8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6176,Depend,Dependabot,6176,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['Depend'],['Dependabot']
Integrability,"date README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9704,Depend,Dependabot,9704,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"date4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1391,depend,dependency,1391,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"de12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload siz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1312,depend,dependabot,1312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1223,message,message,1223,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['message'],['message']
Integrability,"direct.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4455,depend,dependabot,4455,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1112,depend,dependency,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['depend'],['dependency']
Integrability,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1339,depend,dependency,1339,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,2,['depend'],['dependency']
Integrability,"dy detailed in #591. I added a table output class for structuring screen output. As a first step I used it for the preprocessing output, but it will eventually be also used in the new output structure that follows soon. I am pretty sure there are more places where a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. ----------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1074,integrat,integration,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Integrability,"e -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../exte",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1273,Message,Message,1273,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['Message'],['Message']
Integrability,"e BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5270,depend,dependabot,5270,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:1155,wrap,wrapper,1155,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,1,['wrap'],['wrapper']
Integrability,"e code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Add any other context or scre",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:979,message,messages,979,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['message'],['messages']
Integrability,"e current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependenc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1388,depend,dependabot,1388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot']
Integrability,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:2005,rout,routines,2005,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['rout'],['routines']
Integrability,"e></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/761"">actions/setup-python#761</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li><a href=""https://github.com/timfel""><code>@​timfel</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a></li>; <li><a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (tr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:3706,wrap,wrap,3706,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['wrap'],['wrap']
Integrability,"e></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8823,Wrap,Wrap,8823,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Wrap'],['Wrap']
Integrability,"earch group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2574,integrat,integrated,2574,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['integrat'],['integrated']
Integrability,"econditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible for the discrete adjoint but I have not made them available yet.; Branch *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:1546,rout,routines,1546,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"ective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint scaling is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:3579,rout,routine,3579,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['rout'],['routine']
Integrability,ectory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checkin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3644,depend,dependency,3644,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['depend'],['dependency']
Integrability,"ef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15561,depend,dependabot-security-updates,15561,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependabot-security-updates']
Integrability,"ef=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6086,depend,dependabot-automerge-start,6086,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,4,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ef=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7678,depend,dependabot-security-updates,7678,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependabot-security-updates']
Integrability,"ek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:1077,rout,routines,1077,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['rout'],['routines']
Integrability,"eleases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15793,depend,dependabot-automerge-start,15793,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"endencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1844,depend,dependabot,1844,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3893,depend,dependabot,3893,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9518,depend,dependabot,9518,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"eration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1592,interface,interface,1592,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['interface'],['interface']
Integrability,"es &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2318,depend,dependencies,2318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependencies']
Integrability,"es more easily since most libraries have CMake support. `vcpkg` is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; *",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:1190,wrap,wrapper,1190,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['wrap'],['wrapper']
Integrability,"esonbuild.com/Users.html) already use that system (e.g. GNOME, systemd ...) or are transitioning. Compared to autotools and make, building the code should be faster, especially if you build with more cores, as all objects files are build truly in parallel (with make only objects of the same target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Addit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1213,depend,dependencies,1213,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['depend'],['dependencies']
Integrability,"ew</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:7340,depend,dependabot,7340,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"ewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3096,integrat,integration,3096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"fab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11048,depend,dependabot,11048,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependabot']
Integrability,"ffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x0000000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5808,integrat,integration,5808,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5558,integrat,integration,5558,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"g**; A general centrifugal compressor multi-zone case is simulated. . ![image](https://github.com/su2code/SU2/assets/96534491/e0990051-6996-4835-a6d3-fae00cdd0c88). The computational domain is composed by the following zones (_for this case, no return channel geometry is included_):. 1. Inlet channel; 2. Impeller; 3. Diffuser; 4. Cavity. The code prints out the following error: . ```; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 0, nSpan outflow 57; ------------------------------ Error Exit -------------------------------; ```. However, spanwise nodes are indeed 57 (_checked manually and on Autogrid_). . A possible solution is indicated [here](https://www.cfd-online.com/Forums/su2/229875-rotor67-simulation-su2.html), but it is not a definitive one as it's dependent on the spanwise nodes number hard-coding.; Different SU2 version were tested, both on **Win10** and **Ubuntu 20.04**, but the issue persisted only to be resolved similarly to the way showed here below. **Additional files**; [error.txt](https://github.com/su2code/SU2/files/13976072/error.txt) -> SU2 initialization up to the error. **Bug report checklist**; - [✔ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [✔ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [✔ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop:**; - OS: UBUNTU 20.04 / Windows 10; - C++ compiler and version: g++ 9.4.0 / gcc 8.1.0; - MPI implementation and version: Open MPI 4.1.5; - SU2 Version: v7.3.0 - v7.4.0 - v7.5.0 - v7.5.1 - v8.0.0 - v8.0.0 new_turbo_outputs. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203:1034,depend,dependent,1034,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203,1,['depend'],['dependent']
Integrability,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4575,interface,interface,4575,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['interface'],['interface']
Integrability,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2841,rout,routines,2841,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['rout'],['routines']
Integrability,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:1399,rout,routine,1399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,2,['rout'],['routine']
Integrability,"he tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:3272,depend,depending,3272,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['depend'],['depending']
Integrability,"he wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1538,rout,routines,1538,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,2,"['rout', 'wrap']","['routines', 'wrapped']"
Integrability,"he wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1789,interface,interface,1789,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['interface'],['interface']
Integrability,"href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15618,Depend,Dependabot,15618,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Depend'],['Dependabot']
Integrability,"https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7910,depend,dependabot-automerge-start,7910,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"i.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2815,integrat,integration,2815,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"ifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:3530,depend,dependabot,3530,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"ild; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0; - MPI implementation and version: msmpi 10.1.2; - SU2 Version: 7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1322,depend,dependency,1322,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,3,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,"ion lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:1295,integrat,integration,1295,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['integrat'],['integration']
Integrability,"ion-required-labels/compare/v4.0.0...v4.1.0</a></p>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Add issues/pull-requests permissions to README by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/52"">mheap/github-action-required-labels#52</a></li>; <li>Only use a single comment when the action fails by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/53"">mheap/github-action-required-labels#53</a></li>; </ul>; <h2>New Contributors</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0"">https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0</a></p>; <h2>v4</h2>; <p>Tag that always points to the latest commit in the v4.x.x series of releases</p>; <h2>v3.0.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Add default error message by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/51"">mheap/github-action-required-labels#51</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1"">https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/4e9ef4ce8c697cf55716ecbf7f13a3d9e0b6ac6a""><code>4e9ef4c</code></a> Automatic compilation</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/18f57d781fe045548933f7465750a46e9994f1fd""><code>18f57d7</code></a> Allow labels to be provided one per line in input</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/1b8424df557fae55fef867af22d5d0625fe6742f""><code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:2730,message,message,2730,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['message'],['message']
Integrability,"ions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading ca",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1717,depend,dependabot,1717,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1924,interface,interface,1924,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['interface'],['interface']
Integrability,"irect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5361,depend,dependabot-automerge-start,5361,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ironment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1727,depend,dependent,1727,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['depend'],['dependent']
Integrability,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2299,integrat,integration,2299,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['integrat'],['integration']
Integrability,"it/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10088,depend,dependabot-security-updates,10088,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['depend'],['dependabot-security-updates']
Integrability,"ke that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:1170,depend,depending,1170,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['depend'],['depending']
Integrability,"kquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5764,depend,dependabot,5764,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"lable for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6212,depend,dependabot,6212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:2674,message,message,2674,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['message'],['message']
Integrability,"li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf5365278422",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6031,depend,dependabot,6031,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2967,Depend,Dependabot,2967,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,51,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1983,message,message,1983,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,"line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1828,interface,interface,1828,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['interface'],['interface']
Integrability,"listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I canno",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4815,interface,interface,4815,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['interface'],['interface']
Integrability,"mance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4329,depend,dependabot,4329,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention int",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:2586,wrap,wrapper,2586,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['wrap'],['wrapper']
Integrability,"modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1143,interface,interface,1143,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['interface'],['interface']
Integrability,"mpare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5428,Depend,Dependabot,5428,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"mpleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed with SU2_MSH for the previous periodic BC implementation. Resolves #550 ; Resolves #431 ; Resolves #416 ; Resolves #252 . ## PR Chec",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:1563,rout,routines,1563,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,2,['rout'],['routines']
Integrability,"n the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete description of the assumptions that have led to the issue and the proposed solution. Please let me know if there are mistakes, or if further detail can be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:3140,rout,routine,3140,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['rout'],['routine']
Integrability,"n variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:1580,wrap,wrapper,1580,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['wrap'],['wrapper']
Integrability,"nc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10291,depend,dependabot,10291,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['depend'],['dependabot']
Integrability,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:2056,interface,interface,2056,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['interface'],['interface']
Integrability,"ng by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6625,depend,dependabot,6625,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"no-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_TECIO -MD -MQ 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; FAILED: SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o ; c++ -ISU2_CFD/src/37e1b17@@SU2core@sta -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -I../externals/cgns/adfh -Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciosrc -I../externals/tecio/teciosrc -I../externals/mel -ICommon/src -I../Common/src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_TECIO -MD -MQ 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; In file included from ../SU2_CFD/src/output/../../include/output/CAdjElasticityOutput.hpp:30:0,; from ../SU2_CFD/src/output/CAdjElasticityOutput.cpp:29:; ../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory; #include ""mel.hpp""; ^~~~~~~~~; compilation terminated.; ...; ```. Do I miss some dependency or something ?. **To Reproduce**. 1) git clone https://github.com/su2code/SU2; 2) cd SU2; 3) mkdir build && cd build; 4) meson ../ -Denable-tests=true; 5) ninja -j16 -v. **Desktop (please complete the following information):**; - OS: Linux openEuler 20.03; - C++ compiler and version: g++ (GCC) 7.3.0; - MPI implementation and version: None; - SU2 Version: current master branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1608:3311,depend,dependency,3311,https://su2code.github.io,https://github.com/su2code/SU2/issues/1608,1,['depend'],['dependency']
Integrability,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7527,wrap,wrapper,7527,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['wrap'],['wrapper']
Integrability,"ntra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5331,integrat,integration,5331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"ode>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2286,Depend,Dependabot,2286,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"odeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14636,depend,dependencies,14636,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependencies']
Integrability,"ollect2.exe: error: ld returned 1 exit status; [7/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5system.c.obj; ../externals/cgns/hdf5/H5system.c: In function 'Wsetenv':; ../externals/cgns/hdf5/H5system.c:482:15: warning: implicit declaration of function 'getenv_s'; did you mean '_wgetenv_; '? [-Wimplicit-function-declaration]; err = getenv_s(&bufsize, NULL, 0, name);; ^~~~~~~~; _wgetenv_s; In file included from ../externals/cgns/hdf5/H5system.c:33:; ../externals/cgns/hdf5/H5system.c: In function 'H5_build_extpath':; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 1 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5system.c:857:17: note: in expansion of macro 'HDstrncat'; HDstrncat(full_path, H5_DIR_SEPS, HDstrlen(H5_DIR_SEPS));; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5system.c:858:13: note: in expansion of macro 'HDstrncat'; HDstrncat(full_path, new_name, HDstrlen(new_name));; ^~~~~~~~~; [44/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5.c.obj; In file included from ../externals/cgns/hdf5/H5.c:22:; ../externals/cgns/hdf5/H5.c: In function 'H5check_version':; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 1 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5.c:920:13: note: in expansion of macro 'HDstrncat'; HDstrncat(lib_str, ""-"", (size_t)1);; ^~~~~~~~~; [49/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Dchunk.c.obj; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__create_chunk_file_map_hyper':; ../externals/cgns/hdf5/H5Dchunk.c:1832:41: warning: passing argument 1 of 'H5S_combine_hyperslab' d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:1890,depend,depends,1890,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"om actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4949,depend,dependency-name,4949,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependency-name']
Integrability,"ompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1448,Wrap,Wrapper,1448,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Wrap'],['Wrapper']
Integrability,"on: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1694,Message,Message,1694,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Message'],['Message']
Integrability,"option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11077,depend,dependabot-automerge-start,11077,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,4,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,or remove the following message (only adjoint):; There is no Target Equivalent Area file (TargetEA.dat)!!; Using default parameters (Target Equiv Area = 0.0),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/113:24,message,message,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/113,1,['message'],['message']
Integrability,"ould have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; Th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6141,interface,interface,6141,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['interface'],['interface']
Integrability,"oupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1151,integrat,integration,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['integrat'],['integration']
Integrability,"pare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11870,depend,dependabot,11870,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,22,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"pare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><code>@​ljmf00</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/313"">actions/upload-artifact#313</a></li>; <li>Bump <code>@​actions/artifact</code> version to v1.1.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/436"">actions/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:2778,depend,dependencies,2778,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependencies']
Integrability,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:2649,interface,interface,2649,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,3,"['interface', 'message']","['interface', 'message']"
Integrability,"peedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on the condition number of the matrix.; For this example SU2_DEF uses 25% less memory in single precision than in double (or double requires 33% more), and solves to 1e-10 in the same time (as it requires more iterations). ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/989:1919,depend,depend,1919,https://su2code.github.io,https://github.com/su2code/SU2/pull/989,1,['depend'],['depend']
Integrability,"piler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1043,Message,Message,1043,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Message'],['Message']
Integrability,"primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6355,interface,interface,6355,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"ps://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:7731,depend,dependencies,7731,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependencies']
Integrability,python wrapper and AD tool,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/539:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/539,1,['wrap'],['wrapper']
Integrability,"r::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5782,integrat,integration,5782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://git",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5519,depend,dependabot,5519,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"rces files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1501,integrat,integrated,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['integrat'],['integrated']
Integrability,"re is even a single rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:4573,rout,routines,4573,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['rout'],['routines']
Integrability,"redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2810,depend,dependabot-automerge-start,2810,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:1047,rout,routines,1047,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,1,['rout'],['routines']
Integrability,"res python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3392,integrat,integrated,3392,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['integrat'],['integrated']
Integrability,"riables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2250,Wrap,Wrapper,2250,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,4,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4015,integrat,integration,4015,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integration']
Integrability,"rnals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; [47/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Eint.c.obj; In file included from ../externals/cgns/hdf5/H5Eint.c:34:; ../externals/cgns/hdf5/H5Eint.c: In function 'H5E__get_msg':; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:132:9: note: in expansion of macro 'HDstrncpy'; HDstrncpy(msg_str, msg->msg, MIN((size_t)(len + 1), size));; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:128:20: note: in expansion of macro 'HDstrlen'; len = (ssize_t)HDstrlen(msg->msg);; ^~~~~~~~; [50/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5E.c.obj; In file included from ../externals/cgns/hdf5/H5E.c:51:; In function 'H5E__get_class_name',; inlined from 'H5Eget_class_name' at ../externals/cgns/hdf5/H5E.c:605:22:; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5E.c:640:9: note: in expansion of macro 'HDstrncpy'; HDstrncpy(name, cls->cls_name, MIN((size_t)(len + 1), size));; ^~~~~~~~~; ../externals/cgns/hdf5/H5E.c: In function 'H5Eget_class_name':; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5E.c:636:20: note: in expansion of macro 'HDstrlen'; len = (ssize_t)HDstrlen(cls->cls_name);; ^~~~~~~~; ninja: build stopped: subcommand failed.`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:10618,depend,depends,10618,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:963,rout,routine,963,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,3,['rout'],"['routine', 'routines']"
Integrability,"rtifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6637,Depend,Dependabot,6637,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Depend'],['Dependabot']
Integrability,"s/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5451,Depend,Dependabot,5451,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Depend'],['Dependabot']
Integrability,"s/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5361,Depend,Dependabot,5361,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['Depend'],['Dependabot']
Integrability,"s/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b""><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7501,depend,dependency-name,7501,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependency-name']
Integrability,"speranc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2900,Depend,Dependabot,2900,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['Depend'],['Dependabot']
Integrability,"strlen(cause_strings[idx]);; ^~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1159:25: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; [47/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Eint.c.obj; In file included from ../externals/cgns/hdf5/H5Eint.c:34:; ../externals/cgns/hdf5/H5Eint.c: In function 'H5E__get_msg':; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:132:9: note: in expansion of macro 'HDstrncpy'; HDstrncpy(msg_str, msg->msg, MIN((size_t)(len + 1), size));; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:128:20: note: in expansion of macro 'HDstrlen'; len = (ssize_t)HDstrlen(msg->msg);; ^~~~~~~~; [50/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5E.c.obj; In file included from ../externals/cgns/hdf5/H5E.c:51:; In function 'H5E__get_class_name',; inlined from 'H5Eget_class_name' at ../externals/cgns/hdf5/H5E.c:605:22:; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5E.c:640:9: note: in expansion of macro 'HDst",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:9775,depend,depends,9775,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"sure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1501,Interface,Interface,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['Interface'],['Interface']
Integrability,"t coefficient with respect to the closure coefficients of the SA turbulence model. I've created new variable names in the CConfig class for the SA closure coefficients and have modified the code so that it reads the values for the coefficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, in output_structure.cpp where values such as Total_Sens_AoA are called again to be printed to screen, these valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:1136,rout,routine,1136,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,2,['rout'],['routine']
Integrability,"t like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Add any other context or screenshots about the feature request here.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:1449,depend,dependencies,1449,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['depend'],['dependencies']
Integrability,"te the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart fr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:2082,interface,interface,2082,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,2,['interface'],['interface']
Integrability,"tegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:2033,depend,depending,2033,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['depend'],['depending']
Integrability,"terface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7104,wrap,wrapper,7104,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['wrap'],['wrapper']
Integrability,"th [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1157:29: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, ""; "", 2);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1147:25: note: in expansion of macro 'HDstrncat'; HDstrncat(local_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1159:25: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; [47/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Eint.c.obj; In file included from ../externals/cgns/hdf5/H5Eint.c:34:; ../externals/cgns/hdf5/H5Eint.c: In function 'H5E__get_msg':; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:132:9: note: in expansion of macro 'HDstr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:8936,depend,depends,8936,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7570,integrat,integration,7570,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"thub.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9145,depend,dependency-name,9145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependency-name']
Integrability,"thub.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6372,Depend,Dependabot,6372,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Depend'],['Dependabot']
Integrability,"tleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git command failed (either git is not installed or this is not a git repository). Using fall-back method to initialize submodule CoDiPack. Initializing CoDiPack 'bd4a639c2fe625a80946c8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2706,message,message,2706,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['message'],['message']
Integrability,"to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The propos",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:2367,wrap,wrappers,2367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['wrap'],['wrappers']
Integrability,"tps://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10145,Depend,Dependabot,10145,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Depend'],['Dependabot']
Integrability,"ttps://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:3931,depend,dependabot,3931,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"ttps://redirect.github.com/actions/setup-python/issues/741"">#741</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b""><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7402,Depend,Dependabot,7402,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,u; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; check,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3911,depend,dependency,3911,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['depend'],['dependency']
Integrability,"ubmit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3603,depend,dependencies,3603,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['depend'],['dependencies']
Integrability,ude used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking siz,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4237,depend,dependency,4237,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['depend'],['dependency']
Integrability,"ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from acti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:3457,depend,dependabot,3457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"urm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1528,wrap,wrapper,1528,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['wrap'],['wrapper']
Integrability,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4258,interface,interface,4258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['interface'],['interface']
Integrability,"vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:1446,interface,interface,1446,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,2,['interface'],['interface']
Integrability,"when I use **CST parameters** to deform mesh,; My airfoil mesh has two boundaries (far: farfield, air: airfoil),; and I use the below naca0012.cfg:; ```; ...; DV_KIND= CST; DV_MARKER= ( air ); DV_PARAM= (0, 5, 7); DV_VALUE= 0.6; ...; ```; when I use ```SU2_DEF naca0012.cfg```; the output mesh is same as **original grid**, and the output message is :; ```; ...; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; Design Variable not implemented yet. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; CSysSolve::FGMRES(): system solved by initial guess. ----------------------- Write deformed grid files -----------------------; |SU2 mesh |naca0012.su2 |; |Paraview Multiblock |naca0012.vtm |; Adding any FFD information to the SU2 file. ------------------------- Solver Postprocessing -------------------------; Deleted CGeometry container.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted COutput class. Completed in 0.335274 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. it seems that my cst method didn't work.; How can I use CST method?; Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123:339,message,message,339,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123,1,['message'],['message']
Integrability,"xactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/koray/SU2_TMZHB/SU2/Common/lib'; make: *** [Makefile:391: all-recursive] Error 1; ###. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2 LTS; - C++ compiler and version: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; - MPI implementation and version: mpiexec (OpenRTE) 4.0.3; - SU2 Version: SU2 (ver. 6.0.1 ""Falcon"")",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:1447,Wrap,Wrapper,1447,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,1,['Wrap'],['Wrapper']
Integrability,"~~; [39/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Dio.c.obj; In file included from ../externals/cgns/hdf5/H5Dio.c:23:; ../externals/cgns/hdf5/H5Dio.c: In function 'H5D__ioinfo_adjust':; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 2 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1145:29: note: in expansion of macro 'HDstrncat'; HDstrncat(local_no_collective_cause_string, ""; "", 2);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 2 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1157:29: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, ""; "", 2);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1147:25: note: in expansion of macro 'HDstrncat'; HDstrncat(local_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1159:25: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:8296,depend,depends,8296,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Modifiability," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:5262,Adapt,Adaptive,5262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3647,config,config,3647,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability," = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (can't go below y+ = 65);; - : trouble with the expansion ratio of the boundary layer;; - :the number of procs (tried with 2 - 6 -15 and the issue is the same). I don't have idea anymore and that is why I'm coming to you. . *Please provide a config file and mesh for a minimal example that recreates the problem.*. Here is a link to the .geo file (line 28 is to get a y+ of 1. You can uncomment line 29 for y+=65), the .cfg and two .su2 meshes to directly launch the case. . https://mseduculiegebe-my.sharepoint.com/:u:/g/personal/amaury_bilocq_uliege_be/EaUIIj1J_-BBktcLu8F9kosBsRjtOduWrrtENbW_bnx1ow?e=F47adW. Thank you already for your help!. Amaury. **Desktop (please complete the following information):**; - OS: Linux - Ubuntu 21.04; - C++ compiler and version: g++ (GCC) 10.3.0; - MPI implementation and version: Intel(R) MPI Library for Linux* OS, Version 2021.4 Build 20210831; - SU2 Version:7.2.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429:2532,config,config,2532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429,1,['config'],['config']
Modifiability," Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-relate well",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:1533,variab,variables,1533,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,2,['variab'],['variables']
Modifiability," MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1734,variab,variables,1734,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['variab'],['variables']
Modifiability," a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3016,variab,variable,3016,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability," aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1543,config,config,1543,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,3,"['Enhance', 'config', 'flexible']","['Enhancements', 'config', 'flexible']"
Modifiability," are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:1975,config,config,1975,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2328,Refactor,Refactor,2328,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['Refactor'],['Refactor']
Modifiability," coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deform",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1121,extend,extend,1121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['extend'],['extend']
Modifiability," distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:1954,Variab,VariableBase,1954,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['Variab'],['VariableBase']
Modifiability," each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint scaling is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:3376,config,config,3376,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['config'],['config']
Modifiability," for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; ======================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2714,adapt,adapted,2714,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Modifiability," for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:4182,variab,variables,4182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['variab'],['variables']
Modifiability," for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Ed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:4182,variab,variables,4182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['variab'],['variables']
Modifiability," have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (CentOS 7)]; - C++ compiler and version: GCC 9.1.0; - MPI implementation and version: Intel MPI 19.0.9; - SU2 Version: v7.5.1 but with following additional commits cherry-picked:; - 8ce4c3fd5e030949d037e073e1b4418e51c8754",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:1377,config,config,1377,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,1,['config'],['config']
Modifiability," in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1033,variab,variables,1033,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,2,['variab'],"['variable', 'variables']"
Modifiability," instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1995,config,configure,1995,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,2,['config'],"['configurations', 'configure']"
Modifiability," is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| Tria-1-Bndry|; | | Tria-8-Bndry|; | | Tria-9-Bndry|; | | Tria-10-Bndry|; | | Tria-11-Bndry|; | | Tria-12-Bndry|; | | Tria-13-Bndry|; | | Tria-14-Bndry|; | | Tria-15-Bndry|; | | Tria-16-Bndry|; | | Tria-17-Bndry|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 2405969 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 5820762 interior elements before parallel partitioning.; Execu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:2448,variab,variables,2448,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['variab'],['variables']
Modifiability," optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scalings, and how best to go about them. Ideally at the end of this discussion I can document some best practices (at least for the case of 3D shape optimization with FFD_CONTROL_POINTS). Any comments, suggestions, corrections, and/or insight would be super helpful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4818,config,config,4818,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['config'],['config']
Modifiability," performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1699,config,configurations,1699,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['config'],['configurations']
Modifiability," points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1852,adapt,adapt,1852,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,2,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability," res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptool",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:4848,variab,variable,4848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:4728,config,config,4728,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['config'],['config']
Modifiability," running! Well done!; But I have some suggestions about the ""building"" and design philosophy of SU2. This (programming-related) ""feature request"" is all about making SU2 even more extendable. ## Is my feature request related to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:1171,config,config,1171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['config'],['config']
Modifiability," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:3525,variab,variable,3525,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['variab'],['variable']
Modifiability," that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:982,refactor,refactor,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['refactor'],['refactor']
Modifiability," the parameter MATH_PROBLEM from DIRECT to CONTINUOUS_ADJOINT in the configuration file and:. $ ln -s restart_flow.dat solution_flow.dat; $ SU2_CFD inv_adj_NACA0012.cfg. I obtained a correct adjoint solution (density adjoint field visualized with ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja -C build install. N.B.: CPU is an Intel Core i5-6600 CPU @ 3.30GHz. - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/). I haven't found any other GitHub issue about the Quick Start tutorial. - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). I used the tip of the develop branch, as of yesterday. **Desktop:**; - OS: Debian GNU/Linux 12.0 'bookworm' (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:1511,config,configuration,1511,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,1,['config'],['configuration']
Modifiability," we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5722,variab,variables,5722,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['variab'],"['variable', 'variables']"
Modifiability," what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:2072,extend,extends,2072,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['extend'],['extends']
Modifiability," with SST-2003m, so I created a smaller 2D case to test out why this may be occurring. Below is a screenshot of one of the meshes, where the pinkish line indicates a value for an interface that I plot heat fluxes from. I have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:1145,config,config,1145,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,2,['config'],['config']
Modifiability,""" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrappe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1716,config,configuration,1716,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['config'],['configuration']
Modifiability,"""Did you mean...?"" (make config errors more helpful)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1269:25,config,config,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1269,1,['config'],['config']
Modifiability,"""Mass flux ratio on the outlet"", HistoryFieldType::COEFFICIENT);. AddHistoryOutput(""FLOW_ANGLE_OUT"", ""FLOW_ANGLE_OUT"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""FLOW ANGLE OUT at outlet"", HistoryFieldType::COEFFICIENT);. /// END_GROUP. }. void CFlowOutput::SetTurbomachineryCoefficients(const CConfig* config, COutputLegacy* output_legacy){; if (!config->GetBoolTurbomachinery()) return;; if (config->GetnZone() < 2) {; SetHistoryOutputValue(""ENTROPY_GENERATION"", output_legacy->GetTurboEntropyGen(0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""TT_EFFICIENCY"", output_legacy->GetTurboTTEff( 0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""PRESSURE_LOSS"", output_legacy->GetTurboPressLoss(0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""MASS_FLOW_RATIO"", output_legacy->GetTurboMassFlow(0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""FLOW_ANGLE_OUT"", output_legacy->GetFlowAngleOut(0,config->GetnSpanMaxAllZones()));; }; else {; 	 SetHistoryOutputValue(""ENTROPY_GENERATION"", output_legacy->GetTurboEntropyGen(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""TT_EFFICIENCY"", output_legacy->GetTurboTTEff( config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""PRESSURE_LOSS"", output_legacy->GetTurboPressLoss(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""MASS_FLOW_RATIO"", output_legacy->GetTurboMassFlow(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""FLOW_ANGLE_OUT"", output_legacy->GetFlowAngleOut(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; }. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:3152,config,config,3152,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,23,['config'],['config']
Modifiability,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:341,config,configuration,341,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['configuration']
Modifiability,"## Disclaimer; This is my first ever contribution to any GitHub project. Please give feedback on what I can Improve if I haven't done something that is expected of me. ## Proposed Changes; Added Velocity output, since I am interested in that and adding it only in the config just gets ignored and no output happens; . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2077:268,config,config,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/2077,1,['config'],['config']
Modifiability,"## Motivation; Fundamental bottlenecks exist for industrial adoption of high-fidelity physics codes with fully coupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the deve",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:409,coupling,coupling,409,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes & related work; See issue #1928:. The filename of the Paraview multiblock is set to the case name / config filename. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. . This PR aligns the filename handling of the Paraview multiblock output with the other volume outputs, besides calling the `config->GetUnsteady_FileName` function instead of the `config->GetFilename` function which is used for the other volume outputs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1930:120,config,config,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1930,5,['config'],['config']
Modifiability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:452,inherit,inheritance,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,1,['inherit'],['inheritance']
Modifiability,"## Proposed Changes. - Added the missing config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]) to CEulerSolver::GetPower_Properties; - Added a new option,BC_EVAL_FREQ for setting the evaluation frequency for the Actuator Disk and Engine Markers, in order to control the stability of the marker. ## Related Work; Fix for issue #2274 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278:41,config,config,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278,1,['config'],['config']
Modifiability,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:186,variab,variable,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['variab'],['variable']
Modifiability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['config'],['config']
Modifiability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:154,config,config,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['config'],['config']
Modifiability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:174,config,config,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,1,['config'],['config']
Modifiability,"## Proposed Changes. Even though the website has a style guide and the repo has a `.clang-format` file it has not strictly applied to pull requests. There is no style-checking workflow. As different users use different environment sometimes pull request contains unrelated style changes which makes the PR unreadable. This PR proposes to use [pre-commit-hooks ](https://pre-commit.com/) which are easy to use and enforce the style and adds a workflow check for formatting. There is no formatted/style proposed for python files. This PR additionally proposes a[ black](https://pypi.org/project/black/) based python formatting that ensures the python files are consistent maximum line length is set to 120 to increase readability. Moreover, pre-commit has additional hooks for the style of files. ; The following ones are proposed: ; `trailing-whitespace - trims trailing whitespace.` -> Especially useful for config files.; `mixed-line-ending - replaces or checks mixed line ending.`; `end-of-file-fixer - ensures that a file is either empty or ends with one newline.`. the pre-commit hooks can be easily installed via pip `pip install pre-commit`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948:908,config,config,908,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948,1,['config'],['config']
Modifiability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1663:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1663,1,['Extend'],['Extend']
Modifiability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. . ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1662:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1662,1,['Extend'],['Extend']
Modifiability,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:363,config,config,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,2,['config'],['config']
Modifiability,"## Proposed Changes. I have refactored some of the viscous residual calculation. This should not change any of the underlying numerics. + The stress tensor due to molecular viscosity and turbulence is now separated out from the residual calculation. This removes the implicit assumption that eddy-viscosity models are used. Now other models, such as explicit algebraic stress models, can be added.; + The ""heat flux vector"" was also separated out from the residual calculation.; + The Jacobian calculation for `CAvgGrad_Flow` has been rewritten so as to be more readable.; + The three main viscous numerics classes (`CAvgGrad_Flow`, `CGeneralAvgGrad_Flow`, and `CAvgGradInc_Flow`) are now all children of a base class, `CAvgGrad_Base`.; + Instead of two sets of classes for the viscous residual, normal and ""corrected"", I made a boolean switch in the constructor. This eliminates the duplication between normal and ""corrected"" viscous numerics. There's definitely some more work that could be done to generalize the base class and optimize the speed, but I'm content with the code for now. ## Related Work. This piggybacks off of PR #612, though the two PRs are separate and distinct. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:28,refactor,refactored,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['refactor'],['refactored']
Modifiability,"## Proposed Changes. In line with what we presented in the hackathon, this PR comes to be the first stage of a major reformatting that we are planning for the Driver structure. The goal is to converge to a structure that is more constant in time and that easily accommodates multi-physics via config file definition, instead on a *case by case* new CDriver class. The goal of this PR is not to be merged immediately, but rather to initiate discussion on the topic. I have created a project in; https://github.com/su2code/SU2/projects/8; where the stages of this process will be done. . ## Related Work. I run a presentation together with @talbring on input/output reformatting during the hackathon that took place at the annual SU2 Developers Meeting. The relevant slides for this PR are shared:. [ReformattingDriver.pdf](https://github.com/su2code/SU2/files/2405682/ReformattingDriver.pdf). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585:293,config,config,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/585,1,['config'],['config']
Modifiability,"## Proposed Changes. It would be good to extend the CFL_ADAPT option to include species transport for compressible flows. I can add a test case if it is needed. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:41,extend,extend,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,1,['extend'],['extend']
Modifiability,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1067:293,variab,variables,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067,1,['variab'],['variables']
Modifiability,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:327,coupling,coupling,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definiti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:608,extend,extended,608,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,2,"['extend', 'parameteriz']","['extended', 'parameterization']"
Modifiability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:624,flexible,flexible,624,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes. This PR introduces a completely rewritten output structure. If you have ever looked into the old output_structure.cpp file, you probably noticed that it was quite messy. To add new output to screen or history people just copied what was there and modified it to suit there own needs. This resulted in a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:682,flexible,flexible,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:125,config,config,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,2,['config'],['config']
Modifiability,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:563,variab,variables,563,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variables']
Modifiability,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:837,refactor,refactoring,837,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:772,Config,Config,772,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,2,['Config'],['Config']
Modifiability,"## Proposed Changes. This pull request adds the thermal conductivity, heat capacity and diffusivity as output for the incompressible solver in order to help the process of debugging inside SU2. During this process, we found some bugs regarding the diffusivity and thermal conductivity when the FLUID_MIXTURE model is used. Additionally, unused variables for computing the diffusivity have been removed. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956:344,variab,variables,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956,1,['variab'],['variables']
Modifiability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:58,Refactor,Refactorization,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['Refactor'],['Refactorization']
Modifiability,"## Proposed Changes. With this pull request, we aim to initialize the fluid models based on the Ideal gas laws for incompressible flows in a standard way using the THERMODYNAMIC_PRESSURE($P_{op}$) and the INC_TEMPERATURE_INIT ($T_{init}$), the initial density is computed based on the ideal gas law :. $\rho_{init}= P_{op} / R T_{init}$. When the FLUID_MODEL is CONSTANT_DENSITY, the constant density must be given in the config file using the option DENSITY_CONSTANT, similar as it is done when viscosity, thermal conductivity and diffusivity models are chosen as constant. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2137:422,config,config,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/2137,1,['config'],['config']
Modifiability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:44,extend,extend,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['extend'],['extend']
Modifiability,"## Proposed Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:279,Variab,Variables,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,1,['Variab'],['Variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:451,extend,extend,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,1,['extend'],['extend']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:133,config,config,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,3,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360:139,config,config,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; * Bug fix for surface-based objectives so that they are not counted multiple times when multiple surfaces are being designed; * Segfault fix for ParaView binary in serial.; * Fixes so that ParaView binary works properly with SU2_SOL (writing ASCII instead) and the python scripts for gradients and shape design; * Fixes line endings of SU2_PY/SU2/run/mergy.py; * Fixes TecIO typecasting issue found in #339; * Removes y^+ output from laminar Navier-Stokes (now RANS only); * Adjustment to output variables for incompressible flows; * Removes some warnings; * Xcode project file update. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Includes fix from #339, which will be closed.; Resolves #62 ; Resolves #54 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598:590,variab,variables,590,https://su2code.github.io,https://github.com/su2code/SU2/pull/598,1,['variab'],['variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:94,Adapt,Adapting,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,2,"['Adapt', 'adapt']","['Adapting', 'adapt']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:452,portab,portability,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['portab'],['portability']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds an interface to SU2_DOT_AD for volume -> surface sensitivity projection. New option to write out sensitivities at each surface vertex to a generic ASCII file for use with an external parameterization. Includes some minor code clean up and fixes some compiler warnings. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:282,parameteriz,parameterization,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['parameteriz'],['parameterization']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/546:141,variab,variables,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/546,1,['variab'],['variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:344,variab,variables,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,1,['variab'],['variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:772,config,config,772,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; In this pull request, we extend the previous pull request of the mixing model adding the options of viscosity, thermal conductivity and other properties based on the species mass fractions. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This corresponds to the 2/3 part of the complete mixing model which started with the feature_mixturedensity in the previous pull request. We expect to add the final properties and the mixture specific heat capacity in the next pull request. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1687:119,extend,extend,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1687,1,['extend'],['extend']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/958:107,adapt,adaption,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/958,1,['adapt'],['adaption']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010:199,refactor,refactors,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010,2,"['inherit', 'refactor']","['inheritance', 'refactors']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds the necessary base classes (solver, numerics, variable) for having an arbitrary number of scalar transport equations added to flow problems in a segregated manner (alongside a turbulence model, if necessary). Most of the numerics is shared with the scalar methods for the turb. solvers to eliminate duplication, and it should be easy now to add child classes for any new scalar transport models. In this PR, only a passive scalar has been implemented, but we are also building on this framework to add a flamelet model for combustion as a child class. A passive scalar test case will be added. It still needs more work, but it is important to have the skeleton merged now to lessen the burden of fixing conflicts with the ongoing restructuring in driver, variable, output, etc. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/777:153,variab,variable,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/777,2,['variab'],['variable']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:512,config,config,512,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,2,['config'],"['config', 'configs']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:806,adapt,adaptation,806,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/535:219,parameteriz,parameterizations,219,https://su2code.github.io,https://github.com/su2code/SU2/pull/535,2,"['parameteriz', 'variab']","['parameterizations', 'variables']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:181,variab,variable,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['variab'],['variable']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR greatly improves the robustness and convergence behavior of the flow solvers by implementing a more sophisticated controller for nonlinear iterations along with several other important modifications. The changes are the following:; - New under-relaxation strategy. Variables such as density and energy are only allowed to change by +/- 20% with each nonlinear iteration by applying an under-relaxation parameter to the updates at each node, which helps with difficult transients, especially at calculation startup. Also applied to turbulence model updates (though threshold is larger).; - CFL adaption via an exponential progression with under-relaxation approach, i.e., changes to CFL are coupled to the under-relaxation parameter (small under-relaxation parameter = decrease, and large = increase). CFL is now locally defined for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:367,Variab,Variables,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,2,"['Variab', 'adapt']","['Variables', 'adaption']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a clean up of the configure options and bindings. I have removed unused bindings: HDF5, ZLIB, SZIP, JSON, and LAPACK. If anyone needs these, just let me know and we can put the necessary bindings back into configure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We can also think about changing the autotools here as discussed in #584. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:123,config,configure,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,2,['config'],['configure']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is a joint effort with @vdweide. . We have added an extensible library of classes for the purposes of solution verification. We hope that folks will use it and continue growing the library to increase the formal verification activity for the code. Our design goals for the classes were:. * lightweight & small memory footprint.; * reusable by different solvers (so far: all DG and FV fluid solvers).; * require almost no changes to the solver classes when switching between different solutions by using polymorphism (other than maybe where they get instantiated).; * applicable for any of the following: imposing initial conditions, analytic solutions, or manufactured solutions. There is also now a user-defined solution class that folks can use to prescribe initial conditions as a function of space for any type of calculation. It should be easy to add new solutions to the library by creating new child classes. We are placing a few cases in the regressions, but we will also add full cases with analysis to the V&V repo. It will also be discussed in a presentation at the developers meeting. You will find a few other small bug fixes in the PR as well. As an example, here are some (particularly nice) sample observed order of accuracy results for the compressible FV solver with a laminar N-S MMS (to be fair, not all look this clean):. ![accuracy_rms_rho](https://user-images.githubusercontent.com/4896083/56620511-fc80fb80-65dd-11e9-942f-b7add7edeae8.png); ![slope_rms_rho](https://user-images.githubusercontent.com/4896083/56620512-fd199200-65dd-11e9-97db-537f6bd00114.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Cases to be added as part of the V&V repo discussed in #581 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672:602,polymorphi,polymorphism,602,https://su2code.github.io,https://github.com/su2code/SU2/pull/672,1,['polymorphi'],['polymorphism']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:574,config,config,574,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:165,refactor,refactoring,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,3,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:341,config,config,341,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Adds the functionality of reading fluid data from an unstructured triangulated lookup table and interpolating. No coupling with a solver (combustion) yet, at this point we will only add a verification test. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; We split #1223 into smaller chunks. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637:206,coupling,coupling,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Based on the observations of Albring et al. in ""Challenges in Sensitivity Computations for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that ap",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:336,adapt,adapted,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,['adapt'],['adapted']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Ffor wall functions a warning is issued when y+ < 5, but the value 5 should be the user defined limit obtained from the config option.; Furthermore, some spelling errors are correcred. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:212,config,config,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The wall function variable y+ was not computed on the halo nodes, leading to visual 'spots' in the solution. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1768 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:110,variab,variable,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,1,['variab'],['variable']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:411,variab,variable,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames.; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. Additional independent transport equations are optionally solved for the species like NO and CO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917:410,variab,variable,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When `(Objective < Value ) * Scale` ('<' can be '>') is added to OPT_OBJECTIVE in the configuration file, it is treated as a penalty function. When the constraint is satisfied, the penalty function value should be zero. However, it is currently set to the function value. The same `elif` condition as in `obj_dp` should be used. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1968. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1969:178,config,configuration,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/1969,1,['config'],['configuration']
Modifiability,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:1407,Config,Config,1407,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,1,['Config'],['Config']
Modifiability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:452,inherit,inheritance,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,1,['inherit'],['inheritance']
Modifiability,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:681,adapt,adaptation,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326:288,variab,variable,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326,1,['variab'],['variable']
Modifiability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:591,variab,variables,591,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,2,['variab'],['variables']
Modifiability,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:52,variab,variables,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; @jtneedels and I have worked on implementing the Air-7 gas model to the NEMO native fluid model. This allows for simulations of inviscid weakly ionized flows with the addition of NO+ and e-. . I am open to adding a test case for this, similar to the thermal bath case, since they run extremely fast, though I am open to idea. Work is ongoing to extend this viscous simulations.; Updates from #1533 are added here as well. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555:366,extend,extend,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555,1,['extend'],['extend']
Modifiability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:329,extend,extend,329,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['extend'],['extend']
Modifiability,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062:200,Inherit,Inherit,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062,2,"['Inherit', 'extend']","['Inherit', 'extends']"
Modifiability,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:208,config,config,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['config'],['config']
Modifiability,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:270,layers,layers,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,4,"['layers', 'variab']","['layers', 'variables']"
Modifiability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:171,Config,Config,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['Config'],['Config']
Modifiability,"## Proposed Changes; Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. `vcpkg` is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:787,config,configurable,787,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['config'],['configurable']
Modifiability,"## Proposed Changes; Added local timestep and local CFL as volume output for both the flow and turbulence variables; . ## Related Work; In relation to #2056. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060:106,variab,variables,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Added profiling option through `gprof`. This allows you to profile your SU2 application to see where it spends most of its time and therefore figure out which of your new features could use some better efficiency. . How to enable profiling? Add the flag `-Denable-gprof` to your `meson.py` command and re-configure. . Now you can run SU2 or SU2 AD as normal. However, at the end, a file called `gmon.out` will be generated in your working directory. . In order to get the analysis from the profiling, run `gprof <path/to/SU2/executable> > analysis.txt`. Now, the file `analysis.txt` contains the profiling analysis which you can use to assess the efficiency of your code. Added instructions for enabling and using the gprof option on the su2code.github.io repository under PR #145 ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2243:326,config,configure,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/2243,1,['config'],['configure']
Modifiability,"## Proposed Changes; Adding cstdint header to printing_toolbox.hpp. ## Reason; I was building SU2 from source this morning. Running ninja threw an compilation error with a comment to import cstdint in printing_toolbox.hpp since uint8_t is not defined in the scope:. ```; ...; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:240:10: error: ‘uint8_t’ was not declared in this scope; 240 | vector<uint8_t> typeBuf(myElem);; | ^~~~~~~; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:30:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; did you forget to ‘#include <cstdint>’?; 29 | #include ""../../../../Common/include/toolboxes/printing_toolbox.hpp""; +++ |+#include <cstdint>; 30 | ; ...; ```; Adding the header solves the issue. . Here some additional information:; OS: Fedora 38; Configuration: MPI, pythonwrapper, autodiff; Compiler: g++ 13.1.1. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2099:807,Config,Configuration,807,https://su2code.github.io,https://github.com/su2code/SU2/pull/2099,1,['Config'],['Configuration']
Modifiability,"## Proposed Changes; Adding in history output residuals of species flamelet controlling variables for multizone simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2269:88,variab,variables,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/2269,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:628,config,config,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:66,variab,variable,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:399,Config,Configuration,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,2,"['Config', 'config']","['Configuration', 'config']"
Modifiability,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/966:385,refactor,refactoring,385,https://su2code.github.io,https://github.com/su2code/SU2/pull/966,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:304,variab,variables,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/980:181,variab,variables,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/980,2,['variab'],['variables']
Modifiability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:192,variab,variables,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; Couple efficiency/functionality improvements to the topology optimization implementation as detailed in TestCases/fea_topology/config.cfg. Edit: This requires c++11 so it will have to go after the PR that enables it. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:148,config,config,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,1,['config'],['config']
Modifiability,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1201:454,config,config,454,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201,1,['config'],['config']
Modifiability,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:47,config,configuration,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:21,Enhance,Enhance,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['Enhance'],['Enhance']
Modifiability,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/900:21,Enhance,Enhanced,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/900,3,"['Config', 'Enhance', 'config']","['Configure', 'Enhanced', 'config-file']"
Modifiability,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,1,['Extend'],['Extend']
Modifiability,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,4,"['Extend', 'adapt', 'extend']","['Extend', 'adaptive', 'extended']"
Modifiability,"## Proposed Changes; Extends the custom outputs with point probes (nearest point, no interpolation is done). ## Related Work; #1907 cc @DonalMcC. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909:21,Extend,Extends,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909,1,['Extend'],['Extends']
Modifiability,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1193:204,variab,variables,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Fixes AD compilation of parallel Tecplot binary output.; . ## Related Work; AD build failure noted by Tom Economon on Mac w/ configure command:; ./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --enable-autodiff --enable-direct-diff --enable-tecio. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/665:146,config,configure,146,https://su2code.github.io,https://github.com/su2code/SU2/pull/665,1,['config'],['configure']
Modifiability,"## Proposed Changes; Fixes bug that causes rotational grid velocity ramp to not be applied correctly if the ramp is specified in a multizone configuration file. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:141,config,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Generalize the variables in the CLookUpTable class for use in general look-up cases (not only progress variable-enthalpy).; Add dimension to CLookUpTable class to allow for quasi-3D interpolation (linear interpolation between two trapezoidal maps stacked in the third dimension).; ; I added a unit test as a test case with the quasi-3D table to show the correct use of syntax for 3D look-up operations. ## Related Work; Can be used in feature_multilayer_perceptron in the CDataDrivenFluid fluid model for look-up operations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825:36,variab,variables,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825,2,['variab'],"['variable-enthalpy', 'variables']"
Modifiability,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:87,variab,variable,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,1,['variab'],['variable']
Modifiability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:107,Variab,Variable,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Variab'],['Variable']
Modifiability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:197,inherit,inherits,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,3,"['inherit', 'variab']","['inherits', 'variable']"
Modifiability,"## Proposed Changes; Hi all,. In neither solver (incompressible and compressible) viscous fluxes are considered in the symmetry plane boundary condition. In both codes the BC_sym_plane links directly to Euler_Wall. . Compressible: A ""reflected state"" approach is done. Create a reflected halo node which enforces symmetry and compute the occurring flux just as in the interior. Problem: the primitive gradients are not adapted nor a viscous flux based on that is computed. Incompressible: Here a ""direct flux"" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:419,adapt,adapted,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['adapt'],['adapted']
Modifiability,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:495,Variab,Variable,495,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,3,['Variab'],['Variable']
Modifiability,"## Proposed Changes; Hi all,. this PR removes all trailing whitespaces from `.cpp` `.hpp` `.inl` `.py` `.build ` files using ; `find . -type f -name '*.cpp' -exec sed --in-place 's/[[:space:]]\+$//' {} \+`; in the code root. and all tabs are replaced by 2 spaces for `.cpp` `.hpp` `.inl` files using; `find . -name '*.cpp' ! -type d -exec bash -c 'expand -t 2 ""$0"" > /tmp/e && mv /tmp/e ""$0""' {} \;`; This step of course can lead some misalignment if the person introducing the tab did not have tabs rendered as 2 spaces (e.g. 4 spaces per tab). This is up of course for discussion and can be seen as a test vehicle to get everyones discussion. One can try to merge this to check if merge conflicts are really that bad to handle. Of course there will be conflicts on lines you touched as well. A possible solution to merge conflicts is to apply the commands to your filebase and then merge... then it is quite likely that your only merge conflicts are the ones you have with develop anyway. The rough plan discussed with @talbring is to include automatic checking of trailing whitespaces, tabs, overlong lines and possibly other stuff. . Cheers 🍾 to @WallyMaier who seemed to have to have that on his agenda for quite some time. . **Edit**: Only the restructured C*cpp C*hpp C*inl files are currently cleaned to keep the commit size down. This could be extended to other file chunks in the future. See externals/utils/replace-tabs...sh for a little shell script to get the receive the same results as in this PR. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style. **-> now it should be a bit more**; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808:1353,extend,extended,1353,https://su2code.github.io,https://github.com/su2code/SU2/pull/808,1,['extend'],['extended']
Modifiability,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:1025,config,config-option,1025,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,1,['config'],['config-option']
Modifiability,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:418,config,configuration,418,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:705,Adapt,Adaptive,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:196,variab,variable,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,1,['variab'],['variable']
Modifiability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:189,config,configs,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,1,['config'],['configs']
Modifiability,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:246,portab,portable,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,1,['portab'],['portable']
Modifiability,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['config'],['config']
Modifiability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:58,adapt,adaptively,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['adapt'],['adaptively']
Modifiability,"## Proposed Changes; I just added a new folder in the Turbomachinery test cases, containing the configuration files for the Aachen turbine test case. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:96,config,configuration,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,1,['config'],['configuration']
Modifiability,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:746,variab,variables,746,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,1,['variab'],['variables']
Modifiability,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1061:161,variab,variables,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Implemented updated turboperformance methods and adds improved history ouput of turboperformance variables to match screen output. ## Related Work; Follows on from removal of legacy output - https://github.com/su2code/SU2/pull/2003. Implements improved turboperformance calculations used in feature_turbomachinery_restruct_singlezone - https://github.com/su2code/SU2/pull/1316. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2011:118,variab,variables,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/2011,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:33,config,configuration,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,3,['config'],"['config', 'configuration']"
Modifiability,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:430,Enhance,Enhancements,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['Enhance'],['Enhancements']
Modifiability,"## Proposed Changes; In a joint collaboration with @rsanfer we discovered that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consiste",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:687,flexible,flexible,687,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:689,adapt,adaptive,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['adapt'],['adaptive']
Modifiability,"## Proposed Changes; Introduction of mixture fraction transport equation to flamelet species solver. This allows for solving partially premixed, laminar combustion problems with heat transfer. The controlling variable names are generalized and have to be specified in the configuration file, such that they can be matched to the controlling variable names in the table. ; Additionally, the output writing for the flamelet variables has been generalized such that it can generate all the necessary outputs for any number of controlling variables.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057:209,variab,variable,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057,5,"['config', 'variab']","['configuration', 'variable', 'variables']"
Modifiability,"## Proposed Changes; Plain vanilla approach to topology optimization, element-wise constant density parameterization and SIMP interpolation scheme. It is working nicely for 2D cases of moderate size (10 to 100k elements), over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:100,parameteriz,parameterization,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,1,['parameteriz'],['parameterization']
Modifiability,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:222,extend,extends,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,1,['extend'],['extends']
Modifiability,"## Proposed Changes; Removing a couple unused variables to quash compiler warnings on Mac.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/702:46,variab,variables,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/702,1,['variab'],['variables']
Modifiability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:105,variab,variable,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:203,variab,variables,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['variab'],['variables']
Modifiability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:40,variab,variables,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,2,['variab'],['variables']
Modifiability,"## Proposed Changes; The current PR serves two purposes. First, it extends the sliding interface capabilities for multi-zone fluid-fluid interfaces to incompressible flows. Until now, these features were only available for compressible flows. For example, take the following case of a viscous flow enclosed by diathermal walls and discretized using two different zones with a permeable, non-matching interface:. ![testcase](https://user-images.githubusercontent.com/8706821/51894668-b6cee100-23a8-11e9-8ee8-4b3d846417b2.png); ![discretization](https://user-images.githubusercontent.com/8706821/51894939-5e4c1380-23a9-11e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the inc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:67,extend,extends,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['extend'],['extends']
Modifiability,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:401,extend,extends,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['extend'],['extends']
Modifiability,"## Proposed Changes; The implementation of the symmetry plane is incomplete. We follow here the book of Blazek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:967,variab,variables,967,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['variab'],['variables']
Modifiability,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913:112,flexible,flexible,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/913,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260:62,extend,extended,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260,1,['extend'],['extended']
Modifiability,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:306,variab,variables,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['variab'],['variables']
Modifiability,"## Proposed Changes; There has been talk about using external solvers in SU2. I am especially interested in this as due to the ill-conditioned matrices I get in structural topology optimization a direct sparse solver will probably be required.; One tricky issue with using external solvers is their compatibility with the discrete adjoint. Luckily in the reverse mode we do not differentiate the solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:797,refactor,refactoring,797,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:988,adapt,adaptation,988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; There were some changes to the config_template options for the DV indices which was not reflected in the python code and the TestCases config files. For example, the index for HICKS_HENNE bumps changed from 1 to 30 in the config_template.cfg file. But this change was not reflected in the python scripts or any of the TestCases config files. This PR fixes this issue. ; . ## Related Work; #733 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/757:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/757,2,['config'],['config']
Modifiability,"## Proposed Changes; This PR adds a regression testing pipeline based on the new Github actions features (https://github.com/su2code/SU2/actions). It uses docker containers for building and running the tests (https://hub.docker.com/r/su2code/build-su2 and https://hub.docker.com/r/su2code/test-su2, respectively, based on Ubuntu18.04/gcc7.4/OpenMPI2). This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:650,flexible,flexible,650,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:540,variab,variable,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,4,"['adapt', 'variab']","['adaptation', 'variable']"
Modifiability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:280,adapt,adaptation,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1488:414,variab,variables,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This PR fixes a bug in the restart of problems which involve dynamic meshes and turbulence.; Given that the Grid Velocities are written in the restart files after the turbulence variables, the indices must me incremented when the restart file is being read in.; At this moment that does not happen, as the variable index is incremented but later reset, and therefore the GridVel container receives incorrect values. ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/618:199,variab,variables,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/618,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:68,adapt,adaptive,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,2,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adaptive']"
Modifiability,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:77,adapt,adapted,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,2,"['adapt', 'config']","['adapted', 'config']"
Modifiability,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271:422,config,configs,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271,1,['config'],['configs']
Modifiability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:167,inherit,inherits,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['inherit'],['inherits']
Modifiability,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:164,variab,variable,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,4,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,"## Proposed Changes; This PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:278,adapt,adapts,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,3,"['adapt', 'variab']","['adapts', 'variables']"
Modifiability,"## Proposed Changes; This PR is a preparatory step to reintegrate all the turbo-machinery features with the current develop.; In this first step, I have restructured the single-zone turbomachinery problem to run using both the SingleZoneDriver and the FluidIteration. ; The Next steps will be . - [x] Adapt the turbomachinery output with the new Output structure. ; - [ ] Fix the Multizone steady turbomachinery problem to run with the MultizoneDriver.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/866:301,Adapt,Adapt,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/866,1,['Adapt'],['Adapt']
Modifiability,"## Proposed Changes; This PR makes several changes to the NEMO code:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:253,refactor,refactoring,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:29,refactor,refactors,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['refactor'],['refactors']
Modifiability,"## Proposed Changes; This PR removes `CMultiphysicsZonalDriver` from the legacy `CDriver.cpp` and related config options.; It was part of some initial contributions that went into a major driver structure rework. It's now just a leftover which is fully superseded by the new `CMultizoneDriver` anyway. It's meant just as a quick deletion to tidy up the code before the next release.; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/776:106,config,config,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/776,1,['config'],['config']
Modifiability,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160:378,config,configuration,378,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160,1,['config'],['configuration']
Modifiability,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:31,extend,extends,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,1,['extend'],['extends']
Modifiability,"## Proposed Changes; This branch implements the Langtry Menter transition model coupled to SA turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:333,config,config,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"## Proposed Changes; This branch implements the Langtry Menter transition model coupled to SST turbulence model (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html) and to SA turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_MODEL. Values are LM for LM2009 implementation and LM2015 for the respective model. The default is NONE.; 2. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is no",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:420,config,config,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:388,variab,variable,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['variab'],['variable']
Modifiability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:668,coupling,coupling,668,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,2,"['coupling', 'variab']","['coupling', 'variable']"
Modifiability,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:421,config,config,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399:206,variab,variables,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:178,refactor,refactored,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,1,['refactor'],['refactored']
Modifiability,"## Proposed Changes; This is a chore PR to const variables when allowed and to alter loops to prevent declared iterators. This may be unnecessary/overkill. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923:49,variab,variables,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849:108,variab,variable,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/849,1,['variab'],['variable']
Modifiability,"## Proposed Changes; This is a simple enhancement of the fixed CL mode. Currently the Fixed CL mode only exits when the specified iteration limit is reached. With these changes, the mode is a little more robust and checks for the specified Residual or Cauchy convergence and additionally checks that the CL is converged to the target CL value to within CAUCHY_EPS. I have currently preserved the Finite Differencing that occurs at the end of the Fixed CL mode. I am not sure why this is required and would like to get rid of it if possible. If there is a reason for the finite differencing to calculate dCL/dAlpha, please let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:38,enhance,enhancement,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,2,['enhance'],['enhancement']
Modifiability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:668,parameteriz,parameterization,668,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['parameteriz'],['parameterization']
Modifiability,"## Proposed Changes; This is one I have been trying to solve for a while and now found a solution that is not a hack.; Under some circumstances that I do not understand (very case dependent) one of the cross terms (structure w.r.t. fluid) creates spurious values, e.g.:; ![image](https://user-images.githubusercontent.com/38071223/48981547-af503a80-f0ce-11e8-9875-1b9a2d5fd50d.png); The fix I found is to change the recording strategy, instead of making 3 recordings of the structural iteration (one for each set of input variables) this is merged into a single recording.; So from this:; ![image](https://user-images.githubusercontent.com/38071223/48981607-aad85180-f0cf-11e8-9740-dd6f51f249c3.png); To this:; ![image](https://user-images.githubusercontent.com/38071223/48981615-bc215e00-f0cf-11e8-8dd1-c2ae00b3a973.png); So far this has fixed the issue for a range of cases, large to small.; [Here](https://github.com/su2code/SU2/files/2613239/spurious_values.zip) you can see the difference between running the case in the example picture with and without the fix.; . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615:522,variab,variables,522,https://su2code.github.io,https://github.com/su2code/SU2/pull/615,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:80,refactor,refactor,80,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,3,"['config', 'refactor']","['config', 'refactor']"
Modifiability,"## Proposed Changes; This is the initial PR for a long overdue refactorization of the mesh deformation routines. The mesh deformation acquires here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:63,refactor,refactorization,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['refactor'],['refactorization']
Modifiability,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:505,variab,variables,505,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929:86,adapt,adaptation,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/929,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:911,coupling,coupling,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:911,coupling,coupling,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,2,['coupling'],['coupling']
Modifiability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:193,refactor,refactorization,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,6,"['config', 'coupling', 'extend', 'refactor', 'variab']","['config', 'coupling', 'extended', 'refactorization', 'variables']"
Modifiability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:82,adapt,adaptation,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:40,config,configuration,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Two small bug fixes that I have encountered.; - One typo that was messing up the` REL_RMS_ADJOINT_*` variables; - One initialization for fixed CL which was missing. ; . ## Related Work; Feel free to add any other bugs to squash. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/816:122,variab,variables,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/816,1,['variab'],['variables']
Modifiability,"## Proposed Changes; We aim to implement 2 things:; 1. Restart files contain variables that are not necessary for restarts. with the keyword WRT_RESTART_COMPACT= YES we can write compact restart files containing only necessary fields.; 2. Other output contains variables that are not requested (all SOLUTION variables are always written). When WRT_RESTART_COMPACT= YES, we do not automatically write the SOLUTION fields to e.g. paraview.; 3. When WRT_RESTART_COMPACT= NO, we keep the original behavior for backward compatibility. ## Related Work; Mentioned in Issue (request) #2118 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2372:77,variab,variables,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/2372,3,['variab'],['variables']
Modifiability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:135,config,config,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,1,['config'],['config']
Modifiability,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:100,variab,variables,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,2,['variab'],['variables']
Modifiability,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:353,variab,variables,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,1,['variab'],['variables']
Modifiability,"## Proposed Changes; mini-PR that adds missing privatization to a loop variable. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2350:71,variab,variable,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/2350,1,['variab'],['variable']
Modifiability,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:1015,coupling,coupling,1015,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,2,"['config', 'coupling']","['config', 'coupling']"
Modifiability,"## Summary; The fluid should freely pass a fluid interface between RANS zones. However, in some unsteady 2D simulations, I encountered the interface generating unexpected flow solutions which is observed through the increased eddy viscosity and unphysical velocity as the inner zone rotates with respect to the stationary outer zone. I have tried using; - a finer mesh with more cells on the zone interface,; - the incompressible and compressible RANS solvers, ; - smaller time steps and more pseudo-time iterations,; - different interface interpolation methods (NEAREST_NEIGHBOR and WEIGHTED_AVERAGE),; - different convective numerical methods (upwind/central and with and without MUSCL_FLOW). however the problem persisted. ## Setup. ### Mesh; <img width=""600"" alt=""Screenshot 2024-03-30 at 10 28 21"" src=""https://github.com/su2code/SU2/assets/81166192/6e5a8fcf-fd72-41ed-a5cf-b2a477a55b0a"">. _File_: ; [vawt_ami.su2](https://github.com/su2code/SU2/files/14811551/vawt_ami.txt). ### Configuration files; _su2Config.cfg_:; ```; SOLVER= INC_RANS; KIND_TURB_MODEL= SST; MATH_PROBLEM= DIRECT; CONFIG_LIST= (zone_sta.cfg, zone_rot.cfg). INNER_ITER= 1; OUTER_ITER= 20; TIME_ITER= 3160. TIME_DOMAIN= YES; TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER; TIME_STEP = 0.000593412; MAX_TIME= 50.0. INC_DENSITY_INIT= 1.225; INC_VELOCITY_INIT= ( 10.0, 0.0, 0.0 ); INC_TEMPERATURE_INIT= 288.15; INC_INLET_TYPE= VELOCITY_INLET; INC_OUTLET_TYPE= PRESSURE_OUTLET. REF_ORIGIN_MOMENT_X = 0.00; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; REF_LENGTH= 0.85; REF_AREA= 1.7. VISCOSITY_MODEL= CONSTANT_VISCOSITY; MU_CONSTANT= 1.8375E-5. MARKER_ZONE_INTERFACE= ( AMI1, AMI2 ); MARKER_FLUID_INTERFACE= ( AMI1, AMI2 ); KIND_INTERPOLATION= NEAREST_NEIGHBOR. NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES; CFL_NUMBER= 20.0; MAX_DELTA_TIME= 1E6. SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; MUSCL_TURB= NO; SLOPE_LIMITER_TURB= VENKATAKRISHNAN; VENKAT_LIMITER_COEFF= 0.05; REF_SHARP_EDGES = 3.0; SENS_REMOVE_SHARP = NO; LIMITER_ITER= 9",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255:985,Config,Configuration,985,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255,1,['Config'],['Configuration']
Modifiability,"### Discussed in https://github.com/su2code/SU2/discussions/1877. <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** January 5, 2023</sup>; I would like to monitor the average fluid temperatures in parts of the domain volume. For example here i the part marked red.; ![grafik](https://user-images.githubusercontent.com/42602495/210860583-4e521476-096e-454c-9824-33de652b8e40.png); </div>. In the discussion it became clear, that surface-averages and integrals are supported by means of specifying an MARKER_INTERNAL in the mesh. Could it be possible to extend this functionality to support also volume-elements for MARKER_INTERNAL?. Which code changes would be required to make this happen?. Kind regards,. Christian",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:584,extend,extend,584,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['extend'],['extend']
Modifiability,"### Discussed in https://github.com/su2code/SU2/discussions/2101. <div type='discussions-op-text'>. <sup>Originally posted by **albenstein** July 26, 2023</sup>; *If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. When I use SU2 with QuickStart config file with OpenMPI, it gives error like in attached file.; Command is:; `mpirun -np 8 --allow-run-as-root SU2_CFD inv_NACA0012.cfg`. [segmentation_fault.txt](https://github.com/su2code/SU2/files/12170716/segmentation_fault.txt); </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103:483,config,config,483,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103,2,['config'],['config']
Modifiability,'Custom' Design variable,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/215:16,variab,variable,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/215,1,['variab'],['variable']
Modifiability,"(new user here and apologies if this has been raised/addressed before). I want to perturb the Hicks and Henne bump function design variables and write out the airfoil shape, __without running the primal or adjoint solvers__. So I want to implement `Y = f(X)` where `X` is the vector of Hicks and Henne bump function weights and `Y` is a vector of the actual `y` coordinate of the airfoil at each `x` corresponding to an element of `X`. Is there a script that already exists to this effect? If so can you share that with me? If not do you have suggestions as to how to implement this? Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1234:131,variab,variables,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1234,1,['variab'],['variables']
Modifiability,") |; -------------------------------------------------------------------------; | Copyright 2012-2022, SU2 Contributors (cf. AUTHORS.md) |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]; Lower and upper bound for each independent variable: [(-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:1659,variab,variables,1659,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['variab'],['variables']
Modifiability,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979:637,variab,variables,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/979,1,['variab'],['variables']
Modifiability,"**### MPI partitioning issues for Turbomachinery for processor count more than 6 in mpi**. I have noticed an issue with running my turbomachinery model in SU2 version 7.04, 7.1 and version 7.1.1 during the Turbomachinery preprocessing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:674,config,config,674,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['config'],['config']
Modifiability,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:661,variab,variables,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['variab'],['variables']
Modifiability,"**Describe the bug**. Hi SU2 developers,. I will consider this as a possible bug until I hear the opinion of the SU2 community. As a validation test case for turbulence models, I am running the NASA Hump test case (https://turbmodels.larc.nasa.gov/nasahump_val.html). However, the results obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hum",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:961,config,config,961,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['config'],['config']
Modifiability,"**Describe the bug**. Hi, everyone. I'm trying to using hybrid rans/les method in my work. However, it seems that the implementation of SA_EDDES length scale in su2 is different from the paper, so I wonder whether it is a bug or just for the sake of experience. The relevant code locate in the void SetDES_LengthScale() function in SU2_CFD/src/solvers/CTurbSASolver.cpp， in line 1480 to 1495 the vorticity-adaptive SGS is calculated. But different for the published function, the absolute value of edge vector between vertex i and j are used and such a form seems unphysical. 1480 ln_max = 0.0;; 1481 deltaDDES = 0.0;; 1482 for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; 1483 jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; 1484 coord_j = geometry->nodes->GetCoord(jPoint);; 1485 for (iDim = 0; iDim < nDim; iDim++){; 1486 delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); //why absolute value; 1487 }; 1488 deltaDDES = geometry->nodes->GetMaxLength(iPoint);; 1489 ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; 1490 ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; 1491 ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; 1492 aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; 1493 ln_max = max(ln_max,aux_ln);; 1494 vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; 1495 }. Any help would be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462:406,adapt,adaptive,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462,1,['adapt'],['adaptive']
Modifiability,"**Describe the bug**. I am unable to complete the compilation of SU2 v7.3.0 on Fedora 35 using the GCC compiler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Bu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:573,config,configured,573,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['config'],['configured']
Modifiability,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349:494,config,configure,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349,1,['config'],['configure']
Modifiability,"**Describe the bug**. You will have to bear with me, I might get some of this wrong, I am not entirely sure what is going on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:342,variab,variable,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,3,['variab'],"['variable', 'variables']"
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/855:221,config,config,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/855,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. As I used SU2 develop version for shape optimization, it gave a keyerror in TestCase ; disc_adj_rans/naca0012, ; shape_optimization.py -f turb_NACA0012_sa.cfg; and disc_adj_rans/cylinder,; shape_optimization.py -f cylinder_Windowing.cfg. I have compiled SU2 with AD enabled. ; Also try disc_adj_turbomachinery/transonic_stator_2d, gave the same error.; I would like to know if I make some mistakes to run the testcases. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Found: mesh_cylinder.su2; New Project: ./; Traceback (most recent call last):; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 164, in __getitem__; return super(Config,self).__getitem__(k); KeyError: 'OPT_OBJECTIVE'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/wkholy/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/home/wkholy/su2/bin/SU2/opt/project.py"", line 114, in __init__; def_objs = config['OPT_OBJECTIVE']; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 166, in __getitem__; raise KeyError('Config parameter not found: %s' % k); KeyError: 'Config parameter not found: OPT_OBJECTIVE'. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Ubuntu 20.04; C++ gcc version 9.4.0; SU2 version 7.3.1 develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:641,config,config,641,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,8,"['Config', 'config']","['Config', 'config']"
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:953,adapt,adapt,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,1,['adapt'],['adapt']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:851,config,config,851,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099:1411,config,config,1411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:389,config,config,389,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. This issue is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Summary: To calculate an aircraft during pitch-up as a steady Euler simulation, I use the dynamic / moving mesh module with GRID_MOVEMENT= STEADY_TRANSLATION and/or ROTATING_FRAME and set the farfield mach number = 0.0. The results look fine, but when reading the nodal forces f_xyz on the surface via pysu2 and GetFlowLoad(), I now receive NaNs... My first idea was that maybe the forces are calculated from the pressure coefficients, which show ""strange"" values in Tecplot, probably due to the division by V_inf=0.0. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; I derived a test case from the Naca0012 example and added a short python script that should reproduce the NaNs in line 66.; [testcase_dynamic_mesh.zip](https://github.com/su2code/SU2/files/8396025/testcase_dynamic_mesh.zip). **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux Workstation 7.9; - C++ compiler and version: mpicc (gcc 4.8.5 ""gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)""); - MPI implementation and version: MPICH 3.4.2; - SU2 Version: 7.3.0 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1588:895,config,config,895,https://su2code.github.io,https://github.com/su2code/SU2/issues/1588,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. related to #1631 . A similar fix is necessary for supersonic inlets. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639:290,config,config,290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:753,config,config,753,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; I try to build SU2 from source on cluster. but it failed in Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'. The log of meson build info is like the figure shows; ![image](https://user-images.githubusercontent.com/54931653/165111891-b9f26f7f-efe4-4e08-a7af-0945f916748a.png); ![image](https://user-images.githubusercontent.com/54931653/165111974-25211d0c-72e0-401e-8619-ab8c30163fd5.png); ![image](https://user-images.githubusercontent.com/54931653/165112038-98e00c96-c2fb-4662-b98d-6b7a9be4581a.png); ![image](https://user-images.githubusercontent.com/54931653/165112129-cd00f7ef-1195-4a39-86a5-608fb0b036eb.png); ![image](https://user-images.githubusercontent.com/54931653/165112177-4dbef8c9-cb54-48ec-9787-6ef7213ce934.png). when using ninja, it shows the error like the figure show; ![image](https://user-images.githubusercontent.com/54931653/165111571-a795012b-e0f4-4fb7-9f87-f78c67242a2f.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; The meson command for build is; ./meson.py build -Dcustom-mpi=true -Denable-pywrapper=true --prefix=$HOME/SU2_prefix . **Desktop (please complete the following information):**; - OS: [Red Hat 8.5.0-4]())); - C++ compiler and version: [gcc 8.5.0]; - MPI implementation and version: [intel MPI]; - SU2 Version: [ v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617:1121,config,config,1121,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; When I build a parallel version of SU2 under Win10, I get an error like. “OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'”. I noticed that other people on Github have also raised this issue, but it hasn't been resolved, and I'm curious to know, what should I deal with it.; thanks！. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wrong _information.txt](https://github.com/su2code/SU2/files/7734843/wrong._information.txt); [meson-info_json.txt](https://github.com/su2code/SU2/files/7734868/meson-info_json.txt). **Desktop (please complete the following information):**; - OS: [win10 ]; - C++ compiler and version: [ g++ (GCC) 8.1.0]; - MPI implementation and version: [Microsoft MPI v10.1.2]; - SU2 Version: [v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471:645,config,config,645,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471,1,['config'],['config']
Modifiability,"**Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behaviour to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. Hi all,. I posted this on the CFD forum, and one of the members mentioned it may be a bug and post it here. . I am simulating flow over an inlet at hypersonic speeds (Mach 7) in 2D using the JST scheme. I have done a mesh convergence study with an inviscid simulation and the residuals go to machine accuracy for all the meshes and works fine. I am using the Navier-Stokes solver for the viscous simulations. I have 5 meshes (very_coarse, coarse, medium, fine, very_fine) to do a mesh convergence study. The very_coarse (VC) and coarse (C) meshes converge to a residual rho of -8.5 and -9 with Cauchy on drag = -10 orders of magnitude. The finer meshes barely converge to -4 to -5, before increasing -2 where they plateau. For all of the meshes (including the converged VC and C), there is an abnormal region with a higher Mach number at the leading edge (11 for VC and 9 for C). Following one of the discussion on the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind sc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:214,config,config,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['config'],['config']
Modifiability,"**Describe the bug**; *This is not a bug, rather it is a defect in the implementation of the symmetry boundary conditions. The pressure field show imperfections in the vicinity of the symmetry plane whereas the temperature field seems to be fine, as can be seen in the attached figure. Of note, although the attached result and corresponding config and mesh file belong to SU2-NEMO (i.e. non-equilibrium), this problem exists for the SU2 branch, based on private communication with @WallyMaier and @jtneedels. This case is Argon flow over a cylinder at Mach 7.68 with a freestream pressure of 50Pa.*. **To Reproduce**; *Please find the attached config and mesh file.*. [configmesh.zip](https://github.com/su2code/SU; ![SymmetryPlaneDefect](https://user-images.githubusercontent.com/104862595/166668880-2c0ba583-b276-4759-9ded-0b977e0658dc.png); 2/files/8619649/configmesh.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625:342,config,config,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625,4,['config'],"['config', 'configmesh']"
Modifiability,"**Describe the bug**; 1. Please update config template. Now the physical problem choices in config template file still indicate that users have (EULER, NAVIER_STOKES, FEM_EULER, FEM_NAVIER_STOKES, FEM_RANS, FEM_LES,; **WAVE_EQUATION**, **HEAT_EQUATION**, FEM_ELASTICITY,; **POISSON_EQUATION**) to choose, where Wave and Poisson have expired, while Heat_Equation needs to be typed in as **HEAT_EQUATION_FVM**. 2. HEAT_EQUATION_FVM hard to run standalone; There is no example demonstrating how to use HEAT_EQUATION_FVM as the physical kernel. Users don't know how to configure. And there seem to be bugs while using HEAT_EQUATION_FVM physical kernel. ![2019-09-01 22-26-35 的屏幕截图](https://user-images.githubusercontent.com/33152225/64077943-c4b25f00-cd07-11e9-92cb-36fb96d97c69.png). **Reproduce**. Here are configuration files for developers to debug. [heat_wedge_HLLC.zip](https://github.com/su2code/SU2/files/3563624/heat_wedge_HLLC.zip). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 19.04); - C++ compiler and version: g++ (GCC) 8.3.0; - MPI implementation and version: no MPI; - SU2 Version: v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783:39,config,config,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/783,4,['config'],"['config', 'configuration', 'configure']"
Modifiability,"**Describe the bug**; 1.; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. When I tried to run the TestCases/disc_adj_turbomachinery/transonic_stator_2D, it showed the error.; Seem the error was reported in https://github.com/su2code/SU2/issues/889.; But in version 7.3.1, it still has similar issues.; May I ask how to use updateHistoryMap.py to add custom objectives? Thanks. raceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'. 2; When I run the case in TestCases/turbomachinery/axial_stage_2D, the value for Total-Total Eff is increased with the total iterative step. When I set Number of total iterations = 3000, the EFF is increased than Number of total iterations =1000. But the pressure ratio remains unchanged. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. TestCases/turbomachinery/axial_stage_2D. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Ubuntu 20.04)]; - C++ compiler and version: [e.g., g++ (GCC) 9.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1628:810,config,config,810,https://su2code.github.io,https://github.com/su2code/SU2/issues/1628,2,['config'],['config']
Modifiability,"**Describe the bug**; After defining the FFD box correctly, using SU2_DEF, the *shape_optimization.py* script was launched to perform adjoint optimization of an internal flow over airfoil. The following error is printed out by SU2:; [SU2_error.txt](https://github.com/su2code/SU2/files/10999828/SU2_error.txt). The .cfg file attached below is largely inspired by the Onera test case already published in the tutorial collection. ; However, I checked the code looking for some issues that my configuration might have caused and I couldn't find any (to my knowledge). It seems the solver has issues converting to float-type variable my text indications for DV_PARAM option. Moreover, I tried to ""play"" with the values related to DV_PARAM and no difference was noted. The same issue was experienced both in version 7.5.0 and 7.5.1 regardless of running a pre-compiled version (Microsoft) or the built-from-source version (Ubuntu). **To reproduce**. [airfoil.txt](https://github.com/su2code/SU2/files/10999881/airfoil.txt); *Mesh file extension is not supported for upload*. **Bug report checklist**. - [ ✓] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.0 & Microsoft; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: v7.5.1 & v7.5.0. *Thank you in advance for your help.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1970:491,config,configuration,491,https://su2code.github.io,https://github.com/su2code/SU2/issues/1970,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:588,config,config,588,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,4,['config'],['config']
Modifiability,"**Describe the bug**; Certain meshes seem to get stuck at Geometry Preprocessing: Checking the numerical grid orientation. It will remain stuck indefinitely (I've only left it for up to 20 hours, however). This has only happened to prism meshes that I've generated with Pointwise's T-Rex function. However, it only seems to affect some of them. I should mention that the geometry has a very sharp and flat wingtip - sometimes the final few cells on the wingtip become 2D flat plates rather than 3D cells. Will SU2 handle these? I notice that not all meshes with 2D tips get stuck, but all the meshes that are stuck are meshes with 2D tips. (i.e. some meshes seem to run fine.). I'm not sure if this is a bug or user error but I've also attached some images to demonstrate what I mean. I hope this helps.; ![Screenshot from 2019-05-17 17-20-26](https://user-images.githubusercontent.com/16842258/57913834-66807e00-78c8-11e9-9899-c96b10d14c7e.png); ![Screenshot from 2019-05-17 17-20-44](https://user-images.githubusercontent.com/16842258/57913836-66807e00-78c8-11e9-8bbe-c643994a62d4.png); ![Screenshot from 2019-05-17 17-21-11](https://user-images.githubusercontent.com/16842258/57913837-67191480-78c8-11e9-9c16-296cef99df9f.png). **To Reproduce**; This is a case which got stuck for me. I had used `mpirun -n 40 SU2_CFD inv_69deg-delta.cfg`; N.B. Added .txt to the configuration file for upload.; [inv_69deg-delta.cfg.txt](https://github.com/su2code/SU2/files/3190339/inv_69deg-delta.cfg.txt); [mesh.zip](https://www.dropbox.com/s/s3f3er9n0wv4bbf/mesh.zip?dl=0). **Desktop (please complete the following information):**; - OS: Linux (Red Hat Enterprise Linux Server release 7.3 (Maipo)); - C++ compiler and version: g++ (GCC) 4.8.5 20150623; - MPI implementation and version: Intel(R) MPI Library for Linux* OS, Version 2018 Update 2; - SU2 Version: v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683:1366,config,configuration,1366,https://su2code.github.io,https://github.com/su2code/SU2/issues/683,1,['config'],['configuration']
Modifiability,"**Describe the bug**; Coupling a turbomachinery simulation with a structural mechanic simulation seems to result in an segmentation error. I have tested the case by turning off the turbomachinery settings and it runs perfectly. However when applying markers to the inlet and outlet of the section, it returns the error. . Case: radial turbine, where i would like to calculate the stress on the blades. . _Attached: config files and log ._ ; fsi.cfg -> multiphysical file to couple both zones; rotor.cfg -> describing the compressible flow in the rotor section; blade.cfg -> structural analysis . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). . **Desktop:**; - OS: Ubuntu 20.04 LS (WSL); - C++ compiler and version: 9.4.0; - MPI implementation and version: 4.0.3; - SU2 Version: 7.5.1. **Files**; [fsi.txt](https://github.com/su2code/SU2/files/12079269/fsi.txt); [configBlade.txt](https://github.com/su2code/SU2/files/12079270/configBlade.txt); [configRotor.txt](https://github.com/su2code/SU2/files/12079271/configRotor.txt); [log.txt](https://github.com/su2code/SU2/files/12079360/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2085:22,Coupling,Coupling,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/2085,6,"['Coupling', 'config']","['Coupling', 'config', 'configBlade', 'configRotor']"
Modifiability,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956:1012,Config,Configure,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/956,1,['Config'],['Configure']
Modifiability,"**Describe the bug**; I am trying to restart an unsteady RANS 2nd order dual-time stepping simulation. I set READ_BINARY_RESTART=YES but it searches for the *.csv* restart file. This happens whenever I put SOLUTION_FILENAME equal to *name.dat* or just *name*. . If *name_0000x.dat* exists in the folder then it crashes in CSolver::Restart_OldGeometry, saying that there is no *name_0000x.csv* . But if *name_0000x.dat* does not exist, then it fails in CSolver::Read_SU2_Restart_Binary, saying that there is no *name_0000(x-1).dat* (as expected). I have uploaded the mesh, the config, and the restart files. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/ErBtq0WVe45Eq_PFxKVQsFQBiYVWBoAoGURCxEBdkR3tAA?e=QODQkw. **Desktop (please complete the following information):**; - OS: Linux [Ubuntu 20.04.5 LTS]; - C++ compiler and version: g++ (GCC) 9.4.0; - MPI implementation and version: OpenMPI 4.0.3; - SU2 Version: v7.4.0(develop)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1800:576,config,config,576,https://su2code.github.io,https://github.com/su2code/SU2/issues/1800,1,['config'],['config']
Modifiability,**Describe the bug**; I expect a restart file to be generated by running SU2. If I include Turbomachinery markers it is not generating a restart file. I am using the transonic_stator 2D case in the Testcases directory. **To Reproduce**; The config and mesh files can be found at: ; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/EumoIwGRZqRChSZ8NvdQpyoBPgBXZpnS_xVrPDuzZYHkxA?e=SXJov7. One config file has Turbo markers and the other has Turbo markers commented. You just have to run the two config files and see the difference. **Desktop (please complete the following information):**; - OS: [ OpenSuse 15.1]; - C++ compiler and version: [g++ > 7]; - MPI implementation and version: [N/A]; - SU2 Version: [v7.0],MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/831:241,config,config,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/831,3,['config'],['config']
Modifiability,"**Describe the bug**; I have 3 different versions of SU2 on my machine and they all work (master branch, feature_turbomachinery_restruct_singlezone, feature_turbomachinery).; I wanted to try feature_TMZHB in order to study Harmonic Balance problems. However during make process I faced an error. I tried it on my laptop as well and faced exactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/ko",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:525,config,configure,525,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,2,"['Config', 'config']","['Configuration', 'configure']"
Modifiability,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:962,config,config,962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['config'],['config']
Modifiability,"**Describe the bug**; I'm attempting to run coupled CHT simulations with a single fluid and a single solid zone. Both zones are read as seperate CGNS files.; In Dry-run mode everything works fine. However, when starting an actual run no matter in which order the zones are specified in the configuration list, the 2nd zone is always considered invalid:. > ------------------- Geometry Preprocessing ( Zone 1 ) -------------------; > Reading the CGNS file: MeshSolid.cgns.; > WARNING: The CGNS file version (3.31) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; > CGNS file contains 1 database(s).; > Database 1, BASE#1: cell dimension of 2, physical dimension of 3.; > 1 total zone(s).; > Zone number 2 invalid. It seems this error is thrown during the CGNS import.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/externals/cgns/cgns_internals.c#L10186-L10198. Both zones run fine individually (when adding the missing, coupled BC of course).; When the second zone is converted to SU2 format and read in the native format, the case runs normally. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [CoupledSim.zip](https://github.com/su2code/SU2/files/8303540/CoupledSim.zip). **Desktop (please complete the following information):**; - OS: SUSE Linux Enterprise Server 15 SP1; - C++ compiler and version: intel 19.0.5.281; - MPI implementation and version: intel MPI 2019; - SU2 Version: v7.3.0 (develop)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1564:290,config,configuration,290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1564,2,['config'],"['config', 'configuration']"
Modifiability,"**Describe the bug**; I'm reading the python codes of SU2-7.3.1 to figure out the whole framework of shape optimization. Here, I find a small irrational point in the definition of evalution of constraint gradients. (in SU2_PY/SU2/eval/design.py). For example, we may add a weight coefficient to each equality/inequality constraint in the .cfg file. So in the python framework, the weight will be stored in <config['OPT_CONSTRAINT']['EQUALITY']['SCALE']>, right? When we compute the constraint as well as its gradients using SU2_CFD solver, the python code will get the constraint and gradients from the history files, and then multiple them with the weight (or SCALE), and then return the results to scipy_tools.py for optimization. Look at line 429 in the function ""con_ceq"" in file ""design.py"", the resulted constraint is scaled by the SCALE parameter, which is no problem. Then look at line 477 in the gradient function ""con_dceq"", the resulted gradients are not scaled by the SCALE parameter, that I think it is irrational. The same problem also happens in the function ""con_dcieq"", the gradients of inequality constraints. I think that the two gradients function for constraints should be scaled with the SCALE parameter, because at line 386 in the objective gradient function ""obj_df"", the computed objective gradients are indeed scaled. **Desktop (please complete the following information):**; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1653:407,config,config,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/1653,1,['config'],['config']
Modifiability,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:481,adapt,adaption,481,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['adapt'],['adaption']
Modifiability,"**Describe the bug**; In #1104 I re-enabled the mesh quality output originally implemented in #778. In some cases the output for all 3 metrics is 0 in the domain and just on the boundary actual values are computed. If you know more, have hints feel free to join. Even an info if it runs works for your case might help cornering the problem. I haven't looked in depth into this but already wanted to open this such that you know :building_construction: . The output for the Quickstart for example is fine: :+1: ; ![image](https://user-images.githubusercontent.com/31306376/99533521-53130f00-29a6-11eb-8c01-b7951322740e.png). Testcases/incomp_navierstokes/bend in comparison exhibits the mentioned problem: :-1: ; ![image](https://user-images.githubusercontent.com/31306376/99533921-ea786200-29a6-11eb-9315-3aa3b9b0287b.png). **To Reproduce**; Run the bend Testcase using the additional config entry `VOLUME_OUTPUT= (MESH_QUALITY)`. **Desktop (please complete the following information):**; This already occurred on multiple platforms with different OS compiler and MPI version so I consider this to be actual problem in the code; - SU2 Version: latest develop [18 Nov 2020]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1109:885,config,config,885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109,1,['config'],['config']
Modifiability,"**Describe the bug**; In a RANS computation of a 2.5D section of a wing, the periodic plane exhibits oscillations of pressure in the boundary layer. The issue is only present on the periodic face, not in the volume. Using a CFL of 1 helps but the instability does not disappear. A CFL of 10 leads to a crash of the computation with multiple spots like on the screenshot. Would it be linked to issue #1090 ?. ![pres_per_face](https://user-images.githubusercontent.com/91184648/145236024-fc713cbd-66d8-40b3-9036-7c1925f10229.png); ![pres_cut](https://user-images.githubusercontent.com/91184648/145236048-a91ca27a-c1c9-4d6c-9639-8b34ea5de307.png). Here is the config file:; [hl_3d_landing.txt](https://github.com/su2code/SU2/files/7677092/hl_3d_landing.txt). **Hardware and software:**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2.1. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467:657,config,config,657,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467,1,['config'],['config']
Modifiability,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1495:273,config,config,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495,1,['config'],['config']
Modifiability,**Describe the bug**; Multizone CHT coupling does not appear to work properly for compressible flows. Specifically there does not seem to be heat transfer between linked markers. **To Reproduce**; See the config files / explanation in this post: https://www.cfd-online.com/Forums/su2/222835-su2-compressible-cht.html. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 5.4.0; - MPI implementation and version: Open MPI 1.10.2; - SU2 Version: 7.0.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838:36,coupling,coupling,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/838,2,"['config', 'coupling']","['config', 'coupling']"
Modifiability,"**Describe the bug**; Symmetry boundary condition does not work properly. In particular, the values on the symmetry plane are wrong with respect to a computation performed on the complete mesh. In the images you can see the pressure coefficient and the skin friction coefficient magnitude for both the simulations. For each image, the upper half is the solution on the complete mesh whereas the lower portion is the solution on the halved mesh with the symmetry plane. I am performing an incompressible RANS simulation with SST turbulence model. I am attaching the files needed to perform both the simulations. The branch I used is the develop one. I also tried with the main branch but the error persists. ![PressureCoefficient](https://user-images.githubusercontent.com/43813346/180821411-9978c962-b3c0-42d0-b631-35a5b0c71b29.png); ![SFC_Error](https://user-images.githubusercontent.com/43813346/180821429-f476bb80-1ac1-4fad-b55b-f5ea05f3a604.png). **To Reproduce**; Please find the config and mesh file at the following link. https://we.tl/t-nmjBv7HJv0. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810 (Core); - C++ compiler and version: gcc 11.2.0; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1723:985,config,config,985,https://su2code.github.io,https://github.com/su2code/SU2/issues/1723,1,['config'],['config']
Modifiability,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860:651,config,config,651,https://su2code.github.io,https://github.com/su2code/SU2/issues/860,1,['config'],['config']
Modifiability,"**Describe the bug**; There is some issue with having two sets of intersecting periodic boundary conditions. I was attempting to simulate plane channel flow (Poiseuille) between two infinite plates with SU2 v. 7.0.7 using RANS, but the results are not correct. Specifically, I see a lot of garbage in the corners, where the periodic BCs intersect (see pictures). ![corner_problems](https://user-images.githubusercontent.com/6933834/95637061-a5771c80-0a45-11eb-80d9-9e81affa0c89.png). I thought that periodic BCs had been updated and working, and that having multiple periodic BCs was not an issue. Is this not the case, or have I done something wrong?. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; (See attached). **Desktop (please complete the following information):**; - OS: Arch Linux - Linux Kernel 5.8.14; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: Open MPI 4.0.5; - SU2 Version: 7.0.7 - branch: develop - commit: e9c824cd70. [channel_bug_files.tar.gz](https://github.com/su2code/SU2/files/5357906/channel_bug_files.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1090:689,config,config,689,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090,1,['config'],['config']
Modifiability,"**Describe the bug**; This is something I have noticed multiple times when running with JST on RANS cases: If the CFL number is increased (>5) the density residual stops changing and the solution essentially stalls: . ![image](https://user-images.githubusercontent.com/30271435/65646456-01444400-dfb0-11e9-9c77-59d3458ceb92.png). I am digging into the JST implementation to see what is going on but haven't had any luck so far. Is this something that other people have experienced and have an explanation for? . Changing the LINEAR_SOLVER_PREC sometimes helps. In this flatplate case ILU does better but for other simulations this stalling will persist. Adaptive CFL will almost certainly mess things up (even #790). Sidenote, is there a rule of thumb for which LINEAR_SOLVER_PREC and LINEAR_SOLVER to use?. **To Reproduce**; This was on the basic flatplate test case that is available with the repo. Including files here for completeness ; [flatplate_jst_Sa.tar.gz](https://github.com/su2code/SU2/files/3655187/flatplate_jst_Sa.tar.gz). If the CFL is set to 5, the solution converges as expected. But if it is increased to 8, it stops moving. . **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 16.04.11); - C++ compiler and version: g++ (GCC) 5.4.0; - MPI implementation and version: openmpi 1.10.2; - SU2 Version: v6.2.0 develop. This has been replicated on a variety of systems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793:654,Adapt,Adaptive,654,https://su2code.github.io,https://github.com/su2code/SU2/issues/793,1,['Adapt'],['Adaptive']
Modifiability,"**Describe the bug**; Title says it all. SU2 v. 7.1.1 gives me the following: ""Info: Ignoring the following screen output fields: AVG_MASSFLOW, AVG_MACH"". **To Reproduce**; Use ""MARKER_ANALYZE"" and ""SCREEN_OUTPUT = ( ... , AVG_MASSFLOW, AVG_MACH, ... ) in your configure file. **Desktop (please complete the following information):**; - OS: WSL Debian; - C++ compiler and version: gcc 8.3; - MPI implementation and version: OpenMPI 3.1.3; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1231:261,config,configure,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1231,1,['config'],['configure']
Modifiability,"**Describe the bug**; When I read the turb model code, I find the primitives used are usually in different iterations. What I mean is the NS solver has done Preprocessing/Space_Integration/Time_Integration/Postprocessing and updated the Solution before turb solver in CFluidIteration::Iterate(). And the consequence of that is the two vars Solution and Primitive are out of step for turb solver and the gradients is all related to Primitive but not Solution. Normally turb solver uses the Primitive and Gradient to compute flux, but when it comes to compute the eddy viscocity(MuT) in Postprocessing function both in SA and SST model. Take SA model as an example:. '''; void CTurbSASolver::Postprocessing(CGeometry *geometry, CSolver **solver_container, CConfig *config, unsigned short iMesh) {. const su2double cv1_3 = 7.1*7.1*7.1, cR1 = 0.5, rough_const = 0.03;. const bool neg_spalart_allmaras = config->GetSAParsedOptions().version == SA_OPTIONS::NEG;. /*--- Compute eddy viscosity ---*/. for (unsigned long iPoint = 0; iPoint < nPoint; iPoint ++) {. const su2double rho = solver_container[FLOW_SOL]->GetNodes()->GetDensity(iPoint);; const su2double mu = solver_container[FLOW_SOL]->GetNodes()->GetLaminarViscosity(iPoint);. const su2double nu = mu/rho;; const su2double nu_hat = nodes->GetSolution(iPoint,0);; const su2double roughness = geometry->nodes->GetRoughnessHeight(iPoint);; const su2double dist = geometry->nodes->GetWall_Distance(iPoint) + rough_const * roughness;. su2double Ji = nu_hat/nu;; if (roughness > 1.0e-10); Ji += cR1*roughness/(dist+EPS);. const su2double Ji_3 = Ji*Ji*Ji;; const su2double fv1 = Ji_3/(Ji_3+cv1_3);. su2double muT = rho*fv1*nu_hat;. if (neg_spalart_allmaras) muT = max(muT,0.0);. nodes->SetmuT(iPoint,muT);. }. }; '''. Defined in CEulerVariable.hpp and CNSVariable.hpp, the following two functions returns vars in next and current iterations:. rho = solver_container[FLOW_SOL]->GetNodes()->GetDensity(iPoint);; mu = solver_container[FLOW_SOL]->GetNodes()->G",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1809:763,config,config,763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1809,2,['config'],['config']
Modifiability,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1273:297,variab,variable,297,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273,3,['variab'],['variable']
Modifiability,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:73,config,configname,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['config'],['configname']
Modifiability,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:554,config,config,554,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['config'],['config']
Modifiability,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1051:506,config,config,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051,2,['config'],['config']
Modifiability,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:1258,config,configuration,1258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,2,['config'],['configuration']
Modifiability,"**Description of the issue**; Hello everybody,. I'm currently running the same testcase (Unsteady Euler ONERAM6 AoA=3deg) on two different versions of SU2 ( version 6.0.1 and 6.2.0). What I noticed is a different evolution in time of coefficients, Cl and Cd as given in the figure. Both the codes look at convergence and the input files (despite the version of the code being different) are the same. I attach the two screen outputs for comparison. I'm running SU2_CFD through the **parallel_computation.py** with only one core (using different number of cores doesn't affect the result anyway). <img width=""1437"" alt=""Screenshot 2019-11-28 at 17 53 42"" src=""https://user-images.githubusercontent.com/23583209/69819810-539c1e00-1208-11ea-902e-10f816f8a9ed.png"">. [Summary_singlecore_6_2_0.txt](https://github.com/su2code/SU2/files/3902407/Summary_singlecore_6_2_0.txt); [Summary_singlecore_6_0_1.txt](https://github.com/su2code/SU2/files/3906057/Summary_singlecore_6_0_1.txt). **To Reproduce the problem**; To reproduce the problem I attach the config files. The mesh is available in the repository: **mesh_ONERAM6_inv.su2**. Note: both versions are/were on the develop branches. Latest one is up to date. [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3906061/config_CFD_6_0_1.txt); [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3902415/config_CFD_6_2_0.txt). Im running the two versions on different machines with same specs:; **Details for the new version**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ 5.4.0]; - MPI implementation and version: [Open MPI 1.10.2]; - SU2 Version: [v6.2.0]. **Details for the old version**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ 5.4.0]; - MPI implementation and version: [Open MPI 1.10.2]; - SU2 Version: [v6.0.1]. Thank you and best,; Rocco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828:1045,config,config,1045,https://su2code.github.io,https://github.com/su2code/SU2/issues/828,1,['config'],['config']
Modifiability,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/906:380,config,config,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/906,2,['config'],['config']
Modifiability,**Desktop (please complete the following information):**; - OS: WSL (Ubuntu22.04); - C++ compiler and version: g++ 11.3.0; - MPI implementation and version: 4.0; - SU2 Version: v7.5.1. Hello：; My computer have 2 epyc cpus，when I run QuickyStart ，; it warns：SU2 was not compiled for an AVX-capable architecture. Performance could be better。; My compile configuration：; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true . How can I solve it？; Thanks！,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1939:352,config,configuration,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/1939,1,['config'],['configuration']
Modifiability,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1154:329,config,config,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154,1,['config'],['config']
Modifiability,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:702,flexible,flexible,702,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,2,"['extend', 'flexible']","['extended', 'flexible']"
Modifiability,"**Is your feature request related to a problem? Please describe.**. Overset grids are very advantageous for storage separation or rotorcraft dynamic problems where rigid bodies move independently. In the past, it is shown that SU2 can be adapted to work with the overset grid as shown in [video](https://www.youtube.com/watch?v=tsr-1Qyk1AQ) [paper](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3428) however this future newer added to community version. . **Describe the solution you'd like**. I would like to get the idea of the community about overset grids, the possible implementation, and the work effort required for such a modification. . Any contribution/suggestion is highly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1905:238,adapt,adapted,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/1905,1,['adapt'],['adapted']
Modifiability,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:526,extend,extended,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,1,['extend'],['extended']
Modifiability,"**Is your feature request related to a problem? Please describe.**; Associated with #1888. There is a request to separately report the components of the total surface heat flux: trans-rot mode temperature gradient, vib-el mode temperature gradient, and enthalpy diffusion. **Describe the solution you'd like**; Adding a volume output field for each heat flux source to CNEMOCompOutput, and the necessary associated member variables to enable this. **Describe alternatives you've considered**; Output quantities required to compute heat flux (temperature gradient, concentration gradient, diffusion coeff, etc.) but this becomes too many parameters and puts too much onus on user. **Additional context**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1891:422,variab,variables,422,https://su2code.github.io,https://github.com/su2code/SU2/issues/1891,1,['variab'],['variables']
Modifiability,"**Is your feature request related to a problem? Please describe.**; For the problems in which parameters located in only a limited region vary much faster than others, the mesh is able to self-adjust to reduce the requirement to computational resources. One mature framework of the technique is [Chombo](https://commons.lbl.gov/display/chombo?atl_token=81243520c3e3754ade36ac0a45eb4e156dac45e0), which can surprisingly reduce the time required to finish the computation job for the aforementioned problem such as moving shock-wave. **Describe the solution you'd like**; AMR frame option added. ; Maybe it will be very difficult to merge Chombo and SU2, and not necessary. We can also develop our own AMR algorithm based on current research. **Describe alternatives you've considered**; The aim of AMR is just for reducing run time. Or just increase the Grid number . **Additional context**; [Adaptive Mesh Refinement.pdf](https://github.com/su2code/SU2/files/3426255/Adaptive.Mesh.Refinement.pdf); [An introduction to AMR.pdf](https://github.com/su2code/SU2/files/3426257/An.introduction.to.AMR.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:892,Adapt,Adaptive,892,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,2,['Adapt'],['Adaptive']
Modifiability,"**Is your feature request related to a problem? Please describe.**; Hello guys, I developed a [primitive tool](https://github.com/WenyinWei/SU2Configurer) to help with editing the configure file. Anyone can add or delete lines freely in the tool to configure your input to SU2. After the editing, the menu can save the .cfg file as a standard SU2 configure file. . ![Profile_Screenshot_2019_08_16](https://user-images.githubusercontent.com/33152225/63140409-6cdfdc80-c014-11e9-9e09-fe8b970d84ff.png). **Describe the solution you'd like**; 1. I am not familiar with the software release pipeline so the tool now just works in my PC with Linux version. Anyone interested in joining to make it more complete?; It is based on Qt so there should be no problem for its usage on cross-platform. . 2. I am not so familiar with the option reliance relationship in SU2 cause there are too many options in the configure template. Complicated reliance and number of options obstrcut the further intelligent implementation of automatical completion. . Any developer willing to tell me your module's option relationship will be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/759:180,config,configure,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/759,4,['config'],['configure']
Modifiability,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:750,config,config,750,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['config'],['config']
Modifiability,"**Is your feature request related to a problem? Please describe.**; Under high aerothermal loads heat fluxes over walls are an important design aspect of many components. In my specific case a wall temperature distribution is known from experiments. I would like to apply this spacial temperature distribution as boundary condition to one or more isothermal walls. In my case the heat flux is then used for validation purposes. **Describe the solution you'd like**; I would like to specify the temperature of an isothermal wall with respect to the x/y/z coordinate. I believe something similar is already possible with the structural load boundaries:; `MARKER_DISPLACEMENT = (surface, multiplier, magnitude [m], x component, y component, z component)`. For temperature this could possibly look like this:; `MARKER_ISOTHERMAL_PROFILE = (surface, temperature[0...N], x[0...N], y[0...N],z[0...N])`. In order to keep the config file cleaner a better solution may be to specify an external file, from which the locations and temperatures are read. This seems to be already possible for inlet boundaries:; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/config_template.cfg#L812-L816; However, I could not find any example actually using this functionality. If this is implemented, extending the functionality to also work with isothermal walls is probably the least intrusive modification. **Describe alternatives you've considered**; A possible, but cumbersome solution could be to split the respective walls into many markers and specify piecewise-constant wall temperatures for each marker.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553:917,config,config,917,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553,2,"['config', 'extend']","['config', 'extending']"
Modifiability,"**Issue Description**; Dear all,; my research group and me found a problem when using the JST scheme.; The problem consists in a difference in the skin friction coefficient along the airfoil between 2D and 3D meshes (the 3D one is obtained by extruding the 2D mesh using only 1 cell in the span wise direction).; This difference arises when the JST scheme is used, and it leads to a ~25% of difference in the drag coefficient. In order to better explain what is happening, here is a summary table of the results for the CRM airfoil:; ![roe_jst](https://user-images.githubusercontent.com/53580993/117454345-56935600-af46-11eb-8c2f-7c314376a2a0.png). It is possible to notice that this difference does not emerge if the ROE scheme is used. For the 3D case, the boundary conditions at the side faces of the domain are `MARKER_SYM`, so that we think that this issue could be connected to the #1125 . **To Reproduce**; In order to reproduce the issue, a zip file is attached. It contains the configuration files for the 3D and 2D cases using JST and ROE, and the two grids of the CRM airfoil. It is possible to reproduce this issue also using a different airfoil. [ROEvsJST.zip](https://github.com/su2code/SU2/files/6441697/ROEvsJST.zip). **Desktop:**; - OS: Linux (Ubuntu); - C++ compiler and version: -; - MPI implementation and version: -; - SU2 Version: v7.1.1 and previous. Thanks for your help.; Ettore Saetta. Theoretical and Applied Aerodynamics Research Group (TAARG); University of Naples Federico II",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280:987,config,configuration,987,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280,1,['config'],['configuration']
Modifiability,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:714,adapt,adapted,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['adapt'],['adapted']
Modifiability,"**Running unsteady simulations w/ dual-time stepping on many cores causes solution (and residuals) to freeze at 3rd outer iteration**. After running unsteady simulations with dual-time stepping both in serial and parallel, I discovered an issue where using a *relatively larger number of processes* led to ""frozen"" residuals while running. An image of this is shown below:. ![image](https://user-images.githubusercontent.com/116454159/217113776-1a502356-43c1-4971-ac55-102a203476ad.png). These residual values remain throughout the remaining duration of the run. This does not occur when running in serial. Additionally, as expected, the solution does not change after this 3rd iteration. The serial run results do, and they match the data I was comparing against. I use Intel MPI, where I set `-Dcustom-mpi=true` and set the following environment variables prior to calling meson:. ```; export CC=$(which mpicc); export CXX=$(which mpicxx); export MPICC=$(which mpicc); export MPICXX=$(which mpicxx); ```. I have noticed on a variety of other simulations I am running that **the error trends with # of cores I am using.**. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: CentOS Linux 7 (Core); - C++ compiler and version: g++ (GCC) 9.1.0; - MPI implementation and version: Intel MPI 19.0.9; - SU2 Version: v7.5.1 (also noticed on v7.5.0)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1914:848,variab,variables,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1914,1,['variab'],['variables']
Modifiability,"**SCALE_GRID does not ""always"" work**. Hello Everybody,; I have been using the SCALE_GRID function in SU2 quite often with previous versions of SU2, without any problem. However, after passing to v7.0.5 and working with a completely new mesh the SCALE_GRID option does not seem to work anymore (at least for me!). I am trying to scale down my mesh of a factor 0.001. In the config file, I set up the following parameters :; - DV_KIND= SCALE_GRID; - % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= (Inlet_wall ) %this has also been commented but the result is the same; - DV_PARAM= ( 1.0 ); - % Value of the shape deformation; DV_VALUE=0.001. However, when I run SU2_DEF I obtained the following . *--------------------- Volumetric grid scaling (ZONE 0) ------------------; Scaling the mesh by a constant factor of 1.*. **To Reproduce**; *The config file is attached. The mesh file is quite big but it can be provided on request.*; [inlet.cfg.txt](https://github.com/su2code/SU2/files/4761675/inlet.cfg.txt). **Desktop (please complete the following information):**; - OS: [centos7.5 and centos8]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 4.0.0]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1023:374,config,config,374,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023,2,['config'],['config']
Modifiability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. When I use SU2 with QuickStart config file with OpenMPI, it gives error like in attached file.; Command is:; `mpirun -np 8 --allow-run-as-root SU2_CFD inv_NACA0012.cfg`. [segmentation_fault.txt](https://github.com/su2code/SU2/files/12170716/segmentation_fault.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2091:321,config,config,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/2091,2,['config'],['config']
Modifiability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; Not really a bug, but compiler warnings that can be avoided easily. In the file SU2_CFD/include/numerics/NEMO/NEMO_diffusion.hpp, class CAvgGradCorrected_NEMO, the variables iDim and iVar are defined, which are used as counters as far as I can tell. First of all I don't think such variables should not be defined as member variables of a class, but if you do then don't define variables with the same name in the implementation of the member functions. In this case in SU2_CFD/src/numerics/NEMO/NEMO_diffusion.cpp. It is causing a lot of compiler warnings in combination with the Intel compiler, which makes it more difficult to see the warnings that actually matter. If you want I can fix this, but maybe it is better if somebody with a NEMO background does it. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04; - C++ compiler and version: Intel compilers version 19.1.0.166; - MPI implementation and version: Intel MPI; - SU2 Version: develop branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1916:294,variab,variables,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/1916,4,['variab'],['variables']
Modifiability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; This might be linked to issue #2086; I am building SU2 with both Terminal and using a build system called EasyBuild.; On terminal everything went seamlessly. The issue is on EasyBuild. The meson configs are not pulling in the external files. I had to clone it recursively. None of the following options were activated in my tests, so the external files should have been added . ```; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ```. **HPC; - OS:Centos7; - C++ compiler and version: [e.g., g++ (GCC) 12.2]; - MPI implementation and version: [e.g., OpenMPI 4.1.4]; - SU2 Version: 7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2363:325,config,configs,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/2363,1,['config'],['configs']
Modifiability,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3308,config,config,3308,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,", expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numeri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6301,config,config,6301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][func_name]; KeyError: 'INVERSE_DESIGN_PRESSURE' ; ```. SU2 version - 7.2.0 ; OS - Windows-11. I have also tried the latest version 7.3.1 on a Linux machine, I get the same error. Please help me understand this error and fix it. Thanks in advance. ; </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:2355,config,config,2355,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['config'],['config']
Modifiability,", propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the far field (NONE = no marker); %; % Read inlet profile from a file (YES, NO) default: NO; %SPECIFIED_INLET_PROFILE= YES; %; % File specifying inlet profile; INLET_TYPE= TOTAL_CONDITIONS; MARKER_INLET = (inlet, 288.15, 101325, 0.0, 0.0, 0.0 ); MARKER_FAR= (farfield); MARKER_OUTLET = ( outlet, 101325 ); %; % Marker of the surface which is going to be plotted or designed; MARKER_PLOTTING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ). % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, ; % WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 1; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 15, 1e6 ); %; % Runge-Kutta alpha coefficients; RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 ); %; % Number of total iterations; ITER= 99999. % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver for implicit formulations (BCGSTAB, FGMRES); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (JACOBI, LINELET, LU_SGS); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10. % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:6171,Adapt,Adaptive,6171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,----------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; Constant heat flux wall boundary marker(s): airfoil. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 14576 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 128|; | 1| farfield| 352|; +------------------------------------+; 14336 quadrilaterals. ------------------------- Geometry Preprocessing ------------------------; Setting point connectivity.; Renumbering points (Reverse Cuthill McKee Ordering).; Recomputing point connectivity.; Setting element connectivity.; Checking the numerical grid orientation.; There has been a re-orientation of the LINE surface elements.; Identifying edges and vertices.; Computing centers of gravity.; Setting the control volume structure.; Area of the computational grid: 8.76e+05.; Searching for the closest normal neighbors to the surfaces.; Storing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:4448,Config,Config,4448,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Config'],['Config']
Modifiability,-----------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| Tria-1-Bndry|; | | Tria-8-Bndry|; | | Tria-9-Bndry|; | | Tria-10-Bndry|; | | Tria-11-Bndry|; | | Tria-12-Bndry|; | | Tria-13-Bndry|; | | Tria-14-Bndry|; | | Tria-15-Bndry|; | | Tria-16-Bndry|; | | Tria-17-Bndry|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 2405969 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 5820762 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 16 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| Tria-1-Bndry| 14188|; | 1| Tria-2-Bndry| 188|; | 2| Tria-3-Bndry| 6421|; | 3| Tria-4-Bndry| 188|; | 4| Tria-5-Bndry| 612|; | 5| Tria-8-Bndry| 46107|,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:2538,Config,Config,2538,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Config'],['Config']
Modifiability,"-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating di",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:3901,config,config,3901,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,3,['config'],['config']
Modifiability,"-with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/hom",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:1340,config,configure,1340,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,1,['config'],['configure']
Modifiability,. 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6308,config,config,6308,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,". Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2719,adapt,adaptive,2719,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Modifiability,.. /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; ----,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5881,config,configure,5881,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['configure']
Modifiability,... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palac,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6579,config,config,6579,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1726,adapt,adapt,1726,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['adapt'],['adapt']
Modifiability,".0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:3682,Variab,VariableType,3682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['Variab'],['VariableType']
Modifiability,".dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e94",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6800,variab,variable,6800,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['variab'],['variable']
Modifiability,.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Pr,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6492,config,config,6492,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:4689,config,configuration,4689,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['config'],['configuration']
Modifiability,"/SU2/SU2_PY/pySU2'; make real;; make[2]: Entering directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -qopenmp -O3 -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2/pySU2.i; swig error : Unrecognized option -qopenmp; swig error : Unrecognized option -O3; Use 'swig -help' for available options.; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make[1]: *** [all] Error 2; make[1]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make: *** [all-recursive] Error 1; ```. my configure:; ```shell; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./configure --prefix=$HOME/share/SU2/6.1 \; --enable-mpi \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns. make -j8; ```. I manually build the output object `SU2_APIPYTHON_wrap.cxx` and complete the build:; ```shell; [dic17007@cn01 SU2]$ cd /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2; [dic17007@cn01 pySU2]$ swig -DHAVE_MPI -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/566:4036,config,configure,4036,https://su2code.github.io,https://github.com/su2code/SU2/issues/566,2,['config'],"['config', 'configure']"
Modifiability,"/index.html) and ninja build system to eventually replace autotools and make. A [lot of bigger projects](https://mesonbuild.com/Users.html) already use that system (e.g. GNOME, systemd ...) or are transitioning. Compared to autotools and make, building the code should be faster, especially if you build with more cores, as all objects files are build truly in parallel (with make only objects of the same target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninj",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1083,config,configure,1083,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['config'],['configure']
Modifiability,"/pySU2'; swig -DHAVE_MPI -qopenmp -O3 -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2/pySU2.i; swig error : Unrecognized option -qopenmp; swig error : Unrecognized option -O3; Use 'swig -help' for available options.; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make[1]: *** [all] Error 2; make[1]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make: *** [all-recursive] Error 1; ```. my configure:; ```shell; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./configure --prefix=$HOME/share/SU2/6.1 \; --enable-mpi \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns. make -j8; ```. I manually build the output object `SU2_APIPYTHON_wrap.cxx` and complete the build:; ```shell; [dic17007@cn01 SU2]$ cd /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2; [dic17007@cn01 pySU2]$ swig -DHAVE_MPI -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/566:4194,config,configure,4194,https://su2code.github.io,https://github.com/su2code/SU2/issues/566,1,['config'],['configure']
Modifiability,"/sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:4228,variab,variable,4228,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"/tree/master"",; 22 version= ""8.0.0""; 23 ); 24 ); 25 sim_results.to_file(""./simulation_out/cached.pkl""); 27 # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/simulation.py:21, in run_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 19 if isinstance(cfg, Su2SimulationConfig):; 20 from paraflow.simulation.su2 import run_su2_simulation; ---> 21 sim_results = run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 23 return sim_results. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/su2.py:161, in run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 158 vtu_filename = vtu_filename.replace(""."", f""_{i}.""); 160 grids += [read_vtu_data(vtu_filename)]; --> 161 eval_values = pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1024, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend); 1011 kwds_defaults = _refine_defaults_read(; 1012 dialect,; 1013 delimiter,; (...); 1020 dtype_backend=dtype_backend,; 1021 ); 1022 kwds.update(kwds_defaults); -> 1024 return _read(filepath_or_buffer, kwds). File ~/miniforge3/envs/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:3688,config,config,3688,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,2,['config'],['config']
Modifiability,/usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis suppo,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4646,config,config,4646,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2978,adapt,adapted,2978,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,5,"['Adapt', 'adapt', 'flexible', 'refactor', 'variab']","['Adaptive', 'adapted', 'flexible', 'refactor', 'variables']"
Modifiability,"0507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:3659,extend,extends,3659,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['extend'],['extends']
Modifiability,"06821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2763,variab,variables,2763,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['variab'],['variables']
Modifiability,"0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:4224,Variab,VariableType,4224,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,['Variab'],['VariableType']
Modifiability,"0b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6967,config,config,6967,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1698,config,config,1698,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['config'],['config']
Modifiability,"0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6502,config,config,6502,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1094:174,config,config,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094,8,"['Config', 'config']","['Config', 'config']"
Modifiability,"1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_mov",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2688,config,config,2688,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:2662,variab,variable,2662,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:2310,config,configuration,2310,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['config'],['configuration']
Modifiability,"2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ===================================================================; --- SU2-2.0.8/Common/src/geometry_structure.cpp; +++ SU2-2.0.8/C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:1548,config,configure,1548,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['config'],['configure']
Modifiability,2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5572,config,config,5572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['config'],['config']
Modifiability,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1715,Config,Configure,1715,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['Config'],['Configure']
Modifiability,"3cdd717-28d1-453c-a867-77c99494f86f.png). ![image](https://user-images.githubusercontent.com/50565314/148771466-f1613617-0502-4809-9861-a64f4ce0dee7.png). Finally, the production term becomes :; ; ![image](https://user-images.githubusercontent.com/50565314/148732458-c5d7bbd7-bd68-4416-bac2-979aa006512e.png). This term( ![image](https://user-images.githubusercontent.com/50565314/148732925-d66edf19-484a-4c4e-b518-3cff8ef935f0.png) ) becomes zero in incompressible flow(from continuity equation ![image](https://user-images.githubusercontent.com/50565314/148760571-f54c54eb-a897-4786-a859-c40aee873792.png) ), but the compressible flow is not zero. . In the SU2 source code( line 849 in [SU2_CFD/src/numerics/turbulent/turb_sources.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/turbulent/turb_sources.cpp)), the production term of SU2's SST model is ; ""pk = Eddy_Viscosity_i*StrainMag_i*StrainMag_i - 2.0/3.0*Density_i*ScalarVar_i[0]*diverg;"" . Rewrite above code to equation : ; ![image](https://user-images.githubusercontent.com/50565314/148732626-7160aca1-11be-4754-8e7d-cb3a8af7dfa5.png). The omit of ![image](https://user-images.githubusercontent.com/50565314/148760652-ba17b0d5-c6fe-4169-81e5-8797b1d67dc1.png) term is a bug, or has some special reason?. ![image](https://user-images.githubusercontent.com/50565314/148732925-d66edf19-484a-4c4e-b518-3cff8ef935f0.png) term is not an issue in incompressible flow like low Mach number simulation. But, in a high Mach number simulation, it may make a noticeable difference. Q.2). The stress tensor in RANS simulation is following : . ![image](https://user-images.githubusercontent.com/50565314/148759208-effb0643-a903-48d4-9ef2-3b46162ad5f8.png). From [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html) : ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is **sometimes ignored for non-supers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:2980,Rewrite,Rewrite,2980,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,1,['Rewrite'],['Rewrite']
Modifiability,"4-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified boun",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3370,variab,variable,3370,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:1485,adapt,adaptation,1485,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,7,['adapt'],"['adaptation', 'adaptive', 'adaptivity']"
Modifiability,"61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by Mi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1234,config,config,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,2,['config'],['config']
Modifiability,"79-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2186,polymorphi,polymorphism,2186,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['polymorphi'],['polymorphism']
Modifiability,"8) : Error: Unable to find 'mpi4py\mpi4py.i'; [2/10] Linking static target externals/cgns/hdf5/libsu2hdf5.a; ninja: build stopped: subcommand failed.; ```. **To Reproduce**; Firstly, I install the `mpi4py` in a conda environment. And I am sure I have install `mpi4py`:. ```; (SU2) C:\Users\ZHQ>python; Python 3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from mpi4py import MPI; >>> MPI; <module 'mpi4py.MPI' from 'D:\\Anaconda\\envs\\SU2\\lib\\site-packages\\mpi4py\\MPI.cp37-win_amd64.pyd'>; >>>; ```; But the `python ./meson.py build` find another python environment:; ```; Program python3 found: YES (C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe); ```; I have find a similar issure (https://github.com/su2code/SU2/issues/722). This issue suggestion that we need to modify the `Makefile`. However, since I build SU2 in Win10, I have no `Makefile`. Then, I find the `build/build.ninja` specified the location of `python.exe`. So I modify the `python.exe` location in `build.ninja` by:; 1. modify all `C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe` to `D:\Anaconda\envs\SU2\python.exe`. ; 2. modify all `C$:/Users/ZHQ/AppData/Local/Microsoft/WindowsApps/PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0/python.exe` to `D$:/Anaconda/envs/SU2/python.exe`. Then, `.\ninja.exe -C build install` again, but the bug is still reported. . I even add the `mpi4py` to the computer environment variable:. But the bug is still reported. **Desktop (please complete the following information):**; - OS: Win 10; - C++ compiler and version: as the recommanded gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project); - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:2166,variab,variable,2166,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['variab'],['variable']
Modifiability,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:2529,extend,extends,2529,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['extend'],['extends']
Modifiability,":. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demons",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1694,variab,variable,1694,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['variab'],['variable']
Modifiability,":. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1608,variab,variables,1608,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['variab'],['variables']
Modifiability,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:3658,config,config,3658,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['config'],['config']
Modifiability,"; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:2380,config,configuration,2380,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['config'],['configuration']
Modifiability,"; ../externals/cgns/hdf5/H5Dchunk.c:1832:41: warning: passing argument 1 of 'H5S_combine_hyperslab' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]; if (H5S_combine_hyperslab(fm->file_space, H5S_SELECT_AND, coords, NULL, fm->chunk_dim, NULL,; ~~^~~~~~~~~~~~; In file included from ../externals/cgns/hdf5/H5Zprivate.h:29,; from ../externals/cgns/hdf5/H5CXprivate.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:54:; ../externals/cgns/hdf5/H5Sprivate.h:278:45: note: expected 'H5S_t *' {aka 'struct H5S_t *'} but argument is of type 'const H5S_t *' {aka 'const struct H5S_t *'}; H5_DLL herr_t H5S_combine_hyperslab(H5S_t *old_space, H5S_seloper_t op, const hsize_t start[],; ~~~~~~~^~~~~~~~~; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__chunk_allocate':; ../externals/cgns/hdf5/H5Dchunk.c:4299:52: warning: initialization discards 'const' qualifier from pointer target type; -Wdiscarded-qualifiers]; H5O_storage_chunk_t *sc = &(layout->storage.u.chunk); /* Convenience variable */; ^; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__chunk_copy_cb':; ../externals/cgns/hdf5/H5Dchunk.c:6081:75: warning: passing argument 3 of 'H5O_copy_expand_ref' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]; if (H5O_copy_expand_ref(udata->file_src, udata->tid_src, udata->dt_src, buf, nbytes,; ~~~~~^~~~~~~~; In file included from ../externals/cgns/hdf5/H5Dprivate.h:25,; from ../externals/cgns/hdf5/H5Dpkg.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:55:; ../externals/cgns/hdf5/H5Oprivate.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:3836,variab,variable,3836,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['variab'],['variable']
Modifiability,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:4235,config,config,4235,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,6,['config'],['config']
Modifiability,"; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:2081,config,config,2081,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['config'],['config']
Modifiability,"; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I noticed that other people on Github have also raised this issue, but they are on the second step `ninja -C build install` when I got this error on the first step `py meson.py build`. so the solve solutions are not work for me. For issue #1471 I found this silimar proplem between 7.3.1. thanks！. **To Reproduce**; Please provide a config file and mesh for a minimal example that recreates the problem.; [meson-log.txt](https://github.com/su2code/SU2/files/12335918/meson-log.txt); [meson-info.json.txt](https://github.com/su2code/SU2/files/12335924/meson-info.json.txt). **Desktop (please complete the following information):**; OS: [win11 ]; C++ compiler and version: [ g++ (GCC) 8.1.0]; MPI implementation and version: [Microsoft MPI v10.1.2]; SU2 Version: [v7.5.1]. **Other informations:**; the full console output : [console.txt](https://github.com/su2code/SU2/files/12335982/console.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:2599,config,config,2599,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['config'],['config']
Modifiability,"; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [MacOS Sonoma 14.6.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1613,config,config,1613,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['config'],['config']
Modifiability,"</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7143,variab,variable,7143,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['variab'],['variable']
Modifiability,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7314,config,config,7314,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:1767,config,config,1767,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['config'],['config']
Modifiability,"> Hello. Can you add a test case about AUSMPLUSUP or AUSMPLUSUP2? I installed SU2 6.2.0 and used it to simulate two-dimensional lid-driven cavity flow. When I set 'CONV_NUM_METHOD_FOLW' to be 'AUSMPLUSUP' or 'AUSMPLUSUP2', it shows 'Error in ''void CSoLver::SetResidual_RMS(CGeometry*, CConfig*):' and 'MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD'. But when I set it to be other schemes like AUSM, ROE or so, it runs. Maybe if there is a test case, I can find where is my mistake. Thank you. _Originally posted by @cjz667 in https://github.com/su2code/SU2/pull/628#issuecomment-522633022_. @cjz667, there are a couple of examples in PR #691, specifically here: https://github.com/su2code/SU2/pull/691#issuecomment-502193463; Which may not run with v6.2 but should work with the current develop version.; In any case can you please upload your config?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761:862,config,config,862,https://su2code.github.io,https://github.com/su2code/SU2/issues/761,1,['config'],['config']
Modifiability,">GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4343,variab,variables,4343,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['variab'],['variables']
Modifiability,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245:94,config,configure,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/245,4,['config'],['configure']
Modifiability,A segfault occurs when running Roe convective flux explicitly if jump variables are too high.; Line 3278 of numerics_direct_mean.cpp. Occurred when running high mach number (M=24) flow.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/651:70,variab,variables,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/651,1,['variab'],['variables']
Modifiability,"A spark initialization was not possible with CFL adaptation, as the CFL number would increase too far before the spark initiates the combustion. This led to immediate flashback or blow-off. An additional parameter in the CFL adaptation defines the iteration, at which the CFL adaption should start. This allows the combustion to stabilize before the CFL number increases. Before the initial iterations has not started, the CFL number does not get adapted in either direction.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:49,adapt,adaptation,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,4,['adapt'],"['adaptation', 'adapted', 'adaption']"
Modifiability,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/297:9,parameteriz,parameterize,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/297,2,['parameteriz'],"['parameterization', 'parameterize']"
Modifiability,AD build configure error: `bad value --enable-parmetis for --enable-tecio`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:9,config,configure,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,1,['config'],['configure']
Modifiability,"APPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:2702,variab,variable,2702,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['variab'],['variable']
Modifiability,Adapt new periodic bc for turbo-vertex,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/666:0,Adapt,Adapt,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/666,1,['Adapt'],['Adapt']
Modifiability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:0,Adapt,Adaption,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['Adapt'],['Adaption']
Modifiability,Adaptive CFL condition (apart from currently available fixed/ramp),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/94,1,['Adapt'],['Adaptive']
Modifiability,Adaptive Edge Color Group Size,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['Adapt'],['Adaptive']
Modifiability,Adaptive Mesh Refinement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,1,['Adapt'],['Adaptive']
Modifiability,Add Python 3.7 to Travis config,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622:25,config,config,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/622,1,['config'],['config']
Modifiability,Add angle of attack as a design variable (or design in fixed-lift mode),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/109:32,variab,variable,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/109,1,['variab'],['variable']
Modifiability,Added Dry Run mode to quickly check sanity of a config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,1,['config'],['config']
Modifiability,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:699,variab,variables,699,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['variab'],['variables']
Modifiability,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326:278,variab,variable,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/326,1,['variab'],['variable']
Modifiability,"Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:5675,variab,variable,5675,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,AoA keyword in the config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/323:19,config,config,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/323,1,['config'],['config']
Modifiability,"As discussed in the last dev meeting, this deprecates the centered scheme for weakly coupled heat transfer, because it had a bug in the speed of sound, and because this made it much easier to adapt the rest of the heat solver to the scalar framework. Bonus:; - Add SLOPE_LIMITER_HEAT option.; - OpenMP of the heat solver.; - Correct issues with Inlet and Outlet boundaries and gain farfield (not implemented before) for free.; - Regression for weakly coupled heat equation (primal was not covered before).; - PyCustom markers for heat solver. ToDo:; - Bounded scalar mode.; - Docs.; - Fix sensitivity wrt inlet velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1892:192,adapt,adapt,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1892,1,['adapt'],['adapt']
Modifiability,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:33,adapt,adaptation,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,7,['adapt'],"['adapt', 'adaptation', 'adaptivity']"
Modifiability,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/217:328,config,configure,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/217,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,Bug in config.py prevents asserts from providing correct error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:7,config,config,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['config'],['config']
Modifiability,Bugfix: temporary config filename,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:18,config,config,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['config'],['config']
Modifiability,"By running exactly the same mesh and config flle on Linux Centos 8 with two version of SU2, it leads to two different values for the wetted area which is calculated during the initialization. with SU2 v7.0.3:. > Finding max control volume width.; > Semi-span length = 13.5934 m.; > **Wetted area = 466.385 m^2.**; > Area projection in the x-plane = 19.4802 m^2, y-plane = 109.691 m^2, z-plane = 165.851 m^2.; > Max. coordinate in the x-direction = 34.8253 m, y-direction = 13.5934 m, z-direction = 5.44607 m.; > Min. coordinate in the x-direction = -0.00557099 m, y-direction = -13.5934 m, z-direction = -1.75235 m. with SU2 v7.1.0:. > Finding max control volume width.; > Semi-span length = 13.5934 m.; > **Wetted area = 1.85378e-06 m^2.**; > Area projection in the x-plane = 19.4802 m^2, y-plane = 109.691 m^2, z-plane = 165.851 m^2.; > Max. coordinate in the x-direction = 34.8253 m, y-direction = 13.5934 m, z-direction = 5.44607 m.; > Min. coordinate in the x-direction = -0.00557099 m, y-direction = -13.5934 m, z-direction = -1.75235 m. Regarding my geometry and the other values given, the second one (v7.1.0) seems to be the wrong one.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1190:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1190,1,['config'],['config']
Modifiability,C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5937,config,config,5937,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,Change lower limit of SST variables,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:26,variab,variables,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['variab'],['variables']
Modifiability,Changed the registration of AD input variables in CDiscAdjFluidIteration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:37,variab,variables,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,1,['variab'],['variables']
Modifiability,Check the value of the Equivalent Area (US units) and add ScaleFactor to the config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/112:77,config,config,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/112,1,['config'],['config']
Modifiability,Clarify and extend AD tape choices,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:12,extend,extend,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,1,['extend'],['extend']
Modifiability,Cleanup adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:8,adapt,adaptation,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Modifiability,"Collection of small improvements:; - Discrete Adjoint as default.; - New options in the config file: FROZEN_LIMITER_DISC, FROZEN_VISC_DISC, INCONSISTENT_DISC; - Fixing some issues with the multi objective design.; - Updating Xcode project",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/497:88,config,config,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/497,1,['config'],['config']
Modifiability,Compilation issues with spack and meson and a configure-make workaround,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:46,config,configure-make,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,1,['config'],['configure-make']
Modifiability,"Compile ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:60,config,config-tool,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['config'],['config-tool']
Modifiability,Composition-dependent density model for variable density incompressible flow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:40,variab,variable,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['variab'],['variable']
Modifiability,Config bug fix,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144:0,Config,Config,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144,1,['Config'],['Config']
Modifiability,CoolProp enhancement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:9,enhance,enhancement,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['enhance'],['enhancement']
Modifiability,Correct commenting of variables within CFluidModel class,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414:22,variab,variables,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/414,1,['variab'],['variables']
Modifiability,Correct progress reporting in Pointwise plugin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72:40,plugin,plugin,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/72,1,['plugin'],['plugin']
Modifiability,Could it be possible to alter configure system to allow different lapacke as your user wanted here:; https://github.com/xianyi/OpenBLAS/issues/1383; Also since we talk about linking statically tens of megabytes of blobs into final module - could the (user-specified) LAPACK library (optionally or by default) get imported dynamically?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/481:30,config,configure,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/481,1,['config'],['configure']
Modifiability,Coupling of SU2 and CoolProp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:0,Coupling,Coupling,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['Coupling'],['Coupling']
Modifiability,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414:92,variab,variables,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/414,2,['variab'],['variables']
Modifiability,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/83:967,config,config,967,https://su2code.github.io,https://github.com/su2code/SU2/issues/83,2,['config'],['config']
Modifiability,"Currently, the source term assumes that the axisymmetric behavior is about the x-axis in a 2D problem (uses the y-coordinate in the implementation). For clarity, we should add a disclaimer in the config file description/comment or print this information during preprocessing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/48:196,config,config,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/48,1,['config'],['config']
Modifiability,"Currently, the variable name headings are comma delimited and the values are tab delimited. It would be nice if this were consistent.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/4:15,variab,variable,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/4,1,['variab'],['variable']
Modifiability,DV_MARKER should work with a list of different surfaces for each design variable (like DV_PARAM),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/111:72,variab,variable,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/111,1,['variab'],['variable']
Modifiability,"Dear Developers, . I have been trying to run the ""Constrained shape design of a transonic inviscid wing at a cte. CL"" tutorial but am having issues in installing SU2 properly. I realize that the SU2 tools necessary for this tutorial are not included with the binary executables and I have been working on properly configuring and building SU2 to have the necessary tools and to run in parallel by following the compilation guide. Unfortunately, I have yet to install a working parallel version to run this tutorial. A solution to avoiding some of these installation issues would be to set up this environment within a singularity container. I found a singularity container definition for an old version of SU2 in #738 and modified the su2.def file to read:. Bootstrap: docker; From: ubuntu:19.04; ; %post; apt-get -y update; apt-get -y install python3 git build-essential autoconf python-dev libopenmpi3 openmpi-common; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=$PWD; ./ninja -C build install; ; %runscript; exec /SU2/bin/$1 $2 . This code raises the following error after running . FATAL: Unable to build from su2.def: while parsing definition: su2.def: invalid selection(s) specified:. I understand this is an issue stemming from singularity and how I defined the definition file, but I was wondering if there was any supported singularity container for running SU2 that supports AD and parallel computing?. Best",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1626:314,config,configuring,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/1626,1,['config'],['configuring']
Modifiability,"Dear SU2 Team Members,. Greetings! We are very happy to inform you that we are exploring the aerodynamic shape optimization script of SU2 R 5.0.0 (Raven) with different configurations. And we would also like to seek your assistance in connection with the following two issues:. 1. We are not getting any clue on restarting procedure of the optimization process from previously finished cycles. 2. Is there any way for exporting the intermediate / final optimized geometry as 3D CAD model. Thanking you in advance. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/489:169,config,configurations,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/489,1,['config'],['configurations']
Modifiability,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909:751,config,config,751,https://su2code.github.io,https://github.com/su2code/SU2/issues/909,1,['config'],['config']
Modifiability,"Dear SU2 developers,. I'm trying to set up a FFD box however, after having run the SU2_DEF command, I noticed that no FFD_SURFACE_POINTS are crated in the mesh_out.su2 file. I tried this successfully with SU2 v7 but repeating the same procedure with SU2 v5 lead to the problem. What can be the cause of such a problem? Is the procedure to create the FFD box the same between SU2 v7 and v5?. I tested the following .cfg file with the mesh mesh_NACA0012_inv.su2 and it's not working. ```; % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%; %; % Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,; % FFD_SETTING, FFD_NACELLE; % FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST; % FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,; % HICKS_HENNE, SURFACE_BUMP); DV_KIND= FFD_SETTING; % ; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( airfoil ); %; % Parameters of the shape deformation; DV_PARAM= ( MAIN_BOX, 3.0, 4.0, 0.0, 0.0); %; % Value of the shape deformation; DV_VALUE= 0.0; %; %; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; DEFORM_LINEAR_ITER= 250; %; %; % -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:520,VARIAB,VARIABLE,520,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['VARIAB'],['VARIABLE']
Modifiability,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490:304,Adapt,Adapted,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/490,2,"['Adapt', 'adapt']","['Adapted', 'adaptive']"
Modifiability,"Dear all,. I simulated Sym_plane_testcases from #657 ; When I simulate axisymmetric probem (AXISYMMETRIC =YES), I found odd value at symmetric axis. This problem doesn't appear when I turn off AXISYMMETRIC option. ![Cp_comparison](https://user-images.githubusercontent.com/74228020/133757118-b17e8772-9919-4cb1-b1f2-8cf18e4a48ac.png); ========================================================================; ========================================================================; .; . ![Density_comparison](https://user-images.githubusercontent.com/74228020/133757136-63ae13a2-7c3d-478f-9a81-7aaf001c6dd2.png); ========================================================================; ========================================================================; .; . ![Mach_comparison](https://user-images.githubusercontent.com/74228020/133757154-9ed10855-3070-4210-b5b5-e2e3f2fad273.png); ========================================================================; ========================================================================; .; . ![Temp_comparison](https://user-images.githubusercontent.com/74228020/133757157-18646978-20e6-49e7-a44f-ac45151b3901.png). It seems that temperature, Mach, and momentum have no problem, but density, pressure, and energy are strange at the symmetric axis...; From #657 , I think it is flux related problem. I attached version 7 configure file I used.; [Sym_BC_test.zip](https://github.com/su2code/SU2/files/7184390/Sym_BC_test.zip). I'm also trying to simulate my axisymmetric problem and this problem appears too in my case.; ![Base_Axis](https://user-images.githubusercontent.com/74228020/133761583-b3ea8fb4-876a-422c-a957-4a0ce1cc9783.png); Symmetric BC is x-axis. How I fix this problem? Could anyone help me?. Thank you. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - SU2 Version: v7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373:1370,config,configure,1370,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373,1,['config'],['configure']
Modifiability,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234:704,variab,variables,704,https://su2code.github.io,https://github.com/su2code/SU2/pull/234,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"Dear all,; SU2 now prints N restart file for each of the zone, of course if a multizone flow problem is run. If in the config file we specify something like this. % Output file restart flow; RESTART_FLOW_FILENAME= restart_flow.dat. It will automatically create nZone restart file:; ""restart_flow_0.dat "" ""restart_flow_1.dat"" .... ""restart_flow_N.dat"". Nothing changed also for the input restart file. We can still specify a single solution file . % Restart flow input file; SOLUTION_FLOW_FILENAME= restart_flow.dat. and it automatically crate the numbered file using the root = restart_flow. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/194:119,config,config,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/194,1,['config'],['config']
Modifiability,"Dear all,; This pull request is to add the gamma_BC variable (the intermittency function of B-C transition model) to the output file for visualization purposes, so that the user can see the laminar and turbulent regions of the flow.; This does not work as is now, and needs to be corrected. Tim is already helping me on this, and I am trying to figure everything out according to his comments. Any additional advice/help is appreciated. Hope this would be ready for the next release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/419:52,variab,variable,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/419,1,['variab'],['variable']
Modifiability,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:219,config,configure,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,9,"['config', 'variab']","['config', 'configure', 'variables']"
Modifiability,"Dear developers,; I am trying to install SU2 v6.2.0 on Ubuntu 16.04 following the [instruction](https://su2code.github.io/docs/Python-Wrapper-Build/) you provided. But it failed with errors. I have installed Swig and mpi4py as you suggested. The command I used:; ```; ./configure --prefix=/home/lab/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-PY_WRAPPER; ```; The SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure. When I run `make -j 24`, the error showed up:; ```; make[2]: Entering directory '/home/lab/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -Wall -I/home/lab/anaconda3/include/python3.7m -I/home/lab/anaconda3/include/python3.7m -I/home/lab/.local/lib/python2.7/site-packages/mpi4py/include -I/home/lab/anaconda3/lib/python3.7/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/lab/SU2/SU2_PY/pySU2/pySU2.i ; /home/lab/SU2/SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[1]: *** [all] Error 2; make[1]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:441: recipe for target 'all-recursive' failed; make: *** [all-recursive] Error 1; ```. Best.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:270,config,configure,270,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,3,"['config', 'variab']","['configure', 'variables']"
Modifiability,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:181,adapt,adapted,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['adapt'],['adapted']
Modifiability,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1083:178,config,configuration,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083,3,['config'],"['config', 'configuration', 'configure']"
Modifiability,Doxygen groups can be used to create a separate page which will display anything specified by a \ingroup command. I think this would be a good way to keep our documentation updated about the available config file options and their syntax.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:201,config,config,201,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['config'],['config']
Modifiability,"Dry run errors, i.e. SU2_CFD -d <configname>.cfg",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:33,config,configname,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['config'],['configname']
Modifiability,"During the change to the multizone config, the values in the history files for the turbomachinery cases are not being written anymore for the develop branch. The files are created as well as the header, but no values are written during every WRT_CON_FREQ iteration. Is there a marker that I need to add? I checked it with the APU_turbocharger testcase, nothing is written there as well.. - SU2 Version: [current develop branch @ commit 27f3875 ]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/746:35,config,config,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/746,1,['config'],['config']
Modifiability,Enhance regressions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/253:0,Enhance,Enhance,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/253,2,['Enhance'],['Enhance']
Modifiability,Enhancement fixed cl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:0,Enhance,Enhancement,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,1,['Enhance'],['Enhancement']
Modifiability,Enhancement for multipoint optimization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:0,Enhance,Enhancement,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['Enhance'],['Enhancement']
Modifiability,Enhancements for the fixed CL mode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780:0,Enhance,Enhancements,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/780,1,['Enhance'],['Enhancements']
Modifiability,Example was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391:47,Config,Config,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/391,1,['Config'],['Config']
Modifiability,Expand the Rotation DV variable,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/121:23,variab,variable,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/121,1,['variab'],['variable']
Modifiability,"Expose design variable bounds, max optimizer iterations, and optimization tolerance to the user in shape_optimization.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/107:14,variab,variable,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/107,1,['variab'],['variable']
Modifiability,Extend custom python BC to include Euler/NS and turbulence variables.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:0,Extend,Extend,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,2,"['Extend', 'variab']","['Extend', 'variables']"
Modifiability,Extending CFL adapt to include species transport,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:0,Extend,Extending,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,2,"['Extend', 'adapt']","['Extending', 'adapt']"
Modifiability,FIx a bug which influenced the convergence behavior when using multigrid and SST by allowing the turbulent solution vector to propagate into the coarser grids (during multigrid) at each iteration. In addition this fix includes an update in the variable names for the parallel output.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/372:244,variab,variable,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/372,1,['variab'],['variable']
Modifiability,Feature CFL adaptation initial iteration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:12,adapt,adaptation,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,1,['adapt'],['adaptation']
Modifiability,Feature actuator disk with variable load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:27,variab,variable,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['variab'],['variable']
Modifiability,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:49,variab,variable,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,Fix CFL Turbulence reduction option for adaptive cfl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:40,adapt,adaptive,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,1,['adapt'],['adaptive']
Modifiability,Fix COptionEnumList bug. The previous parsing script set all of the DVKind variables to the first one. This commit changes it.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/154:75,variab,variables,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/154,1,['variab'],['variables']
Modifiability,Fix CST parameterization method,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2124:8,parameteriz,parameterization,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2124,1,['parameteriz'],['parameterization']
Modifiability,Fix WALL_TIME for unsteady + some variable index cleanup,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1544:34,variab,variable,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1544,1,['variab'],['variable']
Modifiability,Fix adjoint for streamwise periodic massflow + General handling of adjoints of additional solution variables,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:99,variab,variables,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['variab'],['variables']
Modifiability,Fix bug in SA-neg diffusion term (and generalize indices of flow variables for use by scalar solvers and numerics),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:65,variab,variables,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['variab'],['variables']
Modifiability,Fix configure,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:4,config,configure,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,1,['config'],['configure']
Modifiability,Fix dissipation in transition model and update inlet profile (initial profile from config),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:83,config,config,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['config'],['config']
Modifiability,Fix driver/config restructure bug,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751:11,config,config,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/751,1,['config'],['config']
Modifiability,Fix incorrect adaptive CFL reporting,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Modifiability,Fix loop variable privatization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2350:9,variab,variable,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2350,1,['variab'],['variable']
Modifiability,Fix wallfunction variable computation on mpi rank edges,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:17,variab,variable,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,1,['variab'],['variable']
Modifiability,Fixed possible infinite loop in mesh adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:37,adapt,adaptation,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,1,['adapt'],['adaptation']
Modifiability,Fixing Design Variable Indices to be consistent,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/757:14,Variab,Variable,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/757,1,['Variab'],['Variable']
Modifiability,"Folks,. Just a general remark. Some of the doxygen comments of the functions and variables are not consistent, because these are simply copied. There are examples in the code where several functions have exactly the same comments and those comments do not make any sense whatsoever. So could everybody also pay attention to the comments before a pull request is made? You do not only write this code for yourself but also for other people and wrong comments can be extremely confusing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/544:81,variab,variables,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/544,1,['variab'],['variables']
Modifiability,"G from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1623,config,configuration,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,"['adapt', 'config']","['adapts', 'configuration']"
Modifiability,"Generated .su2 mesh using Gmsh with same number of elements and nodes as .cgns mesh have on ""su2code.github.io/Inviscid_Wedge/"" repository and used same configuration file from the repository but results are different on using .su2 mesh from Gmsh and the one downloaded from repository. . Its weird that both the mesh are exactly same and same cfg file but different shock resolutions (repository mesh give smoother result). Please check attached Mach contour generated using Paraview.; ![MachContour](https://user-images.githubusercontent.com/59632055/75407996-ce83ea80-5957-11ea-8b7c-9c1a731d7a84.png); [mesh_and_config_files.zip](https://github.com/su2code/SU2/files/4259257/mesh_and_config_files.zip). **Desktop (please complete the following information):**; - OS: Windows 7; - MPI implementation and version: MicrosoftMPI v10.1; - SU2 Version: v7.0.0 (binary executable)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/890:153,config,configuration,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/890,1,['config'],['configuration']
Modifiability,"Good evening everybody.; I apoligize in advance for the banality of my question, but I am facing some problematics I did not expect.; I am currently trying to run some symulations on NASA Rotor67 using the Body Force Model (implemented in the GIT branch feature_turbo_bodyforce) but my issues are connected with boundary conditions in general.; I am imposing total conditions at the inlet (Pt = 101325 [Pa], Tt = 288.15 [K]) and static pressure at the outlet (P = 12600 [Pa]). The symulation is then run up to convergece (RMS < 1e-8).; The fact is that when I postprocess the data I find:; - Both the BC are not respected, especially the outlet one;; - The flow shows regular behaviour in the straight outlet section until it develops an unreasoable bubble of high P and T near the ; outlet hub.; These isues are further enhanced as I refine the grid more and more. Even though this is just very short semplification of the problem at hand, I would like to know wheter this issue can be related to my the model I am using or rather to some wrong settings. I have been told that the RMS instability at the outlet hub is not unusual in SU2. How can I hardly enforce my BC? I do not understand why I get an inlet different from what I set. Moreover is there any way to impose a mass flow outlet condition? ; Thanks for the attention.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1498:821,enhance,enhanced,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/1498,1,['enhance'],['enhanced']
Modifiability,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/320:155,variab,variables,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/320,5,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:1471,config,config,1471,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,1,['config'],['config']
Modifiability,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017:418,variab,variables,418,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017,1,['variab'],['variables']
Modifiability,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:1327,config,config,1327,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,2,['config'],['config']
Modifiability,"Hello community,. In the solver_direct_mean.cpp file there is a small but important bug about the calculation of momentum forces. I aware the situation while solving RANS nozzle flow and calculating corresponding thrust value from exit via momentum forces input only. The resulting values are completely unmatched with the experiments. It seems the problem about uninitialized values in Momentum_Forces method. When the following code segment (coppied from pressure forces method) applied problem is solved. /*-- Variables initialization ---*/; ; AllBound_CD_Mnt = 0.0; AllBound_CL_Mnt = 0.0; AllBound_CSF_Mnt = 0.0;; AllBound_CMx_Mnt = 0.0; AllBound_CMy_Mnt = 0.0; AllBound_CMz_Mnt = 0.0;; AllBound_CoPx_Mnt = 0.0; AllBound_CoPy_Mnt = 0.0; AllBound_CoPz_Mnt = 0.0;; AllBound_CFx_Mnt = 0.0; AllBound_CFy_Mnt = 0.0; AllBound_CFz_Mnt = 0.0;; AllBound_CT_Mnt = 0.0; AllBound_CQ_Mnt = 0.0; AllBound_CMerit_Mnt = 0.0;; AllBound_CEff_Mnt = 0.0;. - Linux (Ubuntu 16.4); - g++ (GCC) 5.4; - Serial, AD support; - SU2 Version v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/802:513,Variab,Variables,513,https://su2code.github.io,https://github.com/su2code/SU2/issues/802,1,['Variab'],['Variables']
Modifiability,"Hello everybody:; I would like to have more informations about the correct usage of discrete Adjoint when the fluid domain contains two different zones.; I tried to run a discrete Adjoint simulation using the test case ""Axial_stage_2D"" (inside the turbomachinery sub-directory); the cfg file has been modified in order to allow the adjoint calculation, Hick-Henne bumps have been set on both surfaces of the blades but when I tried to run the simulation there have been several problems:; - firstly, SU2_DEF in stand-alone mode seems to disregard the second part of the mesh (the rotor);; - when I tried to apply a deformation just on the statoric part, the DEF module placed Hicks-Henne bumps on the surface but in positions which were incoherent with the ones specified into the configuration file.; - I used the Python script but even in that case, the effective bump position was different from the expected one.; - Using the Python script discrete_adjoint.py with nzones =2 (specified through the -z 2 flag), two different history-files (history_direct_0.dat, history_direct_1.dat) are sistematically generated by the CFD module (one for each zone) but when the next module (CFD_AD) is called, it tries to find a single history file named ""history_direct.dat"", which does not exist, and consequently displays an error and stops. A similar thing happens when running finite_difference.py. Is there a documentation that I can use to correctly set a multi-zone Adjoint? Does a similar note exist for the correct setting of bump placement?; Thanks a lot!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/630:781,config,configuration,781,https://su2code.github.io,https://github.com/su2code/SU2/issues/630,1,['config'],['configuration']
Modifiability,"Hello everyone,. I am starting to work on adding inlet file interpolation capabilities in SU2. I currently have a spanwise PT and TT distribution (r vs PT or TT) for an inlet boundary for a Stator (periodic, turbomachinery case). I want to carry out a spanwise interpolation at the inlet vertices. I can write a program to read an inlet file for a new format (r vs PT or TT). Then I want to 1D interpolate this data against the radii of all the vertices on the inlet face. The best way is to generate a **piecewise 1D interpolation function** that can return the value of the interpolated data at that radius. I have done this before in python using 'interp1D'. I have found the following library for C++ that does have this capability:. http://people.math.sc.edu/Burkardt/cpp_src/pwl_interp_1d/pwl_interp_1d.html. which will require _'The PWL_INTERP_1D test code needs the R8LIB and TEST_INTERP libraries._'. I hope these libraries will be integrated with SU2 without any issue. However, it would be better if I can use some of the built-in interpolation capabilities in SU2 like what I found in 'interpolation_structure.cpp'. I also look forward to extending this capability for 2D interpolation(that is, in r and theta). It would be very helpful if someone who has worked with interpolation before can point to a function that is capable of generating a piecewise interpolation function that could work for my case or can pitch in any idea related to this. Thanks!. @vdweide @clarkpede @economon @juanjosealonso @sravya91 @bmunguia @jayantmukho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791:1151,extend,extending,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/791,1,['extend'],['extending']
Modifiability,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:273,config,config,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,1,['config'],['config']
Modifiability,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948:328,config,configure,328,https://su2code.github.io,https://github.com/su2code/SU2/issues/948,4,"['Adapt', 'config', 'variab']","['Adaptive', 'config', 'configure', 'variable']"
Modifiability,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:176,config,configuration,176,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,1,['config'],['configuration']
Modifiability,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:320,config,configuration,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,2,"['Config', 'config']","['Configuration-gen', 'configuration']"
Modifiability,"Hello!. I am new to SU2 and I'm having trouble running the incompressible turbulent RANS NACA0012 test case on SU2 in Windows.; I have downloaded the binary excecutables SU2 v7.3.0 and my simulation seems to stop after 250 iterations with the error:. _Error in""bool CFileWriter::OpenMPIFile(std::__cxx11::string)"":; Unable to open file restart_flow.dat_. At first I thought that perhaps my MPI I/O was causing this error to occur, however this error also appears when I run the case in serial.; I have had a look at the SU2 documentation and on this forum and so far I haven't been able to find a similar error happening for anyone else. I am not sure how to go about fixing this issue so any help is appreciated. I have attatched the configuration file and screenshots from Windows Powershell to this post and the mesh I am using is n0012_897-257.su2.; Let me know if I need to clarify any further details. Thank you!. **Desktop (please complete the following information):**; - OS: Windows 10.0.19043; - C++ compiler and version: g++ MinGW-W64 8.1.0; - MPI implementation and version: Microsoft MPI v10.1.2 ; - SU2 Version: v 7.3.0 'Blackbird'; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8005251/turb_NACA0012_sa.txt); ![SU2_error_1](https://user-images.githubusercontent.com/99037921/152580001-7c7670fd-b5ca-4667-a4f5-16350cb67378.png); ![SU2_error_2](https://user-images.githubusercontent.com/99037921/152580035-fe0d1954-2044-4767-a4f8-47effb1d1082.png); ![SU2_error_3](https://user-images.githubusercontent.com/99037921/152580030-60da648d-4d96-451c-8449-e17b4a04e01d.png); ![SU2_error_4](https://user-images.githubusercontent.com/99037921/152580021-abb070b1-9d94-4649-a265-c9ad35a678d3.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537:735,config,configuration,735,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537,1,['config'],['configuration']
Modifiability,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:417,config,config,417,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,2,['config'],"['config', 'configure']"
Modifiability,"Hello, . all the residuals in the adjoint.dat file written after running a continuous adjoint simulation ( with the option WRT_RESIDUALS= YES) are zero. . Here are the config file and mesh for the QuickStart example which also has this problem; [files.zip](https://github.com/su2code/SU2/files/1495681/files.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/475:168,config,config,168,https://su2code.github.io,https://github.com/su2code/SU2/issues/475,1,['config'],['config']
Modifiability,"Hello, . when using the option INV_DESIGN_CP = YES, COutput::SetCp_InverseDesign is called to set the pressure difference. There is no problem with the allocations of values when running in serial but some problems arise when running in parallel. I haven't debugged it completely but it seems that the storage of the values of iMarker and iVertex in Point2Vertex gets mixed up by the parallel run. This in turn affects the reading of the TargetCp file (and can be checked by running the simulation in serial and in parallel, they should give different results for the Cp_diff in the history file). Also, if the inverse_design_pressure is defined on a boundary (e.g. a wing) but there are other boundaries of the same kind in the domain (e.g. some walls) these are also considered when computing the pressure difference (with a target pressure equal to 0.0) thus affecting the final value of the objective function. I believe this last problem could be solved by placing something like if (config->GetMarker_All_Designing(iMarker) ) == 1) at appropriate locations in the routine. . However, I am having troubles troubleshooting the first problem.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/486:989,config,config,989,https://su2code.github.io,https://github.com/su2code/SU2/issues/486,1,['config'],['config']
Modifiability,"Hello, I am new to SU2 and trying to install it on cluster locally. I am facing issue in compilation and installation step. I used following command to build:; `./meson.py -Dwith-mpi=enabled -Dcustom-mpi=true -Dextra-deps=mpich -Denable-cgns=false --prefix=$HOME/SU2/SU2-Install build`. After which I tried to compile and install:; `./ninja -C build install`. However I am getting an error:; `ninja: Entering directory build; [1/463] Compiling C object externals/metis/libmetis.a.p/GKlib_htable.c.o; FAILED: externals/metis/libmetis.a.p/GKlib_htable.c.o ; cc -Iexternals/metis/libmetis.a.p -Iexternals/metis -I../externals/metis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -std=c99 -O3 -fPIC -D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DUSE_GKREGEX -Wno-implicit-function-declaration -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-sign-compare -Wno-clobbered -Wno-empty-body -Wno-unused-label -Wno-misleading-indentation -Wno-maybe-uninitialized -Wno-pedantic -Wno-error=absolute-value -MD -MQ externals/metis/libmetis.a.p/GKlib_htable.c.o -MF externals/metis/libmetis.a.p/GKlib_htable.c.o.d -o externals/metis/libmetis.a.p/GKlib_htable.c.o -c ../externals/metis/GKlib/htable.c; cc1: error: -Werror=absolute-value: no option -Wabsolute-value; cc1: warning: unrecognized command line option ""-Wno-misleading-indentation"" [enabled by default]`. I am unable to understand if its an issue with GCC compiler of the HPC cluster or something else. Would be a great help if someone can guide me on this. Thanks in advance!. **Cluster Information**; - OS: [CentOS Linux 7]; - C++ compiler and version: [g++ (GCC) 13.2.0] (Loaded as module); - MPI implementation and version: [mpich 4.1.2] (Loaded as module); - SU2 Version: [8.0.0 ""Harrier""]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2182:893,variab,variable,893,https://su2code.github.io,https://github.com/su2code/SU2/issues/2182,2,['variab'],['variable']
Modifiability,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:533,config,configured,533,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,"['config', 'extend']","['configured', 'extended']"
Modifiability,"Hello, I want to plot streamline in ParaView ,but I found no Velocity variable ，Can I output the velocity field or how plot streamline without Velocity in ParaView?. thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1473:70,variab,variable,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1473,1,['variab'],['variable']
Modifiability,"Hello, I'm Minsul. I am struggling to compile SU2-feature_adap branch. My purpose for using the branch is mesh adaptation. But the problem is that whenever I command ./meson.py build,. It shows the error message: meson.build:1:0: ERROR: Value ""c++11"" for combo option is not one of the choices. Possible choices are: ""none"", ""c++98"", ""c++03"", ""gnu++98"", ""gnu++03"". So I tried to edit meson.build file. not c++11 but c++03 or c++98. But I get to know that It is necessary of c++11 to compile SU2_CFD. Is there any one else who can help me solve this problem?. Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2033:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/2033,1,['adapt'],['adaptation']
Modifiability,"Hello,. I am trying to compile SU2 on the central HPC facility at Sheffield University. I am running into problems with SU2 trying to link against HDF5 or ZLIB when I would rather it did not. When I try and not build against HDF5 I use the following script:; https://gist.github.com/385ee9c8589fd9146ade. and get this output:; https://gist.github.com/8fb4ab586ea12d9c28b2. which can basically be summed up as it is configured to not build with HDF5 (it says this in the configure output), but then errors because it can not link against the HDF5 lib. If I try and build SU2 against the version of HDF5 we have compiled on the cluster it will then error because that library was not built with ZLIB support. Am I doing something wrong to disable linking against HDF5 or will I have to recompile HDF5 with ZLIB?. Thanks. rcgsheffield/iceberg_software#159",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/219:415,config,configured,415,https://su2code.github.io,https://github.com/su2code/SU2/issues/219,2,['config'],"['configure', 'configured']"
Modifiability,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:468,variab,variable,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['variab'],['variable']
Modifiability,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526:587,config,config,587,https://su2code.github.io,https://github.com/su2code/SU2/issues/526,1,['config'],['config']
Modifiability,"Hello,. I have been using SU2 NEMO to run cases for steady, inviscid, hypersonic flow around blunt objects. Previously I have been able to successfully run cases using SU2 version 7.1.1. However, I have been running into residual stalling with the newer versions (7.4.1 and 7.5.1). Recently, I tried two different meshes which worked for me before (TestCases/euler/bluntbody/blunt_91.su2 and a RAM C-II mesh I previously used). I also tried updating the confguration file to match selections in TestCases/nonequilibrium/invwedge_ausm.cfg but I still face this issue. I have attached the relevant files here. Please let me know if this is a solver issue or if I need to change any selections in the configuration file. ; [residual_stalling.zip](https://github.com/su2code/SU2/files/11425983/residual_stalling.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026:698,config,configuration,698,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026,1,['config'],['configuration']
Modifiability,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/402:115,config,configuration,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/402,1,['config'],['configuration']
Modifiability,"Hello,. I the same issue with v4.1.0 as in #28, which has been closed but does not contain helpful information. The cgns headers and libs (v3.2.1) are correctly detected by `configure`. Here is the output of make V=1:. ```; Making all in externals; make[1]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Entering directory `/home/antodech/SU2-4.1.0/externals'; make[2]: Nothing to be done for `all-am'.; make[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; .",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250:174,config,configure,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/250,1,['config'],['configure']
Modifiability,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531:516,config,configure,516,https://su2code.github.io,https://github.com/su2code/SU2/issues/531,1,['config'],['configure']
Modifiability,"Hello,. I'm posting this issue based on the discussion on CFD Online [here](https://www.cfd-online.com/Forums/su2/235889-error-executing-deformation-multiple-ffd-control-point.html#post803932). The original query goes like this- . I'm trying to perform the mesh deformation of Onera M6 mesh with SU2_DEF using multiple FFD control points. The same mesh has been used in the current case as used in the SU2's tutorial of [Onera M6](https://su2code.github.io/tutorials/Inviscid_3D_Constrained_ONERAM6/). The configuration file used in the simulation is attached below- ; [Adjoint_ONERAM6.txt](https://github.com/su2code/SU2/files/6489000/Adjoint_ONERAM6.txt). On executing SU2_DEF, .su2 format of mesh is generated which is used as an input for the simulation. But on executing discrete_adjoint.py, I get the following error-. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"":; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM. ------------------------------ Error Exit -------------------------------. From the looks of the error and my configuration file, I do have an equal number of arguments in the DV_VALUE as well as DV_KIND or DV_PARAM. Thanks! . Desktop:; - OS: Linux (CentOS); - C++ compiler and version: -; - MPI implementation and version: OpenMPI 1.8.8; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1289:506,config,configuration,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/1289,2,['config'],['configuration']
Modifiability,"Hello,. There is a stray allocation in the Integration_Postprocessing routine in line 1804 in the develop branch. Currently reads:. if (template_solver) integration[val_iInst][TEMPLATE_SOL] = new CSingleGridIntegration(config);. instead of delete. Is this resolved in a more recent PR?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792:219,config,config,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/792,1,['config'],['config']
Modifiability,"Hello,. in SU2 v7.5.1 is probably a bug. Python scripts using ""config,py"", as it is in case of discrete_adjoint.py, replace the DV_VALUE by default value = 0. It cases stop of solution due to inconsistency between DV_VALUE and DV_PARAM....; It seems that this issue is connected with part of code in ""config.py"":. line 658:; #hack - twl; _if 'DV_VALUE_NEW' not in data_dict:; data_dict['DV_VALUE_NEW'] = [0]; if 'DV_VALUE_OLD' not in data_dict:; data_dict['DV_VALUE_OLD'] = [0]_. line 1075: ; _# HACK - twlif ; 'DV_VALUE_NEW' in config:; config.DV_VALUE = config.DV_VALUE_NEW. Could you please fix it. Thank you in advance. Best regards,. Jan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005:63,config,config,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005,5,['config'],['config']
Modifiability,"Hello,; I'm using SU2 for DOE sampling right now. My current process is to change the values of the relevant variables in FFD, then use the `SU2_DEF` module to deform the mesh, it will output the mesh. Then I use `SU2_CFD` read mesh to calculate. My question is, is it possible to deform the mesh without exporting the mesh (keep it in the computer memory) and then use `SU2_CFD` directly to perform the calculation, eliminating the need to export and read the mesh. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2254:109,variab,variables,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/2254,1,['variab'],['variables']
Modifiability,"Hello,; When using the rotating reference frame option with incompressible flow the code blows up immediately. There appears to be two issues - ; 1. Omega_ref is not initialized in the SetNondimensionalization subroutine in solver_direct_mean_inc.cpp. In the compressible version, it is defined as Velocity_ref/Length_ref whereas no definition exists in the incompressible one.; 2. Since all the definitions of gas constants have been removed from the incompressible routines, using Mach_motion to normalize forces and moments makes them all undefined. . While both the fixes are easy, it might still lead to issues when free stream velocity is zero as Omega_ref is used to normalize grid velocities in SetRotationalVelocity. ; Is it possible to implement a new config option to compute Omega_ref differently and also use it to normalize forces?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/468:762,config,config,762,https://su2code.github.io,https://github.com/su2code/SU2/issues/468,1,['config'],['config']
Modifiability,"Hello. I have been trying to work with test case ""Caradonna_tung"". I have obtained the latest config file and mesh file i believe. Hovewer, when i run the solver, it gives value ""zero"" for everything and seemingly converged after only 10 iterations. I believe i could not initialize the solver. Can anyone help me with it ? Thank you. [caradonna_tung.zip](https://github.com/su2code/SU2/files/4664054/caradonna_tung.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997:94,config,config,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/997,1,['config'],['config']
Modifiability,"Hello. I use SU2_6.2.0. I wonder why we use the gradient of the primitive variables, but not conserved one? When simulating compressible fluid, is conserved value better?. Thank you. Cao J. Z.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/820:74,variab,variables,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/820,1,['variab'],['variables']
Modifiability,"Hello. There are some problems when I want to output heatflux as result. There are some corresponding codes in function 'void COutput::MergeSolution' from file 'output_structure.cpp'. But why they don't seem to work? I'm clueless about it. Here are my configure file, mesh file and results. Thank you. [configure and mesh.zip](https://github.com/su2code/SU2/files/3762201/configure.and.mesh.zip); [result.zip](https://github.com/su2code/SU2/files/3762206/result.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805:252,config,configure,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/805,3,['config'],['configure']
Modifiability,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/510:432,variab,variables,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/510,1,['variab'],['variables']
Modifiability,"Hey at all. I have a problem with the discrete_adjoint-Phytonsript. The problem is, that my cases needs a lot of RAM(Over 500GB for CFD_AD and MG). But it is impossible to start the script on our HPC an the machine where I can start the script is low memoried.; With smaller cases it was possible to start discrete_adjoint.py with EXT_ITER=1 to creat all config files, modifying some options and send them separately to the HPC. But as I said with the big files the CFD_AD part takes to much memory. So the last *cfg-files aren't created because the files are just created directly before the calculation. For me especially the config_DOT_AD script is importend. I come to mind to two options; 1. Changing the creation sequence of the *.cfg files from ""before calculation"" to all *.cfg-files at once directly after starting the script; 1. Please tell me how I can creat the *.cfg-files ""manually"". Especially the config_DOT_AD script. Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/279:355,config,config,355,https://su2code.github.io,https://github.com/su2code/SU2/issues/279,1,['config'],['config']
Modifiability,"Hey everyone, . Following the discussions at the SU2 Developers meeting this week, I wanted to start a conversation about compiling a comprehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:412,config,configuration,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['config'],['configuration']
Modifiability,"Hey everyone,. I have been taking a deep dive into the shape optimization features in SU2 and have resurfaced with some observations, suggestions, and questions. First, the bug:; Even though the config_template, and option structure have changed the numbering of the DEFINITION_DV (for example, FFD_CONTROL_POINT went from being 7 to 11), this has not been reflected in the SU2_PY/SU2/io/tools.py, or any of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:730,config,config,730,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['config'],['config']
Modifiability,"Hey.; I have been performing simulations and validating results using SU2. I have successfully carried out 2D cases. However, I am having a hard time while doing 3D cases. ; Can anyone share an example of a 3D case config file dealing with Euler and Navier-Stokes equation?; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523:215,config,config,215,https://su2code.github.io,https://github.com/su2code/SU2/issues/523,1,['config'],['config']
Modifiability,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/21:1009,config,configure,1009,https://su2code.github.io,https://github.com/su2code/SU2/pull/21,2,['config'],['configure']
Modifiability,"Hi All,. I’m a little bit confused with the python scripts and the design variable definition. It seems that to compute the number of design variable we use something like this:. ```; # number of design variables; dv_size = project.config['DEFINITION_DV']['SIZE']; n_dv = sum(dv_size); ```. I think that dv_size is new for me. Do you know what is the reason for this? Is it possible to put several design variable together in the output file and the python stuff will split the design variables?. Related with this, I have noticed several inconsistencies like:. We use:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; k = 0; for i, dv_scl in enumerate(dv_scales):; for j in range(dv_size[i]):; x0[k] = x0[k]/dv_scl;; k = k + 1; ```; or this:. ```; # prescale x0; dv_scales = project.config['DEFINITION_DV']['SCALE']; x0 = [ x0[i]/dv_scl for i,dv_scl in enumerate(dv_scales) ]; ```. Any clarification would be very appreciated. Thanks!; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/378:74,variab,variable,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/378,8,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938:753,config,config,753,https://su2code.github.io,https://github.com/su2code/SU2/issues/938,1,['config'],['config']
Modifiability,"Hi all! I am facing this issue when trying to do the ninja build.; I am trying to install SU2 on the remote server where I don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:995,config,config,995,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,['config'],['config']
Modifiability,"Hi all, . I recently discovered the Gust simulation capabilities of SU2 for two-dimensional Euler flows. . I am trying to implement the additional terms necessary for extending the method to 3D Navier-Stokes flows. I am running into trouble when trying to implement the changes necessary to achieve this. For now, I have began working on the two functions responsible for the gust simulations:. 1. SU2/SU2_CFD/src/iteration_structure.cpp::CFluidIteration::SetWind_GustField; 2. SU2/SU2_CFD/src/numerics/flow/flow_sources.cpp::CSourceWindGust::ComputeResidual. From what I understand the extension to 3D should simply consist in modifying the function `SetWind_GustField` to impose a 3D grid-velocity instead of a 2D grid velocity, and adding the appropriate source terms in the function `CSourceWindGust` (these can even be set to zero, just to debug the code). . However, when I try to implement these changes, I get a segmentation fault that I cannot identify. . Does someone have an idea on how to implement this feature successfully ? . PS: I have attached the modifications I made to the two functions mentioned above here:; [SetWind_GustField.txt](https://github.com/su2code/SU2/files/6740388/SetWind_GustField.txt); [ComputeResidual.txt](https://github.com/su2code/SU2/files/6740389/ComputeResidual.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1319:167,extend,extending,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1319,1,['extend'],['extending']
Modifiability,"Hi all, . I will be opening a number of issues that were raised during the Developers Meeting for discussion, to get things started. One interesting open question is **how many of the branches available in the repo are still active.**. My suggestion is that we all work together in having a list of branches with a short description in order to have an idea of where we stand. I would propose that all of you go through your feature branches and collect the following information about them:. - Branch name; - A two line description on the goal of the branch; - Status of the branch:; - Under active development (we are adding a new feature here); - Complete feature, (not necessarily up-to-date with develop); - In such case, latest compatible release; - Mature feature (not necessarily complete); - Test feature, still under consideration; - Test feature, discontinued; - Old feature / unknown status; - Can the branch be deleted?. This information would be very valuable, as maybe some people would be interested in continuing old developments, some repetitive work would also be avoided, and collaboration between complementary branches would be enhanced. I'm happy to help in collecting this information and later cleaning up the repository. Please let me know of your thoughts, but I think we should get this started asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582:1150,enhance,enhanced,1150,https://su2code.github.io,https://github.com/su2code/SU2/issues/582,1,['enhance'],['enhanced']
Modifiability,"Hi all, . This is a first pass at cleaning up some of the spacing and comments in the headers files of SU2. I also spent some time to make the code more readable, so this is purely a stylistic change. I'm sure to have missed a bunch. I know this will create alot of merge conflicts, so i figured I would get your opinions on this. ; My thoughts on this were to get it done now and never have to worry about it again. I only touched the header files as future refactoring will be happening. . Edit: It seems my attempt to remove tabs has caused some problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818:459,refactor,refactoring,459,https://su2code.github.io,https://github.com/su2code/SU2/pull/818,1,['refactor'],['refactoring']
Modifiability,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:1012,variab,variable,1012,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,1,['variab'],['variable']
Modifiability,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1257:175,config,config,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257,1,['config'],['config']
Modifiability,"Hi all,. I am trying to run SU2 (v. 5.0) on big endian platform but am unable to do so. I have tried using both .su2 and .cgns meshes, but the simulation pauses at:. _Calling ParMETIS...; Finished partitioning using ParMETIS (39838 edge cuts).; Communicating partition data and creating halo layers._. Is there any way to make the grid compatible for such platforms?. Thanks in advance,. - Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/371:292,layers,layers,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/371,1,['layers'],['layers']
Modifiability,"Hi all,. I am trying to use the AD module in the discrete adjoint solver to calculate the sensitivity of the lift coefficient with respect to the closure coefficients of the SA turbulence model. I've created new variable names in the CConfig class for the SA closure coefficients and have modified the code so that it reads the values for the coefficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:212,variab,variable,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,4,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"Hi all,. I experimented a little bit with a different build system to replace automake/autotools. Although it works most of the time fine, it is cumbersome to work with. Especially when modifying the .am files and the configure.ac due to the complicated syntax. Furthermore it is relatively slow. One alternative would be cmake, however, the syntax is also not very comfortable and it has too many features which we actually don't need. . So I came across meson and ninja. It is lightweight and very easy to use (setting it up for SU2 took half a day, without any prior knowledge). Compilation time is faster because it builds all object files in parallel. Another advantage is that it is platform independent. Creating packages and binaries and also crafting releases is much simpler with this system (which we can exploit to automate the release process). It is also possible to embed our regression test framework into that process. . In case you want to try it out, checkout the branch **meson_build**. Everything needed is added as submodule (meson and ninja), so make sure to do a `git submodule update` to clone them. To configure and build use the following commands:. `externals/meson/meson.py build`; `./ninja -C build`. Please test it and give feedback. I have not tried it on windows or mac, so if you are using any of these OS, give it a try!. Note: automake and meson can co-exist together without any interference. So the old way of building SU2 still works in that branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685:218,config,configure,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/685,2,['config'],['configure']
Modifiability,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994:226,config,configfile,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/994,1,['config'],['configfile']
Modifiability,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333:235,adapt,adapted,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/333,1,['adapt'],['adapted']
Modifiability,"Hi all,. I'm new to CFD and SU2. I'm trying to modify the c++ code to add a time-dependent mach in the compressible Euler equations (SU2 Solver: EULER) for a rocket head cone design. At about line 786 of the CEulerSolver.cpp, I want to have a slight numerical change in its mach, for example, a sine function. After I saw the example of the Adding Custom Source Terms to Euler Equations I modified the code like this:. ```; const auto dt = config->GetDelta_UnstTimeND();; su2double time = config->GetTime_Step() * dt;; su2double Alpha = config->GetAoA()*PI_NUMBER/180.0;; su2double Beta = config->GetAoS()*PI_NUMBER/180.0;; const su2double MachValue = config->GetMach();; su2double Mach = 2 * MachValue + 0.01 * sin(2 * PI_NUMBER * time);; ```. But during postprocessing I noticed that Mach becomes 2 * MachValue + 0 as the ""time"" could not be updated to the series of 0, 1, 2, 3, 4... So I'm wondering how I can build a mach that could change over time. I'm not sure what kind of syntax I should be using or how exactly to implement this mach term. . I am using SU2 7.3.1. Thank you so much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:440,config,config,440,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,5,['config'],['config']
Modifiability,"Hi all,. It seems that in the CScalarSolver.inl, in the upwind residual line 209, we are reconstructing the flow variable again when the SCALAR_UPWIND scheme is used. . ![image](https://github.com/su2code/SU2/assets/98025159/fb52c574-0dc2-49e1-9d29-e18b31a91bf7). if we use MUSCL_FLOW=YES and the CONV_NUM_METHOD_SPECIES= SCALAR_UPWIND (also for turbulence models), the flow variables are reconstructed twice. . Please let me know if I am not understanding correctly this piece of code. Thank you so much in advance. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2297:113,variab,variable,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/2297,2,['variab'],"['variable', 'variables']"
Modifiability,"Hi all,. Shouldn't the lines 82-99 in SU2_CFD/obj/Makefile.am say. ../include/variables/*.hpp. instead of . ../src/variable/*.hpp. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/737:78,variab,variables,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/737,2,['variab'],"['variable', 'variables']"
Modifiability,"Hi all,. When I try using the mesh_adaptation.py feature with the SUPERSONIC_SHOCK option on the inviscid wedge tutorial to capture the shock, the mesh is changed incorrectly. The original and ""adapted"" meshes are:; ![adapted_quad_grid](https://user-images.githubusercontent.com/18233420/47829974-e80f2500-dd57-11e8-8318-e84ea38336ad.png); ![original_quad_grid](https://user-images.githubusercontent.com/18233420/47829975-e80f2500-dd57-11e8-941c-d552839b12f1.png). The same random element divisions also occur if I use a mesh composed of triangles:; ![original_triangle_grid](https://user-images.githubusercontent.com/18233420/47829998-01b06c80-dd58-11e8-8553-5de26b8313ca.png); ![adapted_triangle_grid](https://user-images.githubusercontent.com/18233420/47829997-01b06c80-dd58-11e8-9f1a-1f33a820292e.png). I am not sure if this is related, but when I run the KIND_ADAPT= GRAD_FLOW option to adapt based on the density gradient (as opposed to using SUPERSONIC_SHOCK), I receive the following output from SU2 from both cases along with no adaptation (even though the grid is composed of quads or triangles):; --------------------- Start numerical grid adaptation -------------------; WARNING: Tried to find 4455 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0. I attached the configuration file (just the inviscid tutorial config file with the added mesh adaptation parameters at the bottom) and the mesh used (just the inviscid wedge tutorial mesh). [Config_file_and_mesh.zip](https://github.com/su2code/SU2/files/2537063/Config_file_and_mesh.zip). Thanks for any help,; Alex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:194,adapt,adapted,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,10,"['adapt', 'config']","['adapt', 'adaptable', 'adaptation', 'adapted', 'config', 'configuration']"
Modifiability,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:88,config,configMaster,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,2,['config'],['configMaster']
Modifiability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:316,adapt,adapted,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['adapt'],['adapted']
Modifiability,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524:326,config,configuration,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/524,1,['config'],['configuration']
Modifiability,"Hi all,; i was having troubles with the navierstoke/flatplate regression test.; Using develop branch, on my local server sometimes I get different residuals due to a undefined behaviour during multi-grid construction. ; In particular the problem arises during the agglomeration process.; I pin-pointed this issue and it seems to be related to the fact that the variable ""Parent_CV"" is not set to an initial value. ; I solve this issue by setting it to 0 in the CPoint constructor (in dual_grid_structure.cpp). Could please anyone have a look into this to double-check it?; To reproduce this issue I just run the test case multiple times and once every while I got different values of CFL at the lowest MG level.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/314:361,variab,variable,361,https://su2code.github.io,https://github.com/su2code/SU2/issues/314,1,['variab'],['variable']
Modifiability,"Hi all,; this is a small pull request which includes:; - Updating the names of the structural classes to fit to general code standards.; - Removing functions no longer used.; - Some improvements in the output of FSI problems.; - Minor changes to structural-related config options. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/522:265,config,config,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/522,1,['config'],['config']
Modifiability,"Hi all: . I'm running a time-dependent problem and need to screen output the current time and time step. I use ; ""SCREEN_OUTPUT = CUR_TIME, TIME_STEP"" .. command in the config file for the time discretization of ""TIME_DISCRE_FLOW= EULER_EXPLICIT"" for ""NAVIER_STOKES"" and ""NEMO"" solvers, and it prints out just **ZERO** for both solvers:; ....; | 6907| 0.0000e+00| 0.0000e+00|; | 6908| 0.0000e+00| 0.0000e+00|; | 6909| 0.0000e+00| 0.0000e+00|; | 6910| 0.0000e+00| 0.0000e+00|; | 6911| 0.0000e+00| 0.0000e+00|; | 6912| 0.0000e+00| 0.0000e+00|; | 6913| 0.0000e+00| 0.0000e+00|; ....; Any suggestion and help is greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1681:169,config,config,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/1681,1,['config'],['config']
Modifiability,"Hi everybody,. First of all thank you so much for all the work you have done with this amazing software. I think there is a bug with the BC transition model in function CSourcePieceWise_TurbSA::ComputeResidual in path SU2_CFD/src/numerics/turbulent/. The initialization value of chi_2 is 50.0 instead of 5.0 as suggested in the original paper at https://journals.sagepub.com/doi/pdf/10.1177/0954406217743537. Moreover, the computation of the variable term2 seems dubious, also when referring to the original paper. . There is another bug related to the fact that gamma_bc is redefined within the above mentioned function. Thus when trying to output it by adding the option INTERMITTENCY to Volume_Output in .cfg file it results in a 0 value everywhere. Thank you so much in advance and keep up with the great work!. Best,; Andrea. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2; - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: 4.0.3; - SU2 Version: 7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1196:442,variab,variable,442,https://su2code.github.io,https://github.com/su2code/SU2/issues/1196,1,['variab'],['variable']
Modifiability,"Hi everyone,. First of all, I want to thank you for this marvelous project you're running! Well done!; But I have some suggestions about the ""building"" and design philosophy of SU2. This (programming-related) ""feature request"" is all about making SU2 even more extendable. ## Is my feature request related to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:261,extend,extendable,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['extend'],['extendable']
Modifiability,"Hi everyone. I have used both the early version of SU2 with pyAMG (python2) and the latest SU2-feature_adap branch with python3. We have even ported its mesh adaptation implementation to the GAMMA mesh format due to geometry topology issues. ; ; However, there are two adapt options in the python implementation (ADAP_BACK, ADAP_SOURCE) and l could not still figure out how to use it because l don't know what kind of data file l should provide. For ADAP_BACK I have tried to use mesh files similar to the original volume mesh file with edges/corners in binary format (meshb) and it generally fails on complex geometries (with no ADAP_BACK option, it works nicely). Therefore, l am not sure whether l am providing the correct data file. This data file has to be only surface file with high order elements or just a volume mesh? . ADAP_SOURCE is completely mistery to me. Not much explanation inside the python code. I should also say that l don't understand the following command either. config_amg['options'] = config_amg['options'] + ' -inv-back'. Can someone please explain these plainly. I have also looked and feature_adapt Test files folder but unfortunately these options are closed and its data files are missing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2119:158,adapt,adaptation,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/2119,2,['adapt'],"['adapt', 'adaptation']"
Modifiability,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088:72,config,configure,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088,1,['config'],['configure']
Modifiability,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:324,config,config,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,2,['config'],['config']
Modifiability,"Hi!. I tried the [Quick Start] tutorial. [Quick Start]: <https://su2code.github.io/docs_v7/Quick-Start/>. I built SU2 from source (from commit 3f68501a7ccb107f05a44c2aa5747797541fb683 , branch 'develop').; I took files 'mesh_NACA0012_inv.su2' and 'inv_NACA0012.cfg' from the same commit. I managed to obtain a correct solution for the DIRECT problem (pressure field visualized with ParaView from 'flow.vtu' looks reasonably similar to the image shown in the tutorial).; Afterward, I changed the parameter MATH_PROBLEM from DIRECT to CONTINUOUS_ADJOINT in the configuration file and:. $ ln -s restart_flow.dat solution_flow.dat; $ SU2_CFD inv_adj_NACA0012.cfg. I obtained a correct adjoint solution (density adjoint field visualized with ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:559,config,configuration,559,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,2,['config'],['configuration']
Modifiability,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:1144,config,config,1144,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,2,['config'],['config']
Modifiability,"Hi, I want to build SU2 from source because I need python wrapper.; After I configured, I tried to type ""make"" to install it.; But I found an error:. ```; ......; CC libparmetis/libparmetis_a-serial.o; CC libparmetis/libparmetis_a-stat.o; CC libparmetis/libparmetis_a-timer.o; CC libparmetis/libparmetis_a-util.o; CC libparmetis/libparmetis_a-wave.o; CC libparmetis/libparmetis_a-weird.o; CC libparmetis/libparmetis_a-wspace.o; CC libparmetis/libparmetis_a-xyzpart.o; AR libparmetis.a; ar: `u' modifier ignored since `D' is the default (see `U'); make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/parmetis'; Making all in cgns; make[2]: Entering directory '/home/xxx/SU2-7.3.0/externals/cgns'; CC libcgns_a-cgns_error.o; CC libcgns_a-cgns_internals.o; CC libcgns_a-cgns_io.o; CC libcgns_a-cgnslib.o; In file included from cgns_error.c:24:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:430: libcgns_a-cgns_error.o] Error 1; make[2]: *** Waiting for unfinished jobs....; In file included from cgns_io.c:43:; cgns_io.h:32:10: fatal error: cgnstypes.h: No such file or directory; 32 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:458: libcgns_a-cgns_io.o] Error 1; cgns_internals.c:30:10: fatal error: cgnsconfig.h: No such file or directory; 30 | #include ""cgnsconfig.h""; | ^~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:444: libcgns_a-cgns_internals.o] Error 1; In file included from cgnslib.c:51:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:472: libcgns_a-cgnslib.o] Error 1; make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/cgns'; make[1]: *** [Makefile:398: all-recursive] Error 1; make[1]: Leaving directory '/home/xxx/SU2-7.3.0/externals'; make: *** [Makefile:440: all-recursive] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:76,config,configured,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['config'],['configured']
Modifiability,"Hi, I want to build SU2 from source using meson and ninja. After I enabled mpi and tried to install by typing ""./ninja -C build install"" an error occurs:. ```; ......; [14/1296] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o; FAILED: externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o; cc -Iexternals/cgns/hdf5/libsu2hdf5.a.p -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -fdiagnostics-color=always -g -fPIC -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-sign-compare -Wno-stringop-overflow -Wno-discarded-qualifiers -Wno-error=maybe-uninitialized -Wno-error=unused-function -Wno-error=unused-label -Wno-pedantic -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -D_POSIX_C_SOURCE=200809L -D_GNU_SOURCE -MD -MQ externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o -MF externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o.d -o externals/cgns/hdf5/libsu2hdf5.a.p/H5Aint.c.o -c ../externals/cgns/hdf5/H5Aint.c; In file included from ../externals/cgns/hdf5/H5private.h:27,; from ../externals/cgns/hdf5/H5Aint.c:35:; ../externals/cgns/hdf5/H5public.h:63:10: fatal error: mpi.h: No such file or directory; 63 | #include <mpi.h>; | ^~~~~~~; compilation terminated.; ninja: build stopped: subcommand failed.; ```; All the error output is due to this problem of missing mpi.h, but I can confirm that mpi.h is in that directory.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1691:475,variab,variable,475,https://su2code.github.io,https://github.com/su2code/SU2/issues/1691,2,['variab'],['variable']
Modifiability,"Hi, SU2 developers,. When I worked on a 2D vicsid laminar problem with a gird movement, SU2 goes wrong at the time when it computes the BC_HeatFlux_Wall. The condition of the moving wall is setted to be MARKER_HEATFLUX=(wall, 0.0). So I checked the code and found problems in the function CNSSolver::BC_HeatFlux_Wall. The problematic codes are here. ```; void CNSSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics, CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {. ...; /*--- Implicit Jacobian contributions due to moving walls ---*/. if (implicit) {. /*--- Jacobian contribution related to the pressure term ---*/. GridVel2 = 0.0;; for (iDim = 0; iDim < nDim; iDim++); GridVel2 += GridVel[iDim]*GridVel[iDim];; for (iVar = 0; iVar < nVar; iVar++); for (jVar = 0; jVar < nVar; jVar++); Jacobian_i[iVar][jVar] = 0.0;; Jacobian_i[nDim+1][0] = 0.5*(Gamma-1.0)*GridVel2*ProjGridVel;; for (jDim = 0; jDim < nDim; jDim++); Jacobian_i[nDim+1][jDim+1] = -(Gamma-1.0)*GridVel[jDim]*ProjGridVel;; Jacobian_i[nDim+1][nDim+1] = (Gamma-1.0)*ProjGridVel;. /*--- Add the block to the Global Jacobian structure ---*/; ... ```. In 2D incompressible cases, the number of conservative variables is 3, so nVar = 3 and the size of Jacobian should be 3x3. The codes `Jacobian_i[nDim+1][0]` has memory acess error.; Obviously, the codes are for compressible problems. Can you fix the bug ? What's the right method to compute BC_HeatFlux for incompressoble cases with grid movment ?. Another small bug. In function COutput::SetSurfaceCSV_Flow. ```; Pressure = FlowSolver->node[iPoint]->GetPressure();; PressCoeff = FlowSolver->GetCPressure(iMarker, iVertex);; ```. Pressure is wrong for incompressible problems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/247:498,config,config,498,https://su2code.github.io,https://github.com/su2code/SU2/issues/247,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:91,config,configuration,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,1,['config'],['configuration']
Modifiability,"Hi,. Could someone help me with this post . https://www.cfd-online.com/Forums/su2/221007-su2-violates-lower-bound-ffd-design-variables.html#post745905",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/795:125,variab,variables,125,https://su2code.github.io,https://github.com/su2code/SU2/issues/795,1,['variab'],['variables']
Modifiability,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:534,config,configure,534,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,2,['config'],['configure']
Modifiability,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/953:143,config,configuration,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/953,2,['config'],['configuration']
Modifiability,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/954:102,config,configuration,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/954,1,['config'],['configuration']
Modifiability,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233:84,variab,variables,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233,2,['variab'],['variables']
Modifiability,"Hi,. I downloaded su2-***.tgz file for ubuntu server. I uncompressed it. ; When I am using following command:-; ./configure --prefix=/root/downloads/su2-6.1.0; I get following error:-; -su: ./configure: No such file or directory. Need suggestion here. . Thanks,; Reena",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/549:114,config,configure,114,https://su2code.github.io,https://github.com/su2code/SU2/issues/549,2,['config'],['configure']
Modifiability,"Hi,. I'm trying to compare the gradient from Discrete Adjoints to Finite differences using SU2v6.2 for a RAE2822 airfoil (2D) with a sharp trailing edge. I'm using the Spalart Allmaras turbulence model. The flow is transonic. I've used FFD to parameterize the airfoil. However, I cannot get my discrete adjoint values to match my finite difference values. The directions of the gradients match, however, the magnitudes differ significantly. . I've posted my full question here. https://www.cfd-online.com/Forums/su2/198057-gradients-calculated-through-discrete-adjoint-near-zero.html",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/804:243,parameteriz,parameterize,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/804,1,['parameteriz'],['parameterize']
Modifiability,"Hi,. I've been trying to build SU2 with its Python bindings, but have sadly been unable to link the targets `SU2_PY/pySU2/_pysu2.so` and `SU2_PY/pySU2/_pysu2ad.so`. I have attempted the compilation & linking from both the master branch, and the latest release with the same result. The steps I followed here were:. 1. Meson configuration:; ```bash; ./meson.py build -Denable-autodiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=/local/temp/DifferentiableProgramming/SU2/python-build --optimization=3 --buildtype=release; ```. 2. Building with ninja:; ```bash; cd build && ninja; ```. 3. Getting an error at the linking stage (the full command is at the bottom of the issue):4. ; ```bash; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(zutil.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; ```; But looking at the linking command `-fPIC` is already used, so I am a little lost for advice here. . Does anyone have any intuition or suggestions what this could be due to?. **Desktop:**; - OS: Ubuntu 22.04; - C++ compiler and version: g++ 11.2.0; - MPI implementation and version: OpenMPI v4.1.4; - SU2 Version: master & v7.3.1. ### Full linking command. ```bash; Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so ; g++ -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1707:324,config,configuration,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/1707,1,['config'],['configuration']
Modifiability,"Hi,. When restarted at e.g. Time-Iter 2 the first value would be divided by 3 (number of timesteps counting from zero).; So if your first value in that restarted sim is a 3, the running average would be 1. This is fixed with this commit by setting WINDOW_START_ITER = RESTART_ITER in the Config Postprocessing,; if the option is not set. If the option is set, but incorrectly, an error is raised. ## Related Work; Original implementation #836 ; Change in previous behavior introduced in #1548 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601:288,Config,Config,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601,1,['Config'],['Config']
Modifiability,"Hi,. While working with Marker_Engine_Inflow, I have noticed that the boundary condition is not working as intended with the option ENGINE_INFLOW_TYPE= FAN_FACE_MACH. The solutions rapidly diverge when I use FAN_FACE_MACH, but they converge if I use FAN_FACE_PRESSURE and set the pressure to a reasonable value. Looking at the source code, I believe this cause by not reevaluating the marker's Mach Number. . Looking at the source code, I would suggest adding the following line of code to CEulerSolver.cpp after line 2932 which is where it seems to update other marker parameters. config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274:582,config,config,582,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274,1,['config'],['config']
Modifiability,"Hi,. first of all thanks for your continuing effort in developing a very powerful CFD software. I noticed a mistake in the implementation of a part of the screen output in ""confing_structure.cpp"" in SU2-7.0.0. In the ""Physical Case Definition"" there are no cases for""Kind_Solver"" as ""INC_EULER"", ""INC_NAVIER_STOKES"" or ""INC_RANS"" and therefore there is no screen output stating which equations are going to be used in the computation. This leaves uncertainty on whether or not the set of equations chosen in the config file is actually implemented. For example in my case I would like to use SA_DDES with INC_RANS but I don't know if this combination is not implemented or just not visible in the screen output due to the mistake I mentioned before (looking at the source code it seems like it is implemented but I may missing something and fixing the screen output would help non expert users). Thanks for your time.; With Best Regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/846:512,config,config,512,https://su2code.github.io,https://github.com/su2code/SU2/issues/846,1,['config'],['config']
Modifiability,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888:194,config,config,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/888,1,['config'],['config']
Modifiability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:408,Variab,Variable,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,2,"['Config', 'Variab']","['Config', 'Variable']"
Modifiability,"Hi,; I've been recently been unsuccessful in running an inviscid supersonic case in SU2 using infinitely thin surfaces (baffles) and multiblock meshes created in Pointwise in 3D. I was wondering if these features are supported in SU2, as my results with a multiblock mesh so far don't seem to be correct? I've attached a screenshot of my results using a wing with a diamond airfoil, as well as my SU2 config file.; [GitHubQuestion.zip](https://github.com/su2code/SU2/files/6033830/GitHubQuestion.zip). Thanks,; Chinmay; ![image](https://user-images.githubusercontent.com/74565109/108957238-be6c1d00-7636-11eb-956a-c12ea515fc65.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1206:401,config,config,401,https://su2code.github.io,https://github.com/su2code/SU2/issues/1206,1,['config'],['config']
Modifiability,"Hi. I have some questions about SU2 implementation of classical Runge-Kutta method . According to the wikipedia (https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods), the formula is as follows; <img width=""430"" alt=""wiki_Runge-kutta"" src=""https://user-images.githubusercontent.com/31647163/88119795-07b54380-cbf4-11ea-8e21-1baeafbc5c6f.png"">. and the implementation in SU2 is:. ``` ; /*--- Hard-coded classical RK4 coefficients. Will be added to config. ---*/; const su2double RK_FuncCoeff[] = {1.0/6.0, 1.0/3.0, 1.0/3.0, 1.0/6.0};; const su2double RK_TimeCoeff[] = {0.5, 0.5, 1.0, 1.0};; ```. Here, I have no question about RK_FuncCoeff `{1.0/6.0, 1.0/3.0, 1.0/3.0, 1.0/6.0}`, however, the RK_TimeCoeff is ` {0.5, 0.5, 1.0, 1.0}`, Shouldn't It be `{1.0, 0.5, 0.5, 1.0} `from the formula?? Did I think something wrong?. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1053:452,config,config,452,https://su2code.github.io,https://github.com/su2code/SU2/issues/1053,1,['config'],['config']
Modifiability,"Hi. I think there is a bug in the Farfield BC implementation in SU2 v5. ; It is in the file solver_direct_mean.cpp at line number 10446 in the function CEulerSolver::BC_Far_Field. Basically, the boundary state is computed and then the residual is obtained as ; conv_numerics->ComputeResidual(Residual, Jacobian_i, Jacobian_j, config). Could this be a bug?. Shouldn't it be ; conv_numerics->GetInviscidProjFlux(&V_infty[nDim+2], Velocity, &Pressure, &V_infty[nDim+3], Normal, Residual). . Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405:326,config,config,326,https://su2code.github.io,https://github.com/su2code/SU2/issues/405,1,['config'],['config']
Modifiability,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/446:910,config,configure,910,https://su2code.github.io,https://github.com/su2code/SU2/issues/446,2,['config'],['configure']
Modifiability,"Hi. While attempting to run compressible N-S simulation using Peng-Robinsion EoS, I ran into a problem with non-physical solutions. Running SU2_CFD gives the following error multiple times and exits:. ------------------------------ Begin Solver -----------------------------; not physical solution found, h and s input -1.24974 -3.8387; ...; !!! Error: SU2 has diverged. Now exiting... !!! . The simulation which resulted in the error was run at around 313 K and 400 bar, which is in the critical region of the fluid I used (CO2). Repeating the simulation at lower pressures (less than about 100 bar) seems to work fine. In the critical region the EoS has only one real solution, so perhaps the problem is related to finding a root for the EoS in fluid_model_ppr.cpp. Has anyone else encountered the problem?. Relevant configuration options were:. FREESTREAM_PRESSURE= 399E+5; FREESTREAM_TEMPERATURE= 313; REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE. MARKER_RIEMANN= (inlet, TOTAL_CONDITIONS_PT, 400E+5, 313.15, 1.0, 0.0, 0.0); MARKER_NRBC= ( outlet, STATIC_PRESSURE, 395E+5, 0.0, 0.0, 0.0, 0.0). % ---- IDEAL GAS, POLYTROPIC, VAN DER WAALS AND PENG ROBINSON CONSTANTS -------%; FLUID_MODEL= PR_GAS; GAMMA_VALUE= 1.28; GAS_CONSTANT= 188.9221; CRITICAL_TEMPERATURE= 304.1282; CRITICAL_PRESSURE= 7377300; CRITICAL_DENSITY= 480.9911; ACENTRIC_FACTOR= 0.2239",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398:819,config,configuration,819,https://su2code.github.io,https://github.com/su2code/SU2/issues/398,1,['config'],['configuration']
Modifiability,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:288,config,configure,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,2,['config'],['configure']
Modifiability,"I am adding regressions for all the convective numerical schemes in NEMO using the implicit solver. All cases run on an inviscid wedge at the moment, but I am happy to make a new folder in the regression. . ## Related Work; This will allow us to better track our changes and is the start of a more comprehensive set of regression tests for the Nemo solver coming in the future (boundary conditions, etc.) ; This directly relates to #1773 to eventually refactor the AUSM schemes. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885:452,refactor,refactor,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885,1,['refactor'],['refactor']
Modifiability,"I am an SU2 user simulating config_incomp_turb_sa.cfg. I would like to define a UDF to simulate an airfoil vibration dynamics.; the original configuration feature is:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= (0.25 0.0 0.0); PITCHING_OMEGA= (0.0 0.0 14.91675); PITCHING_AMPL= (0.0 0.0 8.0); ```; The pitching amplitude is a fixed number. however, in my simulation task, i would like to build a UDF to show an increasing pitching amplitude, which depends on the value of the current timestep. I would like to know if there is a related testcase that shows how a UDF is written. Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1673:141,config,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1673,1,['config'],['configuration']
Modifiability,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479:502,layers,layers,502,https://su2code.github.io,https://github.com/su2code/SU2/issues/479,1,['layers'],['layers']
Modifiability,"I am running an unsteady simulation where I have a marker with an imposed velocity and an object in the domain that moves according to some law. Think of a translating (or plunging) sphere in a cavity flow. The related options in my config file are:. SURFACE_MOVEMENT= (MOVING_WALL, DEFORMING); MARKER_MOVING= (TOP_WALL, SPHERE); SURFACE_TRANSLATION_RATE= (100 0 0, 0 1 0). With those options the MOVING_WALL conditions at the top wall is completely disregarded. Instead, it gets imposed correctly if I omit the deforming marker.; The reason can be traced back to the way the velocity is imposed in the heatflux (or isothermal) boundary condition, where the grid velocity is used to strongly impose that BC. Nothing wrong with that if either only one between MOVING_WALL or DEFORMING markers is used. In the first case the grid velocity is set in CGeometry::SetWallVelocity(), in the second case is computed via finite differencing in CGeometry::SetGridVelocity(). If both markers are present, the call to CGeometry::SetGridVelocity() overwrites the values set by CGeometry::SetWallVelocity() at the walls, and if a wall is not actually moving (like the top wall in a cavity problem) the value is set to zero. Now, fixing this should be relatively easy (I hardcoded some tests that look like they are working), but I want to ask what is the preferred way to fix this problem. We either call CGeometry::SetWallVelocity() after CGeometry::SetGridVelocity() at each time step, or explicitly treat the MOVING_WALL markers differently inside the no-slip boundary conditions. My preliminary implementation was along the lines of the latter option, but I wanted to ask before proceeding further. I will open a WIP pull request as soon as I finish up some tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2166:233,config,config,233,https://su2code.github.io,https://github.com/su2code/SU2/issues/2166,1,['config'],['config']
Modifiability,"I am trying to get polar using my own script. I don't want to produce a config file for each case as in the polar script. I have only 2 markers as in the NACA0012 case with a compressible solver. Normally even if there are some restrictions about AoA I expect that the flow angle should change but also did not observe any change in flow angle. The case is steady. My script is very simple:. ```python; #!/usr/bin/env python3; import sys. import numpy as np; import pysu2; import SU2; from mpi4py import MPI. def setup_mpi():; if ""mpi4py.MPI"" in sys.modules:; have_mpi = True; comm = MPI.COMM_WORLD; status = MPI.Status(); myid = comm.Get_rank(); else:; have_mpi = False; comm = None; status = None; myid = 0; return have_mpi, comm, status, myid. class SU2Interface:; def __init__(self, config_filename):; self.have_mpi, self.comm, self.status, self.myid = setup_mpi(); self.FluidSolver = pysu2.CSinglezoneDriver(config_filename, 1, self.comm); ; def setAoA(self,angle,marker):; if marker in self.FluidSolver.GetMarkerIndices().keys(): ; markerID = self.FluidSolver.GetMarkerIndices()[marker]; self.FluidSolver.SetInletAngle(0,angle); self.FluidSolver.BoundaryConditionsUpdate(); ; def runSolver(self):; self.comm.barrier(); # run solver; self.FluidSolver.Preprocess(0); self.FluidSolver.Run(); self.FluidSolver.Postprocess(); if self.myid == 0:; print(f"" AOA: {self.FluidSolver.GetOutputValue('AOA')}""); print(f"" LIFT : {self.FluidSolver.GetOutputValue('LIFT')}""); print(f"" DRAG : {self.FluidSolver.GetOutputValue('DRAG')}""); self.comm.barrier(); ; def finalize(self):; self.FluidSolver.Finalize(); . for angle in np.linspace(0,10,5):; cfd_interface = SU2Interface('NACA0012.cfg'); cfd_interface.setAoA(angle,'farfield'); cfd_interface.run_solver(); cfd_interface.finalize(); ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2027:72,config,config,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/2027,1,['config'],['config']
Modifiability,"I am trying to get the Dynamic FSI tutorial to work and have rebuilt SU2 for the python wrapper, as well as install all dependencies, including mpi4py, petsc and petsc4py. I am getting the following error and the **_fsi_computation.py_** file is showing that the **_allMarkersID_** variable has no attribute for **_keys_**. I am running the case with Ubuntu 20.04 with openmpi and python 3.8. Can someone please let me know what is causing this issue/ bug?. Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 194, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/__main__.py"", line 7, in <module>; main(); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 198, in main; run_command_line(args); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 47, in run_command_line; run_path(sys.argv[0], run_name='__main__'); File ""/usr/lib/python3.8/runpy.py"", line 265, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/usr/lib/python3.8/runpy.py"", line 97, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 259, in <module>; main(); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 165, in main; FSIInterface.connect(FSI_config, FluidSolver, SolidSolver); File ""/path/to/folder/SU2/SU2_PY/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129:282,variab,variable,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129,1,['variab'],['variable']
Modifiability,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:241,Config,Configured,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['Config'],['Configured']
Modifiability,"I am trying to run an axi-symmetric case with a time stepping scheme (basically SOD's problem), which fails in CSourceAxisymmetric_Flow::ComputeResidual. The reason is that the boolean implicit is determined as follows. bool implicit = (config->GetKind_TimeIntScheme_Turb() == EULER_IMPLICIT). However, this must be config->GetKind_TimeIntScheme_Flow, right?. Furthermore, the small y-coordinate case will also fail, because there is no test whether an implicit computation takes place. I can correct this, if somebody can confirm this is indeed a bug. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/454:237,config,config,237,https://su2code.github.io,https://github.com/su2code/SU2/issues/454,2,['config'],['config']
Modifiability,"I am using SU2 v7.0.6 to do turbomachinery simulations. I am using a radial compressor. There are points in my flow field that show unexpected values of temperature and density, which also makes mach values at those points to be abnormal. There is a sudden change at the trailing edge in my geometry. These points are located right at the trailing edge of my blade and only at these points I see abnormal density and temperature values. I made sure that the velocity of the blade was correctly set. I am sharing a sectional close-up of the trailing edge of my blade with the mesh at that region being visible. . ![teTipMach](https://user-images.githubusercontent.com/66836581/127540972-80cf9914-d6e9-4c9a-af48-aa48478d2c09.png). I am using SST turbulence model. I have simulated a specific case without turbulence to see if it was the issue and the same behavior was present so, the turbulence model does not seem to induce this issue. I have shared my configuration file with numerical information redacted, only to show which markers and settings I am using. Currently I can't share my mesh file. [Configuration.txt](https://github.com/su2code/SU2/files/6902770/Configuration.txt). This issue is present when I am only using basic Roe scheme with MUSCL option turned off. If I turn on MUSCL option, the density and temperature values at these points become even more unnatural and diverge my simulation. - OS: [ Linux (Ubuntu 18.04.5)]; - C++ compiler and version: [g++ (GCC) 7.5.0]; - MPI implementation and version: [OpenMPI 2.1.1]; - SU2 Version: [v7.0.6]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1337:953,config,configuration,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/1337,3,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167:374,variab,variables,374,https://su2code.github.io,https://github.com/su2code/SU2/issues/167,1,['variab'],['variables']
Modifiability,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:37,adapt,adapt,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['adapt'],['adapt']
Modifiability,"I copied the config files necessary for running the tutorial cases into their own folder. This should make it easier to modify or add tutorials, without having to worry about the regression tests. Furthermore, it is easier for the user to differentiate between tutorials and regression tests (which do not necessarily have to converge or to give physical solutions). I suggest to create a new repository for the mesh files of the tutorial cases next.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485:13,config,config,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/485,1,['config'],['config']
Modifiability,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:1177,variab,variables,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,3,"['coupling', 'variab']","['coupling', 'variables']"
Modifiability,"I found that BC_Sym_Plane do nothing for turb solvers. For scalar vars, the symmetry BC is different from the euler BC that only works on the normal gradient of the velocity. Maybe BC_Sym_Plane should take the form of CTransLMSolver::BC_HeatFlux_Wall, because the boundary conditions of the Langtry-Menter model is a symmetry condition. '''; inline void BC_Sym_Plane(CGeometry* geometry, CSolver** solver_container, CNumerics* conv_numerics,; CNumerics* visc_numerics, CConfig* config, unsigned short val_marker) override {; /*--- Convective and viscous fluxes across symmetry plane are equal to zero. ---*/; }; '''. '''; void CTransLMSolver::BC_HeatFlux_Wall(CGeometry *geometry, CSolver **solver_container, CNumerics *conv_numerics,; CNumerics *visc_numerics, CConfig *config, unsigned short val_marker) {; ...; }; '''",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2168:478,config,config,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/2168,2,['config'],['config']
Modifiability,"I get the following error from su2Deform when using python 3.7 and SU2 6.1.0:. ```; su2Deform( ""testing.cfg"", args.numberProc) # Run SU2 mesh deformation; File ""$SU2_RUN/mesh_deformation.py"", line 83, in mesh_deformation; info = SU2.run.DEF(config); File ""$SU2_RUN/SU2/run/interface.py"", line 158, in DEF; konfig.dump(tempname) ; File ""$SU2_RUN/SU2/io/config.py"", line 125, in dump; dump_config(filename,self); File ""$SU2_RUN/SU2/io/config.py"", line 961, in dump_config; write_config(filename,config) ; File ""$SU2_RUN/SU2/io/config.py"", line 775, in write_config; n_lists = len(new_value); TypeError: object of type 'map' has no len(); ```. Any help fixing this would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620:241,config,config,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/620,5,['config'],['config']
Modifiability,"I had a look at CSurfaceMovement::SetFFDTwist in grid_movement_structure.cpp. It starts with geometry->SegmentIntersectsPlane where the segment is the axes/line of rotation and the plane is the jPlane of the control points we wish to move.; However, unless the axes is EXACTLY parallel to the plane then there is always an intersection point (though maybe far in the distance), so why would this check be done. Unless there is also a check on how far away the intersection point lies, but this is not done. Then there is this comment with theta calculation:; /*--- The angle of rotation is computed based on a characteristic length of the wing,; otherwise it is difficult to compare with other length based design variables. ---*/; su2double RefLength = config->GetRefLength();; su2double theta = atan(config->GetDV_Value(iDV)*Scale/RefLength);; Where theta is calculated with the atan of DV_Value, implicating that the DV_Value is a distance,.. though in my knowledge setting the twist of an airfoil in the wing (or in our case the twist of a jPlane in the FFD box) is always done with a rotation in degrees/radians.; What is the programmer trying to do here?. Then there is the calculation of the rotation itself, that is done with the intersection point of the rotation axes with the plane, and the normal vector of the control point in the plane. Thus indicating that this normal vector is used as the orientation of the rotation axes. Though the plane normal and the rotation axes direction ought not to be of the same orientation. Looking back in the code from SU2-4.3.0 SetFFDTwistAngle would do a better job I think, where theta = config->GetDV_Value(iDV)*PI_NUMBER/180.0 indeed using an angle of rotation as value. And also indeed using the set rotation axes to rotate the jPlane about.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/693:714,variab,variables,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/693,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151:1145,config,configuring,1145,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151,1,['config'],['configuring']
Modifiability,"I have added 1D interpolation capability in SU2. It will be helpful in running cases with inlet profiles with radial variation. Additionally, I have added two classes CAkimaInterpolation and CLinearInterpolation which can be used for other purposes and can be initialized very simply by using pointers to C1DInterpolation class. The following is the Inlet file format that you can give now:. radius, TT, PT, unit_Vr, unit_Vtheta, turb variables... OR; radius, TT, PT, alpha, phi, turb variables.. *alpha is the angle taken normal to the direction of flow (swirl angle), phi is the flow angle taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). The",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:435,variab,variables,435,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,2,['variab'],['variables']
Modifiability,"I have an issue with the ""Constrained shape design of a transonic turbulent airfoil at a cte. CL"" tutorial that I have not been able to find a fix for elsewhere. I have been able to successfully run of the design tutorials such as the unconstrained airfoil and unsteady NACA0012 tutorials, but when I try to do the same for this one it throws the following outputs:. Error:; ![6_19_24_Error](https://github.com/su2code/SU2/assets/172069980/7276e89d-fe77-4141-8892-4e3db03164f4). Output:; ![6_19_24_Output](https://github.com/su2code/SU2/assets/172069980/51b109ff-a498-42f4-9c4f-931b7998b4f8). I am running the code using the given command: ; python shape_optimization.py -g DISCRETE_ADJOINT -o SLSQP -f turb_SA_RAE2822.cfg. This is the directory that all of the necessary files are in that were cloned from the SU2 Tutorials GitHub page:; ![6_19_24_Directory](https://github.com/su2code/SU2/assets/172069980/5b77f484-734c-46be-b78b-6b416a15fd6f). I am using the given config files and following the tutorial, and cannot find anything wrong but it will not run properly. I was wondering if there is anything I am doing wrong and if anyone could help me solve this issue. I am running this on a computer cluster, and have ran other tutorials in the same exact manner but this time it seems to not work. Please let me know if I can provide any more helpful information.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2307:968,config,config,968,https://su2code.github.io,https://github.com/su2code/SU2/issues/2307,1,['config'],['config']
Modifiability,"I have checked and validated the number of elements for DEFINITION_DV, DV_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:232,config,config,232,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,3,['config'],['config']
Modifiability,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/30:21,config,configuration,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/30,1,['config'],['configuration']
Modifiability,I have downloaded SU2v6.0 on website. How can I use the average option in config files ? SU2v6.0 only have one config file about DDES named ddes_flatplate.cfg without the average option,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/537:74,config,config,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/537,2,['config'],['config']
Modifiability,"I have enabled the writing of the individual surfaces using the ""PARAVIEW_MULTIBLOCK"" directive.; The folder was created on the wrong place because the path contained periods.; for a simulation run in /foo/bar/polar_M0.6/aoa0/config.cfg; the folder was created in /foo/bar/polar_M0/zone_0; I assume this is due to the foder name being generated by cutting the path at the first period to remove the .cfg from the name.; While I understand that chaging the name will fix the issue, a period is a legal character for a folder name. - OS: Centos 7.5; - C++ compiler and version: not sure; - MPI implementation and version: not sure; - SU2 Version: 7.5.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2074:226,config,config,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/2074,1,['config'],['config']
Modifiability,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321:200,config,config,200,https://su2code.github.io,https://github.com/su2code/SU2/issues/321,4,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"I know this is silly... but... Am I the only one who finds the lower case ""o"" in the AoA keyword (config file) a little bit disturbing?... I think we should use all capital letter for all the keyword and ; AoA should be ANGLE_OF_ATTACK or just AOA... unfortunately, this change will affect a couple of config files :-)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/323:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/323,2,['config'],['config']
Modifiability,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:93,variab,variables,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['variab'],['variables']
Modifiability,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:32,Adapt,Adaptation,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,3,"['Adapt', 'adapt', 'config']","['Adaptation', 'adaptation', 'config']"
Modifiability,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422:264,refactor,refactor,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/422,2,"['extend', 'refactor']","['extended', 'refactor']"
Modifiability,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:108,adapt,adaptation,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['adapt'],['adaptation']
Modifiability,"I run SU2_CFD.exe of Binary Executables, it shows:. Error in ""void CConfig::SetConfig_Parsing(char*)"":; -------------------------------------------------------------------------; The configuration file (.cfg) is missing!!. Another exe files fail to run ,too. This is true for both serial and parallel versions. What is the reason for this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2288:183,config,configuration,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/2288,1,['config'],['configuration']
Modifiability,"I tried to compile SU2 with:. ```; git clone https://github.com/su2code/SU2; cd SU2; ./configure; make -j$(nproc); ```. `Configure` ran without any issues, but `make` failed because it was looking for `automake-1.14` and `aclocal-1.14`. On my system I have version `1.11` installed. So I created two symlinks:. ```; sudo ln -s /usr/bin/automake /usr/local/bin/automake-1.14; sudo ln -s /usr/bin/aclocal /usr/local/bin/aclocal-1.14; ```. Ran make again, et voila, everything worked out fine. No issues. I would like to suggest to change the source of SU2 to **not** specifically require version 1.14 of `automake` and `aclocal`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/27:87,config,configure,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/27,2,"['Config', 'config']","['Configure', 'configure']"
Modifiability,I tried to fix the problem with FFD and periodic boundaries. Would be good if someone could have a look at this solution. PS: WRT_HALO still has to be enabled in the config file in order to work.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211:166,config,config,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/211,1,['config'],['config']
Modifiability,"I used SU2-3.0.0 'eagle' ; My metis version is 5.1.0. But when I compile Metis 64bit (set IDXTYPEWIDTH to 64) .There are some compile errors occured below:. ......; ......; ../src/geometry_structure.cpp(5371): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_SetDefaultOptions(options);; ^; ../src/geometry_structure.cpp(5373): error: argument of type ""int *"" is incompatible with parameter of type ""idx_t={int64_t={l ong}} *""; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);; ......; ...... Same to metis, when I compile cgns with hdf5. There are also some errors. The library link may be had some mistake. But the most important error is that -- when I change --with-mpi=mpicxx to --with-mpi=mpiicpc . Build Configuration Summary:. ```; Source code location: /parastor/users/isc01/zy/temp/SU2-master-back; Install location: ; Version: 3.0.0 ""eagle""; Compiler: mpiicpc; Preprocessor flags: -O3; Compiler flags: -O3; Linker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/lib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:821,Config,Configuration,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,1,['Config'],['Configuration']
Modifiability,"I used SU2_DEF to evaluate CRM wing grid deformation, but the quality of my structured mesh is pretty bad. My question is whether the FFD box settings could affect the grid deformation,for example the distance of FFD box from the wall. Another question is whether the strctured mesh doesn't fit SU2_DEF? ; Could anyone help with this ? thank you!; Here are my FFD boxes, configuration file and slice of my wing (red color is deformed grid, the black one is original grid); [screen output.txt](https://github.com/su2code/SU2/files/835550/screen.output.txt); [configuration.txt](https://github.com/su2code/SU2/files/835551/configuration.txt); ![comparison](https://cloud.githubusercontent.com/assets/23302629/23821092/b4b13030-0663-11e7-91b5-e63849c323ab.png); ![ffdbox1](https://cloud.githubusercontent.com/assets/23302629/23821093/b5400cf6-0663-11e7-9975-e59a144298e6.png); ![ffdbox2](https://cloud.githubusercontent.com/assets/23302629/23821094/b541fd22-0663-11e7-8423-46502ca059d0.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/384:371,config,configuration,371,https://su2code.github.io,https://github.com/su2code/SU2/issues/384,3,['config'],['configuration']
Modifiability,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:484,config,config,484,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,2,['config'],"['config', 'configs']"
Modifiability,"I wonder whether in the following code the arguments of `SetCoord` should be swapped. The code illustrates how the `visc_numerics` is initialized in `CEulerSolver::BC_Far_Field`:. iPoint = geometry->vertex[val_marker][iVertex]->GetNode();; Point_Normal = geometry->vertex[val_marker][iVertex]->GetNormal_Neighbor();. V_domain = nodes->GetPrimitive(iPoint);; V_infty = ... visc_numerics->SetCoord(geometry->nodes->GetCoord(iPoint),; geometry->nodes->GetCoord(Point_Normal));; visc_numerics->SetPrimitive(V_domain, V_infty);. So `iPoint` lies on the boundary. *`Point_Normal` is its normal neighbour in the interior of the domain, and not some ""dummy cell"" outside. But the primitive variables at `Point_Normal` are set to the outside values.*. As far as I can tell, the `CNumerics::Coord_j` member is only used in the child classes of `CAvgGrad_Base`, in order to compute. Edge_Vector[MAXNDIM] = {0.0}, /*!< \brief Vector from point i to point j. */. by. Edge_Vector[iDim] = Coord_j[iDim]-Coord_i[iDim];. which is then used to call `CorrectGradient`. It has the wrong sign if the above code is incorrect. (Apart from that, `Coord_j` is used to compute the distance in the NEMO viscous residuals.). Note that similar calls to `SetCoord` can be found at many places, e.g. in `CEulerSolver::BC_Riemann`, `CEulerSolver::BC_Giles`, their siblings in `CIncEulerSolver`. and `CTurbSASolver::BC_Inlet_Turbo`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1185:682,variab,variables,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185,1,['variab'],['variables']
Modifiability,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:145,config,configuration,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,2,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:99,adapt,adaptation,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,2,['adapt'],"['adaptation', 'adapted']"
Modifiability,"I've noticed while using Valgrind that some of the recent pull requests have introduced a few memory issues. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. I also found a memory issue in a weird corner case with `RefOriginMoment_X`, `_Y`, and `_Z`. If the reference origin is defined exactly once, but no surfaces are marked for monitoring, then `RefOriginMoment_X` (and `_Y` and `_Z`) is set as an empty array. I think that's a bug. That bug creates problems in `CConfig::SetOutput`, (line 4284) where SU2 tries to print out the reference origin.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/507:304,variab,variables,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/507,1,['variab'],['variables']
Modifiability,"I've tried to follow some convention for naming the functions. We were using ""SetMarkerCustomXX"" for CHT-type boundary conditions, so I extended that to other applications.; ""Custom"" means that the values set this way act as boundary conditions. Whereas the other accessors allow manipulating the state (e.g. for initialization) but do not change the final solution.; I also tried to disambiguate the terms for Flow loads of the flow solver vs FEA solver and mesh deformation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:136,extend,extended,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['extend'],['extended']
Modifiability,IR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source dir.; You should not do that but use relative paths instead. >To get include path to any directory relative to the current dir do. >incdir = include_directories(dirname). >After this incdir will contain both the current source dir as well as the; corresponding build dir. It can then be used in any subdirectory and; Meson will take care of all the busywork to make paths work. >Dirname can even be '.' to mark the current directory. Though you should; remember that the current source and build directories are always; put in the include directories by default so you only need to do; include_directories('.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:1740,config,config,1740,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['config'],['config']
Modifiability,"Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I../externals/mel -ICommon/src -I../Common/src -I/usr/include -I/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi -I/usr/lib/x86_64-linux-gnu/openmpi/include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o -MF SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o.d -o SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; In file included from ../SU2_CFD/src/output/../../include/output/CAdjElasticityOutput.hpp:30,; from ../SU2_CFD/src/output/CAdjElasticityOutput.cpp:29:; ../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory; 50 | #include ""mel.hpp""; ```. **To Reproduce**. Firstly, I configure su2 by `python3 ./meson.py build`, and it suceed. . ![image](https://user-images.githubusercontent.com/29271051/159434916-1545a216-7f8d-4742-9b8e-1bdc56924adf.png); ![image](https://user-images.githubusercontent.com/29271051/159434952-60d64b38-1322-4ff5-81ce-9e1e2ef33c03.png). Then, I use `./ninja -C build install` to compile it, and the bug is reported. . **Desktop (please complete the following information):**; - OS: the subsystem (Ubuntu 20) on win10; - C++ compiler and version: gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04); - MPI implementation and version: I do not manually install it. ; - SU2 Version: 7.3.0 ""Blackbird"". Download from git. Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1569:3279,config,configure,3279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1569,1,['config'],['configure']
Modifiability,"If 'downstream_function.py' is put in the run directory, whatever function is defined there will be used by finite_differences.py and continuous_adjoint.py with newly implemented boundary conditions that allow passing in gradients from an external function (or defined manually as constants in the config file). ; These are accessed with the ""OUTLET_CHAIN_RULE"" objective and can also be used with optimization. Other changes:; - addition of downstream_function.py in SU2_PY folder: if used this should be copied to the run directory and modified to contain whatever function of interest you want. Limited to quasi 1D functions for now.; - back pressure sensitivity output to screen and convergence history if an outflow-based objective is specified (average pressure, outlet-chain-rule, etc); - 2D symmetry plan now allows movement in the direction of the symmetry line (previously deformations intersecting a symmetry plane resulted in undesired deformations)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204:298,config,config,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/204,1,['config'],['config']
Modifiability,"If I set DV_KIND = HICKS_HENNE, then what exactly does DV_VALUE do? I see that it deforms the mesh, but I am trying to understand how exactly DV_VALUE (a scalar) is related to the vector of design variables defined in DEFINITION_DV?. Thanks for your help and apologies if this is documented elsewhere--I searched for it a bit but could not find a definition.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1254:197,variab,variables,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/1254,1,['variab'],['variables']
Modifiability,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; These macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/157:60,variab,variable,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/157,3,['variab'],"['variable', 'variables']"
Modifiability,"If cgns is built with the flag CG_BUILD_SCOPE, all type and variable names are prefixed with 'CG_', which makes SU2 uncompilable.; Prefixing all CGNS variables and types with the macros CGNS_ENUMV and CGNS_ENUMT takes care of this.; This macros are defined in cgnslib.h:. ``` c; #ifdef CGNS_SCOPE_ENUMS; /* set scope prefix for values only */; #define CGNS_ENUMV( e ) CG_ ## e; /* set scope prefix for types */; #define CGNS_ENUMT( e ) CG_ ## e; /* set scope prefix for defines */; #define CGNS_ENUMD( e ) CG_ ## e; /* set scope prefix for variables (lowercase same as functions) */; #define CGNS_ENUMF( e ) cg_ ## e; #else; #define CGNS_ENUMV( e ) e; #define CGNS_ENUMT( e ) e; #define CGNS_ENUMD( e ) e; #define CGNS_ENUMF( e ) e; #endif; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/155:60,variab,variable,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/155,3,['variab'],"['variable', 'variables']"
Modifiability,If you run a shape optimization problem (shape_optimization.py) with the RESTART_FLOW_FILENAME config option equal to the SOLUTION_FLOW_FILENAME config option then in each design folder you get symbolic links to the solution in DSN_001 instead of the solution for this design iteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/349:95,config,config,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/349,2,['config'],['config']
Modifiability,"If you try to execute parallel_computation.py with a config file that includes two or more design variables:; DV_KIND= ROTATION, ROTATION; DV_MARKER= ( AIRCRAFT ); DV_PARAM= ( 32.90150, 0.0, 0.0, 32.90150, 0.0, 1.0 ); ( 32.90150, 0.0, 0.0, 32.90150, 1.0, 0.0 ); DV_VALUE= 45, 45; SU2 will create a config file config_CFD.cfg that doesn’t work. It doesn’t work because the python is changing DV_VALUE= 45, 45 by DV_VALUE= 0 and the new config file is not correct.; The problem is at the end of config.py, where you can read; # HACK - twl; if config.has_key('DV_VALUE_NEW'):; config.DV_VALUE = config.DV_VALUE_NEW; this line sets to 0 the DV_VALUE. I cannot modify (eliminate) this line without running a serious study about its implications during shape optimization, maybe in the near future if we find a volunteer...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/293:53,config,config,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/293,8,"['config', 'variab']","['config', 'variables']"
Modifiability,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1066:665,config,config,665,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066,2,['config'],['config']
Modifiability,Improve progress reporting in the Pointwise plugin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33:44,plugin,plugin,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/33,1,['plugin'],['plugin']
Modifiability,Improve the configuration file for the SA Neg test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:12,config,configuration,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,1,['config'],['configuration']
Modifiability,Improved look-up table query scaling with variable count,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:42,variab,variable,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['variab'],['variable']
Modifiability,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/70:99,variab,variable,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/70,3,['variab'],['variable']
Modifiability,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209:359,variab,variables,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/209,1,['variab'],['variables']
Modifiability,Included Dockerfiles for multiple platforms and created a Configuration generation UI,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:58,Config,Configuration,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,1,['Config'],['Configuration']
Modifiability,Included github actions in the dependabot config,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,1,['config'],['config']
Modifiability,"Incorporate Parmetis into the SU2 build environment. Note that to build parmetis, a MPI-enabed C compiler is required, so . ``` sh; $ ./configure ... # looks for MPI C++/C compilers; $ ./configure --with-cxx=`which mpicxx` --with-cc=`which mpicc`; $ ./configure --disable-mpi # implicitly disables parmetis; $ ./configure --disable-metis # implicitly disables parmetis too; ```. all do the expected things.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135:136,config,configure,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/135,4,['config'],['configure']
Modifiability,Infinite Loop When Running Grid Adaptivity on Hexahderons,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:32,Adapt,Adaptivity,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,1,['Adapt'],['Adaptivity']
Modifiability,Installation: Error during building configuration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/954:36,config,configuration,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/954,1,['config'],['configuration']
Modifiability,Intermediate class of variable for all flow solver variables + Fix for MUSCL in NEMO solver,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:22,variab,variable,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,2,['variab'],"['variable', 'variables']"
Modifiability,Introduction of AUSM+M and AUSM scheme refactoring in NEMO,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:39,refactor,refactoring,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['refactor'],['refactoring']
Modifiability,"Is a python 3.x support planned or existing for SU2 ?; It is not so hard to make a code compatible with both version python 2 and 3 but only with recent version of each (2.7 and 3.5 for example). ; So my question is about python 2.x : what minimal version do you want to support ?. You can see a quick fix, only for config class for the moment, here: [gbaty/SU2/py2_and_py3_support](https://github.com/gbaty/SU2/tree/py2_and_py3_support)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246:316,config,config,316,https://su2code.github.io,https://github.com/su2code/SU2/issues/246,1,['config'],['config']
Modifiability,Is there a possibility to implement an inputfile for realising a time variable pitching amplitude and frequency in the dynamic mesh definition?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/644:70,variab,variable,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/644,1,['variab'],['variable']
Modifiability,"Is there a way to wrap SU2 code in a namespace quickly? When I try to add new header files from another library, the SU2 constants and variables often conflict.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1410:135,variab,variables,135,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410,1,['variab'],['variables']
Modifiability,It seems `int totalNumParameters;` has been deleted from the line #205 in _numerics_machine_learning_ header which brings up the error: `‘class CNeurNet’ has no member named ‘totalNumParameters’` in version _4.0.1_ while configuring the suit with Jsoncpp options. I just add it back.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/197:221,config,configuring,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/197,1,['config'],['configuring']
Modifiability,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152:500,adapt,adaptive,500,https://su2code.github.io,https://github.com/su2code/SU2/issues/152,1,['adapt'],['adaptive']
Modifiability,"Let me begin by saying ""Thank you so, so much for your time and efforts to write SU2 and then distribute as open source!"" . I now wish to make a complaint -- as far as I can tell there is not even a command manual for SU2. I think this should be a requirement for SU2. Tutorials are not enough:. > SU2 includes strict error checking of the config file upon execution of one of the C++ modules. For example, the code **will throw errors if unknown options are specified**, options appear more than once, extra text appears outside of comments, etc. A user should be able to reference a single document to find command syntax and options. As an excercise, I ""tried"" to use a dd-ilut preconditioner with 2 submatrices, symmetric overlap, a drop-tolerance of 1e-4, and a fill of 1.3, with a GMRES solver utilizing a modified Gram-Schmidt orthoganolization, kspace of 30, and RCM reordering... SU2 failed. Ok, so I didn't _actually_ try to do this, but if I were to try this how would I know SU2 _couldn't_ use this? To fill in this exercise I accessed the Trilinos Aztec User Manual: https://trilinos.org/oldsite/packages/aztecoo/AztecOOUserGuide.pdf which, while it doesn't attempt to tell me _what_ a krylov subspace is, at least tells me that I can and how to use the argument _AZ_kspace_. Then as a user I can google _GMRES kspace_ to find the theory / explanation if I so choose. Can this be a thing? At least a text document with commands and allowed arguments?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183:340,config,config,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/183,1,['config'],['config']
Modifiability,Lower bounds of the design variables are violated by optimizer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/795:27,variab,variables,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/795,1,['variab'],['variables']
Modifiability,MPI Point-to-Point Refactoring + New Periodic BC Implementation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:19,Refactor,Refactoring,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['Refactor'],['Refactoring']
Modifiability,"MS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Rele",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3740,variab,variable,3740,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"Make changes throughout the docs about requiring bootstrap before configure-make-install for all releases after v6.1.0, and implement clear strategy for master branch and source distributions for subsequent releases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/599:66,config,configure-make-install,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/599,1,['config'],['configure-make-install']
Modifiability,Mesh Adaptation and missing SU2_MSH in v7.0.8,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:5,Adapt,Adaptation,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['Adapt'],['Adaptation']
Modifiability,"Method described below.; No config options needed.; Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; May or may not add OpenMP to this which would improve scalability.; Restarts are read twice for RANS problems, which is not great for this type of feature...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277:28,config,config,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277,1,['config'],['config']
Modifiability,"More refactoring, fixes, and new features related to CDriver and CIteration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/199:5,refactor,refactoring,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/199,1,['refactor'],['refactoring']
Modifiability,"Move FFD parameters for number or boxes, corner points, etc., to the config file...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/147:69,config,config,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/147,1,['config'],['config']
Modifiability,Multiline config option values and Paraview vtu default output,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:10,config,config,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,1,['config'],['config']
Modifiability,Muscl reconstruction for flow variables applied twice when scalar_upwind scheme is used,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2297:30,variab,variables,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/2297,1,['variab'],['variables']
Modifiability,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1122:636,config,configuration,636,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122,2,"['Config', 'config']","['Config', 'configuration']"
Modifiability,NACA 0012 Test Case does not converge with provided config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:52,config,config,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,1,['config'],['config']
Modifiability,New SA version/correction combinations and new way of specifying them in the config (SA_OPTIONS=...),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646:77,config,config,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646,1,['config'],['config']
Modifiability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:551,inherit,inheritance,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,1,['inherit'],['inheritance']
Modifiability,"New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1105,refactor,refactoring,1105,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['refactor'],['refactoring']
Modifiability,"Not sure if you are aware, but the C++ MPI bindings have been deprecated since MPI-2.2:. http://www.mpi-forum.org/docs/mpi-2.2/mpi22-report/node328.htm. As MPI-3 becomes more prevalent, using the deprecate C++ MPI interface is dangerous for portability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/22:241,portab,portability,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/22,1,['portab'],['portability']
Modifiability,Numerics refactoring for CAvgGrad- and CUpwSca- classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422:9,refactor,refactoring,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/422,1,['refactor'],['refactoring']
Modifiability,"OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I prop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1836,variab,variable,1836,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,['variab'],"['variable', 'variables']"
Modifiability,"ORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ); %; % Surface grid continuity at the intersection with the faces of the FFD boxes.; % To keep a particular level of surface continuity, SU2 automatically freezes the right; % number of control point planes (NO_DERIVATIVE, 1ST_DERIVATIVE, 2ND_DERIVATIVE, USER_INPUT); FFD_CONTINUITY= 2ND_DERIVATIVE; %; %; % --------------------- OPTIMAL SHAPE DESIGN DEFINITION -----------------------%; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | MAIN_BOX, 0, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 0, 0.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 0, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 0, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 1, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 2, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 3, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 4, 1, 0.0, 1.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 5, 1, 1.0, 0.0 ); ( 19, 1.0 | airfoil | MAIN_BOX, 6, 1, 0.0, 1.0 ); . ```. Thank you for your help. - OS: [Linux (Ubuntu 20)]; - SU2 Version: [v5.0.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:2415,variab,variables,2415,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['variab'],['variables']
Modifiability,"On industrial cases, there can be tens of independent boundaries of a same type (eg. inlets / outlets). It would be very good to be able to define them in separate lines in the config file. Some graphical text editor can't even handle such ""infinite"" lines. (This is also true for optimization variables like DEFINITION_DV.)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166:177,config,config,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/166,2,"['config', 'variab']","['config', 'variables']"
Modifiability,Option for Joule Heating not in configuration file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:32,config,configuration,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,1,['config'],['configuration']
Modifiability,"Perhaps i found a little bug. ; Can someone confirm, that the output name of variables is different which flow.vtk ""maker"" you use?. SU2_SOL creates ""Conservative_1"" with """" and the automatic flow.vtk has Conservative_1 without """".; This is little irritating when using Paraview and especially Paraview states. If u have a state file created without """" variables and want import a flow.vtk created with SU2_SOLfirst u get an error, second u have to add """" in every calc to get results again",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/269:77,variab,variables,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/269,2,['variab'],['variables']
Modifiability,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:105,variab,variables,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,4,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:1131,config,config,1131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['config'],['config']
Modifiability,Put a README in the Eclipse folder pointing folks to the GitHub plugin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/86:64,plugin,plugin,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/86,1,['plugin'],['plugin']
Modifiability,RANS output now includes the full C_f vector instead of the magnitude (useful for finding separation on surfaces) and some clean up for the variable names in Tecplot.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/267:140,variab,variable,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/267,1,['variab'],['variable']
Modifiability,Refactor CPrimalGrid classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352,1,['Refactor'],['Refactor']
Modifiability,Refactor Driver classes method names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988,1,['Refactor'],['Refactor']
Modifiability,Refactor Output classes method names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['Refactor'],['Refactor']
Modifiability,Refactor SA source terms to modularize the specification of model variants and correction terms,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['Refactor'],['Refactor']
Modifiability,Refactor SST model implementation and addition of variants/corrections,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['Refactor'],['Refactor']
Modifiability,Refactor viscous numerics,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:0,Refactor,Refactor,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['Refactor'],['Refactor']
Modifiability,Refactoring of convective numerics classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691:0,Refactor,Refactoring,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/691,1,['Refactor'],['Refactoring']
Modifiability,Refactoring of the Linear Solver classes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:0,Refactor,Refactoring,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['Refactor'],['Refactoring']
Modifiability,Refactorization of SU2 Grid Deformation for Python,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:0,Refactor,Refactorization,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['Refactor'],['Refactorization']
Modifiability,Removing unnecessary variables for CFluidScalar constructor,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2357:21,variab,variables,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2357,1,['variab'],['variables']
Modifiability,Renaming of PHYSICAL_PROBLEM config option to SOLVER,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756:29,config,config,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/756,1,['config'],['config']
Modifiability,Renaming some of variables,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/191:17,variab,variables,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/191,1,['variab'],['variables']
Modifiability,Restart file variable writing order change,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/397:13,variab,variable,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/397,1,['variab'],['variable']
Modifiability,"Restart files currently contain fields that are not necessary for restarts, like residual information, pressure coefficient, etc. I propose to store only the fields that are necessary for restarts in the restart file. This will keep the size of the restart files to a minimum. . I think we only need to store the transported variables, or do we need to store more information for perfect restarts, or adjoints?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2118:325,variab,variables,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/2118,1,['variab'],['variables']
Modifiability,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/190:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/190,3,['config'],"['config', 'configure']"
Modifiability,"Right now if you include an EnumListOption with no values, for example, . % Type of mesh motion; % Type: EnumListOption Default: GridMovement_Map; GRID_MOVEMENT_KIND= ( ). SU2 gives an error of . Error inT okenizeString(): option GRID_MOVEMENT_KIND in configuration file with no value assigned. I think this is not good behavior. It means that you cannot easily switch from a config file that uses grid movement to one that does not, and it means your can't write a valid config file that has all of the config options in it.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/13:252,config,configuration,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/13,4,['config'],"['config', 'configuration']"
Modifiability,"Right now, there is no error checking whatsoever for the solution restart file. You can give it a tecplot file (for instance) and it will read in without any warning. When we fix that, we should also be adding to the header file (this was run for X solver, etc.) to check that the variables mean the same thing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/12:281,variab,variables,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/12,1,['variab'],['variables']
Modifiability,SU2 configurer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/759:4,config,configurer,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/759,1,['config'],['configurer']
Modifiability,"SU2 right now is inconsistent with how it does file names in the config file. For example, the restart file needs to be specified with a "".dat"" suffix, but in the case of the surface files, the "".csv"" is added automatically. SU2 should be consistent across all filenames. Preferably, this will be fixed by having the user specify all suffixes. This is a tiny amount of additional work for the user, but it makes writing scripts that use the config file much easier. When the suffix is in the config file, it's easy to have python say ""open this file"". If the config file just has the base name of the file (no extension) then the knowledge of what suffix SU2 uses must be hard-coded into the follow-on script (which can then break later if SU2 changes).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41:65,config,config,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/41,4,['config'],['config']
Modifiability,SU2_SOL and automatic flow.vtk creat different output variablenames,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/269:54,variab,variablenames,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/269,1,['variab'],['variablenames']
Modifiability,Segementation error on coupling turbomachinery settings with structural analysis,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2085:23,coupling,coupling,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/2085,1,['coupling'],['coupling']
Modifiability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:61,config,config,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['config'],['config']
Modifiability,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144:65,config,configuration,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/144,2,['config'],['configuration']
Modifiability,Some old options in config for HB,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/363:20,config,config,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/363,1,['config'],['config']
Modifiability,"Sometimes rather than solving lots of species equations, I prefer to treat gas as mixture of all species and define material properties such as Cp and k as polynomial of temperature only for mixture. As a solver Fluent can do that. I know Fluent is primitive solver, so it treats temperature as solution variable. Then it is easy to find Cv, Cp, k others secondaries for him. In SU2 as I understand (I am not sure), gamma is always constant in ideal gas model. This is not appropriate for high temperature flows such as in rocket nozzle etc. Is there a way to overcome this problem? Which classes I have to touch and re-write? I will be very appreciated if someone enlighten me. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/731:304,variab,variable,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/731,1,['variab'],['variable']
Modifiability,Sub-config files for multizone problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:4,config,config,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,1,['config'],['config']
Modifiability,Supersonic Wedge Mesh Adaptation Issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:22,Adapt,Adaptation,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,1,['Adapt'],['Adaptation']
Modifiability,THIS IS A PR TO feature_NEMO. No impact on develop. This pull requests adds preprocessing to the NEMO NS solver and commonpreprocessing functionality seen in develop. Some functions have been extended to deal with eddy viscosity. Regression tests are passing. If the community finds having internal pull request distracting/cluttering I can take down.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1078:192,extend,extended,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078,1,['extend'],['extended']
Modifiability,"THOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]; Lower and upper bound for each independent variable: [(-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:2144,variab,variable,2144,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['variab'],['variable']
Modifiability,Test Case was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/387:49,Config,Config,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/387,1,['Config'],['Config']
Modifiability,"Thank you very much for creating SU2,. I would like to know more about the drag coefficient calculation used to produce the results in Forces_breakdown.dat. May someone add a page on the SU2 website to include further details on this?. Thanks a bunch. **In general it would be great if there was a manual page for configuration options used in both compressible and incompressible flow simulations.**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/758:314,config,configuration,314,https://su2code.github.io,https://github.com/su2code/SU2/issues/758,1,['config'],['configuration']
Modifiability,"The Config --. ```; DV_KIND= FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D; DV_MARKER= ( airfoil ); DV_PARAM= ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1; ```. From the Log -- . ```; FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 1 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 2 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 3 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 4 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 5 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 6 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 7 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 8 ); FFD 2D (camber) <-> airfoil ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/153:4,Config,Config,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/153,1,['Config'],['Config']
Modifiability,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:86,config,config,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,2,['config'],['config']
Modifiability,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:122,variab,variables,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"The SLSQP Python implementation is a good one. However, it is quite rigid and I have added some extra variables in the config file to control the scaling of the main objective function as well as push factors to work with complex constraints.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/421:102,variab,variables,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/421,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1072:42,config,config,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072,3,"['Config', 'config']","['Configuration', 'config', 'configure']"
Modifiability,"The [description of SU2][1] says. >The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. Are there any examples of how [SU2][2] ""has been extended to treat more general equations such as electrodynamics""?. [1]: https://github.com/su2code/SU2#su2-introduction; [2]: https://github.com/su2code/SU2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/655:142,extend,extended,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/655,2,['extend'],['extended']
Modifiability,"The compressible primitive variables are T u v w P rho H, we output the limiters for T u v w P with the names:; LIMITER_DENSITY; LIMITER_MOMENTUM-X; LIMITER_MOMENTUM-Y; LIMITER_MOMENTUM-Z; LIMITER_ENERGY; Which would be ok if we were referring to the conservative variables. Also the limiter for temperature is not relevant for ideal gases as the state is derived from the enthalpy instead.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1025:27,variab,variables,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1025,2,['variab'],['variables']
Modifiability,"The default values for the marker options do not parse. It would be nice to add a ""NONE"" flag that can be parsed as not having any of that boundary type. . in config:; % Dirichlet boundary marker(s); % Type: MarkerOption Default: Marker_Dirichlet; MARKER_DIRICHLET= Marker_Dirichlet. error is:; Error in CMarkerDirichletRef::SetValue(): incorrect number of MARKER_DIRICHLET_ELEC parameters in the configuration file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/14:159,config,config,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/14,2,['config'],"['config', 'configuration']"
Modifiability,"The enum options (for example in the config file) should be of their type, not just as unsigned short.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/34:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/34,1,['config'],['config']
Modifiability,"The equations previously did not match the paper by Travin et al, and; are corrected in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:267,adapt,adaptive,267,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['adapt'],['adaptive']
Modifiability,"The filename of the Paraview multiblock is set to the case name / config filename:. https://github.com/su2code/SU2/blob/b1e7e7bb7229152f26e5035c0eae70804fee5ca2/SU2_CFD/src/output/COutput.cpp#L562. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename:. https://github.com/su2code/SU2/blob/b1e7e7bb7229152f26e5035c0eae70804fee5ca2/SU2_CFD/src/output/COutput.cpp#L508. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. Is there a reason behind this or can we align that by using the volume filename for multiblock as well?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1928:66,config,config,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/1928,3,['config'],['config']
Modifiability,"The incompressible solver does not accept the TIME_AVERAGE output field:. ` Info: Ignoring the following volume output fields/groups:` ; ` TIME_AVERAGE` ; ` Volume output fields: COORDINATES, SOLUTION, PRIMITIVE, RESIDUAL, VORTEX_IDENTIFICATION, MPI, MESH_QUALITY` . whereas the compressible solver accepts the field and prints mean volume variables:. `Volume output fields: COORDINATES, SOLUTION, PRIMITIVE, RESIDUAL, VORTEX_IDENTIFICATION, MPI, MESH_QUALITY, TIME_AVERAGE`. **Desktop:**; - OS: Linux (CentOS 7.9); - C++ compiler and version: g++ (GCC) 12.1; - MPI implementation and version: OpenMPI 4.1.4; - SU2 Version: v7.5.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2044:340,variab,variables,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/2044,1,['variab'],['variables']
Modifiability,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075:658,config,config,658,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075,1,['config'],['config']
Modifiability,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:748,config,config,748,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,2,['config'],['config']
Modifiability,The order on which the variables were being written in the restart file was wrong. This issue only appeared when limiters and/or residuals were written. This pull request fixes the issue by reorganizing the variable location when writing limiters and/or residuals.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/397:23,variab,variables,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/397,2,['variab'],"['variable', 'variables']"
Modifiability,"The same configurations are used to compile; ./configure CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/local/mpi3-dynamic/bin/mpicc --with-cxx=/usr/local/mpi3-dynamic/bin/mpicxx ; CGNS flag is no need to enable since the new version has already taken care of it. . A couple of issues when ran the quicktest,; 1. segmentation fault after the Begin Solver. ; 2. when using multi-cores, got multi-thread outputs. Must be something wrong with the mpi. . Does anybody else have a similar issue? Or it is just my problem. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/303:9,config,configurations,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/303,2,['config'],"['configurations', 'configure']"
Modifiability,"The shape_optimization.py script fails when setting `OPT_OBJECTIVE= TOTAL_HEATFLUX `.; The name of the variables have apparently been changed, but this change is not reflected in files _SU2_CFD/src/output/CFlowCompOutput.cpp_ and _SU2_CFD/src/output/CFlowIncOutput.cpp_. In those files, replacing all instances of `""HEATFLUX""` with `""TOTAL_HEATFLUX""` solves the problem. ; For reference, I also run the script SU2/SU2_PY/updateHistoryMap.py after recompiling, but I am not sure if this is needed. **Desktop (please complete the following information):**; - OS: Linux (Red Hat 7.6); - C++ compiler and version: g++ 8.3.0; - MPI: mvapich 2.3.1; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/946:103,variab,variables,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/946,1,['variab'],['variables']
Modifiability,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/81:214,inherit,inherit,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/81,1,['inherit'],['inherit']
Modifiability,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:699,config,configurable,699,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['config'],['configurable']
Modifiability,There is a problem with the finite_difference.py script. The step size is currently taken from the REF_LENGTH_MOMENT config option. See . https://github.com/su2code/SU2/blob/develop/SU2_PY/SU2/eval/gradients.py#L470. I don't think that this was intentionally done. @fpalacios it looks like it was introduced with one of your commits (https://github.com/su2code/SU2/commit/90ab5347fc3071d44c0e9c2010a9faeacca0abc4),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367:117,config,config,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/367,1,['config'],['config']
Modifiability,"There seems to potentially be a bug with doing an unsteady dual-timestepping simulation without a provided initial condition (restart file):. When no restart file is provided, the first inner iterations have Time_Iter=0 and Cur_Time=0 (the state **before** these inner iterations). After completion of this time iteration, a file `flow_00000.vtu` and all others are outputted. These files are _not_ the initial condition as specified by the configuration file -- they seem to actually be the solution after the first time step. This can be reproduced easily in the config file I have attached to this issue (an updated version of TestCases/plunging_naca0012 for SU2 v8). The `flow_00000.vtu` file has non-uniform flowfields, which doesn't make sense. For simulations where a restart file like `restart_00000.dat` is provided, the Time_Iter=1 and Cur_Time=dt (the state **after** these inner iterations), and the subsequently outputted files have the correct time iteration appended to it. I think that for non-restart unsteady simulations, the IC should be outputted as solely just the initialization before any inner iterations are completed, Time_Iter++ and Cur_Time+=dt, and THEN inner iterations performed. [plunging_NACA0012.cfg.txt](https://github.com/user-attachments/files/16912625/plunging_NACA0012.cfg.txt). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 22.04); - C++ compiler and version: GNU; - MPI implementation and version: MPICH; - SU2 Version: v8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2353:441,config,configuration,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/2353,2,['config'],"['config', 'configuration']"
Modifiability,"There were several places where the compiler was returning warnings, for things like comparing signed and unsigned integers, uninitialized variables, unused variables, etc. ; This pull request corrects for these warnings; the largest change is in changing the type of some consts that previously returned signed-unsigned comparison warnings.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/342:139,variab,variables,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/342,2,['variab'],['variables']
Modifiability,"They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1394,config,configurations,1394,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,2,"['adapt', 'config']","['adaptation', 'configurations']"
Modifiability,"This PR implements the specification of a different wall function treatment per viscous wall marker. In the configuration file you do this as follows, where the default is NO_WALL_FUNCTION. % Viscous wall markers for which wall functions must be applied. (NONE = no marker); % Format: ( marker name, wall function type, ... ); MARKER_WALL_FUNCTIONS= ( airfoil, NO_WALL_FUNCTION ). You can determine the type of wall function treatment for a given marker by calling the function CConfig::GetWallFunction_Treatment. I put a dummy call in CNSSolver::BC_HeatFlux_Wall and CNSSolver::BC_Isothermal_Wall, as an example. It is the intention that the branches feature_Wall_Functions and feature_hom_wallModel merge with this version and work out the actual implementation for the FV solver and DG-FEM solver, respectively.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/435:108,config,configuration,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/435,1,['config'],['configuration']
Modifiability,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:527,extend,extended,527,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,1,['extend'],['extended']
Modifiability,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:269,variab,variable,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,5,"['config', 'variab']","['configuration', 'variable', 'variable-based']"
Modifiability,"This PR removes quite a few compiler warnings that you get when you compile with the following flags for the g++ compiler; -g -Wall -Wextra -Wno-unused-parameter -Wno-empty-body. I would advice people to use these flags before merging into develop to keep the code as clean as possible. Warnings are very useful to catch faulty behavior, but if there are already quite a few present in working code, it is easy to miss important ones. With these flags there is still one file that gives warnings in the develop version, namely Common/src/geometry_structure.cpp. The reason is that on line 745 of this file there is the following statement. if ((jPoint > iPoint) // && (CrossProduct >= 0.0). The commented part is new and leads to a few compiler warnings about unused variables. The question therefore is whether the comment should indeed be in there (and hence CrossProduct is not relevant) or this is just something for debugging. In the former case some more cleaning up can be done. In the latter case the comment should be removed again.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/506:767,variab,variables,767,https://su2code.github.io,https://github.com/su2code/SU2/pull/506,1,['variab'],['variables']
Modifiability,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:138,refactor,refactoring,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,2,"['refactor', 'rewrite']","['refactoring', 'rewrite']"
Modifiability,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:790,config,config,790,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['config'],['config']
Modifiability,This commit adds the appropriate code to more accurately report the; progress of the vertex export in the SU2 Pointwise plugin.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72:120,plugin,plugin,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/72,1,['plugin'],['plugin']
Modifiability,This commit fixes an issue causing incorrect reporting of the specified; adaptive CFL behavior. Thanks for your consideration!,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:73,adapt,adaptive,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Modifiability,"This feature includes several minor changes to unify the style:; - Now we are using CL, CD, CSF across the entire code (instead of Clift, CDrag, CSideForce). This new nomenclature is more consistent with CMx, Fx, that we were using before.; - string GetMarker_xxx to GetMarker_xxx_TagBound to reflect that the output is the name of the bound. this is also more consistent with the existing GetMarker_TagBound; - Minor cosmetic changes e.g. something=something -> something = something. Code comments using /_--- ---_/, else{ -> else { or ){ to ) {. And an important change, now SU2 is able to divide between pressure, momentum and friction contribution to the computed total force. The momentum is important if we are dealing with open surfaces like an engine inlet/outlet. The new names for the main subroutines are. void CEulerSolver::Pressure_Forces(CGeometry *geometry, CConfig *config); void CEulerSolver::Momentum_Forces(CGeometry *geometry, CConfig *config); void CNSSolver::Friction_Forces(CGeometry *geometry, CConfig *config). which are also more consistent with its content.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/304:883,config,config,883,https://su2code.github.io,https://github.com/su2code/SU2/pull/304,3,['config'],['config']
Modifiability,"This implementation allows the definition of cartesian, cylindrical and spherical FFD boxes. The gradient evaluation itself has been also revisited to reduce the required time by skipping the surface deformation process when the variable is has been fixed by the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330:229,variab,variable,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/330,1,['variab'],['variable']
Modifiability,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241:82,config,config,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/241,3,['config'],['config']
Modifiability,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:280,variab,variables,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,3,['variab'],['variables']
Modifiability,"This is the first of a number of important changes to make way for the discrete adjoint framework. With this change, one must use CONTINUOUS_ADJOINT instead of ADJOINT in config files to run the continuous adjoint problem. Contains all necessary changes to the C++ and Python source.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185:171,config,config,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/185,1,['config'],['config']
Modifiability,"This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2527,config,config,2527,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,This makes sure DV_KIND comes before DV_PARAM when a config file is output by the python scripts. The python dict passed to update doesn't guarantee order. This issue occured when DV_KIND and DV_PARAM were not previously defined in a config file passed to shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20:53,config,config,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/20,2,['config'],['config']
Modifiability,This makes sure DV_KIND comes before DV_PARAM when a config file is; output by the python scripts. The python dict passed to update doesn't; guarantee order. This issue occured when DV_KIND and DV_PARAM; were not previously defined in a config file passed to; shape_optimization.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/73:53,config,config,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/73,2,['config'],['config']
Modifiability,"This new version of SU2_DEF generates only one .plt file independently of the number of MPI ranks. It is a visualization issue but, this new capability is very useful to study the effect of a design variable dealing with large cases that require multiple MPI ranks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/130:199,variab,variable,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/130,1,['variab'],['variable']
Modifiability,This pull request addressed issue #682 and cleans up the config structure. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/686:57,config,config,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/686,1,['config'],['config']
Modifiability,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322:785,extend,extend,785,https://su2code.github.io,https://github.com/su2code/SU2/pull/322,1,['extend'],['extend']
Modifiability,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:326,adapt,adapt,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['adapt'],['adapt']
Modifiability,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:18,extend,extends,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['extend'],['extends']
Modifiability,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:246,variab,variable,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,3,"['extend', 'refactor', 'variab']","['extended', 'refactoring', 'variable']"
Modifiability,"This pull request implements . ``` bash; $ ./configure --with-metis-cppflags=""...""; ```. if needed, but sets the METIS C preprocessor flags to sane values by default in m4/metis.m4. Thomas, this relies on the system default **linux** rather than -DLINUX.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/32:45,config,configure,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/32,1,['config'],['configure']
Modifiability,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:404,config,config,404,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,1,['config'],['config']
Modifiability,This pull request introduces a 'custom' design variable that can be used in an objective defined in an external script. ; Also includes some clean-up/ name changes to outflow-generalized adjoint (previously 'chain rule adjoint'). Also adds a test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/215:47,variab,variable,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/215,1,['variab'],['variable']
Modifiability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:463,coupling,coupling,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,4,"['adapt', 'config', 'coupling']","['adapted', 'configuration', 'coupling']"
Modifiability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:263,config,configure,263,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,2,"['config', 'coupling']","['configure', 'coupling']"
Modifiability,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117:302,config,config,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117,1,['config'],['config']
Modifiability,"This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review. . In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237:419,config,config,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/237,1,['config'],['config']
Modifiability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:670,refactor,refactoring,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,5,"['refactor', 'rewrite', 'variab']","['refactoring', 'rewrite', 'variables']"
Modifiability,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:155,refactor,refactoring,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['refactor'],['refactoring']
Modifiability,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473:257,flexible,flexible,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/473,1,['flexible'],['flexible']
Modifiability,This pull request solves issue #276 ; The variable Parent_CV had no initial value causing undefined behaviour during multigrid agglomeration process. The variable is now initialized to 0 in CPoint constructor in dual_geometry_structure.cpp.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/316:42,variab,variable,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/316,2,['variab'],['variable']
Modifiability,"To Whom it May Concern, . I am writing in connection with the Transitional Flat Plate Test Case and wanted to report that the tutorial available on SU2 website was not working with the current version of the code: 7.3. That is to say that after I followed the tutorial step by step without changing anything, I had the following terminal error : ""FGMRES orthogonalization failed, linear solver diverged"". I checked the source code and found a little contradiction between the configuration file of the tutorial and the implementation of the transitional model. As you can see in the configuration file, the turbulence intensity Tu is already specified in % so the factor 100 added to Tu in the code does not seem necessary. . ![configuration_file](https://user-images.githubusercontent.com/109698292/180274079-ece0c6f6-4d64-4897-8e2d-abff41d30056.png); ![code](https://user-images.githubusercontent.com/109698292/180274082-b2dbee2d-a0ea-4967-b33e-a698f61d7471.png). When I erased that factor 100 in the source code (SU2_CFD/include/numerics/turbulent/turb_sources.hpp) I was able to get the same results as displayed in the tutorial for the skin friction coefficient. . Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719:476,config,configuration,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719,2,['config'],['configuration']
Modifiability,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/171:195,variab,variable,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/171,1,['variab'],['variable']
Modifiability,Try to detect wrong meson being used to configure SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1615:40,config,configure,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1615,1,['config'],['configure']
Modifiability,"Unable to find ""configure"" file",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/549:16,config,configure,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/549,1,['config'],['configure']
Modifiability,Update adaptive CFL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:7,adapt,adaptive,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['adapt'],['adaptive']
Modifiability,Update of the python fsi interface and new feature coupling SU2 with Nastran,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:51,coupling,coupling,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,1,['coupling'],['coupling']
Modifiability,Updated Adjoint variable to Continuous_Adjoint,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:16,variab,variable,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,1,['variab'],['variable']
Modifiability,Updates to interpolation:; - Parallelized isoparametric interpolation; - Modified variable names w/in isoparametric calc for easier human-interpretation; - Introduced 'mirror' interpolation for use with Consistent & Conservative interpolation; - modified driver_structure such that structure -> fluid interpolation is defined first (which is necessary for C&C interpolation); - some code which was repeated in multiple interpolator child classes was moved to functions defined in the parent interpolator class (Determine_ArraySize and Collect_VertexInfo).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/231:82,variab,variable,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/231,1,['variab'],['variable']
Modifiability,Use CGNS_ENUMT and CGNS_ENUMV to properly scope type and variable names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/157:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/157,1,['variab'],['variable']
Modifiability,Use CGNS_ENUMT and CGNS_ENUMV to properly scope type and variable names ...,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/155:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/155,1,['variab'],['variable']
Modifiability,Use doxygen to keep config options updated,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:20,config,config,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['config'],['config']
Modifiability,Using the primitive variable index classes in more places (+ minor chores),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1476:20,variab,variable,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1476,1,['variab'],['variable']
Modifiability,"V_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough inst",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1105,config,configure,1105,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['config'],['configure']
Modifiability,"V_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1085,Config,Configured,1085,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['Config'],['Configured']
Modifiability,Variable length arrays in Common/src/grid_movement/CVolumetricMovement.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1146:0,Variab,Variable,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1146,1,['Variab'],['Variable']
Modifiability,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:0,Variab,Variable,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,Variables like 'ZoneType_t' is reported'was not declared in this scope',MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/28:0,Variab,Variables,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/28,1,['Variab'],['Variables']
Modifiability,"Various changes:; && switch to || for solid boundary (previously a marker was only ""solid"" if it was heat flux AND euler AND isothermal); additions/modifications to the euler adjoint BC_OUTLET (average pressure, stagnation pressure); changes to doxygen-compatible comments for config options",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/146:277,config,config,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/146,1,['config'],['config']
Modifiability,Volume-averaging by extending MARKER_INTERNAL to support volume elements?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:20,extend,extending,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['extend'],['extending']
Modifiability,"We have quite a few common booleans we use in many places of the code.; Some of them are very simple, like checking for compressible vs incompressible, or for FSI.; But when we want to express something more complicated like is it SA or SST, is the mesh moving or deforming, is this FEM or FVM or FEA, and so on, things are not so simple anymore and we end up with long conditionals repeated in many places. Since that logic is all built up from data in config I propose that we create a custom type akin to a bit-field that we can get from config and query whatever flag we want.; We move all the logic of setting up / updating this object to the config so that for example this:; ```; unsigned short Kind_Solver = config->GetKind_Solver();; bool flow = ((Kind_Solver == DISC_ADJ_EULER) ||; (Kind_Solver == DISC_ADJ_RANS) ||; (Kind_Solver == DISC_ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_EULER) ||; (Kind_Solver == ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_RANS));; ```; Can become `bool flow = config->GetFlags().flow();`, or similar. If we move this kind of logic to a separate object we can possibly make the config lighter, not so many methods etc.; This flags class can be absolutely tiny if the bits are packed (8 times tinier than storing bools).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/770:454,config,config,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/770,6,['config'],['config']
Modifiability,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912:126,config,config,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/912,3,['config'],['config']
Modifiability,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889:884,config,config,884,https://su2code.github.io,https://github.com/su2code/SU2/issues/889,1,['config'],['config']
Modifiability,"What should the default value of RefElemLength in the code below be? The comment says it is 0.1 but the code says 1.0, which are inconsistent. ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; if (SystemMeasurements == US) RefElemLength /= 0.3048;; ```; https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/Common/src/CConfig.cpp#L4696. For shape optimization, when I set ADJ_SHARP_LIMITER_COEFF to default (3.0) and set SENS_REMOVE_SHARP to YES, surface sensitivity becomes zero within fairly large distance from the sharp edges. The cutoff distance is defined by the product of ADJ_SHARP_LIMITER_COEFF (AdjSharp_LimiterCoeff) and RefElemLength, so RefElemLength seems to be too large. https://github.com/su2code/SU2/blob/9f082de9b9090188a820688cd30458da0fce5661/SU2_CFD/src/solvers/CDiscAdjSolver.cpp#L488. Because of this, I'm assuming that the default value of RefElemLength should have been 0.1 instead of 1.0. However, I realized that RefElemLength is used by the slope limiters as well, and I'm currently not sure about the impact of changing this variable. I am investigating myself but if someone knows the intent of this variable or the implementation of the slope limiters, I would like to ask for your help before I open PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1830:1144,variab,variable,1144,https://su2code.github.io,https://github.com/su2code/SU2/issues/1830,2,['variab'],['variable']
Modifiability,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431:944,config,config,944,https://su2code.github.io,https://github.com/su2code/SU2/issues/431,1,['config'],['config']
Modifiability,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:683,config,configure,683,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,3,['config'],['configure']
Modifiability,"When SU2 creates an inlet profile file, the values in the file are set to 0.0, expect for the vertex coordinates. The values used to be initialized from MARKER_INLET in the config file. Any particular reason this initialization disappeared? I propose to add this again, and also to add a line to inlet.dat with the names of the variables in the columns so it's easier for users to see what's in the columns.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1265:173,config,config,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/1265,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478:205,config,configure,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/478,1,['config'],['configure']
Modifiability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:157,variab,variables,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['variab'],['variables']
Modifiability,"When using `srun` version 15.08.7 `parallel_computation.py` launches `-n` instances of my SU2 call rather than one instance of SU2 with `n` processes. This does not happen with `srun` version 2.6.5. I fixed this issue by commenting out the line in `interface.py` that calls `srun` if a SLURM jobID number is in the environment variables. This causes `parallel_computation.py` to call `mpirun`, which works as expected.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469:327,variab,variables,327,https://su2code.github.io,https://github.com/su2code/SU2/issues/469,1,['variab'],['variables']
Modifiability,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:159,adapt,adaptation,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['adapt'],['adaptation']
Modifiability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:1806,config,configurations,1806,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['config'],['configurations']
Modifiability,"While working on #718 it was brought to my attention by @economon that CTurbSolver makes its own interpolation / reconstruction of bulk flow variables when computing the convective fluxes. This is mentioned in #403 and #422 but my concern is different. This reconstruction is not consistent with the one used by the flow solver (except in some very special circumstances) which means the convective fluxes considered for the turbulence variables do not respect the discretized continuity equation. Now, have I missed something and this is being compensated by some source term?; If I have not missed anything, I think the solution is relatively straight forward, one simply stores the convective fluxes computed in CEulerSolver::Centered/Upwind_Residual to later use in CTurbSolver. I would be happy to implement this but do let me know if I got something wrong folks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721:141,variab,variables,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/721,2,['variab'],['variables']
Modifiability,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252:272,config,config,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/252,6,['config'],['config']
Modifiability,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code. ; Example:; (bash); export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335:388,config,config,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/335,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"With this (very small) change, users can quickly change the system command used by the python scripts to launch parallel jobs without making any modifications to the code.; Example (for bash shell):; export SU2_MPI_COMMAND=""mpiexec -n %i %s"". NOTE:; SU2_MPI_COMMAND must contain '%i' and '%s', in that order, which will be replaced with the number of processors and the SU2 command (ie, 'SU2_CFD config.cfg') respectively.; If this environment variable exists in the workspace, whatever is in it will be used instead of the default options. This should allow things like nonstandard mpi launchers, additional arguments like hostfiles, etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336:396,config,config,396,https://su2code.github.io,https://github.com/su2code/SU2/pull/336,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"Would it be possible to add a 3D example of RANS, SST model with wind tunnel (6 walls) and an obstacle to simulate wind flow?. Ultimately I'd like to see how to retrieve resulting pressures on a surface from the model, after providing inlet flow. I've tried adapting Multiphysics FSI 2D model with no luck, too many possible input issues on my end, and the SU2_CFD executable reports no errors when loading config, just finishes with no output or results. Meshes I've tried were generated from GMSH (tets for wind tunnel volume and tri for obstacle as a planar surface). I'm a new user so please excuse my lack of knowledge using SU2. An example would be great help! Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2261:258,adapt,adapting,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/2261,2,"['adapt', 'config']","['adapting', 'config']"
Modifiability,[WIP] Adding/extending SU2 to handle turbulence for NEMO.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:13,extend,extending,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,1,['extend'],['extending']
Modifiability,[WIP] Enable the hover simulation for the Actuator Disk with Variable Load,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:61,Variab,Variable,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Variab'],['Variable']
Modifiability,[WIP] Piperno slope limiter and more flexible MUSCL scheme,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:37,flexible,flexible,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['flexible'],['flexible']
Modifiability,[WIP] Refactor Code Base,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:6,Refactor,Refactor,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,1,['Refactor'],['Refactor']
Modifiability,[WIP]: Flamelet progress variable (FPV) model,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:25,variab,variable,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['variab'],['variable']
Modifiability,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:253,variab,variable,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949:576,variab,variable,576,https://su2code.github.io,https://github.com/su2code/SU2/issues/949,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:6403,variab,variable,6403,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"\suflow\resources\softwares\SU2\externals\meson\mesonbuild\mesonmain.py"", line 146, in run; return options.run_func(options); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\msetup.py"", line 294, in run; app.generate(); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\msetup.py"", line 185, in generate; self._generate(env); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\msetup.py"", line 247, in _generate; intr.backend.generate(); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 553, in generate; self.generate_target(t); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 900, in generate_target; elem = self.generate_link(target, outname, final_obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 3062, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:1174,extend,extend,1174,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['extend'],['extend']
Modifiability,"_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thought this behavior could be traced to a bug since my previous mesh deformation always proceeded smoothly (_from flow past cylinder to other internal flow scenarios_), either with arbitrary or gradient based deformation. However, none of these were investigated with turbomachinery settings, which are necessary for this scenario for two main reasons:. 1. post processing parameters computed by SU2; 6. this mesh is part of a turbomachinery multi-block simulation. **To reproduce**; [config.txt](https://github.com/su2code/SU2/files/11416238/config.txt) -> cfg file; [mesh_out.txt](https://github.com/su2code/SU2/files/11416239/mesh_out.txt) -> mesh (_FFD box attached_). Thank you in advance for your support and your help which is always appreciated.; Cheers!. **Bug report checklist**; - [ ✓ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.1.5; - SU2 Version: v7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:3748,config,config,3748,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,2,['config'],['config']
Modifiability,"_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1148,refactor,refactoring,1148,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['refactor'],['refactoring']
Modifiability,"_Originally posted by @suargi in https://github.com/su2code/SU2/issues/1066#issuecomment-906376697_. Currently each variation/correction model has its unique name identification in SU2. In order to simultaneously combine multiple correction models to a given turbulence model I suggest the following:; - The config file option KIND_TURB_MODEL should specify only which turbulence model to use, i.e. SA or SST.; - Introduce an additional config file field TURB_MODEL_CORRECTIONS to indicate all variations/corrections to be considered. . Here an example,; % Specify turbulent model (NONE, SA, SST); KIND_TURB_MODEL= SA; % Turbulence model corrections (NONE, SA-EDW, SA-NOFT2, SA-COMP, SA-NEG, SA-QCR2000, SST-SUST); TURB_MODEL_CORRECTIONS= SA-EDW, SA-NEG. What do you think?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364:308,config,config,308,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364,2,['config'],['config']
Modifiability,"aafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6096,config,config,6096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,added custom MPI command set by user-defined environment variable,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335:57,variab,variable,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/335,1,['variab'],['variable']
Modifiability,"ainst `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1234,Config,Configuration,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Config'],['Configuration']
Modifiability,"alues. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5-11e8-9fc6-fbe9e89d144e.png); Figure 4: A comparison of the turbulent variable profiles at x~=1.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:2148,variab,variable,2148,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,2,['variab'],['variable']
Modifiability,"ame target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1490,config,configure,1490,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['config'],['configure']
Modifiability,"ample in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:2743,variab,variable,2743,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['variab'],['variable']
Modifiability,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/841:1672,config,config,1672,https://su2code.github.io,https://github.com/su2code/SU2/issues/841,2,['config'],['config']
Modifiability,"atic (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ====================================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:1451,config,configure,1451,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['config'],['configure']
Modifiability,ation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; Constant heat flux wall boundary marker(s): airfoil. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 14576 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 128|; | 1| farfield| 352|; +------------------------------------+; 14336 quadrilaterals. ------------------------- Geometry Preprocessing ------------------------; Setting point connectivity.; Renumbering points (Reverse Cuthill McKee Ordering).; Recomputing point connectivity.; Setting element connectivity.; Checking the numerical grid orientation.; There has been a re-orientation of the LINE surface elements.; Identifying edges and vertices.; Computing centers of gravity.; Setting the control volume struct,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:4358,variab,variables,4358,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['variab'],['variables']
Modifiability,"ation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/home/bu/SU2/bin""; export SU2_HOME=""/home/bu/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:9882,variab,variables,9882,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"bmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c:28:26: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:28:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFWithBoundtoSU2Sol':; ./sources/Pytho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:6543,variab,variable,6543,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:1003,parameteriz,parameterization,1003,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['parameteriz'],['parameterization']
Modifiability,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1125,adapt,adaption,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Modifiability,"calars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:1317,extend,extended,1317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['extend'],['extended']
Modifiability,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2635,extend,extended,2635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,2,"['extend', 'parameteriz']","['extended', 'parameterization']"
Modifiability,"circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2152,adapt,adapted,2152,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Modifiability,"concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:1017,config,configuration,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['config'],['configuration']
Modifiability,config file: Improve explanation of CFL number and ramp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/8:0,config,config,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/8,1,['config'],['config']
Modifiability,"cpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; ./src/util.cc(158): warning #3656: variable ""components"" may be used before its value is set; dst = components[component_count - 1];; ^. icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; ./src/ninja.cc(119): warning #177: function ""<unnamed>::NinjaMain::ToolMSVC"" was declared but never referenced; int ToolMSVC(const Options* options, int argc, char* argv[]);; ^. remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; wrote build.ninja.; bootstrap complete. rebuilding...; [2/29] CXX build/metrics.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [3/29] CXX build/clparser.o; icpc: command",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:4544,variab,variable,4544,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['variab'],['variable']
Modifiability,"d `WALL_TIME` is supposed to hold the . > Current average wall-clock time for one iteration. as per the documentation and dry-run output. However, the screen and history outputs of this field do not seem to actually represent this value. The screen-output of the 0th inner iteration of each time-iteration seems to represent the accumulated WCT since the last output (or restart file) was written. What the screen- and history-output of other inner iterations within a timestep mean is not obvious. See attached discussion for more details. **Expected behaviour**; During transient simulations the `WALL_TIME` history output should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1087,config,config,1087,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['config'],['config']
Modifiability,"d one of the members mentioned it may be a bug and post it here. . I am simulating flow over an inlet at hypersonic speeds (Mach 7) in 2D using the JST scheme. I have done a mesh convergence study with an inviscid simulation and the residuals go to machine accuracy for all the meshes and works fine. I am using the Navier-Stokes solver for the viscous simulations. I have 5 meshes (very_coarse, coarse, medium, fine, very_fine) to do a mesh convergence study. The very_coarse (VC) and coarse (C) meshes converge to a residual rho of -8.5 and -9 with Cauchy on drag = -10 orders of magnitude. The finer meshes barely converge to -4 to -5, before increasing -2 where they plateau. For all of the meshes (including the converged VC and C), there is an abnormal region with a higher Mach number at the leading edge (11 for VC and 9 for C). Following one of the discussion on the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind scheme, but these dont converge any further than -4. I want to conduct optimisation, for which the JST scheme shows good stability and convergence for adjoint problems. I have uploaded the config file, convergence history and images of the high Mach region around the leading edge here: https://drive.google.com/drive/folders/1HtBwS9rVuWn5IJoDpMCCpRyYehOTk9by?usp=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:1326,extend,extended,1326,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['extend'],['extended']
Modifiability,"d pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2369,config,configuration,2369,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['config'],['configuration']
Modifiability,"d to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:1272,extend,extended,1272,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['extend'],['extended']
Modifiability,"d"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10556,config,configuration,10556,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,['config'],"['config', 'configuration']"
Modifiability,"dary condition, which is implemented in the `CEulerSolver.cpp`, the `Inflow_Mach_old` returned is 0.0, causing the computation of the updated pressure to be incorrect. In practice, this drives the pressure lower and lower until it becomes negative. To find this, I added debug statements to `SU2_CFD/src/solvers/CEulerSolver.cpp` where the FAN_FACE_MACH BC logic is to iterate on the outflow pressure. . // cout << endl << ""PRINTING DEBUG INFO FOR FAN_FACE_MACH"" << endl;; // cout << ""Rank = "" << rank << endl;; // cout << ""Kind_Engine_Inflow = "" << Kind_Engine_Inflow << endl;; // cout << ""Target_Inflow_Mach = "" << Target_Inflow_Mach << endl;; // cout << ""Inflow_Pressure_old = "" << Inflow_Pressure_old << endl;; // cout << ""Inflow_Mach_old = "" << Inflow_Mach_old << endl;; // cout << ""Inflow_Pressure_inc = "" << Inflow_Pressure_inc << endl;; // cout << ""Inflow_Pressure = "" << Inflow_Pressure << endl;. which resulted in the output:. PRINTING DEBUG INFO FOR FAN_FACE_MACH; Rank = 1; Kind_Engine_Inflow = 1; Target_Inflow_Mach = 0.64; Inflow_Pressure_old = 2.36396; Inflow_Mach_old = 0; ... So it seems the main issue is that in the `config` the `Inflow_Mach` quantity is never getting updated. I _believe_ this should happen in `src/solvers/CEulerSolver.cpp` starting at line 2855 `if (Engine) { ... ` . Here, a call to `config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);` is completely missing. I'm not familiar with the code base, so I'm not sure if it is supposed to be updated elsewhere. However, inserting that line appears to fix the problem and the above logic around FAN_FACE_MACH begins working as expected. **Reproduce**; Perhaps the only thing about my problem worth mentioning is it is ran as axisymmetric. I'm running RANS, with the SST model. . **Desktop (please complete the following information):**; - OS: [e.g., Linux (Centos 7)]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 4.0.1]; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607:1240,config,config,1240,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607,2,['config'],['config']
Modifiability,"date an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4091,variab,variables,4091,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['variab'],['variables']
Modifiability,"differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2335,config,config,2335,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['config'],['config']
Modifiability,"do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:1313,config,config,1313,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['config'],['config']
Modifiability,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1262,config,config,1262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,5,['config'],"['config', 'config-tool']"
Modifiability,dv_size = project.config['DEFINITION_DV']['SIZE'],MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/378:18,config,config,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/378,1,['config'],['config']
Modifiability,"e a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new Vari",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2146,variab,variables,2146,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['variab'],['variables']
Modifiability,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:1093,config,configuration,1093,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,1,['config'],['configuration']
Modifiability,"e essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +--------------------------------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1623,adapt,adaptation,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['adapt'],['adaptation']
Modifiability,"e primal restarted and adjoint restarted now match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6040,coupling,coupling,6040,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['coupling'],['coupling']
Modifiability,"e running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1093,config,configs,1093,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['config'],['configs']
Modifiability,"e type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and continue developing following the current design until the project reaches a state where it will become very hard to go back and implement this feature. **Additional context**; 1. The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). 2. One last thing: Please, Please, we have to stop using raw pointers like that. I ran valgrind on the ""Inviscid Bump in a Channel"" case and discovered that 1Megs got definitely lost (leaked). Of course it will, if raw pointers get used in that way. I fully understand that many of the skilled programmers here come from C/Fortran background but please refrain from using raw pointers everywhere; and use C++ memory management objects (weak_ptr, unique_ptr, shared_ptr ... etc) instead. Make it a cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:2074,extend,extend,2074,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['extend'],['extend']
Modifiability,"e weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1273,refactor,refactoring,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['refactor'],['refactoring']
Modifiability,"e will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operato",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5037,polymorphi,polymorphism,5037,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['polymorphi'],['polymorphism']
Modifiability,"e; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]; Lower and upper bound for each independent variable: [(-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:1836,variab,variable,1836,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['variab'],['variable']
Modifiability,"eck the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive var",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1222,config,config,1222,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,2,['config'],['config']
Modifiability,"ed for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1929,adapt,adaption,1929,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Modifiability,"ehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when changes are made. This is more a test of SU2's fidelity. It would feature large grids and configuration files that can be run to convergence.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:2088,config,configuration,2088,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['config'],['configuration']
Modifiability,"emark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [26/29] CXX build/ninja.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; src/ninja.cc(119): warning #177: function ""<unnamed>::NinjaMain::ToolMSVC"" was declared but never referenced; int ToolMSVC(const Options* options, int argc, char* argv[]);; ^. remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [27/29] CXX build/build.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [29/29] LINK ninja; Traceback (most recent call last):; File ""./meson.py"", line 85, in <module>; sys.exit(mesonmain.main()); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 228, in main; return run(sys.argv[1:], launcher); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 219, in run; return CommandLineParser().run(args); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 44, in __init__; help_msg='Configure the project'); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 82, in add_command; p = self.subparsers.add_parser(name, help=help_msg, aliases=aliases, formatter_class=self.formatter); File ""/apps/cent7/xalt/libexec/argparse.py"", line 1085, in add_parser; parser = self._parser_class(**kwargs); TypeError: __init__() got an unexpected keyword argument 'aliases'; ```. **Desktop:**; - OS: CentOS x86-64 7.7; - C++ compiler and version: Intel C++ 17.0.1.132; - MPI implementation and version: IMPI 2017.1.132; - SU2 Version: v7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:11358,Config,Configure,11358,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['Config'],['Configure']
Modifiability,"ences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:1191,config,config,1191,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['config'],['config']
Modifiability,"ent for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1957,config,configuration,1957,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['config'],['configuration']
Modifiability,"ent them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:5497,config,config,5497,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['config'],['config']
Modifiability,epts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>;,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4617,config,config,4617,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"epts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Bui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:8756,Config,Configuration,8756,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Config'],['Configuration']
Modifiability,"er time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2063,config,config,2063,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"eration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1554,config,config,1554,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['config'],['config']
Modifiability,"estart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.cs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2921,config,config,2921,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"ested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1854,variab,variable,1854,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['variab'],['variable']
Modifiability,"esults obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hump.cfg.txt](https://github.com/su2code/SU2/files/3412070/turb_SA_hump.cfg.txt). **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04]; - C++ compiler and version: [g++ (GCC) 5.4.0]; - MPI implementation and version: [OpenMPI 1.10.2]; - SU2 Version: [v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:1823,config,config,1823,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['config'],['config']
Modifiability,"fPIC -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ UnitTests/test_driver.p/test_driver.cpp.o -MF UnitTests/test_driver.p/test_driver.cpp.o.d -o UnitTests/test_driver.p/test_driver.cpp.o -c ../UnitTests/test_driver.cpp; In file included from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10735:58: error: call to non-‘constexpr’ function ‘long int sysconf(int)’; 10735 | static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;; | ^~~~~~~~~~~; In file included from /usr/include/x86_64-linux-gnu/bits/sigstksz.h:24,; from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; /usr/include/unistd.h:640:17: note: ‘long int sysconf(int)’ declared here; 640 | extern long int sysconf (int __name) __THROW;; | ^~~~~~~; In file included from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10794:45: error: size of array ‘altStackMem’ is not an integral constant-expression; 10794 | char FatalConditionHandler::altStackMem[sigStackSize] = {};; | ^~~~~~~~~~~~; ```. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; In my case, this issue occurred when I upgraded my kubuntu version to 22.04; some info:; https://github.com/catchorg/Catch2/issues/2178; https://github.com/catchorg/Catch2/issues/2421. **Desktop (please complete the following information):. Project version: 7.3.1 ""Blackbird""; C compiler for the host machine: /usr/bin/mpicc.mpich (gcc 11.2.0 ""gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C linker for the host machine: /usr/bin/mpicc.mpich ld.bfd 2.38; C++ compiler for the host machine: /usr/bin/mpicxx.mpich (gcc 11.2.0 ""g++ (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C++ linker for the host machine: /usr/bin/mpicxx.mpich ld.bfd 2.38",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1724:2851,config,config,2851,https://su2code.github.io,https://github.com/su2code/SU2/issues/1724,1,['config'],['config']
Modifiability,"far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1296,variab,variables,1296,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,2,"['coupling', 'variab']","['couplings', 'variables']"
Modifiability,"fficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, in output_structure.cpp where values such as Total_Sens_AoA are called again to be printed to screen, these values differ from those calculated inside solver_adjoint_discrete.cpp. This to me suggests that the sensitivity values are altered elsewhere, but I cannot seem to find where this occurs. Any help would be appreciated. Kind regards,; Amir",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:1324,variab,variables,1324,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,3,['variab'],['variables']
Modifiability,"fix mutation download, exception catching to inform user, and more flexible names for manual downloads; Closes #1335",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1475:67,flexible,flexible,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1475,1,['flexible'],['flexible']
Modifiability,fix variable lenght arrays,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1147:4,variab,variable,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1147,1,['variab'],['variable']
Modifiability,fixed bug that masks config file errors as missing file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/176:21,config,config,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/176,1,['config'],['config']
Modifiability,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1205:314,variab,variables,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205,1,['variab'],['variables']
Modifiability,"flows. To perform such analysis, I need to firstly obtain a steady-state solution of the Navier-Stokes equations. This is not a problem when a physical steady-state exists but becomes cumbersome otherwise. In the latter case, I need to drive the flow to a steady-state numerically such that the flow becomes steady and linear stability analysis can be performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1322,config,configurations,1322,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['config'],['configurations']
Modifiability,"from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1499,refactor,refactoring,1499,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['refactor'],['refactoring']
Modifiability,g for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; --------------------------------------------------------------------,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5922,config,config,5922,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,g for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; --,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6139,config,config,6139,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"g minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribut",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2422,parameteriz,parameterization,2422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['parameteriz'],['parameterization']
Modifiability,ges/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source dir.; You should not do that but use relative paths instead. >To get include path to any directory relative to the current dir do. >incdir = include_directories(dirname). >After this incdir will contain both the current source dir as well as the; corresponding build dir. It can then be used in any subdirectory and; Meson will ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:1460,config,config,1460,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['config'],['config']
Modifiability,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4535,variab,variables,4535,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,2,['variab'],['variables']
Modifiability,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2867,adapt,adapted,2867,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['adapt'],['adapted']
Modifiability,"gs mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1965,config,config,1965,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['config'],['config']
Modifiability,"h adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1017,adapt,adaption,1017,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Modifiability,"h allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Discla",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:2597,Refactor,Refactoring,2597,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['Refactor'],['Refactoring']
Modifiability,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3142,config,configuring-code-scanning,3142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['config'],['configuring-code-scanning']
Modifiability,"he config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following cha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:2284,config,config,2284,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"he host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1885,Config,Configuration,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Config'],['Configuration']
Modifiability,"he limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2636,adapt,adaption,2636,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Modifiability,"he refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be dropped. CSysSolve_b::Solve_b now simply prepares the RHS of the adjoint system and calls Solve_b on the pointer it gets through the AD data handler. I decided not to shoehorn Solve_b into Solve as that would be a bit unreadable. I will now start tackling the templating part, and once I can demonstrate that that works, start bringing in Tim's refactoring. ## Related Work; #648 ; *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:2903,refactor,refactoring,2903,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"he solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1345,refactor,refactoring,1345,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"he wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1502,refactor,refactoring,1502,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['refactor'],['refactoring']
Modifiability,"here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:954,config,config,954,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,2,"['adapt', 'config']","['adapt', 'config']"
Modifiability,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:1073,config,config,1073,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,2,['config'],['config']
Modifiability,"his PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1173,variab,variables,1173,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['variab'],['variables']
Modifiability,"hon. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1432,variab,variable,1432,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variable']
Modifiability,"hon3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4526,config,config,4526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special v",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6719,variab,variables,6719,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['variab'],['variables']
Modifiability,"ialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.4.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:2310,variab,variables,2310,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['variab'],['variables']
Modifiability,"ield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2638,config,configuration,2638,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['config'],['configuration']
Modifiability,ig; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5577,Config,Configuring,5577,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,3,['Config'],['Configuring']
Modifiability,"iguration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:1301,config,config,1301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"ike Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ===================================================================; --- SU2-2.0.8/Common/src/geometry_structure.cpp; +++ SU2-2.0.8/Common/src/geometry_structure",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:1576,config,configure,1576,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['config'],['configure']
Modifiability,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1381,adapt,adapted,1381,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['adapt'],['adapted']
Modifiability,"ild; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0; - MPI implementation and version: msmpi 10.1.2; - SU2 Version: 7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1433,config,config-tool,1433,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,2,['config'],['config-tool']
Modifiability,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1885,variab,variables,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,2,"['Config', 'variab']","['Config', 'variables']"
Modifiability,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:27,config,config,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,7,['config'],['config']
Modifiability,ing size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Pie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6354,config,config,6354,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,ing.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6090,config,config,6090,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,inlet profile from file is not initialized from config.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1265:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1265,1,['config'],['config']
Modifiability,input file for time variable pitching movement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/644:20,variab,variable,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/644,1,['variab'],['variable']
Modifiability,"ion (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:1821,config,config,1821,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['config'],['config']
Modifiability,"ique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is workin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2240,config,configure,2240,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['config'],['configure']
Modifiability,"ironment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1561,layers,layers,1561,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['layers'],['layers']
Modifiability,"is -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: require",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:3355,Variab,VariableType,3355,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,['Variab'],['VariableType']
Modifiability,"is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:1567,VARIAB,VARIABLE,1567,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['VARIAB'],['VARIABLE']
Modifiability,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:1987,variab,variable,1987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"ized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/380",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1585,enhance,enhancements,1585,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['enhance'],['enhancements']
Modifiability,"k #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [15/29] CXX build/version.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [16/29] CXX build/dyndep.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [17/29] CXX build/clean.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [18/29] CXX build/util.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; src/util.cc(158): warning #3656: variable ""components"" may be used before its value is set; dst = components[component_count - 1];; ^. [19/29] CXX build/eval_env.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [20/29] CXX build/dyndep_parser.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [21/29] CXX build/subprocess-posix.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [22/29] CXX build/build_log.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [23/29] CXX build/graph.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1042:8294,variab,variable,8294,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042,1,['variab'],['variable']
Modifiability,"l last):; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/mesh_adaptation_amg.py"", line 38, in <module>; > import SU2; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: se",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1338,variab,variables,1338,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['variab'],['variables']
Modifiability,"le boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2418,config,configuration,2418,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['config'],['configuration']
Modifiability,"line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; ----------------------------------------------------------------------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4416,config,config,4416,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:2215,config,config,2215,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['config'],['config']
Modifiability,"listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I canno",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4776,config,config,4776,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"lsqp; constraints=cons, **opts); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 370, in _minimize_slsqp; raise ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 98, in function; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-package",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:2028,config,config,2028,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['config'],['config']
Modifiability,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:2576,variab,variable,2576,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,2,['variab'],['variable']
Modifiability,"ly contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4528,variab,variables,4528,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['variab'],['variables']
Modifiability,"measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.csv; done; ```. **Desktop (please complete the following information):**; - OS: openSUSE Leap 15.2; - C++ compiler and version: gcc 7.5.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:3316,config,config,3316,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability,"min_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4320,config,config,4320,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['config'],['config']
Modifiability,"mon/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3205,variab,variables,3205,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['variab'],['variables']
Modifiability,"mory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeRes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:1638,variab,variable,1638,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,"['Variab', 'variab']","['VariableBase', 'variable']"
Modifiability,"ms is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 200 Iterations; ```; -12.6894989871 -13.0272466772 -12.776380701 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.30259065606; ```. 200 Iterations (No CHT interface at all, i.e. still ""multizone"" but no coupling between the zones); ```; -12.6993664689 -13.037441642 -12.7880987801 -0.895636121058 -16.5806369934; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; ```. 2000 Iterations; ```; -17.5073098614 -17.7104073858 -17.9003808832 -3.34538088409 -9.30160418764; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.30160418771; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.425709713; ```. Also note that the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart that would prob be easier to debug. I of course also check",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:3516,coupling,coupling,3516,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['coupling'],['coupling']
Modifiability,"n and LM2015 for the respective model. The default is NONE.; 2. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1514,variab,variables,1514,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['variab'],['variables']
Modifiability,"n the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind scheme, but these dont converge any further than -4. I want to conduct optimisation, for which the JST scheme shows good stability and convergence for adjoint problems. I have uploaded the config file, convergence history and images of the high Mach region around the leading edge here: https://drive.google.com/drive/folders/1HtBwS9rVuWn5IJoDpMCCpRyYehOTk9by?usp=drive_link. The history file also contains information of the meshes (number of cells and y+ values). I uploaded one of the converging meshes (v_coarse.su2) and one of the diverging meshes (medium.su2). I used WEIGHTED_LEAST_SQUARES to help with the sharp edge; this decreases the Mach in the region but not by much (~9 for the very_coarse mesh). I have also run the RANS solver with JST, but there is no significant difference from using NS with WEIGHTED_LEAST_SQUARES; the Mach number in the region 8.74. Thank you,; RK. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:2188,config,config,2188,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['config'],['config']
Modifiability,"n't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop br",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1422,variab,variable,1422,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['variab'],['variable']
Modifiability,n/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; --------------------------------------------------,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5900,config,configure,5900,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['configure']
Modifiability,"n; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1581,config,config,1581,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['config'],['config']
Modifiability,"ne just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:5312,config,config,5312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['config'],['config']
Modifiability,"ng is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scaling",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4276,variab,variables,4276,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['variab'],['variables']
Modifiability,ng size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6446,config,config,6446,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"nja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ninja: Entering directory `C:\Users\qiang_zhang\Desktop\TestCases\SU2\build'; [1/767] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""D:/Anaconda/Library/lib/z.lib"" ""-Wl,--start-group"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; D:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [10/767] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Pint.c.obj; ninja: build stopped: subcommand failed.; ```. **To Reproduce**. I can sucess configure su2:; ![image](https://user-images.githubusercontent.com/29271051/159446256-dc866db4-9199-42d0-86b4-c38839753dd3.png); ![image](https://user-images.githubusercontent.com/29271051/159446307-354518f6-3382-401b-80c9-ac9e72f3d224.png). Then, I want to compile it by:; ```; ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ```; And the bug is reported:. ```; cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; ```; However, I have install the `msmpisdk.msi` and `msmpisetup.exe`. . ![image](https://user-images.githubusercontent.com/29271051/159446649-f606a381-0896-461c-bd09-9e0b9243ce2e.png). **Desktop (please complete the following information):**; - OS: win10; - C++ compiler and version: as the recommanded `gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)`; - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: Project version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1570:1085,config,configure,1085,https://su2code.github.io,https://github.com/su2code/SU2/issues/1570,1,['config'],['configure']
Modifiability,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1374,config,configuration,1374,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['config'],['configuration']
Modifiability,"nrunning.html). . Briefly ; 1. In SU2, The production term of the SST model uses incompressible assumptions. Is there some special reason? . 2. Always ignore the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation, is it a bug?. Here is the detail!. 1. . The Boussinesq relation of RANS is . ![image](https://user-images.githubusercontent.com/50565314/148731113-5d141cd0-bea0-4bc4-8f2a-e40932645844.png). Form [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html): ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is sometimes ignored for non-supersonic speed flows, and the **second term in parentheses is identically zero for incompressible flows**."". The production term of SST model is :. ![image](https://user-images.githubusercontent.com/50565314/148771167-b96d6d8f-b638-4efd-a6a3-6731ddb4f4a0.png). Rewrite the first term of the above equation :. ![image](https://user-images.githubusercontent.com/50565314/148731731-23cdd717-28d1-453c-a867-77c99494f86f.png). ![image](https://user-images.githubusercontent.com/50565314/148771466-f1613617-0502-4809-9861-a64f4ce0dee7.png). Finally, the production term becomes :; ; ![image](https://user-images.githubusercontent.com/50565314/148732458-c5d7bbd7-bd68-4416-bac2-979aa006512e.png). This term( ![image](https://user-images.githubusercontent.com/50565314/148732925-d66edf19-484a-4c4e-b518-3cff8ef935f0.png) ) becomes zero in incompressible flow(from continuity equation ![image](https://user-images.githubusercontent.com/50565314/148760571-f54c54eb-a897-4786-a859-c40aee873792.png) ), but the compressible flow is not zero. . In the SU2 source code( line 849 in [SU2_CFD/src/numerics/turbulent/turb_sources.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/turbulent/turb_sources.cpp)), the production term of SU2's SST model is ; ""pk = Eddy_Viscosity_i*Strai",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:1892,Rewrite,Rewrite,1892,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,1,['Rewrite'],['Rewrite']
Modifiability,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7339,variab,variables,7339,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,['variab'],['variables']
Modifiability,"o some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:3072,Variab,VariableBase,3072,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,3,['Variab'],"['VariableBase', 'VariableDerived']"
Modifiability,"o you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1586,config,configure,1586,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['config'],['configure']
Modifiability,oat... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Tech,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6400,config,config,6400,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"of the roughness elements and thus the distance to nearest wall is modified for all points based on the specified sand grain roughness. Additionally, the boundary condition at the wall is now not set to zero but a mixed condition (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:1549,config,config,1549,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['config'],['config']
Modifiability,"on here in a few sentences.*; Reimplemented pressure-based solver from feature_Pressure_based into the development branch. . ## Related Work; branch: feature_Pressure_based. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. Euler Solver: Incompressible cylinder case Pressure based (PB) vs Density Based (DB); ![incomp_cylinder](https://github.com/su2code/SU2/assets/22835014/c37cb127-88fe-4945-b712-c0ef450a3c43); ![incomp_cylinder_history](https://github.com/su2code/SU2/assets/22835014/3cf4c72c-445f-4086-87ea-162159d06cb7). Navier Stokes Solver: Incompressible Hydrofoil case Pressure-based (PB) vs Density Based (DB); ![NACA0012_hydrofoil](https://github.com/su2code/SU2/assets/22835014/cab1e73e-a60a-47af-aeef-ba50eb46e0eb); ![NACA0012_hydrofoil_history](https://github.com/su2code/SU2/assets/22835014/d71f09fd-73f9-44bb-861a-8f033408c6ba). Still TODOs; * Fixing RANS: Current CIncPBVariable inherits CVariable instead of CFlowVariable, if this is fixed RANS should work.; * Fixing MPI: The problem is currently unknown; * Fixing ND: non-dimensionalization is different in the two solvers. It should be harmonized.; * Multigrid: A PB multigrid is available but has not been tested.; * Small style changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210:1749,inherit,inherits,1749,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210,1,['inherit'],['inherits']
Modifiability,"on you'd like**; *A clear and concise description of what you want to happen.*. May I ask for the implementation of multizone discrete adjoint solve for turbomachinery? Or if there is any solution for it.; I found the work from Vitale's paper in 2020 includes such capability in SU2 at https://github.com/su2code/SU2/tree/ feature_turbomachinery, yet I fail to run the multizone case. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. I would like to try FADO for alternatives and may concern about the solver of the discrete adjoint for multizone problems in turbomachinery will still be needed. . **Additional context**; *Add any other context or screenshots about the feature request here.*. Here is the function I have added for turbo coeffcient output in CFlowOutput.cpp:. void CFlowOutput::AddTurbomachineryCoefficients(const CConfig* config) {; ; if (!config->GetBoolTurbomachinery()) return;; /// BEGIN_GROUP: AERO_COEFF, DESCRIPTION: Sum of the aerodynamic coefficients and forces on all surfaces (markers) set with MARKER_MONITORING.; /// DESCRIPTION: Drag coefficient; AddHistoryOutput(""ENTROPY_GENERATION"", ""ENTROPY_GENERATION"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Entropy generation coefficient of the whole turbomachinery"", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Lift coefficient; AddHistoryOutput(""TT_EFFICIENCY"", ""TT_EFFICIENCY"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Total efficiency coefficient "", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Sideforce coefficient; AddHistoryOutput(""PRESSURE_LOSS"", ""PRESSURE_LOSS"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Pressure ratio between outlet and inlet"", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Moment around the x-axis; AddHistoryOutput(""MASS_FLOW_RATIO"", ""MASS_FLOW_RATIO"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Mass flux ratio on the outlet"", HistoryFieldType::COEFFICIENT);. Add",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:1844,config,config,1844,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,2,['config'],['config']
Modifiability,"on. This is done using the three WRT_*_OVERWRITE flags mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutori",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1707,variab,variable,1707,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['variab'],['variable']
Modifiability,"one Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/par",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:1227,config,configMaster,1227,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['configMaster']
Modifiability,or sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been co,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5987,config,config,5987,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"osed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1010,Variab,Variable,1010,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,4,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"oupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1110,flexible,flexible,1110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['flexible'],['flexible']
Modifiability,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6345,config,configurations,6345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['config'],['configurations']
Modifiability,"parmetis.a externals/tecio/teciompisrc/libteciompi.a /usr/lib64/libpython3.10.so /usr/lib64/libz.a -lm -ldl -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi.so -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi_cxx.so -Wl,--start-group /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_intel_lp64.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_sequential.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,--start-group -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status; ninja: build stopped: subcommand failed. ```. I do use the -fPIC option for the compilation process but even if I remove it from the configuration execution line I still get the same linking error. **Desktop (please complete the following information):**. - OS: Linux (Fedora 35); - C++ 11.2.1 20220127 (Red Hat 11.2.1-9) (GCC); - MPI implementation and version: OpenMPI v4.1.1; - SU2 Version: v7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:16050,config,configuration,16050,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['config'],['configuration']
Modifiability,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:2291,config,config,2291,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,3,['config'],['config']
Modifiability,pes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6173,config,config,6173,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"pi/../../../generated/medi/ampiFunctions.hpp: In function ‘int medi::AMPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, const void*)’:; ../../../externals/medi/include/medi/ampi/../../../generated/medi/ampiFunctions.hpp:9732:49: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]; return MPI_T_pvar_write(session, handle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2740,config,config,2740,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"ps://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html) and to SA turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_MODEL. Values are LM for LM2009 implementation and LM2015 for the respective model. The default is NONE.; 2. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1144,coupling,coupling,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['coupling'],['coupling']
Modifiability,"py"", line 69, in main; options.step ); File ""../SU2_PY/shape_optimization.py"", line 107, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 102, in scipy_slsqp; epsilon = 1.0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1478,config,config,1478,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['config'],['config']
Modifiability,"r integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1202,variab,variables,1202,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variables']
Modifiability,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1507:111,Config,Configuring,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507,3,"['Config', 'config']","['Configuring', 'configuration', 'configure']"
Modifiability,resence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic Un,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6538,config,config,6538,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"rmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-tecio=yes \; --enable-parmetis=yes \; --enable-metis=yes \; --enable-cgns=yes \; --enable-PY_WRAPPER \; --enable-mpi \; --prefix=$HOME/share/SU2/6.1.0-AD ; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:1819,config,configure,1819,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,2,['config'],"['config', 'configure']"
Modifiability,"rn> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6692,config,config,6692,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"rom /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2499,config,config,2499,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:1779,config,config,1779,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['config'],['config']
Modifiability,"rrent nomenclature, i.e., SA will refer to the SA-noft2 variant. #### Spalart-Allmaras negative; The model is the same as the ""baseline"" version when the turbulence variable $\tilde \nu$ is greater than or equal to zero. The modified vorticity is modified to prevent it from acquiring negative values. When $\tilde \nu$ is negative a slightly different integral equation is solved. The viscous fluxes are redefined as well. The boundary conditions are the same as for the standard S-A. #### Spalart-Allmaras nonzero ft2 term; This is the approach corresponds to the faithful baseline. The equations are the same as for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:3615,variab,variables,3615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['variab'],['variables']
Modifiability,"s convergence; CONV_CAUCHY_EPS= 1E-8; %; % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= SnC_medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COO",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:9646,variab,variables,9646,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,2,['variab'],['variables']
Modifiability,"s show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2305,config,config,2305,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"se ValueError(""Objective function must return a scalar""); ValueError: Objective function must return a scalar; ```. when using python3:. ```; Traceback (most recent call last):; File ""/usr/lib/python3.6/shutil.py"", line 544, in move; os.rename(src, real_dst); FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Airfoil_Design_NACA0012_AOA/DESIGNS/DSN_006/DIRECT/solution_flow.dat' -> '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 146, in _eval; vals = eval_func(*inputs); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/design.py"", line 243, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 98, in function; aerodynamics( config, state ); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/eval/functions.py"", line 273, in aerodynamics; push.append(info.FILES['TARGET_HEATFLUX']); File ""/opt/SU2/SU2-6.0.0/build/bin/SU2/io/redirect.py"", line 250, in __exit__; shutil.move(old_name,new_name); File ""/usr/lib/python3.6/shutil.py"", line 558, in move; copy_function(src, real_dst); File ""/usr/lib/python3.6/shutil.py"", line 257, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/usr/lib/python3.6/shutil.py"", line 121, in copyfile; with open(dst, 'wb') as fdst:; FileNotFoundError: [Errno 2] No such file or directory: '/home/xu/TutorialSU2/Unconstrained_Shape_Design_of_a_Transonic_Inviscid_Airfoil_at_an_AOA/DESIGNS/DSN_006/solution_flow.dat'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/scipy/optimize/slsqp.py"", line 368, in _minimize_slsqp; fx = float(np.asarray(func(x))); File ""/usr/lib/python3/dist-packages/sci",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559:2169,config,config,2169,https://su2code.github.io,https://github.com/su2code/SU2/issues/559,1,['config'],['config']
Modifiability,"set_ffd_design_var.py script should output ALL FFD variables by default, rather than assume that some are fixed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/117:51,variab,variables,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/117,1,['variab'],['variables']
Modifiability,shape_optimization.py produced Keyerror: 'Config parameter not found: OPT_OBJECTIVE',MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:42,Config,Config,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,1,['Config'],['Config']
Modifiability,"sign shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1037,refactor,refactoring,1037,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['refactor'],['refactoring']
Modifiability,"sity/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1969,adapt,adaptive,1969,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Modifiability,size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the curren,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6262,config,config,6262,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be drop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1511,refactor,refactoring,1511,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evalua",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1212,config,config,1212,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['config'],['config']
Modifiability,"specially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request nee",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1981,extend,extends,1981,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['extend'],['extends']
Modifiability,"sure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1427,variab,variables,1427,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['variab'],['variables']
Modifiability,"system: RHEL 6.8; intel 2017 compiler system suite. ```; $ CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --enable-mpi \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-paral",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:138,config,config,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,3,['config'],"['config', 'configure']"
Modifiability,"t coefficient with respect to the closure coefficients of the SA turbulence model. I've created new variable names in the CConfig class for the SA closure coefficients and have modified the code so that it reads the values for the coefficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, in output_structure.cpp where values such as Total_Sens_AoA are called again to be printed to screen, these valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:956,variab,variables,956,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"t convergence criteria at iteration number; CONV_STARTITER= 10; %; % Number of elements to apply the criteria; CONV_CAUCHY_ELEMS= 100; %; % Epsilon to control the series convergence; CONV_CAUCHY_EPS= 1E-10; %. % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= NLU_Baseline.su2; %; % Mesh input file format (CGNS, NETCDF_ASCII); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_caradonna_tung_periodic.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; TABULAR_FORMAT= CSV; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing solution file frequency; OUTPUT_WRT_FREQ= 10; %. SCREEN_OUTPUT= (INNER_ITER, WALL_TIME, RMS_RES, FORCE_X, MOMENT_X); HISTORY_OUTPUT=(INNER_ITER, WALL_TIME, RMS_RES, AERO_COEFF)`. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; 3 OS were used:; Ubuntu 22.04 on AWS; WSL with ubuntu 20.04 LST; Windows. Latest MPICH package was used on the ubuntu versions; (basically the one that come with a 'sudo apt-get install mpich'); Latest mpiexec version is used on windows. The code wa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:9290,variab,variables,9290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,2,['variab'],['variables']
Modifiability,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:1758,adapt,adaptation,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['adapt'],['adaptation']
Modifiability,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1626,config,configuring-code-scanning,1626,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['config'],['configuring-code-scanning']
Modifiability,"tain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongate",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:1926,config,config,1926,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['config'],['config']
Modifiability,"terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1137,config,config,1137,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['config'],['config']
Modifiability,"the AD build fails with OpenMPI 4.0.0. I don't really know where the source of error is, but I suspect it's with CGNS and how it's handled by OpenMPI?. The error is as follows:. In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/geometry_structure.hpp:41,; from ../../../Common/lib/../src/fem_cgns_elements.cpp:34:; /usr/local/include/mpi.h:2633:20: note: declared here; OMPI_DECLSPEC int MPI_Keyval_free(int *keyval); ^~~~~~~~~~~~~~~; Makefile:1504: recipe for target '../src/libSU2_AD_a-fem_cgns_elements.o' failed; make[2]: *** [../src/libSU2_AD_a-fem_cgns_elements.o] Error 1; make[2]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD/Common/lib'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD'; Makefile:13: recipe for target 'install-SU2_AD' failed; make: *** [install-SU2_AD] Error 2. My pregonfigure command is:. `export CXXFLAGS=""-O3"" && sudo ./preconfigure.py --enable-autodiff --prefix=/home/akb1r19/CFD_Solvers/SU2/Instldir --enable-mpi --with-cc=/usr/local/bin/mpicc --with-cxx=/usr/local/bin/mpicxx &>preconfig.out`. Attaching the whole make output, and the preconfigure log files here too.; I have successfully been able to compile with AD on a cluster with Intel MPI (2017.4.239). I run the exact same commands and it compiles without issue. I haven't tried mpich yet to see if the error persists. Any thoughts?. Thanks,; Amir. [config.log.ad.txt](https://github.com/su2code/SU2/files/2926538/config.log.ad.txt); [config.log.base.txt](https://github.com/su2code/SU2/files/2926539/config.log.base.txt); [conf_SU2_AD.log.txt](https://github.com/su2code/SU2/files/2926540/conf_SU2_AD.log.txt); [conf_SU2_BASE.log.txt](https://github.com/su2code/SU2/files/2926541/conf_SU2_BASE.log.txt); [make.out.txt](https://github.com/su2code/SU2/files/2926542/make.out.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659:1595,config,config,1595,https://su2code.github.io,https://github.com/su2code/SU2/issues/659,4,['config'],['config']
Modifiability,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7653,config,config,7653,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"thout low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow varia",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3362,adapt,adaptation,3362,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['adapt'],['adaptation']
Modifiability,"tion related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1109,coupling,coupling,1109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['coupling'],['coupling']
Modifiability,"tion=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:8578,variab,variable,8578,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['variab'],['variable']
Modifiability,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:1984,config,config,1984,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['config'],['config']
Modifiability,"tructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-ove",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:1083,variab,variable,1083,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"try****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12608); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ==29692== Block was alloc'd at; ==29692== at 0x483850F: operator new[](unsigned long) (vg_replace_malloc.c:423); ==29692== by 0x99F3EA: COutput::SortVolumetricConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:15318); ==29692== by 0x9A14EC: COutput::SortConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:14736); ==29692== by 0x9CCD39: COutput::SetResult_Files_Parallel(CSolver*****, CGeometry****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12485); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ```. If I run it in parallel and request output from PARAVIEW (so volume files are not written out) the error disappears, but it happens again when PARAVIEW_BINARY output is requested, so it's definitely on the volume writing structure. . There have been some changes to output_structure.cpp since the last released version 6.2.0, I wonder if those are the reason. When running it with the released version the seg fault is not there. I haven't tried yet with the new output currently being finalized by @talbring. . **To Reproduce**; To reproduce, run the case below using ```SU2_CFD config.cfg```; [square_beam.zip](https://github.com/su2code/SU2/files/3289851/square_beam.zip). **Desktop (please complete the following information):**; - OS: Antergos Linux x86-64 kernel 5.0.5-arch1-1-ARCH; - C++ compiler and version: GCC 8.2.1; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: current develop vs v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713:3169,config,config,3169,https://su2code.github.io,https://github.com/su2code/SU2/issues/713,1,['config'],['config']
Modifiability,"ualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2263,Variab,VariableDerived,2263,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,4,['Variab'],"['VariableBase', 'VariableDerived']"
Modifiability,"ubmit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3628,flexible,flexible,3628,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['flexible'],['flexible']
Modifiability,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1573,variab,variables,1573,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variables']
Modifiability,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2212,config,config,2212,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['config'],['config']
Modifiability,updating settings in the _basic config file to match the _adv settings in the oneram6 constrained optimization tutorial folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['config'],['config']
Modifiability,upport >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6626,config,config,6626,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:2129,variab,variable,2129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['variab'],['variable']
Modifiability,"urm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1566,Config,Configured,1566,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['Config'],['Configured']
Modifiability,"usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 158, in __init__; self._update_fun(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 251, in _update_fun; self._update_fun_impl(); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 155, in update_fun; self.f = fun_wrapped(self.x); File ""/usr/local/python/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 137, in fun_wrapped; fx = fun(np.copy(x), *args); File ""/home/star/su2/bin/SU2/opt/scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""/home/star/su2/bin/SU2/opt/project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""/home/star/su2/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/home/star/su2/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/home/star/su2/bin/SU2/eval/design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""/home/star/su2/bin/SU2/eval/functions.py"", line 100, in function; multipoint( config, state ); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 675, in multipoint; func[i+1] = aerodynamics(konfig,ztate); File ""/home/star/su2/bin/SU2/eval/functions.py"", line 313, in aerodynamics; funcs[key] = state['FUNCTIONS'][key]; KeyError: 'AIRFOIL_AREA'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1808:2338,config,config,2338,https://su2code.github.io,https://github.com/su2code/SU2/issues/1808,2,['config'],['config']
Modifiability,variable properties (transport and thermodynamic) for compressible flows with any eos,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/794:0,variab,variable,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/794,1,['variab'],['variable']
Modifiability,"vbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x00000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3018,config,config,3018,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4390,variab,variables,4390,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['variab'],['variables']
Modifiability,"verflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./sources/Python3.7/convert.c:32:26: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~; ./sources/Python3.7/convert.c:32:7: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:6045,variab,variable,6045,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"when I use **CST parameters** to deform mesh,; My airfoil mesh has two boundaries (far: farfield, air: airfoil),; and I use the below naca0012.cfg:; ```; ...; DV_KIND= CST; DV_MARKER= ( air ); DV_PARAM= (0, 5, 7); DV_VALUE= 0.6; ...; ```; when I use ```SU2_DEF naca0012.cfg```; the output mesh is same as **original grid**, and the output message is :; ```; ...; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; Design Variable not implemented yet. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; CSysSolve::FGMRES(): system solved by initial guess. ----------------------- Write deformed grid files -----------------------; |SU2 mesh |naca0012.su2 |; |Paraview Multiblock |naca0012.vtm |; Adding any FFD information to the SU2 file. ------------------------- Solver Postprocessing -------------------------; Deleted CGeometry container.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted COutput class. Completed in 0.335274 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. it seems that my cst method didn't work.; How can I use CST method?; Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123:494,Variab,Variable,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123,1,['Variab'],['Variable']
Modifiability,"when running an optimisation process, when the solution files are arranged in the /DESIGNS/DSN_001/DIRECT/ directory tree, if the option RESTART_SOLUTION is set to YES in the cfg file, the solution does not restart from a previous restart file! instead it simply deletes all old designs and runs the process from scratch again. ; for example: if i want to run the first N design iterations, then stop the process on the Nth iteration and change something in the config file -e.g. cfl num- (including setting the restart option to YES), upon resubmitting the job all N design iterations are lost and the process starts again from DSN_001. this has proven to be quite an expensive problem for large 3D optimisations, and i am not sure wether this is a bug or something which has been hardcoded for a reason? ; it could be quite useful to have an option of where to restart the solution from? (e.g. restart from DSN_00X); Cheers, T.P.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/290:462,config,config,462,https://su2code.github.io,https://github.com/su2code/SU2/issues/290,1,['config'],['config']
Modifiability,"y name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2261,variab,variables,2261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['variab'],['variables']
Modifiability,"y"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2225,config,config,2225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['config'],['config']
Modifiability,"y, the dynamic mesh module allows either a translation or a rotation. The parameters involved are:; GRID_MOVEMENT= ROTATING_FRAME or TRANSLATION_RATE; MOTION_ORIGIN= x y z; ROTATION_RATE= p q r; TRANSLATION_RATE= u v w; The farfield MACH number is set to zero and MACH_MOTION is used instead. For example, a pull-up maneuver of an aircraft could be calculated as a steady CFD simulation and by looping around a MOTION_ORIGIN far away from the aircraft as discussed here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. However, a combination of pull-up and roll or yaw is not possible because the roll/yaw would require a different MOTION_ORIGIN that the pull-up. To simulate a free-flying aircraft (in a flight mechanical sense) which moves and rotates in all six degrees of freedom about the center of gravity, a combination of both translation and rotation is beneficial. In the proposed change, the ROTATING_FRAME now considers both parameters ROTATION_RATE and TRANSLATION_RATE given in the config file. Because the default translation rates are zero, there should be no effect for users who want pure rotation. The option STEADY_TRANSLATION now appears obsolete to me because the functionality is included in the ROTATING_FRAME, but I didn't want to remove the code because someone else might use that parameter? . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Fix #1595 (https://github.com/su2code/SU2/issues/1588)](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) is required to get proper nodal forces and has already been merged into the develop branch, thank you Pedro :). ## PR Checklist; *Put an X by all that apply. You can fill this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621:1155,config,config,1155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621,1,['config'],['config']
Modifiability,yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6037,config,config,6037,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The m,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6217,config,config,6217,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"ysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:3709,config,config,3709,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,2,['config'],['config']
Modifiability,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2646,variab,variable,2646,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variable']
Modifiability,"ython3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3509,variab,variable,3509,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:738,adapt,adaptation,738,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,2,"['adapt', 'variab']","['adaptation', 'variables']"
Modifiability,"~~I have noticed that some recent PR introduced in the develop the old config options for the time spectral implementation instead of the new harmonic balance implementation, introduced with PR #311.~~ The develop is fine, I close this issue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/363:71,config,config,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/363,1,['config'],['config']
Performance," (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05)]. Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in _minimize_slsqp; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 329, in <listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", li",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:3741,optimiz,optimize,3741,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['optimiz'],['optimize']
Performance," 0. ---. | ___ _ _ ___ |; | / **| | | |_ ) Release 3.2.8 ""eagle"" |; | \** \ |_| |/ / |; | |___/_**//_**| Aerodynamic Shape Optimization Script |; ## | |. NIT FC OBJFUN GNORM; 1 1 2.134595E-05 1.958771E-02; 2 6 2.134988E-05 1.958696E-02; 3 13 2.134986E-05 1.958707E-02; 4 24 2.134983E-05 1.958709E-02; 5 35 2.134980E-05 1.958711E-02; 6 46 2.134976E-05 1.958720E-02; 7 54 2.134978E-05 1.958710E-02; 8 65 2.134975E-05 1.958720E-02; 9 76 2.134973E-05 1.958720E-02; 10 87 2.134973E-05 1.958720E-02; 11 98 2.134970E-05 1.958720E-02; 12 104 2.134968E-05 1.958720E-02; 13 115 2.134967E-05 1.958720E-02; Traceback (most recent call last):; File ""shape_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:1462,optimiz,optimize,1462,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['optimiz'],['optimize']
Performance," 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update exa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7968,cache,cache,7968,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['cache'],['cache']
Performance," <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4694,cache,cache,4694,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance," <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5542,cache,cache,5542,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['cache']
Performance," Events: (none); Request: REQUEST_INFORMATION; ALGORITHM_AFTER_FORWARD: 1; FORWARD_DIRECTION: 0. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); Cell In[9], line 5; 2 from paraflow.simulation.su2 import Su2SimulationConfig ; 4 flasher = get_flasher(""air"", ""gas""); ----> 5 sim_results = run_simulation(; 6 axial_turbo_passage,; 7 params=SimulationParams(; 8 inlet_total_state=flasher.flash(P=87909, T=276, mach_number=0.4098), ; 9 target_outlet_static_state=flasher.flash(P=108932, T=296),; 10 translation=[; 11 np.array([0.0, 266, 0.0]),; 12 None; 13 ]; 14 ),; 15 working_directory=""./simulation_out"", ; 16 id=""1"",; 17 auto_delete=True,; 18 verbose=True,; 19 # num_procs=9,; 20 cfg=Su2SimulationConfig(; 21 custom_repo_url= ""https://github.com/su2code/SU2/tree/master"",; 22 version= ""8.0.0""; 23 ); 24 ); 25 sim_results.to_file(""./simulation_out/cached.pkl""); 27 # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/simulation.py:21, in run_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 19 if isinstance(cfg, Su2SimulationConfig):; 20 from paraflow.simulation.su2 import run_su2_simulation; ---> 21 sim_results = run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 23 return sim_results. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/su2.py:161, in run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 158 vtu_filename = vtu_filename.replace(""."", f""_{i}.""); 160 grids += [read_vtu_data(vtu_filename)]; --> 161 eval_values = pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1024, in read_csv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:2903,cache,cached,2903,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['cache'],['cached']
Performance," I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:1539,perform,performed,1539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,1,['perform'],['performed']
Performance," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2384,perform,performed,2384,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['perform'],['performed']
Performance," computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load stat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1222,optimiz,optimization,1222,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['optimiz'],['optimization']
Performance," computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. If you see in Paraview that they are pointing inwards, the sign of the drag result must be swapped; - Compute the SU2 drag result by multiplying CD and the non-dimensional factor that can be found in the forces_breakdown.dat file; - You should get the forces that I mentioned in the text above. To reproduce the optimization itself, use the .cfg and the mesh file attached. Furthermore, the .geo file was used to create the mesh file with gmsh. You can find the files here:; [issue.zip](https://github.com/su2code/SU2/files/9138486/issue.zip). **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: g++ (GCC) 8.2.0; - MPI implementation and version: intel 2019.6.166; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:2852,optimiz,optimization,2852,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['optimiz'],['optimization']
Performance," errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3134,cache,cache,3134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,3,['cache'],"['cache', 'caches']"
Performance," in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/REL",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5037,cache,cache,5037,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance," in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 142, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 206, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_slsqp_py.py"", line 374, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_optimize.py"", line 263, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 177, in __init__; self._update_grad(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 256, in _update_grad; self._update_grad_impl(); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 167, in update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:1326,optimiz,optimize,1326,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['optimiz'],['optimize']
Performance," interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2815,optimiz,optimization,2815,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['optimiz'],['optimization']
Performance," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:1500,perform,performs,1500,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,2,"['latency', 'perform']","['latency', 'performs']"
Performance," optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scalings, and how best to go about them. Ideally at the end of this discussion I can document some best practices (at least for the case of 3D shape optimization with FFD_CONTROL_POINTS). Any comments, suggestions, corrections, and/or insight would be super helpful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4720,optimiz,optimizer,4720,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,3,['optimiz'],"['optimization', 'optimizer']"
Performance," runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@acti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1457,cache,caches,1457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['cache'],['caches']
Performance," shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:1571,optimiz,optimization,1571,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['optimiz'],['optimization']
Performance," the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://gith",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8415,cache,cache,8415,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['cache'],['cache']
Performance," the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1584,optimiz,optimization,1584,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['optimiz'],['optimization']
Performance," the marker, i.e. the list of neighbor vertices for each vertex. In the previous version of the code, two vertices were considered ""neighbors"" if they were connected through an edge of a volume element (""volume neighbors""). We propose to consider vertices as ""neighbors"" only if they are connected through an edge of a surface element (""surface neighbors""). These two notions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:1184,perform,performs,1184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['perform'],['performs']
Performance," to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1779,optimiz,optimization,1779,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['optimiz'],['optimization']
Performance," using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with sl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1335,cache,cache,1335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['cache'],['cache']
Performance," way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2670,Perform,Perform,2670,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,4,"['Perform', 'optimiz']","['Perform', 'optimization']"
Performance, whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes;,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4142,cache,cached,4142,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['cache'],['cached']
Performance,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:954,perform,performed,954,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['perform'],['performed']
Performance,"# Patching CVE-2007-4559. Hi, we are security researchers from the Advanced Research Center at [Trellix](https://www.trellix.com). We have began a campaign to patch a widespread bug named CVE-2007-4559. CVE-2007-4559 is a 15 year old bug in the Python tarfile package. By using extract() or extractall() on a tarfile object without sanitizing input, a maliciously crafted .tar file could perform a directory path traversal attack. We found at least one unsantized extractall() in your codebase and are providing a patch for you via pull request. The patch essentially checks to see if all tarfile members will be extracted safely and throws an exception otherwise. We encourage you to use this patch or your own solution to secure against CVE-2007-4559. Further technical information about the vulnerability can be found in this [blog](https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html). If you have further questions you may contact us through this projects lead researcher [Kasimir Schulz](mailto:kasimir.schulz@trellix.com).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1847:388,perform,perform,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1847,1,['perform'],['perform']
Performance,"## **BUG DESCRIPTION**. ## **Flow scenario**; The following 3D-centrifugal impeller was designed and the flow field simulated. The aim was to optimize the blade leading edge with respect to outlet static pressure (_please note that the mesh is rotating_):. ![Screenshot (157)](https://user-images.githubusercontent.com/96534491/236707270-c9de2899-1a72-4876-975c-eabaec826c4f.png). The mesh is deliberately coarse being the intention to firstly perform the simulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:142,optimiz,optimize,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,2,"['optimiz', 'perform']","['optimize', 'perform']"
