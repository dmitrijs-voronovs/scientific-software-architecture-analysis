quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"'url'.; /// If 'url' is a '|'-separated list of file URLs, the 'URLs' are tried; /// sequentially in the specified order until a successful open.; /// If the file starts with ""root:"", ""roots:"" or ""rootk:"" a TNetFile object; /// will be returned, with ""http:"" a TWebFile, with ""file:"" a local TFile,; /// etc. (see the list of TFile plugin handlers in $ROOTSYS/etc/system.rootrc; /// for regular expressions that will be checked) and as last a local file will; /// be tried.; /// Before opening a file via TNetFile a check is made to see if the URL; /// specifies a local file. If that is the case the file will be opened; /// via a normal TFile. To force the opening of a local file via a; /// TNetFile use either TNetFile directly or specify as host ""localhost"".; /// The netopt argument is only used by TNetFile. For the meaning of the; /// options and other arguments see the constructors of the individual; /// file classes. In case of error, it returns a nullptr.; ///; /// For TFile implementations supporting asynchronous file open, see; /// TFile::AsyncOpen(...), it is possible to request a timeout with the; /// option <b>`TIMEOUT=<secs>`</b>: the timeout must be specified in seconds and; /// it will be internally checked with granularity of one millisec.; /// For remote files there is the option: <b>CACHEREAD</b> opens an existing; /// file for reading through the file cache. The file will be downloaded to; /// the cache and opened from there. If the download fails, it will be opened remotely.; /// The file will be downloaded to the directory specified by SetCacheFileDir().; ///; /// *The caller is responsible for deleting the pointer.*; /// In READ mode, a nullptr is returned if the file does not exist or cannot be opened.; /// In CREATE mode, a nullptr is returned if the file already exists or cannot be created.; /// In RECREATE mode, a nullptr is returned if the file can not be created.; /// In UPDATE mode, a nullptr is returned if the file cannot be created or opened.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:2351,UPDATE,UPDATE,2351,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['UPDATE'],['UPDATE']
Deployability,"). And, so,; // we might produce code like this:; //; // .Ltmp526:; // addis 3, 2, .LC12@toc@ha; // .Ltmp1628:; // std 2, 40(1); // ld 5, 0(27); // ld 2, 8(27); // ld 11, 16(27); // ld 3, .LC12@toc@l(3); // rldicl 4, 4, 0, 32; // mtctr 5; // bctrl; // ld 2, 40(1); //; // And there is nothing wrong with this code, as such, but there is a linker bug; // in binutils (https://sourceware.org/bugzilla/show_bug.cgi?id=18414) that will; // misoptimize this code sequence to this:; // nop; // std r2,40(r1); // ld r5,0(r27); // ld r2,8(r27); // ld r11,16(r27); // ld r3,-32472(r2); // clrldi r4,r4,32; // mtctr r5; // bctrl; // ld r2,40(r1); // because the linker does not know (and does not check) that the value in r2; // changed in between the instruction using the .LC12@toc@ha (TOC-relative); // relocation and the instruction using the .LC12@toc@l(3) relocation.; // Because it finds these instructions using the relocations (and not by; // scanning the instructions), it has been asserted that there is no good way; // to detect the change of r2 in between. As a result, this bug may never be; // fixed (i.e. it may become part of the definition of the ABI). GCC was; // updated to add extra dependencies on r2 to instructions using the @toc@l; // relocations to avoid this problem, and we'll do the same here.; //; // This is done as a separate pass because:; // 1. These extra r2 dependencies are not really properties of the; // instructions, but rather due to a linker bug, and maybe one day we'll be; // able to get rid of them when targeting linkers without this bug (and,; // thus, keeping the logic centralized here will make that; // straightforward).; // 2. There are ISel-level peephole optimizations that propagate the @toc@l; // relocations to some user instructions, and so the exta dependencies do; // not apply only to a fixed set of instructions (without undesirable; // definition replication).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp:1779,update,updated,1779,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,1,['update'],['updated']
Deployability,"); - Gaus(Double_t mean, Double_t sigma); - Rndm(); - Uniform(Double_t); - Landau(Double_t mean, Double_t sigma); - Poisson(Double_t mean); - Binomial(Int_t ntot, Double_t prob). Random numbers distributed according to 1-d, 2-d or 3-d distributions contained in TF1, TF2 or TF3 objects can also be; generated. For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x) you can do : \code{.cpp} TF1; *f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10); double r = f1->GetRandom(); \endcode or you can use the UNURAN; package. You need in this case to initialize UNURAN to the function you would like to generate. \code{.cpp} TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; \endcode. The techniques of using directly a TF1,2 or 3 function is powerful and; can be used to generate numbers in the defined range of the function.; Getting a number from a TF1,2,3 function is also quite fast.; UNURAN is a powerful and flexible tool which contains various methods for; generate random numbers for continuous distributions of one and multi-dimension.; It requires some set-up (initialization) phase and can be very fast when the distribution; parameters are not changed for every call. The following table shows some timings (in nanosecond/call); for basic functions, TF1 functions and using UNURAN obtained running; the tutorial math/testrandom.C; Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; Linux SLC4 64 bit and compiled with gcc 3.4. ~~~~; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 9",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:6941,continuous,continuous,6941,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['continuous'],['continuous']
Deployability,"* Note that the function may not consume the entire input, for example, because; * the output buffer is already full, in which case `input.pos < input.size`.; * The caller must check if input has been entirely consumed.; * If not, the caller must make some room to receive more compressed data,; * and then present again remaining input data.; * note: ZSTD_e_continue is guaranteed to make some forward progress when called,; * but doesn't guarantee maximal forward progress. This is especially relevant; * when compressing with multiple threads. The call won't block if it can; * consume some input, but if it can't it will wait for some, but not all,; * output to be flushed.; * @return : provides a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * Calling ZSTD_compressStream2() with ZSTD_e_end instructs to finish a frame.; * It will perform a flush and write frame epilogue.; * The epilogue is required for decoders to consider",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:2309,update,updated,2309,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['update'],['updated']
Deployability,"* ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x"", 0., 5.);; * x.setBins(10);; *; * // <create dataset and model>; *; * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2806,integrat,integrator,2806,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integrator']
Deployability,"************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1656,integrat,integrator,1656,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integrator']
Deployability,"******************************; // For selecting load and store instructions, the addressing modes are defined; // as ComplexPatterns in PPCInstrInfo.td, which are then utilized in the TD; // patterns to match the load the store instructions.; //; // The TD definitions for the addressing modes correspond to their respective; // Select<AddrMode>Form() function in PPCISelDAGToDAG.cpp. These functions rely; // on SelectOptimalAddrMode(), which calls computeMOFlags() to compute the; // address mode flags of a particular node. Afterwards, the computed address; // flags are passed into getAddrModeForFlags() in order to retrieve the optimal; // addressing mode. SelectOptimalAddrMode() then sets the Base and Displacement; // accordingly, based on the preferred addressing mode.; //; // Within PPCISelLowering.h, there are two enums: MemOpFlags and AddrMode.; // MemOpFlags contains all the possible flags that can be used to compute the; // optimal addressing mode for load and store instructions.; // AddrMode contains all the possible load and store addressing modes available; // on Power (such as DForm, DSForm, DQForm, XForm, etc.); //; // When adding new load and store instructions, it is possible that new address; // flags may need to be added into MemOpFlags, and a new addressing mode will; // need to be added to AddrMode. An entry of the new addressing mode (consisting; // of the minimal and main distinguishing address flags for the new load/store; // instructions) will need to be added into initializeAddrModeMap() below.; // Finally, when adding new addressing modes, the getAddrModeForFlags() will; // need to be updated to account for selecting the optimal addressing mode.; // *****************************************************************************; /// Initialize the map that relates the different addressing modes of the load; /// and store instructions to a set of flags. This ensures the load/store; /// instruction is correctly matched during instruction selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:1684,update,updated,1684,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['update'],['updated']
Deployability,"********************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::BayesianCalculator; \ingroup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:1153,integrat,integrated,1153,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrated']
Deployability,", *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1459,integrat,integrator,1459,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,['integrat'],['integrator']
Deployability,", define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4951,configurat,configuration,4951,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['configurat'],['configuration']
Deployability,", i.e.; /// \f[; /// \int_{x_\mathrm{lo}}^x f(x') \, \mathrm{d}x'; /// \f]; ///; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over. The default strategy to calculate the running integrals is; ///; /// - If the integrand (this object) supports analytical integration, construct an integral object; /// that calculate the running integrals value by calculating the analytical integral each; /// time the running integral object is evaluated; ///; /// - If the integrand (this object) requires numeric integration to construct the running integral; /// create an object of class RooNumRunningInt which first samples the entire function and integrates; /// the sampled function numerically. This method has superior performance as there is no need to; /// perform a full (numeric) integration for each evaluation of the running integral object, but; /// only when one of its parameters has changed.; ///; /// The choice of strategy can be changed with the ScanAll() argument, which forces the use of the; /// scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone(); /// argument which forces the 'integrate each evaluation' technique for all use cases. The sampling; /// granularity for the scanning technique can be controlled with the ScanParameters technique; /// which allows to specify the number of samples to be taken, and to which order the resulting; /// running integral should be interpolated. The default values are 1000 samples and 2nd order; /// interpolation.; ///; /// The following named arguments are accepted; /// | | Effect on integral creation; /// |-|-------------------------------; /// | `SupNormSet(const RooArgSet&)` | Observables over which should be normalized _in addition_ to the integration observables; /// | `ScanParameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1186,integrat,integration,1186,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Deployability,", no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3972,integrat,integration,3972,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4237,configurat,configuration,4237,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configuration']
Deployability,", under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a pass to prepare loops for ppc preferred addressing; // modes, leveraging different instruction form. (eg: DS/DQ form, D/DS form with; // update); // Additional PHIs are created for loop induction variables used by load/store; // instructions so that preferred addressing modes can be used.; //; // 1: DS/DQ form preparation, prepare the load/store instructions so that they; // can satisfy the DS/DQ form displacement requirements.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(p + i + 5);; // unsigned long x2 = *(unsigned long *)(p + i + 9);; // }; //; // to look like this:; //; // unsigned NewP = p + 5;; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(i + NewP);; // unsigned long x2 = *(unsigned long *)(i + NewP + 4);; // }; //; // 2: D/DS form with update preparation, prepare the load/store instructions so; // that we can use update form to do pre-increment.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i); // array[i] = c;; //; // to look like this:; //; // T *p = array[-1];; // for (int i = 0; i < n; ++i); // *++p = c;; //; // 3: common multiple chains for the load/stores with same offsets in the loop,; // so that we can reuse the offsets and reduce the register pressure in the; // loop. This transformation can also increase the loop ILP as now each chain; // uses its own loop induction add/addi. But this will increase the number of; // add/addi in the loop.; //; // Generically, this means transforming loops like this:; //; // char *p;; // A1 = p + base1; // A2 = p + base1 + offset; // B1 = p + base2; // B2 = p + base2 + offs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:1278,update,update,1278,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,2,['update'],['update']
Deployability,"- RooAbsData::Expected: Expected Poisson error (\f$ \sqrt{n_\text{expected}} \f$ from the PDF).; /// - RooAbsData::SumW2: The observed error from the square root of the sum of weights,; /// i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; /// - RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \f$ n_\text{observed} \f$.; /// If for a given bin \f$ n_\text{expected} \f$ is lower than the \f$ n_\text{observed} \f$, the lower uncertainty is taken; /// (e.g., the difference between the mean and the 16 % quantile).; /// If \f$ n_\text{expected} \f$ is higher than \f$ n_\text{observed} \f$, the higher uncertainty is taken; /// (e.g., the difference between the 84 % quantile and the mean).; /// - RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data.; /// <tr><td>; /// `Extended()` <td> Use expected number of events of an extended p.d.f as normalization; /// <tr><td>; /// NumCPU() <td> Activate parallel processing feature; /// <tr><td>; /// Range() <td> Calculate \f$ \chi^2 \f$ only in selected region; /// <tr><td>; /// Verbose() <td> Verbose output of GOF framework; /// <tr><td>; /// IntegrateBins() <td> Integrate PDF within each bin. This sets the desired precision. Only useful for binned fits.; /// <tr><td> `SumCoefRange()` <td> Set the range in which to interpret the coefficients of RooAddPdf components; /// <tr><td> `SplitRange()` <td> Fit ranges used in different categories get named after the category.; /// Using `Range(""range""), SplitRange()` as switches, different ranges could be set like this:; /// ```; /// myVariable.setRange(""range_pi0"", 135, 210);; /// myVariable.setRange(""range_gamma"", 50, 210);; /// ```; /// <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Define projected observables.; /// Arguments can either be multiple RooRealVar or a single RooArgSet containing them.; ///; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1634,Integrat,IntegrateBins,1634,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['Integrat'],"['Integrate', 'IntegrateBins']"
Deployability,"- TypeBasedAliasAnalysis.cpp - Type-Based Alias Analysis -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TypeBasedAliasAnalysis pass, which implements; // metadata-based TBAA.; //; // In LLVM IR, memory does not have types, so LLVM's own type system is not; // suitable for doing TBAA. Instead, metadata is added to the IR to describe; // a type system of a higher level language. This can be used to implement; // typical C/C++ TBAA, but it can also be used to implement custom alias; // analysis behavior for other languages.; //; // We now support two types of metadata format: scalar TBAA and struct-path; // aware TBAA. After all testing cases are upgraded to use struct-path aware; // TBAA and we can auto-upgrade existing bc files, the support for scalar TBAA; // can be dropped.; //; // The scalar TBAA metadata format is very simple. TBAA MDNodes have up to; // three fields, e.g.:; // !0 = !{ !""an example type tree"" }; // !1 = !{ !""int"", !0 }; // !2 = !{ !""float"", !0 }; // !3 = !{ !""const float"", !2, i64 1 }; //; // The first field is an identity field. It can be any value, usually; // an MDString, which uniquely identifies the type. The most important; // name in the tree is the name of the root node. Two trees with; // different root node names are entirely disjoint, even if they; // have leaves with common names.; //; // The second field identifies the type's parent node in the tree, or; // is null or omitted for a root node. A type is considered to alias; // all of its descendants and all of its ancestors in the tree. Also,; // a type is considered to alias all types in other trees, so that; // bitcode produced from multiple front-ends is handled conservatively.; //; // If th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp:953,upgrade,upgraded,953,interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TypeBasedAliasAnalysis.cpp,2,['upgrade'],"['upgrade', 'upgraded']"
Deployability,"---------------------===//; //; // Overview:; // ---------; // Function Specialization is a transformation which propagates the constant; // parameters of a function call from the caller to the callee. It is part of; // the Inter-Procedural Sparse Conditional Constant Propagation (IPSCCP) pass.; // The transformation runs iteratively a number of times which is controlled; // by the option `funcspec-max-iters`. Running it multiple times is needed; // for specializing recursive functions, but also exposes new opportunities; // arising from specializations which return constant values or contain calls; // which can be specialized.; //; // Function Specialization supports propagating constant parameters like; // function pointers, literal constants and addresses of global variables.; // By propagating function pointers, indirect calls become direct calls. This; // exposes inlining opportunities which we would have otherwise missed. That's; // why function specialization is run before the inliner in the optimization; // pipeline; that is by design.; //; // Cost Model:; // -----------; // The cost model facilitates a utility for estimating the specialization bonus; // from propagating a constant argument. This is the InstCostVisitor, a class; // that inherits from the InstVisitor. The bonus itself is expressed as codesize; // and latency savings. Codesize savings means the amount of code that becomes; // dead in the specialization from propagating the constant, whereas latency; // savings represents the cycles we are saving from replacing instructions with; // constant values. The InstCostVisitor overrides a set of `visit*` methods to; // be able to handle different types of instructions. These attempt to constant-; // fold the instruction in which case a constant is returned and propagated; // further.; //; // Function pointers are not handled by the InstCostVisitor. They are treated; // separately as they could expose inlining opportunities via indirect call; // promoti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h:1379,pipeline,pipeline,1379,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,1,['pipeline'],['pipeline']
Deployability,". Clicking the; goto button has the same effect. A TGTable is created by first creating an appropriate; TVirtualTableInterface from the data that needs visualization and; then creating the TGTable using this interface. A simple macro to use a TGTable with a TGSimpleTableInterface:. ~~~; {; Int_t i = 0, j = 0;; UInt_t nrows = 6, ncolumns = 5;; Double_t** data = new Double_t*[nrows];; for (i = 0; i < nrows; i++) {; data[i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1] = 3.01;; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~. It is also possible to visualise data from a tree. A simple macro; showing the use of a TTreeTableInterface follows. ~~~; {; // Open a root file.; TFile *file = new TFile(""$ROOTSYS/tutorials/hsimple.root"");; // Load a tree from the file; TNtuple *ntuple = (TNtuple *)file->Get(""ntuple"");. // Create an interface; TTreeTableInterface *iface = new TTreeTableInterface(ntuple);. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface, 10, 6);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. // Set a selection; iface->SetSelection(""px > 0."");;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:2014,update,update,2014,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,2,"['Update', 'update']","['Update', 'update']"
Deployability,". To print only the name of the histogram do:; ~~~ {.cpp}; gStyle->SetOptStat(""n"");; ~~~. The default value is:; ~~~ {.cpp}; gStyle->SetOptStat(""nemr"");; ~~~. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:; ~~~ {.cpp}; Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); ~~~. because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:; ~~~ {.cpp}; h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");; ~~~. Without `gPad->Update()` the line `h->FindObject(""stats"")`; returns a null pointer. When a histogram is drawn with the option ""`SAME`"", the statistics box; is not drawn. To force the statistics box drawing with the option; ""`SAME`"", the option ""`SAMES`"" must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (""`h`"" being the pointer to the histogram):; ~~~ {.cpp}; Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position; ~~~. To remove the border or shadow of the TPaveStats, use the function TPave::SetBorderSize. To change the type of information for an histogram with an existing; `TPaveStats` one should do:; ~~~ {.cpp}; st->SetOptStat(mode);; ~~~; Where ""`mode`"" has the same meaning than when calling; `gStyle->SetOptStat(mode)` (see above). One can delete the statistics box for a histogram `TH1* h` with:; ~~~ {.cpp}; h->SetStats(0); ~~~. and activate it aga",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx:3442,Update,Update,3442,graf2d/graf/src/TPaveStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx,1,['Update'],['Update']
Deployability,"..; // %3 = ld ...; // %4 = ld ...; // The algorithm below does the following:; // In the beginning, the RegisterMap will have been populated with the virtual; // registers %2, and %3, the DbgValueSinkCandidates and the InstrMap will be; // empty. DbgValueSinkCandidates = {}, RegisterMap = {2 -> {}, 3 -> {}},; // InstrMap {}; // -> DBG_VALUE %2, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After the first DBG_VALUE (denoted with an X) is processed, the; // DbgValueSinkCandidates and InstrMap will be populated and the RegisterMap; // entry for %2 will be populated as well. DbgValueSinkCandidates = {A -> X},; // RegisterMap = {2 -> {X}, 3 -> {}}, InstrMap {X -> 2}; // DBG_VALUE %2, A, .... # X; // -> DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After the DBG_VALUE Y is processed, the DbgValueSinkCandidates is updated; // to now hold Y for A and the RegisterMap is also updated to remove X from; // %2, this is because both X and Y describe the same debug variable A. X is; // also updated to have a $noreg as the first operand.; // DbgValueSinkCandidates = {A -> {Y}}, RegisterMap = {2 -> {}, 3 -> {}},; // InstrMap = {X-> 2}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // -> DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After DBG_VALUE Z is processed, the DbgValueSinkCandidates is updated to; // hold Z fr A, the RegisterMap is updated to hold Z for %3, and the InstrMap; // is updated to have Z mapped to %3. This is again because Z describes the; // debug variable A, Y is not updated to have $noreg as first operand because; // its first operand is an immediate, not a register.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // -> %2 = ld .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:2826,update,updated,2826,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,2,['update'],['updated']
Deployability,".0.4 10004; * 1.0.4a-f 10005; * 1.0.5 (+ 2 patches) 10005; * 1.0.5a-d 10006; * 1.0.5e-r 10100 (not source compatible); * 1.0.5s-v 10006 (not binary compatible); * 1.0.6 (+ 3 patches) 10006 (still binary incompatible); * 1.0.6d-f 10007 (still binary incompatible); * 1.0.6g 10007; * 1.0.6h 10007 10.6h (testing xy.z so-numbering); * 1.0.6i 10007 10.6i; * 1.0.6j 10007 2.1.0.6j (incompatible with 1.0.0); * 1.0.7beta11-14 DLLNUM 10007 2.1.0.7beta11-14 (binary compatible); * 1.0.7beta15-18 1 10007 2.1.0.7beta15-18 (binary compatible); * 1.0.7rc1-2 1 10007 2.1.0.7rc1-2 (binary compatible); * 1.0.7 1 10007 (still compatible); * ...; * 1.0.69 10 10069 10.so.0.69[.0]; * ...; * 1.2.59 13 10259 12.so.0.59[.0]; * ...; * 1.4.20 14 10420 14.so.0.20[.0]; * ...; * 1.5.30 15 10530 15.so.15.30[.0]; * ...; * 1.6.40 16 10640 16.so.16.40[.0]; *; * Henceforth the source version will match the shared-library major and; * minor numbers; the shared-library major version number will be used for; * changes in backward compatibility, as it is intended.; * The PNG_LIBPNG_VER macro, which is not used within libpng but is; * available for applications, is an unsigned integer of the form XYYZZ; * corresponding to the source version X.Y.Z (leading zeros in Y and Z).; * Beta versions were given the previous public release number plus a; * letter, until version 1.0.6j; from then on they were given the upcoming; * public release number plus ""betaNN"" or ""rcNN"".; *; * Binary incompatibility exists only when applications make direct access; * to the info_ptr or png_ptr members through png.h, and the compiled; * application is loaded with a different version of the library.; *; * DLLNUM will change each time there are forward or backward changes; * in binary compatibility (e.g., when a new feature is added).; *; * See libpng.txt or libpng.3 for more information. The PNG specification; * is available as a W3C Recommendation and as an ISO/IEC Standard; see; * <https://www.w3.org/TR/2003/REC-PNG-20031110/>; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:9803,release,release,9803,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['release'],['release']
Deployability,".; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the bottleneck analysis view.; ///; /// This view internally observes backend pressure increase events in order to; /// identify problematic data dependencies and processor resource interferences.; ///; /// Example of bottleneck analysis report for a dot-product on X86 btver2:; ///; /// Cycles with backend pressure increase [ 40.76% ]; /// Throughput Bottlenecks: ; /// Resource Pressure [ 39.34% ]; /// - JFPA [ 39.34% ]; /// - JFPU0 [ 39.34% ]; /// Data Dependencies: [ 1.42% ]; /// - Register Dependencies [ 1.42% ]; /// - Memory Dependencies [ 0.00% ]; ///; /// According to the example, backend pressure increased during the 40.76% of; /// the simulated cycles. In particular, the major cause of backend pressure; /// increases was the contention on floating point adder JFPA accessible from; /// pipeline resource JFPU0.; ///; /// At the end of each cycle, if pressure on the simulated out-of-order buffers; /// has increased, a backend pressure event is reported.; /// In particular, this occurs when there is a delta between the number of uOps; /// dispatched and the number of uOps issued to the underlying pipelines.; ///; /// The bottleneck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; /// +----> 2. vhaddps %xmm3, %xmm3, %xmm4 ## REGISTER dependency: %xmm3; /// |;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:1221,pipeline,pipeline,1221,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['pipeline'],['pipeline']
Deployability,".e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present in given dataset projection of PDF is achieved by constructing an average over all observable; /// values in given set. Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of; /// observables in dataset 'd' for projection through data averaging; /// <tr><td> `ProjectionRange(const char* rn)` <td> When projecting the PDF onto the plot axis, it is usually integrated; /// over the full range of the invisible variables. The ProjectionRange overrides this.; /// This is useful if the PDF was fitted in a limited range in y, but it is now projected onto x. If; /// `ProjectionRange(""<name of fit range>"")` is passed, the projection is normalised correctly.; ///; /// <tr><th> Type of argument <th> Plotting control; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; /// <tr><td> `LineWidth(Int_t width)` <td> Select line with in pixels, default is 3; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected,; /// also use VLines() to add vertical downward lines at end of curve to ensu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5211,integrat,integrated,5211,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrated']
Deployability,".html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9298,configurat,configuration,9298,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['configurat'],['configuration']
Deployability,"/ propagate the shadow bits through some of the arithmetic; /// instruction (including MOV), store the shadow bits on every memory; /// write, report a bug on some other instructions (e.g. JMP) if the; /// associated shadow is poisoned.; ///; /// But there are differences too. The first and the major one:; /// compiler instrumentation instead of binary instrumentation. This; /// gives us much better register allocation, possible compiler; /// optimizations and a fast start-up. But this brings the major issue; /// as well: msan needs to see all program events, including system; /// calls and reads/writes in system libraries, so we either need to; /// compile *everything* with msan or use a binary translation; /// component (e.g. DynamoRIO) to instrument pre-built libraries.; /// Another difference from Memcheck is that we use 8 shadow bits per; /// byte of application memory and use a direct shadow mapping. This; /// greatly simplifies the instrumentation code and avoids races on; /// shadow updates (Memcheck is single-threaded so races are not a; /// concern there. Memcheck uses 2 shadow bits per byte with a slow; /// path storage that uses 8 bits per byte).; ///; /// The default value of shadow is 0, which means ""clean"" (not poisoned).; ///; /// Every module initializer should call __msan_init to ensure that the; /// shadow memory is ready. On error, __msan_warning is called. Since; /// parameters and return values may be passed via registers, we have a; /// specialized thread-local shadow for return values; /// (__msan_retval_tls) and parameters (__msan_param_tls).; ///; /// Origin tracking.; ///; /// MemorySanitizer can track origins (allocation points) of all uninitialized; /// values. This behavior is controlled with a flag (msan-track-origins) and is; /// disabled by default.; ///; /// Origins are 4-byte values created and interpreted by the runtime library.; /// They are stored in a second shadow mapping, one 4-byte value for 4 bytes; /// of application memor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:1754,update,updates,1754,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['update'],['updates']
Deployability,/*	free(buffer); */; /* Step 6: Finish compression and release JPEG compression object*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:55,release,release,55,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,1,['release'],['release']
Deployability,"/* !STDIO */; /* This function is called when there is a warning, but the library thinks; * it can continue anyway. Replacement functions don't have to do anything; * here if you don't want to. In the default configuration, png_ptr is; * not used, but it is passed in case it may be useful.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:209,configurat,configuration,209,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['configurat'],['configuration']
Deployability,"/* ""Connection: Upgrade"" without ""Upgrade"" Header --> Error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,Upgrade,Upgrade,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['Upgrade'],['Upgrade']
Deployability,/* # of hist cells in update box */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:22,update,update,22,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* -*- C++ -*-; * This code is derived from (original license follows):; *; * This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.; * MD5 Message-Digest Algorithm (RFC 1321).; *; * Homepage:; * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5; *; * Author:; * Alexander Peslyak, better known as Solar Designer <solar at openwall.com>; *; * This software was written by Alexander Peslyak in 2001. No copyright is; * claimed, and the software is hereby placed in the public domain.; * In case this attempt to disclaim copyright and place the software in the; * public domain is deemed null and void, then the software is; * Copyright (c) 2001 Alexander Peslyak and it is hereby released to the; * general public under the following terms:; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted.; *; * There's ABSOLUTELY NO WARRANTY, express or implied.; *; * See md5.c for more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h:728,release,released,728,interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,1,['release'],['released']
Deployability,"/* --- Scan all graphs and update the canvas --- */; // ....",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx:27,update,update,27,test/periodic/XSVarious.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx,1,['update'],['update']
Deployability,"/* --- simple histogram functions --- */; /*! HIST_count():; * Provides the precise count of each byte within a table 'count'.; * 'count' is a table of unsigned int, of minimum size (*maxSymbolValuePtr+1).; * Updates *maxSymbolValuePtr with actual largest symbol value detected.; * @return : count of the most frequent symbol (which isn't identified).; * or an error code, which can be tested using HIST_isError().; * note : if return == srcSize, there is only one symbol.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h:209,Update,Updates,209,builtins/zstd/compress/hist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.h,1,['Update'],['Updates']
Deployability,/* ---------------------------------------------------------------------- */; /* release resources */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/visualinfo.c:81,release,release,81,builtins/glew/src/visualinfo.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/visualinfo.c,1,['release'],['release']
Deployability,"/* 11.4. PATCH method; 		 * This method is not supported for static resources,; 		 * only for scripts (Lua, CGI) and callbacks. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,PATCH,PATCH,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PATCH'],['PATCH']
Deployability,"/* ==========================================================================; Assembly Syntax: Rd32=togglebit(Rs32,#u5); C Intrinsic Prototype: Word32 Q6_R_togglebit_RI(Word32 Rs, Word32 Iu5); Instruction Type: S_2op; Execution Slots: SLOT23; ========================================================================== */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h:101,toggle,togglebit,101,interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,1,['toggle'],['togglebit']
Deployability,"/* ==========================================================================; Assembly Syntax: Rd32=togglebit(Rs32,Rt32); C Intrinsic Prototype: Word32 Q6_R_togglebit_RR(Word32 Rs, Word32 Rt); Instruction Type: S_3op; Execution Slots: SLOT23; ========================================================================== */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h:101,toggle,togglebit,101,interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/hexagon_protos.h,1,['toggle'],['togglebit']
Deployability,"/* ===========================================================================; * Compute the optimal bit lengths for a tree and update the total bit length; * for the current block.; * IN assertion: the fields freq and dad are set, heap[heap_max] and; * above are the tree nodes sorted by increasing frequency.; * OUT assertions: the field len is set to the optimal bit length, the; * array bl_count contains the frequencies for each bit length.; * The length opt_len is updated; static_len is also updated if stree is; * not null.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:129,update,update,129,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,12,['update'],"['update', 'updated']"
Deployability,/* ===========================================================================; * Construct one Huffman tree and assigns the code bit strings and lengths.; * Update the total bit length for the current block.; * IN assertion: the field freq is set for all tree elements.; * OUT assertions: the fields len and code are set to the optimal bit length; * and corresponding code. The length opt_len is updated; static_len is; * also updated if stree is not null. The field max_code is set.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:158,Update,Update,158,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,12,"['Update', 'update']","['Update', 'updated']"
Deployability,"/* ===========================================================================; * Fill the window when the lookahead becomes insufficient.; * Updates strstart and lookahead, and sets state->eofile if end of input file.; *; * IN assertion: state->lookahead < MIN_LOOKAHEAD && strstart + state->lookahead > 0; * OUT assertions: at least one byte has been read, or state->eofile is set;; * file reads are performed for at least two bytes (required for the; * translate_eol option).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:142,Update,Updates,142,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['Update'],['Updates']
Deployability,"/* ===========================================================================; * Fill the window when the lookahead becomes insufficient.; * Updates strstart and lookahead.; *; * IN assertion: lookahead < MIN_LOOKAHEAD; * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD; * At least one byte has been read, or avail_in == 0; reads are; * performed for at least two bytes (required for the zip translate_eol; * option -- not supported here).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c:142,Update,Updates,142,builtins/zlib/deflate_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c,1,['Update'],['Updates']
Deployability,"/* ===========================================================================; * In-memory read function. As opposed to file_read(), this function; * does not perform end-of-line translation, and does not update the; * crc and input size.; * Note that the size of the entire input buffer is an unsigned long,; * but the size used in R__mem_read() is only an unsigned int. This makes a; * difference on 16 bit machines. R__mem_read() may be called several; * times for an in-memory compression.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:206,update,update,206,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,2,['update'],['update']
Deployability,"/* ===========================================================================; * Read a new buffer from the current input stream, update the adler32; * and total number of bytes read. All deflate() input goes through; * this function so some applications may wish to modify it to avoid; * allocating a large strm->next_in buffer and copying from it.; * (See also flush_pending()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:131,update,update,131,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['update'],['update']
Deployability,/* ===========================================================================; * Scan a literal or distance tree to determine the frequencies of the codes; * in the bit length tree. Updates opt_len to take into account the repeat; * counts. (The contribution of the bit length codes will be added later; * during the construction of bl_tree.); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:183,Update,Updates,183,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['Update'],['Updates']
Deployability,"/* ===========================================================================; * Update a hash value with the given input byte; * IN assertion: all calls to to UPDATE_HASH are made with consecutive; * input characters, so that a running hash key can be computed from the; * previous key instead of complete recalculation each time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:82,Update,Update,82,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['Update'],['Update']
Deployability,/* ===========================================================================; * Update the compression level and strategy; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:82,Update,Update,82,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['Update'],['Update']
Deployability,"/* ===========================================================================; If the default memLevel or windowBits for deflateInit() is changed, then; this function needs to be updated.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/compress.c:180,update,updated,180,builtins/zlib/compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/compress.c,2,['update'],['updated']
Deployability,"/* ===========================================================================; R__ZipMode is used to select the compression algorithm when R__zip is called; and when R__zipMultipleAlgorithm is called with its last argument set to 0.; R__ZipMode = 1 : ZLIB compression algorithm is used (default); R__ZipMode = 2 : LZMA compression algorithm is used; R__ZipMode = 4 : LZ4 compression algorithm is used; R__ZipMode = 0 or 3 : a very old compression algorithm is used; (the very old algorithm is supported for backward compatibility); The LZMA algorithm requires the external XZ package be installed when linking; is done. LZMA typically has significantly higher compression factors, but takes; more CPU time and memory resources while compressing. The LZ4 algorithm requires the external LZ4 package to be installed when linking; is done. LZ4 typically has the worst compression ratios, but much faster decompression; speeds - sometimes by an order of magnitude.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:588,install,installed,588,core/zip/src/RZip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx,2,['install'],['installed']
Deployability,/* ===========================================================================; Read a byte from a gz_stream; update next_in and avail_in. Return EOF; for end of file.; IN assertion: the stream s has been sucessfully opened for reading.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:110,update,update,110,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['update'],['update']
Deployability,"/* A Windows Device Context (DC) is not equivalent to an X11; * GC. We can use a DC only in the window for which it was; * allocated, or (in the case of a memory DC) with the bitmap that; * has been selected into it. Thus, we have to release and; * reallocate a DC each time the GdkGC is used to paint into a new; * window or pixmap. We thus keep all the necessary values in the; * GdkGCWin32Data struct.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h:234,release,release,234,graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,1,['release'],['release']
Deployability,/* A duplicate configuration option is not an error - the last; 			 * option value will be used. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,configurat,configuration,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,/* A websocket protocoll has the following HTTP headers:; 	 *; 	 * Connection: Upgrade; 	 * Upgrade: Websocket; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:79,Upgrade,Upgrade,79,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['Upgrade'],['Upgrade']
Deployability,"/* ANS state update; * gcc-9.0.0 does 2.5% worse with ZSTD_updateFseStateWithDInfo().; * clang-9.2.0 does 7% worse with ZSTD_updateFseState().; * Naturally it seems like ZSTD_updateFseStateWithDInfo() should be the; * better option, so it is the default for other compilers. But, if you; * measure that it is worse, please put up a pull request.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:13,update,update,13,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['update'],['update']
Deployability,"/* Add an additional domain to an already running web server.; *; * Parameters:; * ctx: Context handle of a server started by mg_start.; * options: NULL terminated list of option_name, option_value pairs that; * specify CivetWeb configuration parameters.; *; * Return:; * < 0 in case of an error; * -1 for a parameter error; * -2 invalid options; * -3 initializing SSL failed; * -4 mandatory domain option missing; * -5 duplicate domain; * -6 out of memory; * > 0 index / handle of a new domain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:229,configurat,configuration,229,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['configurat'],['configuration']
Deployability,"/* Add the new chunks together with each one's handling code. If the chunk; * already exists the code is updated, otherwise the chunk is added to the; * end. (In libpng 1.6.0 order no longer matters because this code enforces; * the earlier convention that the last setting is the one that is used.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:105,update,updated,105,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['update'],['updated']
Deployability,/* Added in 1.5.4: cache of updated row bytes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:28,update,updated,28,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['update'],['updated']
Deployability,/* Allocate the output buffer --- it will be released when done with image */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:45,release,released,45,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,1,['release'],['released']
Deployability,"/* Allow only if access_control_allow_headers is; 					 * not NULL and not an empty string. If this; 					 * configuration is set to *, allow everything.; 					 * Otherwise this configuration must be a list; 					 * of allowed HTTP header names. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:109,configurat,configuration,109,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['configurat'],['configuration']
Deployability,/* Always install colormap in direct color. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:10,install,install,10,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['install'],['install']
Deployability,/* Always update the size: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:10,update,update,10,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['update'],['update']
Deployability,"/* Analytical integrals need testing. Int_t RooHypatia2::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char*) const; {; if (matchArgs(allVars, analVars, _x); && _beta == 0. && _beta.arg().isConstant(); && _zeta == 0. && _zeta.arg().isConstant(); && _lambda.max() < 0.) return 1;; return 0 ;; }. double RooHypatia2::analyticalIntegral(Int_t code, const char* rangeName) const; {; if (_beta != 0. || _zeta != 0. || _lambda >= 0) {; auto& logstream = coutF(Integration) << ""When the PDF "" << GetName(); << "" was constructed, beta,zeta were 0, lambda<0 and all three were constant.\n""; << ""This allowed for analytic integration, but now, numeric integration would be required.\n""; << ""These parameters must either be kept constant, or be floating from the beginning. ""; << "" Terminating fit ...""; << std::endl;; RooArgSet vars;; vars.add(_beta.arg());; vars.add(_zeta.arg());; vars.add(_lambda.arg());; vars.printStream(logstream, vars.defaultPrintContents(nullptr), RooPrintable::kVerbose);; throw std::runtime_error(""RooHypatia2 cannot be integrated analytically since parameters changed."");; }. // The formulae to follow still use beta and zeta to facilitate comparisons with the; // evaluate function. Since beta and zeta are zero, all relevant terms will be disabled; // by defining these two constexpr:; constexpr double beta = 0.;; constexpr double cons1 = 1.;. if (code != 1) {; throw std::logic_error(""Trying to compute analytic integral with unknown configuration."");; }. const double asigma = _a * _sigma;; const double a2sigma = _a2 * _sigma;; const double d0 = _x.min(rangeName) - _mu;; const double d1 = _x.max(rangeName) - _mu;. double delta;; if (_lambda <= -1.0) {; delta = _sigma * sqrt(-2. + -2.*_lambda);; }; else {; delta = _sigma;; }; const double deltaSq = delta*delta;. if ((d0 > -asigma) && (d1 < a2sigma)) {; return stIntegral(d1, delta, _lambda) - stIntegral(d0, delta, _lambda);; }. if (d0 > a2sigma) {; const double phi = 1. + a2sigma*a2sigma/deltaSq;; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:477,Integrat,Integration,477,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,3,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,/* App warnings are warnings in release (or release candidate) builds but; * are errors during development.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:32,release,release,32,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,2,['release'],['release']
Deployability,/* Append a GDK_KEY_PRESS event to the pushback list; * (from which it will be fetched before the release; * event).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:98,release,release,98,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['release'],['release']
Deployability,"/* Application errors (new in 1.6); use these functions (declared below) for; * errors in the parameters or order of API function calls on read. The; * 'warning' should be used for an error that can be handled completely; the; * 'error' for one which can be handled safely but which may lose application; * information or settings.; *; * By default these both result in a png_error call prior to release, while in a; * released version the 'warning' is just a warning. However if the application; * explicitly disables benign errors (explicitly permitting the code to lose; * information) they both turn into warnings.; *; * If benign errors aren't supported they end up as the corresponding base call; * (png_warning or png_error.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:396,release,release,396,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,['release'],"['release', 'released']"
Deployability,/* Application/configuration limits exceeded */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:15,configurat,configuration,15,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['configurat'],['configuration']
Deployability,/* At present if the check_gamma test fails the gamma of the colorspace is; * not updated however the colorspace is not invalidated. This; * corresponds to the case where the existing gamma comes from an sRGB; * chunk or profile. An error message has already been output.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:82,update,updated,82,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['update'],['updated']
Deployability,"/* Bit Test */; /// Given two 128-bit floating-point vectors of [2 x double], perform an; /// element-by-element comparison of the double-precision element in the; /// first source vector and the corresponding element in the second source; /// vector.; ///; /// The EFLAGS register is updated as follows: \n; /// If there is at least one pair of double-precision elements where the; /// sign-bits of both elements are 1, the ZF flag is set to 0. Otherwise the; /// ZF flag is set to 1. \n; /// If there is at least one pair of double-precision elements where the; /// sign-bit of the first element is 0 and the sign-bit of the second element; /// is 1, the CF flag is set to 0. Otherwise the CF flag is set to 1. \n; /// This intrinsic returns the value of the ZF flag.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VTESTPD </c> instruction.; ///; /// \param __a; /// A 128-bit vector of [2 x double].; /// \param __b; /// A 128-bit vector of [2 x double].; /// \returns the ZF flag in the EFLAGS register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:285,update,updated,285,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['update'],['updated']
Deployability,"/* By default the 'intrinsics' code in arm/filter_neon_intrinsics.c is used; * if possible - if __ARM_NEON__ is set and the compiler version is not known; * to be broken. This is controlled by PNG_ARM_NEON_IMPLEMENTATION which can; * be:; *; * 1 The intrinsics code (the default with __ARM_NEON__); * 2 The hand coded assembler (the default without __ARM_NEON__); *; * It is possible to set PNG_ARM_NEON_IMPLEMENTATION in CPPFLAGS, however; * this is *NOT* supported and may cease to work even after a minor revision; * to libpng. It *is* valid to do this for testing purposes, e.g. speed; * testing or a new compiler, but the results should be communicated to the; * libpng implementation list for incorporation in the next minor release.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:731,release,release,731,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['release'],['release']
Deployability,/* Callback handler will not be used anymore. Release it */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:46,Release,Release,46,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['Release'],['Release']
Deployability,"/* Calls ZSTD_decompressContinue() with the right parameters for ZSTD_decompressStream(); * and updates the stage and the output buffer state. This call is extracted so it can be; * used both when reading directly from the ZSTD_inBuffer, and in buffered input mode.; * NOTE: You must break after calling this function since the streamStage is modified.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:96,update,updates,96,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['update'],['updates']
Deployability,"/* Careful here. At one time, Guy wanted to use 082, but that; * would be octal. We must not include leading zeros.; * Versions 0.7 through 1.0.0 were in the range 0 to 100 here; * (only version 1.0.0 was mis-numbered 100 instead of 10000).; * From version 1.0.1 it is:; * XXYYZZ, where XX=major, YY=minor, ZZ=release; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:310,release,release,310,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['release'],['release']
Deployability,/* Check for missing release or press events for the normal; * pressure button. At least on my ArtPadII I sometimes miss a; * release event?; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:21,release,release,21,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,2,['release'],['release']
Deployability,"/* Check if the current request has a valid authentication token set.; * A file is used to provide a list of valid user names, realms and; * password hashes. The file can be created and modified using the; * mg_modify_passwords_file API function.; * Parameters:; * conn: Current connection handle.; * realm: Authentication realm. If NULL is supplied, the sever domain; * set in the authentication_domain configuration is used.; * filename: Path and name of a file storing multiple password hashes.; * Return:; * > 0 Valid authentication; * 0 Invalid authentication; * < 0 Error (all values < 0 should be considered as invalid; * authentication, future error codes will have negative; * numbers); * -1 Parameter error; * -2 File not found; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:404,configurat,configuration,404,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['configurat'],['configuration']
Deployability,"/* Choose split point along selected axis, and update box bounds.; * Current algorithm: split at halfway point.; * (Since the box has been shrunk to minimum volume,; * any split will produce two nonempty subboxes.); * Note that lb value is max for lower box, so must be < old max.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:47,update,update,47,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,/* Civetweb configuration parameters */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,configurat,configuration,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,"/* Close all backing store, release all memory.; * Releasing pools in reverse order might help avoid fragmentation; * with some (brain-damaged) malloc libraries.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:28,release,release,28,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['release'],['release']
Deployability,"/* Compile errors here mean that zlib now uses the value co-opted in; * pngpriv.h for PNG_UNEXPECTED_ZLIB_RETURN; update the switch above; * and change pngpriv.h. Note that this message is ""... return"",; * whereas the default/Z_OK one is ""... return code"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:114,update,update,114,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['update'],['update']
Deployability,"/* Completed MCU, so update state */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:21,update,update,21,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,7,['update'],['update']
Deployability,"/* Compute a rounded up to next multiple of b, ie, ceil(a/b)*b */; /* Assumes a >= 0, b > 0 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c:56,a/b,a/b,56,graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,1,['a/b'],['a/b']
Deployability,"/* Compute a/b rounded up to next integer, ie, ceil(a/b) */; /* Assumes a >= 0, b > 0 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c:11,a/b,a/b,11,graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,2,['a/b'],['a/b']
Deployability,"/* Compute true coordinates of update box's origin corner.; * Actually we compute the coordinates of the center of the corner; * histogram cell, which are the lower bounds of the volume we care about.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:31,update,update,31,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,/* Configuration of the maximum number of websocket PINGs that might; * stay unanswered before the connection is considered broken.; * Note: The name of this define may still change (until it is; * defined as a compile parameter in a documentation).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Configurat,Configuration,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Configurat'],['Configuration']
Deployability,/* Configuration types */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:3,Configurat,Configuration,3,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['Configurat'],['Configuration']
Deployability,/* Continue with the next file extenstion from the; 						 * configuration (if there is a next one). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:61,configurat,configuration,61,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,"/* Convert DC difference to actual value, update last_dc_val */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:42,update,update,42,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,3,['update'],['update']
Deployability,/* Convert cell coordinates to update box ID */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:31,update,update,31,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* Copyright (C) 1999-2003, 2005-2006, 2008-2009 Free Software Foundation, Inc.; This file is part of the GNU LIBICONV Library. The GNU LIBICONV Library is free software; you can redistribute it; and/or modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either version 2; of the License, or (at your option) any later version. The GNU LIBICONV Library is distributed in the hope that it will be; useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU LIBICONV Library; see the file COPYING.LIB.; If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; Fifth Floor, Boston, MA 02110-1301, USA. */; /* When installed, this file is called ""iconv.h"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:913,install,installed,913,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['install'],['installed']
Deployability,"/* DEBUG */; /* ===========================================================================; * Fill the window when the lookahead becomes insufficient.; * Updates strstart and lookahead.; *; * IN assertion: lookahead < MIN_LOOKAHEAD; * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD; * At least one byte has been read, or avail_in == 0; reads are; * performed for at least two bytes (required for the zip translate_eol; * option -- not supported here).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:155,Update,Updates,155,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['Update'],['Updates']
Deployability,/* DIB colormap and data should follow the header as a continuous ; * memory block !*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/bmp.h:55,continuous,continuous,55,graf2d/asimage/src/libAfterImage/bmp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/bmp.h,1,['continuous'],['continuous']
Deployability,"/* Default FSE distribution tables.; * These are pre-calculated FSE decoding tables using default distributions as defined in specification :; * https://github.com/facebook/zstd/blob/release/doc/zstd_compression_format.md#default-distributions; * They were generated programmatically with following method :; * - start from default distributions, present in /lib/common/zstd_internal.h; * - generate tables normally, using ZSTD_buildFSETable(); * - printout the content of tables; * - pretify output, report below, test with fuzzer to ensure it's correct */; /* Default FSE distribution table for Literal Lengths */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:183,release,release,183,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['release'],['release']
Deployability,"/* Defining NO_FLUSH can cause inconsistent screen updates, but is useful; for performance evaluation. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:51,update,updates,51,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['update'],['updates']
Deployability,/* Deprecated interface method (read Rolke.cxx). May be removed from future releases */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h:76,release,releases,76,math/physics/inc/TRolke.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h,1,['release'],['releases']
Deployability,/* Determine which colormap entries are close enough to be candidates; * for the nearest entry to some cell in the update box.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:115,update,update,115,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* Dictionary format :; * See :; * https://github.com/facebook/zstd/blob/release/doc/zstd_compression_format.md#dictionary-format; */; /*! ZSTD_loadZstdDictionary() :; * @return : dictID, or an error code; * assumptions : magic number supposed already checked; * dictSize supposed >= 8; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:73,release,release,73,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['release'],['release']
Deployability,"/* Divide the coefficient value by qval, ensuring proper rounding.; 	 * Since C does not specify the direction of rounding for negative; 	 * quotients, we have to force the dividend positive for portability.; 	 *; 	 * In most files, at least half of the output values will be zero; 	 * (at default quantization settings, more like three-quarters...); 	 * so we should ensure that this case is fast. On many machines,; 	 * a comparison is enough cheaper than a divide to make a special test; 	 * a win. Since both inputs will be nonnegative, we need only test; 	 * for a < b to discover whether a/b is 0.; 	 * If your machine's division is fast enough, define FAST_DIVIDE.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:594,a/b,a/b,594,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,1,['a/b'],['a/b']
Deployability,/* Each HDC returned from gdk_win32_hdc_get must be released with; * this function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwin32.h:52,release,released,52,graf2d/win32gdk/gdk/src/gdk/win32/gdkwin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwin32.h,1,['release'],['released']
Deployability,/* Error checking and repcodes update */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:31,update,update,31,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['update'],['update']
Deployability,/* Establish the client connection and request upgrade */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:47,upgrade,upgrade,47,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['upgrade'],['upgrade']
Deployability,"/* Event types.; * Nothing: No event occurred.; * Delete: A window delete event was sent by the window manager.; *	 The specified window should be deleted.; * Destroy: A window has been destroyed.; * Expose: Part of a window has been uncovered.; * NoExpose: Same as expose, but no expose event was generated.; * VisibilityNotify: A window has become fully/partially/not obscured.; * MotionNotify: The mouse has moved.; * ButtonPress: A mouse button was pressed.; * ButtonRelease: A mouse button was release.; * KeyPress: A key was pressed.; * KeyRelease: A key was released.; * EnterNotify: A window was entered.; * LeaveNotify: A window was exited.; * FocusChange: The focus window has changed. (The focus window gets; *		 keyboard events).; * Resize: A window has been resized.; * Map: A window has been mapped. (It is now visible on the screen).; * Unmap: A window has been unmapped. (It is no longer visible on; *	 the screen).; * Scroll: A mouse wheel was scrolled either up or down.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h:499,release,release,499,graf2d/win32gdk/gdk/src/gdk/gdkevents.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h,2,['release'],"['release', 'released']"
Deployability,"/* Expanded entropy encoder object for Huffman encoding.; *; * The savable_state subrecord contains fields that change within an MCU,; * but must not be updated permanently until we complete the MCU.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:153,update,updated,153,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['update'],['updated']
Deployability,/* FIXME: Always allow installation for now. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:23,install,installation,23,core/clib/src/mmcheck.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c,1,['install'],['installation']
Deployability,/* FIXME: Update when P8 InstrScheduling model is ready */; // FIXME: Update when POWER9 scheduling model is ready.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:10,Update,Update,10,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,2,['Update'],['Update']
Deployability,"/* FIXME: this slows things down a little - it could be; * integrated into the strncpy below, perhaps. OTOH, strlen; * is fast.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c:59,integrat,integrated,59,graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,1,['integrat'],['integrated']
Deployability,"/* Fill in IP, port info early so even if SSL setup below fails,; 		 * error handler would have the corresponding info.; 		 * Thanks to Johannes Winkelmann for the patch.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:164,patch,patch,164,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['patch'],['patch']
Deployability,"/* Fill the inverse-colormap entries in the update box that contains */; /* histogram cell c0/c1/c2. (Only that one cell MUST be filled, but */; /* we can fill as many others as we wish.) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:44,update,update,44,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* Find the closest colormap entry for each cell in the update box,; * given the list of candidate colors prepared by find_nearby_colors.; * Return the indexes of the closest entries in the bestcolor[] array.; * This routine uses Thomas' incremental distance calculation method to; * find the distance from a colormap entry to successive cells in the box.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:56,update,update,56,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* Finish reading the image into the supplied buffer and clean up the; * png_image structure.; *; * row_stride is the step, in byte or 2-byte units as appropriate,; * between adjacent rows. A positive stride indicates that the top-most row; * is first in the buffer - the normal top-down arrangement. A negative; * stride indicates that the bottom-most row is first in the buffer.; *; * background need only be supplied if an alpha channel must be removed from; * a png_byte format and the removal is to be done by compositing on a solid; * color; otherwise it may be NULL and any composition will be done directly; * onto the buffer. The value is an sRGB color to use for the background,; * for grayscale output the green channel is used.; *; * background must be supplied when an alpha channel must be removed from a; * single byte color-mapped output format, in other words if:; *; * 1) The original format from png_image_begin_read_from_* had; * PNG_FORMAT_FLAG_ALPHA set.; * 2) The format set by the application does not.; * 3) The format set by the application has PNG_FORMAT_FLAG_COLORMAP set and; * PNG_FORMAT_FLAG_LINEAR *not* set.; *; * For linear output removing the alpha channel is always done by compositing; * on black and background is ignored.; *; * colormap must be supplied when PNG_FORMAT_FLAG_COLORMAP is set. It must; * be at least the size (in bytes) returned by PNG_IMAGE_COLORMAP_SIZE.; * image->colormap_entries will be updated to the actual number of entries; * written to the colormap; this may be less than the original value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1446,update,updated,1446,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['update'],['updated']
Deployability,"/* For MMAP or BIG_MEM, the whole input file is already in memory; * so we must not perform sliding. We must however call file_read; * in order to compute the crc, update state->lookahead and possibly set state->eofile.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:164,update,update,164,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['update'],['update']
Deployability,"/* For each color in colormap, find:; * 1. its minimum squared-distance to any point in the update box; * (zero if color is within update box);; * 2. its maximum squared-distance to any point in the update box.; * Both of these can be found by considering only the corners of the box.; * We save the minimum distance for each color in mindist[];; * only the smallest maximum distance is of interest.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:92,update,update,92,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,3,['update'],['update']
Deployability,"/* For each color selected by find_nearby_colors,; * compute its distance to the center of each cell in the box.; * If that's less than best-so-far, update best distance and color number.; */; /* Nominal steps between cell centers (""x"" in Thomas article) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:149,update,update,149,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* For each pair of adjacent edges crossing the sweep line, there is; * an ActiveRegion to represent the region between them. The active; * regions are kept in sorted order in a dynamic dictionary. As the; * sweep line crosses each vertex, we update the affected regions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.h:243,update,update,243,graf3d/eve7/glu/sweep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.h,1,['update'],['update']
Deployability,"/* For pixel depths up to 4 bpp the 8-pixel mask can be expanded to fit; * into 32 bits, then a single loop over the bytes using the four byte; * values in the 32-bit mask can be used. For the 'display' option the; * expanded mask may also not require any masking within a byte. To; * make this work the PACKSWAP option must be taken into account - it; * simply requires the pixels to be reversed in each byte.; *; * The 'regular' case requires a mask for each of the first 6 passes,; * the 'display' case does a copy for the even passes in the range; * 0..6. This has already been handled in the test above.; *; * The masks are arranged as four bytes with the first byte to use in; * the lowest bits (little-endian) regardless of the order (PACKSWAP or; * not) of the pixels in each byte.; *; * NOTE: the whole of this logic depends on the caller of this function; * only calling it on rows appropriate to the pass. This function only; * understands the 'x' logic; the 'y' logic is handled by the caller.; *; * The following defines allow generation of compile time constant bit; * masks for each pixel depth and each possibility of swapped or not; * swapped bytes. Pass 'p' is in the range 0..6; 'x', a pixel index,; * is in the range 0..7; and the result is 1 if the pixel is to be; * copied in the pass, 0 if not. 'S' is for the sparkle method, 'B'; * for the block method.; *; * With some compilers a compile time expression of the general form:; *; * (shift >= 32) ? (a >> (shift-32)) : (b >> shift); *; * Produces warnings with values of 'shift' in the range 33 to 63; * because the right hand side of the ?: expression is evaluated by; * the compiler even though it isn't used. Microsoft Visual C (various; * versions) and the Intel C compiler are known to do this. To avoid; * this the following macros are used in 1.5.6. This is a temporary; * solution to avoid destabilizing the code during the release process.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:1906,release,release,1906,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['release'],['release']
Deployability,"/* Format strings */; // static char fmt_9999[] = ""(\002 ** On entry to \002,a6,\002 Parameter nu\// mber \002,i2,\002 had \002,\002an; // illegal Value\002)"";; /* -- LAPACK auxiliary routine (version 3.0) -- */; /* Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd., */; /* Courant Institute, Argonne National Lab, and Rice University */; /* September 30, 1994 */; /* .. Scalar Arguments .. */; /* .. */; /* Purpose */; /* ======= */; /* XERBLA is an Error handler for the LAPACK routines. */; /* It is called by an LAPACK routine if an input Parameter has an */; /* invalid Value. A message is printed and execution stops. */; /* Installers may consider modifying the STOP statement in order to */; /* call system-specific exception-handling facilities. */; /* Arguments */; /* ========= */; /* SRNAME (input) CHARACTER*6 */; /* The Name of the routine which called XERBLA. */; /* INFO (input) INTEGER */; /* The position of the invalid Parameter in the Parameter list */; /* of the calling routine. */; /* ===================================================================== */; /* .. Executable Statements .. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnxerbla.cxx:640,Install,Installers,640,math/minuit2/src/mnxerbla.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnxerbla.cxx,1,['Install'],['Installers']
Deployability,"/* From Andreas Dilger e-mail to png-implement, 26 March 1998:; *; * In most cases, the ""simple transparency"" should be done prior to doing; * gray-to-RGB, or you will have to test 3x as many bytes to check if a; * pixel is transparent. You would also need to make sure that the; * transparency information is upgraded to RGB.; *; * To summarize, the current flow is:; * - Gray + simple transparency -> compare 1 or 2 gray bytes and composite; * with background ""in place"" if transparent,; * convert to RGB if necessary; * - Gray + alpha -> composite with gray background and remove alpha bytes,; * convert to RGB if necessary; *; * To support RGB backgrounds for gray images we need:; * - Gray + simple transparency -> convert to RGB + simple transparency,; * compare 3 or 6 bytes and composite with; * background ""in place"" if transparent; * (3x compare/pixel compared to doing; * composite with gray bkgrnd); * - Gray + alpha -> convert to RGB + alpha, composite with background and; * remove alpha bytes (3x float; * operations/pixel compared with composite; * on gray background); *; * Greg's change will do this. The reason it wasn't done before is for; * performance, as this increases the per-pixel operations. If we would check; * in advance if the background was gray or RGB, and position the gray-to-RGB; * transform appropriately, then it would save a lot of work/time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:310,upgrade,upgraded,310,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['upgrade'],['upgraded']
Deployability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /* acconfig.h; This file is in the public domain. Descriptive text for the C preprocessor macros that; the distributed Autoconf macros can define.; No software package will use all of them; autoheader copies the ones; your configure.in uses into your configuration header file templates. The entries are in sort -df order: alphabetical, case insensitive,; ignoring punctuation (such as underscores). Although this order; can split up related entries, it makes it easier to check whether; a given entry is in the file. Leave the following blank line there!! Autoheader needs it. */; /* Other stuff */; /* #undef PACKAGE */; /* #undef VERSION */; /* Leave that blank line there!! Autoheader needs it.; If you're adding to this file, keep in mind:; The entries are in sort -df order: alphabetical, case insensitive,; ignoring punctuation (such as underscores). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/acconfig.h:1127,configurat,configuration,1127,graf2d/win32gdk/gdk/src/glib/acconfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/acconfig.h,1,['configurat'],['configuration']
Deployability,"/* Get the first piece of memory on the ""free_atoms"" list.; * We can go ahead and destroy the list node we used to keep; * track of it with and to update the ""free_atoms"" list to; * point to its next element.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:147,update,update,147,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['update'],['update']
Deployability,"/* Get the value of particular configuration parameter.; The value returned is read-only. Civetweb does not allow changing; configuration at run time.; If given parameter name is not valid, NULL is returned. For valid; names, return value is guaranteed to be non-NULL. If parameter is not; set, zero-length string is returned. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:31,configurat,configuration,31,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['configurat'],['configuration']
Deployability,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:244,update,update,244,core/clib/src/attach.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c,3,['update'],['update']
Deployability,/* HTTP/1 allows protocol upgrade */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:26,upgrade,upgrade,26,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['upgrade'],['upgrade']
Deployability,"/* Here at the end, update the state and return the correct; * return code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:20,update,update,20,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['update'],['update']
Deployability,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:213,update,updated,213,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,2,['update'],['updated']
Deployability,/* Hook for GClosure / GSource integration. Don't touch */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h:31,integrat,integration,31,graf2d/win32gdk/gdk/src/glib/giochannel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h,2,['integrat'],['integration']
Deployability,"/* If control reaches this point, png_longjmp() must not return. The only; * choice is to terminate the whole process (or maybe the thread); to do; * this the ANSI-C abort() function is used unless a different method is; * implemented by overriding the default configuration setting for; * PNG_ABORT().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:261,configurat,configuration,261,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['configurat'],['configuration']
Deployability,"/* If the WIN_INIT bytes after the end of the current data have never been; * written, then zero those bytes in order to avoid memory check reports of; * the use of uninitialized (or uninitialised as Julian writes) bytes by; * the longest match routines. Update the high water mark for the next; * time through here. WIN_INIT is set to MAX_MATCH since the longest match; * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:255,Update,Update,255,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,4,['Update'],['Update']
Deployability,/* If the zstream has not been released do it now *and* terminate the reading; * of the final IDAT chunk.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:31,release,released,31,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['release'],['released']
Deployability,"/* If we have not seen this color before, find nearest colormap */; /* entry and update the cache */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:81,update,update,81,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* If we have not seen this color before, find nearest colormap entry */; /* and update the cache */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:81,update,update,81,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* If we haven't yet called mmalloc the first time for this heap, or if we; have hooks that were previously installed, then allow the hooks to be; initialized or updated. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:108,install,installed,108,core/clib/src/mmcheck.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c,2,"['install', 'update']","['installed', 'updated']"
Deployability,"/* In QUADPACK the variable table->nres is incremented at the top of; qelg, so it increases on every call. This leads to the array; res3la being accessed when its elements are still undefined, so I; have moved the update to this point so that its value more; useful. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:214,update,update,214,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['update'],['update']
Deployability,/* Index table will be updated */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:23,update,updated,23,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['update'],['updated']
Deployability,/* Index within the heap array of least frequent node in the Huffman tree */; /* ===========================================================================; * Remove the smallest element from the heap and recreate the heap with; * one less element. Updates heap and heap_len.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:250,Update,Updates,250,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,4,['Update'],['Updates']
Deployability,/* Initialize best-distance for each cell of the update box */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:49,update,update,49,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,/* Install my colormap. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:3,Install,Install,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['Install'],['Install']
Deployability,/* KillFace( fDel ) destroys a face and removes it from the global face; * list. It updates the face loop to point to a given new face.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c:84,update,updates,84,graf3d/eve7/glu/mesh.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c,1,['update'],['updates']
Deployability,/* KillVertex( vDel ) destroys a vertex and removes it from the global; * vertex list. It updates the vertex loop to point to a given new vertex.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c:90,update,updates,90,graf3d/eve7/glu/mesh.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c,1,['update'],['updates']
Deployability,/* Library configuration: these options cannot be changed after; * the library has been built.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:11,configurat,configuration,11,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['configurat'],['configuration']
Deployability,"/* Likewise */; /* We would like to #include any system header file which could define; iconv_t, 1. in order to eliminate the risk that the user gets compilation; errors because some other system header file includes /usr/include/iconv.h; which defines iconv_t or declares iconv after this file, 2. when compiling; for LIBICONV_PLUG, we need the proper iconv_t type in order to produce; binary compatible code.; But gcc's #include_next is not portable. Thus, once libiconv's iconv.h; has been installed in /usr/local/include, there is no way any more to; include the original /usr/include/iconv.h. We simply have to get away; without it.; Ad 1. The risk that a system header file does; #include ""iconv.h"" or #include_next ""iconv.h""; is small. They all do #include <iconv.h>.; Ad 2. The iconv_t type is a pointer type in all cases I have seen. (It; has to be a scalar type because (iconv_t)(-1) is a possible return value; from iconv_open().) */; /* Define iconv_t ourselves. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:493,install,installed,493,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['install'],['installed']
Deployability,"/* Locate the colormap entries close enough to an update box to be candidates; * for the nearest entry to some cell(s) in the update box. The update box; * is specified by the center coordinates of its first cell. The number of; * candidate colormap entries is returned, and their colormap indexes are; * placed in colorlist[].; * This routine uses Heckbert's ""locally sorted search"" criterion to select; * the colors that need further consideration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:50,update,update,50,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,3,['update'],['update']
Deployability,"/* Loop continuously, reading messages from the socket, invoking the; 	 * callback, and waiting repeatedly until an error occurs. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,continuous,continuously,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['continuous'],['continuously']
Deployability,"/* MAKEFIXED */; /*; Update the window with the last wsize (normally 32K) bytes written before; returning. If window does not exist yet, create it. This is only called; when a window is already in use, or when output has been written during this; inflate call, but the end of the deflate stream has not been reached yet.; It is also called to create a window for dictionary data when a dictionary; is loaded. Providing output buffers larger than 32K to inflate() should provide a speed; advantage, since only the last 32K of output is copied to the sliding window; upon return from inflate(), and since all distances after the first 32K of; output will fall in the output data, making match copies simpler and faster.; The advantage may be dependent on the size of the processor's data caches.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:21,Update,Update,21,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['Update'],['Update']
Deployability,/* Machine specific configuration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:20,configurat,configuration,20,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['configurat'],['configuration']
Deployability,/* Main integration function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:8,integrat,integration,8,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Deployability,"/* Make fields passed to, and updated by LZ4HC_encodeSequence explicit */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:30,update,updated,30,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['update'],['updated']
Deployability,"/* Make it possible to override the charset.alias location. This is; 	 necessary for running the testsuite before ""make install"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:120,install,install,120,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['install'],['install']
Deployability,/* Make memory region fully uninitialized (without changing its contents).; This is a legacy interface that does not update origin information. Use; __msan_allocated_memory() instead. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/compiler.h:117,update,update,117,builtins/zstd/common/compiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/compiler.h,1,['update'],['update']
Deployability,"/* Modify the info structure to reflect the transformations. The; * info should be updated so a PNG file could be written with it,; * assuming the transformations result in valid PNG data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:83,update,updated,83,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['update'],['updated']
Deployability,/* My pointer movement stuff */; /* Only update if the movement was reasonably small */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:41,update,update,41,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['update'],['update']
Deployability,"/* NEED_SHORT_EXTERNAL_NAMES */; /*; * These two functions are used to allocate and release small chunks of; * memory. (Typically the total amount requested through jpeg_get_small is; * no more than 20K or so; this will be requested in chunks of a few K each.); * Behavior should be the same as for the standard library functions malloc; * and free; in particular, jpeg_get_small must return NULL on failure.; * On most systems, these ARE malloc and free. jpeg_free_small is passed the; * size of the object being freed, just in case it's needed.; * On an 80x86 machine using small-data memory model, these manage near heap.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:84,release,release,84,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['release'],['release']
Deployability,/* NOTE: this code is copied as a comment in; * make_ga_colormap above. Please update the; * comment if you change this code!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:79,update,update,79,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['update'],['update']
Deployability,/* Now upgrade to ws/wss client context */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:7,upgrade,upgrade,7,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['upgrade'],['upgrade']
Deployability,"/* Now we know that no cell in the update box is more than minmaxdist; * away from some colormap entry. Therefore, only colors that are; * within minmaxdist of some part of the box need be considered.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:35,update,update,35,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,"/* Ok, the handler is no more use -> Update it */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:37,Update,Update,37,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Update'],['Update']
Deployability,/* On out-of-buffer this function returns '0' but still updates; * memory_bytes:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:56,update,updates,56,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['update'],['updates']
Deployability,"/* On power8 and later processors we can depend on Program Priority; (PRI) and associated ""very low"" PPI setting. Since we don't know; what PPI this thread is running at we: 1) save the current PRI; from the PPR SPR into a local GRP, 2) set the PRI to ""very low*; via the special or 31,31,31 encoding. 3) issue an ""isync"" to; insure the PRI change takes effect before we execute any more; instructions.; Now we can execute a lwsync (release barrier) while we execute; this thread at ""very low"" PRI. Finally we restore the original; PRI and continue execution. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:433,release,release,433,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['release'],['release']
Deployability,/* Only check for SSE if the build configuration has been modified to; * enable SSE optimizations. This means that these optimizations will; * be off by default. See contrib/intel for more details.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:35,configurat,configuration,35,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['configurat'],['configuration']
Deployability,"/* Oops, it's actually a marker indicating end of compressed data.; 	 * Save the marker code for later use.; 	 * Fine point: it might appear that we should save the marker into; 	 * bitread working state, not straight into permanent state. But; 	 * once we have hit a marker, we cannot need to suspend within the; 	 * current MCU, because we will read no more bytes from the data; 	 * source. So it is OK to update permanent state right away.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:408,update,update,408,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['update'],['update']
Deployability,/* Optional call to gamma correct and add the background to the palette; 				 * and update info structure. REQUIRED if you are expecting libpng to; 				 * update the palette for you (ie you selected such a transform above).; 				 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:84,update,update,84,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,2,['update'],['update']
Deployability,"/* Optional call to gamma correct and add the background to the palette; * and update info structure. REQUIRED if you are expecting libpng to; * update the palette for you (i.e., you selected such a transform above).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:79,update,update,79,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,2,['update'],['update']
Deployability,/* Optional call to update the users info structure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:20,update,update,20,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['update'],['update']
Deployability,/* Optional update palette with requested transformations */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:12,update,update,12,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['update'],['update']
Deployability,/* PATCH method only allowed for CGI/Lua/LSP and callbacks. */; /* WEBDAV (RFC 2518) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,PATCH,PATCH,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PATCH'],['PATCH']
Deployability,/* Perform the first integration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:21,integrat,integration,21,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Deployability,"/* Pointer to the beginning of the portion of the incoming websocket; 	 * message queue.; 	 * The original websocket upgrade request is never removed, so the queue; 	 * begins after it. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:117,upgrade,upgrade,117,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['upgrade'],['upgrade']
Deployability,"/* Print error message to the opened error log stream.; This utilizes the provided logging configuration.; conn: connection (not used for sending data, but to get perameters); fmt: format string without the line return; ...: variable argument list; Example:; mg_cry(conn,""i like %s"", ""logging""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:91,configurat,configuration,91,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['configurat'],['configuration']
Deployability,"/* QAGI: evaluate an integral over an infinite range using the; transformation. integrate(f(x),-Inf,Inf) = integrate((f((1-t)/t) + f(-(1-t)/t))/t^2,0,1). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:80,integrat,integrate,80,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integrate']
Deployability,"/* QAGIL: Evaluate an integral over an infinite range using the; transformation,. integrate(f(x),-Inf,b) = integrate(f(b-(1-t)/t)/t^2,0,1). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:82,integrat,integrate,82,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integrate']
Deployability,"/* QAGIU: Evaluate an integral over an infinite range using the; transformation. integrate(f(x),a,Inf) = integrate(f(a+(1-t)/t)/t^2,0,1). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:81,integrat,integrate,81,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integrate']
Deployability,"/* READ_GRAY_TO_RGB */; /* For indexed PNG data (PNG_COLOR_TYPE_PALETTE) many of the transformations; * can be performed directly on the palette, and some (such as rgb to gray); * can be optimized inside the palette. This is particularly true of the; * composite (background and alpha) stuff, which can be pretty much all done; * in the palette even if the result is expanded to RGB or gray afterward.; *; * NOTE: this is Not Yet Implemented, the code behaves as in 1.5.1 and; * earlier and the palette stuff is actually handled on the first row. This; * leads to the reported bug that the palette returned by png_get_PLTE is not; * updated.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:633,update,updated,633,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['update'],['updated']
Deployability,"/* Read bytes into buf, and update png_ptr->crc */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:28,update,update,28,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['update'],['update']
Deployability,/* Read the server config to check how long a file may be cached.; 	 * The configuration is in seconds. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:75,configurat,configuration,75,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,/* Red segments */; /* Shuffle the bits around so we get the right configuration; for the clipping function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:67,configurat,configuration,67,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['configurat'],['configuration']
Deployability,/* Release Status */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3,Release,Release,3,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['Release'],['Release']
Deployability,/* Release large objects */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:3,Release,Release,3,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['Release'],['Release']
Deployability,/* Release small objects */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:3,Release,Release,3,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['Release'],['Release']
Deployability,/* Release the claimed stream */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:3,Release,Release,3,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['Release'],['Release']
Deployability,/* Release the memory manager control block too. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:3,Release,Release,3,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['Release'],['Release']
Deployability,/* Release the stream */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:3,Release,Release,3,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['Release'],['Release']
Deployability,/* Release-Specific Flags */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3,Release,Release-Specific,3,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['Release'],['Release-Specific']
Deployability,"/* Return array of struct mg_option, representing all valid configuration; options of civetweb.c.; The array is terminated by a NULL name option. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:60,configurat,configuration,60,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['configurat'],['configuration']
Deployability,/* Return the key release event. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:18,release,release,18,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['release'],['release']
Deployability,/* Rolling hash */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c:3,Rolling,Rolling,3,builtins/zstd/compress/zstd_ldm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c,1,['Rolling'],['Rolling']
Deployability,/* SAVE_MARKERS_SUPPORTED */; /*; * Install a special processing method for COM or APPn markers.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:36,Install,Install,36,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['Install'],['Install']
Deployability,"/* SSL loaded dynamically from DLL / shared object */; /* Add all prototypes here, to be independent from OpenSSL source; * installation. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:124,install,installation,124,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['install'],['installation']
Deployability,"/* Save the values of the last color of the first half, and first */; /* of the second half so we can update the Bounding Boxes later. */; /* Also as the colors are quantized and the BBoxes are full 0..255, */; /* they need to be rescaled. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:102,update,update,102,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['update'],['update']
Deployability,"/* Search for a continuous range of ""non transparent pixels"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c:16,continuous,continuous,16,graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,1,['continuous'],['continuous']
Deployability,"/* Send HTTP digest access authentication request.; * Browsers will send a user name and password in their next request, showing; * an authentication dialog if the password is not stored.; * Parameters:; * conn: Current connection handle.; * realm: Authentication realm. If NULL is supplied, the sever domain; * set in the authentication_domain configuration is used.; * Return:; * < 0 Error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:345,configurat,configuration,345,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['configurat'],['configuration']
Deployability,"/* Set TCP keep-alive for TCP sockets (IPv4 and IPv6).; 			 * This is needed because if HTTP-level keep-alive; 			 * is enabled, and client resets the connection, server won't get; 			 * TCP FIN or RST and will keep the connection open forever. With; 			 * TCP keep-alive, next keep-alive handshake will figure out that; 			 * the client is down and will close the server end.; 			 * Thanks to Igor Klopov who suggested the patch. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:424,patch,patch,424,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['patch'],['patch']
Deployability,/* Set linger option according to configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:34,configurat,configuration,34,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,"/* Set out_color_components and conversion method based on requested space.; * Also clear the component_needed flags for any unused components,; * so that earlier pipeline stages can avoid useless computation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c:163,pipeline,pipeline,163,graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,1,['pipeline'],['pipeline']
Deployability,/* Set sent_table FALSE so updated table will be written to JPEG file. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:27,update,updated,27,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['update'],['updated']
Deployability,/* Set the default configuration parameters:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:19,configurat,configuration,19,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,4,['configurat'],['configuration']
Deployability,"/* Set the next chunk's repcodes based on the repcodes of the beginning; * of the last match, and the last sequence. This avoids us having to; * update them while traversing the sequences.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:145,update,update,145,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['update'],['update']
Deployability,/* Shuffle the bits around so we get the right configuration; for the clipping function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:47,configurat,configuration,47,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['configurat'],['configuration']
Deployability,/* Signaled when ldmWindow is updated */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:30,update,updated,30,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['update'],['updated']
Deployability,"/* Some of these fields should go, as they're not being used at all.; Globals should generally migrate into here - it's very likely that; we'll want to run more than one GdkRgbInfo context at the same time; (i.e. some but not all windows have privately installed; colormaps). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:253,install,installed,253,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['install'],['installed']
Deployability,"/* Start web server. Parameters:; callbacks: mg_callbacks structure with user-defined callbacks.; options: NULL terminated list of option_name, option_value pairs that; specify Civetweb configuration parameters. Side-effects: on UNIX, ignores SIGCHLD and SIGPIPE signals. If custom; processing is required for these, signal handlers must be set up; after calling mg_start(). Example:; const char *options[] = {; ""document_root"", ""/var/www"",; ""listening_ports"", ""80,443s"",; NULL; };; struct mg_context *ctx = mg_start(&my_func, NULL, options);. Refer to https://github.com/civetweb/civetweb/blob/master/docs/UserManual.md; for the list of valid option and their possible values. Return:; web server context, or NULL on error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:186,configurat,configuration,186,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['configurat'],['configuration']
Deployability,"/* Start with HTTP, WS will be an ""upgrade"" request later */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:35,upgrade,upgrade,35,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['upgrade'],['upgrade']
Deployability,/* Start with the file extenstion from the configuration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:43,configurat,configuration,43,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,"/* Stop the web server. Must be called last, when an application wants to stop the web server and; release all associated resources. This function blocks until all Civetweb; threads are stopped. Context pointer becomes invalid. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:99,release,release,99,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['release'],['release']
Deployability,"/* Support for relocatable packages. */; /* Sets the original and the current installation prefix of the package.; Relocation simply replaces a pathname starting with the original prefix; by the corresponding pathname with the current prefix instead. Both; prefixes should be directory names without trailing slash (i.e. use """"; instead of ""/""). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:78,install,installation,78,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['install'],['installation']
Deployability,/* Suspension forced; update state counters and exit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c:22,update,update,22,graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,5,['update'],['update']
Deployability,/* TRACE method (RFC 2616) is not supported for security reasons */; /* PATCH method (RFC 5789) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:72,PATCH,PATCH,72,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['PATCH'],['PATCH']
Deployability,/* Thanks to Ray Lehtiniemi for a patch that resulted in a ~25% speedup; in this mode. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:34,patch,patch,34,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['patch'],['patch']
Deployability,"/* The actual parser. This can be called repeatedly. It updates; * the index into the string and the state variable (which must; * be initialized to 0). It returns a result code, as above. There; * is no point calling the parser any more if it fails to advance to; * the end of the string - it is stuck on an invalid character (or; * terminated by '\0').; *; * Note that the pointer will consume an E or even an E+ and then leave; * a 'maybe' state even though a preceding integer.fraction is valid.; * The PNG_FP_WAS_VALID flag indicates that a preceding substring was; * a valid number. It's possible to recover from this by calling; * the parser again (from the start, with state 0) but with a string; * that omits the last character (i.e. set the size to the index of; * the problem character.) This has not been tested within libpng.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:56,update,updates,56,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['update'],['updates']
Deployability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:540,update,updates,540,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['update'],['updates']
Deployability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is; not compatible with the zlib.h header file used by the application.; This check is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller.; If zalloc and zfree are set to Z_NULL, deflateInit updates them to; use default allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at; all (the input data is simply copied a block at a time).; Z_DEFAULT_COMPRESSION requests a default compromise between speed and; compression (currently equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_STREAM_ERROR if level is not a valid compression level,; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION).; msg is set to null if there is no error message. deflateInit does not; perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:540,update,updates,540,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['update'],['updates']
Deployability,"/* The following four functions are deprecated and will be removed in; * the next major release. They use the locale-specific tolower and; * toupper, which is almost never the right thing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.h:88,release,release,88,graf2d/win32gdk/gdk/src/glib/gstrfuncs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.h,1,['release'],['release']
Deployability,/* The following two functions are deprecated and will be removed in; * the next major release. They do no good. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghash.h:87,release,release,87,graf2d/win32gdk/gdk/src/glib/ghash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghash.h,2,['release'],['release']
Deployability,"/* The following two functions are deprecated and will be removed in; * the next major release. They use the locale-specific tolower and; * toupper, which is almost never the right thing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstring.h:87,release,release,87,graf2d/win32gdk/gdk/src/glib/gstring.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstring.h,1,['release'],['release']
Deployability,/* The low-level integration rules in QUADPACK are identified by small; integers (1-6). We'll use symbolic constants to refer to them. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:17,integrat,integration,17,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Deployability,/* The position of the current inBuff in the round; * buffer. Updated past the end if the inBuff once; * the inBuff is sent to the worker thread.; * pos <= capacity.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:62,Update,Updated,62,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Update'],['Updated']
Deployability,/* The restart counter is not updated until we successfully write the MCU. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:30,update,updated,30,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['update'],['updated']
Deployability,"/* The system specific file gdkconfig.h contains such configuration; * settings that are needed not only when compiling GDK (or GTK); * itself, but also occasionally when compiling programs that use GDK; * (or GTK). One such setting is what windowing API backend is in use.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdktypes.h:54,configurat,configuration,54,graf2d/win32gdk/gdk/src/gdk/gdktypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdktypes.h,1,['configurat'],['configuration']
Deployability,"/* The version tests may need to be added to, but the problem warning has; * consistently been fixed in GCC versions which obtain wide-spread release.; * The problem is that many versions of GCC rearrange comparison expressions in; * the optimizer in such a way that the results of the comparison will change; * if signed integer overflow occurs. Such comparisons are not permitted in; * ANSI C90, however GCC isn't clever enough to work out that that do not occur; * below in png_ascii_from_fp and png_muldiv, so it produces a warning with; * -Wextra. Unfortunately this is highly dependent on the optimizer and the; * machine architecture so the warning comes and goes unpredictably and is; * impossible to ""fix"", even were that a good idea.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:142,release,release,142,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['release'],['release']
Deployability,/* There are free fragments of this size.; Pop a fragment out of the fragment list and return it.; Update the block's nfree and first counters. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:99,Update,Update,99,core/clib/src/mmalloc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c,1,['Update'],['Update']
Deployability,"/* These two functions are deprecated and will be removed in the next; * major release of GLib. Use g_path_get_dirname/g_path_get_basename; * instead. Whatch out! The string returned by g_path_get_basename; * must be g_freed, while the string returned by g_basename must not.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h:79,release,release,79,graf2d/win32gdk/gdk/src/glib/gutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h,1,['release'],['release']
Deployability,/* They're rolling the current segment. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:11,rolling,rolling,11,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['rolling'],['rolling']
Deployability,/* This branch can be folded into the; * threshold update condition because we; * know that threshold > 1.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c:51,update,update,51,builtins/zstd/common/entropy_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c,1,['update'],['update']
Deployability,"/* This file is arranged in several sections:; *; * 1. [omitted]; * 2. Any configuration options that can be specified by for the application; * code when it is built. (Build time configuration is in pnglibconf.h); * 3. Type definitions (base types are defined in pngconf.h), structure; * definitions.; * 4. Exported library functions.; * 5. Simplified API.; * 6. Implementation options.; *; * The library source code has additional files (principally pngpriv.h) that; * allow configuration of the library.; */; /* Section 1: [omitted] */; /* Section 2: run time configuration; * See pnglibconf.h for build time configuration; *; * Run time configuration allows the application to choose between; * implementations of certain arithmetic APIs. The default is set; * at build time and recorded in pnglibconf.h, but it is safe to; * override these (and only these) settings. Note that this won't; * change what the library does, only application code, and the; * settings can (and probably should) be made on a per-file basis; * by setting the #defines before including png.h; *; * Use macros to read integers from PNG data or use the exported; * functions?; * PNG_USE_READ_MACROS: use the macros (see below) Note that; * the macros evaluate their argument multiple times.; * PNG_NO_USE_READ_MACROS: call the relevant library function.; *; * Use the alternative algorithm for compositing alpha samples that; * does not use division?; * PNG_READ_COMPOSITE_NODIV_SUPPORTED: use the 'no division'; * algorithm.; * PNG_NO_READ_COMPOSITE_NODIV: use the 'division' algorithm.; *; * How to handle benign errors if PNG_ALLOW_BENIGN_ERRORS is; * false?; * PNG_ALLOW_BENIGN_ERRORS: map calls to the benign error; * APIs to png_warning.; * Otherwise the calls are mapped to png_error.; */; /* Section 3: type definitions, including structures and compile time; * constants.; * See pngconf.h for base types that vary by machine/system; */; /* This triggers a compiler error in png.c, if png.c and png.h; * do not agr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:75,configurat,configuration,75,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,6,['configurat'],['configuration']
Deployability,"/* This function frees the memory associated with a single info struct.; * Normally, one would use either png_destroy_read_struct() or; * png_destroy_write_struct() to free an info struct, but this may be; * useful for some applications. From libpng 1.6.0 this function is also used; * internally to implement the png_info release part of the 'struct' destroy; * APIs. This ensures that all possible approaches free the same data (all of; * it).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:323,release,release,323,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['release'],['release']
Deployability,"/* This function is called when there is a warning, but the library thinks; * it can continue anyway. Replacement functions don't have to do anything; * here if you don't want them to. In the default configuration, png_ptr is; * not used, but it is passed in case it may be useful.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:200,configurat,configuration,200,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['configurat'],['configuration']
Deployability,"/* This internal function is called from png_read_start_row in pngrutil.c; * and it is called before the 'rowbytes' calculation is done, so the code; * in here can change or update the transformations flags.; *; * First do updates that do not depend on the details of the PNG image data; * being processed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:174,update,update,174,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,2,['update'],"['update', 'updates']"
Deployability,"/* This is a global switch to set the compilation for an installed system; * (a release build). It can be set for testing debug builds to ensure that; * they will compile when the build type is switched to RC or STABLE, the; * default is just to use PNG_LIBPNG_BUILD_BASE_TYPE. Set this in CPPFLAGS; * with either:; *; * -DPNG_RELEASE_BUILD Turns on the release compile path; * -DPNG_RELEASE_BUILD=0 Turns it off; * or in your pngusr.h with; * #define PNG_RELEASE_BUILD=1 Turns on the release compile path; * #define PNG_RELEASE_BUILD=0 Turns it off; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:57,install,installed,57,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,4,"['install', 'release']","['installed', 'release']"
Deployability,"/* This is similar to png_text_compress, above, except that it does not require; * all of the data at once and, instead of buffering the compressed result,; * writes it as IDAT chunks. Unlike png_text_compress it *can* png_error out; * because it calls the write interface. As a result it does its own error; * reporting and does not return an error code. In the event of error it will; * just call png_error. The input data length may exceed 32-bits. The 'flush'; * parameter is exactly the same as that to deflate, with the following; * meanings:; *; * Z_NO_FLUSH: normal incremental output of compressed data; * Z_SYNC_FLUSH: do a SYNC_FLUSH, used by png_write_flush; * Z_FINISH: this is the end of the input, do a Z_FINISH and clean up; *; * The routine manages the acquire and release of the png_ptr->zstream by; * checking and (at the end) clearing png_ptr->zowner; it does some sanity; * checks on the 'mode' flags while doing this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:782,release,release,782,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['release'],['release']
Deployability,"/* This section is performed when method enter event occurs.; * It updates the virtual stack, or creates it if this is the first ; * method entry in the thread. The stack pointer is decreased.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:67,update,updates,67,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['update'],['updates']
Deployability,/* This section is performed when method leave event occurs; * It updates the virtual stack.; * Increases the stack pointer.; * If the stack pointer reached the top (left the global function); * increase the pointer and the top pointer.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:66,update,updates,66,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['update'],['updates']
Deployability,"/* This should be zero for a public release, or non-zero for a; * development version. [Deprecated]; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:36,release,release,36,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['release'],['release']
Deployability,/* This tells us if we need to update the parse info */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c:31,update,update,31,graf2d/win32gdk/gdk/src/glib/gdate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.c,1,['update'],['update']
Deployability,"/* This will occur, if a HTTP/1.1 request should be upgraded; 				 * to HTTP/2 - but not if HTTP/2 is negotiated using ALPN.; 				 * Since most (all?) major browsers only support HTTP/2 using; 				 * ALPN, this is hard to test and very low priority.; 				 * Deactivate it (at least for now).; 				 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:52,upgrade,upgraded,52,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['upgrade'],['upgraded']
Deployability,"/* To avoid the trouble of installing a file that is shared by many; 	 GNU packages -- many packaging systems have problems with this --,; 	 simply inline the aliases here. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:27,install,installing,27,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['install'],['installing']
Deployability,"/* To avoid the troubles of installing a separate file in the same; 	 directory as the DLL and of retrieving the DLL's directory at; 	 runtime, simply inline the aliases here. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:28,install,installing,28,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['install'],['installing']
Deployability,"/* To support symbol prefixing it is necessary to know *before* including png.h; * whether the fixed point (and maybe other) APIs are exported, because if they; * are not internal definitions may be required. This is handled below just; * before png.h is included, but load the configuration now if it is available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:278,configurat,configuration,278,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['configurat'],['configuration']
Deployability,"/* To use this define PNG_FILTER_OPTIMIZATIONS as the name of a function to; * call to install hardware optimizations for the above functions; simply; * replace whatever elements of the pp->read_filter[] array with a hardware; * specific (or, for that matter, generic) optimization.; *; * To see an example of this examine what configure.ac does when; * --enable-arm-neon is specified on the command line.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:87,install,install,87,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['install'],['install']
Deployability,/* Toggle between horisontal and vertical... */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c:3,Toggle,Toggle,3,graf2d/win32gdk/gdk/src/gdk/testgdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c,1,['Toggle'],['Toggle']
Deployability,/* Try installing a color cube of the specified size.; Make the colorcube and return TRUE on success */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:7,install,installing,7,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['install'],['installing']
Deployability,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:280,install,installation,280,core/clib/src/mmcheck.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c,5,"['install', 'update']","['installation', 'update', 'updated']"
Deployability,"/* Unused, in the RELEASE build */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,RELEASE,RELEASE,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['RELEASE'],['RELEASE']
Deployability,/* Update DC values */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,1,['Update'],['Update']
Deployability,/* Update Hash Table */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:3,Update,Update,3,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,4,['Update'],['Update']
Deployability,"/* Update box volume.; * We use 2-norm rather than real volume here; this biases the method; * against making long narrow boxes, and it has the side benefit that; * a box is splittable iff norm > 0.; * Since the differences are expressed in histogram-cell units,; * we have to shift back to JSAMPLE units to get consistent distances;; * after which, we scale according to the selected distance scale factors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['Update'],['Update']
Deployability,/* Update chains up to ip (excluded) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:3,Update,Update,3,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['Update'],['Update']
Deployability,/* Update chains up to ip (excluded); Assumption : always within prefix (i.e. not within extDict) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:3,Update,Update,3,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['Update'],['Update']
Deployability,/* Update context state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:3,Update,Update,3,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['Update'],['Update']
Deployability,/* Update hashTable3 up to ip (excluded); Assumption : always within prefix (i.e. not within extDict) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:3,Update,Update,3,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['Update'],['Update']
Deployability,/* Update last_dc_val */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['Update'],['Update']
Deployability,/* Update ldmWindow to match the ldmState.window and signal the main; * thread if it is waiting for a buffer.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,Update,Update,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Update'],['Update']
Deployability,/* Update longitude and latitude */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:3,Update,Update,3,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['Update'],['Update']
Deployability,/* Update lsa port in case of random free ports */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Update,Update,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Update'],['Update']
Deployability,/* Update next-restart state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['Update'],['Update']
Deployability,/* Update on release: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx:3,Update,Update,3,core/foundation/inc/ROOT/RVersion.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RVersion.hxx,2,"['Update', 'release']","['Update', 'release']"
Deployability,/* Update opt_len to include the bit length tree and counts */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:3,Update,Update,3,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,4,['Update'],['Update']
Deployability,"/* Update progression status, and verify that scan order is legal.; * Note that inter-scan inconsistencies are treated as warnings; * not fatal errors ... not clear if this is right way to behave.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,2,['Update'],['Update']
Deployability,/* Update restart state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['Update'],['Update']
Deployability,/* Update restart-interval state too */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,9,['Update'],['Update']
Deployability,"/* Update screen clearing, pix copying variables */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:3,Update,Update,3,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['Update'],['Update']
Deployability,/* Update state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['Update'],['Update']
Deployability,/* Update state for next pass */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['Update'],['Update']
Deployability,/* Update stats for boxes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['Update'],['Update']
Deployability,"/* Update the ""free"" memory available in that area */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:3,Update,Update,3,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['Update'],['Update']
Deployability,/* Update the 'info' structure and make sure the result is as required; first; * make sure to turn on the interlace handling if it will be required; * (because it can't be turned on *after* the call to png_read_update_info!); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['Update'],['Update']
Deployability,/* Update the 'info' structure and make sure the result is as required; first; * make sure to turn on the interlace handling if it will be required; * (because it can't be turned on *after* the call to png_read_update_info!); *; * TODO: remove the do_local_background fixup below.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['Update'],['Update']
Deployability,"/* Update the CRC after writing the data,; * in case the user I/O routine alters it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['Update'],['Update']
Deployability,/* Update the cache with whether the file gamma is significantly different; * from sRGB.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['Update'],['Update']
Deployability,/* Update the expected output buffer for ZSTD_obm_stable. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:3,Update,Update,3,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['Update'],['Update']
Deployability,"/* Update the input and output sizes; the updated values are the amount; * consumed or written, effectively the inverse of what zlib uses.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:3,Update,Update,3,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,"['Update', 'update']","['Update', 'updated']"
Deployability,/* Update the number of allocated atoms count.; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:3,Update,Update,3,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['Update'],['Update']
Deployability,"/* Update the original malloc descriptor with any changes */; /* *(struct mdesc *) md = mtemp; don't update, just unmapped (rdm) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c:3,Update,Update,3,core/clib/src/detach.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/detach.c,2,"['Update', 'update']","['Update', 'update']"
Deployability,/* Update the repcodes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c:3,Update,Update,3,builtins/zstd/compress/zstd_ldm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c,1,['Update'],['Update']
Deployability,/* Update the round buffer pos and clear the input buffer to be reset */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,Update,Update,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Update'],['Update']
Deployability,/* Update the statistics. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:3,Update,Update,3,core/clib/src/mmalloc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c,1,['Update'],['Update']
Deployability,/* Update window state and fill hash table with dict */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,Update,Update,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Update'],['Update']
Deployability,/* UpdateAfterInit */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:3,Update,UpdateAfterInit,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,2,['Update'],['UpdateAfterInit']
Deployability,/* UpdateRoot= */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:3,Update,UpdateRoot,3,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['Update'],['UpdateRoot']
Deployability,/* Updates ldmSeqStore.pos */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:3,Update,Updates,3,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,2,['Update'],['Updates']
Deployability,/* Updates ldmSeqStore.size */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:3,Update,Updates,3,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['Update'],['Updates']
Deployability,/* Updates png_ptr->pass */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:3,Update,Updates,3,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['Update'],['Updates']
Deployability,"/* Updates weights and biases, given the learning rate */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:3,Update,Updates,3,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,3,['Update'],['Updates']
Deployability,/* Upgrade to ... */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Upgrade,Upgrade,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Upgrade'],['Upgrade']
Deployability,/* Upgrade to another protocol */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Upgrade,Upgrade,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Upgrade'],['Upgrade']
Deployability,"/* Use read() to load a buffer -- return -1 on error, otherwise 0. Read from; state->fd, and update state->eof, state->err, and state->msg as appropriate.; This function needs to loop on read(), since read() is not guaranteed to; read the number of bytes requested, depending on the type of descriptor. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:93,update,update,93,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['update'],['update']
Deployability,/* Used from png_read_destroy and below to release the memory used by the gamma; * tables.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:43,release,release,43,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['release'],['release']
Deployability,/* Used to compute the rolling hash.; * Depends on ldmParams.minMatchLength */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h:23,rolling,rolling,23,builtins/zstd/compress/zstd_compress_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h,1,['rolling'],['rolling']
Deployability,"/* Utility function: update the 'keep' state of a chunk if it is already in; * the list, otherwise add it to the list.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:21,update,update,21,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['update'],['update']
Deployability,"/* WRITE_COMPRESSED_TEXT */; /* This is a highly dubious configuration option; by default it is off,; * but it may be appropriate for private builds that are testing; * extensions not conformant to the current specification, or of; * applications that must not fail to write at all costs!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:57,configurat,configuration,57,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['configurat'],['configuration']
Deployability,"/* WRITE_COMPRESSED_TEXT */; /* Write the IHDR chunk, and update the png_struct with the necessary; * information. Note that the rest of this code depends upon this; * information being correct.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:58,update,update,58,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['update'],['update']
Deployability,/* WRITE_FILTER */; /* Finish row - updates counters and flushes zlib if last row */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:36,update,updates,36,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['update'],['updates']
Deployability,/* We assume each attribute key is associated to a single value whose corresponding data is; * sequentially updated from one or more I/O vectors. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/libdaos_mock/libdaos_mock.cxx:108,update,updated,108,tree/ntuple/v7/src/libdaos_mock/libdaos_mock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/libdaos_mock/libdaos_mock.cxx,1,['update'],['updated']
Deployability,/* We can ignore the return value since suspension is not possible; 	 * with the stdio data source.; 	 */; /* Step 8: Release JPEG decompression object */; /* This is an important step since it will release a good deal of memory. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:118,Release,Release,118,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,2,"['Release', 'release']","['Release', 'release']"
Deployability,"/* We can safely set or update the abort function at any time, regardless; of whether or not we successfully do anything else. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:24,update,update,24,core/clib/src/mmcheck.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c,1,['update'],['update']
Deployability,/* We can use jpeg_abort to release memory and reset global_state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:28,release,release,28,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,2,['release'],['release']
Deployability,/* We need only tell the memory manager to release everything. */; /* NB: mem pointer is NULL if memory mgr failed to initialize. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c:43,release,release,43,graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,1,['release'],['release']
Deployability,"/* We sent an ""upgrade"" request. For a correct websocket; 		 * protocol handshake, we expect a ""101 Continue"" response.; 		 * Otherwise it is a protocol violation. Maybe the HTTP; 		 * Server does not know websockets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,upgrade,upgrade,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['upgrade'],['upgrade']
Deployability,"/* When using -Weverything, clang does not accept it's own headers; * in a release build configuration. Disable what is too much in; * -Weverything. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:75,release,release,75,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"/* Windows file systems are not case sensitive, but you can still use; 	 * uppercase and lowercase letters (on all modern file systems).; 	 * The server can check if the URI uses the same upper/lowercase; 	 * letters an the file system, effectively making Windows servers; 	 * case sensitive (like Linux servers are). It is still not possible; 	 * to use two files with the same name in different cases on Windows; 	 * (like /a and /A) - this would be possible in Linux.; 	 * As a default, Windows is not case sensitive, but the case sensitive; 	 * file name check can be activated by an additional configuration. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:599,configurat,configuration,599,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['configurat'],['configuration']
Deployability,"/* Write the image to the given memory buffer. The function both writes the; * whole PNG data stream to *memory and updates *memory_bytes with the count; * of bytes written.; *; * 'memory' may be NULL. In this case *memory_bytes is not read however on; * success the number of bytes which would have been written will still be; * stored in *memory_bytes. On failure *memory_bytes will contain 0.; *; * If 'memory' is not NULL it must point to memory[*memory_bytes] of; * writeable memory.; *; * If the function returns success memory[*memory_bytes] (if 'memory' is not; * NULL) contains the written PNG data. *memory_bytes will always be less; * than or equal to the original value.; *; * If the function returns false and *memory_bytes was not changed an error; * occurred during write. If *memory_bytes was changed, or is not 0 if; * 'memory' was NULL, the write would have succeeded but for the memory; * buffer being too small. *memory_bytes contains the required number of; * bytes and will be bigger that the original value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:116,update,updates,116,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['update'],['updates']
Deployability,"/* Write various chunks */; /* Write the IHDR chunk, and update the png_struct with the necessary; * information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:57,update,update,57,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['update'],['update']
Deployability,"/* XXH_reset, update, digest */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:14,update,update,14,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['update'],['update']
Deployability,"/* ZSTDMT_allocJobsTable(); * allocate and init a job table.; * update *nbJobsPtr to next power of 2 value, as size of table */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:64,update,update,64,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['update'],['update']
Deployability,/* ZSTD_optLdm_processMatchCandidate():; * Wrapper function to update ldm seq store and call ldm functions as necessary.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:63,update,update,63,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['update'],['update']
Deployability,"/* ZSTD_optLdm_skipRawSeqStoreBytes():; * Moves forward in rawSeqStore by nbBytes, which will update the fields 'pos' and 'posInSequence'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:94,update,update,94,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['update'],['update']
Deployability,/* ZSTD_opt_getNextMatchAndUpdateSeqStore():; * Calculates the beginning and end of the next match in the current block.; * Updates 'pos' and 'posInSequence' of the ldmSeqStore.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:124,Update,Updates,124,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['Update'],['Updates']
Deployability,"/* allocating big chunk of memory at once, to enable mmap; 				 * that will release memory to system right after free() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:76,release,release,76,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['release'],['release']
Deployability,"/* appease ""unused variable"" warning for release builds */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:41,release,release,41,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['release'],['release']
Deployability,/* auto configuration options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h:8,configurat,configuration,8,graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,1,['configurat'],['configuration']
Deployability,"/* bit buffer */; /*The inflate algorithm uses a sliding 32K byte window on the uncompressed; stream to find repeated byte strings. This is implemented here as a; circular buffer. The index is updated simply by incrementing and then; and'ing with 0x7fff (32K-1). */; /*It is left to other modules to supply the 32K area. It is assumed; to be usable as if it were declared ""uch slide[32768];"" or as just; ""uch *slide;"" and then malloc'ed in the latter case. The definition; must be in unzip.h, included above. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:193,update,updated,193,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['update'],['updated']
Deployability,/* can't release hostage (not present) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:9,release,release,9,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['release'],['release']
Deployability,"/* case mapping functions. case_map is used to ignore case in comparisons,; * to_up is used to force upper case even on Unix (for dosify option).; */; /* || defined(AMIGA) is removed from the next line because the line; is too long for PATCHY */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:236,PATCH,PATCHY,236,core/zip/src/Tailor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h,1,['PATCH'],['PATCHY']
Deployability,/* compatibility with release on NULL */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:22,release,release,22,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['release'],['release']
Deployability,/* compatible with release on NULL */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:19,release,release,19,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['release'],['release']
Deployability,"/* copy dictionary to window using updatewindow(), which will amend the; existing dictionary if appropriate */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:35,update,updatewindow,35,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['update'],['updatewindow']
Deployability,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:850,install,install,850,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,"['install', 'integrat']","['install', 'integrated']"
Deployability,/* don't need to update q */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:17,update,update,17,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['update'],['update']
Deployability,"/* dx, dy, dz are the amount to step about each axis every frame; We want the scene to continue to rotate even if the user does; not give any new input */; /* Do not forget to put your automatic update variables into this if; statement. Be careful somehow you can get MANY bugs with these! */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:195,update,update,195,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['update'],['update']
Deployability,/* early update abort; gets ~+10% speed for about -0.01 ratio loss */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:9,update,update,9,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['update'],['update']
Deployability,"/* for all those that miss standard_free (p); in this place, yes,; * we do leak all memory when profiling, and that is intentional; * to catch double frees. patch submissions are futile.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:157,patch,patch,157,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['patch'],['patch']
Deployability,"/* for safety if init fails */; /* Check for configuration errors.; * SIZEOF(ALIGN_TYPE) should be a power of 2; otherwise, it probably; * doesn't reflect any real hardware alignment requirement.; * The test is a little tricky: for X>0, X and X-1 have no one-bits; * in common if and only if X is a power of 2, ie has only one one-bit.; * Some compilers may give an ""unreachable code"" warning here; ignore it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:45,configurat,configuration,45,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['configurat'],['configuration']
Deployability,"/* go to next symbol, update count, len */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:22,update,update,22,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['update'],['update']
Deployability,/* has installer entitlement */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h:7,install,installer,7,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h,1,['install'],['installer']
Deployability,"/* if strict is not set, then app warnings and errors are treated as; * warnings in release builds, but not in unstable builds; this can be; * changed with '--relaxed'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:84,release,release,84,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['release'],['release']
Deployability,/* index from which to continue dictionary update */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.h:43,update,update,43,builtins/lz4/lz4hc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.h,1,['update'],['update']
Deployability,/* index from which to continue table update */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h:38,update,update,38,builtins/zstd/compress/zstd_compress_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h,1,['update'],['update']
Deployability,/* limited update after a very long match */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:11,update,update,11,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['update'],['update']
Deployability,/* link into the scanner configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:25,configurat,configuration,25,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['configurat'],['configuration']
Deployability,/* lower left corner of update box */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:24,update,update,24,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,/* maybeSplitSequence updates rawSeqStore->pos */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c:22,update,updates,22,builtins/zstd/compress/zstd_ldm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c,1,['update'],['updates']
Deployability,"/* mg_set_request_handler. Sets or removes a URI mapping for a request handler.; This function waits until a removing/updating handler becomes unused, so; do not call from the handler itself. URI's are ordered and prefixed URI's are supported. For example,; consider two URIs: /a/b and /a; /a matches /a; /a/b matches /a/b; /a/c matches /a. Parameters:; ctx: server context; uri: the URI (exact or pattern) for the handler; handler: the callback handler to use when the URI is requested.; If NULL, an already registered handler for this URI will; be removed.; The URI used to remove a handler must match exactly the; one used to register it (not only a pattern match).; cbdata: the callback data to give to the handler when it is called. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:278,a/b,a/b,278,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,3,['a/b'],['a/b']
Deployability,"/* min distance to colormap entry i */; /* Compute true coordinates of update box's upper corner and center.; * Actually we compute the coordinates of the center of the upper-corner; * histogram cell, which are the upper bounds of the volume we care about.; * Note that since "">>"" rounds down, the ""center"" values may be closer to; * min than to max; hence comparisons to them must be ""<="", not ""<"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:71,update,update,71,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['update']
Deployability,/* not updated anymore */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RVersion.h:7,update,updated,7,core/foundation/inc/RVersion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RVersion.h,1,['update'],['updated']
Deployability,/* note : all CCtx borrowed from the pool should be released back to the pool _before_ freeing the pool */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:52,release,released,52,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['release'],['released']
Deployability,"/* note filePos tracks borders between samples.; It's not used at this stage, but planned to become useful in a later update */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c:118,update,update,118,builtins/zstd/dictBuilder/zdict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c,1,['update'],['update']
Deployability,"/* op values as set by inflate_table():; 00000000 - literal; 0000tttt - table link, tttt != 0 is the number of table index bits; 0001eeee - length or distance, eeee is the number of extra bits; 01100000 - end of block; 01000000 - invalid code; */; /* Maximum size of the dynamic table. The maximum number of code structures is; 1444, which is the sum of 852 for literal/length codes and 592 for distance; codes. These values were found by exhaustive searches using the program; examples/enough.c found in the zlib distribtution. The arguments to that; program are the number of symbols, the initial root table size, and the; maximum bit length of a code. ""enough 286 9 15"" for literal/length codes; returns returns 852, and ""enough 30 6 15"" for distance codes returns 592.; The initial root table size (9 or 6) is found in the fifth argument of the; inflate_table() calls in inflate.c and infback.c. If the root table size is; changed, then these maximum sizes would be need to be recalculated and; updated. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.h:999,update,updated,999,builtins/zlib/inftrees.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.h,1,['update'],['updated']
Deployability,/* output not fully flushed; keep last byte as hostage; will be released when all output is flushed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:64,release,released,64,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['release'],['released']
Deployability,/* perform the first integration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:21,integrat,integration,21,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Deployability,/* placeholder to lazily install and forward do '(l/r)meth' if available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,install,install,25,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['install'],['install']
Deployability,/* placeholder to lazily install and forward to 'ometh' if available */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,install,install,25,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['install'],['install']
Deployability,/* placeholder to lazily install unary operators */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,install,install,25,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['install'],['install']
Deployability,"/* png.c - location for general purpose libpng functions; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:286,release,released,286,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['release'],['released']
Deployability,"/* png.h - header file for PNG reference library; *; * libpng version 1.6.40; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license. (See LICENSE, below.); *; * Authors and maintainers:; * libpng versions 0.71, May 1995, through 0.88, January 1996: Guy Schalnat; * libpng versions 0.89, June 1996, through 0.96, May 1997: Andreas Dilger; * libpng versions 0.97, January 1998, through 1.6.35, July 2018:; * Glenn Randers-Pehrson; * libpng versions 1.6.36, December 2018, through 1.6.40, June 2023:; * Cosmin Truta; * See also ""Contributing Authors"", below.; */; /*; * COPYRIGHT NOTICE, DISCLAIMER, and LICENSE; * =========================================; *; * PNG Reference Library License version 2; * ---------------------------------------; *; * * Copyright (c) 1995-2023 The PNG Reference Library Authors.; * * Copyright (c) 2018-2023 Cosmin Truta.; * * Copyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson.; * * Copyright (c) 1996-1997 Andreas Dilger.; * * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * The software is supplied ""as is"", without warranty of any kind,; * express or implied, including, without limitation, the warranties; * of merchantability, fitness for a particular purpose, title, and; * non-infringement. In no event shall the Copyright owners, or; * anyone distributing the software, be liable for any damages or; * other liability, whether in contract, tort or otherwise, arising; * from, out of, or in connection with the software, or the use or; * other dealings in the software, even if advised of the possibility; * of such damage.; *; * Permission is hereby granted to use, copy, modify, and distribute; * this software, or portions hereof, for any purpose, without fee,; * subject to the following restrictions:; *; * 1. The origin ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:306,release,released,306,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['release'],['released']
Deployability,"/* png_colorspace only contains 'flags' if neither GAMMA or COLORSPACE are; * defined. When COLORSPACE is switched on all the colorspace-defining; * chunks should be enabled, when GAMMA is switched on all the gamma-defining; * chunks should be enabled. If this is not done it becomes possible to read; * inconsistent PNG files and assign a probably incorrect interpretation to; * the information. (In other words, by carefully choosing which chunks to; * recognize the system configuration can select an interpretation for PNG; * files containing ambiguous data and this will result in inconsistent; * behavior between different libpng builds!); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:476,configurat,configuration,476,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['configurat'],['configuration']
Deployability,"/* png_inflate now returns zlib error codes including Z_OK and Z_STREAM_END to; * allow the caller to do multiple calls if required. If the 'finish' flag is; * set Z_FINISH will be passed to the final inflate() call and Z_STREAM_END must; * be returned or there has been a problem, otherwise Z_SYNC_FLUSH is used and; * Z_OK or Z_STREAM_END will be returned on success.; *; * The input and output sizes are updated to the actual amounts of data consumed; * or written, not the amount available (as in a z_stream). The data pointers; * are not changed, so the next input is (data+input_size) and the next; * available output is (output+output_size).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:407,update,updated,407,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['update'],['updated']
Deployability,"/* pngconf.h - machine-configurable file for libpng; *; * libpng version 1.6.40; *; * Copyright (c) 2018-2022 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2016,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * Any machine specific code is near the front of this file, so if you; * are configuring libpng for a machine, you may want to read the section; * starting here down to where it starts to typedef png_color, png_text,; * and png_info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:314,release,released,314,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['release'],['released']
Deployability,"/* pngdebug.h - Debugging macros for libpng, also used in pngtest.c; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2013 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* Define PNG_DEBUG at compile time for debugging information. Higher; * numbers for PNG_DEBUG mean more debugging information. This has; * only been added since version 0.95 so it is not implemented throughout; * libpng yet, but more support will be added as needed.; *; * png_debug[1-2]?(level, message ,arg{0-2}); * Expands to a statement (either a simple expression or a compound; * do..while(0) statement) that outputs a message with parameter; * substitution if PNG_DEBUG is defined to 2 or more. If PNG_DEBUG; * is undefined, 0 or 1 every png_debug expands to a simple expression; * (actually ((void)0)).; *; * level: level of detail of message, starting at 0. A level 'n'; * message is preceded by 'n' 3-space indentations (not implemented; * on Microsoft compilers unless PNG_DEBUG_FILE is also; * defined, to allow debug DLL compilation with no standard IO).; * message: a printf(3) style text string. A trailing '\n' is added; * to the message.; * arg: 0 to 2 arguments for printf(3) style substitution in message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h:292,release,released,292,graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,1,['release'],['released']
Deployability,"/* pngerror.c - stub functions for i/o and memory allocation; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2017 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file provides a location for all error handling. Users who; * need special error handling are expected to write replacement functions; * and use png_set_error_fn() to use those functions. See the instructions; * at each function.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:285,release,released,285,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['release'],['released']
Deployability,"/* pngget.c - retrieval of values from info struct; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngget.c:280,release,released,280,graf2d/asimage/src/libAfterImage/libpng/pngget.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngget.c,1,['release'],['released']
Deployability,"/* pnginfo.h - header file for PNG reference library; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2013,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* png_info is a structure that holds the information in a PNG file so; * that the application can find out the characteristics of the image.; * If you are reading the file, this structure will tell you what is; * in the PNG file. If you are writing the file, fill in the information; * you want to put into the PNG file, using png_set_*() functions, then; * call png_write_info().; *; * The names chosen should be very close to the PNG specification, so; * consult that document for information about the meaning of each field.; *; * With libpng < 0.95, it was only possible to directly set and read the; * the values in the png_info_struct, which meant that the contents and; * order of the values had to remain fixed. With libpng 0.95 and later,; * however, there are now functions that abstract the contents of; * png_info_struct from the application, so this makes it easier to use; * libpng with dynamic libraries, and even makes it possible to use; * libraries that don't have all of the libpng ancillary chunk-handing; * functionality. In libpng-1.5.0 this was moved into a separate private; * file that is not visible to applications.; *; * The following members may have allocated storage attached that should be; * cleaned up before the structure is discarded: palette, trans, text,; * pcal_purpose, pcal_units, pcal_params, hist, iccp_name, iccp_profile,; * splt_palettes, scal_unit, row_pointers, and unknowns. By default, these; * are automatically freed when the info structure is deallocated, if they were; * allocated internally by libpng. This behavior can be changed by mean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:282,release,released,282,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['release'],['released']
Deployability,"/* pnglibconf.h - library build configuration */; /* libpng version 1.6.39 */; /* Copyright (c) 2018-2022 Cosmin Truta */; /* Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson */; /* This code is released under the libpng license. */; /* For conditions of distribution and use, see the disclaimer */; /* and license in png.h */; /* pnglibconf.h */; /* Machine generated file: DO NOT EDIT */; /* Derived from: scripts/pnglibconf.dfa */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnglibconf.h:32,configurat,configuration,32,graf2d/asimage/src/libAfterImage/libpng/pnglibconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnglibconf.h,2,"['configurat', 'release']","['configuration', 'released']"
Deployability,"/* pngmem.c - stub functions for memory allocation; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2014,2016 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file provides a location for all memory allocation. Users who; * need special memory handling are expected to supply replacement; * functions for png_malloc() and png_free(), and to use; * png_create_read_struct_2() and png_create_write_struct_2() to; * identify the replacement functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngmem.c:280,release,released,280,graf2d/asimage/src/libAfterImage/libpng/pngmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngmem.c,1,['release'],['released']
Deployability,"/* pngpread.c - read a png file in push mode; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:269,release,released,269,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['release'],['released']
Deployability,"/* pngpriv.h - private declarations for use inside libpng; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* The symbols declared in this file (including the functions declared; * as extern) are PRIVATE. They are not part of the libpng public; * interface, and are not recommended for use by regular applications.; * Some of them may become public in the future; others may stay private,; * change in an incompatible way, or even disappear.; * Although the libpng users are not forbidden to include this header,; * they should be well aware of the issues that may arise from doing so.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:287,release,released,287,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['release'],['released']
Deployability,"/* pngread.c - read a PNG file; *; * Copyright (c) 2018-2019 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file contains routines that an application calls directly to; * read a PNG file or stream.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:260,release,released,260,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['release'],['released']
Deployability,"/* pngrio.c - functions for data input; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2016,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file provides a location for all input. Users who need; * special handling are expected to write a function that has the same; * arguments as this and performs a similar function, but that possibly; * has a different input method. Note that you shouldn't change this; * function, but rather write a replacement function and then make; * libpng use it at run time with png_set_read_fn(...).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:268,release,released,268,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,1,['release'],['released']
Deployability,"/* pngrtran.c - transforms the data in a row for PNG readers; *; * Copyright (c) 2018-2019 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file contains functions optionally called by an application; * in order to tell libpng how to handle data when reading a PNG.; * Transformations that are used in both reading and writing are; * in pngtrans.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:290,release,released,290,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['release'],['released']
Deployability,"/* pngset.c - storage of image information into info struct; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * The functions here are used during reads to store data from the file; * into the info struct, and during writes to store application data; * into the info struct for writing into the file. This abstracts the; * info struct and allows us to change the structure in the future.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:274,release,released,274,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['release'],['released']
Deployability,"/* pngstruct.h - header file for PNG reference library; *; * Copyright (c) 2018-2022 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* The structure that holds the information to read and write PNG files.; * The only people who need to care about what is inside of this are the; * people who will be modifying the library for their own special needs.; * It should NOT be accessed directly by an application.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h:284,release,released,284,graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngstruct.h,1,['release'],['released']
Deployability,"/* pngtest.c - a simple test program to test libpng; *; * Copyright (c) 2018-2019 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This program reads in a PNG image, writes it out again, and then; * compares the two files. If the files are identical, this shows that; * the basic chunk handling, filtering, and (de)compression code is working; * properly. It does not currently test all of the transforms, although; * it probably should.; *; * The program will report ""FAIL"" in certain legitimate cases:; * 1) when the compression level or filter selection method is changed.; * 2) when the maximum IDAT size (PNG_ZBUF_SIZE in pngconf.h) is not 8192.; * 3) unknown unsafe-to-copy ancillary chunks or unknown critical chunks; * exist in the input file.; * 4) others not listed here...; * In these cases, it is best to check with another tool such as ""pngcheck""; * to see what the differences between the two files are.; *; * If a filename is given on the command-line, then this file is used; * for the input, rather than the default ""pngtest.png"". This allows; * testing a wide variety of files easily. You can also test a number; * of files at once by typing ""pngtest -m file1.png file2.png ...""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:281,release,released,281,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['release'],['released']
Deployability,"/* pngtrans.c - transforms the data in a row (used by both readers and writers); *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c:304,release,released,304,graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,1,['release'],['released']
Deployability,"/* pngwio.c - functions for data output; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2014,2016,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file provides a location for all output. Users who need; * special handling are expected to write functions that have the same; * arguments as these and perform similar functions, but that possibly; * use different output methods. Note that you shouldn't change these; * functions, but rather write replacement functions and then change; * them at run time with png_set_write_fn(...).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c:274,release,released,274,graf2d/asimage/src/libAfterImage/libpng/pngwio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c,1,['release'],['released']
Deployability,"/* pngwrite.c - general routines to write a PNG file; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:282,release,released,282,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['release'],['released']
Deployability,"/* pngwtran.c - transforms the data in a row for PNG writers; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2016,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwtran.c:290,release,released,290,graf2d/asimage/src/libAfterImage/libpng/pngwtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwtran.c,1,['release'],['released']
Deployability,"/* pngwutil.c - utilities to write a PNG file; *; * Copyright (c) 2018-2022 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:275,release,released,275,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['release'],['released']
Deployability,"/* previously typedef'd to LZ4_streamDecode_t */; /*-************************************; * Obsolete Functions; **************************************/; /*! Deprecation warnings; *; * Deprecated functions make the compiler generate a warning when invoked.; * This is meant to invite users to update their source code.; * Should deprecation warnings be a problem, it is generally possible to disable them,; * typically with -Wno-deprecated-declarations for gcc; * or _CRT_SECURE_NO_WARNINGS in Visual.; *; * Another method is to define LZ4_DISABLE_DEPRECATE_WARNINGS; * before including the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:293,update,update,293,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['update'],['update']
Deployability,"/* recommended values for DEBUGLEVEL :; * 0 : release mode, no debug, all run-time checks disabled; * 1 : enables assert() only, no display; * 2 : reserved, for currently active debug path; * 3 : events once per object lifetime (CCtx, CDict, etc.); * 4 : events once per frame; * 5 : events once per block; * 6 : events once per sequence (verbose); * 7+: events at every position (*very* verbose); *; * It's generally inconvenient to output traces > 5.; * In which case, it's possible to selectively trigger high verbosity levels; * by modifying g_debug_level.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.h:46,release,release,46,builtins/zstd/common/debug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.h,1,['release'],['release']
Deployability,/* release */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AtomicOrdering.h:3,release,release,3,interpreter/llvm-project/llvm/include/llvm/Support/AtomicOrdering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AtomicOrdering.h,3,['release'],['release']
Deployability,/* release hostage */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:3,release,release,3,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['release'],['release']
Deployability,/* release job resources into pools first */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,release,release,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['release'],['release']
Deployability,/* release resources */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,release,release,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['release'],['release']
Deployability,/* scale by the width of the integration region */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:29,integrat,integration,29,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Deployability,/* set error flag in the case of bad integrand behaviour at; a point of the integration range */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:76,integrat,integration,76,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integration']
Deployability,/* single continuous memory segment */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:10,continuous,continuous,10,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['continuous'],['continuous']
Deployability,/* some data left from previous update */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:32,update,update,32,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['update'],['update']
Deployability,/* start of bytes to update crc */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:21,update,update,21,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,9,['update'],['update']
Deployability,"/* the previous line is a patch to compensate for the fact that IBM */; /* machines return a null on a malloc of zero bytes (unlike SGI), */; /* so we have to put in this defense to guard against a memory */; /* fault four lines down. from fossum@austin.ibm.com. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/priorityq.c:26,patch,patch,26,graf3d/eve7/glu/priorityq.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/priorityq.c,1,['patch'],['patch']
Deployability,"/* typedef'd to LZ4F_CDict within lz4frame_static.h */; /*! LZ4F_createCDict() :; * When compressing multiple messages / blocks with the same dictionary, it's recommended to load it just once.; * LZ4F_createCDict() will create a digested dictionary, ready to start future compression operations without startup delay.; * LZ4F_CDict can be created once and shared by multiple threads concurrently, since its usage is read-only.; * `dictBuffer` can be released after LZ4F_CDict creation, since its content is copied within CDict; * @return : digested dictionary for compression, or NULL if failed */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:450,release,released,450,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['release'],['released']
Deployability,"/* typedef'd to LZ4F_dctx in lz4frame.h */; /*! LZ4F_createDecompressionContext() :; * Create a decompressionContext object, which will track all decompression operations.; * Provides a pointer to a fully allocated and initialized LZ4F_decompressionContext object.; * Object can later be released using LZ4F_freeDecompressionContext().; * @return : if != 0, there was an error during context creation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:288,release,released,288,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['release'],['released']
Deployability,/* update BT like a chain */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:3,update,update,3,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['update'],['update']
Deployability,/* update available output */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:3,update,update,3,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['update'],['update']
Deployability,/* update bit shift counter */; /* Need more initial bytes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:3,update,update,3,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['update'],['update']
Deployability,"/* update buffer and position, defer compression until needed */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c:3,update,update,3,builtins/zlib/gzwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzwrite.c,2,['update'],['update']
Deployability,/* update clock after every read request */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,update,update,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['update'],['update']
Deployability,/* update environment assure that children processes will copy the desired; * behaviour */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c:3,update,update,3,interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,1,['update'],['update']
Deployability,/* update existing handler */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,update,update,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['update'],['update']
Deployability,/* update for next sequence */; /* Copy Match */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:3,update,update,3,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['update'],['update']
Deployability,/* update hash table */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_double_fast.c:3,update,update,3,builtins/zstd/compress/zstd_double_fast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_double_fast.c,5,['update'],['update']
Deployability,/* update hash tables */; /* check dictMatchState repcode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_double_fast.c:3,update,update,3,builtins/zstd/compress/zstd_double_fast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_double_fast.c,1,['update'],['update']
Deployability,/* update offset history */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_fast.c:3,update,update,3,builtins/zstd/compress/zstd_fast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_fast.c,1,['update'],['update']
Deployability,/* update progress */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:3,update,update,3,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['update'],['update']
Deployability,/* update ranks */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c:3,update,update,3,builtins/zstd/dictBuilder/divsufsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c,2,['update'],['update']
Deployability,/* update smaller idx */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:3,update,update,3,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,4,['update'],['update']
Deployability,/* update state and reset the rest of it */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:3,update,update,3,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['update'],['update']
Deployability,/* update state and return */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:3,update,update,3,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['update'],['update']
Deployability,/* update state variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,update,update,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['update'],['update']
Deployability,/* update variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:3,update,update,3,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,2,['update'],['update']
Deployability,/* updated rep codes will sink here */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:3,update,updated,3,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['update'],['updated']
Deployability,"/* updates ip, op and anchor */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:3,update,updates,3,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,2,['update'],['updates']
Deployability,"/* was updated by lm_init() */; /* For portability, force little-endian order on all machines: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:7,update,updated,7,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,1,['update'],['updated']
Deployability,/* we need this to update the time stamp! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c:19,update,update,19,misc/rmkdepend/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c,1,['update'],['update']
Deployability,/* we need to have updated all structures prior to; 		 * invokation of the destroy function; 		 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdataset.c:19,update,updated,19,graf2d/win32gdk/gdk/src/glib/gdataset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdataset.c,1,['update'],['updated']
Deployability,"/* when workspace is continuously too large; * during at least this number of times,; * context's memory usage is considered wasteful,; * because it's sized to handle a worst case scenario which rarely happens.; * In which case, resize it down to free some memory */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:21,continuous,continuously,21,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['continuous'],['continuously']
Deployability,/* widely used configuration options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:15,configurat,configuration,15,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['configurat'],['configuration']
Deployability,/* will update dStage appropriately */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:8,update,update,8,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,2,['update'],['update']
Deployability,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2003 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zconf.h:14,configurat,configuration,14,graf2d/asimage/src/libAfterImage/zlib/zconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zconf.h,1,['configurat'],['configuration']
Deployability,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:14,configurat,configuration,14,builtins/zlib/zconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h,2,['configurat'],['configuration']
Deployability,/* zlib updates these for us: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:8,update,updates,8,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['update'],['updates']
Deployability,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2005 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h:37,configurat,configuration,37,graf2d/asimage/src/libAfterImage/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h,1,['configurat'],['configuration']
Deployability,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:37,configurat,configuration,37,builtins/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h,1,['configurat'],['configuration']
Deployability,/*! BIT_readBits() :; * Read (consume) next n bits from local register and update.; * Pay attention to not read more than nbBits contained into local register.; * @return : extracted value. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:75,update,update,75,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['update'],['update']
Deployability,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:113,release,release,113,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,1,['release'],['release']
Deployability,"/*! Checks condition `e` and reports a warning message if it's false.; * \warning this check is NOT stripped in release mode, so it should not be used for hot paths.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:112,release,release,112,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,1,['release'],['release']
Deployability,/*! Computes update gate values according to equation:; * forget = act(W_input . input + W_state . state + bias); * activation function: sigmoid. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:13,update,update,13,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['update'],['update']
Deployability,/*! Decides the values we'll update (NN with Sigmoid) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:29,update,update,29,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,2,['update'],['update']
Deployability,"/*! Function for parallel backward in the vector of deep nets, where the master; * net is the net calling this function and getting the updates from the other nets,; * following the Nestorov momentum strategy. There is one batch for one deep net.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:136,update,updates,136,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['update'],['updates']
Deployability,"/*! Function for parallel backward in the vector of deep nets, where the master; * net is the net calling this function and getting the updates from the other nets,; * following the momentum strategy. There is one batch for one deep net.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:136,update,updates,136,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['update'],['updates']
Deployability,"/*! Function for parallel backward in the vector of deep nets, where the master; * net is the net calling this function and getting the updates from the other nets.; * There is one batch for one deep net.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:136,update,updates,136,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['update'],['updates']
Deployability,"/*! LZ4F_getFrameInfo() :; * This function extracts frame parameters (max blockSize, frame checksum, etc.).; * Usage is optional. Objective is to provide relevant information for allocation purposes.; * This function works in 2 situations :; * - At the beginning of a new frame, in which case it will decode this information from `srcBuffer`, and start the decoding process.; * Amount of input data provided must be large enough to successfully decode the frame header.; * A header size is variable, but is guaranteed to be <= LZ4F_HEADER_SIZE_MAX bytes. It's possible to provide more input data than this minimum.; * - After decoding has been started. In which case, no input is read, frame parameters are extracted from dctx.; * The number of bytes consumed from srcBuffer will be updated within *srcSizePtr (necessarily <= original value).; * Decompression must resume from (srcBuffer + *srcSizePtr).; * @return : an hint about how many srcSize bytes LZ4F_decompress() expects for next call,; * or an error code which can be tested using LZ4F_isError(); * note 1 : in case of error, dctx is not modified. Decoding operations can resume from where they stopped.; * note 2 : frame parameters are *copied into* an already allocated LZ4F_frameInfo_t structure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:783,update,updated,783,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['update'],['updated']
Deployability,"/*! LZ4_compress_destSize() :; * Reverse the logic : compresses as much data as possible from 'src' buffer; * into already allocated buffer 'dst', of size >= 'targetDestSize'.; * This function either compresses the entire 'src' content into 'dst' if it's large enough,; * or fill 'dst' buffer completely with as much data as possible from 'src'.; * note: acceleration parameter is fixed to ""default"".; *; * *srcSizePtr : will be modified to indicate how many bytes where read from 'src' to fill 'dst'.; * New value is necessarily <= input value.; * @return : Nb bytes written into 'dst' (necessarily <= targetDestSize); * or 0 if compression fails.; *; * Note : from v1.8.2 to v1.9.1, this function had a bug (fixed un v1.9.2+):; * the produced compressed content could, in specific circumstances,; * require to be decompressed into a destination buffer larger; * by at least 1 byte than the content to decompress.; * If an application uses `LZ4_compress_destSize()`,; * it's highly recommended to update liblz4 to v1.9.2 or better.; * If this can't be done or ensured,; * the receiving decompression function should provide; * a dstCapacity which is > decompressedSize, by at least 1 byte.; * See https://github.com/lz4/lz4/issues/859 for details; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:998,update,update,998,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['update'],['update']
Deployability,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1106,update,update,1106,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['update'],['update']
Deployability,/*! The Hadamard product of output_gate_value . tanh(cell_state); * will be copied to next hidden state (passed to next LSTM cell); * and we will update our outputGateValues also. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h:146,update,update,146,tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,1,['update'],['update']
Deployability,"/*! Update the biases, given the current bias gradients. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h:4,Update,Update,4,tmva/tmva/inc/TMVA/DNN/Adadelta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h,6,['Update'],['Update']
Deployability,"/*! Updates the bias gradients, given some other weight gradients and learning rate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:4,Update,Updates,4,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['Update'],['Updates']
Deployability,"/*! Updates the biases, given the gradients and the learning rate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:4,Update,Updates,4,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['Update'],['Updates']
Deployability,"/*! Updates the weight gradients, given some other weight gradients and learning rate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:4,Update,Updates,4,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['Update'],['Updates']
Deployability,"/*! Updates the weights and biases, given the learning rate */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:4,Update,Updates,4,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['Update'],['Updates']
Deployability,"/*! Updates the weights, given the gradients and the learning rate, */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:4,Update,Updates,4,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['Update'],['Updates']
Deployability,"/*! ZSTDMT_flushProduced() :; * flush whatever data has been produced but not yet flushed in current job.; * move to next job if current one is fully flushed.; * `output` : `pos` will be updated with amount of data flushed .; * `blockToFlush` : if >0, the function will block and wait if there is no data available to flush .; * @return : amount of data remaining within internal buffer, 0 if no more, 1 if unknown but > 0, or an error code */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:187,update,updated,187,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['update'],['updated']
Deployability,"/*! ZSTDMT_updateCParams_whileCompressing() :; * Updates a selected set of compression parameters, remaining compatible with currently active frame.; * New parameters will be applied to next compression job. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:49,Update,Updates,49,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Update'],['Updates']
Deployability,"/*! ZSTDMT_updateCParams_whileCompressing() :; * Updates only a selected set of compression parameters, to remain compatible with current frame.; * New parameters will be applied to next compression job. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h:49,Update,Updates,49,builtins/zstd/compress/zstdmt_compress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h,1,['Update'],['Updates']
Deployability,"/*! ZSTD_CCtx_setParameter() :; * Set one compression parameter, selected by enum ZSTD_cParameter.; * All parameters have valid bounds. Bounds can be queried using ZSTD_cParam_getBounds().; * Providing a value beyond bound will either clamp it, or trigger an error (depending on parameter).; * Setting a parameter is generally only possible during frame initialization (before starting compression).; * Exception : when using multi-threading mode (nbWorkers >= 1),; * the following parameters can be updated _during_ compression (within same frame):; * => compressionLevel, hashLog, chainLog, searchLog, minMatch, targetLength and strategy.; * new parameters will be active for next job only (after a flush()).; * @return : an error code (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:500,update,updated,500,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['update'],['updated']
Deployability,"/*! ZSTD_CCtx_setParametersUsingCCtxParams() :; * Apply a set of ZSTD_CCtx_params to the compression context.; * This can be done even after compression is started,; * if nbWorkers==0, this will have no impact until a new compression is started.; * if nbWorkers>=1, new parameters will be picked up at next job,; * with a few restrictions (windowLog, pledgedSrcSize, nbWorkers, jobSize, and overlapLog are not updated).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:410,update,updated,410,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['update'],['updated']
Deployability,"/*! ZSTD_DCtx_loadDictionary() :; * Create an internal DDict from dict buffer,; * to be used to decompress next frames.; * The dictionary remains valid for all future frames, until explicitly invalidated.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special : Adding a NULL (or 0-size) dictionary invalidates any previous dictionary,; * meaning ""return to no-dictionary mode"".; * Note 1 : Loading a dictionary involves building tables,; * which has a non-negligible impact on CPU usage and latency.; * It's recommended to ""load once, use many times"", to amortize the cost; * Note 2 :`dict` content will be copied internally, so `dict` can be released after loading.; * Use ZSTD_DCtx_loadDictionary_byReference() to reference dictionary content instead.; * Note 3 : Use ZSTD_DCtx_loadDictionary_advanced() to take control of; * how dictionary content is loaded and interpreted.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:676,release,released,676,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['release'],['released']
Deployability,"/*! ZSTD_compressStream2() :; * Behaves about the same as ZSTD_compressStream, with additional control on end directive.; * - Compression parameters are pushed into CCtx before starting compression, using ZSTD_CCtx_set*(); * - Compression parameters cannot be changed once compression is started (save a list of exceptions in multi-threading mode); * - output->pos must be <= dstCapacity, input->pos must be <= srcSize; * - output->pos and input->pos will be updated. They are guaranteed to remain below their respective limit.; * - endOp must be a valid directive; * - When nbWorkers==0 (default), function is blocking : it completes its job before returning to caller.; * - When nbWorkers>=1, function is non-blocking : it copies a portion of input, distributes jobs to internal worker threads, flush to output whatever is available,; * and then immediately returns, just indicating that there is some data remaining to be flushed.; * The function nonetheless guarantees forward progress : it will return only after it reads or write at least 1+ byte.; * - Exception : if the first call requests a ZSTD_e_end directive and provides enough dstCapacity, the function delegates to ZSTD_compress2() which is always blocking.; * - @return provides a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; * if @return != 0, flush is not fully completed, there is still some data left within internal buffers.; * This is useful for ZSTD_e_flush, since in this case more flushes are necessary to empty all buffers.; * For ZSTD_e_end, @return == 0 when internal buffers are fully flushed and frame is completed.; * - after a ZSTD_e_end directive, if internal buffer is not fully flushed (@return != 0),; * only ZSTD_e_end or ZSTD_e_flush operations are allowed.; * Before starting a new compression job, or changing compression parameters,; * it is required to fully flush internal buffers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:459,update,updated,459,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['update'],['updated']
Deployability,"/*! ZSTD_createCDict() :; * When compressing multiple messages or blocks using the same dictionary,; * it's recommended to digest the dictionary only once, since it's a costly operation.; * ZSTD_createCDict() will create a state from digesting a dictionary.; * The resulting state can be used for future compression operations with very limited startup cost.; * ZSTD_CDict can be created once and shared by multiple threads concurrently, since its usage is read-only.; * @dictBuffer can be released after ZSTD_CDict creation, because its content is copied within CDict.; * Note 1 : Consider experimental function `ZSTD_createCDict_byReference()` if you prefer to not duplicate @dictBuffer content.; * Note 2 : A ZSTD_CDict can be created from an empty @dictBuffer,; * in which case the only thing that it transports is the @compressionLevel.; * This can be useful in a pipeline featuring ZSTD_compress_usingCDict() exclusively,; * expecting a ZSTD_CDict parameter with any data, including those without a known dictionary. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:490,release,released,490,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,"['pipeline', 'release']","['pipeline', 'released']"
Deployability,"/*! ZSTD_createDDict() :; * Create a digested dictionary, ready to start decompression operation without startup delay.; * dictBuffer can be released after DDict creation, as its content is copied inside DDict. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:141,release,released,141,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['release'],['released']
Deployability,"/*! ZSTD_createDDict() :; * Create a digested dictionary, to start decompression without startup delay.; * `dict` content is copied inside DDict.; * Consequently, `dict` can be released after `ZSTD_DDict` creation */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c:177,release,released,177,builtins/zstd/decompress/zstd_ddict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c,1,['release'],['released']
Deployability,"/*! ZSTD_decompressFrame() :; * @dctx must be properly initialized; * will update *srcPtr and *srcSizePtr,; * to make *srcPtr progress by one frame. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:75,update,update,75,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['update'],['update']
Deployability,/*! ZSTD_overlapCopy8() :; * Copies 8 bytes from ip to op and updates op and ip where ip <= op.; * If the offset is < 8 then the offset is spread to at least 8 bytes.; *; * Precondition: *ip <= *op; * Postcondition: *op - *op >= 8; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:62,update,updates,62,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['update'],['updates']
Deployability,"/*! ZSTD_versionNumber() :; * Return runtime library version, the value is (MAJOR*100*100 + MINOR*100 + RELEASE). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:104,RELEASE,RELEASE,104,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['RELEASE'],['RELEASE']
Deployability,/*! \brief executes one training cycle; *; * \param minimizer the minimizer to be used; * \param weights the weight vector to be used; * \param itPatternBegin the pattern to be trained with; * \param itPatternEnd the pattern to be trained with; * \param settings the settings for the training; * \param dropContainer the configuration for DNN drop-out; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:321,configurat,configuration,321,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['configurat'],['configuration']
Deployability,/*! \brief set the drop-out configuration (layer-wise); *; * \param begin begin of an array or vector denoting the drop-out probabilities for each layer; * \param end end of an array or vector denoting the drop-out probabilities for each layer; * \param _dropRepetitions denotes after how many repetitions the drop-out setting (which nodes are dropped out exactly) is changed; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:28,configurat,configuration,28,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['configurat'],['configuration']
Deployability,"/*!; Tutorial :; ----------; The first step is to count all symbols. FSE_count() does this job very fast.; Result will be saved into 'count', a table of unsigned int, which must be already allocated, and have 'maxSymbolValuePtr[0]+1' cells.; 'src' is a table of bytes of size 'srcSize'. All values within 'src' MUST be <= maxSymbolValuePtr[0]; maxSymbolValuePtr[0] will be updated, with its real value (necessarily <= original value); FSE_count() will return the number of occurrence of the most frequent symbol.; This can be used to know if there is a single symbol within 'src', and to quickly evaluate its compressibility.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()). The next step is to normalize the frequencies.; FSE_normalizeCount() will ensure that sum of frequencies is == 2 ^'tableLog'.; It also guarantees a minimum of 1 to any Symbol with frequency >= 1.; You can use 'tableLog'==0 to mean ""use default tableLog value"".; If you are unsure of which tableLog value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:373,update,updated,373,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['update'],['updated']
Deployability,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:725,configurat,configuration,725,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,1,['configurat'],['configuration']
Deployability,/** @brief class representing a chunk of pages; *; * @author Manuel Schiller <manuel.schiller@nikhef.nl>; * @date 2013-07-24; *; * allocating pages from the OS happens in chunks in order to not exhaust; * the maximum allowed number of memory mappings per process; this class; * takes care of such a chunk; *; * a page chunk allows callers to obtain or release pages in groups of; * continuous pages of fixed size; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:352,release,release,352,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,2,"['continuous', 'release']","['continuous', 'release']"
Deployability,/** @brief handle class for a number of Pages; *; * @author Manuel Schiller <manuel.schiller@nikhef.nl>; * @date 2013-07-24; *; * the associated pages are continuous in memory; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:155,continuous,continuous,155,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['continuous'],['continuous']
Deployability,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1026,update,updated,1026,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['update'],['updated']
Deployability,"/** @defgroup PdfFunc Probability Density Functions (PDF); * @ingroup StatFunc; * Probability density functions of various statistical distributions; * (continuous and discrete).; * The probability density function returns the probability that; * the variate has the value x.; * In statistics the PDF is also called the frequency function.; *; *; */; /** @name Probability Density Functions from MathCore; * Additional PDF's are provided in the MathMore library; * (see PDF functions from MathMore); */; //@{; /**. Probability density function of the beta distribution. \f[ p(x) = \frac{\Gamma (a + b) } {\Gamma(a)\Gamma(b) } x ^{a-1} (1 - x)^{b-1} \f]. for \f$0 \leq x \leq 1 \f$. For detailed description see; <A HREF=""http://mathworld.wolfram.com/BetaDistribution.html"">; Mathworld</A>. @ingroup PdfFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h:153,continuous,continuous,153,math/mathcore/inc/Math/PdfFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h,1,['continuous'],['continuous']
Deployability,"/** @defgroup ProbFunc Cumulative Distribution Functions (CDF). @ingroup StatFunc. * Cumulative distribution functions of various distributions.; * The functions with the extension <em>_cdf</em> calculate the; * lower tail integral of the probability density function; *; * \f[ D(x) = \int_{-\infty}^{x} p(x') dx' \f]; *; * while those with the <em>_cdf_c</em> extension calculate the complement of; * cumulative distribution function, called in statistics the survival; * function.; * It corresponds to the upper tail integral of the; * probability density function; *; * \f[ D(x) = \int_{x}^{+\infty} p(x') dx' \f]; *; *; * <strong>NOTE:</strong> In the old releases (< 5.14) the <em>_cdf</em> functions were called; * <em>_quant</em> and the <em>_cdf_c</em> functions were called; * <em>_prob</em>.; * These names are currently kept for backward compatibility, but; * their usage is deprecated.; *; * These functions are defined in the header file <em>Math/ProbFunc.h</em> or in the global one; * including all statistical functions <em>Math/DistFunc.h</em>; *; */; /**. Complement of the cumulative distribution function of the beta distribution.; Upper tail of the integral of the #beta_pdf. @ingroup ProbFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ProbFuncMathCore.h:660,release,releases,660,math/mathcore/inc/Math/ProbFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ProbFuncMathCore.h,1,['release'],['releases']
Deployability,"/** @defgroup QuantFunc Quantile Functions; * @ingroup StatFunc; *; * Inverse functions of the cumulative distribution functions; * and the inverse of the complement of the cumulative distribution functions; * for various distributions.; * The functions with the extension <em>_quantile</em> calculate the; * inverse of the <em>_cdf</em> function, the; * lower tail integral of the probability density function; * \f$D^{-1}(z)\f$ where; *; * \f[ D(x) = \int_{-\infty}^{x} p(x') dx' \f]; *; * while those with the <em>_quantile_c</em> extension calculate the; * inverse of the <em>_cdf_c</em> functions, the upper tail integral of the probability; * density function \f$D^{-1}(z) \f$ where; *; * \f[ D(x) = \int_{x}^{+\infty} p(x') dx' \f]; *; * The implementation used is that of; * <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Random-Number-Distributions.html"">GSL</A>.; *; * <strong>NOTE:</strong> In the old releases (< 5.14) the <em>_quantile</em> functions were called; * <em>_quant_inv</em> and the <em>_quantile_c</em> functions were called; * <em>_prob_inv</em>.; * These names are currently kept for backward compatibility, but; * their usage is deprecated.; */; /** @name Quantile Functions from MathMore; * The implementation used is that of; * <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Random-Number-Distributions.html"">GSL</A>.; */; //@{; /**. Inverse (\f$D^{-1}(z)\f$) of the cumulative distribution; function of the upper tail of Student's t-distribution; (#tdistribution_cdf_c). For detailed description see; <A HREF=""http://mathworld.wolfram.com/Studentst-Distribution.html"">; Mathworld</A>. The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_19.html#SEC305"">GSL</A>. @ingroup QuantFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/QuantFuncMathMore.h:924,release,releases,924,math/mathmore/inc/Math/QuantFuncMathMore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/QuantFuncMathMore.h,1,['release'],['releases']
Deployability,"/** @defgroup QuantFunc Quantile Functions; * @ingroup StatFunc; *; * Inverse functions of the cumulative distribution functions; * and the inverse of the complement of the cumulative distribution functions; * for various distributions.; * The functions with the extension <em>_quantile</em> calculate the; * inverse of the <em>_cdf</em> function, the; * lower tail integral of the probability density function; * \f$D^{-1}(z)\f$ where; *; * \f[ D(x) = \int_{-\infty}^{x} p(x') dx' \f]; *; * while those with the <em>_quantile_c</em> extension calculate the; * inverse of the <em>_cdf_c</em> functions, the upper tail integral of the probability; * density function \f$D^{-1}(z) \f$ where; *; * \f[ D(x) = \int_{x}^{+\infty} p(x') dx' \f]; *; * These functions are defined in the header file <em>Math/ProbFunc.h</em> or in the global one; * including all statistical functions <em>Math/DistFunc.h</em>; *; *; * <strong>NOTE:</strong> In the old releases (< 5.14) the <em>_quantile</em> functions were called; * <em>_quant_inv</em> and the <em>_quantile_c</em> functions were called; * <em>_prob_inv</em>.; * These names are currently kept for backward compatibility, but; * their usage is deprecated.; *; */; /** @name Quantile Functions from MathCore; * The implementation is provided in MathCore and for the majority of the function comes from; * <A HREF=""http://www.netlib.org/cephes"">Cephes</A>. */; //@{; /**. Inverse (\f$D^{-1}(z)\f$) of the cumulative distribution; function of the upper tail of the beta distribution; (#beta_cdf_c).; It is implemented using the function incbi from <A HREF=""http://www.netlib.org/cephes"">Cephes</A>. @ingroup QuantFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/QuantFuncMathCore.h:945,release,releases,945,math/mathcore/inc/Math/QuantFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/QuantFuncMathCore.h,1,['release'],['releases']
Deployability,"/** @file; * header file containing the templated implementation of matrix inversion; * routines for use with ROOT's SMatrix classes (symmetric positive; * definite case); *; * @author Manuel Schiller; * @date Aug 29 2008; * initial release inside LHCb; * @date May 7 2009; * factored code to provide a nice Cholesky decomposition class, along; * with separate methods for solving a single linear system and to; * obtain the inverse matrix from the decomposition; * @date July 15th 2013; * provide a version of that class which works if the dimension of the; * problem is only known at run time; * @date September 30th 2013; * provide routines to access the result of the decomposition L and its; * inverse; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h:233,release,release,233,math/smatrix/inc/Math/CholeskyDecomp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h,1,['release'],['release']
Deployability,"/** @fn RooStats::ModelConfig::fitTo(); *; * Wrapper around RooAbsPdf::fitTo(), where; * the pdf and some configuration options are retrieved from the ModelConfig.; *; * See ModelConfig::createNLL() for more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:106,configurat,configuration,106,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['configurat'],['configuration']
Deployability,"/** @name Special Functions from MathCore */; /**. Error function encountered in integrating the normal distribution. \f[ erf(x) = \frac{2}{\sqrt{\pi}} \int_{0}^{x} e^{-t^2} dt \f]. For detailed description see; <A HREF=""http://mathworld.wolfram.com/Erf.html"">; Mathworld</A>.; The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_7.html#SEC102"">GSL</A>.; This function is provided only for convenience,; in case your standard C++ implementation does not support; it. If it does, please use these standard version!. @ingroup SpecFunc. */; // (26.x.21.1) error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h:81,integrat,integrating,81,math/mathcore/inc/Math/SpecFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h,1,['integrat'],['integrating']
Deployability,/** @summary Callback from geo painter when mesh object is highlighted. Use for update of TreeTable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:80,update,update,80,ui5/geom/controller/GeomViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js,1,['update'],['update']
Deployability,"/** @summary Central place to update objects drawing; * @param {object} obj - new version of object, values will be updated in original object; * @param {string} [opt] - when specified, new draw options; * @return {boolean|Promise} for object redraw; * @desc Two actions typically done by redraw - update object content via {@link ObjectPainter#updateObject} and; * then redraw correspondent pad via {@link ObjectPainter#redrawPad}. If possible one should redefine; * only updateObject function and keep this function unchanged. But for some special painters this function is the; * only way to control how object can be update while requested from the server; * @protected */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:30,update,update,30,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,12,['update'],"['update', 'updateObject', 'updated']"
Deployability,/** @summary Check editable flag for TGraph; * @desc if arg specified changes or toggles editable flag */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:81,toggle,toggles,81,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggles']
Deployability,/** @summary Check if status bar can be toggled; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:40,toggle,toggled,40,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['toggle'],['toggled']
Deployability,/** @summary Checks if draw elements were resized and drawing should be updated.; * @desc Redirects to {@link TPadPainter#checkCanvasResize}; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:72,update,updated,72,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updated']
Deployability,/** @summary Checks if draw elements were resized and drawing should be updated; * @return {boolean} true if resize was detected; * @protected; * @abstract */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:72,update,updated,72,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updated']
Deployability,/** @summary Collects pad information for TWebCanvas; * @desc need to update different states; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:70,update,update,70,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary Create or update CSS style */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:23,update,update,23,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary Create status line; * @param {number} [height] - size of the status line; * @param [mode] - false / true / 'toggle'; * @return {Promise} when ready */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:121,toggle,toggle,121,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/** @summary Draw/update functions selected before */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,update,update,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary Generic method to update object content.; * @desc Default implementation just copies first-level members to current object; * @param {object} obj - object with new data; * @param {string} [opt] - option which will be used for redrawing; * @protected */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:31,update,update,31,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary Invoke method for object via WebCanvas functionality; * @desc Requires that painter marked with object identifier (this.snapid) or identifier provided as second argument; * Canvas painter should exists and in non-readonly mode; * Execution string can look like 'Print()'.; * Many methods call can be chained with 'Print();;Update();;Clear()'; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:336,Update,Update,336,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Live change and update of title drawing; * @desc Used from the GED */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:29,update,update,29,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary Method informs that something was changed in the canvas; * @desc used to update information on the server (when used with web6gui); * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:86,update,update,86,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['update'],['update']
Deployability,/** @summary Method used to update functions which are prepared before; * @return {Promise} fulfilled when drawing is ready */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:28,update,update,28,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"/** @summary Provides 3D rendering configuration from histogram painter; * @return {Object} with scene, renderer and other attributes; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,configurat,configuration,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,/** @summary Redraw TGraph2D object; * @desc Update histogram drawing if necessary; * @return {Promise} for drawing ready */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:45,Update,Update,45,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Redraw THStack; * @desc Do something if previous update had changed number of histograms */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:62,update,update,62,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"/** @summary Redraw object in specified HTML element with given draw options.; * @param {string|object} dom - id of div element to draw or directly DOMElement; * @param {object} obj - object to draw, object type should be registered before with {@link addDrawFunc}; * @param {string} opt - draw options; * @return {Promise} with painter object; * @desc If drawing was not done before, it will be performed with {@link draw}.; * Otherwise drawing content will be updated; * @public; * @example; * import { openFile } from 'https://root.cern/js/latest/modules/io.mjs';; * import { draw, redraw } from 'https://root.cern/js/latest/modules/draw.mjs';; * let file = await openFile('https://root.cern/js/files/hsimple.root');; * let obj = await file.readObject('hpxpy;1');; * await draw('drawing', obj, 'colz');; * let cnt = 0;; * setInterval(() => {; * obj.fTitle = `Next iteration ${cnt++}`;; * redraw('drawing', obj, 'colz');; * }, 1000); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:462,update,updated,462,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updated']
Deployability,/** @summary Reload configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:20,configurat,configuration,20,ui5/tree/controller/TreeViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js,1,['configurat'],['configuration']
Deployability,/** @summary Set geo painter configuration - used for material creation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:29,configurat,configuration,29,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,/** @summary Should be called when configuration of highlight is changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,configurat,configuration,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,/** @summary Should be called when configuration of particular axis is changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,configurat,configuration,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,/** @summary Should be invoked when light configuration changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:42,configurat,configuration,42,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,"/** @summary Show additional tool buttons on the canvas, false - disabled, true - enabled, 'popup' - only toggle button */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:106,toggle,toggle,106,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/** @summary Show/toggle event status bar; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,toggle,toggle,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['toggle'],['toggle']
Deployability,/** @summary Toggle 3D drawing mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Toggle'],['Toggle']
Deployability,/** @summary Toggle VR mode; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle browser kind */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle browser kind; * @desc used together with browser buttons */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle browser visibility */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle color drawing mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Toggle'],['Toggle']
Deployability,/** @summary Toggle color z palette drawing */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle colz draw option; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle dark mode; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle enlarge state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle fGeoAttBit; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle histogram title drawing */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle log scale on the specified axes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle log state on the specified axis */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle open state of the item; * @desc Used with 'expand all' / 'collapse all' buttons in normal GUI; * @param {boolean} isopen - if items should be expand or closed; * @return {boolean} true when any item was changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle projection */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Toggle'],['Toggle']
Deployability,/** @summary Toggle projection; * @return {Promise} indicating when ready; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Toggle'],['Toggle']
Deployability,/** @summary Toggle stat box drawing; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle statistic box drawing; * @desc Not yet implemented */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,/** @summary Toggle wireframe mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Toggle,Toggle,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Toggle'],['Toggle']
Deployability,"/** @summary Try enlarge main drawing element to full HTML page.; * @param {string|boolean} action - defines that should be done; * @desc Possible values for action parameter:; * - true - try to enlarge; * - false - revert enlarge state; * - 'toggle' - toggle enlarge state; * - 'state' - only returns current enlarge state; * - 'verify' - check if element can be enlarged; * if action not specified, just return possibility to enlarge main div; * @protected */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:243,toggle,toggle,243,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['toggle'],['toggle']
Deployability,/** @summary Update TGraph object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TGraph object members; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TGraph2D object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update THStack object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TMultiGraph object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TPad object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TPave object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TScatter members; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TSpline object; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update TWebPainting object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update VR controllers list; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update VR controllers; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update axes attributes in target histogram; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update frame attributes; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update graphical attributes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update histogram */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Update'],['Update']
Deployability,/** @summary Update histogram object; * @param obj - new histogram instance; * @param opt - new drawing option (optional); * @return {Boolean} - true if histogram was successfully updated */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['Update', 'update']","['Update', 'updated']"
Deployability,/** @summary Update item background; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update item node; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update object in geo painter */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update palette drawing */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary Update specified items; * @desc Method can be used to fetch new objects and update all existing drawings; * @param {string|array|boolean} arg - either item name or array of items names to update or true if only automatic items will be updated; * @return {Promise} when ready */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,8,"['Update', 'update']","['Update', 'update', 'updated']"
Deployability,/** @summary Update statistics when web canvas is drawn */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Update,Update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Update']
Deployability,/** @summary change tooltip allowed flag; * @param {boolean|string} [on = true] set tooltip allowed state or 'toggle'; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:110,toggle,toggle,110,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/** @summary function called at the end of resize of frame; * @desc Used to update attributes on the server; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:76,update,update,76,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary function updates object drawings for other painters; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:22,update,updates,22,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updates']
Deployability,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:25,configurat,configuration,25,ui5/geom/controller/GeomViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,/** @summary processing viewer configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:31,configurat,configuration,31,ui5/tree/controller/TreeViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js,1,['configurat'],['configuration']
Deployability,/** @summary toggle expand state of specified node */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:13,toggle,toggle,13,ui5/browser/model/BrowserModel.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js,1,['toggle'],['toggle']
Deployability,/** @summary update RPad object; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,update,update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary update display item */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,update,update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary update histogram object */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,update,update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary update icons; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,update,update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary update statistic from the server */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,update,update,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/** @summary version date; * @desc Release date in format day/month/year like '14/04/2022' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,Release,Release,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Release'],['Release']
Deployability,/** @summary version id; * @desc For the JSROOT release the string in format 'major.minor.patch' like '7.0.0' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:48,release,release,48,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['patch', 'release']","['patch', 'release']"
Deployability,"/** API class for the user interaction with the parameters;; serves as input to the minimizer as well as output from it;; users can interact: Fix/release parameters, set values and errors, etc.;; parameters can be accessed via their Parameter number (determined; internally by Minuit and followed the order how the parameters are created); or via their user-specified Name (10 character string).; Minuit has also an internal parameter number which is used during the minimization; (the fix parameter are skipped). The parameter number used in this class is the external; one. The class ROOT::Minuit2::MnUserTransformation is used to keep the; internal <-> external transformation; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameters.h:146,release,release,146,math/minuit2/inc/Minuit2/MnUserParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameters.h,1,['release'],['release']
Deployability,/** Adds a the elements in matrix B scaled by c to the elements in; * the matrix A. This is required for the weight update in the gradient; * descent step.*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:116,update,update,116,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,3,['update'],['update']
Deployability,/** Basic constructor of GaussLegendreIntegrator.; \@param num Number of desired points to calculate the integration.; \@param eps Desired relative error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:105,integrat,integration,105,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,1,['integrat'],['integration']
Deployability,/** Configuration parameters which can be configured on the client; * Send as is to-from client */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:4,Configurat,Configuration,4,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['Configurat'],['Configuration']
Deployability,/** Constructs a new function-by-function pass pipeline over the module; provider. It does not take ownership of the module provider. This type of; pipeline is suitable for code generation and JIT compilation tasks.; @see llvm::FunctionPassManager::FunctionPassManager */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:47,pipeline,pipeline,47,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,['pipeline'],['pipeline']
Deployability,"/** Default Constructor.; If the tolerance are not given, use default values specified in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:102,Integrat,IntegratorOneDimOptions,102,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['Integrat'],['IntegratorOneDimOptions']
Deployability,/** Disconnect scene from the updates */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:30,update,updates,30,ui5/eve7/lib/EveManager.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js,1,['update'],['updates']
Deployability,"/** Frees the memory of a pass pipeline. For function pipelines, does not free; the module provider.; @see llvm::PassManagerBase::~PassManagerBase. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:31,pipeline,pipeline,31,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"/** Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integration methods); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:45,Integrat,Integrator,45,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,5,"['Integrat', 'integrat']","['Integrator', 'integration']"
Deployability,/** MinimumError keeps the inv. 2nd derivative (inv. Hessian) used for; calculating the Parameter step size (-V*g) and for the covariance Update; (ErrorUpdator). The covariance matrix is equal to twice the inv. Hessian.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MinimumError.h:138,Update,Update,138,math/minuit2/inc/Minuit2/MinimumError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MinimumError.h,1,['Update'],['Update']
Deployability,/** OpenMP target update directive.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:18,update,update,18,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['update'],['update']
Deployability,/** Release CNN data/operator descriptors. Not used at the moment.*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:4,Release,Release,4,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['Release'],['Release']
Deployability,/** Return method to toggle rendering self */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:21,toggle,toggle,21,ui5/eve7/controller/Ged.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js,1,['toggle'],['toggle']
Deployability,"/** Returns Integral of function on a lower semi-infinite interval.; This function computes, to an attempted specified accuracy, the value of the integral:; \f[; I = \int^{B}_{-\infty} f(x)dx; \f]; Usage:; In any arithmetic expression, this function has the approximate value; of the integral I.; - B: upper end-point of integration interval. The integral is mapped onto [0,1] using a transformation then integral computation is surrogated to DoIntegral.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:321,integrat,integration,321,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Deployability,"/** Returns Integral of function on an upper semi-infinite interval.; This function computes, to an attempted specified accuracy, the value of the integral:; \f[; I = \int^{\infty}_{A} f(x)dx; \f]; Usage:; In any arithmetic expression, this function has the approximate value; of the integral I.; - A: lower end-point of integration interval. The integral is mapped onto [0,1] using a transformation then integral computation is surrogated to DoIntegral.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:321,integrat,integration,321,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Deployability,"/** Returns pointer with ownership, normally via unique_ptr<T>::release() or tobj->Clone() */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RHolder.hxx:64,release,release,64,gui/browsable/inc/ROOT/Browsable/RHolder.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RHolder.hxx,1,['release'],['release']
Deployability,/** Set integration function (flag control if function must be copied inside).; \@param f Function to be used in the calculations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:8,integrat,integration,8,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Deployability,"/** Testing the entire pipeline of the Method DL, when only a Convolutional Net; * is constructed. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h:23,pipeline,pipeline,23,tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h,1,['pipeline'],['pipeline']
Deployability,"/** Testing the entire pipeline of the Method DL, when only a Multilayer Percepton; * is constructed with various optimizers. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLOptimization.h:23,pipeline,pipeline,23,tmva/tmva/test/DNN/TestMethodDLOptimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLOptimization.h,1,['pipeline'],['pipeline']
Deployability,"/** Testing the entire pipeline of the Method DL, when only a Multilayer Percepton; * is constructed. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestRegressionMethodDL.cxx:23,pipeline,pipeline,23,tmva/tmva/test/DNN/TestRegressionMethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestRegressionMethodDL.cxx,1,['pipeline'],['pipeline']
Deployability,"/** ZSTD_BtFindBestMatch() : Tree updater, providing best match */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:34,update,updater,34,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['update'],['updater']
Deployability,/** ZSTD_ldm_fillLdmHashTable() :; *; * Fills hashTable from (lastHashed + 1) to iend (non-inclusive).; * lastHash is the rolling hash that corresponds to lastHashed.; *; * Returns the rolling hash corresponding to position iend-1. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c:122,rolling,rolling,122,builtins/zstd/compress/zstd_ldm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c,2,['rolling'],['rolling']
Deployability,"/** ZSTD_ldm_limitTableUpdate() :; *; * Sets cctx->nextToUpdate to a position corresponding closer to anchor; * if it is far way; * (after a long match, only update tables a limited amount). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c:158,update,update,158,builtins/zstd/compress/zstd_ldm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c,1,['update'],['update']
Deployability,"/** ZSTD_ldm_makeEntryAndInsertByTag() :; *; * Gets the small hash, checksum, and tag from the rollingHash.; *; * If the tag matches (1 << ldmParams.hashRateLog)-1, then; * creates an ldmEntry from the offset, and inserts it into the hash table.; *; * hBits is the length of the small hash, which is the most significant hBits; * of rollingHash. The checksum is the next 32 most significant bits, followed; * by ldmParams.hashRateLog bits that make up the tag. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c:95,rolling,rollingHash,95,builtins/zstd/compress/zstd_ldm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.c,2,['rolling'],['rollingHash']
Deployability,/** \brief action to be done after the computation of a test sample (e.g. update some monitoring output); *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx:74,update,update,74,tmva/tmva/src/NeuralNet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx,1,['update'],['update']
Deployability,/** \brief action to be done when the test cycle is started (e.g. update some monitoring output); *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx:66,update,update,66,tmva/tmva/src/NeuralNet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx,1,['update'],['update']
Deployability,/** \brief action to be done when the training cycle is ended (e.g. update some monitoring output); *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx:68,update,update,68,tmva/tmva/src/NeuralNet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx,2,['update'],['update']
Deployability,/** \brief action to be done when the training cycle is started (e.g. update some monitoring output); *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx:70,update,update,70,tmva/tmva/src/NeuralNet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/NeuralNet.cxx,1,['update'],['update']
Deployability,"/** \class AdaptiveIntegratorMultiDim; \ingroup Integration. Class for adaptive quadrature integration in multi-dimensions using rectangular regions.; Algorithm from A.C. Genz, A.A. Malik, An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302. Converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120); The new code features many changes compared to the Fortran version. Control parameters are:. - \f$ minpts \f$: Minimum number of function evaluations requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:48,Integrat,Integration,48,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,3,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,"/** \class CombinedCalculator; \ingroup Roostats. CombinedCalculator is an interface class for a tools which can produce both RooStats; HypoTestResults and ConfIntervals. The interface currently assumes that any such; calculator can be configured by specifying:. - a model common model (eg. a family of specific models which includes both the null and alternate),; - a data set,; - a set of parameters of which specify the null (including values and const/non-const status),; - a set of parameters of which specify the alternate (including values and const/non-const status),; - a set of parameters of nuisance parameters (including values and const/non-const status). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface also allows one to pass the model,; data, and parameters without a workspace (which is created internally). After configuring the calculator, one only needs to ask GetHypoTest() (which will; return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how; the nuisance parameters are dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem; in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h:1213,integrat,integration,1213,roofit/roostats/inc/RooStats/CombinedCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h,1,['integrat'],['integration']
Deployability,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:31,Configurat,Configuration,31,roofit/multiprocess/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx,4,"['Configurat', 'configurat', 'deploy']","['Configuration', 'configuration', 'deployed']"
Deployability,"/** \class HistoFactor; * \ingroup HistFactory; * Configuration for an *un*constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:50,Configurat,Configuration,50,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Configurat'],['Configuration']
Deployability,"/** \class HistoSys; * \ingroup HistFactory; * Configuration for a constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:47,Configurat,Configuration,47,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Configurat'],['Configuration']
Deployability,"/** \class HypoTestCalculator; \ingroup Roostats. HypoTestCalculator is an interface class for a tools which produce RooStats; HypoTestResults. The interface currently assumes that any hypothesis test; calculator can be configured by specifying:. - a model for the null,; - a model for the alternate,; - a data set,; - a set of parameters of which specify the null (including values and const/non-const status), and; - a set of parameters of which specify the alternate (including values and const/non-const status). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetHypoTest, which will; return a HypoTestResult pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculator.h:953,integrat,integration,953,roofit/roostats/inc/RooStats/HypoTestCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculator.h,1,['integrat'],['integration']
Deployability,"/** \class IntervalCalculator; \ingroup Roostats. IntervalCalculator is an interface class for a tools which produce RooStats; ConfIntervals. The interface currently assumes that any interval calculator can; be configured by specifying:. - a model,; - a data set,; - a set of parameters of interest,; - a set of nuisance parameters (eg. parameters on which the model depends, but are not of interest), and; - a confidence level or size of the test (eg. rate of Type I error). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetInterval, which will; return a ConfInterval pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h:910,integrat,integration,910,roofit/roostats/inc/RooStats/IntervalCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h,1,['integrat'],['integration']
Deployability,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:989,update,update,989,roofit/multiprocess/src/Messenger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx,1,['update'],['update']
Deployability,/** \class NormFactor; * \ingroup HistFactory; * Configuration for an \a un- constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Configurat,Configuration,49,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Configurat'],['Configuration']
Deployability,/** \class OverallSys; * \ingroup HistFactory; * Configuration for a constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Configurat,Configuration,49,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Configurat'],['Configuration']
Deployability,"/** \class ProofConfig; \ingroup Roostats. Holds configuration options for proof and proof-lite. This class will be expanded in the future to hold more specific configuration; options for the tools in RooStats. Access to TProof::Mgr for configuration is still possible as usual; (e.g. to set Root Version to be used on workers). You can do:. ~~~ {.cpp}; TProof::Mgr(""my.server.url"")->ShowROOTVersions(); TProof::Mgr(""my.server.url"")->SetROOTVersion(""v5-27-06_dbg""); ~~~. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h:49,configurat,configuration,49,roofit/roostats/inc/RooStats/ProofConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h,3,['configurat'],['configuration']
Deployability,"/** \class REveChunkManager; \ingroup REve; Vector-like container with chunked memory allocation. Allocation chunk can accommodate fN atoms of byte-size fS each.; The chunks themselves are TArrayCs and are stored in a std::vector<TArrayC*>.; Holes in the structure are not supported, neither is removal of atoms.; The structure can be Refit() to occupy a single contiguous array.; */; ////////////////////////////////////////////////////////////////////////////////; /// Release all memory chunks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveChunkManager.cxx:471,Release,Release,471,graf3d/eve7/src/REveChunkManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveChunkManager.cxx,1,['Release'],['Release']
Deployability,"/** \class REveManager::ChangeGuard; \ingroup REve; RAII guard for locking Eve manager (ctor) and processing changes (dtor).; */; //////////////////////////////////////////////////////////////////////; //; // Helper struct to guard update mechanism; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveManager.cxx:232,update,update,232,graf3d/eve7/src/REveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveManager.cxx,1,['update'],['update']
Deployability,/** \class REveProjectionManager; \ingroup REve; Manager class for steering of projections and managing projected objects. Recursively projects REveElement's and draws axis in the projected; scene. It enables to interactively set REveProjection parameters; and updates projected scene accordingly.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx:261,update,updates,261,graf3d/eve7/src/REveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx,1,['update'],['updates']
Deployability,"/** \class REveTrans; \ingroup REve; REveTrans is a 4x4 transformation matrix for homogeneous coordinates; stored internally in a column-major order to allow direct usage by; GL. The element type is Double32_t as statically the floats would; be precise enough but continuous operations on the matrix must; retain precision of column vectors. Cartan angles are stored in fA[1-3] (+z, -y, +x). They are; recalculated on demand. Direct element access (first two should be used with care):; - operator[i] direct access to elements, i:0->15; - CM(i,j) element 4*j + i; i,j:0->3 { CM ~ c-matrix }; - operator(i,j) element 4*(j-1) + i - 1 i,j:1->4. Column-vector access:; USet Get/SetBaseVec(), Get/SetPos() and Arr[XYZT]() methods. For all methods taking the matrix indices:; 1->X, 2->Y, 3->Z; 4->Position (if applicable). 0 reserved for time. Shorthands in method-names:; LF ~ LocalFrame; PF ~ ParentFrame; IP ~ InPlace; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrans.cxx:264,continuous,continuous,264,graf3d/eve7/src/REveTrans.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrans.cxx,1,['continuous'],['continuous']
Deployability,/** \class RFont; \ingroup GpadROOT7; \brief Custom font configuration for the RCanvas; \author Sergey Linev <s.linev@gsi.de>; \date 2021-07-02; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFont.hxx:57,configurat,configuration,57,graf2d/primitivesv7/inc/ROOT/RFont.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFont.hxx,1,['configurat'],['configuration']
Deployability,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:332,integrat,integration,332,roofit/roofit/src/RooJeffreysPrior.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx,2,['integrat'],['integration']
Deployability,"/** \class RooStats::FeldmanCousins; \ingroup Roostats. The FeldmanCousins class (like the Feldman-Cousins technique) is essentially a; specific configuration of the more general NeymanConstruction. It is a concrete; implementation of the IntervalCalculator interface that, which uses the; NeymanConstruction in a particular way. As the name suggests, it returns a; ConfidenceInterval. In particular, it produces a RooStats::PointSetInterval,; which is a concrete implementation of the ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually encoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval. In the case of the Feldman-Cousins approach, the ordering principle is the; likelihood ratio -- motivated by the Neyman-Pearson lemma. When nuisance; parameters are involved, the profile likelihood ratio is the natural; generalization. One may either choose to perform the construction over the full; space of the nuisance parameters, or restrict the nuisance parameters to their; conditional MLE (eg. profiled values). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx:145,configurat,configuration,145,roofit/roostats/src/FeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,/** \class RooStats::HLFactory; \ingroup Roostats. HLFactory is an High Level model Factory allows you to; describe your models in a configuration file; (_datacards_) acting as an interface with the RooFactoryWSTool.; Moreover it provides tools for the combination of models and datasets. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:133,configurat,configuration,133,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['configurat'],['configuration']
Deployability,/** \class StatErrorConfig; * \ingroup HistFactory; * Configuration to automatically assign nuisance parameters for the statistical; * error of the Monte Carlo simulations.; * The default is to assign a Poisson uncertainty to a bin when its statistical uncertainty; * is larger than 5% of the bin content.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:54,Configurat,Configuration,54,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Configurat'],['Configuration']
Deployability,"/** \class TAxis3D; \ingroup g3d. The 3D axis painter class. This class provide up to 3 axes to any 3D ROOT plot and ""ZOOM"" service.; ExecuteEvent() method does provide zooming and moving a projection; 3D object within TPad client area. With Zoom mode on the user can access; TAxis3D context menu and set /change the attributes of axes all together; or separately. To add the 3D rulers to any 3D view one has to create; an instance of this class and Draw it. ~~~ {.cpp}; TAxis3D rulers;; rulers.Draw();; ~~~. One can use a static method to create ruler and attach it to the current gPad. ~~~ {.cpp}; TAxis3D::ToggleRulers(); // Brings the 3D axes up; TAxis3D::ToggleRulers(); // next calls remove the rulers from the TPad etc; ~~~. To activate Zoomer one may call. ~~~ {.cpp}; TAxis3D::ToggleZoom();; ~~~. each time one needs move or zoom the image. Then the user can:. - move:; \image html g3d_axis3d_01.png; - zoom:; \image html g3d_axis3d_02.png. its 3D view with <left-mouse button> press / move.; The ""Zoom"" deactivates itself just the user release the <left-mouse button>. To change attributes of the rulers attached to the current Pad, one may; query its pointer first:. ~~~ {.cpp}; TAxis3D *axis = TAxis3D::GetPadAxis(); // Ask axis pointer; if (axis) {; TAxis3D::ToggleRulers() // To pop axes down; axis->SetLabelColor(kBlue); // Paint the axes labels with blue color; axis->SetAxisColor(kRed); // Paint the axes itself with blue color; TAxis3D::ToggleRulers() // To pop axes up; }; ~~~. The attributes of the created axes are affected by the current style; (see TStyle class ) and Set... methods of this class. For example:; ~~~ {.cpp}; gStyle->SetAxisColor(kYellow,""X"");; gStyle->SetAxisColor(kYellow,""Y"");; gStyle->SetAxisColor(kYellow,""Z"");. gStyle->SetLabelColor(kYellow,""X"");; gStyle->SetLabelColor(kYellow,""Y"");; gStyle->SetLabelColor(kYellow,""Z"");. TAxis3D::ToggleRulers();; TAxis3D::ToggleRulers();; ~~~. will draw all axes and labels with yellow color.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TAxis3D.cxx:609,Toggle,ToggleRulers,609,graf3d/g3d/src/TAxis3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TAxis3D.cxx,8,"['Toggle', 'release']","['ToggleRulers', 'ToggleZoom', 'release']"
Deployability,/** \class TEveGedEditor; \ingroup TEve; Specialization of TGedEditor for proper update propagation to TEveManager.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGedEditor.cxx:81,update,update,81,graf3d/eve/src/TEveGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGedEditor.cxx,1,['update'],['update']
Deployability,/** \class TEvePad; \ingroup TEve; This was intended as a TPad wrapper to allow smart updates of; groups of pads. Uses THashList instead of TList for faster removal; of objects from the pad.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePad.cxx:86,update,updates,86,graf3d/eve/src/TEvePad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePad.cxx,1,['update'],['updates']
Deployability,/** \class TEvePadHolder; \ingroup TEve; Exception safe wrapper for setting gPad.; Optionally calls gPad->Modified()/Update() in destructor.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:117,Update,Update,117,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,1,['Update'],['Update']
Deployability,"/** \class TEveParamListEditor; \ingroup TEve; GUI editor for TEveParamList. Slot methods from this object do not call Update, instead they call; their model's ParamChanged(const char* name) function which emits a; corresponding signal. This helps in handling of parameter changes as they are probably; related to displayed objects in a more complicated way. Further,; the TGCheckButton::HandleButton() emits more signal after the; Clicked() signal and if model is reset in the editor, its contents; is removed. This results in a crash.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx:119,Update,Update,119,graf3d/eve/src/TEveParamList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx,1,['Update'],['Update']
Deployability,/** \class TEveProjectionManager; \ingroup TEve; Manager class for steering of projections and managing projected objects. Recursively projects TEveElement's and draws axis in the projected; scene. It enables to interactively set TEveProjection parameters; and updates projected scene accordingly.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:261,update,updates,261,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,1,['update'],['updates']
Deployability,"/** \class TEveTrans; \ingroup TEve; TEveTrans is a 4x4 transformation matrix for homogeneous coordinates; stored internally in a column-major order to allow direct usage by; GL. The element type is Double32_t as statically the floats would; be precise enough but continuous operations on the matrix must; retain precision of column vectors. Cartan angles are stored in fA[1-3] (+z, -y, +x). They are; recalculated on demand. Direct element access (first two should be used with care):; - operator[i] direct access to elements, i:0->15; - CM(i,j) element 4*j + i; i,j:0->3 { CM ~ c-matrix }; - operator(i,j) element 4*(j-1) + i - 1 i,j:1->4. Column-vector access:; USet Get/SetBaseVec(), Get/SetPos() and Arr[XYZT]() methods. For all methods taking the matrix indices:; 1->X, 2->Y, 3->Z; 4->Position (if applicable). 0 reserved for time. Shorthands in method-names:; LF ~ LocalFrame; PF ~ ParentFrame; IP ~ InPlace; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrans.cxx:264,continuous,continuous,264,graf3d/eve/src/TEveTrans.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrans.cxx,1,['continuous'],['continuous']
Deployability,"/** \class TExec; \ingroup Base. TExec is a utility class that can be used to execute a C++ command; when some event happens in a pad.; The command in turn can invoke a C++ macro to paint graphics objects; at positions depending on the histogram or graph contents. ### Case 1:. The TExec object is in the list of pad primitives (after exec.Draw()).; When the pad is drawn, the TExec::Paint function is called. This function; will execute the specified command.; The following example uses the services of the class Aclock created; in `$ROOTSYS/test/Aclock.cxx`.; This examples uses a TTimer to redraw a pad at regular intervals (clock).; When the clock is updated, a string with the current date&time is drawn.; ~~~ {.cpp}; {; gSystem->Load(""$ROOTSYS/test/Aclock"");; Aclock ck(400);; gPad->SetFillColor(5);; TDatime dt;; TText t(.5,.3,""t"");; t.SetTextAlign(22);; t.SetTextSize(.07);; t.SetTextColor(4);; t.Draw();; TExec ex(""ex"",""dt.Set();t.SetTitle(dt.AsString())"");; ex.Draw();; }; ~~~. ### Case 2:. The TExec object may be added to the list of functions of a TH1 or TGraph; object via hist->GetListOfFunctions()->Add(exec).; When the histogram (or graph) is drawn, the TExec will be executed.; If the histogram is made persistent on a file, the TExec object; is also saved with the histogram. When redrawing the histogram in a; new session, the TExec will be executed. Example:. Assume an histogram TH1F *h already filled.; ~~~ {.cpp}; TExec *ex1 = new TExec(""ex1"",""DoSomething()"");; TExec *ex2 = new TExec(""ex2"","".x macro.C"");; h->GetListOfFunctions()->Add(ex1);; h->GetListOfFunctions()->Add(ex2);; h->Draw();; ~~~. When the Paint function for the histogram will be called, the ""DoSomething""; function will be called (interpreted or compiled) and also the macro.C. ### Case 3:. A TExec object is automatically generated when invoking TPad::AddExec.; Each pad contains a TList of TExecs (0, 1 or more). When a mouse event; (motion, click, etc) happens, the pad object executes sequentially; this l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TExec.cxx:656,update,updated,656,core/base/src/TExec.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TExec.cxx,1,['update'],['updated']
Deployability,"/** \class TFastCgi; \ingroup http. THttpEngine implementation, based on fastcgi package. Allows to redirect http requests from normal web server like; Apache2 or lighttpd. Configuration example for lighttpd:. server.modules += ( ""mod_fastcgi"" ); fastcgi.server = (; ""/remote_scripts/"" =>; (( ""host"" => ""192.168.1.11"",; ""port"" => 9000,; ""check-local"" => ""disable"",; ""docroot"" => ""/""; )); ). When creating THttpServer, one should specify:. THttpServer* serv = new THttpServer(""fastcgi:9000"");. In this case, requests to lighttpd server will be; redirected to ROOT session. Like: `http://lighttpdhost/remote_scripts/root.cgi/`. Following additional options can be specified. top=foldername - name of top folder, seen in the browser; thrds=N - run N worker threads to process requests, default 10; debug=1 - run fastcgi server in debug mode. Example:. serv->CreateEngine(""fastcgi:9000?top=fastcgiserver"");; */; ////////////////////////////////////////////////////////////////////////////////; /// normal constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TFastCgi.cxx:173,Configurat,Configuration,173,net/http/src/TFastCgi.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TFastCgi.cxx,1,['Configurat'],['Configuration']
Deployability,"/** \class TGLSceneBase; \ingroup opengl; Scene base-class -- provides basic interface expected by the; TGLViewer or its sub-classes:; - unique scene id; - scene locking; - overall bounding box; - list of viewers displaying the scene (for update propagation); - virtual interface for draw/select/render (?). The standard ROOT OpenGL scene is implemented in direct sub-class TGLScene. Note that while each scene can be shared among several viewers, ALL; of them are obliged to share the same display-list space (this can; be achieved on GL-context creation time; Matevz believes that by; default all GL contexts must use shared display-lists etc).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx:239,update,update,239,graf3d/gl/src/TGLSceneBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx,1,['update'],['update']
Deployability,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:198,release,release,198,geom/geom/src/TGeoExtension.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx,1,['release'],['release']
Deployability,"/** \class TGeoRCExtension; \ingroup Geometry_classes. Reference counted extension which has a pointer to and; owns a user defined TObject. This class can be used as; model for a reference counted derivation from TGeoExtension. Note: Creating a TGeoRCExtension with new() automatically grabs it, but the; creator has to Release it before the pointer gets out of scope.; The following sequence is valid:. ~~~ {.cpp}; // producer:; TGeoRCExtension *ext = new TGeoRCExtension();; some_TGeoVolume->SetUserExtension(ext);; ext->Release();; // user:; TGeoRCExtension *ext = dynamic_cast<TGeoRCExtension*>(some_TGeoVolume->GrabUserExtension());; // ... use extension; ext->Release();; ~~~. The extension is going to be released by the TGeoVolume holder at the destruction; or when calling SetUserExtension(0). The following usage is not correct:. ~~~ {.cpp}; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); ~~~. since the producer code does not release the extension.; One cannot call directly ""delete ext"" nor allocate an extension on the stack,; since the destructor is protected. Use Release instead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:320,Release,Release,320,geom/geom/src/TGeoExtension.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx,6,"['Release', 'release']","['Release', 'release', 'released']"
Deployability,"/** \class TGeoRCPtr; \ingroup Geometry_classes. A reference counting-managed pointer for classes derived from TGeoExtension; which can be used as C pointer. Based on CodeProject implementation example. ### Example:. ~~~ {.cpp}; class MyExtension : public TGeoExtension {; public:; MyExtension() : TGeoExtension(), fRC(0) {printf(""Created MyExtension\n"");}; virtual ~MyExtension() {printf(""Deleted MyExtension\n"");}. virtual TGeoExtension *Grab() const {fRC++; return (TGeoExtension*)this;}; virtual void Release() const {assert(fRC > 0); fRC--; if (fRC ==0) delete this;}; void print() const {printf(""MyExtension object %p\n"", this);}; private:; mutable Int_t fRC; // Reference counter; ClassDefOverride(MyExtension,1); };; ~~~. ### Usage:. ~~~ {.cpp}; // Module 1 creates an object; TGeoRCPtr<MyExtension> a2 = new MyExtension(); //fRC=1. // Module 2 grabs object; TGeoRCPtr<MyExtension> ptr2 = a2; //fRC=2. // Module 2 invokes a method; ptr2->Print();; (*ptr2).Print();. // Module 1 no longer needs object; a2 = 0; //RC=1. // Module 2 no longer needs object; ptr2 = 0; //object will be destroyed here; ~~~. ### Note:. Event if one forgets to call ptr2 = 0, the object gets delete when the method; using ptr2 gets out of scope.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h:505,Release,Release,505,geom/geom/inc/TGeoRCPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoRCPtr.h,1,['Release'],['Release']
Deployability,"/** \class THnChain; A class to chain together multiple histograms. This class allows to chain together any `THnBase`-derived (`THn` or `THnSparse`); histograms from multiple files. Operations on the axes and projections are; supported. The intent is to allow convenient merging merging of projections; of high-dimensional histograms. \code{.cpp}; // `file1.root` and `file2.root` contain a `THnSparse` named `hsparse`.; THnChain hs(""hsparse"");; hs.AddFile(""file1.root"");; hs.AddFile(""file2.root"");. // Project out axis 0, integrate over other axes.; TH1* h0 = hs.Projection(0);. // Project out axis 0, integrate over other axes in their active ranges.; hs.GetAxis(1)->SetRangeUser(0, 0.1); // select a subrange; TH1* h0 = hs.Projection(0);; \endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnChain.h:523,integrat,integrate,523,hist/hist/inc/THnChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnChain.h,2,['integrat'],['integrate']
Deployability,"/** \class THttpServer; \ingroup http. Online http server for arbitrary ROOT application. Idea of THttpServer - provide remote http access to running; ROOT application and enable HTML/JavaScript user interface.; Any registered object can be requested and displayed in the browser.; There are many benefits of such approach:. 1. standard http interface to ROOT application; 2. no any temporary ROOT files when access data; 3. user interface running in all browsers. To start http server simply create instance; of the THttpServer class like:. serv = new THttpServer(""http:8080"");. This will starts civetweb-based http server with http port 8080.; Than one should be able to open address ""http://localhost:8080""; in any modern web browser (Firefox, Chrome, Opera, ...) and browse objects,; created in ROOT application. By default, server can access files,; canvases and histograms via `gROOT` pointer. All such objects; can be displayed with JSROOT graphics. At any time one could register other objects with the command:. TGraph* gr = new TGraph(10);; gr->SetName(""gr1"");; serv->Register(""graphs/subfolder"", gr);. If objects content is changing in the application, one could; enable monitoring flag in the browser - than objects view; will be regularly updated. More information: https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:1252,update,updated,1252,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,1,['update'],['updated']
Deployability,"/** \class TSVG; \ingroup PS. \brief Interface to SVG. [SVG](http://www.w3.org/Graphics/SVG/Overview.htm8); (Scalable Vector Graphics) is a language for describing; two-dimensional graphics in XML. SVG allows high quality vector graphics in; HTML pages. To print a ROOT canvas ""c1"" into an SVG file simply do:; ~~~ {.cpp}; c1->Print(""c1.svg"");; ~~~; The result is the ASCII file `c1.svg`. It can be open directly using a web browser or included in a html document; the following way:; ~~~ {.cpp}; <embed width=""95%"" height=""500"" src=""c1.svg"">; ~~~; It is best viewed with Internet Explorer and you need the; [Adobe SVG Viewer](http://www.adobe.com/svg/viewer/install/main.html). To zoom using the Adobe SVG Viewer, position the mouse over; the area you want to zoom and click the right button. To define the zoom area,; use Control+drag to mark the boundaries of the zoom area. To pan, use Alt+drag.; By clicking with the right mouse button on the SVG graphics you will get; a pop-up menu giving other ways to interact with the image. SVG files can be used directly in compressed mode to minimize the time; transfer over the network. Compressed SVG files should be created using; `gzip` on a normal ASCII SVG file and should then be renamed; using the file extension `.svgz`.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default SVG constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:659,install,install,659,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['install'],['install']
Deployability,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:325,configurat,configuration,325,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,3,['configurat'],['configuration']
Deployability,"/** \class TSlider; \ingroup gpad. A specialized TPad including a TSliderBox object.; The TSliderBox can be moved in the pad. Slider drawing options include the possibility to change the slider; starting and ending positions or only one of them. The current slider position can be retrieved via the functions; TSlider::GetMinimum and TSlider::GetMaximum; These two functions return numbers in the range [0,1]. If a method has been set (via TSlider::SetMethod), the expression is; executed via the interpreter when the button 1 is released. if no method has been set, and an object is referenced (TSlider::SetObject; has been called), while the slider is being moved/resized,; the object ExecuteEvent function is called. ### Example 1 using TSlider::SetMethod. #### macro xyslider.C. ~~~ {.cpp}; void xyslider(); {; // Example of macro featuring two sliders; TFile *f = new TFile(""hsimple.root"");; TH2F *hpxpy = (TH2F*)f->Get(""hpxpy"");; TCanvas *c1 = new TCanvas(""c1"");; TPad *pad = new TPad(""pad"",""Color plot pad"",0.1,0.1,0.98,0.98);; pad->Draw();; pad->cd();; hpxpy->Draw(""COLZ"");; c1->cd();. // Create two sliders in main canvas. When button1 will be released; // the macro action.C will be called.; TSlider *xslider = new TSlider(""xslider"",""x"",0.1,0.02,0.98,0.08);; xslider->SetMethod("".x action.C"");; TSlider *yslider = new TSlider(""yslider"",""y"",0.02,0.1,0.06,0.98);; yslider->SetMethod("".x action.C"");; }; ~~~. #### macro action.C. ~~~ {.cpp}; void action(); {; Int_t nx = hpxpy->GetXaxis()->GetNbins();; Int_t ny = hpxpy->GetYaxis()->GetNbins();; Int_t binxmin = nx*xslider->GetMinimum();; Int_t binxmax = nx*xslider->GetMaximum();; hpxpy->GetXaxis()->SetRange(binxmin,binxmax);; Int_t binymin = ny*yslider->GetMinimum();; Int_t binymax = ny*yslider->GetMaximum();; hpxpy->GetYaxis()->SetRange(binymin,binymax);; pad->cd();; hpxpy->Draw(""COLZ"");; c1->Update();; }; ~~~. The canvas and the sliders created in the above macro are shown in the picture; below. \image html gpad_slider.png. ### Examp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TSlider.cxx:530,release,released,530,graf2d/gpad/src/TSlider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TSlider.cxx,1,['release'],['released']
Deployability,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:1201,Toggle,ToggleEditor,1201,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['Toggle'],['ToggleEditor']
Deployability,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:1549,Update,Update,1549,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['Update'],['Update']
Deployability,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:420,Update,Update,420,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,2,['Update'],['Update']
Deployability,"/** \defgroup CINDEX libclang: C Interface to Clang; *; * The C Interface to Clang provides a relatively small API that exposes; * facilities for parsing source code into an abstract syntax tree (AST),; * loading already-parsed ASTs, traversing the AST, associating; * physical source locations with elements within the AST, and other; * facilities that support Clang-based development tools.; *; * This C interface to Clang will never provide all of the information; * representation stored in Clang's C++ AST, nor should it: the intent is to; * maintain an API that is relatively stable from one release to the next,; * providing only the basic functionality needed to support development tools.; *; * To avoid namespace pollution, data types are prefixed with ""CX"" and; * functions are prefixed with ""clang_"".; *; * @{; */; /**; * An ""index"" that consists of a set of translation units that would; * typically be linked together into an executable or library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:598,release,release,598,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['release'],['release']
Deployability,"/** class TRefProxy; A reference proxy, which allows to access ROOT references (TRef); stored contained in other objects from TTree::Draw; */; ////////////////////////////////////////////////////////////////////////////////; /// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx:256,Update,Update,256,tree/treeplayer/src/TRefProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx,1,['Update'],['Update']
Deployability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:23,Integrat,Integrator,23,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,4,"['Integrat', 'integrat']","['Integration', 'Integrator', 'integration']"
Deployability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used; This is used by the plug-in manager (need a char * instead of enumerations). @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule (from 1 to 6); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:23,Integrat,Integrator,23,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,4,"['Integrat', 'integrat']","['Integration', 'Integrator', 'integration']"
Deployability,/** constructor of GSL MCIntegrator. VEGAS MC is set as default integration type. @param type type of integration using a char * (required by plug-in manager); @param absTol desired absolute Error; @param relTol desired relative Error; @param calls maximum number of function calls; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:64,integrat,integration,64,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,2,['integrat'],['integration']
Deployability,"/** minimizer configuration parameters **/; /// set print level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:14,configurat,configuration,14,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['configurat'],['configuration']
Deployability,/** return the status of the last integration - 0 in case of success */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:34,integrat,integration,34,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Deployability,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:941,release,release,941,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['release'],['release']
Deployability,"/**********************************************************************************; * Project: ROOT - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA * *; * *; * Description: *; * *; * Authors: *; * Lorenzo Moneta *; * *; * Copyright (c) 2022: *; * CERN, Switzerland *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RSofieReader.hxx:110,integrat,integrated,110,tmva/tmva/inc/TMVA/RSofieReader.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RSofieReader.hxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: ROOT - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * *; * Authors: *; * Jonas Rembser (jonas.rembser@cern.ch) *; * *; * Copyright (c) 2024: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RBDT.cxx:110,integrat,integrated,110,tmva/tmva/src/RBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RBDT.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: ROOT - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * *; * Authors: *; * Stefan Wunsch (stefan.wunsch@cern.ch) *; * Jonas Rembser (jonas.rembser@cern.ch) *; * *; * Copyright (c) 2024: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RBDT.hxx:110,integrat,integrated,110,tmva/tmva/inc/TMVA/RBDT.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RBDT.hxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method *; * *; * Authors (alphabetical): *; * Vladimir Ilievsky <ilievski.vladimir@live.com> - CERN, Switzerland *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the method Im2col //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.h:110,integrat,integrated,110,tmva/tmva/test/DNN/CNN/TestIm2Col.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method on the GPU *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Concrete instantiation of the generic Im2Col test for //; // CUDA architectures. //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCuda.cxx:110,integrat,integrated,110,tmva/tmva/test/DNN/CNN/TestIm2ColCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCuda.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling layer in an architecture agnostic manner. *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Max Pooling Layer //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.h:110,integrat,integrated,110,tmva/tmva/test/DNN/CNN/TestPoolingLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BDTEventWrapper *; * *; * *; * Description: *; * *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BDTEventWrapper.cxx:110,integrat,integrated,110,tmva/tmva/src/BDTEventWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BDTEventWrapper.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BDTEventWrapper *; * *; * *; * Description: *; * *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BDTEventWrapper.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/BDTEventWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BDTEventWrapper.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCPruner *; * *; * *; * Description: Cost Complexity Pruning *; *; * Author: Doug Schouten (dschoute@sfu.ca); *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCPruner.cxx:110,integrat,integrated,110,tmva/tmva/src/CCPruner.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCPruner.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCPruner *; * *; * *; * Description: Cost Complexity Pruning *; *; * Author: Doug Schouten (dschoute@sfu.ca); *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////////////////////////////////////////////; // CCPruner - a helper class to prune a decision tree using the Cost Complexity method //; // (see Classification and Regression Trees by Leo Breiman et al) //; // //; // Some definitions: //; // //; // T_max - the initial, usually highly overtrained tree, that is to be pruned back //; // R(T) - quality index (Gini, misclassification rate, or other) of a tree T //; // ~T - set of terminal nodes in T //; // T' - the pruned subtree of T_max that has the best quality index R(T') //; // alpha - the prune strength parameter in Cost Complexity pruning (R_alpha(T) = R(T) + alpha// |~T|) //; // //; // There are two running modes in CCPruner: (i) one may select a prune strength and prune back //; // the tree T_max until the criterion //; // R(T) - R(t) //; // alpha < ---------- //; // |~T_t| - 1 //; // //; // is true for all nodes t in T, or (ii) the algorithm finds the sequence of critical points //; // alpha_k < alpha_k+1 ... < alpha_K such that T_K = root(T_max) and then selects the optimally-pruned //; // subtree, defined to be the subtree with the best quality index for the validation sample. //; ////////////////////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCPruner.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/CCPruner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCPruner.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCTreeWrapper *; * *; * *; * Description: a light wrapper of a decision tree, used to perform cost *; * complexity pruning ""in-place"" Cost Complexity Pruning *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/CCTreeWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCTreeWrapper *; * *; * *; * Description: a light wrapper of a decision tree, used to perform cost *; * complexity pruning ""in-place"" Cost Complexity Pruning *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CCTreeWrapper; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCTreeWrapper.cxx:110,integrat,integrated,110,tmva/tmva/src/CCTreeWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCTreeWrapper.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Interval *; * *; * *; * Description: *; * Extension of the Interval to ""logarithmic"" intervals *; * *; * *; * *; * Authors (alphabetical): *; * Helge Voss <helge.voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LogInterval.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/LogInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LogInterval.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Interval *; * *; * *; * Description: *; * Extension of the Interval to ""logarithmic"" intervals *; * *; * *; * *; * Authors (alphabetical): *; * Helge Voss <helge.voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::LogInterval; \ingroup TMVA. The TMVA::Interval Class. - LogInterval definition, continuous and discrete. - LogInterval(min,max) : a continous interval [min,max]; - LogInterval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:. 1,10,100,1000. 1,2,4,8,16,32,64,128,512,1024. or alike .. ~~~ {.cpp}; Example:; LogInterval(1,10000,5); i=0 --> 1 note: StepSize(ibin=0) = not defined !!; i=1 --> 10 StepSize(ibin=1) = 9; i=2 --> 100 StepSize(ibin=2) = 99; i=3 --> 1000 StepSize(ibin=3) = 999; i=4 --> 10000 StepSize(ibin=4) = 9999. LogInterval(1,1000,11); i=0 --> 1; i=1 --> 1.99526; i=2 --> 3.98107; i=3 --> 7.94328; i=4 --> 15.8489; i=5 --> 31.6228; i=6 --> 63.0957; i=7 --> 125.893; i=8 --> 251.189; i=9 --> 501.187; i=10 --> 1000. LogInterval(1,1024,11); i=0 --> 1; i=1 --> 2; i=2 --> 4; i=3 --> 8; i=4 --> 16; i=5 --> 32; i=6 --> 64; i=7 --> 128; i=8 --> 256; i=9 --> 512; i=10 --> 1024; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LogInterval.cxx:110,integrat,integrated,110,tmva/tmva/src/LogInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LogInterval.cxx,2,"['continuous', 'integrat']","['continuous', 'integrated']"
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MsgLogger *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Joseph McKenna <Joseph.McKenna@cern.ch> - Aarhus, Denmark *; * *; * Copyright (c) 2019: *; * Aarhus, Denmark *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TrainingHistory.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/TrainingHistory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TrainingHistory.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : OptimizeConfigParameters *; * *; * *; * Description: The OptimizeConfigParameters takes care of ""scanning/fitting"" *; * different tuning parameters in order to find the best set of *; * tuning paraemters which will be used in the end *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/OptimizeConfigParameters.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/OptimizeConfigParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/OptimizeConfigParameters.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : OptimizeConfigParameters *; * *; * *; * Description: The OptimizeConfigParameters takes care of ""scanning/fitting"" *; * different tuning parameters in order to find the best set of *; * tuning paraemters which will be used in the end *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/; /*! \class TMVA::OptimizeConfigParameters; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:110,integrat,integrated,110,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * IPruneTool - a helper interface class to prune a decision tree *; * *; * Authors (alphabetical): *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/IPruneTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CostComplexityPruneTool.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/CostComplexityPruneTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CostComplexityPruneTool.h,2,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::CostComplexityPruneTool; \ingroup TMVA; A class to prune a decision tree using the Cost Complexity method.; (see ""Classification and Regression Trees"" by Leo Breiman et al). ### Some definitions:. - \f$ T_{max} \f$ - the initial, usually highly overtrained tree, that is to be pruned back; - \f$ R(T) \f$ - quality index (Gini, misclassification rate, or other) of a tree \f$ T \f$; - \f$ \sim T \f$ - set of terminal nodes in \f$ T \f$; - \f$ T' \f$ - the pruned subtree of \f$ T_max \f$ that has the best quality index \f$ R(T') \f$; - \f$ \alpha \f$ - the prune strength parameter in Cost Complexity pruning \f$ (R_{\alpha}(T) = R(T) + \alpha*|\sim T|) \f$. There are two running modes in CCPruner: (i) one may select a prune strength and prune back; the tree \f$ T_{max}\f$ until the criterion:; \f[; \alpha < \frac{R(T) - R(t)}{|\sim T_t| - 1}; \f]. is true for all nodes t in \f$ T \f$, or (ii) the algorithm finds the sequence of critical points; \f$ \alpha_k < \alpha_{k+1} ... < \alpha_K \f$ such that \f$ T_K",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx:110,integrat,integrated,110,tmva/tmva/src/CostComplexityPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::ExpectedErrorPruneTool; \ingroup TMVA. A helper class to prune a decision tree using the expected error (C4.5) method. Uses an upper limit on the error made by the classification done by each node.; If the \f$ \frac{S}{S+B} \f$ of the node is \f$ f \f$, then according to the; training sample, the error rate (fraction of misclassified events by this; node) is \f$ (1-f) \f$. Now \f$ f \f$ has a statistical error according to the; binomial distribution hence the error on \f$ f \f$ can be estimated (same error; as the binomial error for efficiency calculations; \f$ (\sigma = \sqrt{\frac{(eff(1-eff)}{nEvts}}) \f$. This tool prunes branches from a tree if the expected error of a node is less; than that of the sum of the error in its descendants. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:110,integrat,integrated,110,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TrainingHistory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Joseph McKenna <Joseph.McKenna@cern.ch> - Aarhus, Denmark *; * *; * Copyright (c) 2019: *; * Aarhus, Denmark *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TrainingHistory; \ingroup TMVA. Tracking data from training. Eg, From deep learning record loss for each Epoch. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TrainingHistory.cxx:110,integrat,integrated,110,tmva/tmva/src/TrainingHistory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TrainingHistory.cxx,1,['integrat'],['integrated']
Deployability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VarTransformHandler *; * *; * *; * Description: *; * Implementation of unsupervised variable transformation methods *; * *; * Authors (alphabetical): *; * Abhinav Moudgil <abhinav.moudgil@research.iiit.ac.in> - IIIT-H, India *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VarTransformHandler.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/VarTransformHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VarTransformHandler.h,2,['integrat'],['integrated']
Deployability,"/*********************************************************************************; //; // source:; //; // type: source code; //; // created: 20. Mar 2001; //; // author: Thorsten Glebe; // HERA-B Collaboration; // Max-Planck-Institut fuer Kernphysik; // Saupfercheckweg 1; // 69117 Heidelberg; // Germany; // E-mail: T.Glebe@mpi-hd.mpg.de; //; // Description: A fixed size two dimensional Matrix class; //; // changes:; // 20 Mar 2001 (TG) creation; // 21 Mar 2001 (TG) added operators +=, -=, *=, /=; // 26 Mar 2001 (TG) place_in_row(), place_in_col() added; // 02 Apr 2001 (TG) non-const Array() added; // 03 Apr 2001 (TG) invert() added; // 07 Apr 2001 (TG) CTOR from SVertex (dyadic product) added; // 09 Apr 2001 (TG) CTOR from array added; // 11 Apr 2001 (TG) rows(), cols(), size() replaced by rows, cols, size; // 25 Mai 2001 (TG) row(), col() added; // 04 Sep 2001 (TG) moved inlined functions to .icc file; // 11 Jan 2002 (TG) added operator==(), operator!=(); // 14 Jan 2002 (TG) added more operator==(), operator!=(), operator>(), operator<(); //; ***************************************************************************/; // for platform specific configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:1164,configurat,configurations,1164,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['configurat'],['configurations']
Deployability,"/******************************************************************************/; // TGLFont interface; /******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Release font in the GL rendering context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRnrCtx.cxx:272,Release,Release,272,graf3d/gl/src/TGLRnrCtx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRnrCtx.cxx,1,['Release'],['Release']
Deployability,"/******************************************************************************; * Quantize high resolution image into lower one. Input image consists of a *; * 2D array for each of the RGB colors with size Width by Height. There is no *; * Color map for the input. Output is a quantized image with 2D array of *; * indexes into the output color map. *; * Note input image can be 24 bits at the most (8 for red/green/blue) and *; * the output has 256 colors at the most (256 entries in the color map.). *; * ColorMapSize specifies size of color map up to 256 and will be updated to *; * real size before returning. *; * Also non of the parameter are allocated by this routine. *; * This function returns GIF_OK if successful, GIF_ERROR otherwise. *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:571,update,updated,571,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['update'],['updated']
Deployability,"/******************************************************************************; * Update a new gif file, given its file handle, which must be opened for *; * write in binary mode.							 *; * Returns GifFileType pointer dynamically allocated which serves as the gif *; * info record. _GifError is cleared if successful.			 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:83,Update,Update,83,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['Update'],['Update']
Deployability,/******************************************************************************; Get an interesting event and update the user input information. The routine will eventually block waiting for an event if block is 1; and the no events of interest have shown up.; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:110,update,update,110,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['update'],['update']
Deployability,/******************************************************************************; Update the scene position information using user input. The routine will eventually block waiting for an event if block is True; and the no events of interest show up due to the call to GetInput(); ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:81,Update,Update,81,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['Update'],['Update']
Deployability,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooIntegralMorph; \ingroup Roofit. Class RooIntegralMorph is an implementation of the histogram interpolation; technique described by Alex Read in 'NIM A 425 (1999) 357-369 'Linear interpolation of histograms'; for continuous functions rather than histograms. The interpolation method, in short,; works as follows. - Given a p.d.f f1(x) with c.d.f F1(x) and p.d.f f2(x) with c.d.f F2(x). - One finds takes a value 'y' of both c.d.fs and determines the corresponding x; values x(1,2) at which F(1,2)(x)==y. - The value of the interpolated p.d.f fbar(x) is then calculated as; fbar(alpha*x1+(1-alpha)*x2) = f1(x1)*f2(x2) / ( alpha*f2(x2) + (1-alpha)*f1(x1) ) ;. From a technical point of view class RooIntegralMorph is a p.d.f that takes; two input p.d.fs f1(x,p) an f2(x,q) and an interpolation parameter to; make a p.d.f fbar(x,p,q,alpha). The shapes f1 and f2 are always taken; to be end the end-points of the parameter alpha, regardless of what; the those numeric values are. Since the value of fbar(x) cannot be easily calculated for a given value; of x, class RooIntegralMorph is an implementation of RooAbsCachedPdf and; calculates the shape of the interpolated p.d.f. fbar(x) for all values; of x for a given value of alpha,p,q and caches these values in a histogram; (as implemented by RooAbsCachedPdf). The binning granularity of the cache; can be controlled by the binning named ""cache"" on the RooRealVar representing; the observable x. The fbar sampling algorithm is based ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx:733,continuous,continuous,733,roofit/roofit/src/RooIntegralMorph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooIntegralMorph.cxx,1,['continuous'],['continuous']
Deployability,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:840,integrat,integrated,840,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,2,['integrat'],['integrated']
Deployability,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:1165,integrat,integration,1165,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1458,integrat,integration,1458,roofit/roofitcore/src/RooExtendPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx,2,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAICRegistry.cxx; \class RooAICRegistry; \ingroup Roofitcore. Utility class for operator p.d.f; classes that keeps track of analytical integration codes and; associated normalization and integration sets.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx:843,integrat,integration,843,roofit/roofitcore/src/RooAICRegistry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx,2,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsIntegrator.cxx; \class RooAbsIntegrator; \ingroup Roofitcore. Abstract interface for integrators of real-valued; functions that implement the RooAbsFunc interface.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx:797,integrat,integrators,797,roofit/roofitcore/src/RooAbsIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx,1,['integrat'],['integrators']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsRealLValue.cxx; \class RooAbsRealLValue; \ingroup Roofitcore. Abstract base class for objects that represent a; real value that may appear on the left hand side of an equation ('lvalue').; Each implementation must provide a setVal() member to allow direct modification; of the value. RooAbsRealLValue may be derived, but its functional relation; to other RooAbsArg must be invertible. This class has methods that export the defined range of the lvalue,; but doesn't hold its values because these limits may be derived; from limits of client object. The range serve as integration; range when interpreted as a observable and a boundaries when; interpreted as a parameter.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:1280,integrat,integration,1280,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveGaussKronrodIntegrator1D.cxx; \class RooAdaptiveGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An adaptive Gaussian quadrature method for numerical integration in; which error is estimated based on evaluation at special points; known as the ""Kronrod points"". By suitably picking these points,; abscissas from previous iterations can be reused as part of the new; set of points, whereas usual Gaussian quadrature would require; recomputation of all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a \f$ x \rightarrow 1/x \f$ coordinate; transformation. This class embeds the adaptive Gauss-Kronrod integrator from the; GNU Scientific Library version 1.5 and applies a chosen rule ( 10-,; 21-, 31-, 41, 51- or 61-point). The integration domain is; subdivided and recursively integrated until the required precision; is reached. For integrands with integrable singularities the Wynn epsilon rule; can be selected to speed up the convergence of these integrals.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:841,integrat,integration,841,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,6,['integrat'],"['integrated', 'integration', 'integrator']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveIntegratorND.cxx; \class RooAdaptiveIntegratorND; \ingroup Roofitcore. Adaptive one-dimensional numerical integration algorithm.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:823,integrat,integration,823,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,1,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooCacheManager.cxx; \class RooCacheManager; \ingroup Roofitcore. Manages the storage of any type of data indexed on; the choice of normalization and optionally the set of integrated observables.; The purpose of this class is to facilitate storage of intermediate results; in operator p.d.f.s whose value and inner working are often highly dependent; on the user provided choice of normalization in getVal(). For efficiency reasons these normalization set pointer are; dereferenced as little as possible. This class contains a lookup; table for RooArgSet pointer pairs -> normalization lists. Distinct; pointer pairs that represent the same normalization/projection are; recognized and will all point to the same normalization list. Lists; for up to 'maxSize' different normalization/ projection; configurations can be cached.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCacheManager.cxx:878,integrat,integrated,878,roofit/roofitcore/src/RooCacheManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCacheManager.cxx,2,"['configurat', 'integrat']","['configurations', 'integrated']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooConvCoefVar.cxx; \class RooConvCoefVar; \ingroup Roofitcore. Auxiliary class that represents the coefficient; of a RooAbsAnaConvPdf implementation as a separate RooAbsReal object; to be able to interface these coefficient terms with the generic; RooRealIntegral integration mechanism.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx:971,integrat,integration,971,roofit/roofitcore/src/RooConvCoefVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx,1,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooConvIntegrandBinding.cxx; \class RooConvIntegrandBinding; \ingroup Roofitcore. Implementation of RooAbsFunc that represent the integrand; of a generic (numeric) convolution A (x) B so that it can be; passed to a numeric integrator. This is a utility class for; RooNumConvPdf; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx:929,integrat,integrator,929,roofit/roofitcore/src/RooConvIntegrandBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx,1,['integrat'],['integrator']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGaussKronrodIntegrator1D.cxx; \class RooGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An Gaussian quadrature method for numerical integration in which; error is estimation based on evaluation at special points known as; ""Kronrod points."" By suitably picking these points, abscissas from; previous iterations can be reused as part of the new set of points,; whereas usual Gaussian quadrature would require recomputation of; all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a x -> 1/x coordinate; transformation. This class embeds the Gauss-Kronrod integrator from the GNU; Scientific Library version 1.5 and applies the 10-, 21-, 43- and; 87-point rule in succession until the required target precision is; reached; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:825,integrat,integration,825,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,4,['integrat'],"['integration', 'integrator']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenProdProj.cxx; \class RooGenProdProj; \ingroup Roofitcore. RooGenProdProj is an auxiliary class for RooProdPdf that calculates; a general normalised projection of a product of non-factorising PDFs, e.g.; \f[; P_{x,xy} = \frac{\int ( P1 * P2 * \ldots) \mathrm{d}x}{\int ( P1 * P2 * \ldots ) \mathrm{d}x \mathrm{d}y}; \f]. Partial integrals, which factorise and can be calculated, are calculated; analytically. Remaining non-factorising observables are integrated numerically.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:1162,integrat,integrated,1162,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integrated']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:977,integrat,integration,977,roofit/roofitcore/src/RooGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx,1,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:875,integrat,integrating,875,roofit/roofitcore/src/RooHistError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx,1,['integrat'],['integrating']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooImproperIntegrator1D.cxx; \class RooImproperIntegrator1D; \ingroup Roofitcore. Special numeric integrator that can handle integrals over open domains.; To this end the range is cut in up three pieces: [-inf,-1],[-1,+1] and [+1,inf]; and the outer two pieces, if required are calculated using a 1/x transform; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:804,integrat,integrator,804,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrator']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:836,integrat,integration,836,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,2,"['integrat', 'release']","['integration', 'release']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMultiCategory.cxx; \class RooMultiCategory; \ingroup Roofitcore. Connects several RooAbsCategory objects into; a single category. The states of the multi-category consist of all the permutations; of the input categories.; RooMultiCategory states are automatically defined and updated whenever an input; category modifies its list of states. A RooMultiCategory is not an lvalue, *i.e.* one cannot set its states. Its state simply follows; as a computation from the states of the input categories. This is because the input categories; don't need to be lvalues, so their states cannot be set by the MultiCategory. If all input categories; are lvalues, the RooSuperCategory can be used. It works like RooMultiCategory, but allows for; setting the states.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx:985,update,updated,985,roofit/roofitcore/src/RooMultiCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx,1,['update'],['updated']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:852,integrat,integration,852,roofit/roofitcore/src/RooNormSetCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx,3,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:782,configurat,configuration,782,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,3,"['configurat', 'integrat']","['configuration', 'integrators']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:806,integrat,integrators,806,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,7,"['configurat', 'integrat']","['configuration', 'integrated', 'integration', 'integrator', 'integrators']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:782,configurat,configuration,782,roofit/roofitcore/src/RooNumIntConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx,3,"['configurat', 'integrat']","['configuration', 'integrators']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:806,integrat,integrators,806,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,7,"['configurat', 'integrat']","['configuration', 'integrated', 'integration', 'integrator', 'integrators']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1018,integrat,integration,1018,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1062,release,release,1062,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,2,"['integrat', 'release']","['integration', 'release']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:881,integrat,integration,881,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,5,['integrat'],"['integrated', 'integration', 'integrations']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:801,integrat,integration,801,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,2,['integrat'],"['integration', 'integrator']"
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearVar; /// RooLinearVar is the most general form of a derived real-valued object that can; /// be used by RooRealIntegral to integrate over. The requirements for this are; /// * Can be modified directly (i.e. invertible formula); /// * Jacobian term in integral is constant (but not necessarily 1); ///; /// This class implements the most general form that satisfies these requirements; /// \f[; /// RLV = \mathrm{slope} \cdot x + \mathrm{offset}; /// \f]; /// \f$ x \f$ is required to be a RooRealVar to meet the invertibility criterium,; /// `slope` and `offset` are RooAbsReals, but cannot overlap with \f$ x \f$,; /// *i.e.*, \f$ x \f$ may not be a server of `slope` and `offset`.; ///; /// In the context of a dataset, `slope` may not contain any real-valued dependents; /// (to satisfyt the constant Jacobian requirement). This check cannot be enforced at; /// construction time, but can be performed at run time through the isJacobianOK(depList); /// member function.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:918,integrat,integrate,918,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,1,['integrat'],['integrate']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1342,integrat,integrated,1342,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,1,['integrat'],['integrated']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id: RooSetProxy.h,v 1.21 2007/07/13 21:24:36 wouter Exp $; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \class RooCollectionProxy; \ingroup Roofitcore; Concrete proxy for RooArgSet or RooArgList objects.; A RooCollectionProxy is the general mechanism to store a RooArgSet or RooArgList; with RooAbsArgs in a RooAbsArg.; Creating a RooCollectionProxy adds all members of the proxied RooArgSet to the proxy owners; server list (thus receiving value/shape dirty flags from it) and; registers itself with the owning class. The latter allows the; owning class to update the pointers of RooArgSet or RooArgList contents to reflect; the serverRedirect changes.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCollectionProxy.h:1194,update,update,1194,roofit/roofitcore/inc/RooCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCollectionProxy.h,1,['update'],['update']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * DB, Dieter Best, UC Irvine, best@slac.stanford.edu *; * HT, Hirohisa Tanaka SLAC tanaka@slac.stanford.edu *; * *; * Updated version with analytical integral *; * MP, Marko Petric, J. Stefan Institute, marko.petric@ijs.si *; * *; * Copyright (c) 2000-2013, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNovosibirsk; \ingroup Roofit. RooNovosibirsk implements the Novosibirsk function. Function taken from H. Ikeda et al. NIM A441 (2000), p. 401 (Belle Collaboration). **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:284,Update,Updated,284,roofit/roofit/src/RooNovosibirsk.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx,1,['Update'],['Updated']
Deployability,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:967,continuous,continuous,967,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['continuous'],['continuous']
Deployability,"/**************************************************************************/; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Force update of pad-scenes. Eventually this could be generalized; /// to all scene-types via a virtual function in TGLSceneBase.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:248,update,update,248,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['update'],['update']
Deployability,"/**************************************************************************/; // Bounding-boxes; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Update bounding-boxed of all dependent physicals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLogicalShape.cxx:261,Update,Update,261,graf3d/gl/src/TGLLogicalShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLogicalShape.cxx,1,['Update'],['Update']
Deployability,"/**************************************************************************/; // GLCtxIdentity; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Release all GL resources for current context identity.; /// Requires iteration over all logical shapes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:260,Release,Release,260,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['Release'],['Release']
Deployability,"/**************************************************************************/; // SceneInfo update / check; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Force rebuild of view-dependent scene-info structures.; ///; /// This should be called before calling render (draw/select) if; /// something that affects camera interest has been changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx:91,update,update,91,graf3d/gl/src/TGLViewerBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx,1,['update'],['update']
Deployability,"/**************************************************************************/; // Update methods; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Put scene in update mode, return true if lock acquired.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:81,Update,Update,81,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,2,"['Update', 'update']","['Update', 'update']"
Deployability,"/*******/; /****s* libAfterImage/ASImageDecoder; * NAME; * ASImageDecoder describes the status of reading any particular ASImage,; * as well as providing detail on how it should be done.; * DESCRIPTION; * ASImageDecoder works as an abstraction layer and as the way to; * automate several operations. Most of the transformations in; * libAfterImage are performed as operations on ASScanline data; * structure, that holds all or some of the channels of single image; * scanline. In order to automate data extraction from ASImage into; * ASScanline ASImageDecoder has been designed.; *; * It has following features :; * 1) All missing scanlines, or channels of scanlines will be filled with; * supplied back_color; * 2) It is possible to leave out some channels of the image, extracting; * only subset of channels. It is done by setting only needed flags in; * filter member.; * 3) It is possible to extract sub-image of the image by setting offset_x; * and offset_y to top-left corner of sub-image, out_width - to width of; * the sub-image and calling decode_image_scanline method as many times; * as height of the sub-image.; * 4) It is possible to apply bevel to extracted sub-image, by setting; * bevel member to specific ASImageBevel structure.; *; * Extracted Scanlines will be stored in buffer and it will be updated; * after each call to decode_image_scanline().; * SOURCE; */; /* low level driver (what data to use - native, XImage or ARGB): */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:1313,update,updated,1313,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['update'],['updated']
Deployability,"/****f* libAfterImage/safe_asimage_destroy(); * NAME; * safe_asimage_destroy() either release or destroy asimage, checking; * if it is attached to ASImageManager.; * SYNOPSIS; * int		 safe_asimage_destroy( ASImage *im );; * INPUTS; * im pointer to and ASImage structure.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:86,release,release,86,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['release'],['release']
Deployability,"/****f* libAfterImage/transform/colorize_asimage_vector(); * NAME; * colorize_asimage_vector() creates ASImage from double precision indexed ; * image data - usefull for scientific visualisation.; * SYNOPSIS; * Bool colorize_asimage_vector( ASVisual *asv, ASImage *im,; * 		 	 ASVectorPalette *palette,; * ASAltImFormats out_format,; * int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * im - ASImage to update.; * palette - palette to be used in conversion of double precision; * values into colors.; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * quality - output quality; * RETURN VALUE; * True on success, False on failure.; * DESCRIPTION; * This function will try to convert double precision indexed image data; * into actuall color image using palette. Original data should be ; * attached to ASImage using vector member. Operation is relatively fast ; * and allows representation of scientific data as color image with ; * dynamically changing palette.; *********/; /****f* libAfterImage/transform/create_asimage_from_vector(); * NAME; * create_asimage_from_vector() - convinience function allowing to ; * create new ASImage, set its vector data and colorize it using ; * palette - all in one step.; * SYNOPSIS; * ASImage *create_asimage_from_vector( ASVisual *asv, double *vector,; * unsigned int width,; * unsigned int height,; * ASVectorPalette *palette,; * ASAltImFormats out_format,; * unsigned int compression,; * int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * vector - data to be attached to new ASImage and used to generate; * RGB image; * width, height - size of the new image.; * palette - palette to be used in conversion of double precision; * values into colors.; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:425,update,update,425,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['update'],['update']
Deployability,/**; 	 * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.; 	 * @param {boolean} listen; 	 * @returns {this}; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:16,update,updateDisplay,16,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updateDisplay']
Deployability,"/**; 	 * Changes this controller into a dropdown of options.; 	 *; 	 * Calling this method on an option controller will simply update the options. However, if this; 	 * controller was not already an option controller, old references to this controller are; 	 * destroyed, and a new controller is added to the end of the GUI.; 	 * @example; 	 * // safe usage; 	 *; 	 * gui.add( obj, 'prop1' ).options( [ 'a', 'b', 'c' ] );; 	 * gui.add( obj, 'prop2' ).options( { Big: 10, Small: 1 } );; 	 * gui.add( obj, 'prop3' );; 	 *; 	 * // danger; 	 *; 	 * const ctrl1 = gui.add( obj, 'prop1' );; 	 * gui.add( obj, 'prop2' );; 	 *; 	 * // calling options out of order adds a new controller to the end...; 	 * const ctrl2 = ctrl1.options( [ 'a', 'b', 'c' ] );; 	 *; 	 * // ...and ctrl1 now references a controller that doesn't exist; 	 * assert( ctrl2 !== ctrl1 ); 	 * @param {object|Array} options; 	 * @returns {Controller}; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:127,update,update,127,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,/**; 	 * Disables this controller.; 	 * @param {boolean} disabled; 	 * @returns {this}; 	 * @example; 	 * controller.disable();; 	 * controller.disable( false ); // enable; 	 * controller.disable( !controller._disabled ); // toggle; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:225,toggle,toggle,225,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/**; 	 * Enables this controller.; 	 * @param {boolean} enabled; 	 * @returns {this}; 	 * @example; 	 * controller.enable();; 	 * controller.enable( false ); // disable; 	 * controller.enable( controller._disabled ); // toggle; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:220,toggle,toggle,220,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/**; 	 * Opens a GUI or folder. GUI and folders are open by default.; 	 * @param {boolean} open Pass false to close.; 	 * @returns {this}; 	 * @example; 	 * gui.open(); // open; 	 * gui.open( false ); // close; 	 * gui.open( gui._closed ); // toggle; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:243,toggle,toggle,243,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,"/**; 	 * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.; 	 * @param {any} value; 	 * @returns {this}; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:85,update,updates,85,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updates']
Deployability,/**; 	 * Shows the Controller after it's been hidden.; 	 * @param {boolean} show; 	 * @returns {this}; 	 * @example; 	 * controller.show();; 	 * controller.show( false ); // hide; 	 * controller.show( controller._hidden ); // toggle; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:226,toggle,toggle,226,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/**; 	 * Shows the GUI after it's been hidden.; 	 * @param {boolean} show; 	 * @returns {this}; 	 * @example; 	 * gui.show();; 	 * gui.show( false ); // hide; 	 * gui.show( gui._hidden ); // toggle; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:191,toggle,toggle,191,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['toggle'],['toggle']
Deployability,/**; 	 * Updates the display to keep it in sync with the current value. Useful for updating your; 	 * controllers when their values have been modified outside of the GUI.; 	 * @returns {this}; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:9,Update,Updates,9,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Update'],['Updates']
Deployability,"/**; * @brief Creates a new Stats object and immediately updates it for the; * given @c usage and argument vector. You may pass 0 for @c argc and/or @c argv,; * if you just want to update @ref options_max.; *; * @note; * The calls to Stats methods must match the later calls to Parser methods.; * See Parser::parse() for the meaning of the arguments.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:57,update,updates,57,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,['update'],"['update', 'updates']"
Deployability,"/**; * @brief Creates a new StoreOption action.; * @param parser_ the parser whose op_count should be updated.; * @param options_ each Option @c o is chained into the linked list @c options_[o.desc->index]; * @param buffer_ each Option is appended to this array as long as there's a free slot.; * @param bufmax_ number of slots in @c buffer_. @c -1 means ""large enough"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:102,update,updated,102,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['update'],['updated']
Deployability,"/**; * @brief Export an object from the workspace to a JSONNode.; *; * This function exports an object, represented by the provided RooAbsArg, from the workspace to a JSONNode.; * The object's information is added to the JSONNode as key-value pairs.; *; * @param func The RooAbsArg representing the object to be exported.; * @param exportedObjectNames A set of strings containing names of previously exported objects to avoid duplicates.; * This set is updated with the name of the newly exported object.; * @return void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:453,update,updated,453,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['update'],['updated']
Deployability,"/**; * @brief Updates this Stats object for the; * given @c usage and argument vector. You may pass 0 for @c argc and/or @c argv,; * if you just want to update @ref options_max.; *; * @note; * The calls to Stats methods must match the later calls to Parser methods.; * See Parser::parse() for the meaning of the arguments.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:14,Update,Updates,14,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,"['Update', 'update']","['Updates', 'update']"
Deployability,/**; * @defgroup LLVMCExecutionEngineLLJITUtils LLJIT Utilities; * @ingroup LLVMCExecutionEngineLLJIT; *; * @{; */; /**; * Install the plugin that submits debug objects to the executor. Executors must; * expose the llvm_orc_registerJITLoaderGDBWrapper symbol.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h:123,Install,Install,123,interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h,1,['Install'],['Install']
Deployability,"/**; * @license; * FPDF is released under a permissive license: there is no usage restriction.; * You may embed it freely in your application (commercial or not), with or; * without modifications.; *; * Reference: http://www.fpdf.org/en/script/script37.php; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:27,release,released,27,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['release'],['released']
Deployability,/**; * @}; */; /**; * @defgroup LLVMCCorePassManagers Pass Managers; * @ingroup LLVMCCore; *; * @{; */; /** Constructs a new whole-module pass pipeline. This type of pipeline is; suitable for link-time optimization and whole-module transformations.; @see llvm::PassManager::PassManager */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:143,pipeline,pipeline,143,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,['pipeline'],['pipeline']
Deployability,/**; * A MaterializationUnit discard callback.; *; * Ownership of JD and Symbol remain with the caller: These arguments should; * not be disposed of or released.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:152,release,released,152,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['released']
Deployability,"/**; * An opaque lookup state object. Instances of this type can be captured to; * suspend a lookup while a custom generator function attempts to produce a; * definition.; *; * If a client captures a lookup state object then they must eventually call; * LLVMOrcLookupStateContinueLookup to restart the lookup. This is required; * in order to release memory allocated for the lookup state, even if errors; * have occurred while the lookup was suspended (if these errors have made the; * lookup impossible to complete then it will issue its own error before; * destruction).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:342,release,release,342,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,"/**; * Callback type for ExecutionSession lookups.; *; * If Err is LLVMErrorSuccess then Result will contain a pointer to a; * list of ( SymbolStringPtr, JITEvaluatedSymbol ) pairs of length NumPairs.; *; * If Err is a failure value then Result and Ctx are undefined and should; * not be accessed. The Callback is responsible for handling the error; * value (e.g. by calling LLVMGetErrorMessage + LLVMDisposeErrorMessage).; *; * The caller retains ownership of the Result array and will release all; * contained symbol names. Clients are responsible for retaining any symbol; * names that they wish to hold after the function returns.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:487,release,release,487,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,/**; * Check if the conditions are correct to allow for the stack update; * to be moved past the CSR save/restore code.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:66,update,update,66,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,1,['update'],['update']
Deployability,"/**; * Clear all unreferenced symbol string pool entries.; *; * This can be called at any time to release unused entries in the; * ExecutionSession's string pool. Since it locks the pool (preventing; * interning of any new strings) it is recommended that it only be called; * infrequently, ideally when the caller has reason to believe that some; * entries will have become unreferenced, e.g. after removing a module or; * closing a JITDylib.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:98,release,release,98,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,"/**; * Construct and run a set of passes over a module; *; * This function takes a string with the passes that should be used. The format; * of this string is the same as opt's -passes argument for the new pass; * manager. Individual passes may be specified, separated by commas. Full; * pipelines may also be invoked using `default<O3>` and friends. See opt for; * full reference of the Passes format.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h:288,pipeline,pipelines,288,interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,1,['pipeline'],['pipelines']
Deployability,"/**; * Convert an Unicode code point to UTF8 sequence.; *; * \param Source a Unicode code point.; * \param [in,out] ResultPtr pointer to the output buffer, needs to be at least; * \c UNI_MAX_UTF8_BYTES_PER_CODE_POINT bytes. On success \c ResultPtr is; * updated one past end of the converted sequence.; *; * \returns true on success.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:254,update,updated,254,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['update'],['updated']
Deployability,"/**; * Convert the first UTF8 sequence in the given source buffer to a UTF32; * code point.; *; * \param [in,out] source A pointer to the source buffer. If the conversion; * succeeds, this pointer will be updated to point to the byte just past the; * end of the converted sequence.; * \param sourceEnd A pointer just past the end of the source buffer.; * \param [out] target The converted code; * \param flags Whether the conversion is strict or lenient.; *; * \returns conversionOK on success; *; * \sa ConvertUTF8toUTF32; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:205,update,updated,205,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['update'],['updated']
Deployability,"/**; * Create a ""bare"" JITDylib.; *; * The client is responsible for ensuring that the JITDylib's name is unique,; * e.g. by calling LLVMOrcExecutionSessionGetJTIDylibByName first.; *; * This call does not install any library code or symbols into the newly; * created JITDylib. The client is responsible for all configuration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:206,install,install,206,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"/**; * Create a JITDylib.; *; * The client is responsible for ensuring that the JITDylib's name is unique,; * e.g. by calling LLVMOrcExecutionSessionGetJTIDylibByName first.; *; * If a Platform is attached to the ExecutionSession then; * Platform::setupJITDylib will be called to install standard platform symbols; * (e.g. standard library interposes). If no Platform is installed then this; * call is equivalent to LLVMExecutionSessionRefCreateBareJITDylib and will; * always return success.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:280,install,install,280,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,['install'],"['install', 'installed']"
Deployability,"/**; * Create a custom MaterializationUnit.; *; * Name is a name for this MaterializationUnit to be used for identification; * and logging purposes (e.g. if this MaterializationUnit produces an; * object buffer then the name of that buffer will be derived from this name).; *; * The Syms list contains the names and linkages of the symbols provided by this; * unit. This function takes ownership of the elements of the Syms array. The; * Name fields of the array elements are taken to have been retained for this; * function. The client should *not* release the elements of the array, but is; * still responsible for destroying the array itself.; *; * The InitSym argument indicates whether or not this MaterializationUnit; * contains static initializers. If three are no static initializers (the common; * case) then this argument should be null. If there are static initializers; * then InitSym should be set to a unique name that also appears in the Syms; * list with the LLVMJITSymbolGenericFlagsMaterializationSideEffectsOnly flag; * set. This function takes ownership of the InitSym, which should have been; * retained twice on behalf of this function: once for the Syms entry and once; * for InitSym. If clients wish to use the InitSym value after this function; * returns they must retain it once more for themselves.; *; * If any of the symbols in the Syms list is looked up then the Materialize; * function will be called.; *; * If any of the symbols in the Syms list is overridden then the Discard; * function will be called.; *; * The caller owns the underling MaterializationUnit and is responsible for; * either passing it to a JITDylib (via LLVMOrcJITDylibDefine) or disposing; * of it by calling LLVMOrcDisposeMaterializationUnit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:550,release,release,550,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,/**; * Create a new llvm::TargetMachine.; *; * \param T the target to create a machine for.; * \param Triple a triple describing the target machine.; * \param Options additional configuration (see; * LLVMCreateTargetMachineOptions()).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:178,configurat,configuration,178,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,1,['configurat'],['configuration']
Deployability,"/**; * Creates new jsPDF document object instance.; * @name jsPDF; * @class; * @param {Object} [options] - Collection of settings initializing the jsPDF-instance; * @param {string} [options.orientation=portrait] - Orientation of the first page. Possible values are ""portrait"" or ""landscape"" (or shortcuts ""p"" or ""l"").<br />; * @param {string} [options.unit=mm] Measurement unit (base unit) to be used when coordinates are specified.<br />; * Possible values are ""pt"" (points), ""mm"", ""cm"", ""in"", ""px"", ""pc"", ""em"" or ""ex"". Note that in order to get the correct scaling for ""px""; * units, you need to enable the hotfix ""px_scaling"" by setting options.hotfixes = [""px_scaling""].; * @param {string/Array} [options.format=a4] The format of the first page. Can be:<ul><li>a0 - a10</li><li>b0 - b10</li><li>c0 - c10</li><li>dl</li><li>letter</li><li>government-letter</li><li>legal</li><li>junior-legal</li><li>ledger</li><li>tabloid</li><li>credit-card</li></ul><br />; * Default is ""a4"". If you want to use your own format just pass instead of one of the above predefined formats the size as an number-array, e.g. [595.28, 841.89]; * @param {boolean} [options.putOnlyUsedFonts=false] Only put fonts into the PDF, which were used.; * @param {boolean} [options.compress=false] Compress the generated PDF.; * @param {number} [options.precision=16] Precision of the element-positions.; * @param {number} [options.userUnit=1.0] Not to be confused with the base unit. Please inform yourself before you use it.; * @param {string[]} [options.hotfixes] An array of strings to enable hotfixes such as correct pixel scaling.; * @param {Object} [options.encryption]; * @param {string} [options.encryption.userPassword] Password for the user bound by the given permissions list.; * @param {string} [options.encryption.ownerPassword] Both userPassword and ownerPassword should be set for proper authentication.; * @param {string[]} [options.encryption.userPermissions] Array of permissions ""print"", ""modify"", ""copy"", ""ann",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:609,hotfix,hotfix,609,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['hotfix'],"['hotfix', 'hotfixes']"
Deployability,"/**; * Deserialize a set of diagnostics from a Clang diagnostics bitcode; * file.; *; * \param file The name of the file to deserialize.; * \param error A pointer to a enum value recording if there was a problem; * deserializing the diagnostics.; * \param errorString A pointer to a CXString for recording the error string; * if the file was not successfully loaded.; *; * \returns A loaded CXDiagnosticSet if successful, and NULL otherwise. These; * diagnostics should be released using clang_disposeDiagnosticSet().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:473,release,released,473,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['release'],['released']
Deployability,/**; * Determine the frame layout and update the machine function.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:38,update,update,38,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,1,['update'],['update']
Deployability,/**; * Determine the frame layout but do not update the machine function.; * The MachineFunction object can be const in this case as it is not; * modified.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:45,update,update,45,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,1,['update'],['update']
Deployability,/**; * Disposes a CXCursorSet and releases its associated memory.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:34,release,releases,34,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['release'],['releases']
Deployability,/**; * Disposes of the passed LLVMOrcCSymbolFlagsMap.; *; * Does not release the entries themselves.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:69,release,release,69,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,/**; * Disposes of the passed LLVMOrcSymbolStringPoolEntryRef* .; *; * Does not release the symbols themselves.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:80,release,release,80,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,"/**; * Extensible curve object.; *; * Some common of curve methods:; * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget ); * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget ); * .getPoints(), .getSpacedPoints(); * .getLength(); * .updateArcLengths(); *; * This following curves inherit from THREE.Curve:; *; * -- 2D curves --; * THREE.ArcCurve; * THREE.CubicBezierCurve; * THREE.EllipseCurve; * THREE.LineCurve; * THREE.QuadraticBezierCurve; * THREE.SplineCurve; *; * -- 3D curves --; * THREE.CatmullRomCurve3; * THREE.CubicBezierCurve3; * THREE.LineCurve3; * THREE.QuadraticBezierCurve3; *; * A series of curves can be represented as a THREE.CurvePath.; *; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:264,update,updateArcLengths,264,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updateArcLengths']
Deployability,"/**; * Fix-its that *must* be applied before inserting the text for the; * corresponding completion.; *; * By default, clang_codeCompleteAt() only returns completions with empty; * fix-its. Extra completions with non-empty fix-its should be explicitly; * requested by setting CXCodeComplete_IncludeCompletionsWithFixIts.; *; * For the clients to be able to compute position of the cursor after applying; * fix-its, the following conditions are guaranteed to hold for; * replacement_range of the stored fix-its:; * - Ranges in the fix-its are guaranteed to never contain the completion; * point (or identifier under completion point, if any) inside them, except; * at the start or at the end of the range.; * - If a fix-it range starts or ends with completion point (or starts or; * ends after the identifier under completion point), it will contain at; * least one character. It allows to unambiguously recompute completion; * point after applying the fix-it.; *; * The intuition is that provided fix-its change code around the identifier we; * complete, but are not allowed to touch the identifier itself or the; * completion point. One example of completions with corrections are the ones; * replacing '.' with '->' and vice versa:; *; * std::unique_ptr<std::vector<int>> vec_ptr;; * In 'vec_ptr.^', one of the completions is 'push_back', it requires; * replacing '.' with '->'.; * In 'vec_ptr->^', one of the completions is 'release', it requires; * replacing '->' with '.'.; *; * \param results The structure keeping all completion results; *; * \param completion_index The index of the completion; *; * \param fixit_index The index of the fix-it for the completion at; * completion_index; *; * \param replacement_range The fix-it range that must be replaced before the; * completion at completion_index can be applied; *; * \returns The fix-it string that must replace the code at replacement_range; * before the completion at completion_index can be applied; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1428,release,release,1428,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['release'],['release']
Deployability,"/**; * Install a fatal error handler. By default, if LLVM detects a fatal error, it; * will call exit(1). This may not be appropriate in many contexts. For example,; * doing exit(1) will bypass many crash reporting/tracing system tools. This; * function allows you to install a callback that will be invoked prior to the; * call to exit(1).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h:7,Install,Install,7,interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,2,"['Install', 'install']","['Install', 'install']"
Deployability,/**; * Installs error handler that prints error message to stderr and calls abort().; * Replaces currently installed error handler (if any).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:7,Install,Installs,7,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,2,"['Install', 'install']","['Installs', 'installed']"
Deployability,"/**; * Intern a string in the ExecutionSession's SymbolStringPool and return a; * reference to it. This increments the ref-count of the pool entry, and the; * returned value should be released once the client is done with it by; * calling LLVMOrcReleaseSymbolStringPoolEntry.; *; * Since strings are uniqued within the SymbolStringPool; * LLVMOrcSymbolStringPoolEntryRefs can be compared by value to test string; * equality.; *; * Note that this function does not perform linker-mangling on the string.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:184,release,released,184,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['released']
Deployability,"/**; * Look up symbols in an execution session.; *; * This is a wrapper around the general ExecutionSession::lookup function.; *; * The SearchOrder argument contains a list of (JITDylibs, JITDylibSearchFlags); * pairs that describe the search order. The JITDylibs will be searched in the; * given order to try to find the symbols in the Symbols argument.; *; * The Symbols argument should contain a null-terminated array of; * (SymbolStringPtr, SymbolLookupFlags) pairs describing the symbols to be; * searched for. This function takes ownership of the elements of the Symbols; * array. The Name fields of the Symbols elements are taken to have been; * retained by the client for this function. The client should *not* release the; * Name fields, but are still responsible for destroying the array itself.; *; * The HandleResult function will be called once all searched for symbols have; * been found, or an error occurs. The HandleResult function will be passed an; * LLVMErrorRef indicating success or failure, and (on success) a; * null-terminated LLVMOrcCSymbolMapPairs array containing the function result,; * and the Ctx value passed to the lookup function.; *; * The client is fully responsible for managing the lifetime of the Ctx object.; * A common idiom is to allocate the context prior to the lookup and deallocate; * it in the handler.; *; * THIS API IS EXPERIMENTAL AND LIKELY TO CHANGE IN THE NEAR FUTURE!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:719,release,release,719,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['release']
Deployability,"/**; * Notifies the target JITDylib that the given symbols have been resolved.; * This will update the given symbols' addresses in the JITDylib, and notify; * any pending queries on the given symbols of their resolution. The given; * symbols must be ones covered by this MaterializationResponsibility; * instance. Individual calls to this method may resolve a subset of the; * symbols, but all symbols must have been resolved prior to calling emit.; *; * This method will return an error if any symbols being resolved have been; * moved to the error state due to the failure of a dependency. If this; * method returns an error then clients should log it and call; * LLVMOrcMaterializationResponsibilityFailMaterialization. If no dependencies; * have been registered for the symbols covered by this; * MaterializationResponsibility then this method is guaranteed to return; * LLVMErrorSuccess.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:92,update,update,92,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['update'],['update']
Deployability,/**; * Perform internalization. Index is updated to reflect linkage changes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:41,update,updated,41,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['update'],['updated']
Deployability,/**; * Perform internalization. Runs promote and internalization together.; * Index is updated to reflect linkage changes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:87,update,updated,87,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['update'],['updated']
Deployability,"/**; * Perform promotion and renaming of exported internal functions,; * and additionally resolve weak and linkonce symbols.; * Index is updated to reflect linkage changes from weak resolution.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:137,update,updated,137,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['update'],['updated']
Deployability,/**; * Perform promotion and renaming of exported internal functions.; * Index is updated to reflect linkage changes from weak resolution.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:82,update,updated,82,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['update'],['updated']
Deployability,/**; * Release a CXDiagnosticSet and all of its contained diagnostics.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:7,Release,Release,7,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['Release'],['Release']
Deployability,/**; * Release a printing policy.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:7,Release,Release,7,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['Release'],['Release']
Deployability,/**; * Releases all the resources used by \p Parser.; *; * \since REMARKS_API_VERSION=0; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:7,Release,Releases,7,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['Release'],['Releases']
Deployability,"/**; * Removes currently installed error handler (if any).; * If no error handler is intalled, the default strategy is to print error; * message to stderr and call exit(1).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:25,install,installed,25,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,1,['install'],['installed']
Deployability,/**; * Retrieve the child diagnostics of a CXDiagnostic.; *; * This CXDiagnosticSet does not need to be released by; * clang_disposeDiagnosticSet.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:104,release,released,104,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['release'],['released']
Deployability,/**; * Retrieve the default policy for the cursor.; *; * The policy should be released after use with \c; * clang_PrintingPolicy_dispose.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:78,release,released,78,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['release'],['released']
Deployability,"/**; * Return a reference to a newly created resource tracker associated with JD.; * The tracker is returned with an initial ref-count of 1, and must be released; * with LLVMOrcReleaseResourceTracker when no longer needed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:153,release,released,153,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['released']
Deployability,/**; * Return the c-string for the given symbol. This string will remain valid until; * the entry is freed (once all LLVMOrcSymbolStringPoolEntryRefs have been; * released).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:163,release,released,163,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['release'],['released']
Deployability,/**; * Return the memory usage of a translation unit. This object; * should be released with clang_disposeCXTUResourceUsage().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:79,release,released,79,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['release'],['released']
Deployability,"/**; * Returns a null-terminated string containing an error message.; *; * In case of no error, the result is `NULL`.; *; * The memory of the string is bound to the lifetime of \p Parser. If; * LLVMRemarkParserDispose() is called, the memory of the string will be; * released.; *; * \since REMARKS_API_VERSION=0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:267,release,released,267,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['release'],['released']
Deployability,"/**; * Returns the next remark in the file.; *; * The value pointed to by the return value needs to be disposed using a call to; * LLVMRemarkEntryDispose().; *; * All the entries in the returned value that are of LLVMRemarkStringRef type; * will become invalidated once a call to LLVMRemarkParserDispose is made.; *; * If the parser reaches the end of the buffer, the return value will be `NULL`.; *; * In the case of an error, the return value will be `NULL`, and:; *; * 1) LLVMRemarkParserHasError() will return `1`.; *; * 2) LLVMRemarkParserGetErrorMessage() will return a descriptive error; * message.; *; * An error may occur if:; *; * 1) An argument is invalid.; *; * 2) There is a parsing error. This can occur on things like malformed YAML.; *; * 3) There is a Remark semantic error. This can occur on well-formed files with; * missing or extra fields.; *; * Here is a quick example of the usage:; *; * ```; * LLVMRemarkParserRef Parser = LLVMRemarkParserCreateYAML(Buf, Size);; * LLVMRemarkEntryRef Remark = NULL;; * while ((Remark = LLVMRemarkParserGetNext(Parser))) {; * // use Remark; * LLVMRemarkEntryDispose(Remark); // Release memory.; * }; * bool HasError = LLVMRemarkParserHasError(Parser);; * LLVMRemarkParserDispose(Parser);; * ```; *; * \since REMARKS_API_VERSION=0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:1134,Release,Release,1134,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['Release'],['Release']
Deployability,"/**; * Set the display mode options of the page like zoom and layout.; *; * @name setDisplayMode; * @memberof jsPDF#; * @function; * @instance; * @param {integer|String} zoom You can pass an integer or percentage as; * a string. 2 will scale the document up 2x, '200%' will scale up by the; * same amount. You can also set it to 'fullwidth', 'fullheight',; * 'fullpage', or 'original'.; *; * Only certain PDF readers support this, such as Adobe Acrobat.; *; * @param {string} layout Layout mode can be: 'continuous' - this is the; * default continuous scroll. 'single' - the single page mode only shows one; * page at a time. 'twoleft' - two column left mode, first page starts on; * the left, and 'tworight' - pages are laid out in two columns, with the; * first page on the right. This would be used for books.; * @param {string} pmode 'UseOutlines' - it shows the; * outline of the document on the left. 'UseThumbs' - shows thumbnails along; * the left. 'FullScreen' - prompts the user to enter fullscreen mode.; *; * @returns {jsPDF}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:504,continuous,continuous,504,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['continuous'],['continuous']
Deployability,"/**; * Set whether the given context discards all value names.; *; * If true, only the names of GlobalValue objects will be available in the IR.; * This can be used to save memory and runtime, especially in release mode.; *; * @see LLVMContext::setDiscardValueNames(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:207,release,release,207,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['release'],['release']
Deployability,/**; * Sets the path to a directory to use as a storage for temporary bitcode files.; * The intention is to make the bitcode files available for debugging at various; * stage of the pipeline.; *; * \since LTO_API_VERSION=18; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:182,pipeline,pipeline,182,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['pipeline'],['pipeline']
Deployability,"/**; * This table is indexed first by the four ZSTD_dictMode_e values, and then; * by the two searchMethod_e values. NULLs are placed for configurations; * that should never occur (extDict modes go to the other implementation; * below and there is no DDSS for binary tree search yet).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:138,configurat,configurations,138,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['configurat'],['configurations']
Deployability,"/**; * Toggle adding the VerifierPass for the PassBuilder, ensuring all functions; * inside the module is valid.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h:7,Toggle,Toggle,7,interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,1,['Toggle'],['Toggle']
Deployability,/**; * Toggle debug logging when running the PassBuilder; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h:7,Toggle,Toggle,7,interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,1,['Toggle'],['Toggle']
Deployability,/**; * Tries a set of parameters and updates the COVER_best_t with the results.; * This function is thread safe if zstd is compiled with multithreaded support.; * It takes its parameters as an *OWNING* opaque pointer to support threading.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:37,update,updates,37,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,2,['update'],['updates']
Deployability,/**; * Update the specified successor to point at the provided block.; *; * @see llvm::Instruction::setSuccessor; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:7,Update,Update,7,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['Update'],['Update']
Deployability,/**; * Used to see if a supplied hotfix was requested when the pdf instance was created.; * @param {string} hotfixName - The name of the hotfix to check.; * @returns {boolean}; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:33,hotfix,hotfix,33,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,6,['hotfix'],"['hotfix', 'hotfixName']"
Deployability,"/**; * ZSTD_ldm_blockCompress():; *; * Compresses a block using the predefined sequences, along with a secondary; * block compressor. The literals section of every sequence is passed to the; * secondary block compressor, and those sequences are interspersed with the; * predefined sequences. Returns the length of the last literals.; * Updates `rawSeqStore.pos` to indicate how many sequences have been consumed.; * `rawSeqStore.seq` may also be updated to split the last sequence between two; * blocks.; * @return The length of the last literals.; *; * NOTE: The source must be at most the maximum block size, but the predefined; * sequences can be any size, and may be longer than the block. In the case that; * they are longer than the block, the last sequences may need to be split into; * two. We handle that case correctly, and update `rawSeqStore` appropriately.; * NOTE: This function does not return any errors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.h:336,Update,Updates,336,builtins/zstd/compress/zstd_ldm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_ldm.h,3,"['Update', 'update']","['Updates', 'update', 'updated']"
Deployability,"/**; * Zstd fits all its internal datastructures into a single continuous buffer,; * so that it only needs to perform a single OS allocation (or so that a buffer; * can be provided to it and it can perform no allocations at all). This buffer; * is called the workspace.; *; * Several optimizations complicate that process of allocating memory ranges; * from this workspace for each internal datastructure:; *; * - These different internal datastructures have different setup requirements:; *; * - The static objects need to be cleared once and can then be trivially; * reused for each compression.; *; * - Various buffers don't need to be initialized at all--they are always; * written into before they're read.; *; * - The matchstate tables have a unique requirement that they don't need; * their memory to be totally cleared, but they do need the memory to have; * some bound, i.e., a guarantee that all values in the memory they've been; * allocated is less than some maximum value (which is the starting value; * for the indices that they will then use for compression). When this; * guarantee is provided to them, they can use the memory without any setup; * work. When it can't, they have to clear the area.; *; * - These buffers also have different alignment requirements.; *; * - We would like to reuse the objects in the workspace for multiple; * compressions without having to perform any expensive reallocation or; * reinitialization work.; *; * - We would like to be able to efficiently reuse the workspace across; * multiple compressions **even when the compression parameters change** and; * we need to resize some of the objects (where possible).; *; * To attempt to manage this buffer, given these constraints, the ZSTD_cwksp; * abstraction was created. It works as follows:; *; * Workspace Layout:; *; * [ ... workspace ... ]; * [objects][tables ... ->] free space [<- ... aligned][<- ... buffers]; *; * The various objects that live in the workspace are divided into the; * following",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h:63,continuous,continuous,63,builtins/zstd/compress/zstd_cwksp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h,1,['continuous'],['continuous']
Deployability,"/**; * \brief Inserts the input string in the cache and returns an iterator to the cached string.; *; * The function implements the following strategy for thread-safety:; * 1. Take a shared lock and early return if the string is already in the cache.; * 2. Release the shared lock and take an exclusive lock.; * 3. Check again if another thread filled the cache meanwhile. If so, return the cached value.; * 4. Insert the new value in the cache and return.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/Utils.hxx:257,Release,Release,257,tree/dataframe/inc/ROOT/RDF/Utils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/Utils.hxx,1,['Release'],['Release']
Deployability,"/**; * \brief The implementation of the DefaultValueFor transformation.; *; * The class takes in the default value provided by the user to fill-in missing; * values of the input column. During the Update step, the class checks for the; * presence of the value of the column at the current event. If that value is; * missing, it will return the default value to requesting nodes of the graph.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RDefaultValueFor.hxx:197,Update,Update,197,tree/dataframe/inc/ROOT/RDF/RDefaultValueFor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RDefaultValueFor.hxx,1,['Update'],['Update']
Deployability,"/**; * \class ROOT::Internal::RDF::RColumnRegister; * \ingroup dataframe; * \brief A binder for user-defined columns, variations and aliases.; *; * The storage is copy-on-write and shared between all instances of the class that have the same values.; *; * Several components of an RDF computation graph make use of a column register. It keeps track of which columns have; * been defined, varied or aliased at each point of the computation graph.; * In many cases, the contents of the different column register instances are the same or only differ by a single; * extra defined/varied/aliased column. For this reason, in order to avoid unnecessary data duplication, fDefines,; * fAliases, fVariations and fColumnNames are all shared_ptr<const T> that (whenever possible) are shared across; * RColumnRegister instances that are part of the same computation graph. If a new column, alias or variation is added; * between one node and the next, then the new node contains a new instance of a RColumnRegister that shares all data; * members with the previous instance except for the one data member that needed updating, which is replaced with a new; * updated instance.; *; * The contents of the collections that keep track of other objects of the computation graph are not owned by the; * RColumnRegister object. They are registered centrally by the RLoopManager and only accessed via reference in the; * RColumnRegister.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RColumnRegister.hxx:1148,update,updated,1148,tree/dataframe/inc/ROOT/RDF/RColumnRegister.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RColumnRegister.hxx,1,['update'],['updated']
Deployability,/**; * g_async_queue_unlock:; * @queue: a #GAsyncQueue.; * ; * Release the queue's lock.; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:63,Release,Release,63,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['Release'],['Release']
Deployability,"/**; * g_async_queue_unref_and_unlock:; * @queue: a #GAsyncQueue.; * ; * Decreases the reference count of the asynchronous @queue by 1 and; * releases the lock. This function must be called while holding the; * @queue's lock. If the reference count went to 0, the @queue will be; * destroyed and the memory allocated will be freed. So you are not; * allowed to use the @queue afterwards, as it might have disappeared.; * The obvious asymmetry (it is not named; * g_async_queue_unref_unlocked) is because the queue can't be; * unlocked after dereffing it, as it might already have disappeared.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:142,release,releases,142,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['release'],['releases']
Deployability,"/**; * g_io_channel_get_flags:; * @channel: a #GIOChannel; *; * Gets the current flags for a #GIOChannel, including read-only; * flags such as %G_IO_FLAG_IS_READABLE.; *; * The values of the flags %G_IO_FLAG_IS_READABLE and %G_IO_FLAG_IS_WRITEABLE; * are cached for internal use by the channel when it is created.; * If they should change at some later point (e.g. partial shutdown; * of a socket with the unix shutdown () function), the user; * should immediately call g_io_channel_get_flags () to update; * the internal values of these flags.; *; * Return value: the flags which are set on the channel; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:499,update,update,499,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,1,['update'],['update']
Deployability,"/**; * g_win32_get_package_installation_directory:; * @package: An identifier for a software package, or NULL; * @dll_name: The name of a DLL that a package provides, or NULL; *; * Try to determine the installation directory for a software package.; * Typically used by GNU software packages.; *; * @package should be a short identifier for the package. Typically it; * is the same identifier as used for GETTEXT_PACKAGE in software; * configured accoring to GNU standards. The function first looks in; * the Windows Registry for the value #InstallationDirectory in the; * key #HKLM\Software\@package, and if that value exists and is a; * string, returns that.; *; * If @package is NULL, or the above value isn't found in the; * Registry, but @dll_name is non-NULL, it should name a DLL loaded; * into the current process. Typically that would be the name of the; * DLL calling this function, looking for its installation; * directory. The function then asks Windows what directory that DLL; * was loaded from. If that directory's last component is ""bin"" or; * ""lib"", the parent directory is returned, otherwise the directory; * itself. If that DLL isn't loaded, the function proceeds as if; * @dll_name was NULL.; *; * If both @package and @dll_name are NULL, the directory from where; * the main executable of the process was loaded is uses instead in; * the same way as above.; *; * The return value should be freed with g_free() when not needed any longer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c:202,install,installation,202,graf2d/win32gdk/gdk/src/glib/gwin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c,3,"['Install', 'install']","['InstallationDirectory', 'installation']"
Deployability,"/**; * g_win32_get_package_installation_subdirectory:; * @package: An identifier for a software package, or NULL; * @dll_name: The name of a DLL that a package provides, or NULL; * @subdir: A subdirectory of the package installation directory.; *; * Returns a string containg the path of the subdirectory @subdir in; * the return value from calling; * g_win32_get_package_installation_directory() with the @package and; * @dll_name parameters. The return value should be freed with; * g_free() when no longer needed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c:220,install,installation,220,graf2d/win32gdk/gdk/src/glib/gwin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c,1,['install'],['installation']
Deployability,"/**; @defgroup FitMain User Fitting classes. Main Classes used for fitting a given data set; @ingroup Fit; */; //___________________________________________________________________________________; /**; Fitter class, entry point for performing all type of fits.; Fits are performed using the generic ROOT::Fit::Fitter::Fit method.; The inputs are the data points and a model function (using a ROOT::Math::IParamFunction); The result of the fit is returned and kept internally in the ROOT::Fit::FitResult class.; The configuration of the fit (parameters, options, etc...) are specified in the; ROOT::Math::FitConfig class.; After fitting the config of the fit will be modified to have the new values the resulting; parameter of the fit with step sizes equal to the errors. FitConfig can be preserved with; initial parameters by calling FitConfig.SetUpdateAfterFit(false);. @ingroup FitMain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:516,configurat,configuration,516,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['configurat'],['configuration']
Deployability,"/**; @defgroup MCIntegration Numerical Monte Carlo Integration Classes; Classes implementing method for Monte Carlo Integration.; @ingroup Integration. Class for performing numerical integration of a multidimensional function.; It uses the numerical integration algorithms of GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Plain MC, MISER and VEGAS integration algorithms are supported for integration over finite (hypercubic) ranges. <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_16.html#SEC248"">GSL Manual</A>. It implements also the interface ROOT::Math::VirtualIntegratorMultiDim so it can be; instantiate using the plugin manager (plugin name is ""GSLMCIntegrator""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:51,Integrat,Integration,51,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,8,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,"/**; @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore; @ingroup MathMore. */; /**. @defgroup Integration Numerical Integration. Classes for numerical integration of functions.; These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; ROOT::Math::IntegratorMultiDimOptions classes. @ingroup NumAlgo. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:182,Integrat,Integration,182,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,10,"['Integrat', 'integrat']","['Integration', 'IntegratorMultiDim', 'IntegratorMultiDimOptions', 'IntegratorOneDim', 'IntegratorOneDimOptions', 'integration']"
Deployability,"/**; A log configuration for a channel, e.g. ""RHist"".; Each ROOT module has its own log, with potentially distinct verbosity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:11,configurat,configuration,11,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['configurat'],['configuration']
Deployability,"/**; Class for adapting any multi-dimension C++ functor class to C function pointers used by; GSL MonteCarlo integration algorithms.; The templated C++ function class must implement:. <em> double operator( const double * x)</em>. This class defines static methods with will be used to fill the; \a gsl_monte_function used by GSL.; See for examples the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Monte-Carlo-Interface.html"">GSL online manual</A>. @ingroup MCIntegration; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:109,integrat,integration,109,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,1,['integrat'],['integration']
Deployability,"/**; Compute the integral of the series and return a pointer to a new Chebyshev series with the; integral coefficients. The lower limit of the integration is the left range value a.; The returned pointer must be managed by the user; */; //TO DO: implement copying to return by value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h:143,integrat,integration,143,math/mathmore/inc/Math/ChebyshevApprox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h,1,['integrat'],['integration']
Deployability,"/**; Construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The integration will stop when the absolute error is less than the absolute tolerance OR when the relative error is less; than the relative tolerance. The absolute tolerance by default is not used (it is equal to zero).; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than; \f$ (2n + 3) (1 + maxpts/(2^n + 2n(n + 1) + 1))/2) \f$.; For smaller value passed, the minimum allowed will be used; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:151,integrat,integration,151,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,"/**; Constructor from a TF1 objects specifying the pdf and optionally from another function; representing the derivative of the pdf. The flag isLogPdf can be used to pass instead of the pdf; (and its derivative) the log (and the derivative of the log) of the pdf.; By default the distribution has not domain set (it is defined between [-inf,+inf], no mode, no pdf area and no; cdf explicitly defined. UnuRan, if needed, can compute some of this quantities, but the user if they know them can; set them in order to speed up the algorithm. For example in case of the Cdf, if the user has not set it, a numerical; integration algorithm is used to estimate the Cdf from the Pdf.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:611,integrat,integration,611,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['integrat'],['integration']
Deployability,"/**; Constructor of one dimensional Integrator passing a function interface. @param f integration function (1D interface). It is copied inside; @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:36,Integrat,Integrator,36,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,"['Integrat', 'integrat']","['Integrator', 'IntegratorOneDimOptions', 'integration']"
Deployability,"/**; Constructs an interpolator class from vector of data points \f$ (x_i, y_i )\f$ and with Interpolation::Type type.; The method will compute a continuous interpolating function \f$ y(x) \f$ such that \f$ y_i = y ( x_i )\f$.; The default interpolation type is Cubic spline; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Interpolator.h:146,continuous,continuous,146,math/mathmore/inc/Math/Interpolator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Interpolator.h,1,['continuous'],['continuous']
Deployability,/**; Fill the fit result from a Minimizer instance after fitting; Run also Minos if requested from the configuration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:103,configurat,configuration,103,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['configurat'],['configuration']
Deployability,/**; Free functions adapter needed by UNURAN for onedimensional continuous distributions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:64,continuous,continuous,64,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['continuous'],['continuous']
Deployability,"/**; Initialize method for continuous empirical distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; The distribution object can represent binned (only 1D) or unbinned (1D or multi-dim) data; The method for the unbinned empirical distribution are based on the kernel smoothing, see; <A href=""http://statmath.wu-wien.ac.at/software/unuran/doc/unuran.html#EMPK"">UnuRan doc</A>; A re-initialization is needed whenever distribution parameters have been changed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:27,continuous,continuous,27,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['continuous'],['continuous']
Deployability,"/**; Initialize method for continuous multi-dimensional distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for multivariate cont. distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fCVEC"">UnuRan doc</A>; A re-initialization is needed whenever distribution parameters have been changed. The default method used for multi-dimensional distributions is ""vnrou""; Note that some of the multi-dimensional continuous distribution methods like ""hitro"" are based on Markov-CHain sampler and; they are much faster for sampling but require more time to converge. Furthermore, since they are Markov-Chain methods their; generated sample values are correlated and cannot be used as i.i.d., one can instead use the obtained sample distribution.; (see also the ROOT issue: #10222 ). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:27,continuous,continuous,27,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,2,['continuous'],['continuous']
Deployability,"/**; Initialize method for continuous one-dimensional discrete distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for 1D discrete distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fDISCR"">UnuRan doc</A>; A re-initialization is needed whenever distribution parameters have been changed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:27,continuous,continuous,27,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['continuous'],['continuous']
Deployability,"/**; Initialize method for continuous one-dimensional distribution.; User must provide a distribution object (which is copied inside) and a string for a method.; For the list of available method for 1D cont. distribution see the; <A href=""http://statmath.wu-wien.ac.at/unuran/doc/unuran.html#Methods_005ffor_005fCONT"">UnuRan doc</A>.; A re-initialization is needed whenever distribution parameters have been changed.; Note that the method string can contain in addition to the method name all the specific method; parameters specified using the UNURAN method string API.; For example a valid string can be `""method=arou; max_segments=1000; max_sqhratio = 0.9""`; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:27,continuous,continuous,27,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['continuous'],['continuous']
Deployability,"/**; Integration surrogate method. Return integral of passed function in interval [a,b]; Derived class (like GaussLegendreIntegrator) can re-implement this method to modify to use; an improved algorithm; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:5,Integrat,Integration,5,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['Integrat'],['Integration']
Deployability,"/**; Integration surrogate method. Return integral of passed function in interval [a,b]; Reimplement method of GaussIntegrator using CalcGaussLegendreSamplingPoints; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:5,Integrat,Integration,5,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,1,['Integrat'],['Integration']
Deployability,/**; Method to install an R's package; \param pkg R's pkg name; \param repos url for R's package repository; \return true or false if the package was installed or not; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:15,install,install,15,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,2,['install'],"['install', 'installed']"
Deployability,/**; Method to verify if a package is installed; \param pkg R's pkg name; \return true or false if the package is installed or not; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:38,install,installed,38,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,2,['install'],['installed']
Deployability,/**; Set integration function from a multi-dim function type.; Can be used in case of having 1D function implementing the generic interface; @param f integration function; @param icoord index of coordinate on which the integration is performed; @param x array of the passed variables values. In case of dim=1 a 0 can be passed; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:9,integrat,integration,9,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['integrat'],['integration']
Deployability,/**; Structure collecting parameters; for MISER multidimensional integration. @ingroup MCIntegration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h:65,integrat,integration,65,math/mathmore/inc/Math/MCParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h,1,['integrat'],['integration']
Deployability,/**; Structures collecting parameters; for VEGAS multidimensional integration; For implementation of default parameters see file; mathmore/src/GSLMCIntegrationWorkspace.h. @ingroup MCIntegration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h:66,integrat,integration,66,math/mathmore/inc/Math/MCParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h,1,['integrat'],['integration']
Deployability,"/**; TUnuranMultiContDist class describing multi dimensional continuous distributions.; It is used by TUnuran to generate a set of random numbers according to this distribution via; TUnuran::Sample(double *).; The class can be constructed from a multi-dimensional function (TF1 pointer, which can be actually also a; TF2 or a TF3).; It provides a method to set the domain of the distribution ( SetDomain ) which will correspond to the range; of the generated random numbers. By default the domain is [(-inf,-inf,...)(+inf,+inf,...)], independently of the; range set in the TF1 class used to construct the distribution. The derivatives of the pdf which are used by some UNURAN methods are estimated numerically in the; Derivative() method. Some extra information (like distribution mode) can be set using SetMode.; Some methods require instead of the pdf the log of the pdf.; This can also be controlled by setting a flag when constructing this class. \ingroup Unuran. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranMultiContDist.h:61,continuous,continuous,61,math/unuran/inc/TUnuranMultiContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranMultiContDist.h,1,['continuous'],['continuous']
Deployability,"/**; Template Constructor of one dimensional Integrator passing a generic function object. @param f integration function (any C++ callable object implementing operator()(double x); @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:45,Integrat,Integrator,45,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,"['Integrat', 'integrat']","['Integrator', 'IntegratorOneDimOptions', 'integration']"
Deployability,/**; Update of the covariance matrix for the Variable Metric minimizer (MIGRAD); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/BFGSErrorUpdator.h:5,Update,Update,5,math/minuit2/inc/Minuit2/BFGSErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/BFGSErrorUpdator.h,2,['Update'],['Update']
Deployability,/**; Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:5,Update,Update,5,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,/**; \brief Perform a vector read/write operation on different objects.; \param map A `MultiObjectRWOperation_t` that describes read/write operations to perform.; \param cid The `daos_oclass_id_t` used to qualify OIDs.; \param fn Either `&RDaosObject::Fetch` (read) or `&RDaosObject::Update` (write).; \return 0 if the operation succeeded; a negative DAOS error number otherwise.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:284,Update,Update,284,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['Update'],['Update']
Deployability,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:100,configurat,configuration,100,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,1,['configurat'],['configuration']
Deployability,"/**; \class ROOT::Experimental::RNTupleParallelWriter; \ingroup NTuple; \brief A writer to fill an RNTuple from multiple contexts. Compared to the sequential RNTupleWriter, a parallel writer enables the creation of multiple RNTupleFillContext (see; RNTupleParallelWriter::CreateFillContext). Each fill context prepares independent clusters that are appended to the; common ntuple with internal synchronization. Before destruction, all fill contexts must have flushed their data and; been destroyed (or data could be lost!). For user convenience, RNTupleParallelWriter::CreateFillContext is thread-safe and may be called from multiple threads; in parallel at any time, also after some data has already been written. Internally, the original model is cloned and; ownership is passed to a newly created RNTupleFillContext. For that reason, it is recommended to use; RNTupleModel::CreateBare when creating the model for parallel writing and avoid the allocation of a useless default; REntry per context. Note that the sequence of independently prepared clusters is indeterminate and therefore entries are only partially; ordered: Entries from one context are totally ordered as they were filled. However, there is no orderering with other; contexts and the entries may be appended to the ntuple either before or after other entries written in parallel into; other contexts. In addition, two consecutive entries in one fill context can end up separated in the final ntuple, if; they happen to fall onto a cluster boundary and other contexts append more entries before the next cluster is full. At the moment, the parallel writer does not (yet) support incremental updates of the underlying model. Please refer to; RNTupleWriter::CreateModelUpdater if required for your use case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleParallelWriter.hxx:1659,update,updates,1659,tree/ntuple/v7/inc/ROOT/RNTupleParallelWriter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleParallelWriter.hxx,1,['update'],['updates']
Deployability,"/**; \class TMapFile; \ingroup IO. This class implements a shared memory region mapped to a file.; Objects can be placed into this shared memory area using the Add(); member function. To actually place a copy of the object is shared; memory call Update() also whenever the mapped object(s) change(s); call Update() to put a fresh copy in the shared memory. This extra; step is necessary since it is not possible to share objects with; virtual pointers between processes (the vtbl ptr points to the; originators unique address space and can not be used by the; consumer process(es)). Consumer processes can map the memory region; from this file and access the objects stored in it via the Get(); method (which returns a copy of the object stored in the shared; memory with correct vtbl ptr set). Only objects of classes with a; Streamer() member function defined can be shared. I know the current implementation is not ideal (you need to copy to; and from the shared memory file) but the main problem is with the; class' virtual_table pointer. This pointer points to a table unique; for every process. Therefore, different options are:; -# One could allocate an object directly in shared memory in the; producer, but the consumer still has to copy the object from; shared memory into a local object which has the correct vtbl; pointer for that process (copy ctor's can be used for creating; the local copy).; -# Another possibility is to only allow objects without virtual; functions in shared memory (like simple C structs), or to; forbid (how?) the consumer from calling any virtual functions; of the objects in shared memory.; -# A last option is to copy the object internals to shared memory; and copy them again from there. This is what is done in the; TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the; full inheritance chain) to rebuild the object in the consumer. Most; classes don't provide these copy ctor's, espec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:246,Update,Update,246,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,2,['Update'],['Update']
Deployability,"/**; \class TUnuranContDist; \ingroup Unuran. TUnuranContDist class describing one dimensional continuous distribution.; It is used by TUnuran to generate random numbers according to this distribution via; TUnuran::Sample(). The class can be constructed from a function (TF1) representing the probability density; function of the distribution. Optionally the derivative of the pdf can also be passed. It provides a method to set the domain of the distribution ( SetDomain ) which will correspond to the range; of the generated random numbers. By default the domain is (-inf, + inf), independently of the; range set in the TF1 class used to construct the distribution. In addition, some UNURAN methods requires extra information (cdf function, distribution mode,; area of pdf, etc...). This information can as well be set.; Some methods require instead of the pdf the log of the pdf.; This can also be controlled by setting a flag when constructing this class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:95,continuous,continuous,95,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['continuous'],['continuous']
Deployability,/**; \class TVirtualCollectionIterators; \ingroup IO; Small helper class to generically acquire and release iterators.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TVirtualCollectionIterators.h:100,release,release,100,io/io/inc/TVirtualCollectionIterators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TVirtualCollectionIterators.h,1,['release'],['release']
Deployability,/**; \file RooAbsProxy.cxx; \class RooAbsProxy; \ingroup Roofitcore. Abstract interface for proxy classes.; Proxy classes hold pointers to other Roofit objects; and process serverRedirect changes so that the proxied; pointers are updated accordingly on a clone or copy of; of the owning class; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsProxy.cxx:230,update,updated,230,roofit/roofitcore/src/RooAbsProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsProxy.cxx,1,['update'],['updated']
Deployability,/**; access to the configuration (non const method); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:19,configurat,configuration,19,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['configurat'],['configuration']
Deployability,/**; access to the fit configuration (const method); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:23,configurat,configuration,23,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['configurat'],['configuration']
Deployability,/**; calculate the distance (metric) between this one and another configuration; Presently a cartesian metric is used.; re-implement by derived classes if needed to be modified; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h:66,configurat,configuration,66,math/mathmore/inc/Math/GSLSimAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h,1,['configurat'],['configuration']
Deployability,/**; create a new minimizer according to chosen configuration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:48,configurat,configuration,48,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['configurat'],['configuration']
Deployability,"/**; evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b) with a singularity at c; @param f integration function. The function type must be a C++ callable object implementing operator()(double x); @param a lower value of the integration interval; @param b upper value of the integration interval; @param c position of singularity. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:139,integrat,integration,139,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['integrat'],['integration']
Deployability,"/**; evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b) with a singularity at c; @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval; @param b upper value of the integration interval; @param c position of singularity. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:139,integrat,integration,139,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['integrat'],['integration']
Deployability,"/**; evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b); with a singularity at c; @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower interval value; @param b lower interval value; @param c singular value of f; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:140,integrat,integration,140,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f over the defined interval (a,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:85,integrat,integration,85,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f over the infinite interval (-inf,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:92,integrat,integration,92,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) using the function previously set with GSLIntegrator::SetFunction method.; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:196,integrat,integration,196,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) using the function previously set with Integrator::SetFunction method.; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:132,Integrat,Integrator,132,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['Integrat', 'integrat']","['Integrator', 'integration']"
Deployability,"/**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:103,integrat,integration,103,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf) using the function previously set with GSLIntegrator::SetFunction method.; @param a lower value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:187,integrat,integration,187,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf) using the function previously set with Integrator::SetFunction method.; @param a lower value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:123,Integrat,Integrator,123,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['Integrat', 'integrat']","['Integrator', 'integration']"
Deployability,"/**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:94,integrat,integration,94,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f with known singular points over the defined Integral (a,b); @param f integration function. The function type must be a C++ callable object implementing operator()(double x); @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:112,integrat,integration,112,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,['integrat'],['integration']
Deployability,"/**; evaluate the Integral of a function f with known singular points over the defined Integral (a,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:112,integrat,integration,112,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,['integrat'],['integration']
Deployability,"/**; evaluate the Integral over the defined interval (a,b) using the function previously set with GSLIntegrator::SetFunction method. The function has known singular points.; @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:340,integrat,integration,340,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Deployability,"/**; evaluate the Integral over the defined interval (a,b) using the function previously set with Integrator::SetFunction method. The function has known singular points.; @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:98,Integrat,Integrator,98,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['Integrat', 'integrat']","['Integrator', 'integration']"
Deployability,"/**; evaluate the Integral over the infinite interval (-inf,+inf) using the function previously set with Integrator::SetFunction method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:105,Integrat,Integrator,105,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['Integrat'],['Integrator']
Deployability,/**; generic constructor for GSL Integrator. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule. It is used only for ADAPTIVE::Integration types. The possible rules are defined in the Integration::GKRule enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:33,Integrat,Integrator,33,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,5,"['Integrat', 'integrat']","['Integration', 'Integrator', 'integration']"
Deployability,"/**; get the minos error for parameter i, return false if Minos failed; A minimizaiton must be performed befre, return false if no minimization has been done; In case of Minos failed the status error is updated as following; status += 10 * minosStatus.; The Minos status of last Minos run can also be retrieved by calling MinosStatus(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:203,update,updated,203,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['update'],['updated']
Deployability,/**; get the option used for the integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:33,integrat,integration,33,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Deployability,/**; perform a full calculation of the Hessian matrix for error calculation; If a valid minimum exists the calculation is done on the minimum point otherwise is performed; in the current set values of parameters; Status code of minimizer is updated according to the following convention (in case Hesse failed); status += 100*hesseStatus where hesse status is:; status = 1 : hesse failed; status = 2 : matrix inversion failed; status = 3 : matrix is not pos defined; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:241,update,updated,241,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['update'],['updated']
Deployability,/**; return a pointer to integrator object; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:25,integrat,integrator,25,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['integrat'],['integrator']
Deployability,/**; return number of function evaluations in calculating the integral; (if integrator do not implement this function returns -1); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:76,integrat,integrator,76,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,['integrat'],['integrator']
Deployability,/**; set cdf distribution. If a method requires it; and is not set it is then estimated using numerical; integration from the pdf; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:105,integrat,integration,105,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['integrat'],['integration']
Deployability,/**; set integration function using a generic function implementing the operator()(double *x); The dimension of the function is in this case required; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:9,integrat,integration,9,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['integrat'],['integration']
Deployability,/**; set integration method using a name instead of an enumeration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:9,integrat,integration,9,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Deployability,/**; set integration method; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:9,integrat,integration,9,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Deployability,/**; set integration mode for VEGAS method; The possible MODE are :; MCIntegration::kIMPORTANCE (default) : VEGAS will use importance sampling; MCIntegration::kSTRATIFIED : VEGAS will use stratified sampling if certain condition are satisfied; MCIntegration::kIMPORTANCE_ONLY : VEGAS will always use importance sampling; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:9,integrat,integration,9,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Deployability,/**; set one dimensional function for 1D integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:41,integrat,integration,41,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['integrat'],['integration']
Deployability,/**; set the integration options; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:13,integrat,integration,13,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Deployability,/**; set the integration rule (Gauss-Kronrod rule).; The possible rules are defined in the Integration::GKRule enumeration.; The integration rule can be modified only for ADAPTIVE type integrations; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:13,integrat,integration,13,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,4,"['Integrat', 'integrat']","['Integration', 'integration', 'integrations']"
Deployability,/**; update number of calls; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h:5,update,update,5,math/mathcore/inc/Math/FitMethodFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h,1,['update'],['update']
Deployability,/**; wrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional; integration algorithm. @ingroup MCIntegration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionWrapper.h:93,integrat,integration,93,math/mathmore/src/GSLMonteFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionWrapper.h,1,['integrat'],['integration']
Deployability,"/**< Release is similar to Acquire, but with; a barrier of the sort necessary to release; a lock. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:5,Release,Release,5,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,"['Release', 'release']","['Release', 'release']"
Deployability,/**< position where reading stopped. Will be updated. Necessarily 0 <= pos <= size */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:45,update,updated,45,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['update'],['updated']
Deployability,/**< position where writing stopped. Will be updated. Necessarily 0 <= pos <= size */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:45,update,updated,45,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['update'],['updated']
Deployability,"/**< provides Acquire semantics; for loads and Release; semantics for stores.; Additionally, it guarantees; that a total ordering exists; between all; SequentiallyConsistent; operations. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:47,Release,Release,47,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['Release'],['Release']
Deployability,/**< provides both an Acquire and a; Release barrier (for fences and; operations which both read and write; memory). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:37,Release,Release,37,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['Release'],['Release']
Deployability,"/*-***************************************************************************; * Streaming decompression - HowTo; *; * A ZSTD_DStream object is required to track streaming operations.; * Use ZSTD_createDStream() and ZSTD_freeDStream() to create/release resources.; * ZSTD_DStream objects can be re-used multiple times.; *; * Use ZSTD_initDStream() to start a new decompression operation.; * @return : recommended first input size; * Alternatively, use advanced API to set specific properties.; *; * Use ZSTD_decompressStream() repetitively to consume your input.; * The function will update both `pos` fields.; * If `input.pos < input.size`, some input has not been consumed.; * It's up to the caller to present again remaining data.; * The function tries to flush all data decoded immediately, respecting output buffer size.; * If `output.pos < output.size`, decoder has flushed everything it could.; * But if `output.pos == output.size`, there might be some data left within internal buffers.,; * In which case, call ZSTD_decompressStream() again to flush whatever remains in the buffer.; * Note : with no additional input provided, amount of data flushed is necessarily <= ZSTD_BLOCKSIZE_MAX.; * @return : 0 when a frame is completely decoded and fully flushed,; * or an error code, which can be tested using ZSTD_isError(),; * or any other value > 0, which means there is still some decoding or flushing to do to complete current frame :; * the return value is a suggested next input size (just a hint for better latency); * that will never request more than the remaining frame size.; * *******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:246,release,release,246,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,"['release', 'update']","['release', 'update']"
Deployability,"/*-***********************************************************************; * Streaming compression - HowTo; *; * A ZSTD_CStream object is required to track streaming operation.; * Use ZSTD_createCStream() and ZSTD_freeCStream() to create/release resources.; * ZSTD_CStream objects can be reused multiple times on consecutive compression operations.; * It is recommended to re-use ZSTD_CStream since it will play nicer with system's memory, by re-using already allocated memory.; *; * For parallel execution, use one separate ZSTD_CStream per thread.; *; * note : since v1.3.0, ZSTD_CStream and ZSTD_CCtx are the same thing.; *; * Parameters are sticky : when starting a new compression on the same context,; * it will re-use the same sticky parameters as previous compression session.; * When in doubt, it's recommended to fully initialize the context before usage.; * Use ZSTD_CCtx_reset() to reset the context and ZSTD_CCtx_setParameter(),; * ZSTD_CCtx_setPledgedSrcSize(), or ZSTD_CCtx_loadDictionary() and friends to; * set more specific parameters, the pledged source size, or load a dictionary.; *; * Use ZSTD_compressStream2() with ZSTD_e_continue as many times as necessary to; * consume input stream. The function will automatically update both `pos`; * fields within `input` and `output`.; * Note that the function may not consume the entire input, for example, because; * the output buffer is already full, in which case `input.pos < input.size`.; * The caller must check if input has been entirely consumed.; * If not, the caller must make some room to receive more compressed data,; * and then present again remaining input data.; * note: ZSTD_e_continue is guaranteed to make some forward progress when called,; * but doesn't guarantee maximal forward progress. This is especially relevant; * when compressing with multiple threads. The call won't block if it can; * consume some input, but if it can't it will wait for some, but not all,; * output to be flushed.; * @return : provides ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:239,release,release,239,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['release'],['release']
Deployability,"/*-*********************************; * Advanced compression functions; ***********************************/; /*! LZ4F_createCompressionContext() :; * The first thing to do is to create a compressionContext object, which will be used in all compression operations.; * This is achieved using LZ4F_createCompressionContext(), which takes as argument a version and an LZ4F_preferences_t structure.; * The version provided MUST be LZ4F_VERSION. It is intended to track potential incompatible differences between different binaries.; * The function will provide a pointer to an allocated LZ4F_compressionContext_t object.; * If the result LZ4F_errorCode_t is not OK_NoError, there was an error during context creation.; * Object can release its memory using LZ4F_freeCompressionContext();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:728,release,release,728,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['release'],['release']
Deployability,"/*---------------------------------------------------------------------------*/; /* implementation of the incomplete beta function */; /**; * DESCRIPTION:; *; * Returns incomplete beta integral of the arguments, evaluated; * from zero to x. The function is defined as; *; * x; * - -; * | (a+b) | | a-1 b-1; * ----------- | t (1-t) dt.; * - - | |; * | (a) | (b) -; * 0; *; * The domain of definition is 0 <= x <= 1. In this; * implementation a and b are restricted to positive values.; * The integral from x to 1 may be obtained by the symmetry; * relation; *; * 1 - incbet( a, b, x ) = incbet( b, a, 1-x ).; *; * The integral is evaluated by a continued fraction expansion; * or, when b*x is small, by a power series.; *; * ACCURACY:; *; * Tested at uniformly distributed random points (a,b,x) with a and b; * in ""domain"" and x between 0 and 1.; * Relative error; * arithmetic domain # trials peak rms; * IEEE 0,5 10000 6.9e-15 4.5e-16; * IEEE 0,85 250000 2.2e-13 1.7e-14; * IEEE 0,1000 30000 5.3e-12 6.3e-13; * IEEE 0,10000 250000 9.3e-11 7.1e-12; * IEEE 0,100000 10000 8.7e-10 4.8e-11; * Outputs smaller than the IEEE gradual underflow threshold; * were excluded from these statistics.; *; * ERROR MESSAGES:; * message condition value returned; * incbet domain x<0, x>1 0.0; * incbet underflow 0.0; *; * Cephes Math Library, Release 2.8: June, 2000; * Copyright 1984, 1995, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx:1327,Release,Release,1327,math/mathcore/src/SpecFuncCephes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx,1,['Release'],['Release']
Deployability,"/*; * Add a new active region to the sweep line, *somewhere* below ""regAbove""; * (according to where the new edge belongs in the sweep-line dictionary).; * The upper edge of the new region will be ""eNewUp"".; * Winding number and ""inside"" flag are not updated.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:251,update,updated,251,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['update'],['updated']
Deployability,"/*; * Added at libpng-1.2.8; *; * Ref MSDN: Private as priority over Special; * VS_FF_PRIVATEBUILD File *was not* built using standard release; * procedures. If this value is given, the StringFileInfo block must; * contain a PrivateBuild string.; *; * VS_FF_SPECIALBUILD File *was* built by the original company using; * standard release procedures but is a variation of the standard; * file of the same version number. If this value is given, the; * StringFileInfo block must contain a SpecialBuild string.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:135,release,release,135,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['release'],['release']
Deployability,"/*; * Compute memory partition like procps(free), see https://gitlab.com/procps-ng/procps/-/blob/master/proc/sysinfo.c; * ; * fMemShared is a part of Cached (see https://lore.kernel.org/patchwork/patch/648763/), does not subtract twice from used; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:186,patch,patchwork,186,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,2,['patch'],"['patch', 'patchwork']"
Deployability,"/*; * Decompression startup: read start of JPEG datastream to see what's there.; * Need only initialize JPEG object and supply a data source before calling.; *; * This routine will read as far as the first SOS marker (ie, actual start of; * compressed data), and will save all tables and parameters in the JPEG; * object. It will also initialize the decompression parameters to default; * values, and finally return JPEG_HEADER_OK. On return, the application may; * adjust the decompression parameters and then call jpeg_start_decompress.; * (Or, if the application only wanted to determine the image parameters,; * the data need not be decompressed. In that case, call jpeg_abort or; * jpeg_destroy to release any temporary space.); * If an abbreviated (tables only) datastream is presented, the routine will; * return JPEG_HEADER_TABLES_ONLY upon reaching EOI. The application may then; * re-use the JPEG object to read the abbreviated image datastream(s).; * It is unnecessary (but OK) to call jpeg_abort in this case.; * The JPEG_SUSPENDED return code only occurs if the data source module; * requests suspension of the decompressor. In this case the application; * should load more source data and then re-call jpeg_read_header to resume; * processing.; * If a non-suspending data source is used and require_image is TRUE, then the; * return code need not be inspected since only JPEG_HEADER_OK is possible.; *; * This routine is now just a front end to jpeg_consume_input, with some; * extra error checking.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:703,release,release,703,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['release'],['release']
Deployability,/*; * Does everything necessary when the sweep line crosses a vertex.; * Updates the mesh and the edge dictionary.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:73,Update,Updates,73,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['Update'],['Updates']
Deployability,"/*; * Expanded entropy decoder object for Huffman decoding.; *; * The savable_state subrecord contains fields that change within an MCU,; * but must not be updated permanently until we complete the MCU.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:156,update,updated,156,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['update'],['updated']
Deployability,/*; * Finish JPEG decompression.; *; * This will normally just verify the file trailer and release temp storage.; *; * Returns FALSE if suspended. The return value need be inspected only if; * a suspending data source is used.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:91,release,release,91,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['release'],['release']
Deployability,"/*; * In library releases up through v6a, we called jpeg_abort() here to free; * any working memory allocated by the destination manager and marker; * writer. Some applications had a problem with that: they allocated space; * of their own from the library memory manager, and didn't want it to go; * away during write_tables. So now we do nothing. This will cause a; * memory leak if an app calls write_tables repeatedly without doing a full; * compression cycle or otherwise resetting the JPEG object. However, that; * seems less bad than unexpectedly freeing memory in the normal case.; * An app that prefers the old behavior can call jpeg_abort for itself after; * each call to jpeg_write_tables().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:17,release,releases,17,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,1,['release'],['releases']
Deployability,"/*; * Macros for fetching data from the data source module.; *; * At all times, cinfo->src->next_input_byte and ->bytes_in_buffer reflect; * the current restart point; we update them only when we have reached a; * suitable place to restart if a suspension occurs.; */; /* Declare and initialize local copies of input pointer/count */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:171,update,update,171,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['update'],['update']
Deployability,"/*; * Prescan some rows of pixels.; * In this module the prescan simply updates the histogram, which has been; * initialized to zeroes by start_pass.; * An output_buf parameter is required by the method signature, but no data; * is actually output (in fact the buffer controller is probably passing a; * NULL pointer).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:72,update,updates,72,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['update'],['updates']
Deployability,"/*; * Project: RooFit; * Authors:; * Kyle Cranmer,; * Lorenzo Moneta,; * Gregory Schott,; * Wouter Verkerke,; * Sven Kreiss; *; * Copyright (c) 2023, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::ModelConfig; \ingroup Roostats. ModelConfig is a simple class that holds configuration information specifying how a model; should be used in the context of various RooStats tools. A single model can be used; in different ways, and this class should carry all that is needed to specify how it should be used.; ModelConfig requires a workspace to be set. A ModelConfig holds sets of parameters of the likelihood function that have different interpretations:; - **Parameter of interest** Parameters that are measured (*i.e.* fitted).; - **Nuisance parameters** Parameters that are fitted, but their post-fit value is not interesting. Often,; they might be constrained because external knowledge about them exists, *e.g.* from external measurements.; - **Constraint parameters** No direct use in RooFit/RooStats. Can be used by the user for bookkeeping.; - **Observables** Parameters that have been measured externally, *i.e.* they exist in a dataset. These are not fitted,; but read during fitting from the entries of a dataset.; - **Conditional observables** Observables that are not integrated when the normalisation of the PDF is calculated.; See *e.g.* `rf306_condpereventerrors` in the RooFit tutorials.; - **Global observables** Observables that to the fit look like ""constant"" values, *i.e.* they are not being; fitted and they are not loaded from a dataset, but some knowledge exists that allows to set them to a; specific value. Examples:; -- A signal efficiency measured in a Monte Carlo study.; -- When constraining a parameter \f$ b \f$, the target value (\f$ b_0 \f$) that this parameter is constrained to:; \f[; \math",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:446,configurat,configuration,446,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['configurat'],['configuration']
Deployability,"/*; * Purpose: insert right-going edges into the edge dictionary, and update; * winding numbers and mesh connectivity appropriately. All right-going; * edges share a common origin vOrg. Edges are inserted CCW starting at; * eFirst; the last edge inserted is eLast->Oprev. If vOrg has any; * left-going edges already processed, then eTopLeft must be the edge; * such that an imaginary upward vertical segment from vOrg would be; * contained between eTopLeft->Oprev and eTopLeft; otherwise eTopLeft; * should be NULL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:70,update,update,70,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['update'],['update']
Deployability,"/*; * Read the coefficient arrays from a JPEG file.; * jpeg_read_header must be completed before calling this.; *; * The entire image is read into a set of virtual coefficient-block arrays,; * one per component. The return value is a pointer to the array of; * virtual-array descriptors. These can be manipulated directly via the; * JPEG memory manager, or handed off to jpeg_write_coefficients().; * To release the memory occupied by the virtual arrays, call; * jpeg_finish_decompress() when done with the data.; *; * An alternative usage is to simply obtain access to the coefficient arrays; * during a buffered-image-mode decompression operation. This is allowed; * after any jpeg_finish_output() call. The arrays can be accessed until; * jpeg_finish_decompress() is called. (Note that any call to the library; * may reposition the arrays, so don't rely on access_virt_barray() results; * to stay valid across library calls.); *; * Returns NULL if suspended. This case need be checked only if; * a suspending data source is used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c:404,release,release,404,graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,1,['release'],['release']
Deployability,/*; * Release all objects belonging to a specified pool.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:6,Release,Release,6,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['Release'],['Release']
Deployability,"/*; * Routines to process JPEG markers.; *; * Entry condition: JPEG marker itself has been read and its code saved; * in cinfo->unread_marker; input restart point is just after the marker.; *; * Exit: if return TRUE, have read and processed any parameters, and have; * updated the restart point to point after the parameters.; * If return FALSE, was forced to suspend before reaching end of; * marker parameters; restart point has not been moved. Same routine; * will be called again after application supplies more input data.; *; * This approach to suspension assumes that all of a marker's parameters; * can fit into a single input bufferload. This should hold for ""normal""; * markers. Some COM/APPn markers might have large parameter segments; * that might not fit. If we are simply dropping such a marker, we use; * skip_input_data to get past it, and thereby put the problem on the; * source manager's shoulders. If we are saving the marker's contents; * into memory, we use a slightly different convention: when forced to; * suspend, the marker processor updates the restart point to the end of; * what it's consumed (ie, the end of the buffer) before returning FALSE.; * On resumption, cinfo->unread_marker still contains the marker code,; * but the data source will point to the next chunk of marker data.; * The marker processor must retain internal state to deal with this.; *; * Note that we don't bother to avoid duplicate trace messages if a; * suspension occurs within marker parameters. Other side effects; * require more care.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:269,update,updated,269,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,2,['update'],"['updated', 'updates']"
Deployability,"/*; * Several decompression processes need to range-limit values to the range; * 0..MAXJSAMPLE; the input value may fall somewhat outside this range; * due to noise introduced by quantization, roundoff error, etc. These; * processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:329,pipeline,pipelines,329,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['pipeline'],['pipelines']
Deployability,"/*; * Step 3: FIXUP_CPP_WHITESPACE; * If your cpp collapses tabs macro expansions into a single space and; * replaces escaped newlines with a space, define this symbol. This will; * cause imake to attempt to patch up the generated Makefile by looking; * for lines that have colons in them (this is why the rules file escapes; * all colons). One way to tell if you need this is to see whether or not; * your Makefiles have no tabs in them and lots of @@ strings.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h:208,patch,patch,208,misc/rmkdepend/imakemdep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h,1,['patch'],['patch']
Deployability,"/*; * The core arithmetic decoding routine (common in JPEG and JBIG).; * This needs to go as fast as possible.; * Machine-dependent optimization facilities; * are not utilized in this portable implementation.; * However, this code should be fairly efficient and; * may be a good base for further optimizations anyway.; *; * Return value is 0 or 1 (binary decision).; *; * Note: I've changed the handling of the code base & bit; * buffer register C compared to other implementations; * based on the standards layout & procedures.; * While it also contains both the actual base of the; * coding interval (16 bits) and the next-bits buffer,; * the cut-point between these two parts is floating; * (instead of fixed) with the bit shift counter CT.; * Thus, we also need only one (variable instead of; * fixed size) shift for the LPS/MPS decision, and; * we can get away with any renormalization update; * of C (except for new data insertion, of course).; *; * I've also introduced a new scheme for accessing; * the probability estimation state machine table,; * derived from Markus Kuhn's JBIG implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:891,update,update,891,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['update'],['update']
Deployability,"/*; * These two functions are used to allocate and release large chunks of; * memory (up to the total free space designated by jpeg_mem_available).; * The interface is the same as above, except that on an 80x86 machine,; * far pointers are used. On most other machines these are identical to; * the jpeg_get/free_small routines; but we keep them separate anyway,; * in case a different allocation strategy is desirable for large chunks.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:51,release,release,51,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['release'],['release']
Deployability,"/*; * This code is derived from (original license follows):; *; * This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.; * MD5 Message-Digest Algorithm (RFC 1321).; *; * Homepage:; * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5; *; * Author:; * Alexander Peslyak, better known as Solar Designer <solar at openwall.com>; *; * This software was written by Alexander Peslyak in 2001. No copyright is; * claimed, and the software is hereby placed in the public domain.; * In case this attempt to disclaim copyright and place the software in the; * public domain is deemed null and void, then the software is; * Copyright (c) 2001 Alexander Peslyak and it is hereby released to the; * general public under the following terms:; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted.; *; * There's ABSOLUTELY NO WARRANTY, express or implied.; *; * (This is a heavily cut-down ""BSD license"".); *; * This differs from Colin Plumb's older public domain implementation in that; * no exactly 32-bit integer data type is required (any 32-bit or wider; * unsigned integer data type will do), there's no compile-time endianness; * configuration, and the function prototypes match OpenSSL's. No code from; * Colin Plumb's implementation has been reused; this comment merely compares; * the properties of the two independent implementations.; *; * The primary goals of this implementation are portability and ease of use.; * It is meant to be fast, but not as fast as possible. Some known; * optimizations are not included to reduce source code size and avoid; * compile-time configuration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp:716,release,released,716,interpreter/llvm-project/llvm/lib/Support/MD5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp,3,"['configurat', 'release']","['configuration', 'released']"
Deployability,"/*; * UGLY HACK:; * Clang generates a bunch of MOV/MOVK pairs for aarch64, and they are; * placed sequentially, in order, at the top of the unrolled loop.; *; * While MOVK is great for generating constants (2 cycles for a 64-bit; * constant compared to 4 cycles for LDR), long MOVK chains stall the; * integer pipelines:; * I L S; * MOVK; * MOVK; * MOVK; * MOVK; * ADD; * SUB STR; * STR; * By forcing loads from memory (as the asm line causes Clang to assume; * that XXH3_kSecretPtr has been changed), the pipelines are used more; * efficiently:; * I L S; * LDR; * ADD LDR; * SUB STR; * STR; * XXH3_64bits_withSeed, len == 256, Snapdragon 835; * without hack: 2654.4 MB/s; * with hack: 3202.9 MB/s; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:310,pipeline,pipelines,310,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['pipeline'],['pipelines']
Deployability,/*; * Update more lists; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:6,Update,Update,6,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['Update'],['Update']
Deployability,/*; * Update points' polygon lists; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:6,Update,Update,6,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['Update'],['Update']
Deployability,/*; * Update points' segment lists; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/X3DBuffer.c:6,Update,Update,6,graf3d/g3d/src/X3DBuffer.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/X3DBuffer.c,1,['Update'],['Update']
Deployability,/*; * Update polygons' point lists; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:6,Update,Update,6,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['Update'],['Update']
Deployability,/*; * Update segments' polygon lists; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/X3DBuffer.c:6,Update,Update,6,graf3d/g3d/src/X3DBuffer.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/X3DBuffer.c,1,['Update'],['Update']
Deployability,"/*; * jchuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy encoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting output suspension.; * If the data destination module demands suspension, we want to be able to; * back up to the start of the current MCU. To do this, we copy state; * variables into local working storage, and update them back to the; * permanent JPEG objects only upon successful completion of an MCU.; *; * We do not support output suspension for the progressive JPEG mode, since; * the library currently does not allow multiple-scan files to be written; * with output suspension.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:653,update,update,653,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['update'],['update']
Deployability,"/*; * jdhuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy decoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting input suspension.; * If the data source module demands suspension, we want to be able to back; * up to the start of the current MCU. To do this, we copy state variables; * into local working storage, and update them back to the permanent; * storage only upon successful completion of an MCU.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:647,update,update,647,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['update'],['update']
Deployability,"/*; * jdpostct.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the decompression postprocessing controller.; * This controller manages the upsampling, color conversion, and color; * quantization/reduction steps; specifically, it controls the buffering; * between upsample/color conversion and color quantization/reduction.; *; * If no color quantization/reduction is required, then this module has no; * work to do, and it just hands off to the upsample/color conversion code.; * An integrated upsample/convert/quantize process would replace this module; * entirely.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c:649,integrat,integrated,649,graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,1,['integrat'],['integrated']
Deployability,"/*; * jmemsys.h; *; * Copyright (C) 1992-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This include file defines the interface between the system-independent; * and system-dependent portions of the JPEG memory manager. No other; * modules need include it. (The system-independent portion is jmemmgr.c;; * there are several different versions of the system-dependent portion.); *; * This file works as-is for the system-dependent memory managers supplied; * in the IJG distribution. You may need to modify it if you write a; * custom memory manager. If system-dependent changes are needed in; * this file, the best method is to #ifdef them based on a configuration; * symbol supplied in jconfig.h, as we have done with USE_MSDOS_MEMMGR; * and USE_MAC_MEMMGR.; */; /* Short forms of external names for systems with brain-damaged linkers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:772,configurat,configuration,772,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['configurat'],['configuration']
Deployability,"/*; * jmorecfg.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains additional configuration options that customize the; * JPEG software for special applications or support machine-dependent; * optimizations. Most users will not need to touch this file.; */; /*; * Define BITS_IN_JSAMPLE as either; * 8 for 8-bit sample values (the usual setting); * 12 for 12-bit sample values; * Only 8 and 12 are legal data precisions for lossy JPEG according to the; * JPEG standard, and the IJG code does not support anything else!; * We do not support run-time selection of data precision, sorry.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:283,configurat,configuration,283,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['configurat'],['configuration']
Deployability,"/*; * mixmax.c; * A Pseudo-Random Number Generator; *; * Created by Konstantin Savvidy.; *; * The code is released under GNU Lesser General Public License v3; *; *	G.K.Savvidy and N.G.Ter-Arutyunian,; * On the Monte Carlo simulation of physical systems,; *	J.Comput.Phys. 97, 566 (1991);; * Preprint EPI-865-16-86, Yerevan, Jan. 1986; *; * K.Savvidy; * The MIXMAX random number generator; * Computer Physics Communications 196 (2015), pp 161–165; * http://dx.doi.org/10.1016/j.cpc.2015.06.003; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/mixmax.h:106,release,released,106,math/mathcore/src/mixmax.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/mixmax.h,1,['release'],['released']
Deployability,/*; *--------------------------------------------------------------; * gdk_keyboard_ungrab; *; * Releases any keyboard grab; *; * Arguments:; *; * Results:; *; * Side effects:; *; *--------------------------------------------------------------; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:97,Release,Releases,97,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['Release'],['Releases']
Deployability,/*; *--------------------------------------------------------------; * gdk_pointer_ungrab; *; * Releases any pointer grab; *; * Arguments:; *; * Results:; *; * Side effects:; *; *--------------------------------------------------------------; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:96,Release,Releases,96,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['Release'],['Releases']
Deployability,"/*; *; * Inverse of Normal distribution function; *; *; *; * SYNOPSIS:; *; * double x, y, ndtri();; *; * x = ndtri( y );; *; *; *; * DESCRIPTION:; *; * Returns the argument, x, for which the area under the; * Gaussian probability density function (integrated from; * minus infinity to x) is equal to y.; *; *; * For small arguments 0 < y < exp(-2), the program computes; * z = sqrt( -2.0 * log(y) ); then the approximation is; * x = z - log(z)/z - (1/z) P(1/z) / Q(1/z).; * There are two rational functions P/Q, one for 0 < y < exp(-32); * and the other for y up to exp(-2). For larger arguments,; * w = y - 0.5, and x/sqrt(2pi) = w + w**3 R(w**2)/S(w**2)).; *; *; * ACCURACY:; *; * Relative error:; * arithmetic domain # trials peak rms; * DEC 0.125, 1 5500 9.5e-17 2.1e-17; * DEC 6e-39, 0.135 3500 5.7e-17 1.3e-17; * IEEE 0.125, 1 20000 7.2e-16 1.3e-16; * IEEE 3e-308, 0.135 50000 4.6e-16 9.8e-17; *; *; * ERROR MESSAGES:; *; * message condition value returned; * ndtri domain x <= 0 -MAXNUM; * ndtri domain x >= 1 MAXNUM; *; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1987, 1989, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:248,integrat,integrated,248,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,2,"['Release', 'integrat']","['Release', 'integrated']"
Deployability,"/*; *; * Inverse of complemented incomplete gamma integral; *; *; *; * SYNOPSIS:; *; * double a, x, p, igami();; *; * x = igami( a, p );; *; * DESCRIPTION:; *; * Given p, the function finds x such that; *; * igamc( a, x ) = p.; *; * Starting with the approximate value; *; * 3; * x = a t; *; * where; *; * t = 1 - d - ndtri(p) sqrt(d); *; * and; *; * d = 1/9a,; *; * the routine performs up to 10 Newton iterations to find the; * root of igamc(a,x) - p = 0.; *; * ACCURACY:; *; * Tested at random a, p in the intervals indicated.; *; * a p Relative error:; * arithmetic domain domain # trials peak rms; * IEEE 0.5,100 0,0.5 100000 1.0e-14 1.7e-15; * IEEE 0.01,0.5 0,0.5 100000 9.0e-14 3.4e-15; * IEEE 0.5,10000 0,0.5 20000 2.3e-13 3.8e-14; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1987, 1995, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:768,Release,Release,768,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,1,['Release'],['Release']
Deployability,"/*; *; * Inverse of incomplete beta integral; *; *; *; * SYNOPSIS:; *; * double a, b, x, y, incbi();; *; * x = incbi( a, b, y );; *; *; *; * DESCRIPTION:; *; * Given y, the function finds x such that; *; * incbet( a, b, x ) = y .; *; * The routine performs interval halving or Newton iterations to find the; * root of incbet(a,b,x) - y = 0.; *; *; * ACCURACY:; *; * Relative error:; * x a,b; * arithmetic domain domain # trials peak rms; * IEEE 0,1 .5,10000 50000 5.8e-12 1.3e-13; * IEEE 0,1 .25,100 100000 1.8e-13 3.9e-15; * IEEE 0,1 0,5 50000 1.1e-12 5.5e-15; * VAX 0,1 .5,100 25000 3.5e-14 1.1e-15; * With a and b constrained to half-integer or integer values:; * IEEE 0,1 .5,10000 50000 5.8e-12 1.1e-13; * IEEE 0,1 .5,100 100000 1.7e-14 7.9e-16; * With a = .5, b constrained to half-integer or integer values:; * IEEE 0,1 .5,10000 10000 8.3e-11 1.0e-11; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1996, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:886,Release,Release,886,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,1,['Release'],['Release']
Deployability,"/*; // an event handler:; onclick(evt) { // is called when the Control's area is clicked - no further event registration required; sap.ui.require([; 'sap/ui/unified/ColorPickerPopover'; ], function (ColorPickerPopover) {; if (!this.oColorPickerPopover) {; this.oColorPickerPopover = new ColorPickerPopover({; change: this.handleChange.bind(this); });; }; this.oColorPickerPopover.setColorString(this.getColor());; this.oColorPickerPopover.openBy(this);; }.bind(this));; },. handleChange(oEvent) {; let newColor = oEvent.getParameter(""colorString"");; this.setColor(newColor);; // TODO: fire a ""change"" event, in case the application needs to react explicitly when the color has changed; // but when the color is bound via data binding, it will be updated also without this event; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js:746,update,updated,746,ui5/geom/lib/ColorBox.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js,1,['update'],['updated']
Deployability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1009,update,updates,1009,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['update'],['updates']
Deployability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any; pending output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case,; msg may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the exact; value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller. msg is set to null if there is no error; message. inflateInit does not perform any decompression apart from reading; the zlib header if present: this will be done by inflate(). (So next_in and; avail_in may be modified, but next_out and avail_out are unchanged.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1009,update,updates,1009,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['update'],['updates']
Deployability,"/*; Data set adapted from the paper (1); ""K-Sample Anderson-Darling Tests of Fit for continuous and discrete cases"" by Scholz and Stephens; values of expected A2 taken by running R kSamples code; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx:85,continuous,continuous,85,math/mathcore/test/stressGoFTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx,1,['continuous'],['continuous']
Deployability,"/*; Data sets adapted from the paper (1); ""K-Sample Anderson-Darling Tests of Fit for continuous and discrete cases"" by Scholz and Stephens; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx:86,continuous,continuous,86,math/mathcore/test/stressGoFTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx,1,['continuous'],['continuous']
Deployability,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different strategy.; If the compression level is changed, the input available so far is; compressed with the old level (and may be flushed); the new level will take; effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to be; compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR if; strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:16,update,update,16,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['update'],['update']
Deployability,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different; strategy. If the compression level is changed, the input available so far; is compressed with the old level (and may be flushed); the new level will; take effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to; be compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR; if strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:16,update,update,16,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['update'],['update']
Deployability,"/*; Dynamically update the compression level or strategy. See the description; of deflateInit2 for the meaning of these parameters. gzsetparams returns Z_OK if success, or Z_STREAM_ERROR if the file was not; opened for writing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:16,update,update,16,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['update'],['update']
Deployability,"/*; Dynamically update the compression level or strategy. See the description; of deflateInit2 for the meaning of these parameters.; gzsetparams returns Z_OK if success, or Z_STREAM_ERROR if the file was not; opened for writing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:16,update,update,16,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['update'],['update']
Deployability,"/*; MinimumError DavidonErrorUpdator::Update(const MinimumState& s0,; const MinimumParameters& p1,; const FunctionGradient& g1) const {. const MnAlgebraicSymMatrix& v0 = s0.Error().InvHessian();; MnAlgebraicVector dx = p1.Vec() - s0.Vec();; MnAlgebraicVector dg = g1.Vec() - s0.Gradient().Vec();. double delgam = inner_product(dx, dg);; double gvg = similarity(dg, v0);. // std::cout<<""delgam= ""<<delgam<<"" gvg= ""<<gvg<<std::endl;; MnAlgebraicVector vg = v0*dg;; // MnAlgebraicSymMatrix vUpd(v0.Nrow());. // MnAlgebraicSymMatrix dd = ( 1./delgam )*outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = ( 1./gvg )*outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // MnAlgebraicSymMatrix vUpd = ( 1./delgam )*outer_product(dx) - ( 1./gvg )*outer_product(vg);; MnAlgebraicSymMatrix vUpd = Outer_product(dx)/delgam - Outer_product(vg)/gvg;. if(delgam > gvg) {; // dx *= ( 1./delgam );; // vg *= ( 1./gvg );; // MnAlgebraicVector flnu = dx - vg;; // MnAlgebraicSymMatrix tmp = Outer_product(flnu);; // tmp *= gvg;; // vUpd = vUpd + tmp;; vUpd += gvg*outer_product(dx/delgam - vg/gvg);; }. //; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; //; //; // double phi = delgam/(delgam - gvg);. // MnAlgebraicSymMatrix vUpd(v0.Nrow());; // if(phi < 0) {; // // rank-2 Update; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // }; // if(phi > 1) {; // // rank-1 Update; // MnAlgebraicVector tmp = dx - vg;; // vUpd = Outer_product(tmp);; // vUpd *= ( 1./(delgam - gvg) );; // }; //. //; // if(delgam > gvg) {; // // rank-1 Update; // MnAlgebraicVector tmp = dx - vg;; // vUpd = Outer_product(tmp);; // vUpd *= ( 1./(delgam - gvg) );; // } else {; // // rank-2 Update; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx:38,Update,Update,38,math/minuit2/src/DavidonErrorUpdator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx,1,['Update'],['Update']
Deployability,"/*; RequireJS 2.2.0 Copyright jQuery Foundation and other contributors.; Released under MIT license, http://github.com/requirejs/requirejs/LICENSE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/www/scripts/require.js:73,Release,Released,73,interpreter/cling/www/scripts/require.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/www/scripts/require.js,1,['Release'],['Released']
Deployability,"/*; Return from inflate(), updating the total counts and the check value.; If there was no progress during the inflate() call, return a buffer; error. Call updatewindow() to create and/or update the window state.; Note: a memory error from inflate() is non-recoverable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:156,update,updatewindow,156,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,4,['update'],"['update', 'updatewindow']"
Deployability,"/*; Search buf[0..len-1] for the pattern: 0, 0, 0xff, 0xff. Return when found; or when out of input. When called, *have is the number of pattern bytes; found in order so far, in 0..3. On return *have is updated to the new; state. If on return *have equals four, then the pattern was found and the; return value is how many bytes were read including the last byte of the; pattern. If *have is less than four, then the pattern has not been found; yet and the return value is len. In the latter case, syncsearch() can be; called again with more data and the *have state. *have is initialized to; zero for the first call.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:203,update,updated,203,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['update'],['updated']
Deployability,"/*; Some implementation details:. - The conditional `RLogBuilder` use prevents stream operators from being called if; verbosity is too low, i.e.:; ~~~; RLogScopedVerbosity silence(RLogLevel::kFatal);; R__LOG_DEBUG(7) << WillNotBeCalled();; ~~~; - To update counts of warnings / errors / fatal errors, those RLogEntries must; always be created, even if in the end their emission will be silenced. This; should be fine, performance-wise, as they should not happen frequently.; - Use `(condition) && RLogBuilder(...)` instead of `if (condition) RLogBuilder(...)`; to prevent ""ambiguous else"" in invocations such as `if (something) R__LOG_DEBUG()...`.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:250,update,update,250,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['update'],['update']
Deployability,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1484,install,install,1484,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['install'],['install']
Deployability,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed; data. This version of the library supports only one compression method; (deflation) but other algorithms will be added later and will have the same; stream interface. Compression can be done in a single step if the buffers are large; enough (for example if an input file is mmap'ed), or can be done by; repeated calls of the compression function. In the latter case, the; application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never; crash even in case of corrupted input.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1527,install,install,1527,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['install'],['install']
Deployability,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:25,update,update,25,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,3,['update'],"['update', 'updated']"
Deployability,"/*; The application must update next_in and avail_in when avail_in has; dropped to zero. It must update next_out and avail_out when avail_out; has dropped to zero. The application must initialize zalloc, zfree and; opaque before calling the init function. All other fields are set by the; compression library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this; if the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS,; pointers returned by zalloc for objects of exactly 65536 bytes *must*; have their offset normalized to zero. The default allocation function; provided by this library ensures this (see zutil.c). To reduce memory; requirements and avoid any allocation of 64K objects, at the expense of; compression ratio, compile the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or; progress reports. After compression, total_in holds the total size of; the uncompressed data and may be saved for use in the decompressor; (particularly if the decompressor wants to decompress everything in; a single step).; */; /* constants */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:25,update,update,25,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,3,['update'],"['update', 'updated']"
Deployability,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is NULL, this function returns; the required initial value for the checksum.; An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:4,Update,Update,4,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4,Update,Update,4,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is NULL, this function returns the required initial; value for the for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application.; Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:4,Update,Update,4,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is Z_NULL, this function returns the required; initial value for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application. Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */; /*; ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));. Combine two CRC-32 check values into one. For two sequences of bytes,; seq1 and seq2 with lengths len1 and len2, CRC-32 check values were; calculated for each, crc1 and crc2. crc32_combine() returns the CRC-32; check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and; len2.; */; /* various hacks, don't look :) */; /* deflateInit and inflateInit are macros to allow checking the zlib version; * and the compiler's view of z_stream:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4,Update,Update,4,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['Update', 'update']","['Update', 'updated']"
Deployability,"/*; cout << ""---------------------------\nin PiecewiseInterpolation get analytic integral "" <<endl;; cout << ""all vars = ""<<endl;; allVars.Print(""v"");; cout << ""anal vars = ""<<endl;; analVars.Print(""v"");; cout << ""normset vars = ""<<endl;; if(normSet2); normSet2->Print(""v"");; */; // Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:301,integrat,integration,301,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['integrat'],['integration']
Deployability,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce some; output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications).; Some output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming; more output, and updating avail_in or avail_out accordingly; avail_out; should never be zero before the call. The application can consume the; compressed output when it wants, for example when the output buffer is full; (avail_out == 0), or after each call of deflate(). If deflate returns Z_OK; and with zero avail_out, it must be called again after making room in the; output buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumualte before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In particular; avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:386,update,update,386,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,3,['update'],"['update', 'updated']"
Deployability,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:386,update,update,386,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,3,['update'],"['update', 'updated']"
Deployability,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:390,update,update,390,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,3,['update'],"['update', 'updated']"
Deployability,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing; will resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there; is no more input data or no more space in the output buffer (see below; about the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming; more output, and updating the next_* and avail_* values accordingly.; The application can consume the uncompressed output when it wants, for; example when the output buffer is full (avail_out == 0), or after each; call of inflate(). If inflate returns Z_OK and with zero avail_out, it; must be called again after making room in the output buffer because there; might be more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH,; Z_FINISH, or Z_BLOCK. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate() stop; if and when it gets to the next deflate block boundary. When decoding the; zlib or gzip format, this will cause inflate() to return immediately after; the header and before the first block. When doing a raw inflate, inflate(); will go ahead and process the first block, and will return when it gets to; the end of that block, or when it runs out of data. The Z_BLOCK option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:390,update,update,390,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,3,['update'],"['update', 'updated']"
Deployability,/*===-- Target Machine ----------------------------------------------------===*/; /**; * Create a new set of options for an llvm::TargetMachine.; *; * The returned option structure must be released with; * LLVMDisposeTargetMachineOptions() after the call to; * LLVMCreateTargetMachineWithOptions().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:189,release,released,189,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,1,['release'],['released']
Deployability,"/*===-- Version query -----------------------------------------------------===*/; /**; * Return the major, minor, and patch version of LLVM; *; * The version components are returned via the function's three output; * parameters or skipped if a NULL pointer was supplied.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:118,patch,patch,118,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['patch'],['patch']
Deployability,/*===-- blake3.c - BLAKE3 C Implementation ------------------------*- C -*-===*\; |* *|; |* Released into the public domain with CC0 1.0 *|; |* See 'llvm/lib/Support/BLAKE3/LICENSE' for info. *|; |* SPDX-License-Identifier: CC0-1.0 *|; |* *|; \*===----------------------------------------------------------------------===*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c:92,Release,Released,92,interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,1,['Release'],['Released']
Deployability,/*===-- llvm-c/blake3.h - BLAKE3 C Interface ----------------------*- C -*-===*\; |* *|; |* Released into the public domain with CC0 1.0 *|; |* See 'llvm/lib/Support/BLAKE3/LICENSE' for info. *|; |* SPDX-License-Identifier: CC0-1.0 *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to LLVM's BLAKE3 implementation. *|; |* Original BLAKE3 C API: https://github.com/BLAKE3-team/BLAKE3/tree/1.3.1/c *|; |* *|; |* Symbols are prefixed with 'llvm' to avoid a potential conflict with *|; |* another BLAKE3 version within the same program. *|; |* *|; \*===----------------------------------------------------------------------===*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/blake3.h:92,Release,Released,92,interpreter/llvm-project/llvm/include/llvm-c/blake3.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/blake3.h,1,['Release'],['Released']
Deployability,"/*===---- __clang_cuda_runtime_wrapper.h - CUDA runtime support -------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * WARNING: This header is intended to be directly -include'd by; * the compiler and is not supposed to be included by users.; *; * CUDA headers are implemented in a way that currently makes it; * impossible for user code to #include directly when compiling with; * Clang. They present different view of CUDA-supplied functions; * depending on where in NVCC's compilation pipeline the headers are; * included. Neither of these modes provides function definitions with; * correct attributes, so we use preprocessor to force the headers; * into a form that Clang can use.; *; * Similarly to NVCC which -include's cuda_runtime.h, Clang -include's; * this file during every CUDA compilation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:748,pipeline,pipeline,748,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['pipeline'],['pipeline']
Deployability,"/*===---- arm_acle.h - ARM Non-Neon intrinsics -----------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; * The Arm C Language Extensions specifications can be found in the following; * link: https://github.com/ARM-software/acle/releases; *; * The ACLE section numbers are subject to change. When consulting the; * specifications, it is recommended to search using section titles if; * the section numbers look outdated.; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_acle.h:411,release,releases,411,interpreter/llvm-project/clang/lib/Headers/arm_acle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_acle.h,1,['release'],['releases']
Deployability,"/*===---- pconfigintrin.h - X86 platform configuration ---------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/pconfigintrin.h:41,configurat,configuration,41,interpreter/llvm-project/clang/lib/Headers/pconfigintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/pconfigintrin.h,1,['configurat'],['configuration']
Deployability,"/*===---- sgxintrin.h - X86 SGX intrinsics configuration -------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sgxintrin.h:43,configurat,configuration,43,interpreter/llvm-project/clang/lib/Headers/sgxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sgxintrin.h,1,['configurat'],['configuration']
Deployability,/*Update*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:2,Update,Update,2,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['Update'],['Update']
Deployability,/*Update=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:2,Update,Update,2,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['Update'],['Update']
Deployability,/*UpdateArgsWithConversions=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:2,Update,UpdateArgsWithConversions,2,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,10,['Update'],['UpdateArgsWithConversions']
Deployability,/*UpdateDT=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp:2,Update,UpdateDT,2,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,4,['Update'],['UpdateDT']
Deployability,/*UpdateFlags=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:2,Update,UpdateFlags,2,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,3,['Update'],['UpdateFlags']
Deployability,/*UpdateLiveIns*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:2,Update,UpdateLiveIns,2,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,10,['Update'],['UpdateLiveIns']
Deployability,/*UpgradeDebugInfo*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/Parser.cpp:2,Upgrade,UpgradeDebugInfo,2,interpreter/llvm-project/llvm/lib/AsmParser/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/Parser.cpp,4,['Upgrade'],['UpgradeDebugInfo']
Deployability,"// !_WIN32; // Generic POSIX implementation.; //; // This implementation relies on synchronous signals being delivered to the; // current thread. We use a thread local object to keep track of the active; // crash recovery context, and install signal handlers to invoke HandleCrash on; // the active object.; //; // This implementation does not attempt to chain signal handlers in any; // reliable fashion -- if we get a signal outside of a crash recovery context we; // simply disable crash recovery and raise the signal again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp:235,install,install,235,interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,1,['install'],['install']
Deployability,"// ""Global"" configuration state that can actually vary between modules.; // Ignore all warnings: -w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:12,configurat,configuration,12,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['configurat'],['configuration']
Deployability,"// ""I"" got into the work list because it either made the transition from; // bottom to constant, or to overdefined.; //; // Anything on this worklist that is overdefined need not be visited; // since all of its users will have already been marked as overdefined; // Update all of the users of this instruction's value.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp:266,Update,Update,266,interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,1,['Update'],['Update']
Deployability,"// ""I"" got into the work list because it made the transition from undef to; // constant.; //; // Anything on this worklist that is overdefined need not be visited; // since all of its users will have already been marked as overdefined.; // Update all of the users of this instruction's value.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp:240,Update,Update,240,interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,1,['Update'],['Update']
Deployability,"// ""Objective-C Class Properties"" is recently added for Objective-C. We; // upgrade ObjC bitcodes to contain a ""Objective-C Class Properties"" module; // flag of value 0, so we can correclty downgrade this flag when trying to; // link an ObjC bitcode without this module flag with an ObjC bitcode with; // this module flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:76,upgrade,upgrade,76,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrade']
Deployability,"// ""UpdateForm"" is not a real PPC instruction form, it stands for dform; // load/store with update like ldu/stdu, or Prefetch intrinsic.; // For DS form instructions, their displacements must be multiple of 4.; // For DQ form instructions, their displacements must be multiple of 16.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:4,Update,UpdateForm,4,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,2,"['Update', 'update']","['UpdateForm', 'update']"
Deployability,"// ""Upgrade"" older incorrect branch weights by dropping them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:4,Upgrade,Upgrade,4,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['Upgrade'],['Upgrade']
Deployability,"// ### FIXME:; // Want to update LLVM to 3.9 realease and better testing first, but; // ApplyHeaderSearchOptions shouldn't even be called here:; // 1. It's already been called via CI->createPreprocessor(TU_Complete); // 2. It could corrupt clang's directory cache; // HeaderSearchOptions.::AddSearchPath is a better alternative",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:26,update,update,26,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['update'],['update']
Deployability,"// ################################################################; //; // testing IntegratorMultiDim class; //; // ################################################################",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx:84,Integrat,IntegratorMultiDim,84,math/mathcore/test/testIntegrationMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx,2,['Integrat'],['IntegratorMultiDim']
Deployability,// #pragma acc atomic is equivilent to update:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp:39,update,update,39,interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,1,['update'],['update']
Deployability,"// #pragma link C++ class ROOT::Experimental::REveProjectionAxes+;; // Generic configuration; // #pragma link C++ class REveParamList;; // #pragma link C++ class REveParamList::FloatConfig_t+;; // #pragma link C++ class REveParamList::IntConfig_t+;; // #pragma link C++ class REveParamList::BoolConfig_t+;; // REveTrack",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/LinkDef.h:79,configurat,configuration,79,graf3d/eve7/inc/LinkDef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/LinkDef.h,1,['configurat'],['configuration']
Deployability,"// #pragma link C++ typedef ROOT::Math::IntegratorOneDim::Type;; // #pragma link C++ typedef ROOT::Math::IntegratorMultiDim::Type;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/LinkDef2.h:40,Integrat,IntegratorOneDim,40,math/mathcore/inc/LinkDef2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/LinkDef2.h,2,['Integrat'],"['IntegratorMultiDim', 'IntegratorOneDim']"
Deployability,"// $Id$; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : LDA *; * *; * *; * Description: *; * Local LDA method used by MethodKNN to compute MVA value. *; * This is experimental code under development. This class computes *; * parameters of signal and background PDFs using Gaussian approximation. *; * *; * Author: *; * John Alison John.Alison@cern.ch - University of Pennsylvania, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * University of Pennsylvania, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LDA.h:119,integrat,integrated,119,tmva/tmva/inc/TMVA/LDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LDA.h,1,['integrat'],['integrated']
Deployability,"// $Id$; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : LDA *; * *; * *; * Description: *; * Local LDA method used by MethodKNN to compute MVA value. *; * This is experimental code under development. This class computes *; * parameters of signal and background PDFs using Gaussian approximation. *; * *; * Author: *; * John Alison John.Alison@cern.ch - University of Pennsylvania, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * University of Pennsylvania, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::LDA; \ingroup TMVA. */; // Local",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LDA.cxx:119,integrat,integrated,119,tmva/tmva/src/LDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LDA.cxx,1,['integrat'],['integrated']
Deployability,"// $Id: CoordinateTraits.h,v 1.1 2005/09/19 14:22:38 brun Exp $; //; // Coordinate System traits useful for testing purposes.; //; // For example, when reporting a problem, it is nice to be able; // to present a human-readable name for the system.; //; // Created by: Mark Fischler at Mon May 30 12:21:43 2005; //; // Last update: Wed Jun 1 2005",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/CoordinateTraits.h:323,update,update,323,math/genvector/test/CoordinateTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/CoordinateTraits.h,1,['update'],['update']
Deployability,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:251,update,update,251,core/cont/src/TClassTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx,1,['update'],['update']
Deployability,"// && oldcl->GetClassInfo()) {; // As a work-around to ROOT-6012, we need to register the class even if; // it is not a template instance, because a forward declaration in the header; // files loaded by the current dictionary wil also de-activate the update; // class info mechanism!; // The TClass exist and already has a class info, so it must; // correspond to a class template instantiation which the interpreter; // was able to make with the library containing the TClass Init.; // Because it is already known to the interpreter, the update class info; // will not be triggered, we need to force it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx:251,update,update,251,core/cont/src/TClassTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClassTable.cxx,2,['update'],['update']
Deployability,"// 'I' may appear more than once in DPV's location ops, and each use of 'I'; // must be updated in the DIExpression and potentially have additional; // values added; thus we call salvageDebugInfoImpl for each 'I' instance in; // DPVLocation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:88,update,updated,88,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['update'],['updated']
Deployability,// 'x' is updated with some additional value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:10,update,updated,10,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['updated']
Deployability,// (2) Install transform to optimize modules when they're materialized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp:7,Install,Install,7,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp,1,['Install'],['Install']
Deployability,// (2) Install transform to print modules as they are compiled:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp:7,Install,Install,7,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp,2,['Install'],['Install']
Deployability,// (A & B) | (C | D) or (C | D) | (A & B); // Can be combined if C or D is of type (A/B & X),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:84,A/B,A/B,84,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['A/B'],['A/B']
Deployability,// (A/B)/C --> A/(B*C) if safe and B*C can be folded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:4,A/B,A/B,4,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['A/B'],['A/B']
Deployability,"// (Src, Dst): update the value of node Src to match Dst.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h:15,update,update,15,interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h,1,['update'],['update']
Deployability,"// (also release)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9,release,release,9,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['release'],['release']
Deployability,// (last_iv <= iv) ? Check if the variable is updated and store new; // value in global var.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:46,update,updated,46,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['updated']
Deployability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:113,integrat,integration,113,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,5,['integrat'],"['integrated', 'integration']"
Deployability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * C) Check for dependents that the PDF insists on integrating *; // analytically itself *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:121,integrat,integrating,121,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrating']
Deployability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * D) Make list of servers that can be integrated analytically *; // Add all parameters/dependents as value/shape servers *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:109,integrat,integrated,109,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrated']
Deployability,"// * start of integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:14,integrat,integration,14,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['integrat'],['integration']
Deployability,"// *********** IMPORTANT - Bootstrapping the camera with empty scene; //; // Initially the camera can't be Setup() (limits etc) until the; // scene is populated and it has a valid bounding box to pass to; // the camera. However the scene can't be populated without; // knowing if objects sent are 'of interest' - which needs a camera; // interest box, made from a properly setup camera frustum - catch; // 22.; //; // To overcome this we track the largest box diagonal seen so far and; // regard anything over 0.001 of this as 'of interest'. This enables; // us to get a roughly populated scene with largest objects, setup; // the camera, and do first draw. We then do a; // TGLCamera::UpdateInterest() - which always return kTRUE, and; // thus fires an internal rebuild to fill scene properly and; // finally setup camera properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:686,Update,UpdateInterest,686,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['Update'],['UpdateInterest']
Deployability,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:647,update,updated,647,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,1,['update'],['updated']
Deployability,"// *TOGGLE*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TTask.h:4,TOGGLE,TOGGLE,4,core/base/inc/TTask.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TTask.h,19,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetBarHisto",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetBoxPlot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetCandleChart",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetCurveDisplay",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetDecimals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h:4,TOGGLE,TOGGLE,4,hist/hist/inc/TAxis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetEditable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph.h:4,TOGGLE,TOGGLE,4,hist/hist/inc/TGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetGlobalLogScale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetGlobalScale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetLogScale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetMoreLogLabels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h:4,TOGGLE,TOGGLE,4,hist/hist/inc/TAxis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetNoEdges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TEllipse.h:4,TOGGLE,TOGGLE,4,graf2d/graf/inc/TEllipse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TEllipse.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetNoExponent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h:4,TOGGLE,TOGGLE,4,hist/hist/inc/TAxis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetReapplyCut",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TEntryList.h:4,TOGGLE,TOGGLE,4,tree/tree/inc/TEntryList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TEntryList.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetRotateTitle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h:4,TOGGLE,TOGGLE,4,hist/hist/inc/TAxis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=GetVertDisplay",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,TOGGLE,TOGGLE,4,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsAllInvisible",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsGrayscale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TCanvas.h:4,TOGGLE,TOGGLE,4,graf2d/gpad/inc/TCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TCanvas.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsHighlight",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph.h:4,TOGGLE,TOGGLE,4,hist/hist/inc/TGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph.h,2,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsHorizontal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLine.h:4,TOGGLE,TOGGLE,4,graf2d/graf/inc/TLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLine.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsRaytracing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsTopVolume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsVertical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLine.h:4,TOGGLE,TOGGLE,4,graf2d/graf/inc/TLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLine.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsVisContainers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsVisLeaves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsVisOnly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsVisible",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// *TOGGLE* *GETTER=IsVisibleDaughters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h:4,TOGGLE,TOGGLE,4,geom/geom/inc/TGeoVolume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoVolume.h,1,['TOGGLE'],['TOGGLE']
Deployability,"// + load method cannot have availability attributes. It get called on; // startup, so it has to have the availability of the deployment target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:126,deploy,deployment,126,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['deploy'],['deployment']
Deployability,"// --- Update combos depending on isotope ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:7,Update,Update,7,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['Update']
Deployability,"// --- Update pointers if necessary ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbEndfIO.cxx:7,Update,Update,7,test/periodic/NdbEndfIO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbEndfIO.cxx,1,['Update'],['Update']
Deployability,"// --- Update several values for element ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:7,Update,Update,7,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['Update']
Deployability,"// --- Update the databases ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:7,Update,Update,7,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['Update']
Deployability,"// --- Update the isotopes ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:7,Update,Update,7,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['Update']
Deployability,"// --- Update the projectiles ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:7,Update,Update,7,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['Update']
Deployability,"// ------------ Update global (per histo) statistics",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:16,Update,Update,16,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,2,['Update'],['Update']
Deployability,"// ------------ Update local (per bin) statistics",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:16,Update,Update,16,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,2,['Update'],['Update']
Deployability,"// -----------------------------------------------------------------------------; // QuickLookGeneratorPluginRelease; // -----------------------------------------------------------------------------; // When an interface is released, decrement the refCount.; // If the refCount goes to zero, deallocate the instance.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:224,release,released,224,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,1,['release'],['released']
Deployability,"// -----------------------------------------------------------------------------; // SampleCMPluginRelease; // -----------------------------------------------------------------------------; // When an interface is released, decrement the refCount.; // If the refCount goes to zero, deallocate the instance.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:214,release,released,214,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['release'],['released']
Deployability,"// ----------------------------------------------------------------; // Updates / removals of logical and physical shapes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLScene.h:72,Update,Updates,72,graf3d/gl/inc/TGLScene.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLScene.h,1,['Update'],['Updates']
Deployability,"// --------------------------------; // ---Update the rest of combos ---; // --------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:43,Update,Update,43,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['Update']
Deployability,"// -fms-compatibility-version=19.33 is default, aka 2022, 17.3; // NOTE: when changing this value, also update; // clang/docs/CommandGuide/clang.rst and clang/docs/UsersManual.rst; // accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp:104,update,update,104,interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp,1,['update'],['update']
Deployability,"// -fobjc-dispatch-method is only relevant with the nonfragile-abi, and legacy; // is the default. Except for deployment target of 10.5, next runtime is; // always legacy dispatch and -fno-objc-legacy-dispatch gets ignored silently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:110,deploy,deployment,110,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['deploy'],['deployment']
Deployability,// ... then update it to refer to the field of the closure object; // that represents the capture.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:12,update,update,12,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['update'],['update']
Deployability,"// ...and integrate the infinite tails using the midpoint integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:10,integrat,integrate,10,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,2,['integrat'],"['integrate', 'integrator']"
Deployability,"// .begin:; // b .end # lis 0, FuncId[16..32]; // nop # li 0, FuncId[0..15]; // std 0, -8(1); // mflr 0; // bl __xray_FunctionEntry; // mtlr 0; // .end:; //; // Update compiler-rt/lib/xray/xray_powerpc64.cc accordingly when number; // of instructions change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:161,Update,Update,161,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['Update'],['Update']
Deployability,"// .comm Foo, 0 is undefined, avoid it.; // Use .lcomm only if it supports user-specified alignment.; // Otherwise, while it would still be correct to use .lcomm in some; // cases (e.g. when Align == 1), the external assembler might enfore; // some -unknown- default alignment behavior, which could cause; // spurious differences between external and integrated assembler.; // Prefer to simply fall back to .local / .comm in this case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:351,integrat,integrated,351,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['integrat'],['integrated']
Deployability,"// .p2align 3; // .begin:; // b(lr)? # lis 0, FuncId[16..32]; // nop # li 0, FuncId[0..15]; // std 0, -8(1); // mflr 0; // bl __xray_FunctionExit; // mtlr 0; // b(lr)?; //; // Update compiler-rt/lib/xray/xray_powerpc64.cc accordingly when number; // of instructions change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:176,Update,Update,176,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['Update'],['Update']
Deployability,"// /**; // evaluate the Integral of a function f over the infinite interval (-inf,+inf); // @param f integration function. The function type must be a C++ callable object implementing operator()(double x); // */; // template<class Function>; // double Integral(const Function & f);; /**; evaluate the Integral of a function f over the infinite interval (-inf,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:101,integrat,integration,101,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,['integrat'],['integration']
Deployability,"// /**; // evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b); // @param f integration function. The function type must be a C++ callable object implementing operator()(double x); // @param b upper value of the integration interval; // */; // template<class Function>; // double IntegralLow(Function & f, double b);; /**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:112,integrat,integration,112,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,['integrat'],['integration']
Deployability,"// /**; // evaluate the Integral of a function f over the semi-infinite interval (a,+inf); // @param f integration function. The function type must be a C++ callable object implementing operator()(double x); // @param a lower value of the integration interval; // */; // template<class Function>; // double IntegralUp(Function & f, double a);; /**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:103,integrat,integration,103,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,['integrat'],['integration']
Deployability,"// // @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetInfo *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * DESY Hamburg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h:209,integrat,integrated,209,tmva/tmva/inc/TMVA/DataSetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h,1,['integrat'],['integrated']
Deployability,"// // type of integration; // enum Type { NONADAPTIVE, ADAPTIVE, ADAPTIVESINGULAR } ;; /**; enumeration specifying the Gauss-KronRod integration rule for ADAPTIVE integration type; @ingroup Integration; */; // Gauss KronRod Adaptive rule",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h:14,integrat,integration,14,math/mathmore/inc/Math/IntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h,4,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,// /dev/null doesn't support seek/tell and can report offset of 0.; // Simply skip this patching in that case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp:88,patch,patching,88,interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp,1,['patch'],['patching']
Deployability,"// 0. Reuse the top-level region, vector-preheader and exit VPBBs from the; // skeleton. These were created directly rather than via getOrCreateVPBB(),; // revisit them now to update BB2VPBB. Note that header/entry and; // latch/exiting VPBB's of top-level region have yet to be created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.cpp:176,update,update,176,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.cpp,1,['update'],['update']
Deployability,"// 1-by-1 pivot block d(k): column k now holds w(k) = u(k)*d(k); // where u(k) is the k-th column of u; // perform a rank-1 update of a(0:k-1,0:k-1) as; // a := a - u(k)*d(k)*u(k)' = a - w(k)*1/d(k)*w(k)'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBK.cxx:124,update,update,124,math/matrix/src/TDecompBK.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBK.cxx,1,['update'],['update']
Deployability,// 16-bit instruction does partial flag update,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,1,['update'],['update']
Deployability,"// 1ULL << 49 is InaccessibleMemOnly, which is upgraded separately.; // 1ULL << 50 is InaccessibleMemOrArgMemOnly, which is upgraded separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:47,upgrade,upgraded,47,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,2,['upgrade'],['upgraded']
Deployability,"// 2-by-2 pivot block d(k): columns k and k-1 now hold; // ( w(k-1) w(k) ) = ( u(k-1) u(k) )*d(k); // where u(k) and u(k-1) are the k-th and (k-1)-th columns of u; // perform a rank-2 update of a(0:k-2,0:k-2) as; // a := a - ( u(k-1) u(k) )*d(k)*( u(k-1) u(k) )'; // = a - ( w(k-1) w(k) )*inv(d(k))*( w(k-1) w(k) )'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBK.cxx:184,update,update,184,math/matrix/src/TDecompBK.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBK.cxx,1,['update'],['update']
Deployability,// 2. Update inputs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:6,Update,Update,6,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['Update'],['Update']
Deployability,// 2. Update the type of the uses.; // b = ToBePromoted ty2 Def => b = ToBePromoted ty1 Def.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:6,Update,Update,6,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['Update'],['Update']
Deployability,"// 2D graphs are named objects in a THashList.; // We must update the hashlist if we change the name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:59,update,update,59,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,2,['update'],['update']
Deployability,// 3. Update all the operands of the promoted operation with promoted; // operands.; // b = ToBePromoted ty1 Def => b = ToBePromoted ty1 a.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:6,Update,Update,6,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['Update'],['Update']
Deployability,"// 4) Find base register updates that can be merged into the load or store; // as a base-reg writeback.; // e.g.,; // ldr x0, [x2]; // add x2, x2, #4; // ; becomes; // ldr x0, [x2], #4",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:25,update,updates,25,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['updates']
Deployability,// 4. Update disequality relations,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:6,Update,Update,6,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,1,['Update'],['Update']
Deployability,// 4. Update the state with new maps.; //; // Here we try to be humble and update a map only if it really changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:6,Update,Update,6,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,// 5. Update the state,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:6,Update,Update,6,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,1,['Update'],['Update']
Deployability,// <install>/bin,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:4,install,install,4,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['install'],['install']
Deployability,// <install>/bin/../include/c++/v1,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ZOS.cpp:4,install,install,4,interpreter/llvm-project/clang/lib/Driver/ToolChains/ZOS.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ZOS.cpp,1,['install'],['install']
Deployability,"// <vscale x 1 x iN> is assumed to be profitable over iN because; // scalable registers are a distinct register class from scalar ones.; // If we ever find a target which wants to lower scalable vectors; // back to scalars, we'll need to update this code to explicitly; // ask TTI about the register class uses for each part.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:238,update,update,238,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,// ===================================; // Release (AOT) - specifics; // ===================================,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp:43,Release,Release,43,interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,2,['Release'],['Release']
Deployability,"// ??? Can i just move this to the top and escape this explanation?; // When we have both sret and another return value, we should use the; // original Chain stored in RetOps[0], instead of the current Chain updated; // in the above loop. If we only have sret, RetOps[0] equals to Chain.; // For the case of sret and another return value, we have; // Chain_0 at the function entry; // Chain_1 = getCopyToReg(Chain_0) in the above loop; // If we use Chain_1 in getCopyFromReg, we will have; // Val = getCopyFromReg(Chain_1); // Chain_2 = getCopyToReg(Chain_1, Val) from below; // getCopyToReg(Chain_0) will be glued together with; // getCopyToReg(Chain_1, Val) into Unit A, getCopyFromReg(Chain_1) will be; // in Unit B, and we will have cyclic dependency between Unit A and Unit B:; // Data dependency from Unit B to Unit A due to usage of Val in; // getCopyToReg(Chain_1, Val); // Chain dependency from Unit A to Unit B; // So here, we use RetOps[0] (i.e Chain_0) for getCopyFromReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:208,update,updated,208,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,1,['update'],['updated']
Deployability,"// @(#):$Id$; // Author: Andrei Gheata 01/03/11; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoBranchArray; \ingroup Geometry_classes. An array of daughter indices making a geometry path. Can be used to; backup/restore a state. Allocated contiguously in memory. To setup an object of this type, one should use:. ~~~ {.cpp}; TGeoBranchArray *array = new TGeoBranchArray(level);; array->InitFromNavigator(nav); // To initialize from current navigator state; ~~~. The navigator can be updated to reflect this path array: `array->UpdateNavigator();`; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:809,update,updated,809,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,2,"['Update', 'update']","['UpdateNavigator', 'updated']"
Deployability,"// @(#)Root/tmva $Id$ ; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss ; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * This template creates ClassifierFactory stores creator functors *; * to template parameter class. ClassifierFactory is a singelton class *; * which is explicitly deleted. *; * *; * Authors (alphabetical): *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008: *; * DESY, Germany * ; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassifierFactory.h:200,integrat,integrated,200,tmva/tmva/inc/TMVA/ClassifierFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassifierFactory.h,1,['integrat'],['integrated']
Deployability,"// @(#)Root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008: *; * DESY, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ClassifierFactory; \ingroup TMVA; This is the MVA factory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassifierFactory.cxx:198,integrat,integrated,198,tmva/tmva/src/ClassifierFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassifierFactory.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)Root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; // Updated by: Omar Zapata, Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors : *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Factory; \ingroup TMVA. This is the main MVA steering class.; It creates all MVA methods, and guides them through the training, testing and; evaluation phases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:143,Update,Updated,143,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,2,"['Update', 'integrat']","['Updated', 'integrated']"
Deployability,"// @(#)Root/tmva $Id$; // Author: Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVAGUI *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors : *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2005-2017: *; * CERN, Switzerland *; * LTU, Sweden *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx:160,integrat,integrated,160,tmva/tmvagui/src/efficienciesMulticlass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/base:$Id$; // Author: Anna Kreshuk 10/04/2006; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:596,install,installed,596,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,2,['install'],"['installation', 'installed']"
Deployability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStorage; \ingroup Base. Storage manager. The storage manager works best in conjunction with; the custom ROOT new and delete operators defined in the file; NewDelete.cxx (libNew.so). Only when using the custom allocation; operators will memory usage statistics be gathered using the; TStorage EnterStat(), RemoveStat(), etc. functions.; Memory checking is by default enabled (when using libNew.so) and; usage statistics is gathered. Using the resource (in .rootrc):; Root.MemStat one can toggle statistics gathering on or off. More; specifically on can trap the allocation of a block of memory of a; certain size. This can be specified using the resource:; Root.MemStat.size, using the resource Root.MemStat.cnt one can; specify after how many allocations of this size the trap should; occur. Set the compile option R__NOSTATS to de-activate all memory checking; and statistics gathering in the system.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:917,toggle,toggle,917,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,1,['toggle'],['toggle']
Deployability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMD5; \ingroup Base. This code implements the MD5 message-digest algorithm.; The algorithm is due to Ron Rivest. This code was; written by Colin Plumb in 1993, no copyright is claimed.; This code is in the public domain; do with it what you wish. Equivalent code is available from RSA Data Security, Inc.; This code has been tested against that, and is equivalent,; except that you don't need to include two pages of legalese; with every copy. To compute the message digest of a chunk of bytes, create an; TMD5 object, call Update() as needed on buffers full of bytes, and; then call Final(), which will, optionally, fill a supplied 16-byte; array with the digest.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:954,Update,Update,954,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['Update'],['Update']
Deployability,"// @(#)root/base:$Id$; // Author: Rene Brun 11/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMessageHandler. \ingroup Base; Handle messages that might be generated by the system.; By default a handler only keeps track of the different messages; generated for a specific class. By deriving from this class and; overriding Notify() one can implement custom message handling.; In Notify() one has access to the message id and the object; generating the message. One can install more than one message; handler per class. A message handler can be removed or again; added when needed. - All Root ""Warnings"" are logged as message 1001; - All Root ""Errors"" are logged as message 1002; - All Root ""SysErrors"" are logged as message 1003; - All Root ""Fatals"" are logged as message 1004; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:798,install,install,798,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,1,['install'],['install']
Deployability,"// @(#)root/base:$Id$; // Author: Rene Brun 16/08/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMacro; \ingroup Base. Class supporting a collection of lines with C++ code.; A TMacro can be executed, saved to a ROOT file, edited, etc. A macro can be built line by line by calling the AddLine function.; or it can be created directly from a file via the special constructor; when the first argument is a file name. A macro can be executed via the Exec function.; Arguments can be specified when calling Exec. A macro can be drawn in a pad. When the pad is updated, the macro is; automatically executed. The code in the macro can be saved via the SaveSource function.; If the macro is in the list of primitives of a pad/canvas, the macro; will be saved in the script generated by TCanvas::SaveSource. A macro can be written to a ROOT file via TObject::Write. Examples:; ~~~ {.cpp}; TMacro m(""Peaks.C""); //macro m with name ""Peaks"" is created; //from file Peaks.C; m.Exec(); //macro executed with default arguments; m.Exec(""4""); //macro executed with argument; m.SaveSource(""newPeaks.C"");; TFile f(""mymacros.root"",""recreate"");; m.Write(); //macro saved to file with name ""Peaks""; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx:884,update,updated,884,core/base/src/TMacro.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx,1,['update'],['updated']
Deployability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 11/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObjectTable; \ingroup Containers; This class registers all instances of TObject and its derived; classes in a hash table. The Add() and Remove() members are called; from the TObject ctor and dtor, respectively. Using the Print(); member one can see all currently active objects in the system.; Using the resource (in .rootrc): Root.ObjectStat one can toggle this; feature on or off. Using the compile option R__NOSTATS one can de-active this feature; for the entire system (for maximum performance in highly time; critical applications). The following output has been produced in a ROOT interactive session; via the command gObjectTable->Print(); ~~~ {.cpp}; class cnt on heap size total size heap size; ============================================================================; TKey 4 4 72 288 288; TClass 84 84 80 6720 6720; TDataMember 276 276 24 6624 6624; TObject 11 11 12 132 132; TMethod 1974 1974 64 126336 126336; TDataType 34 34 56 1904 1904; TList 2328 2328 36 83808 83808; TH1F 1 1 448 448 448; TText 2688 2688 56 150528 150528; TGaxis 1 0 120 120 0; TAxis 6 3 88 528 264; TBox 57 57 52 2964 2964; TLine 118 118 40 4720 4720; TWbox 1 1 56 56 56; TArrow 1 1 64 64 64; TPaveText 59 59 124 7316 7316; TPave 1 1 92 92 92; TFile 1 1 136 136 136; TCanvas 3 3 444 1332 1332; TPad 1 1 312 312 312; TContextMenu 3 3 48 144 144; TMethodArg 2166 2166 44 95304 95304; TPaveLabel 1 1 120 120 120; THtml 1 1 32 32 32; TROOT 1 0 208 208 0; TApplication 1 1 28 28 28; TFileHandler 1 1 20 20 20; TColor 163 163 40 6520 6520; TStyle 1 1 364 364 364; TRealData 117 117 28 327",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx:781,toggle,toggle,781,core/cont/src/TObjectTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjectTable.cxx,1,['toggle'],['toggle']
Deployability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:1324,release,release,1324,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,1,['release'],['release']
Deployability,"// @(#)root/foam:$Id$; // Author: S. Jadach <mailto:Stanislaw.jadach@ifj.edu.pl>, P.Sawicki <mailto:Pawel.Sawicki@ifj.edu.pl>; /** \class TFoam. TFoam is the main class of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM. ### FOAM Version 1.02M. \authors; S. Jadach and P.Sawicki; Institute of Nuclear Physics, Cracow, Poland; Stanislaw. Jadach@ifj.edu.pl, Pawel.Sawicki@ifj.edu.pl. ### What is FOAM for?. - Suppose you want to generate randomly points (vectors) according to; an arbitrary probability distribution in n dimensions,; for which you supply your own method. FOAM can do it for you!; Even if your distributions has quite strong peaks and is discontinuous!; - FOAM generates random points with weight one or with variable weight.; - FOAM is capable to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:240,integrat,integrator,240,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,3,['integrat'],"['integrate', 'integrator']"
Deployability,"// @(#)root/graf:$Id$; // Author: Sebastian Boser, Mathieu Demaret 02/02/06; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGraphPolar; \ingroup BasicGraphics. To draw a polar graph. TGraphPolar creates a polar graph (including error bars). A TGraphPolar is; a TGraphErrors represented in polar coordinates.; It uses the class TGraphPolargram to draw the polar axis. Example:. Begin_Macro(source); {; TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Example"",500,500);. Double_t theta[8];; Double_t radius[8];; Double_t etheta[8];; Double_t eradius[8];. for (int i=0; i<8; i++) {; theta[i] = (i+1)*(TMath::Pi()/4.);; radius[i] = (i+1)*0.05;; etheta[i] = TMath::Pi()/8.;; eradius[i] = 0.05;; }. TGraphPolar * grP1 = new TGraphPolar(8, theta, radius, etheta, eradius);; grP1->SetTitle(""TGraphPolar Example"");. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(2.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(2);; grP1->SetLineWidth(3);; grP1->Draw(""PE"");. // Update, otherwise GetPolargram returns 0; CPol->Update();; grP1->GetPolargram()->SetToRadian();. return CPol;; }; End_Macro; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolar.cxx:1280,Update,Update,1280,graf2d/graf/src/TGraphPolar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolar.cxx,2,['Update'],['Update']
Deployability,"// @(#)root/gui:$Id$; // Author: G. Ganis 10/10/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGRedirectOutputGuard; \ingroup guiwidgets. This class provides output redirection to a TGTextView in guaranteed; exception safe way. Use like this:. ```; {; TGRedirectOutputGuard guard(textview);; ... // do something; guard.Update();; ... // do something else; }; ```. when guard goes out of scope, Update() is called to flush what left; on the screed and the output is automatically redirected again to; the standard units.; The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; Optionally the output can also be saved into a file:. ```; {; TGRedirectOutputGuard guard(textview, file, mode);; ... // do something; }; ```. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGRedirectOutputGuard.cxx:648,Update,Update,648,gui/gui/src/TGRedirectOutputGuard.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGRedirectOutputGuard.cxx,2,['Update'],['Update']
Deployability,"// @(#)root/gui:$Id$; // Author: Valeriy Onuchin & Fons Rademakers 16/10/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGButtonGroup; \ingroup guiwidgets. Organizes TGButton widgets in a group.; A button group widget makes it easier to deal with groups of buttons.; A button in a button group is associated with a unique identifier.; The button group emits a Clicked() signal with this identifier when; the button is clicked. Thus, a button group is an ideal solution; when you have several similar buttons and want to connect all their; Clicked() signals, for example, to one slot. An exclusive button group switches off all toggle buttons except; the one that was clicked. A button group is by default non-exclusive.; All radio buttons that are inserted, will be mutually exclusive even; if the button group is non-exclusive. There are two ways of using a button group:. The button group is a parent widget of a number of buttons,; i.e. the button group is the parent argument in the button; constructor. The buttons are assigned identifiers 1, 2, 3 etc.; in the order they are created or you can specify button id in; the button constructor. A TGButtonGroup can display a frame and; a title because it inherits from TGGroupFrame. Example:. ```; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);. // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");. // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");. // map all buttons; bg->Show();; ```. NOTE: there is no need to call AddFrame() since the buttons are; automatically added with a d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:955,toggle,toggle,955,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,1,['toggle'],['toggle']
Deployability,"// @(#)root/hist:$Id$; // Author: Lorenzo Moneta; /*************************************************************************; * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class TBackCompFitter; \ingroup Hist; \brief Backward compatible implementation of TVirtualFitter. Backward compatible implementation of TVirtualFitter using the; class ROOT::Fit::Fitter. This class is created after fitting an; histogram (TH1), TGraph or TTree and provides in addition to the; methods of the TVirtualFitter hooks to access the fit result class; (ROOT::Fit::FitResult), the fit configuration; (ROOT::Fit::FitConfig) or the fit data (ROOT::Fit::FitData) using. ~~~~~~~~{.cpp}; TBackCompFitter * fitter = (TBackCompFitter *) TVirtualFitter::GetFitter();; ROOT::Fit::FitResult & result = fitter->GetFitResult();; result.Print(std::cout);; ~~~~~~~~. Methods for getting the confidence level or contours are also; provided. Note that after a new calls to TH1::Fit (or similar) the; class will be deleted and all reference to the FitResult, FitConfig; or minimizer will be invalid. One could eventually copying the; class before issuing a new fit to avoid deleting this information.; */; //////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:889,configurat,configuration,889,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['configurat'],['configuration']
Deployability,"// @(#)root/io:$Id$; // Author: Jan Fiete Grosse-Oetringhaus, 04.06.07; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TLockFile; \ingroup IO. A scoped lock based on files. The RAAI idiom is used: the constructor blocks until lock is obtained.; Lock is released in the destructor.; Use it in scope-blocks like:; ~~~{.cpp}; {; TLockFile lock(""path.to.lock.file"");; // do something you need the lock for; } // lock is automatically released; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TLockFile.cxx:576,release,released,576,io/io/src/TLockFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TLockFile.cxx,2,['release'],['released']
Deployability,"// @(#)root/mathcore:$Id$; // Author: L. Moneta Nov 2010; /**********************************************************************; * *; * Copyright (c) 2010 LCG ROOT Math Team, CERN/PH-SFT *; * *; * *; **********************************************************************/; // helper class for binomial Neyman intervals; // author Jordan Tucker; // integration in CMSSW: Luca Lista; // modified and integrated in ROOT: Lorenzo Moneta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiencyHelper.h:350,integrat,integration,350,hist/hist/src/TEfficiencyHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiencyHelper.h,2,['integrat'],"['integrated', 'integration']"
Deployability,"// @(#)root/mathcore:$Id$; // Authors: Andras Zsenei & Lorenzo Moneta 06/2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; /**. Probability density functions, cumulative distribution functions; and their inverses (quantiles) for various statistical distributions (continuous and discrete).; Whenever possible the conventions followed are those of the; CRC Concise Encyclopedia of Mathematics, Second Edition; (or <A HREF=""http://mathworld.wolfram.com/"">Mathworld</A>).; By convention the distributions are centered around 0, so for; example in the case of a Gaussian there is no parameter mu. The; user must calculate the shift themselves if they wish. MathCore provides the majority of the probability density functions, of the; cumulative distributions and of the quantiles (inverses of the cumulatives).; Additional distributions are also provided by the; <A HREF=""../../MathMore/html/group__StatFunc.html"">MathMore</A> library. @defgroup StatFunc Statistical functions. @ingroup MathCore; @ingroup MathMore. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h:429,continuous,continuous,429,math/mathcore/inc/Math/PdfFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h,1,['continuous'],['continuous']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: J. Palacios, L. Moneta 2007; /**********************************************************************; * *; * Copyright (c) 2007 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class Rotation in 3 dimensions, described by 3 Z-Y-X Euler angles; // representing a rotation along Z, Y and X; //; // Created by: Lorenzo Moneta, Wed. May 22, 2007; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/RotationZYX.h:474,update,update,474,math/genvector/inc/Math/GenVector/RotationZYX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/RotationZYX.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: L. Moneta 12/2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class LorentzVector; //; // Created by: moneta at Fri Dec 02 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Plane3D.h:365,update,update,365,math/genvector/inc/Math/GenVector/Plane3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Plane3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: M. Slawinska 08/2007; /**********************************************************************; * *; * Copyright (c) 2007 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header source file for class IntegratorMultiDim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:302,Integrat,IntegratorMultiDim,302,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['Integrat'],['IntegratorMultiDim']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG / FNAL ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class LorentzVector; //; // Created by: fischler at Mon Jun 25 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BitReproducible.h:394,update,update,394,math/genvector/inc/Math/GenVector/BitReproducible.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BitReproducible.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class PtEtaPhiE4D; //; // Created by: fischler at Wed Jul 20 2005; // based on CylindricalEta4D by moneta; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PtEtaPhiE4D.h:430,update,update,430,math/genvector/inc/Math/GenVector/PtEtaPhiE4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PtEtaPhiE4D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class PtEtaPhiM4D; //; // Created by: fischler at Wed Jul 21 2005; // Similar to PtEtaPhiMSystem by moneta; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PtEtaPhiM4D.h:431,update,update,431,math/genvector/inc/Math/GenVector/PtEtaPhiM4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PtEtaPhiM4D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class Rotation in 3 dimensions, represented by 3x3 matrix; //; // Created by: Mark Fischler Thurs June 9 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Rotation3D.h:434,update,update,434,math/genvector/inc/Math/GenVector/Rotation3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Rotation3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class RotationY representing a rotation about the Y axis; //; // Created by: Mark Fischler Mon July 18 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/RotationY.h:432,update,update,432,math/genvector/inc/Math/GenVector/RotationY.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/RotationY.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class RotationZ representing a rotation about the Z axis; //; // Created by: Mark Fischler Mon July 18 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/RotationX.h:432,update,update,432,math/genvector/inc/Math/GenVector/RotationX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/RotationX.h,2,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for rotation in 3 dimensions, represented by a quaternion; // Created by: Mark Fischler Thurs June 9 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Quaternion.h:426,update,update,426,math/genvector/inc/Math/GenVector/Quaternion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Quaternion.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Implementation file for quaternion times other non-axial rotations.; // Decoupled from main Quaternion implementations.; //; // Created by: Mark Fischler Tues July 19, 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/QuaternionXaxial.cxx:481,update,update,481,math/genvector/src/QuaternionXaxial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/QuaternionXaxial.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Implementation file for rotation in 3 dimensions, represented by EulerAngles; //; // Created by: Mark Fischler Thurs June 9 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/EulerAngles.cxx:437,update,update,437,math/genvector/src/EulerAngles.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/EulerAngles.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Implementation file for rotation in 3 dimensions, represented by RotationZYX; //; // Created by: Lorenzo Moneta, May 23 2007; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/RotationZYX.cxx:433,update,update,433,math/genvector/src/RotationZYX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/RotationZYX.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Implementation file for rotation in 3 dimensions, represented by quaternion; //; // Created by: Mark Fischler Thurs June 9 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/Quaternion.cxx:436,update,update,436,math/genvector/src/Quaternion.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/Quaternion.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team (FNAL component) *; * *; * *; **********************************************************************/; // Support templates (class and function) for stream i/o of vectors; // This is a utuility to allow for control, via manipulators, of the; // form of; //; // Created by: W. E. Brown and M. Fischler at Tue Jun 21 2005; //; // Last update: Tue Jun 21 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/GenVectorIO.h:534,update,update,534,math/genvector/inc/Math/GenVector/GenVectorIO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/GenVectorIO.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file Point3Dfwd; //; // Created by: Lorenzo Moneta at Mon May 30 18:12:14 2005; //; // Last update: Mon May 30 18:12:14 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/Point3Dfwd.h:389,update,update,389,math/genvector/inc/Math/Point3Dfwd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/Point3Dfwd.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file Vector3Dfwd; //; // Created by: Lorenzo Moneta at Mon May 30 18:08:35 2005; //; // Last update: Mon May 30 18:08:35 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/Vector3Dfwd.h:390,update,update,390,math/genvector/inc/Math/Vector3Dfwd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/Vector3Dfwd.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class AxisAngle; //; // Created by: Lorenzo Moneta at Wed May 11 10:37:10 2005; //; // Last update: Wed May 11 10:37:10 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/AxisAngle.h:398,update,update,398,math/genvector/inc/Math/GenVector/AxisAngle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/AxisAngle.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class EulerAngles; //; // Created by: Lorenzo Moneta at Tue May 10 17:55:10 2005; //; // Last update: Tue May 10 17:55:10 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/EulerAngles.h:400,update,update,400,math/genvector/inc/Math/GenVector/EulerAngles.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/EulerAngles.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class LorentzVector; //; // Created by: moneta at Tue May 31 17:06:09 2005; // Major mods by: fischler at Wed Jul 20 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzVector.h:441,update,update,441,math/genvector/inc/Math/GenVector/LorentzVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzVector.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class LorentzVectorfwd; //; // Created by: moneta at Tue May 31 21:06:43 2005; //; // Last update: Tue May 31 21:06:43 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/Vector4Dfwd.h:397,update,update,397,math/genvector/inc/Math/Vector4Dfwd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/Vector4Dfwd.h,2,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class PositionVector3D; //; // Created by: Lorenzo Moneta at Mon May 30 15:25:04 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PositionVector3D.h:405,update,update,405,math/genvector/inc/Math/GenVector/PositionVector3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PositionVector3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team and *; * FNAL LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class CylindricalEta3D; //; // Created by: Lorenzo Moneta at Mon May 30 11:58:46 2005; // Major revamp: M. Fischler at Fri Jun 10 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/CylindricalEta3D.h:490,update,update,490,math/genvector/inc/Math/GenVector/CylindricalEta3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/CylindricalEta3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team and *; * FNAL LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class Polar2D; //; // Created by: Lorenzo Moneta at Mon May 30 11:40:03 2005; // Major revamp: M. Fischler at Wed Jun 8 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Polar2D.h:480,update,update,480,math/genvector/inc/Math/GenVector/Polar2D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Polar2D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team and *; * FNAL LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class Polar3D; //; // Created by: Lorenzo Moneta at Mon May 30 11:40:03 2005; // Major revamp: M. Fischler at Wed Jun 8 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Polar3D.h:480,update,update,480,math/genvector/inc/Math/GenVector/Polar3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Polar3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team and *; * FNAL LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header source file for class DisplacementVector3D; //; // Created by: Lorenzo Moneta at Mon May 30 12:21:43 2005; // Major rewrite: M. FIschler at Wed Jun 8 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/DisplacementVector3D.h:501,update,update,501,math/genvector/inc/Math/GenVector/DisplacementVector3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/DisplacementVector3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 ROOT CERN / FNAL MATHLIB Group *; * *; * *; **********************************************************************/; // Header file defining forward declarations for LorentzVector classes; //; // Created by: Lorenzo Moneta at Thu May 12 11:19:02 2005; // Major revamp by: M. Fischler at Tue Aug 9 2005; //; // Last update: Tue Aug 9 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzRotationfwd.h:492,update,update,492,math/genvector/inc/Math/GenVector/LorentzRotationfwd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzRotationfwd.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for Boost; //; // Created by: Mark Fischler Mon Nov 1 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Boost.h:373,update,update,373,math/genvector/inc/Math/GenVector/Boost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Boost.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for BoostX; //; // Created by: Mark Fischler Mon Nov 1 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BoostX.h:374,update,update,374,math/genvector/inc/Math/GenVector/BoostX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BoostX.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for BoostY; //; // Created by: Mark Fischler Mon Nov 1 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BoostY.h:374,update,update,374,math/genvector/inc/Math/GenVector/BoostY.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BoostY.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for BoostZ; //; // Created by: Mark Fischler Mon Nov 1 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BoostZ.h:374,update,update,374,math/genvector/inc/Math/GenVector/BoostZ.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/BoostZ.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for LorentzRotation; //; // Created by: Mark Fischler Mon Aug 8 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzRotation.h:378,update,update,378,math/genvector/inc/Math/GenVector/LorentzRotation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzRotation.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005, LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class Rotation in 3 dimensions, represented by 3x3 matrix; //; // Created by: Mark Fischler and Walter Brown Thurs July 7, 2005; //; // Last update: Wed Thurs July 7, 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/3DConversions.h:451,update,update,451,math/genvector/inc/Math/GenVector/3DConversions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/3DConversions.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005, LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Header file for class implementations of Distance() functions among; // Rotations in 3 dimensions; //; // Created by: Mark Fischler and Walter Brown Thurs July 7, 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/3DDistances.h:475,update,update,475,math/genvector/inc/Math/GenVector/3DDistances.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/3DDistances.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005, LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Source file for something else; //; // Created by: Mark Fischler Thurs July 7, 2005; //; // Last update: Wed Thurs July 7, 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DDistances.cxx:391,update,update,391,math/genvector/src/3DDistances.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DDistances.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005, LCG ROOT FNAL MathLib Team *; * *; * *; **********************************************************************/; // Source file for something else; //; // Created by: Mark Fischler and Walter Brown Thurs July 7, 2005; //; // Last update: $Id$; //; // TODO - For now, all conversions are grouped in this one compilation unit.; // The intention is to seraparte them into a few .cpp files instead,; // so that users needing one form need not incorporate code for them all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DConversions.cxx:408,update,update,408,math/genvector/src/3DConversions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DConversions.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id: 04c6d98020d7178ed5f0884f9466bca32b031565 $; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class PxPyPzE4D; //; // Created by: fischler at Wed Jul 20 2005; // (starting from PxPyPzE4D by moneta); //; // Last update: $Id: 04c6d98020d7178ed5f0884f9466bca32b031565 $; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzE4D.h:466,update,update,466,math/genvector/inc/Math/GenVector/PxPyPzE4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzE4D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id: 2fd203872f434b1e4e74933903abb3429494ea6f $; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * & FNAL LCG ROOT Mathlib Team *; * *; * *; **********************************************************************/; // Header file for class Cartesian3D; //; // Created by: Lorenzo Moneta at Mon May 30 11:16:56 2005; // Major revamp: M. FIschler at Wed Jun 8 2005; //; // Last update: $ID: $; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Cartesian3D.h:525,update,update,525,math/genvector/inc/Math/GenVector/Cartesian3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Cartesian3D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id: 464c29f33a8bbd8462a3e15b7e4c30c6f5b74a30 $; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for class PxPyPzM4D; //; // Created by: fischler at Wed Jul 20 2005; // (starting from PxPyPzM4D by moneta); //; // Last update: $Id: 464c29f33a8bbd8462a3e15b7e4c30c6f5b74a30 $; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzM4D.h:466,update,update,466,math/genvector/inc/Math/GenVector/PxPyPzM4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzM4D.h,1,['update'],['update']
Deployability,"// @(#)root/mathcore:$Id: 9ef2a4a7bd1b62c1293920c2af2f64791c75bdd8 $; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for Vector Utility functions; //; // Created by: moneta at Tue May 31 21:10:29 2005; //; // Last update: Tue May 31 21:10:29 2005; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/VectorUtil.h:442,update,update,442,math/genvector/inc/Math/GenVector/VectorUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/VectorUtil.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Author: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for GSL ROOT Finder Algorithms; //; // Created by: moneta at Sun Nov 14 14:07:50 2004; //; // Last update: Sun Nov 14 14:07:50 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/RootFinderAlgorithms.h:1180,update,update,1180,math/mathmore/inc/Math/RootFinderAlgorithms.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/RootFinderAlgorithms.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Author: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLQuasiRandom; //; // Created by: moneta at Sun Nov 21 16:26:03 2004; //; // Last update: Sun Nov 21 16:26:03 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLQuasiRandom.h:1174,update,update,1174,math/mathmore/inc/Math/GSLQuasiRandom.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLQuasiRandom.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Author: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRandom; //; // Created by: moneta at Sun Nov 21 16:26:03 2004; //; // Last update: Sun Nov 21 16:26:03 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h:1169,update,update,1169,math/mathmore/inc/Math/GSLRndmEngines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h,2,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Author: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRootFinder; //; // Created by: moneta at Sun Nov 14 11:27:11 2004; //; // Last update: Sun Nov 14 11:27:11 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRootFinder.h:1173,update,update,1173,math/mathmore/inc/Math/GSLRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRootFinder.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Author: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 moneta, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMinimizer1D; //; // Created by: moneta at Wed Dec 1 15:04:51 2004; //; // Last update: Wed Dec 1 15:04:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h:1164,update,update,1164,math/mathmore/inc/Math/GSLMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer1D.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Author: Magdalena Slawinska 10/2007; /**********************************************************************; * *; * Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; * *; * *; **********************************************************************/; // Integration types for; // one and multidimensional integration; // with a common interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:284,Integrat,Integration,284,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,2,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class Vavilov; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h:1156,update,update,1156,math/mathmore/inc/Math/Vavilov.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class VavilovAccurate; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:1164,update,update,1164,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class VavilovAccurateCdf; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurateCdf.h:1167,update,update,1167,math/mathmore/inc/Math/VavilovAccurateCdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurateCdf.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class VavilovAccuratePdf; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccuratePdf.h:1167,update,update,1167,math/mathmore/inc/Math/VavilovAccuratePdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccuratePdf.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class VavilovAccurateQuantile; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurateQuantile.h:1172,update,update,1172,math/mathmore/inc/Math/VavilovAccurateQuantile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurateQuantile.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class VavilovFast; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h:1160,update,update,1160,math/mathmore/inc/Math/VavilovFast.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class VavilovTest; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h:1160,update,update,1160,math/mathmore/test/VavilovTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class Vavilov; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Vavilov.cxx:1164,update,update,1164,math/mathmore/src/Vavilov.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Vavilov.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class VavilovAccurate; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccurate.cxx:1172,update,update,1172,math/mathmore/src/VavilovAccurate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccurate.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class VavilovAccurateCdf; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccurateCdf.cxx:1175,update,update,1175,math/mathmore/src/VavilovAccurateCdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccurateCdf.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class VavilovAccuratePdf; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccuratePdf.cxx:1175,update,update,1175,math/mathmore/src/VavilovAccuratePdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccuratePdf.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class VavilovAccurateQuantile; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccurateQuantile.cxx:1180,update,update,1180,math/mathmore/src/VavilovAccurateQuantile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovAccurateQuantile.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class VavilovFast; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovFast.cxx:1168,update,update,1168,math/mathmore/src/VavilovFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/VavilovFast.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: B. List 29.4.2010; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class VavilovTest; //; // Created by: blist at Thu Apr 29 11:19:00 2010; //; // Last update: Thu Apr 29 11:19:00 2010; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.cxx:1168,update,update,1168,math/mathmore/test/VavilovTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta Dec 2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionWrapper; //; // Created by: moneta at Sat Nov 13 14:54:41 2004; //; // Last update: Sat Nov 13 14:54:41 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionWrapper.h:1177,update,update,1177,math/mathmore/src/GSLMultiFitFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionWrapper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta Dec 2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiRootFunctionWrapper; //; // Created by: moneta at Sat Nov 13 14:54:41 2004; //; // Last update: Sat Nov 13 14:54:41 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionWrapper.h:1178,update,update,1178,math/mathmore/src/GSLMultiRootFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionWrapper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 08/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMonteFunctionWrapper; //; // Created by: moneta at Sat Nov 13 14:54:41 2004; //; // Last update: Sat Nov 13 14:54:41 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionWrapper.h:1174,update,update,1174,math/mathmore/src/GSLMonteFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionWrapper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 08/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:1300,update,update,1300,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 12/2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h:1300,update,update,1300,math/mathmore/src/GSLMultiMinFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 12/2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionWrapper; //; // Created by: moneta at Sat Nov 13 14:54:41 2004; //; // Last update: Sat Nov 13 14:54:41 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionWrapper.h:1177,update,update,1177,math/mathmore/src/GSLMultiMinFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionWrapper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 CERN *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; * *; **********************************************************************/; // Header file for class RootFinder; //; // Created by: moneta at Sun Nov 14 16:59:55 2004; //; // Last update: Sun Nov 14 16:59:55 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:503,update,update,503,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class ChebyshevApprox; //; // Created by: moneta at Thu Dec 2 14:51:15 2004; //; // Last update: Thu Dec 2 14:51:15 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h:1175,update,update,1175,math/mathmore/inc/Math/ChebyshevApprox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class Derivator; //; // class for calculating Derivative of functions; //; // Created by: moneta at Sat Nov 13 14:46:00 2004; //; // Last update: Sat Nov 13 14:46:00 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:1224,update,update,1224,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLChebSeries; //; // Created by: moneta at Thu Dec 2 16:50:07 2004; //; // Last update: Thu Dec 2 16:50:07 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLChebSeries.h:1173,update,update,1173,math/mathmore/src/GSLChebSeries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLChebSeries.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLFunctionAdapter; //; // Generic adapter for gsl_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h:1293,update,update,1293,math/mathmore/inc/Math/GSLFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLFunctionWrapper; //; // Created by: moneta at Sat Nov 13 14:54:41 2004; //; // Last update: Sat Nov 13 14:54:41 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h:1179,update,update,1179,math/mathmore/src/GSLFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLIntegrator; //; // Created by: Lorenzo Moneta at Thu Nov 11 14:22:32 2004; //; // Last update: Thu Nov 11 14:22:32 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:1182,update,update,1182,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLIntegratorWorkspace; //; // Created by: moneta at Sat Nov 13 14:55:27 2004; //; // Last update: Sat Nov 13 14:55:27 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLIntegrationWorkspace.h:1183,update,update,1183,math/mathmore/src/GSLIntegrationWorkspace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLIntegrationWorkspace.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLInterpolator; //; // Created by: moneta at Fri Nov 26 15:31:41 2004; //; // Last update: Fri Nov 26 15:31:41 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLInterpolator.h:1176,update,update,1176,math/mathmore/src/GSLInterpolator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLInterpolator.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRandom; //; // Created by: moneta at Sun Nov 21 16:26:03 2004; //; // Last update: Sun Nov 21 16:26:03 2004; //; // need to be included later",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRndmEngines.cxx:1170,update,update,1170,math/mathmore/src/GSLRndmEngines.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRndmEngines.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRootFSolver; //; // Created by: moneta at Sun Nov 14 17:23:06 2004; //; // Last update: Sun Nov 14 17:23:06 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFSolver.h:1175,update,update,1175,math/mathmore/src/GSLRootFSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFSolver.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRootFdFSolver; //; // Created by: moneta at Sun Nov 14 17:23:06 2004; //; // Last update: Sun Nov 14 17:23:06 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFdFSolver.h:1177,update,update,1177,math/mathmore/src/GSLRootFdFSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFdFSolver.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRootFinderDeriv; //; // Created by: moneta at Sun Nov 21 16:26:03 2004; //; // Last update: Sun Nov 21 16:26:03 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRootFinderDeriv.h:1179,update,update,1179,math/mathmore/inc/Math/GSLRootFinderDeriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRootFinderDeriv.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLRootHelper; //; // Created by: moneta at Sun Nov 14 21:34:15 2004; //; // Last update: Sun Nov 14 21:34:15 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRootHelper.h:1174,update,update,1174,math/mathmore/inc/Math/GSLRootHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRootHelper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class IntegrationTypes; //; // Created by: moneta at Fri Nov 26 15:40:58 2004; //; // Last update: Fri Nov 26 15:40:58 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h:1092,Integrat,IntegrationTypes,1092,math/mathmore/inc/Math/IntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h,2,"['Integrat', 'update']","['IntegrationTypes', 'update']"
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class InterpolationTypes; //; // Created by: moneta at Fri Nov 26 15:40:58 2004; //; // Last update: Fri Nov 26 15:40:58 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/InterpolationTypes.h:1179,update,update,1179,math/mathmore/inc/Math/InterpolationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/InterpolationTypes.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class Interpolator; //; // Created by: moneta at Fri Nov 26 15:00:25 2004; //; // Last update: Fri Nov 26 15:00:25 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Interpolator.h:1173,update,update,1173,math/mathmore/inc/Math/Interpolator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Interpolator.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class ParamFunction; //; // Base class for Parametric functions; //; // Created by: Lorenzo Moneta at Wed Nov 10 16:38:34 2004; //; // Last update: Wed Nov 10 16:38:34 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ParamFunction.h:1226,update,update,1226,math/mathmore/inc/Math/ParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ParamFunction.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class Polynomial; //; // Created by: Lorenzo Moneta at Wed Nov 10 17:46:19 2004; //; // Last update: Wed Nov 10 17:46:19 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Polynomial.h:1179,update,update,1179,math/mathmore/inc/Math/Polynomial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Polynomial.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class ChebyshevApprox; //; // Created by: moneta at Thu Dec 2 14:51:15 2004; //; // Last update: Thu Dec 2 14:51:15 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/ChebyshevApprox.cxx:1183,update,update,1183,math/mathmore/src/ChebyshevApprox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/ChebyshevApprox.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLDerivator; //; // Created by: moneta at Sat Nov 13 14:46:00 2004; //; // Last update: Sat Nov 13 14:46:00 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Derivator.cxx:1181,update,update,1181,math/mathmore/src/Derivator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Derivator.cxx,2,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLIntegrator; //; // Created by: Lorenzo Moneta at Thu Nov 11 14:22:32 2004; //; // Last update: Thu Nov 11 14:22:32 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLIntegrator.cxx:1190,update,update,1190,math/mathmore/src/GSLIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLIntegrator.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLInterpolator; //; // Created by: moneta at Sun Nov 28 08:54:48 2004; //; // Last update: Sun Nov 28 08:54:48 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLInterpolator.cxx:1184,update,update,1184,math/mathmore/src/GSLInterpolator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLInterpolator.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLMultiRootFinder; //; // Created by: moneta at Sun Nov 14 11:27:11 2004; //; // Last update: Sun Nov 14 11:27:11 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFinder.cxx:1187,update,update,1187,math/mathmore/src/GSLMultiRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFinder.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLRootFinder; //; // Created by: moneta at Sun Nov 14 11:27:11 2004; //; // Last update: Sun Nov 14 11:27:11 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFinder.cxx:1182,update,update,1182,math/mathmore/src/GSLRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFinder.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLRootFinderAlgorithms; //; // Created by: moneta at Sun Nov 14 14:07:50 2004; //; // Last update: Sun Nov 14 14:07:50 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/RootFinderAlgorithms.cxx:1192,update,update,1192,math/mathmore/src/RootFinderAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/RootFinderAlgorithms.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLRootFinderDeriv; //; // Created by: moneta at Sun Nov 21 16:26:03 2004; //; // Last update: Sun Nov 21 16:26:03 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFinderDeriv.cxx:1187,update,update,1187,math/mathmore/src/GSLRootFinderDeriv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootFinderDeriv.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLRootHelper; //; // Created by: moneta at Sun Nov 14 21:34:15 2004; //; // Last update: Sun Nov 14 21:34:15 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootHelper.cxx:1182,update,update,1182,math/mathmore/src/GSLRootHelper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRootHelper.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class Interpolator using GSL; //; // Created by: moneta at Fri Nov 26 15:00:25 2004; //; // Last update: Fri Nov 26 15:00:25 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Interpolator.cxx:1191,update,update,1191,math/mathmore/src/Interpolator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Interpolator.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class Polynomial; //; // Created by: Lorenzo Moneta at Wed Nov 10 17:46:19 2004; //; // Last update: Wed Nov 10 17:46:19 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Polynomial.cxx:1187,update,update,1187,math/mathmore/src/Polynomial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/Polynomial.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; //; //; // Created by: moneta at Sun Nov 21 :26:03 2004; //; // Last update: Sun Nov 21 16:26:03 2004; //; // need to be included later",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLQuasiRandom.cxx:1136,update,update,1136,math/mathmore/src/GSLQuasiRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLQuasiRandom.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 moneta, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSL1DMinimizerWrapper; //; // Created by: moneta at Wed Dec 1 17:25:44 2004; //; // Last update: Wed Dec 1 17:25:44 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSL1DMinimizerWrapper.h:1172,update,update,1172,math/mathmore/src/GSL1DMinimizerWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSL1DMinimizerWrapper.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 moneta, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Implementation file for class GSLMinimizer1D; //; // Created by: moneta at Wed Dec 1 15:04:51 2004; //; // Last update: Wed Dec 1 15:04:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer1D.cxx:1173,update,update,1173,math/mathmore/src/GSLMinimizer1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer1D.cxx,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Dec 2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h:1301,update,update,1301,math/mathmore/src/GSLMultiFitFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h,1,['update'],['update']
Deployability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, M. Slawinska 10/2007; /**********************************************************************; * *; * Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; * *; * *; **********************************************************************/; // Header file for class Integrator; //; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:311,Integrat,Integrator,311,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['Integrat'],['Integrator']
Deployability,"// @(#)root/mathmore:$Id: Integrator.cxx 19826 2007-09-19 19:56:11Z rdm $; // Authors: L. Moneta, M. Slawinska 10/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * *; **********************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx:26,Integrat,Integrator,26,math/mathcore/src/Integrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx,1,['Integrat'],['Integrator']
Deployability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Dec 2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDecompBase; \ingroup Matrix. Decomposition Base class. This class forms the base for all the decompositions methods in the; linear algebra package .; It or its derived classes have installed the methods to solve; equations,invert matrices and calculate determinants while monitoring; the accuracy. Each derived class has always the following methods available:. #### Condition() :; In an iterative scheme the condition number for matrix inversion is; calculated . This number is of interest for estimating the accuracy; of x in the equation Ax=b; For example:; A is a (10x10) Hilbert matrix which looks deceivingly innocent; and simple, A(i,j) = 1/(i+j+1); b(i) = Sum_j A(i,j), so a sum of a row in A. the solution is x(i) = 1. i=0,.,9. However,; ~~~; TMatrixD m....; TVectorD b.....; TDecompLU lu(m); lu.SetTol(1.0e-12); lu.Solve(b); b.Print(); ~~~; gives,. ~~~; {1.000,1.000,1.000,1.000,0.998,1.000,0.993,1.001,0.996,1.000}; ~~~. Looking at the condition number, this is in line with expected the; accuracy . The condition number is 3.957e+12 . As a simple rule of; thumb, a condition number of 1.0e+n means that you lose up to n; digits of accuracy in a solution . Since doubles are stored with 15; digits, we can expect the accuracy to be as small as 3 digits . #### Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . #### Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:630,install,installed,630,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['install'],['installed']
Deployability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Nov 2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMatrixTSym; \ingroup Matrix. TMatrixTSym. Template class of a symmetric matrix in the linear algebra package. See the \ref Matrix page for the documentation of the linear algebra package. Note that in this implementation both matrix element m[i][j] and; m[j][i] are updated and stored in memory. However, when making the; object persistent only the upper right triangle is stored. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSym.cxx:715,update,updated,715,math/matrix/src/TMatrixTSym.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSym.cxx,1,['update'],['updated']
Deployability,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:880,toggle,toggle,880,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['toggle'],['toggle']
Deployability,"// @(#)root/net:$Id$; // Author: Sergey Linev 31/05/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; //; // TSQLTableInfo; //; // Contains information about table and table columns.; // For MySQL additional information like engine type,; // creation and last update time is provided; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLTableInfo.cxx:656,update,update,656,net/net/src/TSQLTableInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLTableInfo.cxx,1,['update'],['update']
Deployability,"// @(#)root/new:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Custom operators new and delete and ReAlloc functions. //; // //; // All new and delete operations in the ROOT system pass //; // via the custom new and delete operators defined in this file. //; // This scheme allows extensive memory checking and usage statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:982,toggle,toggle,982,core/newdelete/src/NewDelete.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx,1,['toggle'],['toggle']
Deployability,"// @(#)root/physics:$Id$; // Author: Jan Conrad; /** \class TRolke; \legacy{TRolke, Consider switching to RooStats.}; \ingroup Physics; This class computes confidence intervals for the rate of a Poisson; process in the presence of uncertain background and/or efficiency. The treatment and the resulting limits are fully frequentist. The; limit calculations make use of the profile likelihood method. \author Jan Conrad (CERN) 2004, Updated: Johan Lundberg (CERN) 2009. For a full list of methods and their syntax, and build instructions,; consult the header file TRolke.h. Examples/tutorials are found in the separate file Rolke.C. ### TRolke implements the following Models. The signal is always assumed to be Poisson, with the following; combinations of models of background and detection efficiency:. If unsure, first consider model 3, 4 or 5. 1: SetPoissonBkgBinomEff(x,y,z,tau,m); ~~~; Background: Poisson; Efficiency: Binomial; ~~~; when the background is simultaneously measured; from sidebands (or MC), and; the signal efficiency was determined from Monte Carlo. 2: SetPoissonBkgGaussEff(x,y,em,tau,sde); ~~~; Background: Poisson; Efficiency: Gaussian; ~~~; when the background is simultaneously measured; from sidebands (or MC), and; the efficiency is modeled as Gaussian. 3: SetGaussBkgGaussEff(x,bm,em,sde,sdb); ~~~; Background: Gaussian; Efficiency: Gaussian; ~~~; when background and efficiency can both be; modeled as Gaussian. 4: SetPoissonBkgKnownEff(x,y,tau,e); ~~~; Background: Poisson; Efficiency: Known; ~~~; when the background is simultaneously measured; from sidebands (or MC). 5: SetGaussBkgKnownEff(x,bm,sdb,e); ~~~; Background: Gaussian; Efficiency: Known; ~~~; when background is Gaussian. 6: SetKnownBkgBinomEff(x,z,b,m); ~~~; Background: Known; Efficiency: Binomial; ~~~; when signal efficiency was determined from Monte Carlo. 7: SetKnownBkgGaussEff(x,em,sde,b); ~~~; Background: Known; Efficiency: Gaussian; ~~~; when background is known and efficiency Gaussian. ### Par",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRolke.cxx:432,Update,Updated,432,math/physics/src/TRolke.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRolke.cxx,1,['Update'],['Updated']
Deployability,"// @(#)root/proof:$Id$; // Author: Sangsu Ryu 22/06/2010; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSelHandleDataSet; \ingroup proofbench. PROOF selector for file cache release.; List of files to be cleaned for each node is provided by client. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx:497,release,release,497,proof/proofbench/src/TSelHandleDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHandleDataSet.cxx,1,['release'],['release']
Deployability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer January 2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::NeymanConstruction; \ingroup Roostats. NeymanConstruction is a concrete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:958,integrat,integration,958,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,1,['integrat'],['integration']
Deployability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, George Lewis; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HistFactory::Measurement; * \ingroup HistFactory; The RooStats::HistFactory::Measurement class can be used to construct a model; by combining multiple RooStats::HistFactory::Channel objects. It also allows; to set some general properties like the integrated luminosity, its relative; uncertainty or the functional form of constraints on nuisance parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:692,integrat,integrated,692,roofit/histfactory/src/Measurement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::BayesianCalculator; \ingroup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval objec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:731,integrat,integrates,731,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrates']
Deployability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCCalculator; \ingroup Roostats. Bayesian Calculator estimating an interval or a credible region using the; Markov-Chain Monte Carlo method to integrate the likelihood function with the; prior to obtain the posterior function. By using the Markov-Chain Monte Carlo methods this calculator can work with; model which require the integration of a large number of parameters. MCMCCalculator is a concrete implementation of IntervalCalculator. It uses a; MetropolisHastings object to construct a Markov Chain of data points in the; parameter space. From this Markov Chain, this class can generate a; MCMCInterval as per user specification. The interface allows one to pass the model, data, and parameters via a; workspace and then specify them with names. After configuring the calculator, one only needs to ask GetInterval(), which; will return an ConfInterval (MCMCInterval in this case).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:626,integrat,integrate,626,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,2,['integrat'],"['integrate', 'integration']"
Deployability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::PdfProposal; \ingroup Roostats. PdfProposal is a concrete implementation of the ProposalFunction interface.; It proposes points across the parameter space in the distribution of the; given PDF. To make Propose(xPrime, x) dependent on x, configure with; PdfProposal::AddMapping(varToUpdate, valueToUse). For example, suppose we have:. ~~~{.cpp}; // our parameter; RooRealVar p(""p"", ""p"", 5, 0, 10);. // create mean and sigma for gaussian proposal function; RooRealVar meanP(""meanP"", ""meanP"", 0, 10);; RooRealVar sigma(""sigma"", ""sigma"", 1, 0, 5);; RooGaussian pGaussian(""pGaussian"", ""pGaussian"", p, meanP, sigma);. // configure proposal function; PdfProposal pdfProposal(pGaussian);; pdfProposal.AddMapping(meanP, p); // each call of Propose(xPrime, x), meanP in; // the proposal function will be updated to; // the value of p in x. this will center the; // proposal function about x's p when; // proposing for xPrime. // To improve performance, PdfProposal has the ability to cache a specified; // number of proposals. If you don't call this function, the default cache size; // is 1, which can be slow.; pdfProposal.SetCacheSize(desiredCacheSize);; ~~~. PdfProposal currently uses a fixed cache size. Adaptive caching methods are in the works; for future versions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx:1357,update,updated,1357,roofit/roostats/src/PdfProposal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx,1,['update'],['updated']
Deployability,"// @(#)root/smatrix:$Id$; // Authors: T. Glebe, L. Moneta 2005; ////////////////////////////////////////////////////////////////////////////////; // The Loki Library; // Copyright (c) 2001 by Andrei Alexandrescu; // This code accompanies the book:; // Alexandrescu, Andrei. ""Modern C++ Design: Generic Programming and Design; // Patterns Applied"". Copyright (c) 2001. Addison-Wesley.; // Permission to use, copy, modify, distribute and sell this software for any; // purpose is hereby granted without fee, provided that the above copyright; // notice appear in all copies and that both that copyright notice and this; // permission notice appear in supporting documentation.; // The author or Addison-Wesley Longman make no representations about the; // suitability of this software for any purpose. It is provided ""as is""; // without express or implied warranty.; ////////////////////////////////////////////////////////////////////////////////; // Last update: June 20, 2001",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/StaticCheck.h:955,update,update,955,math/smatrix/inc/Math/StaticCheck.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/StaticCheck.h,1,['update'],['update']
Deployability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; // Martin Storø Nyfløtt 05/2017; ///////////////////////////////////////////////////////////////////////////////////; //; // MathMore test suite; // ==============================; //; // This program performs tests :; // - numerical integration, derivation and root finders; // - it compares for various values of the gamma and beta distribution); // - the numerical calculated integral of pdf with cdf function,; // - the calculated derivative of cdf with pdf; // - the inverse (using root finder) of cdf with quantile; //; // to run the program outside ROOT do:; // > make stressMathMoreUnit; // > ctest -R gtest-math-mathmore-test-stressMathMoreUnit; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testStress.cxx:292,integrat,integration,292,math/mathmore/test/testStress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testStress.cxx,1,['integrat'],['integration']
Deployability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathMore Benchmark test suite; // ==============================; //; // This program performs tests :; // - numerical integration, derivation and root finders; // - it compares for various values of the gamma and beta distribution); // - the numerical calculated integral of pdf with cdf function,; // - the calculated derivative of cdf with pdf; // - the inverse (using root finder) of cdf with quantile; //; // to run the program outside ROOT do:; // > make stressMathMore; // > ./stressMathMore; //; // to run the program in ROOT; // root> gSystem->Load(""libMathMore""); // root> .x stressMathMore.cxx+; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:269,integrat,integration,269,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['integrat'],['integration']
Deployability,"// @(#)root/thread:$Id$; // // Author: Xavier Valls Pla 08/05/20; //; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // RTaskArena //; // //; // This file implements the method to initialize and retrieve ROOT's //; // global task arena, together with a method to check for active //; // CPU bandwith control, and a class to wrap the tbb task arena with //; // the purpose of keeping tbb off the installed headers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:789,install,installed,789,core/imt/inc/ROOT/RTaskArena.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx,1,['install'],['installed']
Deployability,"// @(#)root/tmva $Id$ ; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss ; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CrossEntropy *; * *; * *; * Description: Implementation of the CrossEntropy as separation criterion *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland * ; * U. of Victoria, Canada * ; * Heidelberg U., Germany * ; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CrossEntropy.h:200,integrat,integrated,200,tmva/tmva/inc/TMVA/CrossEntropy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CrossEntropy.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Abhishek Narain; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBayesClassifier *; * *; * *; * Description: *; * Bayesian Classifier *; * *; * Authors (alphabetical): *; * Abhishek Narain, <narainabhi@gmail.com> - University of Houston *; * *; * Copyright (c) 2005-2006: *; * University of Houston, *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBayesClassifier.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/MethodBayesClassifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBayesClassifier.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTree *; * *; * *; * Description: *; * Class for decision tree like PDEFoam. It overrides *; * PDEFoam::Explore() to use the decision tree like cell split *; * algorithm, given a specific separation type. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTree.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/PDEFoamDecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTree.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTree *; * *; * *; * Description: *; * Implementation of decision tree like PDEFoam *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDecisionTree; \ingroup TMVA. This PDEFoam variant acts like a decision tree and stores in every; cell the discriminant. D = #events with given class / total number of events. as well as the statistical error on the discriminant. It therefore; acts as a discriminant estimator. The decision tree-like behaviour; is achieved by overriding PDEFoamDiscriminant::Explore() to use a; decision tree-like cell splitting algorithm (given a separation; type). This PDEFoam variant should be booked together with the; PDEFoamDecisionTreeDensity density estimator, which returns the; events in a cell without sampling.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx:161,integrat,integrated,161,tmva/tmva/src/PDEFoamDecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTreeDensity *; * *; * *; * Description: *; * Class PDEFoamDecisionTreeDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTreeDensity.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/PDEFoamDecisionTreeDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTreeDensity.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTreeDensity *; * *; * *; * Description: *; * This class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDecisionTreeDensity::Density() *; * does this job. It uses a binary search tree, filled with training *; * events, in order to provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDecisionTreeDensity; \ingroup TMVA. This is a concrete implementation of PDEFoam. The Density(...); function returns allways 0. The function FillHistograms() is; added, which returns all events in a given TMVA::Volume.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTreeDensity.cxx:161,integrat,integrated,161,tmva/tmva/src/PDEFoamDecisionTreeDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTreeDensity.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andraes Hoecker, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealingFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SimulatedAnnealingFitter; \ingroup TMVA; Fitter using a Simulated Annealing Algorithm; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx:192,integrat,integrated,192,tmva/tmva/src/SimulatedAnnealingFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andraes Hoecker; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MinuitFitter; \ingroup TMVA; /Fitter using MINUIT; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitFitter.cxx:161,integrat,integrated,161,tmva/tmva/src/MinuitFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitFitter.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Config *; * *; * *; * Description: *; * GLobal configuration settings (singleton) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * Iowa State U., USA *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,2,"['configurat', 'integrat']","['configuration', 'integrated']"
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Config *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * Iowa State U., USA *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::Config; \ingroup TMVA. Singleton class for global configuration settings used by TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Config.cxx:208,integrat,integrated,208,tmva/tmva/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Config.cxx,2,"['configurat', 'integrat']","['configuration', 'integrated']"
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule consists of at least 2 nodes. *; * Input: a decision tree (in the constructor) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Rule; \ingroup TMVA. Implementation of a rule. A rule is simply a branch or a part of a branch in a tree.; It fulfills the following:. - First node is the root node of the originating tree; - Consists of a minimum of 2 nodes; - A rule returns for a given event:; - 0 : if the event fails at any node; - 1 : otherwise; - If the rule contains <2 nodes, it returns 0 SHOULD NOT HAPPEN!. The coefficient is found by either brute force or some sort of; intelligent fitting. See the RuleEnsemble class for more info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx:208,integrat,integrated,208,tmva/tmva/src/Rule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule with 0 or 1 nodes in the list is a root rule -> corresponds to a0. *; * Input: a decision tree (in the constructor) *; * its coefficient *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleFit; \ingroup TMVA; A class implementing various fits of rule ensembles; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * Description: *; * A class describing a 'rule cut' *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleCut.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleCut.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleCut.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * Description: *; * A class describing a 'rule cut' *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleCut; \ingroup TMVA; A class describing a 'rule cut'; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleCut.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule consists of at least 2 nodes. *; * Input: a decision tree (in the constructor) *; * its coefficient *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Rule.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/Rule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Rule.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleEnsemble *; * *; * *; * Description: *; * A class generating an ensemble of rules *; * Input: a forest of decision trees *; * Output: an ensemble of rules *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, GER *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleEnsemble; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleEnsemble.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleEnsemble *; * *; * *; * Description: *; * A class generating an ensemble of rules *; * Input: a forest of decision trees *; * Output: an ensemble of rules *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFit *; * *; * *; * Description: *; * A class implementing various fits of rule ensembles *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFit.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFit.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitAPI *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-KP Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleFitAPI; \ingroup TMVA; J Friedman's RuleFit method; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitAPI *; * *; * *; * Description: *; * Interface to Friedman's RuleFit method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-KP Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleFitAPI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitParams *; * *; * *; * Description: *; * A class doing the actual fitting of a linear model using rules as *; * base functions. *; * Reference paper: 1.Gradient Directed Regularization *; * Friedman, Popescu, 2004 *; * 2.Predictive Learning with Rule Ensembles *; * Friedman, Popescu, 2005 *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitParams *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleFitParams; \ingroup TMVA; A class doing the actual fitting of a linear model using rules as base functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard v. Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableGaussTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - Uni Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h:207,integrat,integrated,207,tmva/tmva/inc/TMVA/VariableGaussTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard v. Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableGaussTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - Uni Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableGaussTransform; \ingroup TMVA; Gaussian Transformation of input variables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx:207,integrat,integrated,207,tmva/tmva/src/VariableGaussTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Reader *; * *; * *; * Description: *; * Reader class to be used in the user application to interpret the trained *; * MVAs in an analysis context *; * *; * Authors (alphabetical order): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Reader; \ingroup TMVA. The Reader class serves to use the MVAs in a specific analysis context.; Within an event loop, a vector is filled that corresponds to the variables; that were used to train the MVA(s) during the training stage. This vector; is transfered to the Reader, who takes care of interpreting the weight; file of the MVA of choice, and to return the MVA's output. This is then; used by the user for further analysis. Usage:. ~~~ {.cpp}; // ------ before starting the event loop (eg, in the initialisation step). //; // create TMVA::Reader object; //; TMVA::Reader *reader = new TMVA::Reader();. // create a set of variables an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:222,integrat,integrated,222,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Nadim Sah <Nadim.Sah@cern.ch> - Berlin, Germany *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU East Lansing, USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MSU East Lansing, USA *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCategory; \ingroup TMVA. Class for categorizing the phase space. This class is meant to allow categorisation of the data. For different; categories, different classifiers may be booked and different variables; may be considered. The aim is to account for the difference that; is due to different locations/angles.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCategory.cxx:208,integrat,integrated,208,tmva/tmva/src/MethodCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCategory.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableDecorrTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableDecorrTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx:208,integrat,integrated,208,tmva/tmva/src/VariableDecorrTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariablePCATransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariablePCATransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx:208,integrat,integrated,208,tmva/tmva/src/VariablePCATransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss ; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline2 *; * *; * *; * Description: *; * Quadratic spline class; uses quadrax function for interpolation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland * ; * U. of Victoria, Canada * ; * MPI-K Heidelberg, Germany * ; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline2.h:199,integrat,integrated,199,tmva/tmva/inc/TMVA/TSpline2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline2.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodLikelihood *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U. of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodLikelihood; \ingroup TMVA. Likelihood analysis (""non-parametric approach""). Also implemented is a ""diagonalized likelihood approach"",; which improves over the uncorrelated likelihood approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. The method of maximum likelihood is the most straightforward, and; certainly among the most elegant multivariate analyser approaches.; We define the likelihood ratio, \f$ R_L \f$, for event; \f$ i \f$, by:. \f[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \f]. Here the signal and background likelihoods, \f$ L_S \f$,; \f$ L_B \f$, are products of the corresponding probability; densities, \f$ p_S \f$, \f$ p_B \f$, of the; \f$ N_{var} \f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \pr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:232,integrat,integrated,232,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::DecisionTree; \ingroup TMVA. Implementation of a Decision Tree. In a decision tree successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:232,integrat,integrated,232,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinaryTree *; * *; * *; * Description: *; * BinaryTree: A base class for BinarySearch- or Decision-Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinaryTree.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/BinaryTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinaryTree.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DecisionTreeNode *; * *; * *; * Description: *; * Node for the Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * *; * Copyright (c) 2009: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/DecisionTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodTMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodTMlpANN; \ingroup TMVA. This is the TMVA TMultiLayerPerceptron interface class. It provides the; training and testing the ROOT internal MLP class in the TMVA framework. Available learning methods:<br>. - Stochastic; - Batch; - SteepestDescent; - RibierePolak; - FletcherReeves; - BFGS. See the TMultiLayerPerceptron class description; for details on this ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:218,integrat,integrated,218,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::BinaryTree *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::BinaryTree; \ingroup TMVA. Base class for BinarySearch and Decision Trees. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinaryTree.cxx:218,integrat,integrated,218,tmva/tmva/src/BinaryTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinaryTree.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTreeNode *; * *; * *; * Description: *; * Implementation of a Decision Tree Node *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * *; * CopyRight (c) 2009: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::; \ingroup TMVA. Node for the Decision Tree. The node specifies ONE variable out of the given set of selection variable; that is used to split the sample which ""arrives"" at the node, into a left; (background-enhanced) and a right (signal-enhanced) sample. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:218,integrat,integrated,218,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:232,integrat,integrated,232,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBDT (Boosted Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * Jan Therhaag <jan.therhaag@cern.ch> - U. of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:212,integrat,integrated,212,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Peter Speckmayer, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLikelihood *; * *; * *; * Description: *; * Likelihood analysis (""non-parametric approach"") *; * Also implemented is a ""diagonalized likelihood approach"", *; * which improves over the uncorrelated likelihood ansatz by transforming *; * linearly the input variables into a diagonal space, using the square-root *; * of the covariance matrix. This approach can be chosen by inserting *; * the letter ""D"" into the option string. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:250,integrat,integrated,250,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:241,integrat,integrated,241,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBoost; \ingroup TMVA. Class for boosting a TMVA method. This class is meant to boost a single classifier. Boosting means; training the classifier a few times. Every time the weights of the; events are modified according to how well the classifier performed; on the test sample. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:241,integrat,integrated,241,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCompositeBase.h:207,integrat,integrated,207,tmva/tmva/inc/TMVA/MethodCompositeBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCompositeBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCategory.h:207,integrat,integrated,207,tmva/tmva/inc/TMVA/MethodCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCategory.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen; /*****************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU, USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; *****************************************************************************/; /*! \class TMVA::MethodCompositeBase; \ingroup TMVA. Virtual base class for combining several TMVA method. This class is virtual class meant to combine more than one classifier; together. The training of the classifiers is done by classes that are; derived from this one, while the saving and loading of weights file; and the evaluation is done here.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCompositeBase.cxx:202,integrat,integrated,202,tmva/tmva/src/MethodCompositeBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCompositeBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : Ranking *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Ranking; \ingroup TMVA; Ranking for variables in method (implementation); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx:198,integrat,integrated,198,tmva/tmva/src/Ranking.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN; \ingroup TMVA. Interface to Clermond-Ferrand artificial neural network. The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are; feed-forward networks according to the following propagation schema:. \image html tmva_mlp.png Schema for artificial neural network. The input layer contains as many neurons as input variables used in the MVA.; The output layer contains two neurons for the signal and background; event classes. In between the input and output layers are a variable number; of <i>k</i> hidden layers with arbitrary numbers of neurons. (While the; structure of the input and output layers is determined by the problem, the; hidden layers can be configured by the user through the option string; of the method booking.). As indicated in the sketch, all neuron inputs to a layer are linear; combinations of the neuron output of the previous layer. The transfer; from input t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodHMatrix *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodHMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodPlugins *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Daniel Martscheit <martschei@ekp.uni-karlsruhe.de> -KIT Karlsruhe, Ger. *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CreateMethodPlugins; \ingroup TMVA. Plugins analysis. The MethodPlugins is actually not a real method, but it is just a wrapper to call; the TPluginsManager of ROOT and find a external method which can be used to extend; TMVA by another classifier. The only methods which are actually really implemented; are the constructors which fulfill the plugins handling. The others will produce; FATAL warnings and stop TMVA execution. Right after the constructor, the additional method 'getPlugedinMethod()' is called,; which returns the method loaded by the plugin manager, and the MethodPlugins object; is already deleted. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * CopyRight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::BinarySearchTreeNode; \ingroup TMVA. Node for the BinarySearch or Decision Trees. for the binary search tree, it basically consists of the EVENT, and; pointers to the parent and daughters. in case of the Decision Tree, it specifies parent and daughters, as; well as ""which variable is used"" in the selection of this node, including; the respective cut value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTreeNode.cxx:198,integrat,integrated,198,tmva/tmva/src/BinarySearchTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTreeNode.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * CopyRight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Node; \ingroup TMVA; Node for the BinarySearch or Decision Trees. For the binary search tree, it basically consists of the EVENT, and; pointers to the parent and daughters. In case of the Decision Tree, it specifies parent and daughters, as; well as ""which variable is used"" in the selection of this node,; including the respective cut value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Node.cxx:198,integrat,integrated,198,tmva/tmva/src/Node.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Node.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinarySearchTree *; * *; * *; * Description: *; * BinarySearchTree incl. volume Search method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinarySearchTree *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::BinarySearchTree; \ingroup TMVA. A simple Binary search tree including a volume search method. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:198,integrat,integrated,198,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/GiniIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GiniIndexWithLaplace *; * *; * *; * Description: Implementation of the GiniIndex With Laplace correction *; * as separation criterion *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : IMethod *; * *; * *; * Description: *; * Interface for all concrete MVA method implementations *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IMethod.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/IMethod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IMethod.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCFMlpANN *; * *; * *; * Description: *; * Interface for Clermond-Ferrand artificial neural network. *; * The ANN code has been translated from FORTRAN77 (f2c); *; * see files: MethodCFMlpANN_f2c_mlpl3.cpp *; * MethodCFMlpANN_f2c_datacc.cpp *; * *; * -------------------------------------------------------------------- *; * Reference for the original FORTRAN version: *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Fd *; * Team members. Contact : gaypas@afal11.cern.ch *; * *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * -------------------------------------------------------------------- *; * *; * Usage: options are given through Factory: *; * factory->BookMethod( ""MethodCFMlpANN"", OptionsString ); *; * *; * where: *; * TString OptionsString = ""n_training_cycles:n_hidden_layers"" *; * *; * default is: n_training_cycles = 5000, n_layers = 4 *; * note that the number of hidden layers in the NN is *; * *; * n_hidden_layers = n_layers - 2 *; * *; * since there is one input and one output layer. The number of *; * nodes (neurons) is predefined to be *; * *; * n_nodes[i] = nvars + 1 - i (where i=1..n_layers) *; * *; * with nvars being the number of variables used in the NN. *; * Hence, the default case is: n_neurons(layer 1 (input)) : nvars *; * n_neurons(layer 2 (hidden)): nvars-1 *; * n_neurons(layer 3 (hidden)): nvars-1 *; * n_neurons(layer 4 (out)) : 2 *; * *; * This artificial neural network usually needs a relatively large *; * number of cycles to converge (8000 and more). Overtraining can *; * be efficiently tested by comparing the signal and background *; * output of the NN for the events that were used for training and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodCFMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCFMlpANN_utils *; * *; * *; * Reference for the original FORTRAN version ""mlpl3.F"": *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Fd *; * Team members *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * Description: *; * Utility routine, obtained via f2c from original mlpl3.F FORTRAN routine *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_Utils.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodCFMlpANN_Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_Utils.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDT (Boosted Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDT.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDT.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDT (DT = Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut cri",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodHMatrix *; * *; * *; * Description: *; * H-Matrix method, which is implemented as a simple comparison of *; * chi-squared estimators for signal and background, taking into account *; * the linear correlations between the input variables. *; * Method is (also) used by D0 Collaboration (FNAL) for electron *; * identification; for more information, see, eg, *; * http://www-d0.fnal.gov/d0dist/dist/packages/tau_hmchisq/devel/doc/ *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodHMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodTMlpANN *; * *; * *; * Description: *; * Implementation of interface for Root-integrated artificial neural *; * network: TMultiLayerPerceptron, author: Christophe.Delaere@cern.ch *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodTMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h,2,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MisClassificationError *; * *; * *; * Description: *; * Implementation of the MisClassificationError as separation *; * criterion: 1-max(p, 1-p) *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MisClassificationError.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MisClassificationError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MisClassificationError.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MisClassificationError *; * *; * *; * Description: Implementation of the MisClassificationError as separation *; * criterion: 1-max(p, 1-p) as; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MisClassificationError; \ingroup TMVA; Implementation of the MisClassificationError as separation criterion; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MisClassificationError.cxx:198,integrat,integrated,198,tmva/tmva/src/MisClassificationError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MisClassificationError.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Ranking *; * *; * *; * Description: *; * Virtual ranking class *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Ranking.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Ranking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Ranking.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RegressionVariance *; * *; * *; * Description: Calculate the separation criteria used in regression *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""Variance"" of a sample. *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criteria which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RegressionVariance.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/RegressionVariance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RegressionVariance.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RootFinder *; * *; * *; * Description: *; * Root finding using Brents algorithm *; * (translated from CERNLIB function RZERO) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RootFinder.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RootFinder.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SdivSqrtSplusB *; * *; * *; * Description: Implementation of the SdivSqrtSplusB as separation criterion *; * S/sqrt(S + B) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SdivSqrtSplusB.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/SdivSqrtSplusB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SdivSqrtSplusB.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SeparationBase *; * *; * *; * Description: An interface to different separation criteria used in various *; * training algorithms, as there are: *; * Gini-Index, Cross Entropy, Misclassification Error, e.t.c. *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""purity"" of a sample. If all elements (events) in the *; * sample belong to the same class (e.g. signal or backgr), than the *; * separation index is 0 (meaning 100% purity (or 0% purity as it is *; * symmetric. The index becomes maximal, for perfectly mixed samples *; * eg. purity=50% , N_signal = N_bkg *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criterion which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/SeparationBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::CrossEntropy *; * *; * *; * Description: Implementation of the CrossEntropy as separation criterion *; * -p log (p) - (1-p)log(1-p); p=purity *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CrossEntropy; \ingroup TMVA. Implementation of the CrossEntropy as separation criterion. -p log (p) - (1-p)log(1-p); p=purity; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CrossEntropy.cxx:198,integrat,integrated,198,tmva/tmva/src/CrossEntropy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CrossEntropy.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex With Laplace correction *; * as separation criterion *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * Laplace's correction to the prob.density c/N --> (c+1)/(N+2) *; * for just Signal and Background classes this then boils down to: *; * Gini(Sample) = 2(s*b+s+b+1)/(s+b+2)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndexWithLaplace; \ingroup TMVA. Implementation of the GiniIndex With Laplace correction as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elements that belong to class \f$ k \f$ fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx:198,integrat,integrated,198,tmva/tmva/src/GiniIndexWithLaplace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndex; \ingroup TMVA. Implementation of the GiniIndex as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elem",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx:198,integrat,integrated,198,tmva/tmva/src/GiniIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN_utils *; * *; * *; * Reference for the original FORTRAN version ""mlpl3.F"": *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand *; * Team members *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * *; * Modifications by present authors: *; * use dynamical data tables (not for all of them, but for the big ones) *; * *; * Description: *; * Utility routine translated from original mlpl3.F FORTRAN routine *; * *; * MultiLayerPerceptron : Training code *; * *; * NTRAIN: Nb of events used during the learning *; * NTEST: Nb of events used for the test *; * TIN: Input variables *; * TOUT: type of the event *; * *; * ---------------------------------------------------------------------------- *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN_Utils; \ingroup TMVA. Implementation of Clermond-Ferrand artificial neural network. Reference for the original FORTRAN version ""mlpl3.F"":; - Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand; Team m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodCFMlpANN_Utils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline1 *; * *; * *; * Description: *; * Linear interpolation class; derivative of TSpline *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline1.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/TSpline1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline1.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Tools *; * *; * *; * Description: *; * Global auxiliary applications and data treatment routines *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Tools.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Volume *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Volume; \ingroup TMVA; Volume for BinarySearchTree. volume element: variable space between upper and lower bonds of; nvar-dimensional variable space; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Volume.cxx:198,integrat,integrated,198,tmva/tmva/src/Volume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Volume.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Volume *; * *; * *; * Description: *; * Volume for BinarySearchTree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Volume.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Volume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Volume.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Node for the BinarySearch or Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Node.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Node.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Node.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: Node, NodeID *; * *; * *; * Description: *; * Node for the BinarySearch *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Header : MethodCFMlpANN_def *; * *; * *; * Description: *; * Common definition for CFMlpANN method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; // ------------- common definitions used in several modules --------------; // recovered explicit array definitions from f2c override",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealing *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SimulatedAnnealing; \ingroup TMVA; Base implementation of simulated annealing fitting procedure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealing.cxx:242,integrat,integrated,242,tmva/tmva/src/SimulatedAnnealing.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealing.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealing *; * *; * *; * Description: *; * Implementation of simulated annealing fitting procedure *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h:242,integrat,integrated,242,tmva/tmva/inc/TMVA/SimulatedAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Peter Speckmayer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableNormalizeTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableNormalizeTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx:226,integrat,integrated,226,tmva/tmva/src/VariableNormalizeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableRearrangeTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableRearrangeTransform; \ingroup TMVA; Rearrangement of input variables; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableRearrangeTransform.cxx:206,integrat,integrated,206,tmva/tmva/src/VariableRearrangeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableRearrangeTransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ClassInfo *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassInfo.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/ClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassInfo.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Configurable *; * *; * *; * Description: *; * Base class for all classes with option parsing *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Configurable *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::; \ingroup TMVA. Base Class for all classes that need option parsing. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Configurable.cxx:188,integrat,integrated,188,tmva/tmva/src/Configurable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Configurable.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ConvergenceTest *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ConvergenceTest.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/ConvergenceTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ConvergenceTest.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataInputHandler *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataInputHandler; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataInputHandler.cxx:188,integrat,integrated,188,tmva/tmva/src/DataInputHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataInputHandler.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::OptionBase; \ingroup TMVA; Class for TMVA-option handling; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Option.cxx:188,integrat,integrated,188,tmva/tmva/src/Option.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Option.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Option container *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Option.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Option.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Option.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Variable type info *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RegressionVariance *; * *; * *; * Description: Calculate the separation criteria used in regression *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""Variance"" of a sample. *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criteria which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RegressionVariance.cxx:188,integrat,integrated,188,tmva/tmva/src/RegressionVariance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RegressionVariance.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RootFinder *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RootFinder; \ingroup TMVA; Root finding using Brents algorithm (translated from CERNLIB function RZERO); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RootFinder.cxx:188,integrat,integrated,188,tmva/tmva/src/RootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RootFinder.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SdivSqrtSplusB *; * *; * *; * Description: Implementation of the SdivSqrtSplusB as separation criterion *; * s / sqrt( s+b ) *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SdivSqrtSplusB; \ingroup TMVA; Implementation of the SdivSqrtSplusB as separation criterion. \f$ Index = \frac{S}{\sqrt{S+B}} \f$ (statistical significance); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SdivSqrtSplusB.cxx:188,integrat,integrated,188,tmva/tmva/src/SdivSqrtSplusB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SdivSqrtSplusB.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SeparationBase *; * *; * *; * Description: An interface to different separation criteria used in various *; * training algorithms, as there are: *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""purity"" of a sample. If all elements (events) in the *; * sample belong to the same class (e.g. signal or backgr), than the *; * separation index is 0 (meaning 100% purity (or 0% purity as it is *; * symmetric. The index becomes maximal, for perfectly mixed samples *; * eg. purity=50% , N_signal = N_bkg *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criterion which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SeparationBase; \ingroup TMVA; An interface to calculate the ""SeparationGain"" for different; separation criteria used in various training algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SeparationBase.cxx:188,integrat,integrated,188,tmva/tmva/src/SeparationBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SeparationBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline1 *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TSpline1; \ingroup TMVA; Linear interpolation of TGraph; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline1.cxx:188,integrat,integrated,188,tmva/tmva/src/TSpline1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline1.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline2 *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TSpline2; \ingroup TMVA; Quadratic interpolation of TGraph; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline2.cxx:188,integrat,integrated,188,tmva/tmva/src/TSpline2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline2.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Timer *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Timer; \ingroup TMVA; Timing information for training and evaluation of MVA methods. Usage:. ~~~ {.cpp}; TMVA::gConfig().SetDrawProgressBar(true);. TMVA::Timer timer( Nloops, ""MyClassName"" );; for (Int_t i=0; i<Nloops; i++) {; ... // some code. // now, print progress bar:; timer.DrawProgressBar( i );. // **OR** text output of left time (never both !); fLogger << "" time left: "" << timer.GetLeftTime( i ) << Endl;. }; fLogger << ""MyClassName"" << "": elapsed time: "" << timer.GetElapsedTime(); << Endl;; ~~~. Remark: in batch mode, the progress bar is quite ugly; you may; want to use the text output then. Note that by default in TMVA::Config the drawing of the; progress bar is switched off. To have the progress bar visible you need ; to enable it by calling TMVA::gConfig().SetDrawProgressBar(true). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx:188,integrat,integrated,188,tmva/tmva/src/Timer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Timer *; * *; * *; * Description: *; * Timing information for methods training *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Timer.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Timer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Timer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Types *; * *; * *; * Description: *; * GLobal types (singleton class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Types.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Types.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Types *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::Types; \ingroup TMVA; Singleton class for Global types used by TMVA; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Types.cxx:188,integrat,integrated,188,tmva/tmva/src/Types.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Types.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableDecorrTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableDecorrTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableIdentityTransform *; * *; * *; * Description: *; * Identity transform *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableIdentityTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableIdentityTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableIdentityTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableIdentityTransform.cxx:188,integrat,integrated,188,tmva/tmva/src/VariableIdentityTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableIdentityTransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableNormalizeTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariablePCATransform *; * *; * *; * Description: *; * Principal value composition of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariablePCATransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableRearrangeTransform *; * *; * *; * Description: *; * rearrangement of input variables *; * *; * Authors (alphabetical): *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealingFitter *; * *; * *; * Description: *; * Fitter using Simulated Annealing algorithm *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h:215,integrat,integrated,215,tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Eckhard von Toerne, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodCuts *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCuts; \ingroup TMVA. Multivariate optimisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in gen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:237,integrat,integrated,237,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCuts *; * *; * *; * Description: *; * Multivariate optimisation of signal efficiency for given background *; * efficiency, using rectangular minimum and maximum requirements on *; * input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:217,integrat,integrated,217,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetFactory *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h:226,integrat,integrated,226,tmva/tmva/inc/TMVA/DataSetFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; /*****************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetFactory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU, USA *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2009: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; *****************************************************************************/; /*! \class TMVA::DataSetFactory; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:221,integrat,integrated,221,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TransformationHandler *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TransformationHandler; \ingroup TMVA; Class that contains all the data information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:240,integrat,integrated,240,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TransformationHandler *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TransformationHandler.h:240,integrat,integrated,240,tmva/tmva/inc/TMVA/TransformationHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TransformationHandler.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Event *; * *; * *; * Description: *; * Event container *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h:220,integrat,integrated,220,tmva/tmva/inc/TMVA/Event.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Event *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:220,integrat,integrated,220,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Event *; * *; * *; * Description: *; * LossFunction and associated classes *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h:220,integrat,integrated,220,tmva/tmva/inc/TMVA/LossFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : LossFunction *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::HuberLossFunction; \ingroup TMVA. Huber Loss Function. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LossFunction.cxx:220,integrat,integrated,220,tmva/tmva/src/LossFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LossFunction.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsMulticlass *; * *; * *; * Description: *; * Derived-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsMulticlass.h:220,integrat,integrated,220,tmva/tmva/inc/TMVA/ResultsMulticlass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsMulticlass.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsMulticlass *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ResultsMulticlass; \ingroup TMVA; Class which takes the results of a multiclass classification; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsMulticlass.cxx:220,integrat,integrated,220,tmva/tmva/src/ResultsMulticlass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsMulticlass.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Tools *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Tools; \ingroup TMVA; Global auxiliary applications and data treatment routines.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:220,integrat,integrated,220,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag, Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; //NOTE: Based on TMVA::Factory; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataLoader *; * *; * *; * Description: *; * This is a class to load datasets into every booked method *; * *; * Authors (alphabetical): *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Omar Zapata <andresete.chaos@gmail.com> - ITM/UdeA, Colombia *; * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * ITM/UdeA, Colombia *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataLoader.h:327,integrat,integrated,327,tmva/tmva/inc/TMVA/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataLoader.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodBase; \ingroup TMVA. Virtual base Class for all MVA method. MethodBase hosts several specific evaluation methods. The kind of MVA that provides optimal performance in an analysis strongly; depends on the particular application. The evaluation factory provides a; number of numerical benchmark results to directly assess the performance; of the MVA training on the independent test sample. These are:. - The _signal efficiency_ at three representative background efficiencies; (which is 1 &minus; rejection).; - The _significance_ of an MVA estimator, defined by the difference; between the MVA mean values for signal and background, divided by the; quadratic sum of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:250,integrat,integrated,250,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:250,integrat,integrated,250,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Reader *; * *; * *; * Description: *; * Reader class to be used in the user application to interpret the trained *; * MVAs in an analysis context *; * *; * Authors (alphabetical order): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h:250,integrat,integrated,250,tmva/tmva/inc/TMVA/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; // Updated by: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * This is the main MVA steering class: it creates (books) all MVA methods, *; * and guides them through the training, testing and evaluation phases. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h:143,Update,Updated,143,tmva/tmva/inc/TMVA/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h,2,"['Update', 'integrat']","['Updated', 'integrated']"
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Omar Zapata; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx:219,integrat,integrated,219,tmva/tmva/src/VariableTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ClassInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ClassInfo; \ingroup TMVA. Class that contains all the information of a class. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassInfo.cxx:206,integrat,integrated,206,tmva/tmva/src/ClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassInfo.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ConvergenceTest *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ConvergenceTest; \ingroup TMVA. Check for convergence. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx:206,integrat,integrated,206,tmva/tmva/src/ConvergenceTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataInputHandler *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataInputHandler.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/DataInputHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataInputHandler.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSet *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSet.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/DataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSet.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSet *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataSet; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx:206,integrat,integrated,206,tmva/tmva/src/DataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetManager *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataSetManager; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetManager.cxx:206,integrat,integrated,206,tmva/tmva/src/DataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetManager.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetManager *; * *; * *; * Description: *; * Singleton class for dataset management *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetManager.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/DataSetManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetManager.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : FitterBase *; * *; * *; * Description: *; * Base class for TMVA fitters *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/FitterBase.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/FitterBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/FitterBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : FitterBase *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::FitterBase; \ingroup TMVA. Base class for TMVA fitters. Also defines generalised fitting interface. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/FitterBase.cxx:206,integrat,integrated,206,tmva/tmva/src/FitterBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/FitterBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MCFitter *; * *; * *; * Description: *; * Fitter using Monte Carlo sampling of parameters *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MCFitter.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/MCFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MCFitter.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Results *; * *; * *; * Description: *; * Base-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Results.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/Results.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Results.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Results *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Results; \ingroup TMVA; Class that is the base-class for a vector of result; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Results.cxx:206,integrat,integrated,206,tmva/tmva/src/Results.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Results.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsClassification *; * *; * *; * Description: *; * Derived-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsClassification.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/ResultsClassification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsClassification.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsClassification *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ResultsClassification; \ingroup TMVA; Class that is the base-class for a vector of result; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsClassification.cxx:206,integrat,integrated,206,tmva/tmva/src/ResultsClassification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsClassification.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsRegression *; * *; * *; * Description: *; * Derived-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsRegression.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/ResultsRegression.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsRegression.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsRegression *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ResultsRegression; \ingroup TMVA; Class that is the base-class for a vector of result; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsRegression.cxx:206,integrat,integrated,206,tmva/tmva/src/ResultsRegression.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsRegression.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::MCFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MCFitter; \ingroup TMVA. Fitter using Monte Carlo sampling of parameters. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx:206,integrat,integrated,206,tmva/tmva/src/MCFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::VariableInfo; \ingroup TMVA; Class for type info of MVA input variable; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx:206,integrat,integrated,206,tmva/tmva/src/VariableInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableTransformBase; \ingroup TMVA; Linear interpolation class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:206,integrat,integrated,206,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Jan Therhaag, Eckhard von Toerne, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Version *; * *; * *; * Description: *; * Current TMVA Version - filled automatically during cvs tagging *; * by python script development/tmvaTag.py *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2005-2010, *; * Regents of CERN (Switzerland), *; * University of Bonn (Germany), *; * University of Heidelberg (Germany), *; * University of Victoria (Canada) *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Version.h:240,integrat,integrated,240,tmva/tmva/inc/TMVA/Version.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Version.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * *; * Copyright (c) 2005-2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFDA; \ingroup TMVA. Function discriminant analysis (FDA). This simple classifier; fits any user-defined TFormula (via option configuration string) to; the training data by requiring a formula response of 1 (0) to signal; (background) events. The parameter fitting is done via the abstract; class FitterBase, featuring Monte Carlo sampling, Genetic; Algorithm, Simulated Annealing, MINUIT and combinations of these. Can compute regression value for one dimensional output; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx:194,integrat,integrated,194,tmva/tmva/src/MethodFDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx,2,"['configurat', 'integrat']","['configuration', 'integrated']"
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Matt Jachowski, Jan Therhaag, Jiahang Zhong; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodANNBase *; * *; * *; * Description: *; * Artificial neural network base class for the discrimination of signal *; * from background. *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Jiahang Zhong <Jiahang.Zhong@cern.ch> - Academia Sinica, Taipei *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodANNBase; \ingroup TMVA. Base class for all TMVA methods using artificial neural networks. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx:224,integrat,integrated,224,tmva/tmva/src/MethodANNBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Matt Jachowski, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodANNBase *; * *; * *; * Description: *; * Artificial neural network base class for the discrimination of signal *; * from background. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Small changes (regression): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ , Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodANNBase.h:209,integrat,integrated,209,tmva/tmva/inc/TMVA/MethodANNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodANNBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer,Joerg Stelzer, Helge Voss, Omar Zapata; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Pre-transformation of input variables (base class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/VariableTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer,Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Pre-transformation of input variables (base class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:205,integrat,integrated,205,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : IFitterTarget *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::IFitterTarget; \ingroup TMVA. Interface for a fitter 'target'. Defines interface to the estimator function. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/IFitterTarget.cxx:179,integrat,integrated,179,tmva/tmva/src/IFitterTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/IFitterTarget.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : IFitterTarget *; * *; * *; * Description: *; * Interface for generic fitter *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IFitterTarget.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/IFitterTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IFitterTarget.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Function discriminant analysis (FDA). This simple classifier *; * fits any user-defined TFormula (via option configuration string) to *; * the training data by requiring a formula response of 1 (0) to signal *; * (background) events. The parameter fitting is done via the abstract *; * class FitterBase, featuring Monte Carlo sampling, Genetic *; * Algorithm, Simulated Annealing, MINUIT and combinations of these. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,2,"['configurat', 'integrat']","['configuration', 'integrated']"
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Xavier Prudent, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : MethodFisher *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Original author of this Fisher-Discriminant implementation: *; * Andre Gaidot, CEA-France; *; * (Translation from FORTRAN) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFisher; \ingroup TMVA. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis). In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:214,integrat,integrated,214,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Xavier Prudent, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFisher *; * *; * *; * Description: *; * Analysis of Fisher discriminant (Fisher or Mahalanobis approach) *; * *; * Original author of this Fisher-Discriminant implementation: *; * Andre Gaidot, CEA-France; *; * (Translation from FORTRAN) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFisher.h:214,integrat,integrated,214,tmva/tmva/inc/TMVA/MethodFisher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFisher.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss; /***********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPDERS *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Yair Mahalalel <Yair.Mahalalel@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:215,integrat,integrated,215,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPDERS *; * *; * *; * Description: *; * Multidimensional Likelihood using the ""Probability density estimator *; * range search"" (PDERS) method suggested in *; * T. Carli and B. Koblitz, NIM A 501, 576 (2003) *; * *; * The multidimensional PDFs for signal and background are modeled *; * by counting the events in the ""vicinity"" of a test point. The volume *; * that describes ""vicinity"" is user-defined through the option string. *; * A search method based on binary-trees is used to improve the selection *; * efficiency of the volume search. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Yair Mahalalel <Yair.Mahalalel@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:214,integrat,integrated,214,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitFitter *; * *; * *; * Description: *; * Fitter using MINUIT *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/MinuitFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVEvent *; * *; * *; * Description: *; * Event class for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVEvent.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVEvent.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVEvent.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVEvent *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVEvent; \ingroup TMVA; Event class for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVEvent.cxx:159,integrat,integrated,159,tmva/tmva/src/SVEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVEvent.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelFunction *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * MultiGaussian, Product and Sum kernels included: *; * Adrian Bevan <adrian.bevan@cern.ch> - Queen Mary *; * University of London, UK *; * Tom Stevenson <thomas.james.stevenson@cern.ch> - Queen Mary *; * University of London, UK *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVKernelFunction; \ingroup TMVA; Kernel for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx:159,integrat,integrated,159,tmva/tmva/src/SVKernelFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelFunction *; * *; * *; * Description: *; * Kernel for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelFunction.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVKernelFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelFunction.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelMatrix *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Minor modification to improve optimisation of kernel values: *; * Adrian Bevan <adrian.bevan@cern.ch> - Queen Mary *; * University of London, UK *; * Tom Stevenson <thomas.james.stevenson@cern.ch> - Queen Mary *; * University of London, UK *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVKernelMatrix; \ingroup TMVA; Kernel matrix for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelMatrix.cxx:159,integrat,integrated,159,tmva/tmva/src/SVKernelMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelMatrix.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelMatrix *; * *; * *; * Description: *; * Kernel matrix for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelMatrix.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVKernelMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelMatrix.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVWorkingSet *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVWorkingSet; \ingroup TMVA; Working class for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVWorkingSet.cxx:159,integrat,integrated,159,tmva/tmva/src/SVWorkingSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVWorkingSet.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVWorkingSet *; * *; * *; * Description: *; * Working class for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVWorkingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Asen Christov, Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss , Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PDF *; * *; * *; * Description: *; * PDF wrapper for histograms; uses user-defined spline interpolation *; * and kernel density estimation *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:228,integrat,integrated,228,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Asen Christov, Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PDF *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDF; \ingroup TMVA; PDF wrapper for histograms; uses user-defined spline interpolation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx:247,integrat,integrated,247,tmva/tmva/src/PDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Asen Christov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::KDEKernel *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::KDEKernel; \ingroup TMVA. KDE Kernel for ""smoothing"" the PDFs. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx:159,integrat,integrated,159,tmva/tmva/src/KDEKernel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Asen Christov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : KDEKernel *; * *; * *; * Description: *; * The Probability Density Functions (PDFs) used for the Likelihood analysis *; * can suffer from low statistics of the training samples. This can cause *; * the PDFs to fluctuate instead to be smooth. Nonparamatric Kernel Density *; * Estimation is one of the methods to produce ""smooth"" PDFs. *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Attila Krasznahorkay, Andreas Hoecker, Joerg Stelzer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MsgLogger *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch> - CERN, Switzerland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MsgLogger; \ingroup TMVA; ostringstream derivative to redirect and format output; */; // Local include(s):",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx:218,integrat,integrated,218,tmva/tmva/src/MsgLogger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Attila Krasznahorkay, Andreas Hoecker, Joerg Stelzer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MsgLogger *; * *; * *; * Description: *; * TMVA output logger class producing nicely formatted log messages *; * *; * Author: *; * Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch> - CERN, Switzerland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MsgLogger.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/MsgLogger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MsgLogger.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelBase *; * *; * *; * Description: *; * Implementation of PDEFoam kernel interface *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelBase; \ingroup TMVA; This class is the abstract kernel interface for PDEFoam. The; kernel can be used for manipulating (smearing) the cell values of a; PDEFoam, by passing it as an argument to; PDEFoam::GetCellValue(...). Derived classes must implement the Estimate() function to provide a; specific kernel behaviour.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelBase.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelBase *; * *; * *; * Description: *; * PDEFoam kernel interface *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelBase.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelGauss *; * *; * *; * Description: *; * Implementation of gauss PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelGauss; \ingroup TMVA; This PDEFoam kernel estimates a cell value for a given event by; weighting all cell values with a gauss function.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelGauss.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelGauss.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelGauss.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelGauss *; * *; * *; * Description: *; * PDEFoam kernel, which weights all cell values by a gauss function. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelGauss.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelGauss.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelGauss.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelLinN *; * *; * *; * Description: *; * Implementation of linear neighbors PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelLinN; \ingroup TMVA; This PDEFoam kernel estimates a cell value for a given event by; weighting with cell values of the nearest neighbor cells.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelLinN.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelLinN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelLinN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelLinN *; * *; * *; * Description: *; * PDEFoam kernel, which linear weights with the neighbor cells. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelLinN.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelLinN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelLinN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelTrivial *; * *; * *; * Description: *; * Implementation of trivial PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelTrivial; \ingroup TMVA; This class is a trivial PDEFoam kernel estimator. The Estimate(); function returns the cell value, given an event 'txvec'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelTrivial.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelTrivial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelTrivial.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelTrivial *; * *; * *; * Description: *; * Trivial PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelTrivial.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelTrivial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelTrivial.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Fredrik Tegenfeldt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRuleFit *; * *; * *; * Description: *; * Friedman's RuleFit method *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h:164,integrat,integrated,164,tmva/tmva/inc/TMVA/MethodRuleFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Fredrik Tegenfeldt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRuleFit *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodRuleFit; \ingroup TMVA; J Friedman's RuleFit method; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:164,integrat,integrated,164,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationReLU *; * *; * *; * Description: *; * Rectified linear unit function for an ANN. *; * *; * Authors (alphabetical): *; * Helge Voss *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationReLU; \ingroup TMVA; Rectified Linear Unit activation function for TNeuron; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationReLU.cxx:156,integrat,integrated,156,tmva/tmva/src/TActivationReLU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationReLU.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Joerg Stelzer, Peter Speckmeier; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * DESY Hamburg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataSetInfo; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:177,integrat,integrated,177,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Andreas Hoecker, Matt Jachowski, Kamil Kraszewski, Maciej Kruk, Peter Speckmayer, Joerg Stelzer, Eckhard v. Toerne, Jan Therhaag, Jiahang Zhong; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodMLP *; * *; * *; * Description: *; * ANN Multilayer Perceptron class for the discrimination of signal *; * from background. BFGS implementation based on TMultiLayerPerceptron *; * class from ROOT (http://root.cern.ch). *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jiahang Zhong <Jiahang.Zhong@cern.ch> - Academia Sinica, Taipei *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodMLP; \ingroup TMVA. Multilayer Perceptron class built off of MethodANNBase. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:312,integrat,integrated,312,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Andreas Hoecker, Matt Jachowski, Kamil Kraszewski, Maciej Kruk, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Jan Therhaag, Jiahang Zhong; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodMLP *; * *; * *; * Description: *; * ANN Multilayer Perceptron class for the discrimination of signal *; * from background. BFGS implementation based on TMultiLayerPerceptron *; * class from ROOT (http://root.cern.ch). *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jiahang Zhong <Jiahang.Zhong@cern.ch> - Academia Sinica, Taipei *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:313,integrat,integrated,313,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLD *; * *; * *; * Description: *; * Linear Discriminant - Simple Linear Regression and Classification *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - Uni Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * PAN, Poland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodLD; \ingroup TMVA; Linear Discriminant. Can compute multidimensional output for regression; (although it computes every dimension separately); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx:212,integrat,integrated,212,tmva/tmva/src/MethodLD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for Reference backend *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing Flattening/Deflattening on the GPU //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCuda.cxx:162,integrat,integrated,162,tmva/tmva/test/DNN/CNN/TestReshapeCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCuda.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for Reference backend *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing Flatten/Deflatten on the CPU architecture //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCpu.cxx:162,integrat,integrated,162,tmva/tmva/test/DNN/CNN/TestReshapeCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for every architecture using templates *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.h:162,integrat,integrated,162,tmva/tmva/test/DNN/CNN/TestReshape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Marcin ....; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBayesClassifier *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Abhishek Narain, <narainabhi@gmail.com> - University of Houston *; * *; * Copyright (c) 2005-2006: *; * University of Houston, *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBayesClassifier; \ingroup TMVA. Description of bayesian classifiers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx:157,integrat,integrated,157,tmva/tmva/src/MethodBayesClassifier.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Marcin Wolter, Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodSVM *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Introduction of regression by: *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Krakow, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * *; * Introduction of kernel parameter optimisation *; * and additional kernel functions by: *; * Adrian Bevan <adrian.bevan@cern.ch> - Queen Mary *; * University of London, UK *; * Tom Stevenson <thomas.james.stevenson@cern.ch> - Queen Mary *; * University of London, UK *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodSVM; \ingroup TMVA; SMO Platt's SVM classifier with Keerthi & Shavade improvements; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx:174,integrat,integrated,174,tmva/tmva/src/MethodSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Marcin Wolter, Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodSVM *; * *; * *; * Description: *; * Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Introduction of regression by: *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Krakow, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h:174,integrat,integrated,174,tmva/tmva/inc/TMVA/MethodSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationIdentity *; * *; * *; * Description: *; * Identity activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationIdentity; \ingroup TMVA; Identity activation function for TNeuron; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationIdentity.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationIdentity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationIdentity.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationRadial *; * *; * *; * Description: *; * Radial basis activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationRadial; \ingroup TMVA; Radial basis activation function for ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationRadial.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationRadial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationRadial.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationSigmoid *; * *; * *; * Description: *; * Sigmoid activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationSigmoid; \ingroup TMVA; Sigmoid activation function for TNeuron.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationSigmoid.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationSigmoid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationSigmoid.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationTanh *; * *; * *; * Description: *; * Tanh activation function (sigmoid normalized in [-1,1] for an ANN. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationTanh; \ingroup TMVA; Tanh activation function for ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationTanh.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationTanh.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationTanh.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivation *; * *; * Description: *; * Interface for TNeuron activation function classes. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivation.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivation.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivation *; * *; * Description: *; * Interface for TNeuron activation function classes. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivation; \ingroup TMVA; Interface for TNeuron activation function classes; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivation.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivation.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationChooser *; * *; * *; * Description: *; * Class for easily choosing activation functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationChooser.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationChooser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationChooser.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationChooser *; * *; * *; * Description: *; * Class for easily choosing activation functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationChooser; \ingroup TMVA; Class for easily choosing activation functions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationChooser.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationChooser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationChooser.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationIdentity *; * *; * *; * Description: *; * Identity activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationIdentity.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationIdentity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationIdentity.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationRadial *; * *; * *; * Description: *; * Radial basis activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationRadial.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationRadial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationRadial.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationReLU *; * *; * *; * Description: *; * Tanh activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationReLU.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationReLU.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationReLU.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationSigmoid *; * *; * *; * Description: *; * Sigmoid activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationSigmoid.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationSigmoid.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationSigmoid.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationTanh *; * *; * *; * Description: *; * Tanh activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationTanh.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationTanh.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationTanh.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuron *; * *; * *; * Description: *; * Neuron class to be used in MethodANNBase and its derivatives. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInput *; * *; * Description: *; * Interface for TNeuron input calculation classes *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInput.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInput.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInput *; * *; * Description: *; * Interface for TNeuron input calculation classes *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInput; \ingroup TMVA; Interface for TNeuron input calculation classes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInput.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInput.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputAbs *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the sum of the absolute values *; * of the weighted inputs *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputAbs.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputAbs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputAbs.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputAbs *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the sum of the absolute values *; * of the weighted inputs *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputAbs; \ingroup TMVA; TNeuron input calculator -- calculates the sum of the absolute; values of the weighted inputs; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputAbs.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputAbs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputAbs.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputChooser *; * *; * *; * Description: *; * Class for easily choosing neuron input functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputChooser.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputChooser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputChooser.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputChooser *; * *; * *; * Description: *; * Class for easily choosing neuron input functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputChooser; \ingroup TMVA; Class for easily choosing neuron input functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputChooser.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputChooser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputChooser.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSqSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the square *; * of the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSqSum.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputSqSum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSqSum.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSqSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the square *; * of the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputSqSum; \ingroup TMVA; TNeuron input calculator -- calculates the squared weighted sum of inputs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSqSum.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputSqSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSqSum.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSum.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputSum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSum.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputSum; \ingroup TMVA; TNeuron input calculator -- calculates the weighted sum of inputs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSum.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSum.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TSynapse *; * *; * *; * Description: *; * Synapse class for use in derivatives of MethodANNBase *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TSynapse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TNeuron *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuron; \ingroup TMVA; Neuron class used by TMVA artificial neural network methods; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSynapse *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TSynapse; \ingroup TMVA; Synapse class used by TMVA artificial neural network methods; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx:160,integrat,integrated,160,tmva/tmva/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer, Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ROCCurve *; * *; * Description: *; * This is class to compute ROC Integral (AUC) *; * *; * Authors : *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2015: *; * CERN, Switzerland *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCurve.h:205,integrat,integrated,205,tmva/tmva/inc/TMVA/ROCCurve.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCurve.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer, Simon Pfreundschuh and Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ROCCurve *; * *; * Description: *; * This is class to compute ROC Integral (AUC) *; * *; * Authors : *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2015: *; * CERN, Switzerland *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; **********************************************************************************/; /*! \class TMVA::ROCCurve; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ROCCurve.cxx:228,integrat,integrated,228,tmva/tmva/src/ROCCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ROCCurve.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Omar Zapata; // Mentors: Lorenzo Moneta, Sergei Gleyzer; //NOTE: Based on TMVA::Factory; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataLoader *; * *; * *; * Description: *; * This is a class to load datasets into every booked method *; * *; * Authors (alphabetical): *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Omar Zapata <Omar.Zapata@cern.ch> - ITM/UdeA, Colombia *; * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * ITM/UdeA, Colombia *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataLoader; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:233,integrat,integrated,233,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticAlgorithm *; * *; * *; * Description: *; * Base definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticAlgorithm.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticAlgorithm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticAlgorithm.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticFitter *; * *; * *; * Description: *; * Fitter using a Genetic Algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticFitter.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticFitter.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GeneticFitter; \ingroup TMVA. Fitter using a Genetic Algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticGenes *; * *; * *; * Description: *; * Genes definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticGenes.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticGenes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticGenes.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticPopulation *; * *; * *; * Description: *; * Population definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticPopulation.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticPopulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticPopulation.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticRange *; * *; * *; * Description: *; * Range definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticRange.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticRange.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticRange.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Interval *; * *; * *; * Description: *; * Generic range definition (used, eg, in genetic algorithm) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/Interval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDNN *; * *; * *; * Description: *; * A neural network implementation *; * *; * Authors (alphabetical): *; * Simon Pfreundschuh <s.pfreundschuh@gmail.com> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@gmx.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodDNN; \ingroup TMVA; Deep Neural Network Implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDNN.cxx:162,integrat,integrated,162,tmva/tmva/src/MethodDNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDNN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDNN *; * *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Peter Speckmayer <peter.speckmayer@gmx.at> - CERN, Switzerland *; * Simon Pfreundschuh <s.pfreundschuh@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; //#pragma once",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDNN.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/MethodDNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDNN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitWrapper *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MinuitWrapper; \ingroup TMVA; Wrapper around MINUIT; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx:162,integrat,integrated,162,tmva/tmva/src/MinuitWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitWrapper *; * *; * *; * Description: *; * Wrapper around MINUIT *; * *; * Authors (alphabetical): *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitWrapper.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/MinuitWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitWrapper.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticAlgorithm *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GeneticAlgorithm; \ingroup TMVA. Base definition for genetic algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticAlgorithm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticGenes *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticGenes.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticGenes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticGenes.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticPopulation *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GeneticPopulation; \ingroup TMVA. Population definition for genetic algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticPopulation.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticPopulation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticPopulation.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticRange *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; * File and Version Information: *; **********************************************************************************/; /*! \class TMVA::GeneticRange; \ingroup TMVA. Range definition for genetic algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticRange.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticRange.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticRange.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::Interval *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; * File and Version Information: *; **********************************************************************************/; /*! \class TMVA::Interval; \ingroup TMVA. The TMVA::Interval Class. Interval definition, continuous and discrete. - Interval(min,max) : a continous interval [min,max]; - Interval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:; min, min+step, min+2*step,...., min+(n-1)*step, min+n*step=max. e.g.:. - Interval(1,5,5) = 1,2,3,4,5; - Interval(.5,1.,6) = .5, .6., .7, .8, .9, 1.0. Note: **bin** counting starts from ZERO unlike in ROOT histograms. - Interval definition, continuous and discrete. - Interval(min,max) : a continous interval [min,max]; - Interval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:. min, min+step, min+2*step,...., min+(n-1)*step=max. e.g.:. - Interval(1,5,5)=1,2,3,4,5 <br>; - Interval(.5,1.,6)= .5, .6., .7, .8, .9, 1.0 <br>. ~~~ {.cpp}; Example: Interval(.5,1.,6). [ min max ]; -----------------------------------------------; | | | | | |; .5 .6 .7 .8 .9 1.0. bin 0 1 2 3 4 5; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Interval.cxx:162,integrat,integrated,162,tmva/tmva/src/Interval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Interval.cxx,3,"['continuous', 'integrat']","['continuous', 'integrated']"
Deployability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodKNN *; * *; * *; * Description: *; * Analysis of k-nearest neighbor *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodKNN.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/MethodKNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodKNN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodKNN *; * *; * *; * Description: *; * Implementation *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodKNN; \ingroup TMVA. Analysis of k-nearest neighbor. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:160,integrat,integrated,160,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ModulekNN *; * *; * *; * Description: *; * Implementation *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::kNN; \ingroup TMVA; kNN::Event describes point in input variable vector-space, with; additional functionality like distance between points; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:160,integrat,integrated,160,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ModulekNN *; * *; * *; * Description: *; * Module for k-nearest neighbor algorithm *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/ModulekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Node *; * *; * *; * Description: *; * kd-tree (binary tree) template *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/NodekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoam *; * *; * *; * Description: *; * Class for PDEFoam object *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamCell *; * *; * *; * Description: *; * Objects of this class are hyperrectangular cells organized in *; * the binary tree. Special algoritm for encoding relative *; * positioning of the cells saves total memory allocation needed *; * for the system of cells. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamCell.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/PDEFoamCell.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamCell.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamVect *; * *; * *; * Description: *; * Auxiliary class PDEFoamVect of n-dimensional vector, with dynamic *; * allocation used for the cartesian geometry of the PDEFoam cells *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamVect.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/PDEFoamVect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamVect.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamVect *; * *; * *; * Description: *; * Auxiliary class PDEFoamVect of n-dimensional vector, with dynamic *; * allocation used for the cartesian geometry of the PDEFoam cells *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamVect; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamVect.cxx:206,integrat,integrated,206,tmva/tmva/src/PDEFoamVect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamVect.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: S.Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoam *; * *; * *; * Description: *; * Implementations *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoam; \ingroup TMVA. Implementation of PDEFoam. The PDEFoam method is an extension of the PDERS method, which uses; self-adapting binning to divide the multi-dimensional phase space; in a finite number of hyper-rectangles (boxes). For a given number of boxes, the binning algorithm adjusts the size; and position of the boxes inside the multidimensional phase space,; minimizing the variance of the signal and background densities inside; the boxes. The binned density information is stored in binary trees,; allowing for a very fast and memory-efficient classification of; events. The implementation of the PDEFoam is based on the monte-carlo; integration package TFoam included in the analysis package ROOT. The class TMVA::PDEFoam defines the default interface for the; PDEFoam variants:. - PDEFoamEvent; - PDEFoamDiscriminant; - PDEFoamTarget; - PDEFoamMultiTarget; - PDEFoamDecisionTree. Per default PDEFoam stores in the cells the number of events (event; weights) and therefore acts as an event density estima",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:205,integrat,integrated,205,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: S.Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamCell *; * *; * *; * Description: *; * Objects of this class are hyperrectangular cells organized in *; * the binary tree. Special algoritm for encoding relative *; * positioning of the cells saves total memory allocation needed *; * for the system of cells. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamCell; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamCell.cxx:205,integrat,integrated,205,tmva/tmva/src/PDEFoamCell.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamCell.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : MethodPDEFoam *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Original author of the TFoam implementation: *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodPDEFoam; \ingroup TMVA. The PDEFoam method is an extension of the PDERS method, which; divides the multi-dimensional phase space in a finite number of; hyper-rectangles (cells) of constant event density. This ""foam"" of; cells is filled with averaged probability-density information; sampled from a training event sample. For a given number of cells, the binning algorithm adjusts the size; and position of the cells inside the multidimensional phase space; based on a binary-split algorithm, minimizing the variance of the; event density in the cell.; The binned event density information of the final foam is stored in; binary trees, allowing for a fast and memory-efficient; classification of events. The implementation of PDEFoam is based on the Monte-Carlo; integration package TFoam included in the analysis package ROOT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:195,integrat,integrated,195,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : MethodPDEFoam *; * *; * *; * Description: *; * The PDEFoam method is an extension of the PDERS method, which divides *; * the multi-dimensional phase space in a finite number of hyper-rectangles *; * (cells) of constant event density. This ""foam"" of cells is filled with *; * averaged probability-density information sampled from a training event *; * sample. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Original author of the TFoam implementation: *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDEFoam.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/MethodPDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDEFoam.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDensityBase *; * *; * *; * Description: *; * Class PDEFoamDensityBase is an Abstract class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDensityBase.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamDensityBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDensityBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDensityBase *; * *; * *; * Description: *; * This class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDensityBase::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDensityBase; \ingroup TMVA. This is an abstract class, which provides an interface for a; PDEFoam density estimator. Derived classes have to implement the; Density(...) function, which returns the density of a certain; quantity at a given phase-space point during the foam build-up. Variants of PDEFoamDensityBase are:. - PDEFoamEventDensity; - PDEFoamDiscriminantDensity; - PDEFoamTargetDensity; - PDEFoamDecisionTreeDensity. Usage:. The user has to instantiate a child class of PDEFoamDensityBase and; set the pointer to the owner, which is a PDEFoam object:. PDEFoamDensityBase *dens = new MyDensity();; pdefoam->SetDensity(dens);. Aft",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDensityBase.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamDensityBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDensityBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminant *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the discriminant D *; * = N_sig / (N_bg + N_sig) with every cell, as well as the *; * statistical error on the discriminant. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminant *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDiscriminant; \ingroup TMVA. This PDEFoam variant stores in every cell the discriminant. D = #events with given class / total number of events. as well as the statistical error on the discriminant. It therefore; acts as a discriminant estimator. It should be booked together; with the PDEFoamDiscriminantDensity density estimator, which; returns the discriminant density at a given phase space point; during the foam build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamDiscriminant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminantDensity *; * *; * *; * Description: *; * Class PDEFoamDiscriminantDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminantDensity.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamDiscriminantDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminantDensity.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminantDensity *; * *; * *; * Description: *; * The TFDSITR class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDiscriminantDensity::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDiscriminantDensity; \ingroup TMVA. This is a concrete implementation of PDEFoam. Density(...); estimates the discriminant density at a given phase-space point; using range-searching. The discriminant D is defined as. D = #events with given class / total number of events; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminantDensity.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamDiscriminantDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminantDensity.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEvent *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the number of *; * events with every cell, as well as the statistical error on *; * the event number. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEvent.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamEvent.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEvent.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEvent *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamEvent; \ingroup TMVA; This PDEFoam variant stores in every cell the sum of event weights; and the sum of the squared event weights. It therefore acts as; event density estimator. It should be booked together with the; PDEFoamEventDensity density estimator, which returns the event; weight density at a given phase space point during the foam; build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEvent.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEvent.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEventDensity *; * *; * *; * Description: *; * Class PDEFoamEventDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEventDensity.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamEventDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEventDensity.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEventDensity *; * *; * *; * Description: *; * The TFDSITR class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamEventDensity::Density() does *; * this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamEventDensity; \ingroup TMVA; This is a concrete implementation of PDEFoam. Density(...); estimates the event (weight) density at a given phase-space point; using range-searching.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEventDensity.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamEventDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEventDensity.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamMultiTarget *; * *; * *; * Description: *; * Concrete PDEFoamEvent sub-class. This foam stores the number *; * of events with every cell, as well as the statistical error on *; * the event number. It overrides GetCellValue() for projecting *; * the target values given an incomplete event map with *; * N_variables < dimension of foam. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamMultiTarget *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamMultiTarget; \ingroup TMVA; This PDEFoam variant is used to estimate multiple targets by; creating an event density foam (PDEFoamEvent), which has dimension:. dimension = number of variables + number targets. This PDEFoam variant stores in every cell the sum of event weights; and the sum of the squared event weights. During evaluation for a; given event, which has only variables and no targets (number of; event variables is smaller than the foam dimension), the targets; are estimated by finding all cells, which correspond to this event; and calculate the Mean (or Mpv, depending on the ETargetSelection); cell center weighted by the event density in the cell. This PDEFoam variant should be booked together with the; PDEFoamEventDensity density estimator, which returns the event; weight density at a given phase space point during the foam; build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamMultiTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTarget *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the first target *; * (index 0) with every cell, as well as the statistical error on *; * the target. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTarget.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTarget.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTarget *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamTarget; \ingroup TMVA; This PDEFoam variant stores in every cell the average target; fTarget (see the Constructor) as well as the statistical error on; the target fTarget. It therefore acts as a target estimator. It; should be booked together with the PDEFoamTargetDensity density; estimator, which returns the target fTarget density at a given; phase space point during the foam build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTargetDensity *; * *; * *; * Description: *; * Class PDEFoamTargetDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTargetDensity.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamTargetDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTargetDensity.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTargetDensity *; * *; * *; * Description: *; * The TFDSITR class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamTargetDensity::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamTargetDensity; \ingroup TMVA; This is a concrete implementation of PDEFoam. Density(...); estimates the target density (target number: fTarget) at a given; phase-space point using range-searching.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTargetDensity.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamTargetDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTargetDensity.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva $Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing Flatten/Deflatten on the Reference architecture //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.cxx:163,integrat,integrated,163,tmva/tmva/test/DNN/CNN/TestReshape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Author: Anirudh Dagar, 2020; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyTorch *; * *; * *; * Description: *; * Interface for PyTorch python based scientific package supporting *; * automatic differentiation for machine learning. *; * *; * Authors (alphabetical): *; * Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee *; * *; * Copyright (c) 2020: *; * CERN, Switzerland *; * IIT, Roorkee *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyTorch.h:171,integrat,integrated,171,tmva/pymva/inc/TMVA/MethodPyTorch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyTorch.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta 2021; /**********************************************************************************; * Project : TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package : TMVA *; * Function: TMVA::Experimental::SOFIE::PyKeras::Parse *; * *; * Description: *; * Parser function for translating Keras .h5 model to RModel object *; * *; * Example Usage: *; * ~~~ {.cpp} *; * using TMVA::Experimental::SOFIE; *; * RModel model = PyKeras::Parse(""trained_model_dense.h5""); *; * ~~~ *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:175,integrat,integrated,175,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta 2021; /**********************************************************************************; * Project : TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package : TMVA *; * Function: TMVA::Experimental::SOFIE::PyTorch::Parse *; * *; * Description: *; * Parser function for translating PyTorch .pt model to RModel object *; * *; * Example Usage: *; * ~~~ {.cpp} *; * using TMVA::Experimental::SOFIE; *; * // Building the vector of input tensor shapes *; * std::vector<size_t> s1{120,1}; *; * std::vector<std::vector<size_t>> inputShape{s1}; *; * RModel model = PyTorch::Parse(""trained_model_dense.pt"",inputShape); *; * ~~~ *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_PyTorch.cxx:175,integrat,integrated,175,tmva/pymva/src/RModelParser_PyTorch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_PyTorch.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta, 2021; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * Functionality for parsing a saved Keras .H5 model into RModel object *; * *; * Authors (alphabetical): *; * Sanjiban Sengupta <sanjiban.sg@gmail.com> *; * *; * Copyright (c) 2021: *; * CERN, Switzerland *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_Keras.h:175,integrat,integrated,175,tmva/pymva/inc/TMVA/RModelParser_Keras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_Keras.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta, 2021; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * Functionality for parsing a saved PyTorch .PT model into RModel object *; * *; * Authors (alphabetical): *; * Sanjiban Sengupta <sanjiban.sg@gmail.com> *; * *; * Copyright (c) 2021: *; * CERN, Switzerland *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_PyTorch.h:175,integrat,integrated,175,tmva/pymva/inc/TMVA/RModelParser_PyTorch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_PyTorch.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Author: Stefan Wunsch; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyKeras *; * *; * *; * Description: *; * Interface for Keras python package which is a wrapper for the Theano and *; * Tensorflow libraries *; * *; * Authors (alphabetical): *; * Stefan Wunsch <stefan.wunsch@cern.ch> - KIT, Germany *; * *; * Copyright (c) 2016: *; * CERN, Switzerland *; * KIT, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyKeras.h:165,integrat,integrated,165,tmva/pymva/inc/TMVA/MethodPyKeras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyKeras.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015, Stefan Wunsch 2017; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PyMethodBase *; * *; * Description: *; * Virtual base class for all MVA method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:221,integrat,integrated,221,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015, Stefan Wunsch 2017; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PyMethodBase *; * Web : http://oproject.org *; * *; * Description: *; * Virtual base class for all MVA method based on Python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/PyMethodBase.h:221,integrat,integrated,221,tmva/pymva/inc/TMVA/PyMethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/PyMethodBase.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyAdaBoost *; * Web : http://oproject.org *; * *; * Description: *; * AdaBoost Classifier from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyAdaBoost.cxx:201,integrat,integrated,201,tmva/pymva/src/MethodPyAdaBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyAdaBoost.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyAdaBoost *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn package AdaBoostClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h:201,integrat,integrated,201,tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyGTB *; * Web : http://oproject.org *; * *; * Description: *; * GradientBoostingClassifier Classifiear from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyGTB.cxx:201,integrat,integrated,201,tmva/pymva/src/MethodPyGTB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyGTB.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyGTB *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn Package GradientBoostingClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h:201,integrat,integrated,201,tmva/pymva/inc/TMVA/MethodPyGTB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyRandomForest *; * Web : http://oproject.org *; * *; * Description: *; * Random Forest Classifiear from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyRandomForest.cxx:201,integrat,integrated,201,tmva/pymva/src/MethodPyRandomForest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyRandomForest.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyRandomForest *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn Package RandomForestClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h:201,integrat,integrated,201,tmva/pymva/inc/TMVA/MethodPyRandomForest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodC50 *; * Web : http://oproject.org *; * *; * Description: *; * Decision Trees and Rule-Based Models *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodC50.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodC50.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodC50.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRSNNS *; * Web : http://oproject.org *; * *; * Description: *; * Neural Networks in R using the Stuttgart Neural Network Simulator *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSNNS.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodRSNNS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSNNS.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRSVM- *; * Web : http://oproject.org *; * *; * Description: *; * Support Vector Machines *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSVM.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodRSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSVM.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRXGB *; * Web : http://oproject.org *; * *; * Description: *; * R eXtreme Gradient Boosting *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRXGB.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodRXGB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRXGB.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodBase *; * *; * Description: *; * Virtual base class for all MVA method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/RMethodBase.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/RMethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/RMethodBase.h,2,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodC50 *; * *; * Description: *; * R´s Package C50 method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodC50.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodC50.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodC50.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodRSNNS *; * *; * Description: *; * R´s Package RSNNS method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSNNS.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodRSNNS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSNNS.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodRSVM *; * *; * Description: *; * R´s Package RSVM method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodRXGB *; * *; * Description: *; * R´s Package xgboost method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRXGB.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodRXGB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRXGB.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Downsample method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Convolutional Layer //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayer.h:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayer.h,2,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Downsample method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Convolutional Layer on the GPU. //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx,2,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCuda.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestRotateWeightsCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCuda.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Rotate Weights function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.h:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestRotateWeights.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling Layer on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Downsample function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx,3,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling Layer on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Downsample function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Siddhartha Rao Kamalakara; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Method DL for Regression *; * *; * Authors (alphabetical): *; * Siddhartha Rao Kamalakara <srk97c@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestRegressionMethodDL.cxx:180,integrat,integrated,180,tmva/tmva/test/DNN/TestRegressionMethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestRegressionMethodDL.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Backpropagation *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Backward Pass //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvBackpropagation.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvBackpropagation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvBackpropagation.cxx,3,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Features *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Forward Pass *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Forward Pass //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPass.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestForwardPass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPass.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Forward Pass for the CPU *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Forward Pass //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPassCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestForwardPassCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPassCpu.cxx,4,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Loss *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Loss Function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLoss.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetLoss.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLoss.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Loss for CPU *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Loss Function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLossCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetLossCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLossCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Prediction *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Prediction //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPrediction.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetPrediction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPrediction.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Prediction for CPU *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Prediction //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPredictionCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetPredictionCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPredictionCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.h:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer for the CPU backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer for the Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMinimization.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the method Im2col //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestIm2Col.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the method Im2col //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestIm2ColCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Method DL for Conv Net *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Method DL for Conv Net for the Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMethodDLCNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Rotate Weights function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestRotateWeights.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Rotate Weights function on the CPU //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestRotateWeightsCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDLGradientDescent *; * *; * *; * Description: *; * Deel Learning Minimizers *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/cnn:$Id$Ndl; // Authors: Vladimir Ilievski, Lorenzo Moneta, Saurav Shekhar, Ravi Kiran; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDL *; * *; * *; * Description: *; * Deep Neural Network Method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx:220,integrat,integrated,220,tmva/tmva/src/MethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn/gru:$Id$; // Author: Surya S Dwivedi 03/07/19; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicGRULayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Surya S Dwivedi <surya2191997@gmail.com> - IIT Kharagpur, India *; * *; * Copyright (c) 2005-2019: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // This class implements the GRU layer. GRU is a variant of vanilla; // RNN which is capable of learning long range dependencies.; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:183,integrat,integrated,183,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn/lstm:$Id$; // Author: Surya S Dwivedi 27/05/19; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicLSTMLayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Surya S Dwivedi <surya2191997@gmail.com> - IIT Kharagpur, India *; * *; * Copyright (c) 2005-2019: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // This class implements the LSTM layer. LSTM is a variant of vanilla; // RNN which is capable of learning long range dependencies.; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h:184,integrat,integrated,184,tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn/rnn:$Id$; // Author: Saurav Shekhar 19/07/17; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicRNNLayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; * *; * Copyright (c) 2005-2015: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // <Description> //; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h:182,integrat,integrated,182,tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for Adadelta optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdadeltaOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLAdadeltaOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdadeltaOptimizationCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for Adagrad optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdagradOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLAdagradOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdagradOptimizationCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for Adam optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdamOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLAdamOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdamOptimizationCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for RMSProp optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLRMSPropOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLRMSPropOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLRMSPropOptimizationCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Various Optimizers for training DeepNet *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimization.h:167,integrat,integrated,167,tmva/tmva/test/DNN/TestOptimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimization.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing various optimizers for Cpu Backend *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimizationCpu.cxx,3,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TAdadelta *; * *; * *; * Description: *; * Adadelta Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Adadelta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TAdagrad *; * *; * *; * Description: *; * Adagrad Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adagrad.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Adagrad.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adagrad.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TAdam *; * *; * *; * Description: *; * Adam Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Adam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TRMSProp *; * *; * *; * Description: *; * RMSProp Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/RMSProp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSGD *; * *; * *; * Description: *; * Stochastic Batch Gradient Descent Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/SGD.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/SGD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/SGD.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VOptimizer *; * *; * *; * Description: *; * General Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018 : *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Optimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski, Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for SGD optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLSGDOptimizationCpu.cxx:186,integrat,integrated,186,tmva/tmva/test/DNN/TestMethodDLSGDOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLSGDOptimizationCpu.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski, Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for various optimizers *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLOptimization.h:186,integrat,integrated,186,tmva/tmva/test/DNN/TestMethodDLOptimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLOptimization.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski, Saurav Shekhar; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDL *; * *; * *; * Description: *; * Deep Neural Network Method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/MethodDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TConvLayer *; * *; * *; * Description: *; * Convolutional Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDeepNet *; * *; * *; * Description: *; * Deep Neural Network *; * *; * Authors (alphabetical): *; * Akshay Vashistha <akshayvashistha1995@gmail.com> - CERN, Switzerland *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Saurav Shekhar <sauravshekhar01@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TGeneralLayer *; * *; * *; * Description: *; * General Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMaxPoolLayer *; * *; * *; * Description: *; * Max Pool Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TReshapeLayer *; * *; * *; * Description: *; * Reshape Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/ReshapeLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/ReshapeLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/ReshapeLayer.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Specialization of the Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; //////////////////////////////////////////////////////////////////////////; // Partial specialization of the TTensorDataLoader class to adapt //; // it to the TMatrix class. Also the data transfer is kept simple, //; // since this implementation (being intended as reference and fallback) //; // is not optimized for performance. //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Specialization of the Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ///////////////////////////////////////////////////////////////////; // Specializations of Copy functions for the TensorDataLoader //; // specialized for the reference architecture. //; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx:172,integrat,integrated,172,tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx,1,['integrat'],['integrated']
Deployability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h,1,['integrat'],['integrated']
Deployability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1800,Update,Update,1800,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['Update'],['Update']
Deployability,"// @(#)root/xmlparser:$Id$; // Author: Jose Lo 12/4/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TDomParser; \ingroup IO. DOM stands for the Document Object Model; this is an API for; accessing XML or HTML structured documents.; The Document Object Model is a platform and language-neutral; interface that will allow programs and scripts to dynamically; access and update the content, structure and style of documents. The parser returns a tree built during the document analysis.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx:696,update,update,696,io/xmlparser/src/TDOMParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx,1,['update'],['update']
Deployability,// A C++ destructor stack frame in which memory was released. Used for; // miscellaneous false positive suppression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:52,release,released,52,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['release'],['released']
Deployability,// A HWPressureEvent describes an increase in backend pressure caused by; // the presence of data dependencies or unavailability of pipeline resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h:132,pipeline,pipeline,132,interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,1,['pipeline'],['pipeline']
Deployability,// A HWStallEvent represents a pipeline stall caused by the lack of hardware; // resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h:31,pipeline,pipeline,31,interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,1,['pipeline'],['pipeline']
Deployability,"// A PipelineConsumer applies a set of visitors to every consumed Record, in the; // order by which the visitors are added to the pipeline in the order of; // appearance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/FDRRecordConsumer.h:5,Pipeline,PipelineConsumer,5,interpreter/llvm-project/llvm/include/llvm/XRay/FDRRecordConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/FDRRecordConsumer.h,2,"['Pipeline', 'pipeline']","['PipelineConsumer', 'pipeline']"
Deployability,"// A SchedWrite may specify a number of cycles in which a resource group; // is reserved. For example (on target x86; cpu Haswell):; //; // SchedWriteRes<[HWPort0, HWPort1, HWPort01]> {; // let ReleaseAtCycles = [2, 2, 3];; // }; //; // This means:; // Resource units HWPort0 and HWPort1 are both used for 2cy.; // Resource group HWPort01 is the union of HWPort0 and HWPort1.; // Since this write touches both HWPort0 and HWPort1 for 2cy, HWPort01; // will not be usable for 2 entire cycles from instruction issue.; //; // On top of those 2cy, SchedWriteRes explicitly specifies an extra latency; // of 3 cycles for HWPort01. This tool assumes that the 3cy latency is an; // extra delay on top of the 2 cycles latency.; // During those extra cycles, HWPort01 is not usable by other instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:194,Release,ReleaseAtCycles,194,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,1,['Release'],['ReleaseAtCycles']
Deployability,"// A binary image could be unloaded and then reloaded at different; // place, so update binary load address.; // Only update for the first executable segment and assume all other; // segments are loaded at consecutive memory addresses, which is the case on; // X64.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.cpp:81,update,update,81,interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.cpp,2,['update'],['update']
Deployability,// A bitmask of busy processor resource units.; // This field is set to zero only if execution is not delayed during this; // cycle because of unavailable pipeline resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:155,pipeline,pipeline,155,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['pipeline'],['pipeline']
Deployability,"// A brief description of the algorithm:; // First, we compute what should define the new def, using the SSA; // construction algorithm.; // Then, we update the defs below us (and any new phi nodes) in the graph to; // point to the correct new defs, to ensure we only have one variable, and no; // disconnected stores.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:150,update,update,150,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['update'],['update']
Deployability,"// A call site could become less desirable for inlining because of the size; // growth from prior inlining into the callee. This method is used to lazily; // update the desirability of a call site if it's decreasing. It is only; // called on pop(), not every time the desirability changes. When the; // desirability of the front call site decreases, an updated one would be; // pushed right back into the heap. For simplicity, those cases where the; // desirability of a call site increases are ignored here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineOrder.cpp:158,update,update,158,interpreter/llvm-project/llvm/lib/Analysis/InlineOrder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineOrder.cpp,2,['update'],"['update', 'updated']"
Deployability,// A class to evaluate target's instructions and update the cell maps.; // This is used internally by the bit tracker. A target that wants to; // utilize this should implement the evaluation functions (noted below); // in a subclass of this class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h:49,update,update,49,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,1,['update'],['update']
Deployability,"// A d j u s t g l o b a l 1 D i n t e g r a t i o n p r e c i s i o n; // ----------------------------------------------------------------------------; // Example: Change global precision for 1D integrals from 1e-7 to 1e-6; //; // The relative epsilon (change as fraction of current best integral estimate) and; // absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; // separately. For most p.d.f integrals the relative change criterium is the most important,; // however for certain non-p.d.f functions that integrate out to zero a separate absolute; // change criterium is necessary to declare convergence of the integral; //; // NB: This change is for illustration only. In general the precision should be at least 1e-7; // for normalization integrals for MINUIT to succeed.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:545,integrat,integrate,545,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrate']
Deployability,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:217,integrat,integration,217,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"// A dependency-breaking instruction doesn't have to wait on the register; // input operands, and it is often optimized at register renaming stage.; // Update RAW dependencies if this instruction is not a dependency-breaking; // instruction. A dependency-breaking instruction is a zero-latency; // instruction that doesn't consume hardware resources.; // An example of dependency-breaking instruction on X86 is a zero-idiom XOR.; //; // We also don't update data dependencies for instructions that have been; // eliminated at register renaming stage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:152,Update,Update,152,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,// A function may be spilt into multiple non-continuous address ranges. We use; // this to set whether start a function range is the real entry of the; // function and also set false to the non-function label.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h:45,continuous,continuous,45,interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,1,['continuous'],['continuous']
Deployability,// A function object that creates a simple pass pipeline to apply to each; // module as it passes through the IRTransformLayer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithOptimizingIRTransform/LLJITWithOptimizingIRTransform.cpp,1,['pipeline'],['pipeline']
Deployability,"// A gcc tool has an ""integrated"" assembler that it will call to produce an; // object. Let it use that assembler so that we don't have to deal with; // assembly syntax incompatibilities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:22,integrat,integrated,22,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['integrat'],['integrated']
Deployability,// A general note: the vectorizer must use BoUpSLP::eraseInstruction() to; // delete instructions.; // Update DFS numbers now so that we can use them for ordering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:103,Update,Update,103,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Update'],['Update']
Deployability,// A global Random Number Generator to randomize configurations.; // FIXME: Move random number generation into an object and make it seedable for; // unit tests.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h:49,configurat,configurations,49,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,1,['configurat'],['configurations']
Deployability,// A has a store dependence on B (or on some load within GroupB) and; // is part of a store group. Release A's group to prevent illegal; // sinking of A below B. A will then be free to form another group; // with instructions that precede it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:99,Release,Release,99,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['Release'],['Release']
Deployability,// A helper for transformScopes. Clone the blocks in the scope (excluding the; // PreEntryBlock) to split into a hot path and a cold path and update the PHIs; // at the exit block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['update'],['update']
Deployability,"// A list of known driver suffixes. Suffixes are compared against the; // program name in order. If there is a match, the frontend type is updated as; // necessary by applying the ModeFlag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp:139,update,updated,139,interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp,1,['update'],['updated']
Deployability,// A list of virtual registers for which to update SSA form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TailDuplicator.h:44,update,update,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/TailDuplicator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TailDuplicator.h,1,['update'],['update']
Deployability,// A loop is moved from index 'from' to an index 'to'. Update the Dependence; // matrix by exchanging the two columns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:55,Update,Update,55,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,1,['Update'],['Update']
Deployability,"// A mask of busy resource units. It defaults to the empty set (i.e. a zero; // mask), and it is cleared at the beginning of every cycle.; // It is updated every time the scheduler fails to issue an instruction from; // the ready set due to unavailable pipeline resources.; // Each bit of the mask represents an unavailable resource.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:148,update,updated,148,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,2,"['pipeline', 'update']","['pipeline', 'updated']"
Deployability,"// A missing release manifests as a leak, so treat as a non-fatal error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:13,release,release,13,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['release']
Deployability,"// A mock of the RNTuple class, used to write a ""future version"" of RNTuple to a file.; // The idea is:; // 1. we write a ""RXTuple"" to a file, with a schema identical to RNTuple + some; // hypothetical future fields; // 2. we read back the file and patch the name to transmute the on-disk; // binary to a serialized RNTuple with some additional fields; // 3. we read back the patched file to ensure the current version of RNTuple can handle; // schema evolution in a fwd-compatible way.; // For ease of patching, the name of this struct has the same length as that of RNTuple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/RXTuple.hxx:249,patch,patch,249,tree/ntuple/v7/test/RXTuple.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/RXTuple.hxx,3,['patch'],"['patch', 'patched', 'patching']"
Deployability,"// A move mask is splitted into two parts:; // bits 0 ~ 7 correspond to D0 ~ D7 regs; // bits 8 ~ 15 correspond to A0 ~ A7 regs; //; // In the assembly syntax, we want to use a dash to replace; // a continuous range of registers. For example, if the bit; // mask is 0b101110, we want to print ""D1-D3,D5"" instead of; // ""D1,D2,D3,D4,D5"".; //; // However, we don't want a dash to cross between data registers; // and address registers (i.e. there shouldn't be a dash crossing; // bit 7 and 8) since that is not really intuitive. So we simply; // print the data register part (bit 0~7) and address register part; // separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp:199,continuous,continuous,199,interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,1,['continuous'],['continuous']
Deployability,// A multiplication of a constant with some other value. Update; // the map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:57,Update,Update,57,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Update'],['Update']
Deployability,"// A priori, a `TDirectory` object is assumed to not have shared ownership.; // If it is, let's rely on the user to update the bit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:116,update,update,116,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,1,['update'],['update']
Deployability,"// A release fence requires that all stores complete before it, but does; // not prevent the reordering of following loads 'before' the fence. As a; // result, we don't need to consider it as writing to memory and don't need; // to advance the generation. We do need to prevent DSE across the fence,; // but that's handled above.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:5,release,release,5,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['release'],['release']
Deployability,"// A release fence requires that all stores complete before it, but does; // not prevent the reordering of following loads or stores 'before' the; // fence. As a result, we look past it when finding a dependency for; // loads. DSE uses this to find preceding stores to delete and thus we; // can't bypass the fence if the query instruction is a store.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:5,release,release,5,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['release'],['release']
Deployability,"// A self-variable points to the SFunction itself.; // A rewrite must introduce the variable with a null definition, and update; // it after 'this' has been rewritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:121,update,update,121,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['update'],['update']
Deployability,// A set of live-in regs for each MBB which is used to update LV; // efficiently also with large functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp:55,update,update,55,interpreter/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp,1,['update'],['update']
Deployability,"// A significant optimization not implemented here is assuming that alloca; // addresses are not equal to incoming argument values. They don't *alias*,; // as we say, but that doesn't mean they aren't equal, so we take a; // conservative approach.; //; // This is inspired in part by C++11 5.10p1:; // ""Two pointers of the same type compare equal if and only if they are both; // null, both point to the same function, or both represent the same; // address.""; //; // This is pretty permissive.; //; // It's also partly due to C11 6.5.9p6:; // ""Two pointers compare equal if and only if both are null pointers, both are; // pointers to the same object (including a pointer to an object and a; // subobject at its beginning) or function, both are pointers to one past the; // last element of the same array object, or one is a pointer to one past the; // end of one array object and the other is a pointer to the start of a; // different array object that happens to immediately follow the first array; // object in the address space.); //; // C11's version is more restrictive, however there's no reason why an argument; // couldn't be a one-past-the-end value for a stack object in the caller and be; // equal to the beginning of a stack object in the callee.; //; // If the C and C++ standards are ever made sufficiently restrictive in this; // area, it may be possible to update LLVM's semantics accordingly and reinstate; // this optimization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:1375,update,update,1375,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['update'],['update']
Deployability,"// A special combine for the vqdmulh family of instructions. This is one of the; // potential set of patterns that could patch this instruction. The base pattern; // you would expect to be min(max(ashr(mul(mul(sext(x), 2), sext(y)), 16))).; // This matches the different min(max(ashr(mul(mul(sext(x), sext(y)), 2), 16))),; // which llvm will have optimized to min(ashr(mul(sext(x), sext(y)), 15))) as; // the max is unnecessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:121,patch,patch,121,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['patch'],['patch']
Deployability,"// A splat of an inserted scalar constant becomes a vector constant:; // shuf (inselt ?, C, IndexC), undef, <IndexC, IndexC...> --> <C, C...>; // NOTE: We may have commuted above, so analyze the updated Indices, not the; // original mask constant.; // NOTE: This transformation depends on the value of the mask which is not; // known at compile time for scalable vectors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:195,update,updated,195,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['update'],['updated']
Deployability,"// A struct to define how the data stream should be patched. For Indexed; // profiling, only uint64_t data type is needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp:52,patch,patched,52,interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp,1,['patch'],['patched']
Deployability,// A template-id that refers to a type was parsed into a; // template-id annotation in a context where we weren't allowed; // to produce a type annotation token. Update the template-id; // annotation token to a type annotation token now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:162,Update,Update,162,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['Update'],['Update']
Deployability,// A vctp64 returning a v4i1 is converted to return a v2i1. Rename; // the function and deal with it below in UpgradeIntrinsicCall.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:110,Upgrade,UpgradeIntrinsicCall,110,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['Upgrade'],['UpgradeIntrinsicCall']
Deployability,"// A wrapper around SCEV::isKnownPredicate.; // Looks for cases where we're interested in comparing for equality.; // If both X and Y have been identically sign or zero extended,; // it strips off the (confusing) extensions before invoking; // SCEV::isKnownPredicate. Perhaps, someday, the ScalarEvolution package; // will be similarly updated.; //; // If SCEV::isKnownPredicate can't prove the predicate,; // we try simple subtraction, which seems to help in some cases; // involving symbolics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:336,update,updated,336,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['update'],['updated']
Deployability,// A wrapper class to abstract writer stream with support of bytes; // back patching.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp:76,patch,patching,76,interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp,1,['patch'],['patching']
Deployability,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:213,integrat,integrating,213,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,8,['integrat'],"['integrated', 'integrating', 'integration']"
Deployability,"// AA might be used later for instruction scheduling, and we need it to be; // able to deduce the correct aliasing releationships between pointers; // derived from the alloca being remapped and the target of that remapping.; // The only safe way, without directly informing AA about the remapping; // somehow, is to directly update the IR to reflect the change being made; // here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:325,update,update,325,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['update'],['update']
Deployability,"// ADAM update the weights.; // Weight = Weight - alpha * M / (sqrt(V) + epsilon)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx:8,update,update,8,tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx,2,['update'],['update']
Deployability,"// ADCE does not need DominatorTree, but require DominatorTree here; // to update analysis if it is already available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:75,update,update,75,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['update'],['update']
Deployability,"// ADCE does not use DominatorTree per se, but it updates it to preserve the; // analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:50,update,updates,50,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['update'],['updates']
Deployability,"// AIX debug for thread local location is not ready. And for integrated as; // mode, the relocatable address for the thread local variable will cause; // linker error. So disable the location attribute generation for thread local; // variables for now.; // FIXME: when TLS debug on AIX is ready, remove this setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:61,integrat,integrated,61,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,1,['integrat'],['integrated']
Deployability,// AMDGCN data layout upgrades.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:22,upgrade,upgrades,22,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrades']
Deployability,"// AMT, disable auto update in camera in order prevent reading quaternions in update of; // model view matrix in Obejct3D function updateMatrixWorld",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:21,update,update,21,ui5/eve7/lib/GlViewerRCore.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js,3,['update'],"['update', 'updateMatrixWorld']"
Deployability,"// AMT: temporary workaround till root pactches are integrated in CMSSW",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveProjections.h:52,integrat,integrated,52,graf3d/eve/inc/TEveProjections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveProjections.h,1,['integrat'],['integrated']
Deployability,"// AND instruction will essentially update SF and clear OF, so; // NoSignFlag should be false in the sense that SF is modified by `AND`.; //; // However, the implementation artifically sets `NoSignFlag` to true; // to poison the SF bit; that is to say, if SF is looked at later, the; // optimization (to erase TEST64rr) will be disabled.; //; // The reason to poison SF bit is that SF bit value could be different; // in the `AND` and `TEST` operation; signed bit is not known for `AND`,; // and is known to be 0 as a result of `TEST64rr`.; //; // FIXME: As opposed to poisoning the SF bit directly, consider peeking into; // the AND instruction and using the static information to guide peephole; // optimization if possible. For example, it's possible to fold a; // conditional move into a copy if the relevant EFLAG bits could be deduced; // from an immediate operand of and operation.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['update']
Deployability,// Abort the operation as we can't update all CSR restores.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:35,update,update,35,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// Access key is the; // ""llvm."" + type name + "":"" + reloc type + "":"" + patched imm + ""$"" +; // access string,; // uniquely identifying one relocation.; // The prefix ""llvm."" indicates this is a temporary global, which should; // not be emitted to ELF file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp:72,patch,patched,72,interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,1,['patch'],['patched']
Deployability,"// Accessors for fit options, generator and MCstudy configuration flags; /// Return list of fit options provided by user",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsMCStudyModule.h:52,configurat,configuration,52,roofit/roofitcore/inc/RooAbsMCStudyModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsMCStudyModule.h,1,['configurat'],['configuration']
Deployability,// Account as cost in the original configuration the gain obtained; // with the current slices.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:35,configurat,configuration,35,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['configurat'],['configuration']
Deployability,// Accumulate all call target samples to update the body samples.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h:41,update,update,41,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h,1,['update'],['update']
Deployability,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:357,release,released,357,core/imt/test/testRTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx,1,['release'],['released']
Deployability,// Acquire/Release atomicrmw has properties that matter for arbitrary addresses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:11,Release,Release,11,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['Release'],['Release']
Deployability,// Acquire/Release cmpxchg has properties that matter for arbitrary addresses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:11,Release,Release,11,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['Release'],['Release']
Deployability,// Acquire/Release load/store is not legal for targets without a dmb or; // equivalent available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:11,Release,Release,11,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['Release'],['Release']
Deployability,"// Acquiring a handle is not always successful. In Fuchsia most functions; // return a status code that determines the status of the handle.; // When we split the path based on this status code we know that on one; // path we do have the handle and on the other path the acquire failed.; // This method helps avoiding false positive leak warnings on paths where; // the function failed.; // Moreover, when a handle is known to be zero (the invalid handle),; // we no longer can follow the symbol on the path, becaue the constant; // zero will be used instead of the symbol. We also do not need to release; // an invalid handle, so we remove the corresponding symbol from the state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp:597,release,release,597,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,1,['release'],['release']
Deployability,"// Actually do the update of the thread local gDirectory; // using its object specific lock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:19,update,update,19,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,1,['update'],['update']
Deployability,"// Add DominatorTree node. After seeing all blocks, update to correct; // IDom.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,1,['update'],['update']
Deployability,// Add LTO pipeline tuning option to enable the unified LTO pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:11,pipeline,pipeline,11,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,2,['pipeline'],['pipeline']
Deployability,"// Add Phi node to current block, and update CurrentLVarMap[i]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp:38,update,update,38,interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,1,['update'],['update']
Deployability,// Add PromiseAlloca to Allocas list so that; // 1. updateLayoutIndex could update its index after; // `performOptimizedStructLayout`; // 2. it is processed in insertSpills.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:52,update,updateLayoutIndex,52,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,2,['update'],"['update', 'updateLayoutIndex']"
Deployability,"// Add a box to the stored ones. For that, it will look for; // the box that contains the new data and either replace it; // or updated it.; // Little box is the new Bin to be added",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SparseData.cxx:128,update,updated,128,math/mathcore/src/SparseData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SparseData.cxx,1,['update'],['updated']
Deployability,// Add a dependence to ensure updates if the state changes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:30,update,updates,30,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['updates']
Deployability,"// Add a new chunk for this macro argument. A previous macro argument chunk; // may have been lexed again, so e.g. if the map is; // 0 -> SourceLocation(); // 100 -> Expanded loc #1; // 110 -> SourceLocation(); // and we found a new macro FileID that lexed from offset 105 with length 3,; // the new map will be:; // 0 -> SourceLocation(); // 100 -> Expanded loc #1; // 105 -> Expanded loc #2; // 108 -> Expanded loc #1; // 110 -> SourceLocation(); //; // Since re-lexed macro chunks will always be the same size or less of; // previous chunks, we only need to find where the ending of the new macro; // chunk is mapped to and update the map with new begin/end mappings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:627,update,update,627,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['update'],['update']
Deployability,"// Add a new constant to the cell. This is actually where the cell update; // happens. If a cell has room for more constants, the new constant is added.; // Otherwise, the cell is converted to a ""property"" cell (i.e. a cell that; // will track properties of the associated values, and not the values; // themselves. Care is taken to handle special cases, like ""bottom"", etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstPropagation.cpp:67,update,update,67,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstPropagation.cpp,1,['update'],['update']
Deployability,"// Add a trailing update record, if any. These must go last because we; // lazily load their attached statement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:18,update,update,18,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// Add a verifier pass if requested. We don't have to do this if the action; // requires code generation because there will already be a verifier pass in; // the code-generation pipeline.; // Since we already added a verifier pass above, this; // might even not run the analysis, if previous passes caused no changes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:178,pipeline,pipeline,178,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['pipeline'],['pipeline']
Deployability,// Add an InEdge and update the edge count.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp:21,update,update,21,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,1,['update'],['update']
Deployability,// Add an OutEdge and update the edge count.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,1,['update'],['update']
Deployability,// Add an explicit version min argument for the deployment target. We do this; // after argument translation because -Xarch_ arguments may add a version min; // argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:48,deploy,deployment,48,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,"// Add an unconditional branch to the destination and invert the branch; // condition to jump over it:; // bteqz L1; // =>; // bnez L2; // b L1; // L2:; // If the branch is at the end of its MBB and that has a fall-through block,; // direct the updated conditional branch to the fall-through block. Otherwise,; // split the MBB before the next instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp:245,update,updated,245,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,2,['update'],['updated']
Deployability,// Add any relevant output pass at the end of the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp:50,pipeline,pipeline,50,interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,1,['pipeline'],['pipeline']
Deployability,"// Add callsite metadata for the instruction's location list so that; // it simpler later on to identify which part of the MIB contexts; // are from this particular instruction (including during inlining,; // when the callsite metdata will be updated appropriately).; // FIXME: can this be changed to strip out the matching stack; // context ids from the MIB contexts and not add any callsite; // metadata here to save space?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp:243,update,updated,243,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,1,['update'],['updated']
Deployability,"// Add category dependent of LValueReal used in integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:48,integrat,integration,48,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"// Add configuration paths to interpreter's include files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:7,configurat,configuration,7,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['configurat'],['configuration']
Deployability,"// Add estimated entries processed since last update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:46,update,update,46,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,2,['update'],['update']
Deployability,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:47,integrat,integrated,47,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,"// Add following paths for multiple target installation.; // ${INSTALLDIR}/include/ve-unknown-linux-gnu/c++/v1,; // ${INSTALLDIR}/include/c++/v1,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/VEToolchain.cpp:43,install,installation,43,interpreter/llvm-project/clang/lib/Driver/ToolChains/VEToolchain.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/VEToolchain.cpp,3,"['INSTALL', 'install']","['INSTALLDIR', 'installation']"
Deployability,"// Add induction update using an incorrect block temporarily. The phi node; // will be fixed after VPlan execution. Note that at this point the latch; // block cannot be used, as it does not exist yet.; // TODO: Model increment value in VPlan, by turning the recipe into a; // multi-def and a subclass of VPHeaderPHIRecipe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:17,update,update,17,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,2,['update'],['update']
Deployability,// Add infer address spaces pass to the opt pipeline after inlining; // but before SROA to increase SROA opportunities.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp:44,pipeline,pipeline,44,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp,1,['pipeline'],['pipeline']
Deployability,"// Add insert edges first. Experimentally, for the particular case of two; // blocks that can be merged, with a single successor and single predecessor; // respectively, it is beneficial to have all insert updates first. Deleting; // edges first may lead to unreachable blocks, followed by inserting edges; // making the blocks reachable again. Such DT updates lead to high compile; // times. We add inserts before deletes here to reduce compile time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:206,update,updates,206,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,2,['update'],['updates']
Deployability,"// Add instructions to the SchedGroup bottom up starting from RIter.; // PipelineInstrs is a set of instructions that should not be added to the; // SchedGroup even when the other conditions for adding it are satisfied.; // RIter will be added to the SchedGroup as well, and dependencies will be; // added so that RIter will always be scheduled at the end of the group.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:73,Pipeline,PipelineInstrs,73,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['Pipeline'],['PipelineInstrs']
Deployability,"// Add it to the operand references. If it is added a second time, the; // record won't be updated and it will fail later on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:91,update,updated,91,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['update'],['updated']
Deployability,// Add liveness since updateFromLiveIns now skips this node.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveRangeCalc.cpp:22,update,updateFromLiveIns,22,interpreter/llvm-project/llvm/lib/CodeGen/LiveRangeCalc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveRangeCalc.cpp,1,['update'],['updateFromLiveIns']
Deployability,"// Add methods to the global pool *after* setting hasMoreThanOneDecl, since; // when building a module we keep every method individually and may need to; // update hasMoreThanOneDecl as we add the methods.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:157,update,update,157,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['update']
Deployability,// Add new PHI nodes to the loop exit block and update epilog; // PHIs with the new PHI values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:48,update,update,48,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,1,['update'],['update']
Deployability,"// Add offload include arguments specific for CUDA/HIP. This must happen; // before we -I or -include anything else, because we must pick up the; // CUDA/HIP headers from the particular CUDA/ROCm installation, rather than; // from e.g. /usr/local/include.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:196,install,installation,196,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['install'],['installation']
Deployability,// Add promote kernel arguments pass to the opt pipeline right before; // infer address spaces which is needed to do actual address space; // rewriting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.cpp,1,['pipeline'],['pipeline']
Deployability,"// Add server to list of dependents that are OK for analytical integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:63,integrat,integration,63,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,// Add sizing for address spaces 7 and 8 (fat raw buffers and buffer; // resources) An empty data layout has already been upgraded to G1 by now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:122,upgrade,upgraded,122,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgraded']
Deployability,"// Add the (potentially negative) delta to all the configuration's offset. This is used by; // TBranchElement in the case of split sub-object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:51,configurat,configuration,51,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,5,['configurat'],['configuration']
Deployability,"// Add the (potentially negative) delta to all the configuration's offset. This is used by; // TTBranchElement in the case of split sub-object.; // If opt contains 'func', also print the (mangled) name of the function that will be executed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:51,configurat,configuration,51,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['configurat'],['configuration']
Deployability,// Add the DW_AT_APPLE_origin attribute to Compile Unit die if we have; // an install name and the DWARF doesn't have the attribute yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:78,install,install,78,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,1,['install'],['install']
Deployability,// Add the cloned blocks to the PHIs of the exit blocks. ExitBlock is null for; // the top-level region but we don't need to add PHIs. The trivial PHIs; // inserted above will be updated here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:179,update,updated,179,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['update'],['updated']
Deployability,// Add the core function simplification pipeline nested inside the; // CGSCC walk.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:40,pipeline,pipeline,40,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,// Add the core optimizing pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:27,pipeline,pipeline,27,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,// Add the core simplification pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:31,pipeline,pipeline,31,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['pipeline'],['pipeline']
Deployability,"// Add the deployment target version info load command size, if used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MachObjectWriter.cpp:11,deploy,deployment,11,interpreter/llvm-project/llvm/lib/MC/MachObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MachObjectWriter.cpp,1,['deploy'],['deployment']
Deployability,// Add the deployment target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:11,deploy,deployment,11,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,"// Add the edges from the SU to the other SchedGroups in pipeline, and; // return the number of edges missed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:57,pipeline,pipeline,57,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['pipeline'],['pipeline']
Deployability,"// Add the function declaration to the appropriate lookup tables,; // adjusting the redeclarations list as necessary. We don't; // want to do this yet if the friending class is dependent.; //; // Also update the scope-based lookup if the target context's; // lookup context is in lexical scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:201,update,update,201,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['update'],['update']
Deployability,"// Add the primary loop simplification pipeline.; // FIXME: Currently this is split into two loop pass pipelines because we run; // some function passes in between them. These can and should be removed; // and/or replaced by scheduling the loop pass equivalents in the correct; // positions. But those equivalent passes aren't powerful enough yet.; // Specifically, `SimplifyCFGPass` and `InstCombinePass` are currently still; // used. We have `LoopSimplifyCFGPass` which isn't yet powerful enough yet to; // fully replace `SimplifyCFGPass`, and the closest to the other we have is; // `LoopInstSimplify`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:39,pipeline,pipeline,39,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,4,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"// Add the scratch wave offset into the scratch RSRC.; //; // We only want to update the first 48 bits, which is the base address; // pointer, without touching the adjacent 16 bits of flags. We know this add; // cannot carry-out from bit 47, otherwise the scratch allocation would be; // impossible to fit in the 48-bit global address space.; //; // TODO: Evaluate if it is better to just construct an SRD using the flat; // scratch init and some constants rather than update the one we are passed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp:78,update,update,78,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp,2,['update'],['update']
Deployability,"// Add update records for all mangling numbers and static local numbers.; // These aren't really update records, but this is a convenient way of; // tagging this rare extra data onto the declarations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:7,update,update,7,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,2,['update'],['update']
Deployability,"// Added in 3.2, Updated in 9.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:17,Update,Updated,17,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['Update'],['Updated']
Deployability,// Added in 3.9; // Upgrade any XOP PERMIL2 index operand still using a float/double; // vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:20,Upgrade,Upgrade,20,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['Upgrade'],['Upgrade']
Deployability,// Added in 7.0 updated 9.0,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:16,update,updated,16,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,4,['update'],['updated']
Deployability,"// Adding a property should change NumObjCPropertyAttrsBits; // Also, don't forget to update the Clang C API at CXObjCPropertyAttrKind and; // clang_Cursor_getObjCPropertyAttributes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjCCommon.h:86,update,update,86,interpreter/llvm-project/clang/include/clang/AST/DeclObjCCommon.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjCCommon.h,1,['update'],['update']
Deployability,"// Adjust convolution integration window",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:22,integrat,integration,22,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['integrat'],['integration']
Deployability,// Adjust the offset for patchable-function-prefix. This assumes that; // patchable-function-prefix is the same for all functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:25,patch,patchable-function-prefix,25,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,4,['patch'],['patchable-function-prefix']
Deployability,"// Adjust the offset for patchable-function-prefix. X86InstrInfo::getNop(); // returns a 1-byte X86::NOOP, which means the offset is the same in; // bytes. This assumes that patchable-function-prefix is the same for all; // functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:25,patch,patchable-function-prefix,25,interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,2,['patch'],['patchable-function-prefix']
Deployability,// Advance by the number of cycles it takes to issue this instruction.; // TODO: Use a more advanced model that accounts for instructions that; // take multiple cycles to issue on a particular pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInsertDelayAlu.cpp:193,pipeline,pipeline,193,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInsertDelayAlu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInsertDelayAlu.cpp,1,['pipeline'],['pipeline']
Deployability,// Advance to next non-trivial pipeline,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:31,pipeline,pipeline,31,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['pipeline'],['pipeline']
Deployability,"// After MSSAU update, remove the cloned terminator instruction NewTI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:15,update,update,15,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['update']
Deployability,"// After all paths are cloned, now update the last successor of the cloned; // path so it skips over the switch statement",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:35,update,update,35,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['update']
Deployability,"// After calling deleteBB or callbackDeleteBB under Lazy UpdateStrategy,; // validateDeleteBB() removes all instructions of DelBB and adds an; // UnreachableInst as its terminator. So we check whether the BasicBlock to; // delete only has an UnreachableInst inside.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:57,Update,UpdateStrategy,57,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,1,['Update'],['UpdateStrategy']
Deployability,"// After calling knownRegValInBlock, FirstUse will either point to a CBZ/CBNZ; // or a compare (i.e., SUBS). In the latter case, we must take care when; // updating FirstUse when scanning for COPY instructions. In particular, if; // there's a COPY in between the compare and branch the COPY should not; // update FirstUse.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp:306,update,update,306,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,1,['update'],['update']
Deployability,"// After coalescing, update any PHIs that are being tracked by debug-info; // with their new VReg locations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:21,update,update,21,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,"// After last node has been created, update the use information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonCommonGEP.cpp:37,update,update,37,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonCommonGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonCommonGEP.cpp,1,['update'],['update']
Deployability,"// After loading modules, we must update the redeclaration chains.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:34,update,update,34,core/metacling/src/TClingCallbacks.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx,1,['update'],['update']
Deployability,"// After reordering basic blocks, we must update basic block branches to; // insert explicit fallthrough branches when required and optimize branches; // when possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp,1,['update'],['update']
Deployability,"// After running the loop pass, the parent loop might change and we need to; // notify the updater, otherwise U.ParentL might gets outdated and triggers; // assertion failures in addSiblingLoops and addChildLoops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp:91,update,updater,91,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,2,['update'],['updater']
Deployability,"// After the CGSCCPass is done, when assertions are enabled, use; // RefreshCallGraph to verify that the callgraph was correctly updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp:129,update,updated,129,interpreter/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CallGraphSCCPass.cpp,1,['update'],['updated']
Deployability,"// After the VST has been parsed, we need to make sure intrinsic name; // are auto-upgraded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:83,upgrade,upgraded,83,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['upgrade'],['upgraded']
Deployability,"// After the dominator tree was updated with the added edge, update MemorySSA; // if available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:32,update,updated,32,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,2,['update'],"['update', 'updated']"
Deployability,"// After the putenv below, gRootDir might point to the old ROOTSYS; // entry, i.e. to deleted memory. Update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:102,Update,Update,102,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['Update'],['Update']
Deployability,"// After we've dealt with all combinations of things that could; // make DebugInfoKind be other than None or DebugLineTablesOnly,; // figure out if we need to ""upgrade"" it to standalone debug info.; // We parse these two '-f' options whether or not they will be used,; // to claim them even if you wrote ""-fstandalone-debug -gline-tables-only""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:160,upgrade,upgrade,160,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['upgrade'],['upgrade']
Deployability,"// Align __llvm_prf_{cnts,bits,data} sections to the maximum expected page; // alignment. This allows profile counters to be mmap()'d to disk. Note that; // it's not enough to just page-align __llvm_prf_cnts: the following section; // must also be page-aligned so that its data is not clobbered by mmap().; //; // The section alignment is only needed when continuous profile sync is; // enabled, but this is expected to be the default in Xcode. Specifying the; // extra alignment also allows the same binary to be used with/without sync; // enabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:356,continuous,continuous,356,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['continuous'],['continuous']
Deployability,"// All CmpBB instructions are moved into Head, and CmpBB is deleted.; // Update the CFG first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp:73,Update,Update,73,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,1,['Update'],['Update']
Deployability,// All accesses in To used to be in From. Move to end and update access lists.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['update'],['update']
Deployability,// All code for this class below this point is needed because of the; // temporary implicit conversion to uint64_t. The operator overloads are; // needed because otherwise the conversion of the parent class; // UnivariateLinearPolyBase -> TypeSize is ambiguous.; // TODO: Remove the implicit conversion.; // Casts to a uint64_t if this is a fixed-width size.; //; // This interface is deprecated and will be removed in a future version; // of LLVM in favour of upgrading uses that rely on this implicit conversion; // to uint64_t. Calls to functions that return a TypeSize should use the; // proper interfaces to TypeSize.; // In practice this is mostly calls to MVT/EVT::getSizeInBits().; //; // To determine how to upgrade the code:; //; // if (<algorithm works for both scalable and fixed-width vectors>); // use getKnownMinValue(); // else if (<algorithm works only for fixed-width vectors>) {; // if <algorithm can be adapted for both scalable and fixed-width vectors>; // update the algorithm and use getKnownMinValue(); // else; // bail out early for scalable vectors and use getFixedValue(); // },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h:717,upgrade,upgrade,717,interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,2,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,// All definitions are updates to the same declaration. This happens if a; // module instantiates the declaration of a class template specialization; // and two or more other modules instantiate its definition.; //; // FIXME: Indicate which modules had instantiations of this definition.; // FIXME: How can this even happen?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:23,update,updates,23,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['updates']
Deployability,"// All done if there are no arguments to integrate numerically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:41,integrat,integrate,41,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrate']
Deployability,// All done; // Apply the updates to the Dominator Tree and cleanup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:26,update,updates,26,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['update'],['updates']
Deployability,// All machine operands and other references to virtual registers have been; // replaced. Remove the virtual registers and release all the transient data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp:123,release,release,123,interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,1,['release'],['release']
Deployability,// All of the Function*'s in the MiscompiledFunctions list are in the old; // module. Update this list to include all of the functions in the; // optimized and loop extracted module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp:86,Update,Update,86,interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp,1,['Update'],['Update']
Deployability,// All of the intrinsics matches below should be marked with which llvm; // version started autoupgrading them. At some point in the future we would; // like to use this information to remove upgrade code for some older; // intrinsics. It is currently undecided how we will determine that future; // point.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:192,upgrade,upgrade,192,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrade']
Deployability,"// All of the operands are live after this instruction executes, so we; // cannot update on top of any operand. Because of this, we must; // duplicate one of the stack elements to the top. It doesn't matter; // which one we pick.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp:82,update,update,82,interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,1,['update'],['update']
Deployability,// All other OpenMP runtime calls will not reach parallel regions so they; // can be safely ignored for now. Since it is a known OpenMP runtime call; // we have now modeled all effects and there is no need for any update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:214,update,update,214,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,// All reaching kernels are in SPMD mode. Update all function calls to; // __kmpc_is_spmd_exec_mode to 1.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:42,Update,Update,42,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['Update'],['Update']
Deployability,// All reaching kernels are in non-SPMD mode. Update all function; // calls to __kmpc_is_spmd_exec_mode to 0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:46,Update,Update,46,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['Update'],['Update']
Deployability,// All recorded sections are candidates for load-address patching.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:57,patch,patching,57,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['patch'],['patching']
Deployability,// All threads will stop here until another thread calls releaseThreads,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp:57,release,releaseThreads,57,interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp,1,['release'],['releaseThreads']
Deployability,"// All tokens updated for current range, check next.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:14,update,updated,14,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['update'],['updated']
Deployability,// All values on the Worklist are divergent.; // Their users may not have been updated yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:79,update,updated,79,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,1,['update'],['updated']
Deployability,"// All zero mask.; // See if we have a continuous run of bits. If so, we have 0*1+0*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:39,continuous,continuous,39,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['continuous'],['continuous']
Deployability,// Alloc type should be updated as we add in the MIBs. We should assert; // afterwards that it is not still None.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:24,update,updated,24,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['updated']
Deployability,"// Allocate space for 5 lists (Vars, Inits, Updates, Finals), 2 expressions; // (Step and CalcStep), list of used expression + step.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp:44,Update,Updates,44,interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,2,['Update'],['Updates']
Deployability,"// Allocate the mask array for the node out of the BumpPtrAllocator, since; // SDNode doesn't have access to it. This memory will be ""leaked"" when; // the node is deallocated, but recovered when the NodeAllocator is released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:216,release,released,216,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['release'],['released']
Deployability,"// Allocate workspace for numerical integration engine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:36,integrat,integration,36,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['integrat'],['integration']
Deployability,// Allocate. We don't need to update the call graph node because we're; // going to recompute it from scratch after splitting.; // FIXME: pass the required alignment,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp:30,update,update,30,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroSplit.cpp,1,['update'],['update']
Deployability,// Allow a UniqueId 0 to mean undefined.; // Update SymbolMap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/COFF/COFFObject.h:45,Update,Update,45,interpreter/llvm-project/llvm/lib/ObjCopy/COFF/COFFObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/COFF/COFFObject.h,1,['Update'],['Update']
Deployability,"// Allow atomicrmw only if 'x' and 'update' are integer values, lvalue for 'x'; // expression is simple and atomic is allowed for the given type for the; // target platform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:36,update,update,36,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,// Allow splitting a call-site only when the CodeSize cost of the; // instructions before the call is less then DuplicationThreshold. The; // instructions before the call will be duplicated in the split blocks and; // corresponding uses will be updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp:245,update,updated,245,interpreter/llvm-project/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp,1,['update'],['updated']
Deployability,"// Allow to update the GUI while uploading files",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:12,update,update,12,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['update'],['update']
Deployability,// Allows for testing of the irsymtab writer and upgrade mechanism. This; // environment variable should not be set by users.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/IRSymtab.cpp:49,upgrade,upgrade,49,interpreter/llvm-project/llvm/lib/Object/IRSymtab.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/IRSymtab.cpp,1,['upgrade'],['upgrade']
Deployability,"// Already an edge, just update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:25,update,update,25,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['update'],['update']
Deployability,"// Already created, fix the linkage and update the initializer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:40,update,update,40,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['update'],['update']
Deployability,"// Already created, update the initializer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:20,update,update,20,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['update'],['update']
Deployability,"// Already handled all instruction operands, can remove it from both, the; // Worklist and the Stack, and update MinBitWidth.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp:106,update,update,106,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,1,['update'],['update']
Deployability,// Also release the next DomainValue in the chain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp:8,release,release,8,interpreter/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ExecutionDomainFix.cpp,1,['release'],['release']
Deployability,// Also update the LookupResult...; // FIXME: This should probably go away at some point,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:8,update,update,8,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['update'],['update']
Deployability,"// Also update the base and offset, because the new alignment may; // not be applicable with the old ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp:8,update,update,8,interpreter/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOperand.cpp,1,['update'],['update']
Deployability,// Also update vgpr_count (dependent on agpr_count for gfx908/gfx90a),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp:8,update,update,8,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,1,['update'],['update']
Deployability,// Also updates RecordKeeper.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:8,update,updates,8,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,1,['update'],['updates']
Deployability,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:26,integrat,integrating,26,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrating']
Deployability,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors,; // rather than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:26,integrat,integrating,26,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['integrat'],['integrating']
Deployability,"// Although we are able to correctly parse line number programs with; // MaxOpsPerInst > 1, the rest of DWARFDebugLine and its; // users have not been updated to handle line information for all operations; // in a multi-operation instruction, so warn about potentially incorrect; // results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp:151,update,updated,151,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,1,['update'],['updated']
Deployability,"// Although we asserted, be extra safe for release build.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransformActions.cpp:43,release,release,43,interpreter/llvm-project/clang/lib/ARCMigrate/TransformActions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransformActions.cpp,1,['release'],['release']
Deployability,// Always disable it for release builds by preventing the observer from being; // installed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp:25,release,release,25,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp,2,"['install', 'release']","['installed', 'release']"
Deployability,// Always update LastRef to the last name by which a file was accessed.; // FIXME: Neither this nor always using the first reference is correct; we; // want to switch towards a design where we return a FileName object that; // encapsulates both the name by which the file was accessed and the; // corresponding FileEntry.; // FIXME: LastRef should be removed from FileEntry once all clients adopt; // FileEntryRef.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp:10,update,update,10,interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,1,['update'],['update']
Deployability,"// An ICmpZero Formula represents an ICmp which we're handling as a; // comparison against zero. Now that we've expanded an expression for that; // form, update the ICmp's other operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:154,update,update,154,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,"// An auto-reset event used by the broadcast/signal thread to wait; // for all the waiting thread(s) to wake up and be released from the; // semaphore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:119,release,released,119,core/thread/inc/TWin32Condition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h,1,['release'],['released']
Deployability,"// An element with no source file information will use the reference; // attribute (DW_AT_specification, DW_AT_abstract_origin, DW_AT_extension); // to update its information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVElement.cpp:152,update,update,152,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVElement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVElement.cpp,1,['update'],['update']
Deployability,"// An entry value is a register location -- but with an updated; // expression. The register location of such DBG_VALUE is always the; // one from the entry DBG_VALUE, it does not matter if the entry value; // was copied in to another register due to some optimizations.; // Non-entry value register locations are like the source; // DBG_VALUE, but with the register number from this VarLoc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:56,update,updated,56,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['update'],['updated']
Deployability,"// An example of what is generated for the following code:; //; // #pragma omp simd collapse(2) ordered(2); // for (i = 0; i < NI; ++i); // for (k = 0; k < NK; ++k); // for (j = J0; j < NJ; j+=2) {; // <loop body>; // }; //; // We generate the code below.; // Note: the loop body may be outlined in CodeGen.; // Note: some counters may be C++ classes, operator- is used to find number of; // iterations and operator+= to calculate counter value.; // Note: decltype(NumIterations) must be integer type (in 'omp for', only i32; // or i64 is currently supported).; //; // #define NumIterations (NI * ((NJ - J0 - 1 + 2) / 2)); // for (int[32|64]_t IV = 0; IV < NumIterations; ++IV ) {; // .local.i = IV / ((NJ - J0 - 1 + 2) / 2);; // .local.j = J0 + (IV % ((NJ - J0 - 1 + 2) / 2)) * 2;; // // similar updates for vars in clauses (e.g. 'linear'); // <loop body (using local i and j)>; // }; // i = NI; // assign final values of counters; // j = NJ;; //; // Last iteration number is (I1 * I2 * ... In) - 1, where I1, I2 ... In are; // the iteration counts of the collapsed for loops.; // Precondition tests if there is at least one iteration (all conditions are; // true).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:797,update,updates,797,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['updates']
Deployability,// An induction variable will remain scalar if all users of the induction; // variable and induction variable update remain scalar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:110,update,update,110,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,// An instance variable symbol was released nilling out its property:; // self.property = nil;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:35,release,released,35,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,// An instance variable symbol was released with -release:; // [_property release];,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:35,release,released,35,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,3,['release'],"['release', 'released']"
Deployability,"// An instruction above couldn't be updated, so insert a sub.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:36,update,updated,36,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['update'],['updated']
Deployability,"// An opaque configuration, that can be used to separate several benchmarks of; // the same instruction under different configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.h:13,configurat,configuration,13,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.h,2,['configurat'],"['configuration', 'configurations']"
Deployability,"// An option for specifying an executable that will be called with the IR; // everytime it changes in the opt pipeline. It will also be called on; // the initial IR as it enters the pipeline. The executable will be passed; // the name of a temporary file containing the IR and the PassID. This may; // be used, for example, to call llc on the IR and run a test to determine; // which pass makes a change that changes the functioning of the IR.; // The usual modifier options work as expected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp:110,pipeline,pipeline,110,interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp,2,['pipeline'],['pipeline']
Deployability,// An ordinary operand. Update the map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:24,Update,Update,24,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Update'],['Update']
Deployability,// An update record can't turn a non-lambda into a lambda.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:6,update,update,6,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,1,['update'],['update']
Deployability,// An update to MinDepDistBytes requires an update to MaxSafeVectorWidthInBits; // since there is a backwards dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:6,update,update,6,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,2,['update'],['update']
Deployability,"// An updated body is emitted last, so that the reader doesn't need; // to skip over the lazy body to reach statements for other records.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:6,update,updated,6,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['updated']
Deployability,// Analyse the specified address returning true if a more optimal addressing; // mode is available. When returning true all parameters are updated to reflect; // their recommended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:139,update,updated,139,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['update'],['updated']
Deployability,"// Analytic integration of factorizable observable not possible, add straight pdf to product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integration']
Deployability,"// Analytical Integration handling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:14,Integrat,Integration,14,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,3,['Integrat'],['Integration']
Deployability,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,integrat,integration,14,roofit/roofit/src/RooGaussModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx,3,['integrat'],['integration']
Deployability,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,integrat,integration,14,roofit/roofit/src/RooGaussModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx,3,['integrat'],['integration']
Deployability,"// Analytical integration support",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:14,integrat,integration,14,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,3,['integrat'],['integration']
Deployability,"// Analyze \p SymbolicPHI, a SCEV expression of a phi node, and check if the; // computation that updates the phi follows the following pattern:; // (SExt/ZExt ix (Trunc iy (%SymbolicPHI) to ix) to iy) + InvariantAccum; // which correspond to a phi->trunc->sext/zext->add->phi update chain.; // If so, try to see if it can be rewritten as an AddRecExpr under some; // Predicates. If successful, return them as a pair. Also cache the results; // of the analysis.; //; // Example usage scenario:; // Say the Rewriter is called for the following SCEV:; // 8 * ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // where:; // %X = phi i64 (%Start, %BEValue); // It will visitMul->visitAdd->visitSExt->visitTrunc->visitUnknown(%X),; // and call this function with %SymbolicPHI = %X.; //; // The analysis will find that the value coming around the backedge has; // the following SCEV:; // BEValue = ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // Upon concluding that this matches the desired pattern, the function; // will return the pair {NewAddRec, SmallPredsVec} where:; // NewAddRec = {%Start,+,%Step}; // SmallPredsVec = {P1, P2, P3} as follows:; // P1(WrapPred): AR: {trunc(%Start),+,(trunc %Step)}<nsw> Flags: <nssw>; // P2(EqualPred): %Start == (sext i32 (trunc i64 %Start to i32) to i64); // P3(EqualPred): %Step == (sext i32 (trunc i64 %Step to i32) to i64); // The returned pair means that SymbolicPHI can be rewritten into NewAddRec; // under the predicates {P1,P2,P3}.; // This predicated rewrite will be cached in PredicatedSCEVRewrites:; // PredicatedSCEVRewrites[{%X,L}] = {NewAddRec, {P1,P2,P3)}; //; // TODO's:; //; // 1) Extend the Induction descriptor to also support inductions that involve; // casts: When needed (namely, when we are called in the context of the; // vectorizer induction analysis), a Set of cast instructions will be; // populated by this method, and provided back to isInductionPHI. This is; // needed to allow the vectorizer to properly record them to be igno",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:98,update,updates,98,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['update'],"['update', 'updates']"
Deployability,"// Analyze all uses of 'add'. If the output of 'add' is used as an address; // in the base+immediate addressing mode load/store instructions, see if; // they can be updated to use the immediate value as an offet. Thus,; // providing us the opportunity to eliminate 'add'.; // Ex: Rx= add(Rt,#12); // memw(Rx+#0) = Rs; // This can be replaced with memw(Rt+#12) = Rs; //; // This transformation is only performed if all uses can be updated and; // the offset isn't required to be constant extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp:165,update,updated,165,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp,2,['update'],['updated']
Deployability,// And a visible updates block for the translation unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:17,update,updates,17,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['updates']
Deployability,"// And here we should find the other 'aliases' (eg. vector<Double32_t>); // and update them too:; // foreach(aliascl in gROOT->GetListOfClasses()->FindAliasesOf(name.c_str())); // RefreshClassInfo(cl, tdDef, true);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:80,update,update,80,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"// And if the field is of reference type, update 'Result' to refer to what; // the field refers to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:42,update,update,42,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['update'],['update']
Deployability,// And update now the metadata with the new cost.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h:7,update,update,7,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h,1,['update'],['update']
Deployability,// And update the SCC we're iterating as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp:7,update,update,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp,1,['update'],['update']
Deployability,// And update the type cache.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:7,update,update,7,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,2,['update'],['update']
Deployability,"// Android only uses the libc++ headers installed alongside the toolchain if; // they contain an Android-specific target include path, otherwise they're; // incompatible with the NDK libraries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:40,install,installed,40,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['install'],['installed']
Deployability,"// Another thread might have updated this. Even-though this is executed at the; // start of the process, we might get there if the user is explicitly; // 'resetting' the value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:29,update,updated,29,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['update'],['updated']
Deployability,"// Any analyses cached for this SCC are no longer precise as the shape; // has changed by introducing this cycle. However, we have taken care to; // update the proxies so it remains valide.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:149,update,update,149,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['update']
Deployability,"// Any function that is called by `__kmpc_parallel_51` will not be; // folded as the parallel level in the function is updated. In order to; // get it right, all the analysis would depend on the implentation. That; // said, if in the future any change to the implementation, the analysis; // could be wrong. As a consequence, we are just conservative here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:119,update,updated,119,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['updated']
Deployability,"// Any instruction other than bitcast and gep with a pointer operand have a; // use of an objc pointer. Bitcasts, GEPs, Selects, PHIs transfer a pointer; // to a subsequent use, rather than using it themselves, in this sense.; // As a short cut, several other opcodes are known to have no pointer; // operands of interest. And ret is never followed by a release, so it's; // not interesting to examine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ObjCARCInstKind.cpp:354,release,release,354,interpreter/llvm-project/llvm/lib/Analysis/ObjCARCInstKind.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ObjCARCInstKind.cpp,1,['release'],['release']
Deployability,"// Any of the following tokens are likely the start of the user; // forgetting 'auto' or 'decltype(auto)', so diagnose.; // Note: if updating this list, please make sure we update; // isCXXDeclarationSpecifier's check for IsPlaceholderSpecifier to have; // a matching list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:173,update,update,173,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['update'],['update']
Deployability,"// Any prompt update means we'll have to re-write the editor prompt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:14,update,update,14,core/textinput/src/textinput/TerminalDisplay.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp,1,['update'],['update']
Deployability,"// Any prompt update means we'll have to re-write the text",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:14,update,update,14,core/textinput/src/textinput/TerminalDisplay.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp,1,['update'],['update']
Deployability,"// Anything equivalent in the MemoryAccess table should be in the same; // congruence class.; // Filter out the unreachable and trivially dead entries, because they may; // never have been updated if the instructions were not processed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:189,update,updated,189,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['update'],['updated']
Deployability,"// Apparently this annotation updates the code offset. It's hard to make; // MSVC produce this opcode, but clang uses it, and debuggers seem to use; // this interpretation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-pdbutil/MinimalSymbolDumper.cpp:30,update,updates,30,interpreter/llvm-project/llvm/tools/llvm-pdbutil/MinimalSymbolDumper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-pdbutil/MinimalSymbolDumper.cpp,1,['update'],['updates']
Deployability,"// Append a constraint that SUs must meet in order to fit into this; // SchedGroup. Since many rules involve the relationship between a SchedGroup; // and the SUnits in other SchedGroups, rules are checked at Pipeline Solve; // time (rather than SchedGroup init time.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:209,Pipeline,Pipeline,209,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['Pipeline'],['Pipeline']
Deployability,"// Apply all updates, with the RevDeleteUpdates as PostCFGView.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:13,update,updates,13,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['update'],['updates']
Deployability,// Apply module pipeline start EP callback.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:16,pipeline,pipeline,16,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['pipeline'],['pipeline']
Deployability,"// Apply posterior integration required for SPECINT case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:19,integrat,integration,19,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"// Apply the merge, compute the corresponding gain, and update the best; // value, if the merge is beneficial.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,2,['update'],['update']
Deployability,"// Apply the two updates that dbg.values get: invalid operands, and; // variable metadata fixup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp:17,update,updates,17,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,1,['update'],['updates']
Deployability,// Apply the updates accumulated above to get an up-to-date dominator tree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:13,update,updates,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updates']
Deployability,"// Apply updates permissively, to remove duplicates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp:9,update,updates,9,interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp,4,['update'],['updates']
Deployability,// Apply updates to the DomTree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp:9,update,updates,9,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,2,['update'],['updates']
Deployability,// Arbitrarily use the ones defined in the beginning of the function.; // SSAUpdater will later update them to the correct values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:96,update,update,96,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['update'],['update']
Deployability,"// As a fallback, select default install paths.; // FIXME: Don't guess drives and paths like this on Windows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp:33,install,install,33,interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp,1,['install'],['install']
Deployability,"// As a heuristic prune all diagnostics not in the main file. Currently; // the majority of warnings in headers are false positives. These; // are largely caused by configuration state, e.g. preprocessor; // defined code, etc.; //; // Note that this is also a performance optimization. Analyzing; // headers many times can be expensive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:165,configurat,configuration,165,interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,1,['configurat'],['configuration']
Deployability,"// As a heuristic, if some headers don't have a weight, give them the; // minimum weight seen (not to disrupt the existing trends too much by; // using a weight that's in the general range of the other headers' weights,; // and the minimum seems to perform better than the average.); // FIXME: better update in the passes that drop the header weight.; // If no headers have a weight, give them even weight (use weight 1).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h:301,update,update,301,interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,1,['update'],['update']
Deployability,"// As a heuristic, locals that have been marked 'const' explicitly; // can be treated as configuration values as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:89,configurat,configuration,89,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['configurat'],['configuration']
Deployability,"// As a heuristic, treat globals as configuration values. Note; // that we only will get here if Sema evaluated this; // condition to a constant expression, which means the global; // had to be declared in a way to be a truly constant value.; // We could generalize this to local variables, but it isn't; // clear if those truly represent configuration values that; // gate unreachable code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:36,configurat,configuration,36,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,2,['configurat'],['configuration']
Deployability,"// As a special case, a null chain means that a tail call has been emitted; // and the DAG root is already updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:107,update,updated,107,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['update'],['updated']
Deployability,"// As of implementation time, simply calling `addRange(Value)` would also go; // through `update`. But that would rely on the implementation of; // `StringRef::begin()` and `StringRef::end()`. Explicitly call `update` to; // guarantee the fast path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:90,update,update,90,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,2,['update'],['update']
Deployability,"// As of implementation time, simply calling `addRange(Value)` would also go; // through the `update` fast path. But that would rely on the implementation; // details of `ArrayRef::begin()` and `ArrayRef::end()`. Explicitly call; // `update` to guarantee the fast path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:94,update,update,94,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,2,['update'],['update']
Deployability,"// As the TBasket invokes Add{Tot,Zip}Bytes on its parent tree, we must do these updates in a thread-safe; // manner only when we are flushing multiple baskets in parallel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h:81,update,updates,81,tree/tree/inc/TTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h,1,['update'],['updates']
Deployability,"// As the default block in the switch is unreachable, update the PHI nodes; // (remove all of the references to the default block) to reflect this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp:54,update,update,54,interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp,1,['update'],['update']
Deployability,"// As the edge from PredBB to BB is deleted, we have to update the block; // frequency of BB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,"// As the elements can depend on elements from a different compile unit,; // information such as name and file/line source information needs to be; // updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVReader.cpp:151,update,updated,151,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVReader.cpp,1,['update'],['updated']
Deployability,"// As the metadata may have changed with the update, the nodes may have; // become ConservativelyAllocatable or OptimallyReducible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h:45,update,update,45,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h,1,['update'],['update']
Deployability,"// As the range is not changed, save the old values and restore; // after the GUI has been updated. It would be more elegant to; // disconnect the signal from fParentPad, however, this doesn't; // work for unknown reasons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:91,update,updated,91,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['update'],['updated']
Deployability,"// As we replace substrings in the middle of the string, we also have; // to update the word boundary flag vector. Note that we don't care; // the word boundaries in the `x[i]` are correct, as it has already; // been replaced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:77,update,update,77,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['update'],['update']
Deployability,// Assert the invariant that the watched literal is always the first one; // in the clause.; // FIXME: Consider replacing this with a test case that fails if the; // invariant is broken by `updateWatchedLiterals`. That might not be easy; // due to the transformations performed by `buildCNF`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:190,update,updateWatchedLiterals,190,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['update'],['updateWatchedLiterals']
Deployability,// Assign or release,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h:13,release,release,13,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,1,['release'],['release']
Deployability,// Assign the position number to the instruction. Note that we are going to; // move some instructions during the optimization however there will never; // be a need to move two instructions before any selected instruction. So to; // avoid multiple positions' updates during moves we just increase position; // counter by two leaving a free space for instructions which will be moved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp:260,update,updates,260,interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,1,['update'],['updates']
Deployability,"// Assume the default COV for now, EmitDirectiveAMDHSACodeObjectVersion; // will update this if it is encountered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUTargetStreamer.h:81,update,update,81,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUTargetStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUTargetStreamer.h,1,['update'],['update']
Deployability,"// Assuming that trivialTailPHIs() is true, update the Tail PHIs by simply; // removing the CmpBB operands. The Head operands will be identical.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp:44,update,update,44,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,1,['update'],['update']
Deployability,"// At -O0, store null into the destination field (so that the; // storeStrong doesn't over-release) and then call storeStrong.; // This is a workaround to not having an initStrong call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:91,release,release,91,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['release'],['release']
Deployability,"// At creation of the template the template parameters are ""adopted""; // (DeclContext is changed). After this possible change the lookup table; // must be updated.; // At deduction guides the DeclContext of the template parameters may be; // different from what we would expect, it may be the class template, or a; // probably different CXXDeductionGuideDecl. This may come from the fact that; // the template parameter objects may be shared between deduction guides or; // the class template, and at creation of multiple FunctionTemplateDecl; // objects (for deduction guides) the same parameters are re-used. The; // ""adoption"" happens multiple times with different parent, even recursively; // for TemplateTemplateParmDecl. The same happens at import when the; // FunctionTemplateDecl objects are created, but in different order.; // In this way the DeclContext of these template parameters is not necessarily; // the same as in the ""from"" context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:155,update,updated,155,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['update'],['updated']
Deployability,"// At last, update the KernelEnvc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:12,update,update,12,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,// At this point we have deserialized and merged the decl and it is safe to; // update its canonical decl to signal that the entire entity is used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:80,update,update,80,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,// At this point we have updated the state properly.; // Everything after this is merely checking to see if the return value has; // been over- or under-retained.; // Did we cache out?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:25,update,updated,25,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['update'],['updated']
Deployability,"// At this point we should definitiely have a font family, but if we; // don't there is something wrong with our configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:113,configurat,configuration,113,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,"// At this point, all update records for loaded decls are in place, so any; // fake class definitions should have become real.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:22,update,update,22,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['update']
Deployability,"// At this point, ignored errors can no longer be upgraded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp:50,upgrade,upgraded,50,interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,1,['upgrade'],['upgraded']
Deployability,"// At this point, since we have made changes we have at least removed; // a call instruction. However, in the process we do some incremental; // simplification of the surrounding code. This simplification can; // essentially do all of the same things as a function pass and we can; // re-use the exact same logic for updating the call graph to reflect the; // change.; // Inside the update, we also update the FunctionAnalysisManager in the; // proxy for this particular SCC. We do this as the SCC may have changed and; // as we're going to mutate this particular function we want to make sure; // the proxy is in place to forward any invalidation events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:383,update,update,383,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,2,['update'],['update']
Deployability,"// At this point, the blocks left in the preds list must have dummy; // entries inserted into every PHI nodes for the block. Update all the phi; // nodes in this block that we are inserting (there could be phis before; // mem2reg runs).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:125,Update,Update,125,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['Update'],['Update']
Deployability,"// At this point, we are all set up, update the invoke instructions to mark; // their call_site values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp:37,update,update,37,interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,1,['update'],['update']
Deployability,"// At this point, we have split the I's block to allow one lane in wavefront; // to update the precomputed reduced value. Also, completed the codegen for; // new control flow i.e. iterative loop which perform reduction and scan using; // ComputeLoop and ComputeEnd.; // For the new control flow, we need to move branch instruction i.e.; // terminator created during SplitBlockAndInsertIfThen from I's block to; // ComputeEnd block. We also need to set up predecessor to next block when; // single lane done updating the final reduced value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAtomicOptimizer.cpp:84,update,update,84,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAtomicOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAtomicOptimizer.cpp,1,['update'],['update']
Deployability,"// At this point, we know that the original region doesn't contain the leaking; // when the actual leak happens. It means that it can be confusing for the; // user to see such description in the message.; //; // Let's consider the following example:; // Object *Original = allocate(...);; // Object *New = Original;; // Original = allocate(...);; // Original->release();; //; // Complaining about a leaking object ""stored into Original"" might cause a; // rightful confusion because 'Original' is actually released.; // We should complain about 'New' instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp:360,release,release,360,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp,2,['release'],"['release', 'released']"
Deployability,"// At this stage each compile units are cloned to their own set of debug; // sections. Now, update patches, assign offsets and assemble final file; // glueing debug tables from each compile unit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.cpp:92,update,update,92,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.cpp,2,"['patch', 'update']","['patches', 'update']"
Deployability,"// At this very end of the compilation pipeline, if any DBG_VALUEs with; // registers remain, it means they are dangling info which we failed to update; // when their corresponding def instruction was transformed/moved/splitted etc.; // Because Wasm cannot access values in LLVM virtual registers in the debugger,; // these dangling DBG_VALUEs in effect kill the effect of any previous DBG_VALUE; // associated with the variable, which will appear as ""optimized out"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugFixup.cpp:39,pipeline,pipeline,39,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugFixup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugFixup.cpp,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,"// Attach function profile for promoted indirect callee, and update; // call site count for the promoted inline candidate too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:61,update,update,61,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['update'],['update']
Deployability,// Attempt to constant fold all of the constant source ops.; // Returns true if the entire shuffle is folded to a constant.; // TODO: Extend this to merge multiple constant Ops and update the mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:181,update,update,181,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['update']
Deployability,"// Attempt to find the original path used to invoke the driver, to determine; // the installed path. We do this manually, because we want to support that; // path being a symlink.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/driver.cpp:85,install,installed,85,interpreter/llvm-project/clang/tools/driver/driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/driver.cpp,1,['install'],['installed']
Deployability,"// Attempt to match INSERTPS with one element from VA or VB being; // inserted into VA (or undef). If successful, V1, V2 and InsertPSMask; // are updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:146,update,updated,146,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['updated']
Deployability,"// Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard v. Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBDT (BDT = Boosted Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * Jan Therhaag <jan.therhaag@cern.ch> - U. of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. Successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:208,integrat,integrated,208,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['integrat'],['integrated']
Deployability,"// Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLD *; * *; * *; * Description: *; * Linear Discriminant (Simple Linear Regression) *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - Uni Bonn, Germany *; * *; * Copyright (c) 2008-2011: *; * CERN, Switzerland *; * PAN, Poland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLD.h:189,integrat,integrated,189,tmva/tmva/inc/TMVA/MethodLD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLD.h,1,['integrat'],['integrated']
Deployability,"// Author: Stefan Schmitt, Amnon Harel; // DESY and CERN, 11/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, new method GetDXDY(); // Version 17.7, with bug-fix for curvature regularisation; // Version 17.6, with updated doxygen comments and bug-fixes in TUnfoldBinning; // Version 17.5, bug fix in TUnfold also corrects GetEmatrixSysUncorr(); // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, with new options 'N' and 'c' for axis regularisation steering; // Version 17.1, add scan type RhoSquare, small bug fixes with useAxisBinning; // Version 17.0, support for density regularisation, complex binning schemes, tau scan; /** \class TUnfoldDensity; An algorithm to unfold distributions from detector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:255,update,updated,255,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['update'],['updated']
Deployability,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for repeated bins with the same width; // Version 17.2, XML interface for class TUnfoldBinning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h:227,update,updated,227,hist/unfold/inc/TUnfoldBinningXML.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h,1,['update'],['updated']
Deployability,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for the ""repeat"" attribute for element Bin; // Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:227,update,updated,227,hist/unfold/src/TUnfoldBinningXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx,1,['update'],['updated']
Deployability,"// Author: Stefan Schmitt; // DESY, 11/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, new method GetDXDY(); // Version 17.7, with bug-fix for curvature regularisation; // Version 17.6, with updated doxygen comments and bug-fixes in TUnfoldBinning; // Version 17.5, bug fix in TUnfold also corrects GetEmatrixSysUncorr(); // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, add scan type RhoSquare; // Version 17.0, support for density regularisation and complex binning schemes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:233,update,updated,233,hist/unfold/inc/TUnfoldDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h,1,['update'],['updated']
Deployability,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:276,update,updated,276,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['update'],['updated']
Deployability,"// Author: Stefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, updates in the TUnfold implementation; // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak and other bugs; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, in parallel to changes in TUnfoldBinning; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, error matrix with SetInput, store fL not fLSquared; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, in parallel to bug-fix in TUnfold.C; // Version 16.0, some cleanup, more getter functions, query version number; // Version 15, simplified L-curve scan, new tau definition, new eror calc.; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes; // Version 12, with support for preconditioned matrix inversion; // Version 11, regularisation methods have return values; // Version 10, with bug-fix in TUnfold.cxx; // Version 9, implements method for optimized inversion of sparse matrix; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, completely remove definition of class XY; // Version 5, move definition of class XY from TUnfold.C to this file; // Version 4, with bug-fix in TUnfold.C; // Version 3, with bug-fix in TUnfold.C; // Version 2, with changed ScanLcurve() arguments; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h:223,update,updates,223,hist/unfold/inc/TUnfold.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfold.h,2,['update'],"['updated', 'updates']"
Deployability,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, bug fixes in TUnfold fix problem with GetEmatrixSysUncorr; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.2, bug-fix with the calculation of background errors; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, support for systematic errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:228,update,updated,228,hist/unfold/inc/TUnfoldSys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h,1,['update'],['updated']
Deployability,"// Author: Stefan Schmitt; // DESY, 23/01/09; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, parallel to changes in TUnfold; // Version 17.7, bug fix in GetBackground(); // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, add methods to find back systematic and background sources; // Version 17.1, bug fix with background uncertainty; // Version 17.0, possibility to specify an error matrix with SetInput; // Version 16.1, parallel to changes in TUnfold; // Version 16.0, parallel to changes in TUnfold; // Version 15, fix bugs with uncorr. uncertainties, add backgnd subtraction; // Version 14, remove some print-out, do not add unused sys.errors; // Version 13, support for systematic errors; /** \class TUnfoldSys; \ingroup Unfold; An algorithm to unfold distributions from detector to truth level,; with background subtraction and propagation of systematic uncertainties. TUnfoldSys is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For inn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:228,update,updated,228,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['update'],['updated']
Deployability,"// Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TBatchNormLayer *; * *; * *; * Description: *; * Dense Layer Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h:140,integrat,integrated,140,tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h,1,['integrat'],['integrated']
Deployability,"// Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDenseLayer *; * *; * *; * Description: *; * Dense Layer Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DenseLayer.h:140,integrat,integrated,140,tmva/tmva/inc/TMVA/DNN/DenseLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DenseLayer.h,1,['integrat'],['integrated']
Deployability,"// Authors: Stephan Hageboeck, CERN; Andrea Sciandra, SCIPP-UCSC/Atlas; Nov 2020; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2020, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:817,continuous,continuous,817,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,3,"['continuous', 'integrat']","['continuous', 'integrated']"
Deployability,"// Auto-enable IntegrateBins for all RooDataHists.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:15,Integrat,IntegrateBins,15,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['Integrat'],['IntegrateBins']
Deployability,// Auto-upgrade the layout string,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:8,upgrade,upgrade,8,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['upgrade'],['upgrade']
Deployability,"// Automatic Reference Counting:; // If the pseudo-expression names a retainable object with weak or; // strong lifetime, the object shall be released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp:142,release,released,142,interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,1,['release'],['released']
Deployability,// Avoid adding a false dependency on partial flag update by some 16-bit; // instructions which has the 's' bit set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:51,update,update,51,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,2,['update'],['update']
Deployability,// Avoid partial and undef register update stalls unless optimizing for size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,3,['update'],['update']
Deployability,"// Avoid splitting a MOVW+MOVT pair with a relocation on Windows.; // On Windows, this instruction pair is covered by one single; // IMAGE_REL_ARM_MOV32T relocation which covers both instructions. If a; // constant island is injected inbetween them, the relocation will clobber; // the instruction and fail to update the MOVT instruction.; // (These instructions are bundled up until right before the ConstantIslands; // pass.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:310,update,update,310,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['update'],['update']
Deployability,"// B flavor and rho charge (we do not use the integrated weights)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:46,integrat,integrated,46,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,1,['integrat'],['integrated']
Deployability,"// BB's successors were moved to SplitBB, update DTU accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,"// BBInfo[SplitBB].Offset is wrong temporarily, fixed below; // The conditional successor will be swapped between the BBs after this, so; // update CFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp:141,update,update,141,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYConstantIslandPass.cpp,1,['update'],['update']
Deployability,"// BEXTR doesn't update the sign flag so we can't use it. It does clear; // the overflow flag, but that's not useful without the sign flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:17,update,update,17,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['update']
Deployability,// BFS starting from the parents not yet considered.; // Memoization of newly visited nodes is not possible (but we still update; // results for the elements in the chain we found above).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp:122,update,update,122,interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,1,['update'],['update']
Deployability,// BPF Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp:27,Configurat,Configuration,27,interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"// BPI maps terminators to probabilities, since we don't modify the CFG, no; // updates are needed to preserve it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LCSSA.cpp:80,update,updates,80,interpreter/llvm-project/llvm/lib/Transforms/Utils/LCSSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LCSSA.cpp,1,['update'],['updates']
Deployability,"// Back end -- Send message or check if particular logging configuration is active",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMsgService.h:59,configurat,configuration,59,roofit/roofitcore/inc/RooMsgService.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMsgService.h,1,['configurat'],['configuration']
Deployability,// Bail out early if MaxNumPromotions is zero.; // This prevents allocating an array of zero length below.; //; // Note `updateIDTMetaData` is called in two places so check; // `MaxNumPromotions` inside it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:121,update,updateIDTMetaData,121,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['update'],['updateIDTMetaData']
Deployability,"// Base class of the Configurations used in member wise streaming.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:21,Configurat,Configurations,21,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['Configurat'],['Configurations']
Deployability,"// Because insertion and removal of columns in the middle of a data; // set is not yet supported in this design iteration, these methods; // have been commented out.; // // Insert a range of columns or rows, if the label is empty, a; // // default scheme will be used.; // virtual void InsertRowBefore(UInt_t row, UInt_t nrows);; // virtual void InsertRowBefore(TGString label, UInt_t nrows);; // virtual void InsertRowAfter(UInt_t row, UInt_t nrows);; // virtual void InsertRowAfter(TGString label, UInt_t nrows);; // virtual void InsertRowAt(UInt_t row, UInt_t nrows = 1);; // virtual void InsertRowAt(TGString label, UInt_t nrows);; // virtual void InsertColumnBefore(UInt_t column, UInt_t ncolumns);; // virtual void InsertColumnBefore(TGString label, UInt_t ncolumns);; // virtual void InsertColumnAfter(UInt_t column, UInt_t ncolumns);; // virtual void InsertColumnAfter(TGString label, UInt_t ncolumns);; // virtual void InsertColumnAt(UInt_t column, UInt_t ncolumns = 1);; // virtual void InsertColumnAt(TGString label, UInt_t ncolumns);; // // Remove rows or columns.; // virtual void RemoveRows(UInt_t row, UInt_t nrows = 1);; // virtual void RemoveColumns(UInt_t column, UInt_t ncolumns = 1);; // Update view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTable.h:1208,Update,Update,1208,gui/gui/inc/TGTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTable.h,1,['Update'],['Update']
Deployability,"// Because it is illegal to submit updates that have already been applied; // and updates to an edge need to be strictly ordered,; // it is safe to infer the existence of an edge from the first update; // to this edge.; // If the first update to an edge is ""Delete"", it means that the edge; // existed before. If the first update to an edge is ""Insert"", it means; // that the edge didn't exist before.; //; // For example, if the user submits {{Delete, A, B}, {Insert, A, B}},; // because; // 1. it is illegal to submit updates that have already been applied,; // i.e., user cannot delete an nonexistent edge,; // 2. updates to an edge need to be strictly ordered,; // So, initially edge A -> B existed.; // We can then safely ignore future updates to this edge and directly; // inspect the current CFG:; // a. If the edge still exists, because the user cannot insert an existent; // edge, so both {Delete, A, B}, {Insert, A, B} actually happened and; // resulted in a no-op. DTU won't submit any update in this case.; // b. If the edge doesn't exist, we can then infer that {Delete, A, B}; // actually happened but {Insert, A, B} was an invalid update which never; // happened. DTU will submit {Delete, A, B} in this case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:35,update,updates,35,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,10,['update'],"['update', 'updates']"
Deployability,"// Because of how we convert atomic_load and atomic_store to normal loads and; // stores in the DAG, we need to ensure that the MMOs are marked volatile; // since DAGCombine hasn't been updated to account for atomic, but non; // volatile loads. (See D57601)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:186,update,updated,186,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['update'],['updated']
Deployability,"// Because we'll be removing this entry we need to update the reference; // count of the closing entry, if one exists.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp:51,update,update,51,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,1,['update'],['update']
Deployability,"// Before checking, we make sure TargetOptions.ExceptionModel is the same as; // MCAsmInfo.ExceptionsType. Normally these have to be the same, because clang; // stores the exception model info in LangOptions, which is later transferred; // to TargetOptions and MCAsmInfo. But when clang compiles bitcode directly,; // clang's LangOptions is not used and thus the exception model info is not; // correctly transferred to TargetOptions and MCAsmInfo, so we make sure we; // have the correct exception model in WebAssemblyMCAsmInfo constructor.; // But in this case TargetOptions is still not updated, so we make sure they; // are the same.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp:590,update,updated,590,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,1,['update'],['updated']
Deployability,"// Before cloning instructions, notify the successor basic block that it; // is about to have a new predecessor. This will update PHI nodes,; // which will allow us to update live-out uses of bonus instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:123,update,update,123,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,2,['update'],['update']
Deployability,"// Before merging, check that the RefSCC remains valid after all the; // postorder updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:83,update,updates,83,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['update'],['updates']
Deployability,"// Before the load we need a fence. Here is an example lifted from; // http://www.hpl.hp.com/techreports/2012/HPL-2012-68.pdf showing why a fence; // is required:; // Thread 0:; // x.store(1, relaxed);; // r1 = y.fetch_add(0, release);; // Thread 1:; // y.fetch_add(42, acquire);; // r2 = x.load(relaxed);; // r1 = r2 = 0 is impossible, but becomes possible if the idempotent rmw is; // lowered to just a load without a fence. A mfence flushes the store buffer,; // making the optimization clearly correct.; // FIXME: it is required if isReleaseOrStronger(Order) but it is not clear; // otherwise, we might be able to be more aggressive on relaxed idempotent; // rmw. In practice, they do not look useful, so we don't try to be; // especially clever.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:226,release,release,226,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['release'],['release']
Deployability,"// Before we even compute any loop analyses, first run a miniature function; // pass pipeline to put loops into their canonical form. Note that we can; // directly build up function analyses after this as the function pass; // manager handles all the invalidation at that layer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp:85,pipeline,pipeline,85,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,1,['pipeline'],['pipeline']
Deployability,"// Before we update MTracker, remember which values were present in each of; // the locations about to be overwritten, so that we can recover any; // potentially clobbered variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:13,update,update,13,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['update'],['update']
Deployability,"// Before we update the live FP we have to ensure there's a valid (or; // null) asynchronous context in its slot just before FP in the frame; // record, so store it now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:13,update,update,13,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,"// Before we update the live frame pointer we have to ensure there's a; // valid (or null) asynchronous context in its slot just before FP in; // the frame record, so store it now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:13,update,update,13,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['update'],['update']
Deployability,"// Before:; // bgtlr cr0; //; // After:; // ble cr0, .end; // .p2align 3; // .begin:; // blr # lis 0, FuncId[16..32]; // nop # li 0, FuncId[0..15]; // std 0, -8(1); // mflr 0; // bl __xray_FunctionExit; // mtlr 0; // blr; // .end:; //; // Update compiler-rt/lib/xray/xray_powerpc64.cc accordingly when number; // of instructions change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:239,Update,Update,239,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['Update'],['Update']
Deployability,"// Begin calculation of partial integrals; // ___; // sqrt(2pi)^(#intObs) (-0.5 * u1T S22 u1 ); // I = ------------------- * e; // sqrt(|det(S22)|); // ___; // Where S22 is the sub-matrix of covI for the integrated observables and S22; // is the Schur complement of S22; // ___ -1; // S22 = S11 - S12 * S22 * S21; //; // and u1 is the vector of non-integrated observables; // Calculate Schur complement S22bar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:204,integrat,integrated,204,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,2,['integrat'],['integrated']
Deployability,// Begin pipeline bypass table,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:9,pipeline,pipeline,9,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['pipeline'],['pipeline']
Deployability,"// Bin fully in the integration domain",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:20,integrat,integration,20,roofit/roofit/src/RooParametricStepFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx,1,['integrat'],['integration']
Deployability,"// Bind the appropriate analytic integral of our RooRealVar object to; // those of its arguments that will be integrated out numerically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:110,integrat,integrated,110,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrated']
Deployability,"// Bits that are already ""bottom"" should not be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp:48,update,updated,48,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,1,['update'],['updated']
Deployability,"// Block captures count as local values and have imprecise semantics.; // They also can't be arrays, so need to worry about that.; //; // For const-qualified captures, emit clang.arc.use to ensure the captured; // object doesn't get released while we are still depending on its validity; // within the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:233,release,released,233,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['release'],['released']
Deployability,"// Block iterator interface. This provides access to the list of incoming; // basic blocks, which parallels the list of incoming values.; // Please note that we are not providing non-const iterators for blocks to; // force all updates go through an interface function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:227,update,updates,227,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['update'],['updates']
Deployability,"// Bootstrap process -- here be phase-ordering dragons.; //; // The MachOPlatform class uses allocation actions to register metadata; // sections with the ORC runtime, however the runtime contains metadata; // registration functions that have their own metadata that they need to; // register (e.g. the frame-info registration functions have frame-info).; // We can't use an ordinary lookup to find these registration functions; // because their address is needed during the link of the containing graph; // itself (to build the allocation actions that will call the registration; // functions). Further complicating the situation (a) the graph containing; // the registration functions is allowed to depend on other graphs (e.g. the; // graph containing the ORC runtime RTTI support) so we need to handle an; // unknown set of dependencies during bootstrap, and (b) these graphs may; // be linked concurrently if the user has installed a concurrent dispatcher.; //; // We satisfy these constraints by implementing a bootstrap phase during which; // allocation actions generated by MachOPlatform are appended to a list of; // deferred allocation actions, rather than to the graphs themselves. At the; // end of the bootstrap process the deferred actions are attached to a final; // ""complete-bootstrap"" graph that causes them to be run.; //; // The bootstrap steps are as follows:; //; // 1. Request the graph containing the mach header. This graph is guaranteed; // not to have any metadata so the fact that the registration functions; // are not available yet is not a problem.; //; // 2. Look up the registration functions and discard the results. This will; // trigger linking of the graph containing these functions, and; // consequently any graphs that it depends on. We do not use the lookup; // result to find the addresses of the functions requested (as described; // above the lookup will return too late for that), instead we capture the; // addresses in a post-allocation pass injected by ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:927,install,installed,927,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,1,['install'],['installed']
Deployability,"// Bootstrap the new attribute with an initial update to propagate; // information, e.g., function -> call site.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:47,update,update,47,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['update']
Deployability,"// Both updateSSA() and LiveRangeUpdater benefit from ordered blocks, but; // neither require it. Skip the sorting overhead for small updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveRangeCalc.cpp:8,update,updateSSA,8,interpreter/llvm-project/llvm/lib/CodeGen/LiveRangeCalc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveRangeCalc.cpp,2,['update'],"['updateSSA', 'updates']"
Deployability,// Bottom up: release predecessors,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:14,release,release,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,2,['release'],['release']
Deployability,"// Breaking out of the inner loop, since we don't want to parse; // .clang-format AND _clang-format, if both exist. Then we continue the; // outer loop (parent directories) in search for the parent; // configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:202,configurat,configuration,202,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['configurat'],['configuration']
Deployability,"// Build a minimal pipeline based on the semantics required by LLVM,; // which is just that always inlining occurs. Further, disable generating; // lifetime intrinsics to avoid enabling further optimizations during; // code generation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:19,pipeline,pipeline,19,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// Build a multiply-add chain to compute; //; // LocalAccum + (partial products at DstIndex); // + (opportunistic subset of CarryIn); //; // LocalAccum is an array of one or two 32-bit registers that are updated; // in-place. The incoming registers may be null.; //; // In some edge cases, carry-ins can be consumed ""for free"". In that case,; // the consumed carry bits are removed from CarryIn in-place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:204,update,updated,204,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['update'],['updated']
Deployability,"// Build a node, finish a match and update results.; // Highest enum value; watch out when adding more.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h:36,update,update,36,interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h,1,['update'],['update']
Deployability,"// Build an RHistImpl with the provided axis configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:45,configurat,configuration,45,hist/histv7/test/binning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx,1,['configurat'],['configuration']
Deployability,// Build an offset map so we can update the EndIndex of the remaining; // entries.; // Zero the offsets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp:33,update,update,33,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,1,['update'],['update']
Deployability,// Build an update expression of form 'OpaqueValueExpr(x) binop; // OpaqueValueExpr(expr)' or 'OpaqueValueExpr(expr) binop; // OpaqueValueExpr(x)' and then cast it to the type of the 'x' expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:12,update,update,12,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"// Build configuration object for RooSimWSTool",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h:9,configurat,configuration,9,roofit/roofitcore/inc/RooSimWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h,1,['configurat'],['configuration']
Deployability,"// Build configuration object for RooSimWSTool with multiple prototype p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h:9,configurat,configuration,9,roofit/roofitcore/inc/RooSimWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h,1,['configurat'],['configuration']
Deployability,// Build counter update.; // Build counter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['update'],['update']
Deployability,// Build counter update.; // I = Begini + counter * Stepi;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['update'],['update']
Deployability,"// Build the configuration for disabling lower priority interrupts. Non EIC; // interrupts need to be masked off with zero, EIC from the Cause register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp:13,configurat,configuration,13,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp,1,['configurat'],['configuration']
Deployability,"// Build the pair map before running reassociate.; // Technically this would be more accurate if we did it after one round; // of reassociation, but in practice it doesn't seem to help much on; // real-world code, so don't waste the compile time running reassociate; // twice.; // If a user wants, they could expicitly run reassociate twice in their; // pass pipeline for further potential gains.; // It might also be possible to update the pair map during runtime, but the; // overhead of that may be large if there's many reassociable chains.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:359,pipeline,pipeline,359,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,// Build the pipeline for the pch file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:13,pipeline,pipeline,13,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['pipeline'],['pipeline']
Deployability,// Build the pipeline for this file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:13,pipeline,pipeline,13,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['pipeline'],['pipeline']
Deployability,// Build the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp:13,pipeline,pipeline,13,interpreter/llvm-project/llvm/lib/MCA/Context.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp,2,['pipeline'],['pipeline']
Deployability,// Build update: IS.CounterVar(Private) = IS.Start + Iter * IS.Step,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:9,update,update,9,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,// Build update: Var = InitExpr + IV * Step,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:9,update,update,9,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,// Build updates and final values of the loop counters.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:9,update,updates,9,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['updates']
Deployability,// Bump CurCycle to account for latency. We assume the latency of other; // available instructions may be hidden by the stall (not a full pipe stall).; // This updates the hazard recognizer's cycle before reserving resources for; // this instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:160,update,updates,160,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['update'],['updates']
Deployability,"// But, that also updated the use in the freeze we just created, thus; // creating a cycle in a DAG. Let's undo that by mutating the freeze.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:18,update,updated,18,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['updated']
Deployability,"// By default, it is assumed that, given a CFG and a set of updates, we wish; // to apply these updates as given. If UpdatedAreReverseApplied is set, the; // updates will be applied in reverse: deleted edges are considered re-added; // and inserted edges are considered deleted when returning children.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGDiff.h:60,update,updates,60,interpreter/llvm-project/llvm/include/llvm/Support/CFGDiff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGDiff.h,4,"['Update', 'update']","['UpdatedAreReverseApplied', 'updates']"
Deployability,"// By default, look for the C++ headers in an include directory adjacent to; // the lib directory of the GCC installation. Note that this is expect to be; // equivalent to '/usr/include/c++/X.Y' in almost all cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:109,install,installation,109,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['install'],['installation']
Deployability,"// By default, look for the C++ headers in an include directory adjacent to; // the lib directory of the GCC installation.; // On Solaris this usually looks like /usr/gcc/X.Y/include/c++/X.Y.Z",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Solaris.cpp:109,install,installation,109,interpreter/llvm-project/clang/lib/Driver/ToolChains/Solaris.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Solaris.cpp,1,['install'],['installation']
Deployability,"// By now, the split block has only one successor (SB), and SB has only; // one predecessor. We can try to merge them. We will need to update ter-; // minators in FP.Split+SB, and that requires working analyzeBranch, which; // fails on Hexagon for blocks that have EH_LABELs. However, if SB ends; // with an unconditional branch, we won't need to touch the terminators.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:135,update,update,135,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,1,['update'],['update']
Deployability,"// C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:178,configurat,configuration,178,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['configurat'],['configuration']
Deployability,"// C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:168,integrat,integration,168,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,2,['integrat'],['integration']
Deployability,"// C++ [expr.pre.incr]p1: The result is the updated operand; it is an; // lvalue, [...]; // Not so in C.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp:44,update,updated,44,interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,1,['update'],['updated']
Deployability,"// C++11 [dcl.constexpr]p1: An explicit specialization of a constexpr; // function can differ from the template declaration with respect to; // the constexpr specifier.; // FIXME: We need an update record for this AST mutation.; // FIXME: What if there are multiple such prior declarations (for instance,; // from different modules)?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:191,update,update,191,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['update'],['update']
Deployability,"// C++11 [expr.ass]p1:; // [...] the assignment is sequenced after the value computation; // of the right and left operands, [...]; //; // so check it before inspecting the operands and update the; // map afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:186,update,update,186,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['update'],['update']
Deployability,"// C++1z [over.load]p2; // Certain function declarations cannot be overloaded:; // -- Function declarations that differ only in the return type,; // the exception specification, or both cannot be overloaded.; // Check the exception specifications match. This may recompute the type of; // both Old and New if it resolved exception specifications, so grab the; // types again after this. Because this updates the type, we do this before; // any of the other checks below, which may update the ""de facto"" NewQType; // but do not necessarily update the type of New.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:400,update,updates,400,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,3,['update'],"['update', 'updates']"
Deployability,"// CASE I: factorizing term: term is integrated over all normalizing observables; // -----------------------------------------------------------------------------; // Check if all observbales of this term are integrated. If so the term cancels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:37,integrat,integrated,37,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,['integrat'],['integrated']
Deployability,"// CASE IIIa: Normalized and partially integrated single PDF term; //---------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,integrat,integrated,39,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Deployability,"// CASE IIIb: Normalized and partially integrated composite PDF term; //---------------------------------------------------------------; // Use auxiliary class RooGenProdProj to calculate this term",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,integrat,integrated,39,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Deployability,"// CASE IVa: Normalized non-integrated composite PDF term; // -------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,integrat,integrated,28,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Deployability,"// CASE IVb: Normalized, non-integrated single PDF term; // -----------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,integrat,integrated,29,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Deployability,"// CEF applications have multiple sub-processes (render, plugin, GPU, etc); // that share the same executable. This function checks the command-line and,; // if this is a sub-process, executes the appropriate logic.; /* int exit_code = CefExecuteProcess(main_args, nullptr, nullptr);; if (exit_code >= 0) {; // The sub-process has completed so return here.; return exit_code;; }; */; // Install xlib error handlers so that the application won't be terminated; // on non-fatal errors.; // XSetErrorHandler(XErrorHandlerImpl);; // XSetIOErrorHandler(XIOErrorHandlerImpl);; // Specify CEF global settings here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/RCefWebDisplayHandle.cxx:387,Install,Install,387,gui/cefdisplay/src/RCefWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/RCefWebDisplayHandle.cxx,1,['Install'],['Install']
Deployability,"// COFF doesn't allow the comdat group leader to have private linkage, so; // upgrade private linkage to internal linkage to produce a symbol table; // entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:78,upgrade,upgrade,78,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['upgrade'],['upgrade']
Deployability,"// CP.getSrcReg()'s live interval has been merged into CP.getDstReg's live; // interval. Since CP.getSrcReg() is in ToBeUpdated set and its live interval; // is not up-to-date, need to update the merged live interval here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:185,update,update,185,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,"// CUDA runtime uses this undocumented function to access kernel launch; // configuration. The declaration is in crt/device_functions.h but that file; // includes a lot of other stuff we don't want. Instead, we'll provide our own; // declaration for it here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:76,configurat,configuration,76,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['configurat'],['configuration']
Deployability,// CUDA/HIP can have the same input source code compiled multiple times so do; // not compiled again if there are already failures. It is OK to abort the; // CUDA pipeline on errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Compilation.cpp:163,pipeline,pipeline,163,interpreter/llvm-project/clang/lib/Driver/Compilation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Compilation.cpp,1,['pipeline'],['pipeline']
Deployability,// Cache ROCm installation search paths.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:14,install,installation,14,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,1,['install'],['installation']
Deployability,"// Calculate cache contents; // Decode integration code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:39,integrat,integration,39,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Deployability,"// Calculate integral over landau custom numeric integrator specified as object default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:49,integrat,integrator,49,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrator']
Deployability,"// Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:65,integrat,integrator,65,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrator']
Deployability,// Calculate offset to start of nlist and update symtab command.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOBuilder.h:42,update,update,42,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOBuilder.h,1,['update'],['update']
Deployability,// Calculate string table bounds and update symtab command.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOBuilder.h:37,update,update,37,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/MachOBuilder.h,1,['update'],['update']
Deployability,"// Calculate the direction in parameter space (eq 25, ref 1) and update coeffs (eq 22, ref 1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:65,update,update,65,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,2,['update'],['update']
Deployability,"// Calculate the instruction number to use, or install a DBG_PHI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp:47,install,install,47,interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,1,['install'],['install']
Deployability,"// Call operator for our internal integrator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:34,integrat,integrator,34,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,1,['integrat'],['integrator']
Deployability,"// Call the ""init"" function and update the trip count of the loop with the; // value it produced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,2,['update'],['update']
Deployability,// Call the private method that doesn't update the map so our iterator; // doesn't break.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/GDBRegistrationListener.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/ExecutionEngine/GDBRegistrationListener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/GDBRegistrationListener.cpp,1,['update'],['update']
Deployability,"// Callback object used by the TChain to update this proxy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:41,update,update,41,tree/treeplayer/inc/TBranchProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h,1,['update'],['update']
Deployability,// Called at the beginning of each cycle to issue already dispatched; // instructions to the underlying pipelines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h:104,pipeline,pipelines,104,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h,1,['pipeline'],['pipelines']
Deployability,"// Called before every stackmap/patchpoint, and at the end of basic blocks,; // to emit any necessary padding-NOPs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.h:32,patch,patchpoint,32,interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.h,1,['patch'],['patchpoint']
Deployability,// Callee saved registers of last MF.; // Used only to determine if an update for CalleeSavedAliases is necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterClassInfo.h:71,update,update,71,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterClassInfo.h,1,['update'],['update']
Deployability,"// Calls are scheduled with their preceding instructions. For bottom-up; // scheduling, clear the pipeline state before emitting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:98,pipeline,pipeline,98,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,3,['pipeline'],['pipeline']
Deployability,// Calls to fast_cc functions use different rules for passing parameters on; // the stack from the ABI and using PIC base in the function imposes; // similar restrictions to using the base pointer. It is not generally safe; // to move the stack pointer update in these situations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:253,update,update,253,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// Camera's time-stamp on last update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h:31,update,update,31,graf3d/gl/inc/TGLSceneInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h,1,['update'],['update']
Deployability,"// Can't cluster if the instruction modifies the base register; // or it is update form. e.g. ld r2,3(r2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:76,update,update,76,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['update'],['update']
Deployability,// Can't fold load update node because the second; // output is used so that load update node can't be removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:19,update,update,19,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,2,['update'],['update']
Deployability,"// Can't replace the cmp if it has more uses than the one we're looking at.; // FIXME: We would like to be able to handle this, but would need to make sure; // all uses were updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:174,update,updated,174,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['updated']
Deployability,// Can't update the instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:9,update,update,9,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,// Can't update to SP + offset in place. Precalculate the tagged pointer; // in a scratch register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:9,update,update,9,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,1,['update'],['update']
Deployability,// Cannot completely remove virtual function even in release mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:53,release,release,53,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,3,['release'],['release']
Deployability,// Cannot pipeline loops without instruction itineraries if we are using; // DFA for the pipeliner.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:10,pipeline,pipeline,10,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,2,['pipeline'],"['pipeline', 'pipeliner']"
Deployability,// Canonicalize the combined shuffle mask chain with horizontal ops.; // NOTE: This may update the Ops and Mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:88,update,update,88,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['update']
Deployability,// Canonicalize the combined shuffle mask chain with horizontal ops.; // NOTE: This will update the Ops and Mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:89,update,update,89,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['update']
Deployability,// Canonicalize the shuffle with any horizontal ops inputs.; // NOTE: This may update Ops and Mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:79,update,update,79,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['update']
Deployability,"// Capture the initial iterator which represents the LoopVar value at the; // zero's logical iteration. Since the original ForStmt/CXXForRangeStmt update; // it in every iteration, capture it by value before it is modified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:147,update,update,147,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"// Case of one single super branch. Automatically update; // all the branch addresses if a new object was created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:50,update,update,50,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['update'],['update']
Deployability,// Catchrets targeting cloned blocks need to be updated separately from; // the loop above because they are not in the current funclet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp:48,update,updated,48,interpreter/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp,1,['update'],['updated']
Deployability,// Category @implementation with no corresponding @interface.; // Create and install one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:77,install,install,77,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['install'],['install']
Deployability,"// Certain branches have two forms: e.g beq $1, $zero, dest vs beqz $1, dest; // Pick the zero form of the branch for readable assembly and for greater; // branch distance in non-microMIPS mode.; // Additional MIPSR6 does not permit the use of register $zero for compact; // branches.; // FIXME: Certain atomic sequences on mips64 generate 32bit references to; // Mips::ZERO, which is incorrect. This test should be updated to use; // Subtarget.getABI().GetZeroReg() when those atomic sequences and others; // are fixed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsInstrInfo.cpp:416,update,updated,416,interpreter/llvm-project/llvm/lib/Target/Mips/MipsInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsInstrInfo.cpp,1,['update'],['updated']
Deployability,"// ChainNodesMatched - If a pattern matches nodes that have input/output; // chains, the OPC_EmitMergeInputChains operation is emitted which indicates; // which ones they are. The result is captured into this list so that we can; // update the chain results when the pattern is complete.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:233,update,update,233,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"// Change basis pointer and update client-server link",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:28,update,update,28,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,2,['update'],['update']
Deployability,// Change instruction \p Ldst to postincrement form.; // \p NewBase is register to hold update base value; // \p NewOffset is instruction's new offset,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCOptAddrMode.cpp:88,update,update,88,interpreter/llvm-project/llvm/lib/Target/ARC/ARCOptAddrMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCOptAddrMode.cpp,1,['update'],['update']
Deployability,"// Change the -release to ""receiver = nil"" in a finally to avoid a leak; // when an exception is thrown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp:15,release,release,15,interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,1,['release'],['release']
Deployability,// Change the predicate and update the mask,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp:28,update,update,28,interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp,1,['update'],['update']
Deployability,// Change tied operand pre/post update dest.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp,1,['update'],['update']
Deployability,// Check and update the optional mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineFunctionInfo.cpp:13,update,update,13,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineFunctionInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineFunctionInfo.cpp,1,['update'],['update']
Deployability,// Check clearance before partial register updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp:43,update,updates,43,interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,1,['update'],['updates']
Deployability,// Check collection; perform on-demand update if stale.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp:39,update,update,39,interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp,2,['update'],['update']
Deployability,"// Check first if the global update info is uptodate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:29,update,update,29,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['update']
Deployability,// Check for any configuration macros that have changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:17,configurat,configuration,17,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['configurat'],['configuration']
Deployability,// Check for file-handling system call that is not handled by the checker.; // FIXME: The checker should be updated to handle all system calls that take; // 'FILE*' argument. These are now ignored.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp:108,update,updated,108,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StreamChecker.cpp,1,['update'],['updated']
Deployability,"// Check for integratable AbsRealLValue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:13,integrat,integratable,13,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integratable']
Deployability,// Check for module flag for updates before do anything.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:29,update,updates,29,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['update'],['updates']
Deployability,// Check for outer lastprivate conditional update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:43,update,update,43,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,13,['update'],['update']
Deployability,// Check for possible releases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:22,release,releases,22,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['release'],['releases']
Deployability,// Check for possible releases. Treat clang.arc.use as a releasing instruction; // to prevent sinking a retain past it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:22,release,releases,22,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['release'],['releases']
Deployability,"// Check for release functions, the only kind of functions that we care; // about that don't return a pointer type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp:13,release,release,13,interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,1,['release'],['release']
Deployability,// Check if *II is a register update that can be merged into STGloop that ends; // at (Reg + Size). RemainingOffset is the required adjustment to Reg after the; // end of the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:30,update,update,30,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,"// Check if ASan should use GC-friendly instrumentation for globals.; // First of all, there is no point if -fdata-sections is off (expect for MachO,; // where this is not a factor). Also, on ELF this feature requires an assembler; // extension that only works with -integrated-as at the moment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:267,integrat,integrated-as,267,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['integrat'],['integrated-as']
Deployability,// Check if CFI information needs to be updated for this MBB with basic block; // sections.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:40,update,updated,40,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['update'],['updated']
Deployability,// Check if NodeToMatch was updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:28,update,updated,28,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['updated']
Deployability,// Check if a load/store has update form. This lambda is used by function; // collectCandidates which can collect candidates for types defined by lambda.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:29,update,update,29,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,"// Check if a successor has already been cloned for the particular exit; // value. In this case if a successor was already cloned, the phi nodes; // in the cloned block should be updated directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:179,update,updated,179,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['updated']
Deployability,"// Check if an epilog exists as a subset of the end of a prolog (backwards).; // An epilog may end with one out of three different end opcodes; if this; // is the first epilog that shares opcodes with the prolog, we can tolerate; // that this opcode differs (and the caller will update the prolog to use; // the same end opcode as the epilog). If another epilog already shares; // opcodes with the prolog, the ending opcode must be a strict match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:279,update,update,279,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,1,['update'],['update']
Deployability,"// Check if integration over observable #i is requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Deployability,"// Check if integration over parameter #i is requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Deployability,"// Check if range parameterization depends on other integrated observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:52,integrat,integrated,52,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"// Check if the -stats option is set instead of checking; // !Stats.Stats.empty(). In release builds, Statistics operators; // do nothing, so stats are never Registered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Statistic.cpp:86,release,release,86,interpreter/llvm-project/llvm/lib/Support/Statistic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Statistic.cpp,1,['release'],['release']
Deployability,"// Check if the EFLAGS register is marked as live-out. This shouldn't happen,; // because the calling convention defines the EFLAGS register as NOT; // preserved.; //; // Unfortunatelly the EFLAGS show up as live-out after branch folding. Adding; // an assert to track this and clear the register afterwards to avoid; // unnecessary crashes during release builds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp:348,release,release,348,interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86RegisterInfo.cpp,1,['release'],['release']
Deployability,"// Check if the argument to malloc is assigned a value; // which cannot cause an overflow.; // e.g., malloc (mul * x) and,; // case 1: mul = <constant value>; // case 2: mul = a/b, where b > x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp:176,a/b,a/b,176,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,1,['a/b'],['a/b']
Deployability,"// Check if the call originally had callsite metadata, and update it for the; // new call in the inlined body.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:59,update,update,59,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['update'],['update']
Deployability,// Check if the current configuration is non-SPMD and generic state machine.; // If we already have SPMD mode or a custom state machine we do not need to; // go any further. If it is anything but a constant something is weird and; // we give up.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:24,configurat,configuration,24,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['configurat'],['configuration']
Deployability,// Check if the dead block has a predecessor whose branch has; // a configuration value that *could* be modified to; // silence the warning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:68,configurat,configuration,68,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['configurat'],['configuration']
Deployability,// Check if the diff is a constant type. This is used for update/DS/DQ form; // preparation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,"// Check if the generated schedule is valid. This function checks if; // an instruction that uses a physical register is scheduled in a; // different stage than the definition. The pipeliner does not handle; // physical register values that may cross a basic block boundary.; // Furthermore, if a physical def/use pair is assigned to the same; // cycle, orderDependence does not guarantee def/use ordering, so that; // case should be considered invalid. (The test checks for both; // earlier and same-cycle use to be more robust.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:181,pipeline,pipeliner,181,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeliner']
Deployability,"// Check if the new constant is valid, and return the updated constant and; // predicate if it is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp:54,update,updated,54,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,1,['update'],['updated']
Deployability,"// Check if the register in the debug instruction is utilized; // in a copy instruction, so we can update the debug info if the; // register is changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp:99,update,update,99,interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,1,['update'],['update']
Deployability,// Check if the statement is in one of the following forms; // (cond-update-stmt):; // if (expr ordop x) { x = expr; }; // if (x ordop expr) { x = expr; }; // if (x == e) { x = d; },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:69,update,update-stmt,69,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update-stmt']
Deployability,"// Check if the value is a finite number. The argument rval is updated if it is infinite or NaN,; // setting it to the maximum finite value (preserving the sign).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx:63,update,updated,63,math/mathcore/src/FitUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx,1,['update'],['updated']
Deployability,"// Check if this ID was forward referenced, and if so, update the; // corresponding GUIDs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:55,update,update,55,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,2,['update'],['update']
Deployability,"// Check if this configuration was created becfore",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:17,configurat,configuration,17,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,2,['configurat'],['configuration']
Deployability,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:17,configurat,configuration,17,roofit/histfactory/src/ParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx,6,['configurat'],['configuration']
Deployability,// Check if this function should be upgraded and get the replacement function; // if there is one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:36,upgrade,upgraded,36,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgraded']
Deployability,"// Check if this instruction is now ready. In case, force; // a transition in state using method 'updateDispatched()'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp:98,update,updateDispatched,98,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,1,['update'],['updateDispatched']
Deployability,"// Check if this is the most expensive incoming edge seen so far. In; // case, update the total cost of the destination node (ToIID), as well; // its field `CriticalPredecessor`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp:79,update,update,79,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,1,['update'],['update']
Deployability,// Check if we can move the stack update instruction (stdu) down the prologue; // past the callee saves. Hopefully this will avoid the situation where the; // saves are waiting for the update on the store with update to complete.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,3,['update'],['update']
Deployability,// Check if we can move the stack update instruction up the epilogue; // past the callee saves. This will allow the move to LR instruction; // to be executed before the restores of the callee saves which means; // that the callee saves can hide the latency from the MTLR instrcution.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,// Check if we can move the stack update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// Check if we know that the intrinsic has any constraints on its register; // banks. If it does, then update the mapping accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64RegisterBankInfo.cpp:103,update,update,103,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64RegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64RegisterBankInfo.cpp,1,['update'],['update']
Deployability,// Check if we've already translated this type. Don't try to do a; // get-or-create style insertion that caches the hash lookup across the; // lowerType call. It will update the TypeIndices map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:167,update,update,167,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['update'],['update']
Deployability,// Check on predecessors and check for; // Status update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/EHUtils.h:50,update,update,50,interpreter/llvm-project/llvm/include/llvm/Analysis/EHUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/EHUtils.h,1,['update'],['update']
Deployability,"// Check register def/use conflicts, occupancy limits and collect def/use maps.; // Return true if instruction can be bundled with previous. If it cannot; // def/use maps are not updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp:179,update,updated,179,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp,1,['update'],['updated']
Deployability,// Check that our installation's ptxas supports gpu_arch.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp:18,install,installation,18,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,1,['install'],['installation']
Deployability,// Check that pass pipeline is specified and correct; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp:19,pipeline,pipeline,19,interpreter/llvm-project/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp,1,['pipeline'],['pipeline']
Deployability,// Check that post-RA scheduling is enabled for this target.; // This may upgrade the AntiDepMode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:74,upgrade,upgrade,74,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['upgrade'],['upgrade']
Deployability,"// Check that supplied configuration of lists is identical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx:23,configurat,configuration,23,roofit/roofitcore/src/RooAICRegistry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx,1,['configurat'],['configuration']
Deployability,// Check that the dominator tree has already been updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:50,update,updated,50,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updated']
Deployability,"// Check that the instruction appears in the InstrChanges structure,; // which contains instructions that can have the offset updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:126,update,updated,126,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['update'],['updated']
Deployability,// Check that the offset between the pointers to produce a single continuous; // load.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:66,continuous,continuous,66,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['continuous'],['continuous']
Deployability,// Check that the update value is within our red zone limit (which may be; // zero).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:18,update,update,18,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"// Check that the values with and without normalization are almost identical.; // They are not exactly identical for the normalized case, because the; // RooGenericPdf doesn't do analytic integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:188,integrat,integration,188,roofit/roofitcore/test/testGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx,1,['integrat'],['integration']
Deployability,// Check that the version has 1 to 3 components and the minor and patch; // versions fit in two decimal digits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:66,patch,patch,66,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,2,['patch'],['patch']
Deployability,// Check that we can parse the returned pipeline string as an actual; // pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp:40,pipeline,pipeline,40,interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.cpp,2,['pipeline'],['pipeline']
Deployability,// Check that we didn't miss any update scenario.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:33,update,update,33,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,3,['update'],['update']
Deployability,// Check that we have a continuous set of offsets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:24,continuous,continuous,24,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['continuous'],['continuous']
Deployability,// Check the PassInstrumentation's BeforePass callbacks before running the; // canonicalization pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp:96,pipeline,pipeline,96,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPassManager.cpp,1,['pipeline'],['pipeline']
Deployability,"// Check the bitmap, if it is already 1, do nothing.; // Otherwise, set the bit, grab the index, update the buffer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp:97,update,update,97,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,1,['update'],['update']
Deployability,// Check the frame size first and return false if it does not fit the; // requirements.; // We need a non-zero frame size as well as a frame that will fit in the red; // zone. This is because by moving the stack pointer update we are now storing; // to the red zone until the stack pointer is updated. If we get an interrupt; // inside the prologue but before the stack update we now have a number of; // stores to the red zone and those stores must all fit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:220,update,update,220,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,3,['update'],"['update', 'updated']"
Deployability,// Check the last frame we updated the VideoTexture,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:27,update,updated,27,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updated']
Deployability,"// Check the update of a given scalar register holding an immediate value; // for VL register. Also, a call doesn't preserve VL register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/LVLGen.cpp:13,update,update,13,interpreter/llvm-project/llvm/lib/Target/VE/LVLGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/LVLGen.cpp,1,['update'],['update']
Deployability,"// Check whether a new model is satisfiable, and update the program state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h:49,update,update,49,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SMTConstraintManager.h,1,['update'],['update']
Deployability,// Check whether the continuous comparison sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:21,continuous,continuous,21,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['continuous'],['continuous']
Deployability,"// Check whether the storage is valid by validating the canary bits.; // If someone accidentally write some invalid bits in the storage, the canary; // will be changed first, and `IsAlive` will return false then.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/Value.cpp:56,canary,canary,56,interpreter/llvm-project/clang/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Interpreter/Value.cpp,2,['canary'],['canary']
Deployability,"// Checks whether `Dir` is a strict path prefix of `File`. If so and that's; // the longest prefix we've seen so for it, returns true and updates the; // `BestPrefixLength` accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderSearch.cpp:138,update,updates,138,interpreter/llvm-project/clang/lib/Lex/HeaderSearch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderSearch.cpp,1,['update'],['updates']
Deployability,// Choose Swift async extended frame info based on deployment target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h:51,deploy,deployment,51,interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,1,['deploy'],['deployment']
Deployability,"// Choose special integrator by default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:18,integrat,integrator,18,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['integrat'],['integrator']
Deployability,// Claim all arguments that come from a configuration file so that the driver; // does not warn on any that is unused.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:40,configurat,configuration,40,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['configurat'],['configuration']
Deployability,"// Class representing some configuration that can be done during GlobalISel's; // CSEInfo analysis. We define it here because TargetPassConfig can't depend on; // the GlobalISel library, and so we use this in the interface between them; // so that the derived classes in GISel can reference generic opcodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h:27,configurat,configuration,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,1,['configurat'],['configuration']
Deployability,"// Clean up the unique file on signal, which also releases the lock if it is; // held since the .lock symlink will point to a nonexistent file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp:50,release,releases,50,interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp,1,['release'],['releases']
Deployability,"// Clean-up/reset, update of transformation matrices and clipping; // planes done in base-class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:19,update,update,19,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['update'],['update']
Deployability,// Cleanup potential unconditional branch to successor block.; // Note that updateTerminator may change the size of the blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp:76,update,updateTerminator,76,interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchRelaxation.cpp,1,['update'],['updateTerminator']
Deployability,"// Cleanup the lookup tables.; // DeclContexts like EnumDecls don't have lookup maps.; // FIXME: Remove once we upstream this patch: D119675",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:126,patch,patch,126,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp,1,['patch'],['patch']
Deployability,// Clear all updates now. Facilitates deletes that follow.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp:13,update,updates,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,1,['update'],['updates']
Deployability,// Clear demanded bits and update the offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,1,['update'],['update']
Deployability,"// Clear the body and queue the function itself for deletion when we; // finish inlining and call graph updates.; // Note that after this point, it is an error to do anything other; // than use the callee's address or delete it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:104,update,updates,104,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['update'],['updates']
Deployability,// Clear the registration list and release the lock once we're done. Any; // pending updates from other threads will safely take effect after we return.; // That might not be what the user wants if they're measuring a compilation; // but it's their responsibility to prevent concurrent compilations to make; // a single compilation measurable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Statistic.cpp:35,release,release,35,interpreter/llvm-project/llvm/lib/Support/Statistic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Statistic.cpp,2,"['release', 'update']","['release', 'updates']"
Deployability,// Clear the set of symbols that needs to be updated so the streamer can; // be reused without issues.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:45,update,updated,45,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,1,['update'],['updated']
Deployability,// Clear the successor list of BB to match updates applying to DTU later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:43,update,updates,43,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['update'],['updates']
Deployability,"// Clip's time-stamp on last update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h:29,update,update,29,graf3d/gl/inc/TGLSceneInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h,1,['update'],['update']
Deployability,"// Clone all configuration dat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:13,configurat,configuration,13,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['configurat'],['configuration']
Deployability,"// Clone instructions in \p Ops and their operands recursively until reaching; // an value in Value2Index (external input to the reproducer). Update Old2New; // mapping for the original and cloned instructions. Sort instructions to; // clone by dominance, then insert the cloned instructions in the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:142,Update,Update,142,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['Update'],['Update']
Deployability,// Clone the BB and update the successor of Prev to jump to the new block,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:20,update,update,20,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['update']
Deployability,// Clone the blocks in the scope (excluding the PreEntryBlock) to split into a; // hot path (originals) and a cold path (clones) and update the PHIs at the; // exit block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:133,update,update,133,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['update'],['update']
Deployability,"// Codegen of 'Else' can change the current block, update ElseBB for the PHI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:51,update,update,51,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,15,['update'],['update']
Deployability,"// Codegen of 'Then' can change the current block, update ThenBB for the PHI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:51,update,update,51,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,15,['update'],['update']
Deployability,"// Coefficient Analytical integration support",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:26,integrat,integration,26,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,1,['integrat'],['integration']
Deployability,// Coff specific configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/COFF/COFFConfig.h:17,configurat,configuration,17,interpreter/llvm-project/llvm/include/llvm/ObjCopy/COFF/COFFConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/COFF/COFFConfig.h,1,['configurat'],['configuration']
Deployability,// Collect all releases of the pool; they will be removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:15,release,releases,15,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,1,['release'],['releases']
Deployability,// Collect all the insertion points of the objc_release calls that release; // the RC identity root of the objc_retain call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:67,release,release,67,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,// Collect buckets of comparable addresses used by loads and stores for update; // form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:72,update,update,72,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['update'],['update']
Deployability,"// Collect info for non-contiguous. Notice that offset, count, and stride; // are only meaningful for array-section, so we insert a null for anything; // other than array-section.; // Also, the size of offset, count, and stride are not the same as; // pointers, base_pointers, sizes, or dims. Instead, the size of offset,; // count, and stride are the same as the number of non-contiguous; // declaration in target update to/from clause.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:415,update,update,415,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['update']
Deployability,"// Collect instructions that update memory tags with a FrameIndex operand; // and (when applicable) constant size, and whose output registers are dead; // (the latter is almost always the case in practice). Since these; // instructions effectively have no inputs or outputs, we are free to skip; // any non-aliasing instructions in between without tracking used registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:29,update,update,29,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,// Collect removed successors to update the (Post)DominatorTrees.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:33,update,update,33,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['update'],['update']
Deployability,"// Collect the frequencies of all predecessors of BB, which will be used to; // update the edge weight of the result of splitting predecessors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:80,update,update,80,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,"// Collect the set of all users of the provided root instruction. This set of; // users contains not only the direct users of the root instruction, but also; // all users of those users, and so on. There are two exceptions:; //; // 1. Instructions in the set of excluded instructions are never added to the; // use set (even if they are users). This is used, for example, to exclude; // including root increments in the use set of the primary IV.; //; // 2. Instructions in the set of final instructions are added to the use set; // if they are users, but their users are not added. This is used, for; // example, to prevent a reduction update from forcing all later reduction; // updates into the use set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:637,update,update,637,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,2,['update'],"['update', 'updates']"
Deployability,// Collect updated outgoing edges' frequencies from BB and use them to update; // edge probabilities.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:11,update,updated,11,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,2,['update'],"['update', 'updated']"
Deployability,// Collect updates that need to be applied to the dominator tree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp:11,update,updates,11,interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp,1,['update'],['updates']
Deployability,"// Collect writes that are in a data dependency with RS, and update RS; // internal state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h:61,update,update,61,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,1,['update'],['update']
Deployability,"// Collections to keep track of all browser objects that have been; // generated. It's main goal is to prevent the continuous; // allocations of new objects with the same names during browsing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRemoteObject.cxx:115,continuous,continuous,115,core/base/src/TRemoteObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRemoteObject.cxx,2,['continuous'],['continuous']
Deployability,// Color and depth texture must be rebound in order for the swapchain to update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:73,update,update,73,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// Combine the map type inherited from user-defined mapper with that; // specified in the program. According to the OMP_MAP_TO and OMP_MAP_FROM; // bits of the \a MapType, which is the input argument of the mapper; // function, the following code will set the OMP_MAP_TO and OMP_MAP_FROM; // bits of MemberMapType.; // [OpenMP 5.0], 1.2.6. map-type decay.; // | alloc | to | from | tofrom | release | delete; // ----------------------------------------------------------; // alloc | alloc | alloc | alloc | alloc | release | delete; // to | alloc | to | alloc | to | release | delete; // from | alloc | alloc | from | from | release | delete; // tofrom | alloc | to | from | tofrom | release | delete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:391,release,release,391,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,5,['release'],['release']
Deployability,"// Combine the new Access with the existing Access, and then update the; // mapping in the offset bins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:61,update,update,61,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['update']
Deployability,"// Composite term needs normalized integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:35,integrat,integration,35,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"// Compute Global Offset Table size. If it is not zero we; // also update alignment, which is equal to a size of a; // single GOT entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp:67,update,update,67,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,1,['update'],['update']
Deployability,"// Compute and save the bit offset to the current position, which will be; // patched when we emit the index later. We can simply subtract the 64-bit; // fixed size from the current bit number to get the location to backpatch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:78,patch,patched,78,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['patch'],['patched']
Deployability,"// Compute and save the bit offset to the placeholder, which will be; // patched when the real VST is written. We can simply subtract the 32-bit; // fixed size from the current bit number to get the location to backpatch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:73,patch,patched,73,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['patch'],['patched']
Deployability,"// Compute the key for each datum.; // If there a node associated with this key, join and add it to update.; // If there is not (or the key is a duplicate), add it to enter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:100,update,update,100,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// Compute the outer-most loop containing one of our exit blocks. This is the; // furthest up our loopnest which can be mutated, which we will use below to; // update things.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:160,update,update,160,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['update']
Deployability,// Compute the output location and update the resource directory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/dsymutil.cpp:35,update,update,35,interpreter/llvm-project/llvm/tools/dsymutil/dsymutil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/dsymutil.cpp,1,['update'],['update']
Deployability,// Cond0 is either CtlzOp or CtlzOp's parent. CR has been updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:58,update,updated,58,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['update'],['updated']
Deployability,// Cond0's parent is either CtlzOp or CtlzOp's parent. CR has been updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:67,update,updated,67,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['update'],['updated']
Deployability,"// Condition for auto update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/inc/TStructNodeEditor.h:22,update,update,22,graf3d/gviz3d/inc/TStructNodeEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/inc/TStructNodeEditor.h,1,['update'],['update']
Deployability,"// Conditionally update our storage type if we've got a new ""better"" one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,1,['update'],['update']
Deployability,"// Conditions under which the scheduler should eagerly advance the cycle:; // (1) No available instructions; // (2) All pipelines full, so available instructions must have hazards.; //; // If HazardRec is disabled, the cycle was pre-advanced before calling; // ReleasePredecessors. In that case, IssueCount should remain 0.; //; // Check AvailableQueue after ReleasePredecessors in case of zero latency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:120,pipeline,pipelines,120,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,3,"['Release', 'pipeline']","['ReleasePredecessors', 'pipelines']"
Deployability,// Configuration alternative created.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:3,Configurat,Configuration,3,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration and customization of how numeric (partial) integrals; // are executed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Configurat,Configuration,3,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration file name [for submasters]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofNodeInfo.h:3,Configurat,Configuration,3,proof/proof/inc/TProofNodeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofNodeInfo.h,1,['Configurat'],['Configuration']
Deployability,// Configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/CommonConfig.h:3,Configurat,Configuration,3,interpreter/llvm-project/llvm/include/llvm/ObjCopy/CommonConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/CommonConfig.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration for the overall invocation of this tool. When invoked as; // objcopy, will always contain exactly one CopyConfig. When invoked as strip,; // will contain one or more CopyConfigs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/ObjcopyOptions.h:3,Configurat,Configuration,3,interpreter/llvm-project/llvm/tools/llvm-objcopy/ObjcopyOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/ObjcopyOptions.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration getters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Configurat,Configuration,3,html/inc/THtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration object for the Float16/Double32 where a factor has been specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,4,['Configurat'],['Configuration']
Deployability,"// Configuration object for the PushDataCache case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Configurat'],['Configuration']
Deployability,"// Configuration object for the UseCache case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Configurat'],['Configuration']
Deployability,"// Configuration object for the generic case of member wise streaming looping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Configurat'],['Configuration']
Deployability,"// Configuration object for the kSTL case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Configurat'],['Configuration']
Deployability,"// Configuration of MC generators used for this pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:3,Configurat,Configuration,3,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration of action handling kBits.; // In this case we need to know both the location; // of the member (fBits) and the start of the object; // (its TObject part to be exact).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Configurat'],['Configuration']
Deployability,"// Configuration of action using the legacy code.; // Mostly to cancel out the PrintDebug.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Configurat,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Configurat'],['Configuration']
Deployability,"// Configuration options for proof.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h:3,Configurat,Configuration,3,roofit/roostats/inc/RooStats/ProofConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h,1,['Configurat'],['Configuration']
Deployability,"// Configuration setters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Configurat,Configuration,3,html/inc/THtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h,1,['Configurat'],['Configuration']
Deployability,// Connect the dots between the top-down-collected RetainsToMove and; // bottom-up-collected ReleasesToMove to form sets of related calls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:93,Release,ReleasesToMove,93,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['Release'],['ReleasesToMove']
Deployability,// Connect the dots between the top-down-collected RetainsToMove and; // bottom-up-collected ReleasesToMove to form sets of related calls.; // This is an iterative process so that we connect multiple releases; // to multiple retains if needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:93,Release,ReleasesToMove,93,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,2,"['Release', 'release']","['ReleasesToMove', 'releases']"
Deployability,// Connect the epilog code to the original loop and update the; // PHI functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,1,['update'],['update']
Deployability,"// Connect the preheader to the exit block. Keep the old edge to the header; // around to perform the dominator tree update in two separate steps; // -- #1 insertion of the edge preheader -> exit and #2 deletion of the edge; // preheader -> header.; //; //; // 0. Preheader 1. Preheader 2. Preheader; // | | | |; // V | V |; // Header <--\ | Header <--\ | Header <--\; // | | | | | | | | | | |; // | V | | | V | | | V |; // | Body --/ | | Body --/ | | Body --/; // V V V V V; // Exit Exit Exit; //; // By doing this is two separate steps we can perform the dominator tree; // update without using the batch update API.; //; // Even when the loop is never executed, we cannot remove the edge from the; // source block to the exit block. Consider the case where the unexecuted loop; // branches back to an outer loop. If we deleted the loop and removed the edge; // coming to this inner loop, this will break the outer loop structure (by; // deleting the backedge of the outer loop). If the outer loop is indeed a; // non-loop, it will be deleted in a future iteration of loop deletion pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:117,update,update,117,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,3,['update'],['update']
Deployability,// Connect the prolog code to the original loop and update the; // PHI functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,1,['update'],['update']
Deployability,// Connect to callees of innermost stack frame in inlined call chain.; // This updates context ids for FirstNode's callee's to reflect those; // moved to NewNode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:79,update,updates,79,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['updates']
Deployability,// Connect to callers of outermost stack frame in inlined call chain.; // This updates context ids for FirstNode's caller's to reflect those; // moved to NewNode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:79,update,updates,79,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['updates']
Deployability,// Conservatively add defs from DefMI and defs/uses from MI to the set of; // registers that need their kill flags updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:115,update,updated,115,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['update'],['updated']
Deployability,// Conservatively merge the ReleaseMetadata information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:28,Release,ReleaseMetadata,28,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['Release'],['ReleaseMetadata']
Deployability,"// Conservatively, do not use any instruction which has any of exact; // flags installed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:79,install,installed,79,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['install'],['installed']
Deployability,// Construct MemoryBuffer and update buffer manager.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:30,update,update,30,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,// Construct a custom pass pipeline that starts after instruction; // selection.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llc/llc.cpp:27,pipeline,pipeline,27,interpreter/llvm-project/llvm/tools/llc/llc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llc/llc.cpp,2,['pipeline'],['pipeline']
Deployability,"// Construct final normalization set for c.d.f = integrated observables + any extra specified by user",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:49,integrat,integrated,49,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"// Construct inner-most integration: over observables (with fixed or param range) not used in any other param range definitions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:24,integrat,integration,24,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Deployability,"// Constructor where func and model; //; // 'func' = func(xprime); // 'model' = model(xprime); //; // and; // 'xprime' is the RRV that should be connected to func and model; // (i.e. the variable that will be integrated over); // 'x' is RRV that represents the value at which the convolution is calculated; // (this variable should _not_ be connected to func and model); //; // this function returns RCBB[x',x] = f[x']*g[x-x'], i.e. the substiturion g[x'] --> g[x-x']; // is taken care internally; //; // The integral of this binding over its 1st arg yields the convolution (f (x) g)[x]; //; // allocate memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx:209,integrat,integrated,209,roofit/roofitcore/src/RooConvIntegrandBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx,1,['integrat'],['integrated']
Deployability,// Contains the number of branches per nesting level we are currently; // in while parsing a preprocessor branch sequence.; // This is used to update PPLevelBranchCount at the end of a branch; // sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.h:143,update,update,143,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.h,1,['update'],['update']
Deployability,// Continuous range maps we may be updating in our module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:3,Continuous,Continuous,3,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['Continuous'],['Continuous']
Deployability,"// Convert coordinates back to original system; // Separate the set of data points into arcs P(k-1),P(k).; // Calculate the direction cosines. first consider whether; // there is a continuous tangent at the endpoints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:181,continuous,continuous,181,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['continuous'],['continuous']
Deployability,// Convert the call to have at least Release ordering to make sure; // the shadow operations aren't reordered after it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:37,Release,Release,37,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,2,['Release'],['Release']
Deployability,"// Convert to (e, x, y, z) coordinate system and update sums",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:49,update,update,49,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['update'],['update']
Deployability,// Copy and clear the list of instructions we need to explore from. It is; // refilled with instructions the next update has to look at.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:114,update,update,114,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['update']
Deployability,"// Copy any terminator instructions to the new kernel, and update; // names as needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:59,update,update,59,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['update'],['update']
Deployability,"// Copy content to working memory, then update content to point at working; // memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkMemoryManager.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkMemoryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLinkMemoryManager.cpp,1,['update'],['update']
Deployability,// Copy data to update into Bytes from the file FS and the buffer Out.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h:16,update,update,16,interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,1,['update'],['update']
Deployability,"// Copy edges to NewBlock (recording their iterators so that we can remove; // them from B), and update of Edges remaining on B.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp:97,update,update,97,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,1,['update'],['update']
Deployability,"// Copy new integrator-specific data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:12,integrat,integrator-specific,12,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['integrat'],['integrator-specific']
Deployability,// Copy out uses and update value of Constant used by debug info metadata with undef below,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Metadata.cpp:21,update,update,21,interpreter/llvm-project/llvm/lib/IR/Metadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Metadata.cpp,1,['update'],['update']
Deployability,// Copy regs to update first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:16,update,update,16,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['update'],['update']
Deployability,"// Copy to current session; // do not use copy constructor which does not update highest color index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:74,update,update,74,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['update'],['update']
Deployability,// Copy updated data back to the file FS and the buffer Out.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h:8,update,updated,8,interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,1,['update'],['updated']
Deployability,"// Count the number of PHI nodes that will need to be updated (converted; // to MUX). Those can be later converted to predicated instructions, so; // they aren't always adding extra cost.; // KLUDGE: Also, count the number of predicate register definitions in; // each block. The scheduler may increase the pressure of these and cause; // expensive spills (e.g. bitmnp01).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:54,update,updated,54,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,1,['update'],['updated']
Deployability,"// Count the total number of inserions of each edge.; // Each insertion adds 1 and deletion subtracts 1. The end number should be; // one of {-1 (deletion), 0 (NOP), +1 (insertion)}. Otherwise, the sequence; // of updates contains multiple updates of the same kind and we assert for; // that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h:214,update,updates,214,interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h,2,['update'],['updates']
Deployability,// CountD specifies which element of destination to update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.cpp,1,['update'],['update']
Deployability,"// Counter increased on every update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneBase.h:30,update,update,30,graf3d/gl/inc/TGLSceneBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneBase.h,1,['update'],['update']
Deployability,"// Counter increased on minimal update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneBase.h:32,update,update,32,graf3d/gl/inc/TGLSceneBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneBase.h,1,['update'],['update']
Deployability,"// Counters, PrivateCounters, Inits,; // Updates, Finals, DependentCounters,; // DependentInits, FinalsConditions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:41,Update,Updates,41,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['Update'],['Updates']
Deployability,"// Cray's gcc installation puts headers under ""g++"" without a; // version suffix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp:14,install,installation,14,interpreter/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Linux.cpp,1,['install'],['installation']
Deployability,// Create PHI nodes at NewExit (from the unrolling loop Latch and PreHeader).; // Update corresponding PHI nodes in epilog loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:82,Update,Update,82,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,1,['Update'],['Update']
Deployability,// Create a basic pipeline simulating an out-of-order backend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp:18,pipeline,pipeline,18,interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,1,['pipeline'],['pipeline']
Deployability,// Create a conditional branch and update PHI nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:35,update,update,35,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,// Create a context to control ownership of the pipeline hardware.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp:48,pipeline,pipeline,48,interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,1,['pipeline'],['pipeline']
Deployability,// Create a lexical update block containing all of the declarations in the; // translation unit that do not come from other AST files.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:20,update,update,20,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,// Create a loop for each partition except the last. Clone the original; // loop before PH along with adding a preheader for the cloned loop. Then; // update PH to point to the newly added preheader.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp:151,update,update,151,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,1,['update'],['update']
Deployability,"// Create a new (empty) preheader, and update the PHI nodes in the; // header to use the new preheader.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp:39,update,update,39,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,1,['update'],['update']
Deployability,"// Create a new cmp, that checks the returned value of loop_decrement*,; // and update the exit branch to use it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/HardwareLoops.cpp:80,update,update,80,interpreter/llvm-project/llvm/lib/CodeGen/HardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/HardwareLoops.cpp,1,['update'],['update']
Deployability,// Create a new type location builder so we can update the type; // location information we have.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:48,update,update,48,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['update'],['update']
Deployability,"// Create a pipeline, stages, and a printer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp:12,pipeline,pipeline,12,interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,1,['pipeline'],['pipeline']
Deployability,// Create a small function pass pipeline to cleanup after all the global; // optimizations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:32,pipeline,pipeline,32,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// Create a vector splat to use in the induction update.; //; // FIXME: If the step is non-constant, we create the vector splat with; // IRBuilder. IRBuilder can constant-fold the multiply, but it doesn't; // handle a constant vector splat.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp:49,update,update,49,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp,1,['update'],['update']
Deployability,"// Create a virtual register, then update the virtual register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:35,update,update,35,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['update'],['update']
Deployability,// Create an early function pass manager to cleanup the output of the; // frontend. Not necessary with LTO post link pipelines since the pre link; // pipeline already cleaned up the frontend output.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:117,pipeline,pipelines,117,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"// Create appropriate numeric integrator using factory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:30,integrat,integrator,30,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrator']
Deployability,"// Create artificial dependencies between the source of COPY/REG_SEQUENCE that; // is loop-carried to the USE in next iteration. This will help pipeliner avoid; // additional copies that are needed across iterations. An artificial dependence; // edge is added from USE to SOURCE of COPY/REG_SEQUENCE.; // PHI-------Anti-Dep-----> COPY/REG_SEQUENCE (loop-carried); // SRCOfCopY------True-Dep---> COPY/REG_SEQUENCE; // PHI-------True-Dep------> USEOfPhi; // The mutation creates; // USEOfPHI -------Artificial-Dep---> SRCOfCopy; // This overall will ensure, the USEOfPHI is scheduled before SRCOfCopy; // (since USE is a predecessor), implies, the COPY/ REG_SEQUENCE is scheduled; // late to avoid additional copies across iterations. The possible scheduling; // order would be; // USEOfPHI --- SRCOfCopy--- COPY/REG_SEQUENCE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:144,pipeline,pipeliner,144,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeliner']
Deployability,// Create induction resume values for both widened pointer and; // integer/fp inductions and update the start value of the induction; // recipes to use the resume value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:93,update,update,93,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,"// Create installation directory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx:10,install,installation,10,main/src/nbmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx,1,['install'],['installation']
Deployability,"// Create integral performing remaining numeric integration over (partial) analytic product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:48,integrat,integration,48,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integration']
Deployability,// Create pass pipeline; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp:15,pipeline,pipeline,15,interpreter/llvm-project/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-opt-fuzzer/llvm-opt-fuzzer.cpp,1,['pipeline'],['pipeline']
Deployability,// Create patch for the location offset value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp:10,patch,patch,10,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,1,['patch'],['patch']
Deployability,// Create patch for the range offset value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp:10,patch,patch,10,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,1,['patch'],['patch']
Deployability,// Create patches for attribute referencing other non invariant section.; // Invariant section could not be updated here as this section and; // reference to it do not change value in case --update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp:10,patch,patches,10,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,3,"['patch', 'update']","['patches', 'update', 'updated']"
Deployability,"// Create prototype integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:20,integrat,integrator,20,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integrator']
Deployability,"// Create study manager with separate generation and fit model. This configuration; // is set up to generate bad fits as the fit and generator model have different means; // and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:69,configurat,configuration,69,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['configurat'],['configuration']
Deployability,"// Create the ""release"" selector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp:15,release,release,15,interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,1,['release'],['release']
Deployability,// Create the RegMask Operand according to our updated mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp:47,update,updated,47,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,1,['update'],['updated']
Deployability,"// Create the TEnumConstant or update it if existing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:31,update,update,31,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"// Create the callsite to profile count map which is; // used to update the original function's entry count,; // after the function is partially inlined into the callsite.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['update'],['update']
Deployability,"// Create the conditional branch based on the third operand of the; // instruction, which tells us if we are wrapping a normal or streaming; // function.; // We test the live value of pstate.sm and toggle pstate.sm if this is not the; // expected value for the callee (0 for a normal callee and 1 for a streaming; // callee).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:198,toggle,toggle,198,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,1,['toggle'],['toggle']
Deployability,"// Create the list to save them in the query result (each derived packetizer is; // responsible to update this coherently)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:99,update,update,99,proof/proof/src/TVirtualPacketizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx,1,['update'],['update']
Deployability,// Create the pipeline stages.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp:14,pipeline,pipeline,14,interpreter/llvm-project/llvm/lib/MCA/Context.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp,2,['pipeline'],['pipeline']
Deployability,"// Create the subrange information, required by the logical view. Once; // the array has been processed, the dimension sizes will updated, as; // the sizes are a progression. For instance:; // sizeof(int) = 4; // int Array[2]; Sizes: 8 Dim: 8 / 4 -> [2]; // int Array[2][3]; Sizes: 24, 12 Dim: 24 / 12 -> [2]; // Dim: 12 / 4 -> [3]; // int Array[2][3][4]; sizes: 96, 48, 16 Dim: 96 / 48 -> [2]; // Dim: 48 / 16 -> [3]; // Dim: 16 / 4 -> [4]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:130,update,updated,130,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['update'],['updated']
Deployability,// Create the translation unit scope. Install it as the current scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:38,Install,Install,38,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['Install'],['Install']
Deployability,"// Create the views for this pipeline, execute, and emit a report.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp:29,pipeline,pipeline,29,interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,1,['pipeline'],['pipeline']
Deployability,// Create the wide load and update the MemorySSA.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:28,update,update,28,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['update'],['update']
Deployability,// CreatePath; /* ----- UpdateContainer ----- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:24,Update,UpdateContainer,24,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['UpdateContainer']
Deployability,"// Cross-check to make sure the integration works correctly even if there is; // only one midpoint on the RooCurve. Covers GitHub issue #9838 (the reproducer; // in that issue was translated to this test).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:32,integrat,integration,32,roofit/roofitcore/test/testRooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx,1,['integrat'],['integration']
Deployability,"// Cross-compiling binutils and GCC installations (vanilla and openSUSE at; // least) put various tools in a triple-prefixed directory off of the parent; // of the GCC installation. We use the GCC triple here to ensure that we end; // up with tools that support the same amount of cross compiling as the; // detected GCC installation. For example, if we find a GCC installation; // targeting x86_64, but it is a bi-arch GCC installation, it can also be; // used to target i386.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:36,install,installations,36,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,5,['install'],"['installation', 'installations']"
Deployability,"// Cross-imported integrated dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:18,integrat,integrated,18,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Deployability,"// Currently clang and the llvm assembler do not support generating symbol; // stubs from assembly, so we skip the input on asm files. For ifs files; // we rely on the normal pipeline setup in the pipeline setup code above.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:175,pipeline,pipeline,175,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,2,['pipeline'],['pipeline']
Deployability,"// Currently disabled as only drawing into one view at a time; // Re-enalbe when multiple viewer implemented on pad; /*if (ev->fType == kButtonRelease) {; Float_t longitude_rad;; Float_t latitude_rad;; Float_t psi_rad;; const Float_t kPI = Float_t (TMath::Pi());. x3d_get_position(&longitude_rad, &latitude_rad, &psi_rad);. Int_t irep;. Float_t longitude_deg = longitude_rad * 180.0/kPI - 90;; Float_t latitude_deg = latitude_rad * 180.0/kPI + 90;; Float_t psi_deg = psi_rad * 180.0/kPI;. fPad->GetView()->SetView(longitude_deg, latitude_deg, psi_deg, irep);. fPad->SetPhi(-90 - longitude_deg);; fPad->SetTheta(90 - latitude_deg);. fPad->Modified(kTRUE);; fPad->Update();; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx:662,Update,Update,662,graf3d/x3d/src/TViewerX3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx,1,['Update'],['Update']
Deployability,"// Currently only allow PredBB to have two predecessors, one being BB.; // Update BI to branch to BB's only successor instead of BB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:75,Update,Update,75,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,1,['Update'],['Update']
Deployability,"// Currently the module file are never unloaded (even if the library is; // unloaded) and, of course, never reloaded.; // Consequently, we must NOT remove the `pendingRdict` from the list; // of pending dictionary, otherwise if a library is unloaded and then; // reload we will be unable to update properly the TClass object; // (because we wont be able to load the rootpcm file by executing the; // above lines)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:291,update,update,291,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"// Currently there is no support for enabling whole program visibility via a; // linker option in the old LTO API, but this call allows it to be specified; // via the internal option. Must be done before WPD invoked via the optimizer; // pipeline run below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOCodeGenerator.cpp:238,pipeline,pipeline,238,interpreter/llvm-project/llvm/lib/LTO/LTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOCodeGenerator.cpp,1,['pipeline'],['pipeline']
Deployability,"// Custom narrowing of wide multiplies using wide multiply-add instructions.; //; // TODO: If the multiply is followed by an addition, we should attempt to; // integrate it to make better use of V_MAD_U64_U32's multiply-add capabilities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:160,integrat,integrate,160,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['integrat'],['integrate']
Deployability,// Cycles where backpressure increased because of pipeline pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:50,pipeline,pipeline,50,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['pipeline'],['pipeline']
Deployability,"// D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:248,integrat,integrate,248,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrate']
Deployability,// DAG.getTruncStore() can't be used here because it doesn't accept; // the general (base + offset) addressing mode.; // So we use UpdateNodeOperands and setTruncatingStore instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:131,Update,UpdateNodeOperands,131,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['Update'],['UpdateNodeOperands']
Deployability,// DTU update: Collect all the edges that exit BB.; // These dominator edges will be redirected from Pred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:7,update,update,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,1,['update'],['update']
Deployability,// DTU updates: Collect all the edges that enter; // PredBB. These dominator edges will be redirected to DestBB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:7,update,updates,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['update'],['updates']
Deployability,"// DW_CFA_GNU_window_save is used for different things on different; // architectures. For aarch64 it is known as; // DW_CFA_AARCH64_negate_ra_state. The action is to toggle the; // value of the return address state between 1 and 0. If there is; // no rule for the AARCH64_DWARF_PAUTH_RA_STATE register, then it; // should be initially set to 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugFrame.cpp:167,toggle,toggle,167,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugFrame.cpp,1,['toggle'],['toggle']
Deployability,"// Deal with the IntegrateBins argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:17,Integrat,IntegrateBins,17,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['Integrat'],['IntegrateBins']
Deployability,// Debug configuration container,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:9,configurat,configuration,9,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['configurat'],['configuration']
Deployability,"// Debug directory found and patched, all done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/COFF/COFFWriter.cpp:29,patch,patched,29,interpreter/llvm-project/llvm/lib/ObjCopy/COFF/COFFWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/COFF/COFFWriter.cpp,1,['patch'],['patched']
Deployability,"// Debug intrinsics in the new function need to be updated in one of two; // ways:; // 1) They need to be deleted, because they describe a value in the old; // function.; // 2) They need to point to fresh metadata, e.g. because they currently; // point to a variable in the wrong scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp:51,update,updated,51,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,1,['update'],['updated']
Deployability,"// Debug objects are stored by ResourceKey only after registration.; // Thus, pending objects don't need to be updated here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:111,update,updated,111,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['update'],['updated']
Deployability,"// Debug value, stackmap and patchpoint instructions can't be out of; // range, so they don't need any updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp:29,patch,patchpoint,29,interpreter/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp,2,"['patch', 'update']","['patchpoint', 'updates']"
Deployability,// Decide whether to use verbose asm. Verbose assembly is the default on; // toolchains which have the integrated assembler on by default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:103,integrat,integrated,103,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['integrat'],['integrated']
Deployability,"// Decides on the best configuration of filter(s) to use in order to decode; // the instructions. A conflict of instructions may occur, in which case we; // dump the conflict set to the standard error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp:23,configurat,configuration,23,interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,1,['configurat'],['configuration']
Deployability,"// Declare that we can analytically integrate all requested observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:36,integrat,integrate,36,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,3,['integrat'],['integrate']
Deployability,"// Declare that we can analytically integrate all requested observables; // (basically, we will take care of the problem, and delegate where required); //assert(normSet==0);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:36,integrat,integrate,36,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integrate']
Deployability,"// Declare the process that will be generating the stacktrace; // For more see: http://askubuntu.com/questions/41629/after-upgrade-gdb-wont-attach-to-process",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:123,upgrade,upgrade-gdb-wont-attach-to-process,123,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['upgrade'],['upgrade-gdb-wont-attach-to-process']
Deployability,"// Deduce function attributes. We do another run of this after the function; // simplification pipeline, so this only needs to run when it could affect the; // function simplification pipeline, which is only the case with recursive; // functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:95,pipeline,pipeline,95,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['pipeline'],['pipeline']
Deployability,"// DeepestParsedCaseStmt - This is the deepest statement we have parsed, which; // gets updated each time a new case is parsed, and whose body is unset so; // far. When parsing 'case 4', this is the 'case 3' node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp:88,update,updated,88,interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,1,['update'],['updated']
Deployability,"// Default Constructor. If tolerances are not given use default values from ROOT::Math::IntegratorOneDimOptions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/GaussIntegrator.cxx:88,Integrat,IntegratorOneDimOptions,88,math/mathcore/src/GaussIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/GaussIntegrator.cxx,1,['Integrat'],['IntegratorOneDimOptions']
Deployability,"// Default the destructor in release builds, A trivial destructor may enable; // better codegen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:29,release,release,29,interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,2,['release'],['release']
Deployability,"// Default values for configuration options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h:22,configurat,configuration,22,gui/guihtml/inc/TGHtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h,1,['configurat'],['configuration']
Deployability,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:28,integrat,integrator,28,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,4,"['configurat', 'integrat']","['configuration', 'integration', 'integrator']"
Deployability,"// Define configuration for this method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:10,configurat,configuration,10,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,14,['configurat'],['configuration']
Deployability,// Define type kmp_depend_info[<Dependencies.size()>];; // For depobj reserve one extra element to store the number of elements.; // It is required to handle depobj(x) update(in) construct.; // kmp_depend_info[<Dependencies.size()>] deps;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:168,update,update,168,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['update']
Deployability,"// Delete all configuration data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,configurat,configuration,14,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['configurat'],['configuration']
Deployability,// Delete all dead instructions from 'DeadInsts'.; // Please note ScalarEvolution is updated along the way.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NaryReassociate.cpp:85,update,updated,85,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NaryReassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NaryReassociate.cpp,1,['update'],['updated']
Deployability,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,integrat,integrator-specific,14,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,4,"['configurat', 'integrat']","['configuration', 'integrator-specific']"
Deployability,"// Delete the instructions backwards, as it has a reduced likelihood of having; // to update as many def-use and use-def chains. Start after the terminator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:86,update,update,86,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['update'],['update']
Deployability,"// Delete the instructions backwards, as it has a reduced likelihood of; // having to update as many def-use and use-def chains.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp:86,update,update,86,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,2,['update'],['update']
Deployability,"// Delete the instructions backwards, as it has a reduced likelihood of; // having to update as many def-use and use-def chains.; //; // Because we add to ToRemove during fusion we can't guarantee that defs; // are before uses. Change uses to poison temporarily as these should get; // removed as well.; //; // For verification, we keep track of where we changed uses to poison in; // PoisonedInsts and then check that we in fact remove them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp:86,update,update,86,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,1,['update'],['update']
Deployability,// Delete the original retain and release calls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:34,release,release,34,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"// Demangles optional binder and updates the number of bound lifetimes.; //; // <binder> = ""G"" <base-62-number>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/RustDemangle.cpp:33,update,updates,33,interpreter/llvm-project/llvm/lib/Demangle/RustDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/RustDemangle.cpp,1,['update'],['updates']
Deployability,"// Depending on the configuration we expect:; // TreePlayer Gpad Graf Graf3d Hist [Imt] [MathCore] MultiProc Net Tree [tbb]..; // FIXME: We should add a generic gtest regex matcher and use a regex here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:20,configurat,configuration,20,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['configurat'],['configuration']
Deployability,"// Depending on the function, the integrator precision doesn't reach the; // actual precisiosn parameter, so we give it some headroom.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:34,integrat,integrator,34,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,1,['integrat'],['integrator']
Deployability,"// Deploy and poison redzones around dynamic alloca call. To do this, we; // should replace this call with another one with changed parameters and; // replace all its uses with new address, so; // addr = alloca type, old_size, align; // is replaced by; // new_size = (old_size + additional_size) * sizeof(type); // tmp = alloca i8, new_size, max(align, 32); // addr = tmp + 32 (first 32 bytes are for the left redzone).; // Additional_size is added to make new memory allocation contain not only; // requested memory, but also left, partial and right redzones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:3,Deploy,Deploy,3,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['Deploy'],['Deploy']
Deployability,"// Deprecated, should be removed when rocm releases using it are no longer; // relevant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_hip_libdevice_declares.h:43,release,releases,43,interpreter/llvm-project/clang/lib/Headers/__clang_hip_libdevice_declares.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_hip_libdevice_declares.h,1,['release'],['releases']
Deployability,// Dest has been folded into Fold. Update our worklists accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp:35,Update,Update,35,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,1,['Update'],['Update']
Deployability,"// Destination registers should not have subregisters at this; // point of the pipeline, otherwise the main live-range will be; // defined more than once, which is against SSA.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp:79,pipeline,pipeline,79,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GISelKnownBits.cpp,1,['pipeline'],['pipeline']
Deployability,"// Destroy old elements: useless work for trivial types, but in case the element type's constructor; // allocates memory we need to release it here to avoid memleaks (e.g. if this is an RVec<RVec<int>>)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RField.cxx:132,release,release,132,tree/ntuple/v7/src/RField.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RField.cxx,1,['release'],['release']
Deployability,"// Detach retired Block, release memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp:25,release,release,25,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineCFGStructurizer.cpp,1,['release'],['release']
Deployability,// Detect ROCm packages built with SPACK.; // clang is installed at; // <rocm_root>/llvm-amdgpu-<rocm_release_string>-<hash>/bin directory.; // We only consider the parent directory of llvm-amdgpu package as ROCm; // installation candidate for SPACK.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:55,install,installed,55,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,2,['install'],"['installation', 'installed']"
Deployability,"// Detect patterns for large offsets that are passed into an ADD instruction.; // If the pattern is found, updates the offset in Hi and Lo instructions; // and deletes TailAdd and the instructions that produced the offset.; //; // Base address lowering is of the form:; // Hi: lui vreg1, %hi(s); // Lo: addi vreg2, vreg1, %lo(s); // / \; // / \; // / \; // / The large offset can be of two forms: \; // 1) Offset that has non zero bits in lower 2) Offset that has non zero; // 12 bits and upper 20 bits bits in upper 20 bits only; // OffseLUI: lui vreg3, 4; // OffsetTail: addi voff, vreg3, 188 OffsetTail: lui voff, 128; // \ /; // \ /; // \ /; // \ /; // TailAdd: add vreg4, vreg2, voff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMergeBaseOffset.cpp:107,update,updates,107,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMergeBaseOffset.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMergeBaseOffset.cpp,1,['update'],['updates']
Deployability,"// Detect patterns for offsets that are passed into a SHXADD instruction.; // The offset has 1, 2, or 3 trailing zeros and fits in simm13, simm14, simm15.; // The constant is created with addi voff, x0, C, and shXadd is used to; // fill insert the trailing zeros and do the addition.; // If the pattern is found, updates the offset in Hi and Lo instructions; // and deletes TailShXAdd and the instructions that produced the offset.; //; // Hi: lui vreg1, %hi(s); // Lo: addi vreg2, vreg1, %lo(s); // OffsetTail: addi voff, x0, C; // TailAdd: shXadd vreg4, voff, vreg2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMergeBaseOffset.cpp:313,update,updates,313,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMergeBaseOffset.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMergeBaseOffset.cpp,1,['update'],['updates']
Deployability,// Determine if all users of the induction variable update instruction are; // scalar after vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,// Determine if all users of the induction variable update instruction are; // uniform after vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,"// Determine where to find the PS4/PS5 libraries.; // If -isysroot was passed, use that as the SDK base path.; // If not, we use the EnvVar if it exists; otherwise use the driver's; // installation path, which should be <SDK_DIR>/host_tools/bin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PS4CPU.cpp:185,install,installation,185,interpreter/llvm-project/clang/lib/Driver/ToolChains/PS4CPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PS4CPU.cpp,1,['install'],['installation']
Deployability,"// Determine whether the new insertion points we computed preserve the; // balance of retain and release calls through the program.; // TODO: If the fully aggressive solution isn't valid, try to find a; // less aggressive solution which is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:97,release,release,97,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"// Determine whether the original call points are balanced in the retain and; // release calls through the program. If not, conservatively don't touch; // them.; // TODO: It's theoretically possible to do code motion in this case, as; // long as the existing imbalances are maintained.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:81,release,release,81,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,// Device library may be installed in clang or resource directory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:25,install,installed,25,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,1,['install'],['installed']
Deployability,// Diagnose the conflict and update the second declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:29,update,update,29,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['update'],['update']
Deployability,// Diagnose when integrated-objemitter options are not supported by this; // toolchain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp:17,integrat,integrated-objemitter,17,interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp,1,['integrat'],['integrated-objemitter']
Deployability,"// Diagnostics in the ASTUnit were updated, reset the associated; // diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp:35,update,updated,35,interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp,1,['update'],['updated']
Deployability,"// Directly substitute the functions in the call graph. Note that this; // requires the old function to be completely dead and completely; // replaced by the new function. It does no call graph updates, it merely; // swaps out the particular function mapped to a particular node in the; // graph.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp:194,update,updates,194,interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp,1,['update'],['updates']
Deployability,"// Disable IntegrateBins forcefully",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:11,Integrat,IntegrateBins,11,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['Integrat'],['IntegrateBins']
Deployability,"// Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,integrat,integration,20,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Deployability,"// Disable function (component) caching if integration is requested as the function; // will be evaluated at coordinates other than the points in the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:43,integrat,integration,43,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['integrat'],['integration']
Deployability,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:77,integrat,integrate,77,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,2,['integrat'],['integrate']
Deployability,// Disable tail calls if there is an swifterror argument. Targets have not; // been updated to support tail calls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:84,update,updated,84,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['update'],['updated']
Deployability,"// Disable the pass to fix unwind information. Whether the pass is included in; // the pipeline is controlled via the target options, this option serves as; // manual override.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:87,pipeline,pipeline,87,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['pipeline'],['pipeline']
Deployability,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898; // We still have to release the allocations which resets their addresses; // to FinalizedAlloc::InvalidAddr, or the assertion in ~FinalizedAlloc; // will be unhappy...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:205,release,release,205,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,1,['release'],['release']
Deployability,// Discard updates by inspecting the current state of successors of From.; // Since isUpdateValid() must be called *after* the Terminator of From is; // altered we can determine if the update is unnecessary for batch updates; // or invalid for a single update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:11,update,updates,11,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,4,['update'],"['update', 'updates']"
Deployability,// Do a post-order traversal of the loops so that counter updates can be; // iteratively hoisted outside the loop nest.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:58,update,updates,58,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['update'],['updates']
Deployability,"// Do fits in different configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooSimultaneous.cxx:24,configurat,configurations,24,roofit/roofitcore/test/testRooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooSimultaneous.cxx,1,['configurat'],['configurations']
Deployability,"// Do function outlining for region after early return block(s).; // NOTE: For vararg functions that do the vararg handling in the outlined; // function, we temporarily generate IR that does not properly; // forward varargs to the outlined function. Calling InlineFunction; // will update calls to the outlined functions to properly forward; // the varargs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:282,update,update,282,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['update'],['update']
Deployability,// Do not do types deduplication in case --update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.cpp:43,update,update,43,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerImpl.cpp,1,['update'],['update']
Deployability,// Do not instrument PGO counter updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp:33,update,updates,33,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,1,['update'],['updates']
Deployability,// Do not need extra information for patch-style change reporter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h:37,patch,patch-style,37,interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h,1,['patch'],['patch-style']
Deployability,"// Do not optimize out type conversion of f128 type yet.; // For some targets like x86_64, configuration is changed to keep one f128; // value in one SSE register, but instruction selection cannot handle; // FCOPYSIGN on SSE registers yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:91,configurat,configuration,91,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['configurat'],['configuration']
Deployability,"// Do not prorate the indirect callsite distribution since the original; // distribution will be used to scale down non-promoted profile target; // counts later. By doing this we lose track of the real callsite count; // for the leftover indirect callsite as a trade off for accurate call; // target counts.; // TODO: Ideally we would have two separate factors, one for call site; // counts and one is used to prorate call target counts.; // Do not update the promoted direct callsite distribution at this; // point since the original distribution combined with the callee profile; // will be used to prorate callsites from the callee if inlined. Once not; // inlined, the direct callsite distribution should be prorated so that; // the it will reflect the real callsite counts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:449,update,update,449,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['update'],['update']
Deployability,// Do not shrink an aligned scalar load to sub-dword.; // Scalar engine cannot do sub-dword loads.; // TODO: Update this for GFX12 which does have scalar sub-dword loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:109,Update,Update,109,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,1,['Update'],['Update']
Deployability,"// Do not sink floating point instructions that updates USR register.; // Example:; // feclearexcept; // F2_conv_w2sf; // fetestexcept; // MachineSink sinks F2_conv_w2sf and we are not able to catch exceptions.; // TODO: On some of these floating point instructions, USR is marked as Use.; // In reality, these instructions also Def the USR. If USR is marked as Def,; // some of the assumptions in assembler packetization are broken.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:48,update,updates,48,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,1,['update'],['updates']
Deployability,// Do not treat C 'false' and 'true' macros as configuration values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:47,configurat,configuration,47,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['configurat'],['configuration']
Deployability,// Do not treat tail or sibling call sites as safe points. This is; // legal since any arguments passed to the callee which live in the; // remnants of the callers frame will be owned and updated by the; // callee if required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GCRootLowering.cpp:188,update,updated,188,interpreter/llvm-project/llvm/lib/CodeGen/GCRootLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GCRootLowering.cpp,1,['update'],['updated']
Deployability,// Do not unreserve dispatch hazard resource buffers. Wait until all; // pipeline resources have been freed too.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/ResourceManager.cpp:73,pipeline,pipeline,73,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/ResourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/ResourceManager.cpp,1,['pipeline'],['pipeline']
Deployability,"// Do not update 'MaxStack' for primitive and built-in functions; // (encoded with names either starting with ""erlang.""/""bif_"" or not; // having a ""."", such as a simple <Module>.<Function>.<Arity>, or an; // ""_"", such as the BIF ""suspend_0"") as they are executed on another; // stack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['update'],['update']
Deployability,// Do not update future local split artifacts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CalcSpillWeights.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/CodeGen/CalcSpillWeights.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CalcSpillWeights.cpp,1,['update'],['update']
Deployability,"// Do not update operands that define the old register.; //; // The new register was scavenged for the range of instructions that are; // being updated, therefore it should not be defined within this range; // except possibly in the final instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,2,['update'],"['update', 'updated']"
Deployability,"// Do not update return LEA, if the current one provides a displacement; // which fits in 1 byte, while the new candidate does not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,1,['update'],['update']
Deployability,"// Do not use the identify_magic overload taking a path: It will open the; // file and then mmap its contents, possibly causing bus errors when another; // process truncates the file while we are trying to read it. Instead just; // read the first 1024 bytes, which should be enough for identify_magic to; // do its work.; // TODO: Fix the code upstream and consider going back to calling the; // convenience function after a future LLVM upgrade.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:437,upgrade,upgrade,437,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,1,['upgrade'],['upgrade']
Deployability,// Do this after any importing so that imported code is updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp:56,update,updated,56,interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp,1,['update'],['updated']
Deployability,// Do this after any importing so that imported code is updated.; // See comment at call to updateVCallVisibilityInIndex() for why; // WholeProgramVisibilityEnabledInLTO is false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:56,update,updated,56,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,2,['update'],"['updateVCallVisibilityInIndex', 'updated']"
Deployability,"// Do this last, since it relies on the named stream map being complete, and; // that can be updated by previous steps in the finalization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PDBFileBuilder.cpp:93,update,updated,93,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PDBFileBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PDBFileBuilder.cpp,2,['update'],['updated']
Deployability,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:75,integrat,integrate,75,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integrate']
Deployability,"// Do we need to update screen?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:17,update,update,17,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,1,['update'],['update']
Deployability,"// DocumentListTraits<vector<FormatStyle>> uses the context to get default; // values for the fields, keys for which are missing from the configuration.; // Mapping also uses the context to get the language to find the correct; // base style.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:138,configurat,configuration,138,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['configurat'],['configuration']
Deployability,// Does not output the object until after the pages have been output.; // Returns an object containing the objectId and content.; // All pages have been added so the object ID can be estimated to start right after.; // This does not modify the current objectNumber; It must be updated after the newObjects are output.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:277,update,updated,277,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updated']
Deployability,"// Doesn't exist. Install, register weak pointer for future sharing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:18,Install,Install,18,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['Install'],['Install']
Deployability,// DomNode - Dominator tree node for the block.; // Cleared when the final value has been determined and LI has been updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:117,update,updated,117,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['update'],['updated']
Deployability,// Domain Shader: Patch/Output mapping table,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/DXContainer.cpp:18,Patch,Patch,18,interpreter/llvm-project/llvm/lib/Object/DXContainer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/DXContainer.cpp,1,['Patch'],['Patch']
Deployability,"// DominatorTreeAnalysis, PostDominatorTreeAnalysis, and LoopAnalysis; // are incrementally updated throughout this pass whenever; // SplitBlockAndInsertIfThen is called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp:92,update,updated,92,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,1,['update'],['updated']
Deployability,// Don't actually update the type on the new declaration if the old; // declaration was an extern declaration in a different scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:18,update,update,18,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['update'],['update']
Deployability,"// Don't break multi-line tokens other than block comments and raw string; // literals. Instead, just update the state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:102,update,update,102,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['update'],['update']
Deployability,"// Don't do retain+release tracking for ARCInstKind::RetainRV, because; // it's better to let it remain as the first instruction after a call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:19,release,release,19,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"// Don't do retain+release tracking for ARCInstKind::RetainRV, because; // it's; // better to let it remain as the first instruction after a call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:19,release,release,19,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['release'],['release']
Deployability,// Don't emit anything here (or if you do you will have to update; // the corresponding deserialization function).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterStmt.cpp:59,update,update,59,interpreter/llvm-project/clang/lib/Serialization/ASTWriterStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterStmt.cpp,1,['update'],['update']
Deployability,// Don't even attempt to generate code for MIPS-V. It has not; // been tested and currently exists for the integrated assembler only.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSubtarget.cpp:107,integrat,integrated,107,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSubtarget.cpp,1,['integrat'],['integrated']
Deployability,"// Don't generally constrain external configuration; // However exceeding the vRotate limits or silly FOV values will; // cause very weird behaviour or projections so fix these",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx:38,configurat,configuration,38,graf3d/gl/src/TGLPerspectiveCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx,1,['configurat'],['configuration']
Deployability,// Don't instrument MSVC CRT configuration helpers. They may run before normal; // initialization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp:29,configurat,configuration,29,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp,1,['configurat'],['configuration']
Deployability,// Don't need to update Edge's context ids since we are simply reconnecting; // it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:17,update,update,17,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['update']
Deployability,// Don't pipeline large loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:9,pipeline,pipeline,9,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipeline']
Deployability,"// Don't reset the pointer to BatchUpdateInfo here -- if there's an update; // in progress, we need this information to continue it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:68,update,update,68,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['update'],['update']
Deployability,"// Don't treat calls to '[super dealloc]' as escaping for the purposes; // of this checker. Because the checker diagnoses missing releases in the; // post-message handler for '[super dealloc], escaping here would cause; // the checker to never warn.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:130,release,releases,130,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['releases']
Deployability,// Don't try to update weights for degenerate case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:16,update,update,16,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['update'],['update']
Deployability,// Don't update if a previous string covers all arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:9,update,update,9,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['update'],['update']
Deployability,// Don't update prev_code ?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:9,update,update,9,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,// Don't update successors here. We'll get to them anyway through this; // loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LoopTraversal.cpp:9,update,update,9,interpreter/llvm-project/llvm/lib/CodeGen/LoopTraversal.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LoopTraversal.cpp,1,['update'],['update']
Deployability,// Don't update the DILocation of dbg.assign intrinsics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:9,update,update,9,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['update'],['update']
Deployability,"// Don't update the location of MS ASM labels. These will result in; // a diagnostic, and changing the location here will mess that up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:9,update,update,9,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['update'],['update']
Deployability,"// Don't update to the canonical delimiter 'deli' if ')deli""' occurs in the; // raw string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:9,update,update,9,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['update'],['update']
Deployability,// Don't upgrade the intrinsic if it's not valid to bitcast the argument; // to the parameter type of the new function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:9,upgrade,upgrade,9,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrade']
Deployability,// Don't upgrade the intrinsic if it's not valid to bitcast the return; // value to the return type of the old function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:9,upgrade,upgrade,9,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrade']
Deployability,"// Don't upgrade the visibility for symbols exported to the dynamic; // linker, as we have no information on their eventual use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:9,upgrade,upgrade,9,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,2,['upgrade'],['upgrade']
Deployability,// Don't want to extend other live ranges and update kills.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:46,update,update,46,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,2,['update'],['update']
Deployability,"// Don't warn about Objective-C pointer variables with precise lifetime; // semantics; they can be used to ensure ARC releases the object at a known; // time, which may mean assignment but no other references.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:118,release,releases,118,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['release'],['releases']
Deployability,"// Done dealing with the IntegrateBins option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:25,Integrat,IntegrateBins,25,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['Integrat'],['IntegrateBins']
Deployability,"// Draw scene once with full time slot, physicals have been; // clipped during UpdateSceneInfo, so no need to repeat that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:79,Update,UpdateSceneInfo,79,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['Update'],['UpdateSceneInfo']
Deployability,// Drop all updates applied by both trees.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:12,update,updates,12,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,1,['update'],['updates']
Deployability,// Drop debug location as per debug info update guide.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['update'],['update']
Deployability,// Drop nonzero offsets instead of attempting to upgrade them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:49,upgrade,upgrade,49,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrade']
Deployability,"// Drop the attachment. This used to be legal, but there's no; // upgrade path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:66,upgrade,upgrade,66,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['upgrade'],['upgrade']
Deployability,// Dump the configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/ClangFormat.cpp:12,configurat,configuration,12,interpreter/llvm-project/clang/tools/clang-format/ClangFormat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/ClangFormat.cpp,1,['configurat'],['configuration']
Deployability,"// Dump the factory content as configuration file; /// Get the combined signal plus background pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h:31,configurat,configuration,31,roofit/roostats/inc/RooStats/HLFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h,1,['configurat'],['configuration']
Deployability,"// Dumps AST nodes in JSON format. There is no implied stability for the; // content or format of the dump between major releases of Clang, other than it; // being valid JSON output. Further, there is no requirement that the; // information dumped is a complete representation of the AST, only that the; // information presented is correct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/JSONNodeDumper.h:121,release,releases,121,interpreter/llvm-project/clang/include/clang/AST/JSONNodeDumper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/JSONNodeDumper.h,1,['release'],['releases']
Deployability,// Duplicate instruction and move it the new latch. Update uses that; // have been moved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:52,Update,Update,52,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,1,['Update'],['Update']
Deployability,// ELF specific configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ELF/ELFConfig.h:16,configurat,configuration,16,interpreter/llvm-project/llvm/include/llvm/ObjCopy/ELF/ELFConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ELF/ELFConfig.h,1,['configurat'],['configuration']
Deployability,// EXEC is updated directly,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreEmitPeephole.cpp:11,update,updated,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreEmitPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreEmitPeephole.cpp,1,['update'],['updated']
Deployability,"// Each of #ifdef and #else directives has a descriptor associated; // with it.; //; // An ordered list of preprocessing controls defined by #ifdef/#else; // directives that are in effect currently is called preprocessing; // control stack. It is represented as a vector of PreprocessorControlDesc's.; //; // The control stack is updated according to the following rules:; //; // For each #ifdef we add an element to the control stack.; // For each #else we replace the top element with a descriptor; // with an inverted IsDefined value.; // For each #endif we pop the top element from the control stack.; //; // When CurPtr reaches the current buffer's end, the control stack; // must be empty, i.e. #ifdef and the corresponding #endif; // must be located in the same file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGLexer.h:330,update,updated,330,interpreter/llvm-project/llvm/lib/TableGen/TGLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGLexer.h,1,['update'],['updated']
Deployability,"// Each time we visit a new SCC pulled off the worklist,; // a transformation of a child SCC may have also modified this parent; // and invalidated analyses. So we invalidate using the update record's; // cross-SCC preserved set. This preserved set is intersected by any; // CGSCC pass that handles invalidation (primarily pass managers) prior; // to marking its SCC as preserved. That lets us track everything that; // might need invalidation across SCCs without excessive invalidations; // on a single SCC.; //; // This essentially allows SCC passes to freely invalidate analyses; // of any ancestor SCC. If this becomes detrimental to successfully; // caching analyses, we could force each SCC pass to manually; // invalidate the analyses for any SCCs other than themselves which; // are mutated. However, that seems to lose the robustness of the; // pass-manager driven invalidation scheme.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:185,update,update,185,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['update']
Deployability,"// Eagerly remap operands to the newly cloned instruction, except for PHI; // nodes for which we defer processing until we update the CFG. Also defer; // debug intrinsic processing because they may contain use-before-defs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp:123,update,update,123,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,1,['update'],['update']
Deployability,"// Early return to release the lock without having to execute the; // long-ish normalization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:19,release,release,19,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['release'],['release']
Deployability,// Eat ':' and update Start location,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:15,update,update,15,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['update'],['update']
Deployability,// Eat the DotExpression and update End,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:29,update,update,29,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['update'],['update']
Deployability,"// Edits an existing sequence of wait count instructions according; // to an incoming Waitcnt value, which is itself updated to reflect; // any new wait count instructions which may need to be generated by; // WaitcntGenerator::createNewWaitcnt(). It will return true if any edits; // were made.; //; // This editing will usually be merely updated operands, but it may also; // delete instructions if the incoming Wait value indicates they are not; // needed. It may also remove existing instructions for which a wait; // is needed if it can be determined that it is better to generate new; // instructions later, as can happen on gfx12.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:117,update,updated,117,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,2,['update'],['updated']
Deployability,// ElementEntryChanged; /* ----- UpdateGraph ---- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:33,Update,UpdateGraph,33,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['Update'],['UpdateGraph']
Deployability,"// Elements have been rearranged, now update node sizes and stops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:38,update,update,38,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['update'],['update']
Deployability,"// Eliminating the dirty entry from 'Cache', so update the reverse info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:48,update,update,48,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,2,['update'],['update']
Deployability,// Emit KCFI type information before patchable-function-prefix nops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:37,patch,patchable-function-prefix,37,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['patch'],['patchable-function-prefix']
Deployability,// Emit a store instruction in the sequential BB to update the; // value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,// Emit a store instruction to update the value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:31,update,update,31,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,// Emit an fxch to update the runtime processors version of the state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp:19,update,update,19,interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,1,['update'],['update']
Deployability,// Emit an update expression: 'xrval' binop 'expr' or 'expr' binop; // 'xrval'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:11,update,update,11,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,// Emit check of the 9th or 17th bit and update users (the branch). This will; // later be folded to TBNZ.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp,1,['update'],['update']
Deployability,// Emit coroutine intrinsic and patch up arguments of the token type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp:32,patch,patch,32,interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,1,['patch'],['patch']
Deployability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables and post-update of lastprivate; // variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:126,update,update,126,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables and post-update of; // lastprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:126,update,update,126,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,// Emit implicit barrier to synchronize threads and avoid data races; // on initialization of firstprivate variables and post-update of; // lastprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:126,update,update,126,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,// Emit intrinsic responsible for updating the global bitmap corresponding to; // a boolean expression. The index being set is based on the value loaded; // from a pointer to a dedicated temporary value on the stack that is itself; // updated via emitMCDCCondBitmapReset() and emitMCDCCondBitmapUpdate(). The; // index represents an executed test vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp:235,update,updated,235,interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,1,['update'],['updated']
Deployability,"// Emit intrinsic that updates a dedicated temporary value on the stack after; // a condition is evaluated. After the set of conditions has been updated,; // the resulting value is used to update the boolean expression's bitmap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp:23,update,updates,23,interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,3,['update'],"['update', 'updated', 'updates']"
Deployability,// Emit output using the new pass manager for the optimization pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:63,pipeline,pipeline,63,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['pipeline'],['pipeline']
Deployability,// Emit post-update of the reduction variables if IsLastIter != 0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:13,update,update,13,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,3,['update'],['update']
Deployability,// Emit post-update store to 'v' of old/new 'x' value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:13,update,update,13,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,// Emit simple atomic update operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp:22,update,update,22,interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGAtomic.cpp,1,['update'],['update']
Deployability,// Emit the FDE with updated address and CIE pointer.; // (4 + AddrSize) is the size of the CIEId + initial_location; // fields that will get reconstructed by emitFDE().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:21,update,updated,21,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['update'],['updated']
Deployability,// Emit the configuration macros.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:12,configurat,configuration,12,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['configurat'],['configuration']
Deployability,"// Emit the following code for Intrinsic::{xray_customevent,xray_typedevent}; // (built-in functions __xray_customevent/__xray_typedevent).; //; // .Lxray_event_sled_N:; // b 1f; // save x0 and x1 (and also x2 for TYPED_EVENT_CALL); // set up x0 and x1 (and also x2 for TYPED_EVENT_CALL); // bl __xray_CustomEvent or __xray_TypedEvent; // restore x0 and x1 (and also x2 for TYPED_EVENT_CALL); // 1:; //; // There are 6 instructions for EVENT_CALL and 9 for TYPED_EVENT_CALL.; //; // Then record a sled of kind CUSTOM_EVENT or TYPED_EVENT.; // After patching, b .+N will become a nop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:549,patch,patching,549,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,1,['patch'],['patching']
Deployability,// Emit the unsupported option error until the Clang's library integration; // support for 128-bit long double is available for AIX.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:63,integrat,integration,63,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['integrat'],['integration']
Deployability,"// Emit the version-min deployment target directive if needed.; //; // FIXME: If we end up with a collection of these sorts of Darwin-specific; // or ELF-specific things, it may make sense to have a platform helper class; // that will work with the target helper class. For now keep it here, as the; // alternative is duplicated code in each of the target asm printers that; // use the directive, where it would need the same conditionalization; // anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:24,deploy,deployment,24,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['deploy'],['deployment']
Deployability,// EmitLabel updates LastLabel and LastLabelLoc when a new label is emitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h:13,update,updates,13,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h,1,['update'],['updates']
Deployability,// Enable splitting late in the FullLTO post-link pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:50,pipeline,pipeline,50,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// Encode the arguments as part of the template name and update the; // template name, to reflect the encoded parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVScope.cpp:57,update,update,57,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVScope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVScope.cpp,1,['update'],['update']
Deployability,// End anonymous namespace.; /// Maps from the symbol for a class instance to the set of; /// symbols remaining that must be released in -dealloc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:125,release,released,125,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,"// Enforce ""same axis configuration"" policy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:22,configurat,configuration,22,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['configurat'],['configuration']
Deployability,// Enqueue required DT updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:23,update,updates,23,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['updates']
Deployability,"// Ensure `NS` is unloaded from the AST on transaction rollback, e.g. '.undo X'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:55,rollback,rollback,55,interpreter/cling/lib/Interpreter/Transaction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp,1,['rollback'],['rollback']
Deployability,// Ensure new SCCs' function analyses are updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:42,update,updated,42,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['updated']
Deployability,// Ensure that all dependency data is updated (for nodes in the sub-graph); // and fill the ready-list with initial instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:38,update,updated,38,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['update'],['updated']
Deployability,"// Ensure that the edge was in fact deleted from the CFG before informing; // the DomTree about it.; // The check is O(N), so run it only in debug configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:147,configurat,configuration,147,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['configurat'],['configuration']
Deployability,"// Ensure that the start values for any VPWidenIntOrFpInductionRecipe,; // VPWidenPointerInductionRecipe and VPReductionPHIRecipes are updated; // before vectorizing the epilogue loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:135,update,updated,135,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['updated']
Deployability,// Ensure the now-current SCC's function analyses are updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:54,update,updated,54,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['updated']
Deployability,"// Ensure there is enough space, and get the (maybe updated) address of; // Elt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:52,update,updated,52,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['update'],['updated']
Deployability,// Ensure we call the destructor so we release any memory allocated in the; // sets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:39,release,release,39,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['release'],['release']
Deployability,// Ensure we create the AAKernelInfo AAs first and without triggering an; // update. This will make sure we register all value simplification; // callbacks before any other AA has the chance to create an AAValueSimplify; // or similar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:77,update,update,77,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,// Ensures that only the first configuration can skip the Language option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:31,configurat,configuration,31,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['configurat'],['configuration']
Deployability,// Enter a cleanup to do the release.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:29,release,release,29,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,"// Entrance to the VPlan-native vectorization path. Outer loops are processed; // here. They may require CFG and instruction level transformations before; // even evaluating whether vectorization is profitable. Since we cannot modify; // the incoming IR, we need to build VPlan upfront in the vectorization; // pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:311,pipeline,pipeline,311,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['pipeline'],['pipeline']
Deployability,"// Entry does not exist if the clone of the block did not clone all; // instructions. This occurs in LoopRotate when cloning instructions; // from the old header to the old preheader. The cloned instruction may; // also be a simplified Value, not an Instruction (see LoopRotate).; // Also in LoopRotate, even when it's an instruction, due to it being; // simplified, it may be a Use rather than a Def, so we cannot use MUD as; // template. Calls coming from updateForClonedBlockIntoPred, ensure this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:458,update,updateForClonedBlockIntoPred,458,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['update'],['updateForClonedBlockIntoPred']
Deployability,"// Entry is PTR_AND_OBJ and RETURN_PARAM. Also, set the; // placeholder value MEMBER_OF=FFFF so that the entry is later; // updated with the correct value of MEMBER_OF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:124,update,updated,124,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['updated']
Deployability,"// Entry is RETURN_PARAM. Also, set the placeholder value; // MEMBER_OF=FFFF so that the entry is later updated with the; // correct value of MEMBER_OF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:104,update,updated,104,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['updated']
Deployability,"// Enum alignment sources can be safely ignored here, because this only; // helps decide whether we need the AIX alignment upgrade, which only; // applies to floating-point types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:123,upgrade,upgrade,123,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['upgrade'],['upgrade']
Deployability,// Enumerate all string patches and write them into the destination section.; // Order of patches is the same as in original input file. To avoid emitting; // the same string twice we accumulate NextOffset value. Thus if string; // offset smaller than NextOffset value then the patch is skipped (as that; // string was emitted earlier).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFEmitterImpl.h:24,patch,patches,24,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFEmitterImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFEmitterImpl.h,3,['patch'],"['patch', 'patches']"
Deployability,"// Enumeration to determine the tagging mode. In Android-land, 'SYNC' means; // running all threads in MTE Synchronous mode, and 'ASYNC' means to use the; // kernels auto-upgrade feature to allow for either MTE Asynchronous,; // Asymmetric, or Synchronous mode. This allows silicon vendors to specify, on; // a per-cpu basis what 'ASYNC' should mean. Generally, the expectation is; // ""pick the most precise mode that's very fast"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:171,upgrade,upgrade,171,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['upgrade'],['upgrade']
Deployability,// Erase the merged SCCs from the list and update the indices of the; // remaining SCCs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:43,update,update,43,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['update'],['update']
Deployability,// Erase the tail block once done with musttail patching,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp:48,patch,patching,48,interpreter/llvm-project/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CallSiteSplitting.cpp,1,['patch'],['patching']
Deployability,"// Error should go down faster than 0.5^nSteps because the integrator uses series acceleration,; // so test if it goes down faster than 0.333^nSteps",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:59,integrat,integrator,59,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,1,['integrat'],['integrator']
Deployability,"// Error(""CheckModifiedFlag"", ""Cannot get toggle value with getter %s"", getter.Data());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RMenuItems.cxx:42,toggle,toggle,42,graf2d/gpadv7/src/RMenuItems.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RMenuItems.cxx,2,['toggle'],['toggle']
Deployability,// Evaluate the lock operand. This is guaranteed to dominate the; // ARC release and lock-release cleanups.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.cpp:73,release,release,73,interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.cpp,2,['release'],['release']
Deployability,"// Eve element to store generic configuration information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveParamList.h:32,configurat,configuration,32,graf3d/eve/inc/TEveParamList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveParamList.h,1,['configurat'],['configuration']
Deployability,"// Even if the instruction is removed, we still need to update; // flags/metadata due to downstreams users of the leader.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['update'],['update']
Deployability,"// Even if we change the IR, we update the core CGSCC data structures and so; // can preserve the proxy to the function analysis manager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['update'],['update']
Deployability,"// Even though we could use a smaller VL, don't to avoid a vsetivli; // toggle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:72,toggle,toggle,72,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['toggle'],['toggle']
Deployability,"// Even with predefines off, some macros are still predefined.; // These should all be defined in the preprocessor according to the; // current language configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp:153,configurat,configuration,153,interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,1,['configurat'],['configuration']
Deployability,"// Eventually this can be improved by recognizing that the pixel; // buffer passed to CVPixelBufferCreateWithBytes is released via; // a callback and doing full IPA to make sure this is done correctly.; // Note that it's passed as a 'void *', so it's hard to annotate.; // FIXME: This function also has an out parameter that returns an; // allocated object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp:118,release,released,118,interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,1,['release'],['released']
Deployability,"// Every whole second: updates timer and displays new value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:23,update,updates,23,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['update'],['updates']
Deployability,// Examine PHI nodes that are reduction variables. Update the type to; // account for the recurrence type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:51,Update,Update,51,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['Update'],['Update']
Deployability,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in one dimension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,integrat,integration,41,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Deployability,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in two dimensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,integrat,integration,41,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Deployability,"// Except for Wasm, all targets should be only using physical register at this; // point. Wasm only use virtual registers throught its pipeline, but its; // virtual registers don't participate in this LiveDebugValues analysis; only; // its target indices do.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp:135,pipeline,pipeline,135,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp,1,['pipeline'],['pipeline']
Deployability,"// Except for deployment target of 10.5 or less,; // Mac runtimes use legacy dispatch everywhere now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:14,deploy,deployment,14,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['deploy'],['deployment']
Deployability,// Expand the new value definitions and update the users.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,"// Experimental option to eagerly invalidate more analyses. This has the; // potential to decrease max memory usage in exchange for more compile time.; // This may affect codegen due to either passes using analyses only when; // cached, or invalidating and recalculating an analysis that was; // stale/imprecise but still valid. Currently this invalidates all function; // analyses after various module->function or cgscc->function adaptors in the; // default pipelines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:460,pipeline,pipelines,460,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipelines']
Deployability,// Explicitly set the dependence class to required because we want a long; // chain of N dependent instructions to be considered live as soon as one is; // without going through N update cycles. This is not required for; // correctness.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:180,update,update,180,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['update']
Deployability,"// Expose the internal Workspace; /// Process a configuration file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h:48,configurat,configuration,48,roofit/roostats/inc/RooStats/HLFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h,1,['configurat'],['configuration']
Deployability,// Extend BValNo by merging in IntA live segments of AValNo. Val# definition; // is updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:84,update,updated,84,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['updated']
Deployability,"// Extending the code in issue 7182, we also want to make sure that the; // integration also works if the bin scaling parameters are not just one,; // which would be equivalent to RooHistFunc.; //; // Let's scale each bin content by the bin index:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:76,integrat,integration,76,roofit/roofit/test/testRooParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx,1,['integrat'],['integration']
Deployability,"// Extract projection configuration from command list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:22,configurat,configuration,22,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['configurat'],['configuration']
Deployability,"// Extract the identity of this server and compare it to the; // identify of the servers known to support multi-range requests.; // The list of server identities is expected to be found in ROOT; // configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:198,configurat,configuration,198,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['configurat'],['configuration']
Deployability,"// Extract the second last element in the middle block if the; // Phi is used outside the loop. We need to extract the phi itself; // and not the last element (the phi update in the current iteration). This; // will be the value when jumping to the exit block from the; // LoopMiddleBlock, when the scalar loop is not run at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:168,update,update,168,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,// Extract the seventh bit and toggle it to create the N field.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h:31,toggle,toggle,31,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,1,['toggle'],['toggle']
Deployability,"// FIX ME: find a right way to distinguish the pre-compile Symbols, and update; // the callsite",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Speculation.h:72,update,update,72,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Speculation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Speculation.h,1,['update'],['update']
Deployability,"// FIXME It would be better to update the selections by deleting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:31,update,update,31,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,2,['update'],['update']
Deployability,// FIXME Update CCR as well. For now we just; // conservatively say CCR implicit def is dead,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp:9,Update,Update,9,interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp,1,['Update'],['Update']
Deployability,"// FIXME: (Alex L): Canonicalize implicit template instantions, just like; // the indexer does it.; // Note: please update the declaration's doc comment every time the; // canonicalization rules are changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp:116,update,update,116,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp,1,['update'],['update']
Deployability,"// FIXME: Add a way to query the inner data; /// Merge with other RHistDataMomentUncert data, assuming same bin configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:112,configurat,configuration,112,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,1,['configurat'],['configuration']
Deployability,"// FIXME: All decls should have an owning module once rootcling; // updates its generated decls from within the LookupHelper & co.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:68,update,updates,68,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['updates']
Deployability,// FIXME: Also update cached pressure for where the def was sinked from.; // Update RP for all regions that has this reg as a live-in and remove; // the reg from all regions as a live-in.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp:15,update,update,15,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,// FIXME: Change AliasSummary to hold a ValueInfo instead of summary pointer; // for aliasee (then update BitcodeWriter.cpp and remove get/setAliaseeGUID).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:99,update,update,99,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,1,['update'],['update']
Deployability,// FIXME: Currently we cannot really respect all IEEE predicates due to libgcc; // not supporting it. We can update this code when libgcc provides such; // functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:109,update,update,109,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['update'],['update']
Deployability,// FIXME: Currently we only set VK_NC for MO_G3/MO_G2/MO_G1/MO_G0. This is; // because setting VK_NC for others would mean setting their respective; // RefFlags correctly. We should do this in a separate patch.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MCInstLower.cpp:204,patch,patch,204,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MCInstLower.cpp,1,['patch'],['patch']
Deployability,"// FIXME: Currently, if there're more than one job, we disable; // -fintegrate-cc1. If we're no longer a integrated-cc1 job, fallback to; // out-of-process execution. See discussion in https://reviews.llvm.org/D74447",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Job.cpp:105,integrat,integrated-,105,interpreter/llvm-project/clang/lib/Driver/Job.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Job.cpp,1,['integrat'],['integrated-']
Deployability,"// FIXME: Do we have to release an object here?; // ReleaseObject();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:24,release,release,24,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,2,"['Release', 'release']","['ReleaseObject', 'release']"
Deployability,// FIXME: Explicit conversion to std::unique_ptr<ObjectLayer> added to silence; // errors from some GCC / libstdc++ bots. Remove this conversion (i.e.; // just return ObjLinkingLayer) once those bots are upgraded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp:204,upgrade,upgraded,204,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp,1,['upgrade'],['upgraded']
Deployability,"// FIXME: Find the right type or make sure we have an interface to update; // the clang::Type in the cling::Value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:67,update,update,67,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['update'],['update']
Deployability,"// FIXME: For resource conflicts in very long non-pipelined stages, we; // should probably skip ahead here to avoid useless scoreboard checks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:50,pipeline,pipelined,50,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['pipeline'],['pipelined']
Deployability,"// FIXME: For some reason this causes problems with MSSA updates, need to; // investigate why. So far, just don't unswitch latch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:57,update,updates,57,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updates']
Deployability,"// FIXME: For targets where long double, __ibm128 and __float128 have the; // same size, they are currently indistinguishable in the debugger without; // some special treatment. However, there is currently no consensus on; // encoding and this should be updated once a DWARF encoding exists for; // distinct floating point types of the same size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:254,update,updated,254,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['update'],['updated']
Deployability,"// FIXME: Fully computing the resource structures requires analyzing the IR; // because some flags are set based on what operations are performed on the; // resource. This partial patch handles some of the leg work, but not all of it.; // See issue https://github.com/llvm/llvm-project/issues/57936.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/DXILResource.h:180,patch,patch,180,interpreter/llvm-project/llvm/lib/Target/DirectX/DXILResource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/DXILResource.h,1,['patch'],['patch']
Deployability,"// FIXME: Handle aggregate types; // Since we don't have sub-dword scalar loads, avoid doing an extload by; // loading earlier than the argument address, and extracting the relevant; // bits.; // TODO: Update this for GFX12 which does have scalar sub-dword loads.; //; // Additionally widen any sub-dword load to i32 even if suitably aligned,; // so that CSE between different argument loads works easily.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp:202,Update,Update,202,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp,1,['Update'],['Update']
Deployability,// FIXME: Handle sending 'autorelease' to already released object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:50,release,released,50,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['release'],['released']
Deployability,"// FIXME: Handle the ""already imported with error"" case. We can get here; // nullptr only if GetImportedOrCreateDecl returned nullptr (after a; // previously failed create was requested).; // Later GetImportedOrCreateDecl can be updated to return the error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:229,update,updated,229,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['update'],['updated']
Deployability,"// FIXME: HasSTUX is only read if HasRedZone is not set, in such case, we; // update the ScratchReg to meet the assumption that ScratchReg contains; // the NegFrameSize. This solution is rather tricky.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:78,update,update,78,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// FIXME: If any of the declarations is from an AST file, we probably; // need an update record to add the common data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclTemplate.cpp:82,update,update,82,interpreter/llvm-project/clang/lib/AST/DeclTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclTemplate.cpp,1,['update'],['update']
Deployability,"// FIXME: If both LHS and RHS are SCALAR_TO_VECTOR, but are not the; // same type and have differing element sizes, then do not perform; // the following transformation. The current transformation for; // SCALAR_TO_VECTOR assumes that both input vectors have the same; // element size. This will be updated in the future to account for; // differing sizes of the LHS and RHS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:299,update,updated,299,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['update'],['updated']
Deployability,"// FIXME: If integer modeling is added, then update this code to create; // the boolean based on the integer model.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp:45,update,update,45,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp,1,['update'],['update']
Deployability,"// FIXME: If targets would like to look through instructions that aren't; // pure copies, this can be updated to a query.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:102,update,updated,102,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['update'],['updated']
Deployability,"// FIXME: If the case list was broken is some way, we don't have a good system; // to patch it up. Instead, just return the whole substmt as broken.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:86,patch,patch,86,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['patch'],['patch']
Deployability,// FIXME: In the long term the verifier should not be controllable with a; // flag. We should either fix all passes to correctly update the assumption; // cache and enable the verifier unconditionally or somehow arrange for the; // assumption list to be updated automatically by passes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AssumptionCache.cpp:129,update,update,129,interpreter/llvm-project/llvm/lib/Analysis/AssumptionCache.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AssumptionCache.cpp,2,['update'],"['update', 'updated']"
Deployability,// FIXME: Incrementally update loop-simplify,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:24,update,update,24,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['update'],['update']
Deployability,"// FIXME: Inform AST mutation listeners of this AST mutation.; // FIXME: If there are multiple in-class declarations of the member (from; // multiple modules, or a declaration and later definition of a member type),; // should we update all of them?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:230,update,update,230,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['update'],['update']
Deployability,// FIXME: Injecting into the DAGISel pipeline seems to cause issues with; // analyses needing to be re-run. This can result in being unable to; // schedule passes (particularly with 'Function Alias Analysis; // Results'). It's not entirely clear why but AFAICT this seems to be; // due to one FunctionPassManager not being able to use analyses from a; // previous one. As we're injecting a ModulePass we break the usual; // pass manager into two. GlobalISel with the fallback path disabled; // and -run-pass seem to be unaffected. The majority of GlobalISel; // testing uses -run-pass so this probably isn't too bad.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:37,pipeline,pipeline,37,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['pipeline'],['pipeline']
Deployability,"// FIXME: Instead of visiting the pending Q each time, set a dirty flag on the; // available Q to release pending nodes at least once before popping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:98,release,release,98,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['release'],['release']
Deployability,// FIXME: Integrate this lookup step into LookupParsedName.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:10,Integrat,Integrate,10,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['Integrat'],['Integrate']
Deployability,// FIXME: Is there a better way of adjusting the liveness? It shouldn't be; // hard to add another def here but I'm not sure how to correctly update the; // valno.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,1,['update'],['update']
Deployability,"// FIXME: Is this actually dangerous as WritingAnLLVMPass.html claims? Seems; // that, short of multithreaded LLVM, it should be safe; all that is; // necessary is that a simple Module::iterator loop not be invalidated.; // Appending to the GlobalVariable list is safe in that sense.; //; // All of the output passes emit globals last. The ExecutionEngine; // explicitly supports adding globals to the module after; // initialization.; //; // Still, if it isn't deemed acceptable, then this transformation needs; // to be a ModulePass (which means it cannot be in the 'llc' pipeline; // (which uses a FunctionPassManager (which segfaults (not asserts) if; // provided a ModulePass))).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShadowStackGCLowering.cpp:574,pipeline,pipeline,574,interpreter/llvm-project/llvm/lib/CodeGen/ShadowStackGCLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ShadowStackGCLowering.cpp,1,['pipeline'],['pipeline']
Deployability,// FIXME: It would be awesome of updateTerminator would just return rather; // than assert when the branch cannot be analyzed in order to remove this; // boiler plate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:33,update,updateTerminator,33,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['update'],['updateTerminator']
Deployability,"// FIXME: Less-than 32-bit wchar_t generally means UTF-16; // (e.g., Windows, 32-bit IBM). This may need to be; // updated if -fwide-exec-charset= is ever supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp:115,update,updated,115,interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,1,['update'],['updated']
Deployability,"// FIXME: LiveIntervals will be updated to remove its dependence on; // LiveVariables to improve compilation time and eliminate bizarre pass; // dependencies. Until then, we can't change much in -O0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:32,update,updated,32,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['update'],['updated']
Deployability,"// FIXME: Make this the iterator's operator*() after the 4.0 release.; // operator*() had a different meaning in earlier releases, so we're; // temporarily not giving this iterator an operator*() to avoid a subtle; // semantics break.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h:61,release,release,61,interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h,2,['release'],"['release', 'releases']"
Deployability,// FIXME: Many of these should probably return false but MIPS16 isn't; // supported by the integrated assembler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp:91,integrat,integrated,91,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp,1,['integrat'],['integrated']
Deployability,// FIXME: Maybe check for ODR violations.; // It's safe to stop now because this update record is always last.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:81,update,update,81,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,"// FIXME: Once the integrated assembler supports full register names, tie this; // to the verbose-asm setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCInstPrinter.cpp:19,integrat,integrated,19,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCInstPrinter.cpp,1,['integrat'],['integrated']
Deployability,"// FIXME: PATCHPOINT instructions announce a Def that does not always exist,; // they really need to be modeled differently!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DetectDeadLanes.cpp:10,PATCH,PATCHPOINT,10,interpreter/llvm-project/llvm/lib/CodeGen/DetectDeadLanes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DetectDeadLanes.cpp,1,['PATCH'],['PATCHPOINT']
Deployability,// FIXME: Release abandoned alloc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/EPCGenericJITLinkMemoryManager.cpp:10,Release,Release,10,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/EPCGenericJITLinkMemoryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/EPCGenericJITLinkMemoryManager.cpp,1,['Release'],['Release']
Deployability,// FIXME: Release finalize lifetime segments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MemoryMapper.cpp:10,Release,Release,10,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MemoryMapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MemoryMapper.cpp,1,['Release'],['Release']
Deployability,"// FIXME: Should perform GVN again after PRE does something. PRE can move; // computations into blocks where they become fully redundant. Note that; // we can't do this until PRE's critical edge splitting updates memdep.; // Actually, when this happens, we should just fully integrate PRE into GVN.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:205,update,updates,205,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,2,"['integrat', 'update']","['integrate', 'updates']"
Deployability,// FIXME: Should this update Data as well?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MachObjectWriter.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/MC/MachObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MachObjectWriter.cpp,1,['update'],['update']
Deployability,"// FIXME: SplitEdge does not yet take a DTU, so we include the split edge; // in the update set here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp:85,update,update,85,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,1,['update'],['update']
Deployability,"// FIXME: The Clang version string is not particularly granular;; // the analyzer infrastructure can change a lot between releases.; // Unfortunately, this string has to be statically embedded in each plugin,; // so we can't just use the functions defined in Version.h.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h:122,release,releases,122,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h,1,['release'],['releases']
Deployability,"// FIXME: The ScheduleDAG currently loses information about which of a; // node's values is consumed by each dependence. Consequently, if the node; // defines multiple register classes, we don't know which to pressurize; // here. Instead the following loop consumes the register defs in an; // arbitrary order. At least it handles the common case of clustered loads; // to the same class. For precise liveness, each SDep needs to indicate the; // result number. But that tightly couples the ScheduleDAG with the; // SelectionDAG making updates tricky. A simpler hack would be to attach a; // value type or register class to SDep.; //; // The most important aspect of register tracking is balancing the increase; // here with the reduction further below. Note that this SU may use multiple; // defs in PredSU. The can't be determined here, but we've already; // compensated by reducing NumRegDefsLeft in PredSU during; // ScheduleDAGSDNodes::AddSchedEdges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:536,update,updates,536,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['update'],['updates']
Deployability,"// FIXME: The dead frame indices are replaced with a null register from; // the debug value instructions. We should instead, update it with the; // correct register value. But not sure the register value alone is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp:125,update,update,125,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFrameLowering.cpp,1,['update'],['update']
Deployability,"// FIXME: The dead frame indices are replaced with a null register from; // the debug value instructions. We should instead, update it with the; // correct register value. But not sure the register value alone is; // adequate to lower the DIExpression. It should be worked out later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerSGPRSpills.cpp:125,update,update,125,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerSGPRSpills.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerSGPRSpills.cpp,1,['update'],['update']
Deployability,"// FIXME: The tied operands checking is not yet integrated with the; // framework for reporting multiple near misses. To prevent invalid; // formats from being matched with an alias if a tied-operands check; // would otherwise have disallowed it, we just disallow such constructs; // in TableGen completely.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:48,integrat,integrated,48,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['integrat'],['integrated']
Deployability,"// FIXME: These are defined in one place, but properties in class extensions; // end up being back-patched into the main interface. See; // Sema::HandlePropertyInClassExtension for the offending code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTCommon.cpp:99,patch,patched,99,interpreter/llvm-project/clang/lib/Serialization/ASTCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTCommon.cpp,1,['patch'],['patched']
Deployability,// FIXME: This assumes one cycle benefit for every pipeline forwarding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:51,pipeline,pipeline,51,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['pipeline'],['pipeline']
Deployability,"// FIXME: This cast creates a new integral value from the; // subexpression. But, because we don't model integers, we don't; // distinguish between this new value and the underlying one. If integer; // modeling is added, then update this code to create a fresh location and; // value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp:226,update,update,226,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/Transfer.cpp,1,['update'],['update']
Deployability,"// FIXME: This check isn't quite right: it allows star in prototypes; // for function definitions, and disallows some edge cases detailed; // in http://gcc.gnu.org/ml/gcc-patches/2009-02/msg00133.html",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:171,patch,patches,171,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['patch'],['patches']
Deployability,"// FIXME: This implementation works under the assumption that load/store queue; // entries are reserved at 'instruction dispatched' stage, and released at; // 'instruction executed' stage. This currently matches the behavior of LSUnit.; //; // The current design minimizes the number of events generated by the; // Dispatch/Execute stages, at the cost of doing extra bookkeeping in method; // `onEvent`. However, it introduces a subtle dependency between this view and; // how the LSUnit works.; //; // In future we should add a new ""memory queue"" event type, so that we stop; // making assumptions on how LSUnit internally works (See PR39828).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp:143,release,released,143,interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,1,['release'],['released']
Deployability,// FIXME: This implements a workaround with @property declarations also being; // installed in the DeclContext for the @interface. Eventually this code; // should be removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:82,install,installed,82,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['install'],['installed']
Deployability,"// FIXME: This is checking that our DynamicTypeInfo is at least as good as; // the static type. However, because we currently don't update; // DynamicTypeInfo when an object is cast, we can't actually be sure the; // DynamicTypeInfo is up to date. This assert should be re-enabled once; // this is fixed.; //; // assert(!MD->getParent()->isDerivedFrom(RD) && ""Bad DynamicTypeInfo"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:132,update,update,132,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['update'],['update']
Deployability,"// FIXME: This is mutable so that it can still be updated after insertion; // into an unordered associative container. This is ""fine"", since this; // field doesn't contribute to the hash, but it's a brittle hack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-scan-deps/ClangScanDeps.cpp:50,update,updated,50,interpreter/llvm-project/clang/tools/clang-scan-deps/ClangScanDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-scan-deps/ClangScanDeps.cpp,1,['update'],['updated']
Deployability,"// FIXME: This is theoretically wrong: if the current state is shared with; // some other location (via push/pop) we will change the state for that; // other location as well. This cannot currently happen, as we can't update; // the diagnostic state at the same location at which we pop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp:218,update,update,218,interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,1,['update'],['update']
Deployability,"// FIXME: This is wrong for the ARM ABI, where some other module may have; // made this function no longer be a key function. We need an update; // record or similar for that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:137,update,update,137,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,"// FIXME: This loop is O(n^2) because dominates can be O(n) and in worst case; // we will see all the instructions. It may not matter in practice. If it; // does, we will have to support MemorySSA construction and updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:214,update,updates,214,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,1,['update'],['updates']
Deployability,"// FIXME: This should go into the Lexer, but we need to figure out how; // to handle ranges for refactoring in general first - there is no obvious; // good way how to integrate this into the Lexer yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp:167,integrat,integrate,167,interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,1,['integrat'],['integrate']
Deployability,"// FIXME: This should update the threshold only if it exceeds the; // current threshold, but AutoFDO + ThinLTO currently relies on this; // behavior to prevent inlining of hot callsites during ThinLTO; // compile phase.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['update'],['update']
Deployability,"// FIXME: This upgrade is done during linking to support the C API. Once the; // old form is deprecated, we should move this upgrade to; // llvm::UpgradeGlobalVariable() and simplify the logic here and in; // Mapper::mapAppendingVariable() in ValueMapper.cpp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:15,upgrade,upgrade,15,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,3,"['Upgrade', 'upgrade']","['UpgradeGlobalVariable', 'upgrade']"
Deployability,// FIXME: This upgrade is done during linking to support the C API. See; // also IRLinker::linkAppendingVarProto() in IRMover.cpp.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp:15,upgrade,upgrade,15,interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp,1,['upgrade'],['upgrade']
Deployability,// FIXME: Update printAttributedBefore to print these once we generate; // AttributedType nodes for them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp:10,Update,Update,10,interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,1,['Update'],['Update']
Deployability,"// FIXME: Update the remaining docs to use the new proposal wording.; /// .cfi_llvm_def_aspace_cfa defines the rule for computing the CFA to; /// be the result of evaluating the DWARF operation expression; /// `DW_OP_constu AS; DW_OP_aspace_bregx R, B` as a location description.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h:10,Update,Update,10,interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,1,['Update'],['Update']
Deployability,// FIXME: Update the type on all intervening expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:10,Update,Update,10,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['Update'],['Update']
Deployability,// FIXME: Update this if we ever have attributes that affect the; // semantics of an expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:10,Update,Update,10,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['Update'],['Update']
Deployability,"// FIXME: UpdateFlags is a workaround that creates live intervals for all; // physregs, even those that aren't needed for regalloc, in order to update; // kill flags. This is wasteful. Eventually, LiveVariables will strip all kill; // flags, and postRA passes will use a live register utility instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:10,Update,UpdateFlags,10,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,2,"['Update', 'update']","['UpdateFlags', 'update']"
Deployability,// FIXME: Updated to use the PreViewCFG and behave the same as until now.; // This behavior is however incorrect; this actually needs the PostViewCFG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:10,Update,Updated,10,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['Update'],['Updated']
Deployability,"// FIXME: Upgrade this to an error once modules are stable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:10,Upgrade,Upgrade,10,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['Upgrade'],['Upgrade']
Deployability,// FIXME: Use a new dep-map type for FailedToMaterialize errors so that we; // don't have to manually retain/release.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:109,release,release,109,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,1,['release'],['release']
Deployability,"// FIXME: Use lazy DTU and update SplitBlock to accept a DTU instead of a; // DT. Manually collect dominator tree updates, to avoid unnecessary work,; // as we adjust Check0 and Check1's branches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LowerMatrixIntrinsics.cpp,2,['update'],"['update', 'updates']"
Deployability,// FIXME: Use this update if VarTemplatePartialSpecializationDecl is fixed; // to adopt template parameters.; // updateLookupTableForTemplateParameters(**ToTPListOrErr);,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:19,update,update,19,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,2,['update'],"['update', 'updateLookupTableForTemplateParameters']"
Deployability,"// FIXME: We can use NOOPL on 32-bit targets with FeatureNOPL, but the; // IndexReg/BaseReg below need to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:109,update,updated,109,interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,1,['update'],['updated']
Deployability,"// FIXME: We cannot use stdin for an update because stdin will be; // consumed by the BinaryHolder during the debugmap parsing, and; // then we will want to consume it again in DwarfLinker. If we; // used a unique BinaryHolder object that could cache multiple; // binaries this restriction would go away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/dsymutil.cpp:37,update,update,37,interpreter/llvm-project/llvm/tools/dsymutil/dsymutil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/dsymutil.cpp,1,['update'],['update']
Deployability,// FIXME: We have to enter REG-EXCESS before we reach the actual threshold; // to increase the likelihood we don't go over the limits. We should improve; // the analysis to look through dependencies to find the path with the least; // register pressure.; // We only need to update the RPDelta for instructions that increase register; // pressure. Instructions that decrease or keep reg pressure the same will be; // marked as RegExcess in tryCandidate() when they are compared with; // instructions that increase the register pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp:274,update,update,274,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp,1,['update'],['update']
Deployability,// FIXME: We need an update record for this AST mutation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:21,update,update,21,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,4,['update'],['update']
Deployability,// FIXME: We ought to do this for -integrated-as without -via-file-asm too.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:35,integrat,integrated-as,35,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['integrat'],['integrated-as']
Deployability,// FIXME: We ought to do this for -integrated-as without -via-file-asm too.; // FIXME: This should propagate failure up to parseStatement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:35,integrat,integrated-as,35,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['integrat'],['integrated-as']
Deployability,"// FIXME: We really need to improve the relocation validation. Basically, we; // want to implement a separate computation which evaluates the relocation; // entry as the linker would, and verifies that the resultant fixup value is; // exactly what the encoder wanted. This will catch several classes of; // problems:; //; // - Relocation entry bugs, the two algorithms are unlikely to have the same; // exact bug.; //; // - Relaxation issues, where we forget to relax something.; //; // - Input errors, where something cannot be correctly encoded. 'as' allows; // these through in many cases.; // Add a relocation to be output in the object file. At the time this is; // called, the symbol indexes are not know, so if the relocation refers; // to a symbol it should be passed as \p RelSymbol so that it can be updated; // afterwards. If the relocation doesn't refer to a symbol, nullptr should be; // used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCMachObjectWriter.h:810,update,updated,810,interpreter/llvm-project/llvm/include/llvm/MC/MCMachObjectWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCMachObjectWriter.h,1,['update'],['updated']
Deployability,"// FIXME: We should really do a 'clear' here to forcibly release; // memory, but we don't have a good way of doing that and; // preserving the function analyses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:57,release,release,57,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['release'],['release']
Deployability,"// FIXME: We should trivially coalesce subregister copies to expose CSE; // opportunities on instructions with truncated operands (see; // cse-add-with-overflow.ll). This can be done here as follows:; // if (SrcSubReg); // RC = TRI->getMatchingSuperRegClass(MRI->getRegClass(SrcReg), RC,; // SrcSubReg);; // MO.substVirtReg(SrcReg, SrcSubReg, *TRI);; //; // The 2-addr pass has been updated to handle coalesced subregs. However,; // some machine-specific code still can't handle it.; // To handle it properly we also need a way find a constrained subregister; // class given a super-reg class and subreg index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp:383,update,updated,383,interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp,1,['update'],['updated']
Deployability,"// FIXME: We should update the CPUType, CPUSubType in the Object file if; // the new values are different from the defaults.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:20,update,update,20,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,1,['update'],['update']
Deployability,// FIXME: We should use a customized pre-link pipeline!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:46,pipeline,pipeline,46,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,// FIXME: We use a fatal error here because historically LLVM has tried; // lower some of these physreg copies and we want to ensure we get; // reasonable bug reports if someone encounters a case no other testing; // found. This path should be removed after the LLVM 7 release.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:269,release,release,269,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['release'],['release']
Deployability,"// FIXME: When we get proper type location information for exceptions,; // we'll also have to rebuild the TypeSourceInfo. For now, we just patch; // up the TypeSourceInfo;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:139,patch,patch,139,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['patch'],['patch']
Deployability,// FIXME: Why does this function not ask for `const ASTContext; // &`? It should. Maybe worth an NFC patch later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:101,patch,patch,101,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['patch'],['patch']
Deployability,// FIXME: Will eventually need to cope with member pointers.; // NOTE: Update makeTailCallIfSwiftAsync on fixing this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp:71,Update,Update,71,interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,1,['Update'],['Update']
Deployability,"// FIXME: Without optimizations, the temporary result from `await_suspend()`; // may be put on the coroutine frame since the coroutine frame constructor; // will think the temporary variable will escape from the; // `coroutine_handle<>::address()` call. This is problematic since the; // coroutine should be considered to be suspended after it enters; // `await_suspend` so it shouldn't access/update the coroutine frame after; // that.; //; // See https://github.com/llvm/llvm-project/issues/65054 for the report.; //; // The long term solution may wrap the whole logic about `await-suspend`; // into a standalone function. This is similar to the proposed solution; // in tryMarkAwaitSuspendNoInline. See the comments there for details.; //; // The short term solution here is to mark `coroutine_handle<>::address()`; // function as always-inline so that the coroutine frame constructor won't; // think the temporary result is escaped incorrectly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:394,update,update,394,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['update'],['update']
Deployability,"// FIXME: better error handling. For now, just print an error message in the; // release version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp:81,release,release,81,interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,1,['release'],['release']
Deployability,"// FIXME: better error handling. For now, just print error message and skip; // the replacement for the release version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/SortJavaScriptImports.cpp:104,release,release,104,interpreter/llvm-project/clang/lib/Format/SortJavaScriptImports.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/SortJavaScriptImports.cpp,1,['release'],['release']
Deployability,"// FIXME: better error handling. For now, just print error message in the; // release version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/RefactoringCallbacks.cpp:78,release,release,78,interpreter/llvm-project/clang/lib/Tooling/RefactoringCallbacks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/RefactoringCallbacks.cpp,4,['release'],['release']
Deployability,"// FIXME: better error handling. For now, just skip the replacement for the; // release version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:80,release,release,80,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,2,['release'],['release']
Deployability,// FIXME: better error handling. for now just print error message and skip; // for the release version.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:87,release,release,87,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['release'],['release']
Deployability,// FIXME: check presence of canary word; // There are cases that the stack protectors are not really inserted even if; // the attributes are on.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:28,canary,canary,28,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,1,['canary'],['canary']
Deployability,"// FIXME: handle error. For now, print error message and skip the; // replacement for release version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:86,release,release,86,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['release'],['release']
Deployability,"// FIXME: handle single completion by completing ""line""; // FIXME: adjust r's update range, for now:; // redraw whole line, incl prompt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:78,update,update,78,core/textinput/src/Getline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx,1,['update'],['update']
Deployability,"// FIXME: handleOperandChange() updates all the uses in a given Constant,; // not just the one passed to ShouldReplace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp:32,update,updates,32,interpreter/llvm-project/llvm/lib/IR/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp,1,['update'],['updates']
Deployability,// FIXME: support invoking patchpoint and statepoint intrinsics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:27,patch,patchpoint,27,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,1,['patch'],['patchpoint']
Deployability,// FIXME: the checks for the DWARF sections are very fragile and should be; // fixed up in a followup patch.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/MCTargetDesc/NVPTXTargetStreamer.cpp:102,patch,patch,102,interpreter/llvm-project/llvm/lib/Target/NVPTX/MCTargetDesc/NVPTXTargetStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/MCTargetDesc/NVPTXTargetStreamer.cpp,1,['patch'],['patch']
Deployability,// FIXME: there is no way to update VFS if it was changed by; // AddImplicitPreamble as FileMgr is accepted as a parameter by this method.; // We use on-disk preambles instead and rely on FileMgr's VFS to ensure the; // PCH files are always readable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:29,update,update,29,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,1,['update'],['update']
Deployability,// FIXME: update join to detect backedges and simplify the flow condition; // accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp:10,update,update,10,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,1,['update'],['update']
Deployability,"// FIXME: we have to remove the external source at destruction time. Needs; // further tweaks of the patch in clang. This will be done later once the; // patch is in clang's mainline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:101,patch,patch,101,interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp,2,['patch'],['patch']
Deployability,// FIXME: we probably need to update getKeepTypeChildren status for; // parents of *Root.ReferencedBy.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp:30,update,update,30,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp,1,['update'],['update']
Deployability,"// FP is R31/X31, so no need to update MinGPR/MinG8R.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,// Facility to release memory from data structures only needed during index; // construction (including while building combined index). Currently this only; // releases the temporary map used while constructing a correspondence between; // stack ids and their index in the StackIds vector. Mostly impactful when; // building a large combined index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h:15,release,release,15,interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ModuleSummaryIndex.h,2,['release'],"['release', 'releases']"
Deployability,// False once moved-from or release()d.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ScopeExit.h:28,release,release,28,interpreter/llvm-project/llvm/include/llvm/ADT/ScopeExit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ScopeExit.h,1,['release'],['release']
Deployability,"// File contains mmalloc heap. If we are in write mode and mapped; // file already connected in write mode switch to read-only mode.; // Check if ROOT versions are compatible.; // If so update mapped version of TMapFile to reflect current; // situation (only if not opened in READ mode).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:186,update,update,186,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['update'],['update']
Deployability,"// File to check repository updates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TDataSetManagerFile.h:28,update,updates,28,proof/proof/inc/TDataSetManagerFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TDataSetManagerFile.h,1,['update'],['updates']
Deployability,"// File to check updates and its locking path",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:17,update,updates,17,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['updates']
Deployability,"// File tree complete - Release memory before exit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:24,Release,Release,24,geom/gdml/src/TGDMLParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx,1,['Release'],['Release']
Deployability,"// Fill ReleaseInsertPtToRCIdentityRoots, which is a map from insertion points; // to the set of RC identity roots that would be released by the release calls; // moved to the insertion points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:8,Release,ReleaseInsertPtToRCIdentityRoots,8,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,3,"['Release', 'release']","['ReleaseInsertPtToRCIdentityRoots', 'release', 'released']"
Deployability,"// Fill in Result.IdentifierInfo and update the token kind,; // looking up the identifier in the identifier table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:37,update,update,37,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,2,['update'],['update']
Deployability,// Fill in the __invoke function with a dummy implementation. IR generation; // will fill in the actual details. Update its type in case it contained; // an 'auto'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:113,Update,Update,113,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['Update'],['Update']
Deployability,"// Fill position vector for non-integrated observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:32,integrat,integrated,32,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integrated']
Deployability,"// Fill the integration variable with dummy value for now. This will then; // be reset in the sampling loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"// Fill the profile histogram; // no entries/bin is available so can fill only using bin content as weight; // implement filling of projected histogram; // outbin is bin number of outAxis (the projected axis). Loop is done on all bin of TH2 histograms; // inbin is the axis being integrated. Loop is done only on the selected bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:280,integrat,integrated,280,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['integrat'],['integrated']
Deployability,"// Fill up UpdateOrderFileBB: grab the index, update the buffer!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp:11,Update,UpdateOrderFileBB,11,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,2,"['Update', 'update']","['UpdateOrderFileBB', 'update']"
Deployability,"// Fill update and final expressions with zeroes, they are provided later,; // after the directive construction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp:8,update,update,8,interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,1,['update'],['update']
Deployability,"// Filter of tools unused flags such as -no-integrated-as and -Wa,*.; // They are not used for syntax checking, and could confuse targets; // which don't support these options.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp:44,integrat,integrated-as,44,interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp,1,['integrat'],['integrated-as']
Deployability,"// Final update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:9,update,update,9,proof/proofbench/src/TSelHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx,3,['update'],['update']
Deployability,// Final update of the P's type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp:9,update,update,9,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,1,['update'],['update']
Deployability,"// Final update of the dialog box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:9,update,update,9,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['update'],['update']
Deployability,// Finally update start and size of dead access.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp:11,update,update,11,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,1,['update'],['update']
Deployability,// Finally update the result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:11,update,update,11,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,2,['update'],['update']
Deployability,// Finally update the terminator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:11,update,update,11,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,// Finally we can move the stack update if we do not require register; // scavenging. Register scavenging can introduce more spills and so; // may make the frame size larger than we have computed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:33,update,update,33,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// Finally, erase the old block and update dominator info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,1,['update'],['update']
Deployability,"// Finally, load the updated vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:21,update,updated,21,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['update'],['updated']
Deployability,"// Finally, recreate the node, it's operands were updated to use; // frozen operands, so we just need to use it's ""original"" operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:50,update,updated,50,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['updated']
Deployability,"// Finally, release the old value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:12,release,release,12,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,"// Finally, update both data flow state and insert the actual vsetvli.; // Doing both keeps the code in sync with the dataflow results, which; // is critical for correctness of phase 3.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:12,update,update,12,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,1,['update'],['update']
Deployability,"// Finally, update the live-range of IntA.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:12,update,update,12,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,"// Finally, we know we have the right number of parameters, install them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:60,install,install,60,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['install'],['install']
Deployability,"// Find MSSA insertion point. Normally P will always have a corresponding; // memory access before which we can insert. However, with non-standard AA; // pipelines, there may be a mismatch between AA and MSSA, in which case we; // will scan for a memory access before P. In either case, we know for sure; // that at least the load will have a memory access.; // TODO: Simplify this once P will be determined by MSSA, in which case the; // discrepancy can no longer occur.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp:154,pipeline,pipelines,154,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,1,['pipeline'],['pipelines']
Deployability,// Find an instruction that updates the base register of the ld/st; // instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:28,update,updates,28,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['updates']
Deployability,// Find and merge a base register updates before or after a ld/st instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:34,update,updates,34,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['updates']
Deployability,"// Find anything that aliases this stack index, install PHIs for it too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:48,install,install,48,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['install'],['install']
Deployability,"// Find def instruction for the given ConstReg, walking through; // spv_track_constant and ASSIGN_TYPE instructions. Updates ConstReg by def; // of OpConstant instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVUtils.h:117,Update,Updates,117,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVUtils.h,1,['Update'],['Updates']
Deployability,"// Find exit values which are induction variables in the loop, and are; // unused in the loop, with the only use being the exit block PhiNode,; // and the induction variable update binary operator.; // The exit value can be replaced with the final value when it is cheap; // to do so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:174,update,update,174,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['update'],['update']
Deployability,"// Find first clause (skip seq_cst|acq_rel|aqcuire|release|relaxed clause,; // if it is first).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:51,release,release,51,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['release'],['release']
Deployability,"// Find largest set of observables that can be integrated in one go",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:47,integrat,integrated,47,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"// Find method defined configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:23,configurat,configuration,23,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,2,['configurat'],['configuration']
Deployability,// Find occurrences of old FileEntry; update with new one:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp:38,update,update,38,interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,1,['update'],['update']
Deployability,"// Find out how many times region R is cloned. Note that if the parent; // of R is cloned, R is also cloned, but R's clone count is not updated; // from the clone of the parent. We need to accumlate all the counts; // from the ancestors to get the clone count.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:136,update,updated,136,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['update'],['updated']
Deployability,// Find out which chunks we need to patch up to obtain a contiguous sequence; // of ones.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandImm.cpp:36,patch,patch,36,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandImm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandImm.cpp,1,['patch'],['patch']
Deployability,// Find the ResOperand that refers to the operand we're aliasing away; // and update it to refer to the combined operand instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:78,update,update,78,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['update'],['update']
Deployability,// Find the latest /opt/rocm-{release} directory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:30,release,release,30,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,1,['release'],['release']
Deployability,// Find the range of the node stack by walking down until we pass the; // root DFS number. Update the DFS numbers and low link numbers in the; // process to avoid re-walking this list where possible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:91,Update,Update,91,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['Update'],['Update']
Deployability,"// Fine grained scene updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveManager.h:22,update,updates,22,graf3d/eve/inc/TEveManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveManager.h,1,['update'],['updates']
Deployability,"// Fine grained updates via stamping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveManager.h:16,update,updates,16,graf3d/eve/inc/TEveManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveManager.h,1,['update'],['updates']
Deployability,// Finish a match and update the results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h:22,update,update,22,interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcher.h,1,['update'],['update']
Deployability,// Finish fn->subprogram upgrade for materialized functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:25,upgrade,upgrade,25,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['upgrade'],['upgrade']
Deployability,"// First barrier for synchronization, ensures main thread has updated; // values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:62,update,updated,62,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['updated']
Deployability,"// First create MemoryPhis in all blocks that don't have one. Create in the; // order found in Updates, not in PredMap, to get deterministic numbering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:95,Update,Updates,95,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['Update'],['Updates']
Deployability,// First handle complex passes like the pass managers which carry pipelines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:66,pipeline,pipelines,66,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,4,['pipeline'],['pipelines']
Deployability,"// First iteration, determine what each component can integrate analytically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:54,integrat,integrate,54,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['integrat'],['integrate']
Deployability,"// First locate which copy of OrigFunc to clone again. If a caller; // of this callsite clone was already assigned to call a particular; // function clone, we need to redirect all of those callers to the; // new function clone, and update their other callees within this; // function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:232,update,update,232,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['update']
Deployability,"// First momentum weight gradient update for ADAM ; // Mt = beta1 * Mt-1 + (1-beta1) * WeightGradients",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/Arithmetic.hxx:34,update,update,34,tmva/tmva/src/DNN/Architectures/Reference/Arithmetic.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/Arithmetic.hxx,1,['update'],['update']
Deployability,"// First momentum weight gradient update for ADAM; // Mt = beta1 * Mt-1 + (1-beta1) * WeightGradients",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx:34,update,update,34,tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Arithmetic.hxx,1,['update'],['update']
Deployability,// First remove registers from AlreadyMaskedRegisters if their value is; // updated by this instruction - it makes them contain a new value that is; // not guaranteed to already have been masked.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:76,update,updated,76,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,1,['update'],['updated']
Deployability,// First see if the pipeline could receive this instruction; // in the current cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:20,pipeline,pipeline,20,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,2,['pipeline'],['pipeline']
Deployability,"// First set the entry the tree on its owns friends; // (the friends of the chain will be updated in the; // next loop).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:90,update,updated,90,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['update'],['updated']
Deployability,"// First try to load configuration from the default files, return on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:21,configurat,configuration,21,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['configurat'],['configuration']
Deployability,"// First update the result variable of params in the compute graph to in[<position>].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:9,update,update,9,roofit/roofitcore/src/RooFuncWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx,1,['update'],['update']
Deployability,"// First, collect all blocks in the loop that are on a patch from Succ; // to the header.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:55,patch,patch,55,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['patch'],['patch']
Deployability,"// First, go through the PHI nodes in UnwindDest and update any nodes that; // reference the block we are removing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:53,update,update,53,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['update'],['update']
Deployability,"// First, simply split all muxes into a pair of conditional transfers; // and update the live intervals to reflect the new arrangement. The; // goal is to update the kill flags, since predication will rely on; // them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:78,update,update,78,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,2,['update'],['update']
Deployability,"// First, update the barrier ED kept in the separate CEDMap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,"// Fix LCSSA phis not already fixed earlier. Extracts may need to be generated; // in the exit block, so update the builder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:105,update,update,105,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,"// Flag bits ""flags"" field of the Html widget:; //; // REDRAW_PENDING An idle handler has already been queued to; // call the TGHtml::Redraw() method.; //; // GOT_FOCUS This widget currently has input focus.; //; // HSCROLL Horizontal scrollbar position needs to be; // recomputed.; //; // VSCROLL Vertical scrollbar position needs to be; // recomputed.; //; // RELAYOUT We need to reposition every element on the; // virtual canvas. (This happens, for example,; // when the size of the widget changes and we; // need to recompute the line breaks.); //; // RESIZE_ELEMENTS We need to recompute the size of every element.; // This happens, for example, when the fonts; // change.; //; // REDRAW_FOCUS We need to repaint the focus highlight border.; //; // REDRAW_TEXT Everything in the clipping window needs to be redrawn.; //; // STYLER_RUNNING There is a call to HtmlAddStyle() in process.; // Used to prevent a recursive call to HtmlAddStyle().; //; // INSERT_FLASHING True if there is a timer scheduled that will toggle; // the state of the insertion cursor.; //; // REDRAW_IMAGES One or more TGHtmlImageMarkup objects have their; // redrawNeeded flag set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h:1016,toggle,toggle,1016,gui/guihtml/inc/TGHtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h,1,['toggle'],['toggle']
Deployability,"// Flag for update, if anything changed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:12,update,update,12,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['update'],['update']
Deployability,// Flag to ensure we update our deallocation information at most once per; // updateImpl call and only if we use the free check reasoning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:21,update,update,21,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['update'],"['update', 'updateImpl']"
Deployability,// Floor update,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:9,update,update,9,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,1,['update'],['update']
Deployability,// Fold stackmap/patchpoint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:17,patch,patchpoint,17,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,2,['patch'],['patchpoint']
Deployability,// Follow a chain of references given by DW_AT_abstract_origin and/or; // DW_AT_specification and update the scope name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVScope.h:98,update,update,98,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVScope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVScope.h,1,['update'],['update']
Deployability,// Follow a chain of references given by DW_AT_abstract_origin and/or; // DW_AT_specification and update the symbol name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVSymbol.h:98,update,update,98,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVSymbol.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVSymbol.h,1,['update'],['update']
Deployability,// Follow a chain of references given by DW_AT_abstract_origin and/or; // DW_AT_specification and update the type name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVType.h:98,update,update,98,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVType.h,1,['update'],['update']
Deployability,"// Following any allocas not in the entry block, update the saved SP in the; // jmpbuf to the new value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp:49,update,update,49,interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,1,['update'],['update']
Deployability,"// For --reloc: print zero blocks patched by relocations, so that; // relocations can be shown in the dump.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp:34,patch,patched,34,interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp,1,['patch'],['patched']
Deployability,"// For 32-bit MSVC targets, raise the alignment of f80 values to 16 bytes.; // Raising the alignment is safe because Clang did not produce f80 values in; // the MSVC environment before this upgrade was added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:190,upgrade,upgrade,190,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['upgrade'],['upgrade']
Deployability,"// For 32-bit targets, the deployment target for iOS has to be earlier than; // iOS 11.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:27,deploy,deployment,27,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,"// For AGPR reg, check if live intervals need to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNPreRAOptimizations.cpp:52,update,updated,52,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNPreRAOptimizations.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNPreRAOptimizations.cpp,1,['update'],['updated']
Deployability,"// For BBs that are likely to change, we subtract from feature totals their; // contribution. Some features, like max loop counts or depths, are left; // invalid, as they will be updated post-inlining.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/FunctionPropertiesAnalysis.cpp:179,update,updated,179,interpreter/llvm-project/llvm/lib/Analysis/FunctionPropertiesAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/FunctionPropertiesAnalysis.cpp,1,['update'],['updated']
Deployability,"// For HIP compilation the handle itself does not change, so we only need; // to update the Stub value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp:81,update,update,81,interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,1,['update'],['update']
Deployability,"// For IsBottomUp, the first SchedGroup in SyncPipeline contains the; // instructions that are the ultimate successors in the resultant mutation.; // Therefore, in such a configuration, the SchedGroups occurring before the; // candidate SGID are successors of the candidate SchedGroup, thus the current; // SU should be linked as a predecessor to SUs in those SchedGroups. The; // opposite is true if !IsBottomUp. IsBottomUp occurs in the case of multiple; // SCHED_GROUP_BARRIERS, or if a user specifies IGLP_OPT SchedGroups using; // IsBottomUp (in reverse).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:171,configurat,configuration,171,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['configurat'],['configuration']
Deployability,"// For LOB's, the ARMLowOverheadLoops pass may remove the unconditional; // branch later in the pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:96,pipeline,pipeline,96,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['pipeline'],['pipeline']
Deployability,"// For MinGW environments, manually export the __chkstk function from the lli; // executable.; //; // Normally, this function is provided by compiler-rt builtins or libgcc.; // It is named ""_alloca"" on i386, ""___chkstk_ms"" on x86_64, and ""__chkstk"" on; // arm/aarch64. In MSVC configurations, it's named ""__chkstk"" in all; // configurations.; //; // When Orc tries to resolve symbols at runtime, this succeeds in MSVC; // configurations, somewhat by accident/luck; kernelbase.dll does export a; // symbol named ""__chkstk"" which gets found by Orc, even if regular applications; // never link against that function from that DLL (it's linked in statically; // from a compiler support library).; //; // The MinGW specific symbol names aren't available in that DLL though.; // Therefore, manually export the relevant symbol from lli, to let it be; // found at runtime during tests.; //; // For real JIT uses, the real compiler support libraries should be linked; // in, somehow; this is a workaround to let tests pass.; //; // We need to make sure that this symbol actually is linked in when we; // try to export it; if no functions allocate a large enough stack area,; // nothing would reference it. Therefore, manually declare it and add a; // reference to it. (Note, the declarations of _alloca/___chkstk_ms/__chkstk; // are somewhat bogus, these functions use a different custom calling; // convention.); //; // TODO: Move this into libORC at some point, see; // https://github.com/llvm/llvm-project/issues/56603.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp:277,configurat,configurations,277,interpreter/llvm-project/llvm/tools/lli/lli.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp,3,['configurat'],['configurations']
Deployability,"// For NSNull, objects returned by +null are singletons that ignore; // retain/release semantics. Just don't track them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp:79,release,release,79,interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,1,['release'],['release']
Deployability,"// For PGO use pipeline, try to optimize memory intrinsics such as memcpy; // using the size value profile. Don't perform this when optimizing for size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:15,pipeline,pipeline,15,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// For PatchPoint, the call args are not foldable (even if reported in the; // stackmap e.g. via anyregcc).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:7,Patch,PatchPoint,7,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['Patch'],['PatchPoint']
Deployability,"// For Release ordering, the failure ordering should be Monotonic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:7,Release,Release,7,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,2,['Release'],['Release']
Deployability,"// For VRegs, in instruction referencing mode, create a DBG_INSTR_REF; // pointing at the VReg, which will be patched up later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:110,patch,patched,110,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['patch'],['patched']
Deployability,// For a tentative schedule LIS isn't updated yet but livemask should; // remain the same on any schedule. Subreg defs can be reordered but they; // all must dominate uses anyway.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRegPressure.cpp:38,update,updated,38,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRegPressure.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRegPressure.cpp,1,['update'],['updated']
Deployability,"// For all anchors whose offsets are <= E->getOffset(), they are preceded by; // the previous relocation whose RelocDeltas value equals Delta.; // Decrease their offset and update their size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/ELF_riscv.cpp:173,update,update,173,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/ELF_riscv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/ELF_riscv.cpp,1,['update'],['update']
Deployability,"// For all configurations, the bin offset should have the effect of bringing; // the NLL to zero, modulo some numerical imprecisions:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:11,configurat,configurations,11,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['configurat'],['configurations']
Deployability,"// For an instruction to be added into Worklist above, all its users inside; // the loop should also be in Worklist. However, this condition cannot be; // true for phi nodes that form a cyclic dependence. We must process phi; // nodes separately. An induction variable will remain uniform if all users; // of the induction variable and induction variable update remain uniform.; // The code below handles both pointer and non-pointer induction variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:355,update,update,355,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,"// For big basic blocks, we only compute the full trace the first time; // we hit this. We do not invalidate the trace, but instead update the; // instruction depths incrementally.; // NOTE: Only the instruction depths up to MI are accurate. All other; // trace information is not updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp:132,update,update,132,interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,2,['update'],"['update', 'updated']"
Deployability,"// For calls that temporarily have to toggle streaming mode as part of the; // call-sequence, we need to be more careful when coalescing copy instructions; // so that we don't end up coalescing the NEON/FP result or argument register; // with a whole Z-register, such that after coalescing the register allocator; // will try to spill/reload the entire Z register.; //; // We do this by checking if the node has any defs/uses that are; // COALESCER_BARRIER pseudos. These are 'nops' in practice, but they exist to; // instruct the coalescer to avoid coalescing the copy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:38,toggle,toggle,38,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,1,['toggle'],['toggle']
Deployability,"// For compatibility reasons, when targetting MSVC, it is important to; // generate a 'legacy' NOP in the form of a 8B FF MOV EDI, EDI. Some tools; // rely specifically on this pattern to be able to patch a function.; // This is only for 32-bit targets, when using /arch:IA32 or /arch:SSE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:199,patch,patch,199,interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,1,['patch'],['patch']
Deployability,"// For each Itinerary across all processors, add a unique entry to the stages,; // operand cycles, and pipeline bypass tables. Then add the new Itinerary; // object with computed offsets to the ProcItinLists result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:103,pipeline,pipeline,103,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['pipeline'],['pipeline']
Deployability,// For each MI to be deleted update users of regs defined by that MI to use; // some other dominating definition (that is not to be deleted).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.cpp:29,update,update,29,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.cpp,1,['update'],['update']
Deployability,"// For each block in the original loop, create a new copy,; // and update the value map with the newly created values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:67,update,update,67,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,2,['update'],['update']
Deployability,"// For each block, find which slots are active within this block; // and update the live intervals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:73,update,update,73,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['update'],['update']
Deployability,"// For each clause we're starting, update the MinClauseMap so we can; // know which is the topmost funclet containing a clause targeting; // it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp:35,update,update,35,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp,1,['update'],['update']
Deployability,"// For each extender that is a def, visit all uses of the defined register,; // and produce an offset range that works for all uses. The def doesn't; // have to be checked, because it can become dead if all uses can be updated; // to use a different reg/offset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:219,update,updated,219,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['update'],['updated']
Deployability,"// For each instruction that was cloned and used outside, update its uses",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['update']
Deployability,"// For each section that remains alive, we want to remove the dead references.; // This either might update the content of the section (e.g. remove symbols; // from symbol table that belongs to removed section) or trigger an error if; // a live section critically depends on a section being removed somehow; // (e.g. the removed section is referenced by a relocation).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObject.cpp:101,update,update,101,interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObject.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObject.cpp,1,['update'],['update']
Deployability,"// For efficiency we need sometimes to update fLast so we have; // to cast const away. Ugly, but making GetAbsLast() not const breaks; // many other const functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx:39,update,update,39,core/cont/src/TObjArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TObjArray.cxx,2,['update'],['update']
Deployability,"// For export the destination registers are really temps that; // can be used as the actual source after export patching, so; // we need to treat them like sources and set the EXP_CNT; // score.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:112,patch,patching,112,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,1,['patch'],['patching']
Deployability,"// For extension diagnostics that haven't been explicitly mapped, check if we; // should upgrade the diagnostic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp:89,upgrade,upgrade,89,interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,1,['upgrade'],['upgrade']
Deployability,"// For funcrefs, call_indirect is done through __funcref_call_table and the; // funcref is always installed in slot 0 of the table, therefore instead of; // having the function pointer added at the end of the params list, a zero; // (the index in; // __funcref_call_table is added).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:98,install,installed,98,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['install'],['installed']
Deployability,"// For iOS 6, undo the translation to add -static for -mkernel/-fapple-kext.; // FIXME: It would be far better to avoid inserting those -static arguments,; // but we can't check the deployment target in the translation code until; // it is set here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:182,deploy,deployment,182,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,"// For inline asm, clear the pipeline state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:29,pipeline,pipeline,29,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['pipeline'],['pipeline']
Deployability,"// For invalid AAs we can fix dependent AAs that have a required dependence,; // thereby folding long dependence chains in a single step without the need; // to run updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:165,update,updates,165,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['update'],['updates']
Deployability,"// For loops with multiple exits, there's no edge from the middle block; // to exit blocks (as the epilogue must run) and thus no need to update; // the immediate dominator of the exit blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:138,update,update,138,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['update']
Deployability,"// For method pool in the module, if it contains an entry for a selector,; // the entry should be complete, containing everything introduced by that; // module and all modules it imports. It's possible that the entry is out of; // date, so we need to pull in the new content here.; // It's possible that updateOutOfDateSelector can update SelectorIDs. To be; // safe, we copy all selectors out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:304,update,updateOutOfDateSelector,304,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,2,['update'],"['update', 'updateOutOfDateSelector']"
Deployability,"// For mips32 we want to emit the following pattern:; //; // .Lxray_sled_N:; // ALIGN; // B .tmpN; // 11 NOP instructions (44 bytes); // ADDIU T9, T9, 52; // .tmpN; //; // We need the 44 bytes (11 instructions) because at runtime, we'd; // be patching over the full 48 bytes (12 instructions) with the following; // pattern:; //; // ADDIU SP, SP, -8; // NOP; // SW RA, 4(SP); // SW T9, 0(SP); // LUI T9, %hi(__xray_FunctionEntry/Exit); // ORI T9, T9, %lo(__xray_FunctionEntry/Exit); // LUI T0, %hi(function_id); // JALR T9; // ORI T0, T0, %lo(function_id); // LW T9, 0(SP); // LW RA, 4(SP); // ADDIU SP, SP, 8; //; // We add 52 bytes to t9 because we want to adjust the function pointer to; // the actual start of function i.e. the address just after the noop sled.; // We do this because gp displacement relocation is emitted at the start of; // of the function i.e after the nop sled and to correctly calculate the; // global offset table address, t9 must hold the address of the instruction; // containing the gp displacement relocation.; // FIXME: Is this correct for the static relocation model?; //; // For mips64 we want to emit the following pattern:; //; // .Lxray_sled_N:; // ALIGN; // B .tmpN; // 15 NOP instructions (60 bytes); // .tmpN; //; // We need the 60 bytes (15 instructions) because at runtime, we'd; // be patching over the full 64 bytes (16 instructions) with the following; // pattern:; //; // DADDIU SP, SP, -16; // NOP; // SD RA, 8(SP); // SD T9, 0(SP); // LUI T9, %highest(__xray_FunctionEntry/Exit); // ORI T9, T9, %higher(__xray_FunctionEntry/Exit); // DSLL T9, T9, 16; // ORI T9, T9, %hi(__xray_FunctionEntry/Exit); // DSLL T9, T9, 16; // ORI T9, T9, %lo(__xray_FunctionEntry/Exit); // LUI T0, %hi(function_id); // JALR T9; // ADDIU T0, T0, %lo(function_id); // LD T9, 0(SP); // LD RA, 8(SP); // DADDIU SP, SP, 16; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:243,patch,patching,243,interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,2,['patch'],['patching']
Deployability,"// For multi-pdf configurations, check that the master index state name associated with this p.d.f exists as a state in the master category",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:17,configurat,configurations,17,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['configurat'],['configurations']
Deployability,"// For nodes in the same SCC, update the counts in two steps:; // 1. Compute the additional count for each node by propagating the counts; // along all incoming edges to the node that originate from within the same; // SCC and summing them up.; // 2. Add the additional counts to the nodes in the SCC.; // This ensures that the order of; // traversal of nodes within the SCC doesn't affect the final result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/SyntheticCountsUtils.cpp:30,update,update,30,interpreter/llvm-project/llvm/lib/Analysis/SyntheticCountsUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/SyntheticCountsUtils.cpp,1,['update'],['update']
Deployability,// For non-ConstantExpr we use getAggregateElement as a fast path to avoid; // calling getSplatValue in release builds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Constants.cpp:104,release,release,104,interpreter/llvm-project/llvm/lib/IR/Constants.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Constants.cpp,1,['release'],['release']
Deployability,"// For non-child cloned loops and hoisted loops, we just need to update LCSSA; // and we can do it in any order as they don't nest relative to each other.; //; // Also check if any of the loops we have updated have become top-level loops; // as that will necessitate widening the outer loop scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,2,['update'],"['update', 'updated']"
Deployability,"// For now, allow missing resource libraries to support developers who may; // not have compiler-rt checked out or integrated into their build (unless; // we explicitly force linking with this library).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:115,integrat,integrated,115,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['integrat'],['integrated']
Deployability,"// For now, allow missing resource libraries to support developers who may; // not have compiler-rt checked out or integrated into their build.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:115,integrat,integrated,115,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['integrat'],['integrated']
Deployability,"// For patching purposes, we need to remember where each section starts, both; // for patching up the section size field, and for patching up references to; // locations within the section.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp:7,patch,patching,7,interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WasmObjectWriter.cpp,3,['patch'],['patching']
Deployability,"// For phi nodes, we need to update the incoming value for all operands; // with the same predecessor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp:29,update,update,29,interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,1,['update'],['update']
Deployability,"// For phis, use the walker, see where we ended up, go there.; // The invariant.group handling in MemorySSA is ad-hoc and doesn't; // support updates, so don't use it to optimize uses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:142,update,updates,142,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,1,['update'],['updates']
Deployability,"// For physregs, only update the regunits that actually have a; // precomputed live range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['update'],['update']
Deployability,"// For shrinking, free all the Blocks in the Block map, update the stream; // data, then shrink the directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MSFBuilder.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MSFBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MSFBuilder.cpp,1,['update'],['update']
Deployability,"// For some DS form load/store instructions, it can also be an update form,; // if the stride is constant and is a multipler of 4. Use update form if; // prefer it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:63,update,update,63,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,2,['update'],['update']
Deployability,"// For stack slots, calculate PHIs for the equivalent of the units, then; // install for each index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:77,install,install,77,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['install'],['install']
Deployability,"// For the dead blocks' live successors, update their phi nodes by replacing; // the operands corresponding to dead blocks with UndefVal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['update'],['update']
Deployability,"// For the given inlinesite, get the initial line number and its; // source filename. Update the logical scope representing it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:86,Update,Update,86,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['Update'],['Update']
Deployability,"// For the purpose of ReadAdvance, implicit uses come directly after explicit; // uses. The ""UseIndex"" must be updated according to that implicit layout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:111,update,updated,111,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,1,['update'],['updated']
Deployability,"// For the reg itself and all subregs: update the def to current;; // reset the kill state, any restrictions, and references.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:39,update,update,39,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['update'],['update']
Deployability,"// For the sake of this example GC, we arbitrarily pick addrspace(1) as our; // GC managed heap. We know that a pointer into this heap needs to be; // updated and that no other pointer does.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/SafepointIRVerifier.cpp:151,update,updated,151,interpreter/llvm-project/llvm/lib/IR/SafepointIRVerifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/SafepointIRVerifier.cpp,1,['update'],['updated']
Deployability,"// For the sake of this example GC, we arbitrarily pick addrspace(1) as our; // GC managed heap. We know that a pointer into this heap needs to be; // updated and that no other pointer does. Note that addrspace(1) is used; // only as an example, it has no special meaning, and is not reserved for; // GC usage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BuiltinGCs.cpp:151,update,updated,151,interpreter/llvm-project/llvm/lib/IR/BuiltinGCs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BuiltinGCs.cpp,1,['update'],['updated']
Deployability,"// For units in DWARF Package File, remember the index entry and update; // the abbreviation offset read by extract().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h:65,update,update,65,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFUnit.h,1,['update'],['update']
Deployability,"// For unsplit intrinsics, we simply modify the source and destination; // pointers in place. This isn't just an optimization, it is a matter of; // correctness. With unsplit intrinsics we may be dealing with transfers; // within a single alloca before SROA ran, or with transfers that have; // a variable length. We may also be dealing with memmove instead of; // memcpy, and so simply updating the pointers is the necessary for us to; // update both source and dest of a single call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:440,update,update,440,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['update'],['update']
Deployability,"// Force RooRealIntegral to offer all observables for internal integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddition.h:63,integrat,integration,63,roofit/roofitcore/inc/RooAddition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddition.h,2,['integrat'],['integration']
Deployability,"// Force a transition from the IS_DISPATCHED state to the IS_READY or; // IS_PENDING state. State transitions normally occur either at the beginning; // of a new cycle (see method cycleEvent()), or as a result of another issue; // event. This method is called every time the instruction might have changed; // in state. It internally delegates to method updateDispatched() and; // updateWaiting().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:354,update,updateDispatched,354,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,2,['update'],"['updateDispatched', 'updateWaiting']"
Deployability,"// Force all observables to be offered for internal integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h:52,integrat,integration,52,roofit/roofitcore/inc/RooAbsCachedReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedReal.h,1,['integrat'],['integration']
Deployability,"// Force an update of final result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:12,update,update,12,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['update'],['update']
Deployability,// Force any function attributes we want the rest of the pipeline to observe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:57,pipeline,pipeline,57,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,2,['pipeline'],['pipeline']
Deployability,"// Force internal handling of integration of given observable if any; // of the product terms depend on it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:30,integrat,integration,30,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integration']
Deployability,"// Force numerical integration for the reference value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx:19,integrat,integration,19,roofit/roofitcore/test/testRooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,// Force the input to updateDisplay when it's focused,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:22,update,updateDisplay,22,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['updateDisplay']
Deployability,"// Force using numeric integration; // use special numeric integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:23,integrat,integration,23,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,2,['integrat'],"['integration', 'integrator']"
Deployability,"// Formula for integration over m when p=0.5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx:15,integrat,integration,15,roofit/roofit/src/RooArgusBG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooArgusBG.cxx,1,['integrat'],['integration']
Deployability,// Forward declarations of an update tracking API used in the pass manager.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:30,update,update,30,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['update'],['update']
Deployability,// Forward status checks and updates to the walker.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/InterpState.h:29,update,updates,29,interpreter/llvm-project/clang/lib/AST/Interp/InterpState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/InterpState.h,1,['update'],['updates']
Deployability,"// Forwards to dyn_cast_if_present to avoid breaking current users. This is; // deprecated and will be removed in a future patch, use; // cast_if_present instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:123,patch,patch,123,interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,1,['patch'],['patch']
Deployability,// Frame pointers and base pointers complicate matters so don't do anything; // if we have them. For example having a frame pointer will sometimes require; // a copy of r1 into r31 and that makes keeping track of updates to r1 more; // difficult. Similar situation exists with setjmp.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:213,update,updates,213,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['updates']
Deployability,"// From and length; with whatever to update the prompt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h:37,update,update,37,core/textinput/src/textinput/Range.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Range.h,1,['update'],['update']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau) * (x / tau)^2 over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau) over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau)* x / tau over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau)*cos(x*m) over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau)*cosh(x*m/2) over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau)*sin(x*m) over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// From asking WolframAlpha: integrate exp(-x/tau)*sinh(x*m/2) over x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,integrat,integrate,29,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['integrat'],['integrate']
Deployability,"// Full numeric integration over requested observables maps always to code zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:16,integrat,integration,16,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Deployability,"// Function declarations; //; /// <summary>; /// Gets an <see cref=""ISetupConfiguration""/> that provides information about; /// product instances installed on the machine.; /// </summary>; /// <param name=""ppConfiguration"">The <see cref=""ISetupConfiguration""/> that; /// provides information about product instances installed on the; /// machine.</param>; /// <param name=""pReserved"">Reserved for future use.</param>; /// <returns>Standard HRESULT indicating success or failure.</returns>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:146,install,installed,146,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,2,['install'],['installed']
Deployability,"// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background in all dimensions) and their; /// crossings; /// - non-sensitivity to two-fold; /// coincidences (coincidences peak - background - background in all; /// dimensions) and their crossings; /// - ability to identify peaks close; /// to the edges of the spectrum region; /// - resolution, decomposition of; /// doublets and multiplets. The algorithm should be able to recognise close; /// positioned peaks.; ///; /// #### References:; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1507,continuous,continuous,1507,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['continuous'],['continuous']
Deployability,"// Function passes executed between InlinerPass runs may have changed the; // module-wide features.; // The cgscc pass manager rules are such that:; // - if a pass leads to merging SCCs, then the pipeline is restarted on the; // merged SCC; // - if a pass leads to splitting the SCC, then we continue with one of the; // splits; // This means that the NodesInLastSCC is a superset (not strict) of the nodes; // that subsequent passes would have processed; // - in addition, if new Nodes were created by a pass (e.g. CoroSplit),; // they'd be adjacent to Nodes in the last SCC. So we just need to check the; // boundary of Nodes in NodesInLastSCC for Nodes we haven't seen. We don't; // care about the nature of the Edge (call or ref). `FunctionLevels`-wise, we; // record them at the same level as the original node (this is a choice, may; // need revisiting).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp:196,pipeline,pipeline,196,interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,1,['pipeline'],['pipeline']
Deployability,"// Function updateAddressSpace moves the address space down a lattice; // path. Therefore, nothing to do if User is already inferred as flat (the; // bottom element in the lattice).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:12,update,updateAddressSpace,12,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,1,['update'],['updateAddressSpace']
Deployability,// Functions include their arguments in the use-list. Changed function; // values mean that the result of the function changed. We only need to; // update the call sites with the new function result and do not have to; // propagate the call arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp:148,update,update,148,interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,1,['update'],['update']
Deployability,"// Functions that target CBs can override to return a list of; // target specific Views that need to live within /lib/Target/ so that; // they can benefit from the target CB or from backend functionality that is; // not already exposed through MC-layer classes. Keep in mind that how this; // function is used is that the function is called within llvm-mca.cpp and; // then each unique_ptr<View> is passed into the PipelinePrinter::addView(); // function. This function will then std::move the View into its own vector of; // Views. So any CB that overrides this function needs to make sure that they; // are not relying on the current address or reference of the View; // unique_ptrs. If you do need the CB and View to be able to communicate with; // each other, consider giving the View a reference or pointer to the CB when; // the View is constructed. Then the View can query the CB for information; // when it needs it.; /// Return a vector of Views that will be added before all other Views.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:415,Pipeline,PipelinePrinter,415,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['Pipeline'],['PipelinePrinter']
Deployability,"// GCC cross compiling toolchains will install target libraries which ship; // as part of the toolchain under <prefix>/<triple>/<libdir> rather than as; // any part of the GCC installation in; // <prefix>/<libdir>/gcc/<triple>/<version>. This decision is somewhat; // debatable, but is the reality today. We need to search this tree even; // when we have a sysroot somewhere else. It is the responsibility of; // whomever is doing the cross build targeting a sysroot using a GCC; // installation that is *not* within the system root to ensure two things:; //; // 1) Any DSOs that are linked in from this tree or from the install path; // above must be present on the system root and found via an; // appropriate rpath.; // 2) There must not be libraries installed into; // <prefix>/<triple>/<libdir> unless they should be preferred over; // those within the system root.; //; // Note that this matches the GCC behavior. See the below comment for where; // Clang diverges from GCC's behavior.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:39,install,install,39,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,5,['install'],"['install', 'installation', 'installed']"
Deployability,"// GG 17/8/2012 -- END; // finally, update list of datasets in session viewer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:36,update,update,36,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,1,['update'],['update']
Deployability,"// GSL Integrator. Will really get it only if MathMore enabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:7,Integrat,Integrator,7,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['Integrat'],['Integrator']
Deployability,"// GSL integrator is now in RooFitMore and it register itself; //RooAdaptiveGaussKronrodIntegrator1D::registerIntegrator(*this) ;; //RooGaussKronrodIntegrator1D::registerIntegrator(*this) ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:7,integrat,integrator,7,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['integrat'],['integrator']
Deployability,"// General configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:11,configurat,configuration,11,proof/proof/inc/TVirtualPacketizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h,2,['configurat'],['configuration']
Deployability,"// Generate ""fencem 1"" as release fence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp:26,release,release,26,interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,1,['release'],['release']
Deployability,// Generate the SchedClass table for this processor and update global; // tables. Must be called for each processor in order.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:56,update,update,56,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['update'],['update']
Deployability,// Generate the code sequence in the entry block of each function to; // update the buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp:73,update,update,73,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,1,['update'],['update']
Deployability,// Generate the epilog instructions to complete the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:52,pipeline,pipeline,52,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipeline']
Deployability,// Generate the instructions for '#pragma omp target update' directive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:53,update,update,53,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,"// Generate the iteration count check for the main loop, *after* the check; // for the epilogue loop, so that the path-length is shorter for the case; // that goes directly through the vector epilogue. The longer-path length for; // the main loop is compensated for, by the gain from vectorizing the larger; // trip count. Note: the branch will get updated later on when we vectorize; // the epilogue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:349,update,updated,349,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['update'],['updated']
Deployability,// Generate the prolog instructions that set up the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:52,pipeline,pipeline,52,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['pipeline'],['pipeline']
Deployability,// Generated header in release (AOT) mode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp:23,release,release,23,interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,1,['release'],['release']
Deployability,"// Generates the 64-bits address loads as exemplified in section; // 4.5.1 in PPC64 ELF ABI. Note that the relocations need to; // apply to the low part of the instructions, so we have to update; // the offset according to the target endianness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:188,update,update,188,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp,1,['update'],['update']
Deployability,"// Generating Infer function definition for Edge Update function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GNN.cxx:49,Update,Update,49,tmva/sofie/src/RModel_GNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GNN.cxx,1,['Update'],['Update']
Deployability,"// Generating Infer function definition for Global Update function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GNN.cxx:51,Update,Update,51,tmva/sofie/src/RModel_GNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GNN.cxx,2,['Update'],['Update']
Deployability,"// Generating Infer function definition for Node Update function; // num_node_features is the output one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GraphIndependent.cxx:49,Update,Update,49,tmva/sofie/src/RModel_GraphIndependent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GraphIndependent.cxx,1,['Update'],['Update']
Deployability,"// Generating Infer function definition for Node Update function; // num_node_features is the output one; //block_size = num_nodes;; // there are 3 input tensors for node updates: {received edges, nodes, globals }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GNN.cxx:49,Update,Update,49,tmva/sofie/src/RModel_GNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/src/RModel_GNN.cxx,2,"['Update', 'update']","['Update', 'updates']"
Deployability,"// Generic configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/LinkDef1.h:11,configurat,configuration,11,graf3d/eve/inc/LinkDef1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/LinkDef1.h,1,['configurat'],['configuration']
Deployability,// Generic events generated by the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h:35,pipeline,pipeline,35,interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,1,['pipeline'],['pipeline']
Deployability,"// Generic test that an N-dimensional histogram with a certain axis; // configuration is binned correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:72,configurat,configuration,72,hist/histv7/test/binning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx,1,['configurat'],['configuration']
Deployability,"// Gentoo is weird and places its headers inside the GCC install,; // so if the first attempt to find the headers fails, try these patterns.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:57,install,install,57,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['install'],['install']
Deployability,// Gentoo-specific toolchain configurations are stored here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:29,configurat,configurations,29,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['configurat'],['configurations']
Deployability,// Get EFLAGS register. Only update chain when copyfrom is glued.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:29,update,update,29,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['update']
Deployability,// Get NZCV register. Only update chain when copyfrom is glued.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['update'],['update']
Deployability,"// Get blocks in RPO order for MSSA update, before changing the CFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['update']
Deployability,// Get build system configuration settings,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h:20,configurat,configuration,20,interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h,1,['configurat'],['configuration']
Deployability,"// Get fit range limits; /// Retrieve binning configuration with given name or default binning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsRealLValue.h:46,configurat,configuration,46,roofit/roofitcore/inc/RooAbsRealLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsRealLValue.h,1,['configurat'],['configuration']
Deployability,// Get mask/evl value handles for the current configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h:46,configurat,configuration,46,interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,1,['configurat'],['configuration']
Deployability,"// Get new bitpos, update byte count",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:19,update,update,19,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// Get parent of InstallPath and append ""share""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:17,Install,InstallPath,17,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,1,['Install'],['InstallPath']
Deployability,"// Get recursive last Def, assuming well formed MSSA and updated DT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:57,update,updated,57,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['update'],['updated']
Deployability,"// Get rid of our branches, note that this will also release; // any memory allocated by TBranchElement::SetAddress().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:53,release,release,53,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['release'],['release']
Deployability,// Get the call dbg.declare instruction we just created and update; // its DIExpression to add offset to base address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:60,update,update,60,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,"// Get the dependence distance, stride, type size in whether i is a write for; // the dependence between A and B. Returns a DepType, if we can prove there's; // no dependence or the analysis fails. Outlined to lambda to limit he scope; // of various temporary variables, like A/BPtr, StrideA/BPtr and others.; // Returns either the dependence result, if it could already be determined, or a; // tuple with (Distance, Stride, TypeSize, AIsWrite, BIsWrite).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:276,A/B,A/BPtr,276,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['A/B'],['A/BPtr']
Deployability,"// Get the initial 'level' of the function, or 0 if the function has been; // introduced afterwards.; // TODO: should we keep this updated?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MLInlineAdvisor.h:131,update,updated,131,interpreter/llvm-project/llvm/include/llvm/Analysis/MLInlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MLInlineAdvisor.h,1,['update'],['updated']
Deployability,"// Get the install location of cygwin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/cygpath.h:11,install,install,11,core/dictgen/res/cygpath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/cygpath.h,1,['install'],['install']
Deployability,// Get the offset of the stack slot for the EBP register... which is; // guaranteed to be the last slot by processFunctionBeforeFrameFinalized.; // Update the frame offset adjustment.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430FrameLowering.cpp:148,Update,Update,148,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430FrameLowering.cpp,1,['Update'],['Update']
Deployability,"// Get the offset of the stack slot for the FP register, which is; // guaranteed to be the last slot by processFunctionBeforeFrameFinalized.; // Update the frame offset adjustment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp:145,Update,Update,145,interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kFrameLowering.cpp,1,['Update'],['Update']
Deployability,// Get the parent scope to update the address ranges of the nested; // scope representing the inlined function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['update'],['update']
Deployability,// Get the register stride update opcode of a VLD/VST instruction that; // is otherwise equivalent to the given fixed stride updating instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['update'],['update']
Deployability,// Get the selector generation and update it to the current generation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:35,update,update,35,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['update']
Deployability,// Get the symbol table to update for this object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/IR/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Value.cpp,1,['update'],['update']
Deployability,"// Get the update level, if specified",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/DarwinAsmParser.cpp:11,update,update,11,interpreter/llvm-project/llvm/lib/MC/MCParser/DarwinAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/DarwinAsmParser.cpp,1,['update'],['update']
Deployability,// Get the updated binding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:11,update,updated,11,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['update'],['updated']
Deployability,// Get the weight and update the current BFI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,1,['update'],['update']
Deployability,// Get through the Instruction:; // 1. Update its type.; // 2. Replace the uses of Ext by Inst.; // 3. Extend each operand that needs to be extended.; // Remember the original type of the instruction before promotion.; // This is useful to know that the high bits are sign extended bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:39,Update,Update,39,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['Update'],['Update']
Deployability,"// Get updated information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:7,update,updated,7,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['update'],['updated']
Deployability,// Give a slight penalty for moving out of vector pipeline to FXU unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp:50,pipeline,pipeline,50,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,1,['pipeline'],['pipeline']
Deployability,// Give extra weight to what looks like a loop induction variable update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CalcSpillWeights.cpp:66,update,update,66,interpreter/llvm-project/llvm/lib/CodeGen/CalcSpillWeights.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CalcSpillWeights.cpp,1,['update'],['update']
Deployability,"// Give up if the calling conventions don't match. We could update the call,; // but it is probably not worth it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXX.cpp:60,update,update,60,interpreter/llvm-project/clang/lib/CodeGen/CGCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXX.cpp,1,['update'],['update']
Deployability,"// Given ZeroCmpOp = (A + B); // ZeroCmpOp < A && ZeroCmpOp != 0 --> (0-X) < Y iff; // ZeroCmpOp >= A || ZeroCmpOp == 0 --> (0-X) >= Y iff; // with X being the value (A/B) that is known to be non-zero,; // and Y being remaining value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:167,A/B,A/B,167,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['A/B'],['A/B']
Deployability,"// Given a set of entries to a single loop, create a single entry for that; // loop by creating a dispatch block for them, routing control flow using; // a helper variable. Also updates Blocks with any new blocks created, so; // that we properly track all the blocks in the region. But this does not update; // ReachabilityGraph; this will be updated in the caller of this function as; // needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixIrreducibleControlFlow.cpp:178,update,updates,178,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixIrreducibleControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixIrreducibleControlFlow.cpp,3,['update'],"['update', 'updated', 'updates']"
Deployability,"// Given an iterator (Iter) that points at an instruction with a ""Then""; // predicate, tries to create the largest block of continuous predicated; // instructions possible, and returns the VPT Block Mask of that block.; //; // This will try to perform some minor optimization in order to maximize the; // size of the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp:124,continuous,continuous,124,interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp,1,['continuous'],['continuous']
Deployability,"// Given: cmpxchg some_op iN* %addr, iN %desired, iN %new success_ord fail_ord; //; // The full expansion we produce is:; // [...]; // %aligned.addr = ...; // cmpxchg.start:; // %unreleasedload = @load.linked(%aligned.addr); // %unreleasedload.extract = extract value from %unreleasedload; // %should_store = icmp eq %unreleasedload.extract, %desired; // br i1 %should_store, label %cmpxchg.releasingstore,; // label %cmpxchg.nostore; // cmpxchg.releasingstore:; // fence?; // br label cmpxchg.trystore; // cmpxchg.trystore:; // %loaded.trystore = phi [%unreleasedload, %cmpxchg.releasingstore],; // [%releasedload, %cmpxchg.releasedload]; // %updated.new = insert %new into %loaded.trystore; // %stored = @store_conditional(%updated.new, %aligned.addr); // %success = icmp eq i32 %stored, 0; // br i1 %success, label %cmpxchg.success,; // label %cmpxchg.releasedload/%cmpxchg.failure; // cmpxchg.releasedload:; // %releasedload = @load.linked(%aligned.addr); // %releasedload.extract = extract value from %releasedload; // %should_store = icmp eq %releasedload.extract, %desired; // br i1 %should_store, label %cmpxchg.trystore,; // label %cmpxchg.failure; // cmpxchg.success:; // fence?; // br label %cmpxchg.end; // cmpxchg.nostore:; // %loaded.nostore = phi [%unreleasedload, %cmpxchg.start],; // [%releasedload,; // %cmpxchg.releasedload/%cmpxchg.trystore]; // @load_linked_fail_balance()?; // br label %cmpxchg.failure; // cmpxchg.failure:; // fence?; // br label %cmpxchg.end; // cmpxchg.end:; // %loaded.exit = phi [%loaded.nostore, %cmpxchg.failure],; // [%loaded.trystore, %cmpxchg.trystore]; // %success = phi i1 [true, %cmpxchg.success], [false, %cmpxchg.failure]; // %loaded = extract value from %loaded.exit; // %restmp = insertvalue { iN, i1 } undef, iN %loaded, 0; // %res = insertvalue { iN, i1 } %restmp, i1 %success, 1; // [...]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:602,release,releasedload,602,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,12,"['release', 'update']","['releasedload', 'updated']"
Deployability,"// Go ahead and update all uses to the duplicate, so that we can just; // use the inliner functionality when we're done hacking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:16,update,update,16,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,2,['update'],['update']
Deployability,// Go back and patch up all the Intervals -- the successors and predecessors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/IntervalPartition.cpp:15,patch,patch,15,interpreter/llvm-project/clang/lib/Analysis/IntervalPartition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/IntervalPartition.cpp,1,['patch'],['patch']
Deployability,// Go through all Outline Candidate Regions and update all BasicBlock; // information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:48,update,update,48,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['update'],['update']
Deployability,// Go through all the TokenLexers whose 'Tokens' pointer points in the; // buffer and update the pointers to the (potential) new buffer array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp:86,update,update,86,interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,1,['update'],['update']
Deployability,// Go through the analyzer configuration options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:27,configurat,configuration,27,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['configurat'],['configuration']
Deployability,// Go to previous non-trivial pipeline,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:30,pipeline,pipeline,30,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['pipeline'],['pipeline']
Deployability,// Grab a reference to the exit block in the pair so that we can update it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['update']
Deployability,// Grab everything that reaches PrologueMBB to update there liveness as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:47,update,update,47,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['update'],['update']
Deployability,"// Group irriducible terms that need to be (partially) integrated together",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:55,integrat,integrated,55,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Deployability,"// Group of contex-menu toggle objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggleGroup.h:24,toggle,toggle,24,core/gui/inc/TToggleGroup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggleGroup.h,1,['toggle'],['toggle']
Deployability,"// Grow the stack and update the stack pointer link, then determine the; // address of new allocated space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,1,['update'],['update']
Deployability,"// Guard intrinsics read all memory, but don't write any memory.; // Accordingly, don't update the generation but consume the last store (to; // avoid an incorrect DSE).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:88,update,update,88,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['update'],['update']
Deployability,"// HACK: Ignore retain-count issues on values accessed through ivars,; // because of cases like this:; // [_contentView retain];; // [_contentView removeFromSuperview];; // [self addSubview:_contentView]; // invalidates 'self'; // [_contentView release];",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:245,release,release,245,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,4,['release'],['release']
Deployability,// HIP runtime built by SPACK is installed to; // <rocm_root>/hip-<rocm_release_string>-<hash> directory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:33,install,installed,33,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,1,['install'],['installed']
Deployability,"// Hack: We must update *ResultType if available in order to set the; // bounds of arrays, e.g. in 'int ar[] = {1, 2, 3};'.; // Worst case: 'const int (&arref)[] = {1, 2, 3};'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['update'],['update']
Deployability,// Handle -cc1 integrated tools.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/driver.cpp:15,integrat,integrated,15,interpreter/llvm-project/clang/tools/driver/driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/driver.cpp,1,['integrat'],['integrated']
Deployability,// Handle STACKMAP and PATCHPOINT specially and then use the generic code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp:23,PATCH,PATCHPOINT,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp,1,['PATCH'],['PATCHPOINT']
Deployability,// Handle all use-after-releases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:24,release,releases,24,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['release'],['releases']
Deployability,// Handle edge transfer/update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp:24,update,update,24,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,1,['update'],['update']
Deployability,// Handle non-continuous numbers (to make test simplification easier).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:14,continuous,continuous,14,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['continuous'],['continuous']
Deployability,// Handle pipeline errors here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp:10,pipeline,pipeline,10,interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,1,['pipeline'],['pipeline']
Deployability,// Handle potential partial register updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp:37,update,updates,37,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,1,['update'],['updates']
Deployability,"// Handle special case of no integration with default algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:29,integrat,integration,29,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,// Handle symbol transfer/update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp:26,update,update,26,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,1,['update'],['update']
Deployability,// Handle the remaining sequence of branches. This function will update; // the work queue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,1,['update'],['update']
Deployability,// Handle this designated initializer. Field will be updated to; // the next field that we'll be initializing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:53,update,updated,53,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['update'],['updated']
Deployability,// Handle this designated initializer. elementIndex will be; // updated to be the next array element we'll initialize.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:64,update,updated,64,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['update'],['updated']
Deployability,"// Handle trivial case of no integration here explicitly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:29,integrat,integration,29,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Deployability,"// Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:21,integrat,integration,21,roofit/histfactory/src/ParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx,3,['integrat'],['integration']
Deployability,// Hardware AND patches applied,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:16,patch,patches,16,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['patch'],['patches']
Deployability,// Hardware OR patches applied,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:15,patch,patches,15,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['patch'],['patches']
Deployability,// Hardware patches applied,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:12,patch,patches,12,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['patch'],['patches']
Deployability,"// Hash a subtree with compress_subtree_wide(), and then condense the resulting; // list of chaining values down to a single parent node. Don't compress that; // last parent node, however. Instead, return its message bytes (the; // concatenated chaining values of its children). This is necessary when the; // first call to update() supplies a complete subtree, because the topmost; // parent node of that subtree could end up being the root. It's also necessary; // for extended output in the general case.; //; // As with compress_subtree_wide(), this function is not used on inputs of 1; // chunk or less. That's a different codepath.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c:324,update,update,324,interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,1,['update'],['update']
Deployability,"// Hash interface for generic data of type T; // Data should implement a \fn getHashCode and a \fn isEqual; // Currently getHashCode is non-virtual to avoid the overhead of calling vtable,; // i.e we explicitly calculate hash of derived class, assign to base class's; // HashCode. This also provides the flexibility for calculating the hash code; // incrementally(like rolling hash) during frame stack unwinding since unwinding; // only changes the leaf of frame stack. \fn isEqual is a virtual function,; // which will have perf overhead. In the future, if we redesign a better hash; // function, then we can just skip this or switch to non-virtual function(like; // just ignore comparison if hash conflicts probabilities is low)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.h:369,rolling,rolling,369,interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.h,1,['rolling'],['rolling']
Deployability,"// Helper class to call Update on all TFriendProxy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx:24,Update,Update,24,tree/treeplayer/src/TBranchProxyDirector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx,1,['Update'],['Update']
Deployability,"// Helper function that transforms CB (either an indirect-call instruction, or; // an invoke instruction , to a conditional call to F. This is like:; // if (Inst.CalledValue == F); // F(...);; // else; // Inst(...);; // end; // TotalCount is the profile count value that the instruction executes.; // Count is the profile count value that F is the target function.; // These two values are used to update the branch weight.; // If \p AttachProfToDirectCall is true, a prof metadata is attached to the; // new direct call to contain \p Count.; // Returns the promoted direct call instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation.h:398,update,update,398,interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation.h,1,['update'],['update']
Deployability,"// Helper function to create a new configuration that is just like the one; // associated to this integrator, but with a different summation rule.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:35,configurat,configuration,35,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,2,"['configurat', 'integrat']","['configuration', 'integrator']"
Deployability,// Helper function used to add CaseVal to the list of cases that generate; // Result. Returns the updated number of cases that generate this result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:98,update,updated,98,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['update'],['updated']
Deployability,"// Helper lambda for partially selecting I. Either returns the original; // instruction with an updated opcode, or a new instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:96,update,updated,96,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['update'],['updated']
Deployability,// Helper lambda that updates the changes to the size of some function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:22,update,updates,22,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['update'],['updates']
Deployability,"// Helper to push \p V to the worklist, after updating it to \p IV. Also; // prints a debug message with the updated value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp:109,update,updated,109,interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,1,['update'],['updated']
Deployability,"// Here comes stuff that we only do once the entire chain is loaded. Do *not*; // remove modules from this point. Various fields are updated during reading; // the AST block and removing the modules would result in dangling pointers.; // They are generally only incidentally dereferenced, ie. a binary search; // runs over `GlobalSLocEntryMap`, which could cause an invalid module to; // be dereferenced but it wouldn't actually be used.; // Load the AST blocks of all of the modules that we loaded. We can still; // hit errors parsing the ASTs at this point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:133,update,updated,133,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['updated']
Deployability,"// Here the EntrySample is of an inlined function, so we should not; // update the EntrySample in the map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp:72,update,update,72,interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profdata/llvm-profdata.cpp,1,['update'],['update']
Deployability,"// Here we add logical lines to the Instructions. Later on,; // the 'processLines()' function will move each created logical line; // to its enclosing logical scope, using the debug ranges information; // and they will be released when its scope parent is deleted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVBinaryReader.cpp:222,release,released,222,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVBinaryReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVBinaryReader.cpp,1,['release'],['released']
Deployability,"// Here we collect logical debug lines in CULines. Later on,; // the 'processLines()' function will move each created logical line; // to its enclosing logical scope, using the debug ranges information; // and they will be released when its scope parent is deleted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp:223,release,released,223,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,1,['release'],['released']
Deployability,"// Here we comply to ""PEP 587 – Python Initialization Configuration"" to avoid; // deprecation warnings at compile time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:54,Configurat,Configuration,54,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,1,['Configurat'],['Configuration']
Deployability,"// Here we patch the MEM operand from [base + %g0] into [base + 0]; // as memory operations with ASI tag stored in %asi register needs; // to use immediate offset. We need to do this because Reg addressing; // will be parsed as Reg+G0 initially.; // This allows forms such as `ldxa [%o0] %asi, %o0` to parse correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/AsmParser/SparcAsmParser.cpp:11,patch,patch,11,interpreter/llvm-project/llvm/lib/Target/Sparc/AsmParser/SparcAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/AsmParser/SparcAsmParser.cpp,1,['patch'],['patch']
Deployability,"// Here we swapped the assumption made for SExtIdx.; // I.e., we turn ldp I, Paired into ldp Paired, I.; // Update the index accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:108,Update,Update,108,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['Update'],['Update']
Deployability,"// Heuristic: try harder to form an LEA from ADD if the operands set flags.; // Unlike ADD, LEA does not affect flags, so we will be less likely to require; // duplicating flag-producing instructions later in the pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:213,pipeline,pipeline,213,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['pipeline'],['pipeline']
Deployability,"// Hexagon-specific MachineOperand target flags.; //; // When changing these, make sure to update; // getSerializableDirectMachineOperandTargetFlags and; // getSerializableBitmaskMachineOperandTargetFlags if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h:91,update,update,91,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h,1,['update'],['update']
Deployability,"// Histograms are named objects in a THashList.; // We must update the hashlist if we change the name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:60,update,update,60,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['update'],['update']
Deployability,"// Histograms are named objects in a THashList.; // We must update the hashlist if we change the name; // We protect this operation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:60,update,update,60,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['update'],['update']
Deployability,"// Honor -w: this disables all messages which are not Error/Fatal by; // default (disregarding attempts to upgrade severity from Warning to Error),; // as well as disabling all messages which are currently mapped to Warning; // (whether by default or downgraded from Error via e.g. -Wno-error or #pragma; // diagnostic.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp:107,upgrade,upgrade,107,interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,1,['upgrade'],['upgrade']
Deployability,"// How to redraw the NumberEntry without calling Update??; // Update kills the ""virtual"" painted box in Delayed draw mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:49,Update,Update,49,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,2,['Update'],['Update']
Deployability,"// However, we still need to update the register def-use information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp:29,update,update,29,interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsDelaySlotFiller.cpp,1,['update'],['update']
Deployability,// Hull shader: Input/Patch mapping table,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/DXContainer.cpp:22,Patch,Patch,22,interpreter/llvm-project/llvm/lib/Object/DXContainer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/DXContainer.cpp,1,['Patch'],['Patch']
Deployability,"// I have clones.; // I am about to delete the objects created by; // SetAddress() which we are sharing, so tell; // the clones to release their pointers to them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:131,release,release,131,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['release'],['release']
Deployability,"// ID 27 used to be for a list of replacement decls.; /// Record code for an update to a decl context's lookup table.; ///; /// In practice, this should only be used for the TU and namespaces.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:77,update,update,77,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['update'],['update']
Deployability,// ID 30 used to be a decl update record. These are now in the DECLTYPES; // block.; // ID 31 used to be a list of offsets to DECL_CXX_BASE_SPECIFIERS records.; // ID 32 used to be the code for \#pragma diagnostic mappings.; /// Record code for special CUDA declarations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:27,update,update,27,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['update'],['update']
Deployability,// INCLUDED BELOW #include <gsl/gsl_integration.h>; /* Workspace for adaptive integrators */; // WVE MOVED TO HEAD OF FILE; /* Definition of an integration rule */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:78,integrat,integrators,78,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],"['integration', 'integrators']"
Deployability,"// IR module verification is enabled by default in debug builds, and disabled; // by default in release builds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp:96,release,release,96,interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,2,['release'],['release']
Deployability,"// Identifiers present in both the module file and the importing; // instance are marked out-of-date so that they can be deserialized; // on next use via ASTReader::updateOutOfDateIdentifier().; // Identifiers present in the module file but not in the importing; // instance are ignored for now, preventing growth of the identifier; // table. They will be deserialized on first use via ASTReader::get().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:165,update,updateOutOfDateIdentifier,165,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['updateOutOfDateIdentifier']
Deployability,// Identifies the last user of a processor resource unit.; // This vector is updated on every instruction issued event.; // There is one entry for every processor resource unit declared by the; // processor model. An all_ones value is treated like an invalid instruction; // identifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:77,update,updated,77,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['update'],['updated']
Deployability,"// Identify S_ENDPGM instructions which may have to wait for outstanding VMEM; // stores. In this case it can be useful to send a message to explicitly; // release all VGPRs before the stores have completed, but it is only safe to; // do this if:; // * there are no outstanding scratch stores; // * we are not in Dynamic VGPR mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:156,release,release,156,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,1,['release'],['release']
Deployability,"// Identify physreg dependencies for UseMI, and update the live regunit; // tracking set when scanning instructions downwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:48,update,update,48,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['update'],['update']
Deployability,// If 'Reg' is one of the even / odd register pair and it's now changed; // (e.g. coalesced) into a different register. The other register of the; // pair allocation hint must be updated to reflect the relationship; // change.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp:179,update,updated,179,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp,1,['update'],['updated']
Deployability,"// If (E) is non-trivial, then add it to the current basic block, and; // update the statement map so that S refers to E. Returns a new variable; // that refers to E.; // If E is trivial returns E.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp:74,update,update,74,interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,1,['update'],['update']
Deployability,"// If --gcc-install-dir= is specified, skip filesystem detection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:12,install,install-dir,12,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['install'],['install-dir']
Deployability,// If -fno-integrated-as is used add -Q to the darwin assembler driver to make; // sure it runs its system assembler not clang's integrated assembler.; // Applicable to darwin11+ and Xcode 4+. darwin<10 lacked integrated-as.; // FIXME: at run-time detect assembler capabilities or rely on version; // information forwarded by -target-assembler-version.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:11,integrat,integrated-as,11,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,3,['integrat'],"['integrated', 'integrated-as']"
Deployability,"// If -print-pipeline-passes is requested, don't run the legacy pass manager.; // FIXME: when codegen is switched to use the new pass manager, it should also; // emit pass names here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:13,pipeline,pipeline-passes,13,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['pipeline'],['pipeline-passes']
Deployability,"// If ALR and BLR overlaps and end of BLR extends beyond end of ALR, e.g.; // A = or A, B; // ...; // B = A; // ...; // C = killed A; // ...; // = B; // Update uses of IntA of the specific Val# with IntB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:153,Update,Update,153,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['Update'],['Update']
Deployability,"// If Arg is a PHI, and one or more incoming values to the; // PHI are null, and the call is control-equivalent to the PHI, and there; // are no relevant side effects between the PHI and the call, and the call; // is not a release that doesn't have the clang.imprecise_release tag, the; // call could be pushed up to just those paths with non-null incoming; // values. For now, don't bother splitting critical edges for this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:223,release,release,223,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"// If BB is in a loop and Succ is outside of that loop, we may need to; // update LoopSimplify form and LCSSA form.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp:75,update,update,75,interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BasicBlockUtils.cpp,1,['update'],['update']
Deployability,"// If BB is the last block in the path, we can simply update the one case; // successor that will be reached.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:54,update,update,54,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['update'],['update']
Deployability,"// If BUI is a nullptr, then there's no batch update in progress.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:46,update,update,46,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['update'],['update']
Deployability,"// If C is updated, also create a proxy and update FAM inside the result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:11,update,updated,11,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If ConvertRHS is false, we want to leave the caller's RHS untouched. Sadly,; // we can't avoid *all* modifications at the moment, so we need some somewhere; // to put the updated value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:174,update,updated,174,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['update'],['updated']
Deployability,"// If CopyLeftBB is nullptr, it means every predecessor of MBB contains; // reverse copy, CopyMI can be removed trivially if only IntA/IntB is updated.; // If CopyLeftBB is not nullptr, move CopyMI from MBB to CopyLeftBB and; // update IntA/IntB.; //; // If CopyLeftBB is not nullptr, ensure CopyLeftBB has a single succ so; // MBB is hotter than CopyLeftBB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:143,update,updated,143,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If Cur was the last field in the list, we need to update MinSize.; // We can just use the last field's size because the list is in; // descending order of size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:53,update,update,53,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['update'],['update']
Deployability,"// If CyclesLeft is different than -1, then we don't need to; // update the list of users. We can just notify the user with; // the actual number of cycles left (which may be zero).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp,1,['update'],['update']
Deployability,"// If D is pseudo-strong, treat it like __unsafe_unretained here. This means; // that we omit the retain, and causes non-autoreleased return values to be; // immediately released.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:170,release,released,170,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['release'],['released']
Deployability,"// If DA is the first reached def, just update the RD's reached def; // to the DA's sibling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,1,['update'],['update']
Deployability,"// If EFLAGS are defined, it's as-if they were killed. We can stop; // scanning here.; //; // NB!!! Many instructions only modify some flags. LLVM currently; // models this as clobbering all flags, but if that ever changes; // this will need to be carefully updated to handle that more; // complex logic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:258,update,updated,258,interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,1,['update'],['updated']
Deployability,// If FC0.Latch and FC0.ExitingBlock are the same then we have already; // performed the updates above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:89,update,updates,89,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,2,['update'],['updates']
Deployability,"// If FromD has some updated flags after last import, apply it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:21,update,updated,21,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['update'],['updated']
Deployability,"// If GV is part of a comdat and is externally visible, update the comdat size; // and keep track of its comdat so that we don't internalize any of its members.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,1,['update'],['update']
Deployability,"// If GroupB is a load group, we have to compare AI against all; // members of GroupB because if any load within GroupB has a dependency; // on AI, we need to mark GroupB as complete and also release the; // store GroupA (if A belongs to one). The former prevents incorrect; // hoisting of load B above store A while the latter prevents incorrect; // sinking of store A below load B.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:192,release,release,192,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['release'],['release']
Deployability,"// If HazardRec is disabled, and each inst counts as one cycle, then; // advance CurCycle before ReleasePredecessors to avoid useless pushes to; // PendingQueue for schedulers that implement HasReadyFilter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:97,Release,ReleasePredecessors,97,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['Release'],['ReleasePredecessors']
Deployability,"// If ID > 0, MaxAlignment may now be overly conservative.; // If ID == 0, MaxAlignment will need to be updated separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:104,update,updated,104,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['update'],['updated']
Deployability,"// If ID's layout is known, then make the global constant. This serves as a; // useful assertion: we'll never use this variable to calculate ivar offsets,; // so if the runtime tries to patch it then we should crash.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:186,patch,patch,186,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['patch'],['patch']
Deployability,"// If LSR splits critical edge and phi node has other pending; // fixup operands, we need to update those pending fixups. Otherwise; // formulae will not be implemented completely and some instructions; // will not be eliminated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:93,update,update,93,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,"// If MBB was the target of a jump table, update jump tables to go to the; // fallthrough instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,1,['update'],['update']
Deployability,"// If MBBI is a return instruction, or is a tPOP followed by a return; // instruction in the successor BB, we may be able to directly restore; // LR in the PC.; // This is only possible with v5T ops (v4T can't change the Thumb bit via; // a POP PC instruction), and only if we do not need to emit any SP update.; // Otherwise, we need a temporary register to pop the value; // and copy that value into LR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp:304,update,update,304,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb1FrameLowering.cpp,1,['update'],['update']
Deployability,"// If MD overrides anything in this vftable, we need to update the; // entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp:56,update,update,56,interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,1,['update'],['update']
Deployability,"// If MI is marked as reading Reg, the partial register update is wanted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['update']
Deployability,"// If MemorySSA has determined that one of EarlierInst or LaterInst does not; // read/write memory, then we can safely return true here.; // FIXME: We could be more aggressive when checking doesNotAccessMemory(),; // onlyReadsMemory(), mayReadFromMemory(), and mayWriteToMemory() in this pass; // by also checking the MemorySSA MemoryAccess on the instruction. Initial; // experiments suggest this isn't worthwhile, at least for C/C++ code compiled; // with the default optimization pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:483,pipeline,pipeline,483,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['pipeline'],['pipeline']
Deployability,"// If N is a constant we could fold this into a fallthrough or unconditional; // branch. However that doesn't happen very often in normal code, because; // Instcombine/SimplifyCFG should have handled the available opportunities.; // If we did this folding here, it would be necessary to update the; // MachineBasicBlock CFG, which is awkward.; // Use SimplifySetCC to simplify SETCC's.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:287,update,update,287,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['update']
Deployability,"// If N is a constant we could fold this into a fallthrough or unconditional; // branch. However that doesn't happen very often in normal code, because; // Instcombine/SimplifyCFG should have handled the available opportunities.; // If we did this folding here, it would be necessary to update the; // MachineBasicBlock CFG, which is awkward.; // fold a brcond with a setcc condition into a BR_CC node if BR_CC is legal; // on the target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:287,update,update,287,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['update']
Deployability,"// If NewBB strictly dominates other blocks, then it is now the immediate; // dominator of NewBBSucc. Update the dominator tree as appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:102,Update,Update,102,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,1,['Update'],['Update']
Deployability,"// If OldSeq is not S_Use or OldSeq is S_Use and we are tracking an; // imprecise release, clear our reverse insertion points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:82,release,release,82,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['release'],['release']
Deployability,"// If Pred has unreachable predecessors, but has at least a Def, the; // incoming access can be the last Def in Pred, or it could have been; // optimized to LoE. After an update, though, the LoE may have been; // replaced by another access, so IncAcc may be any access.; // If Pred has unreachable predecessors and no Defs, incoming access; // should be LoE; However, after an update, it may be any access.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:171,update,update,171,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,2,['update'],['update']
Deployability,// If Reg is live-in then update debug info to track its copy in a vreg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:26,update,update,26,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"// If ReleaseAtCycles is not provided, default to one cycle; // per resource.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:6,Release,ReleaseAtCycles,6,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['Release'],['ReleaseAtCycles']
Deployability,"// If ReleaseAtCycles is provided, check consistency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:6,Release,ReleaseAtCycles,6,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['Release'],['ReleaseAtCycles']
Deployability,"// If SF is used, but the instruction doesn't update the SF, then we; // can't do the optimization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:46,update,update,46,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,2,['update'],['update']
Deployability,"// If SrcMI mask is full, no need to update MBMI and MEMI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:37,update,update,37,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['update'],['update']
Deployability,"// If StructBaseCurInfo has been updated this iteration then work on; // the first new entry added to it i.e. make sure that when multiple; // values are added to any of the lists, the first value added is; // being modified by the assignments below (not the last value; // added).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:33,update,updated,33,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['updated']
Deployability,"// If Sym is a symbol for an object with instance variables that; // must be released, remove these obligations when the object escapes; // unless via a call to a system function. System functions are; // very unlikely to release instance variables on objects passed to them,; // and are frequently called on 'self' in -dealloc (e.g., to remove; // observers) -- we want to avoid false negatives from escaping on; // them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:77,release,released,77,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,2,['release'],"['release', 'released']"
Deployability,"// If TIBB is in a loop and DestBB is outside of that loop, we may need; // to update LoopSimplify form and LCSSA form.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp:79,update,update,79,interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,1,['update'],['update']
Deployability,"// If UpdateExpr is 'x' updated with some `expr` not based on 'x',; // 'x' is simply atomically rewritten with 'expr'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:6,Update,UpdateExpr,6,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,2,"['Update', 'update']","['UpdateExpr', 'updated']"
Deployability,"// If User == nullptr, the Scalar remains as scalar in vectorized; // instructions or is used as extra arg. Generate ExtractElement instruction; // and update the record for this scalar in ExternallyUsedValues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:152,update,update,152,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['update'],['update']
Deployability,"// If _MSC_VER is defined, we must have SEH. Use it if it's available. It's way; // better than VEH. Vectored exception handling catches all exceptions happening; // on the thread with installed exception handlers, so it can interfere with; // internal exception handling of other libraries on that thread. SEH works; // exactly as you would expect normal exception handling to work: it only; // catches exceptions if they would bubble out from the stack frame with __try /; // __except.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp:185,install,installed,185,interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,1,['install'],['installed']
Deployability,"// If `patchable-function-entry` is set, PATCHABLE_FUNCTION_ENTER; // instructions are expanded to the specified number of NOPs. Otherwise,; // they are expanded to 36-byte XRay sleds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:7,patch,patchable-function-entry,7,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['patch'],['patchable-function-entry']
Deployability,"// If a LazyFunctionCreator is installed, use it to get/create the function.; // FIXME: Should we instead have a LazySymbolCreator callback?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp:31,install,installed,31,interpreter/llvm-project/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/MCJIT/MCJIT.cpp,1,['install'],['installed']
Deployability,"// If a candidate was found in this update, return CHANGED.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,3,['update'],['update']
Deployability,"// If a fragment is requested, update the expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:31,update,update,31,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['update'],['update']
Deployability,"// If a schedule is found, ensure non-pipelined instructions are in stage 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:38,pipeline,pipelined,38,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['pipeline'],['pipelined']
Deployability,"// If a user got removed after updating the current user, the next user to; // update will be moved to the current position, so we only need to; // increment the index if the number of users did not change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.cpp:79,update,update,79,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.cpp,1,['update'],['update']
Deployability,"// If all 7 bits are set, turn this into -1. If the number of bits grows,; // this must be updated. This is intended to provide some forward binary; // compatibility insurance for the meaning of 'fast' in case bits are added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/FMF.h:91,update,updated,91,interpreter/llvm-project/llvm/include/llvm/IR/FMF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/FMF.h,1,['update'],['updated']
Deployability,"// If all locations are valid, accumulate them into our list of; // MachineOperands. For any spilled locations, either update the indirectness; // register or apply the appropriate transformations in the DIExpression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:119,update,update,119,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['update'],['update']
Deployability,"// If allowed, upgrade public vcall visibility metadata to linkage unit; // visibility before whole program devirtualization in the optimizer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:15,upgrade,upgrade,15,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['upgrade'],['upgrade']
Deployability,"// If allowed, upgrade public vcall visibility to linkage unit visibility in; // the summaries before whole program devirtualization below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:15,upgrade,upgrade,15,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['upgrade'],['upgrade']
Deployability,"// If another instruction between Pred and PTest accesses flags, don't remove; // the ptest or update the earlier instruction to modify them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:95,update,update,95,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['update'],['update']
Deployability,"// If any argument copy elisions occurred and we have debug info, update the; // stale frame indices used in the dbg.declare variable info table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:66,update,update,66,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['update'],['update']
Deployability,"// If any instructions are present in the current block after; // MVE_MEMCPYLOOPINST or MVE_MEMSETLOOPINST, split the current block and; // move the instructions into the newly created exit block. If there are no; // instructions add an explicit branch to the FallThrough block and then; // split.; //; // The split is required for two reasons:; // 1) A terminator(t2WhileLoopStart) will be placed at that site.; // 2) Since a TPLoopBody will be added later, any phis in successive blocks; // need to be updated. splitAt() already handles this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:504,update,updated,504,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['update'],['updated']
Deployability,"// If any memory operand is updated, set memory references of; // this instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:28,update,updated,28,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['update'],['updated']
Deployability,"// If any of the PHIs in the successors of NewMBB reference values that; // now come from NewMBB, they need to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp:114,update,updated,114,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,1,['update'],['updated']
Deployability,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:85,integrat,integrated,85,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,3,['integrat'],"['integrated', 'integration']"
Deployability,"// If any updates are made, grabs its users to the worklist because; // their address spaces can also be possibly updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:10,update,updates,10,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,2,['update'],"['updated', 'updates']"
Deployability,"// If anything changed, install this as the new Tokens list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:24,install,install,24,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['install'],['install']
Deployability,"// If argument contains directory separator, treat it as a path to; // configuration file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:71,configurat,configuration,71,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['configurat'],['configuration']
Deployability,// If blocks in this exit loop were directly part of the original loop (as; // opposed to a child loop) update the map to point to this exit loop. This; // just updates a map and so the fact that the order is unstable is fine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:104,update,update,104,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,2,['update'],"['update', 'updates']"
Deployability,"// If both incoming blocks are one of the TrueB/FalseB/SplitB, then; // a MUX may be needed. Otherwise the PHI will need to be updated at; // no extra cost.; // Find the interesting PHI operands for further checks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:127,update,updated,127,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,1,['update'],['updated']
Deployability,"// If both sides are releases, choose the more conservative one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:21,release,releases,21,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['release'],['releases']
Deployability,"// If bottom up, the pointer is in an S_None state, clear the sequence; // progress since the sequence in the bottom up state finished; // suggesting a mismatch in between retains/releases. This is true for; // all three cases that we are handling here: S_Retain, S_Use, and; // S_CanRelease.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:180,release,releases,180,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['releases']
Deployability,"// If branch and commit are identical - e.g. ""v5-34-18"" - then we have; // a release build. Else specify the git hash this build was made from.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:77,release,release,77,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,2,['release'],['release']
Deployability,"// If cache doesn't have our configuration, recalculate here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,configurat,configuration,29,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['configurat'],['configuration']
Deployability,// If clause is update:; // x++;; // x--;; // ++x;; // --x;; // x binop= expr;; // x = x binop expr;; // x = expr binop x;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:16,update,update,16,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,"// If cling cannot find a name it should ask ROOT before it issues an error.; // If ROOT knows the name then it has to create a new variable with that name; // and type in dedicated for that namespace (eg. __ROOT_SpecialObjects).; // For example if the interpreter is looking for h in h-Draw(), this routine; // will create; // namespace __ROOT_SpecialObjects {; // THist* h = (THist*) the_address;; // }; //; // Later if h is called again it again won't be found by the standart lookup; // because it is in our hidden namespace (nobody should do using namespace; // __ROOT_SpecialObjects). It caches the variable declarations and their; // last address. If the newly found decl with the same name (h) has different; // address than the cached one it goes directly at the address and updates it.; //; // returns true when declaration is found and no error should be emitted.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:784,update,updates,784,core/metacling/src/TClingCallbacks.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx,1,['update'],['updates']
Deployability,"// If configuration files were used, print their paths.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:6,configurat,configuration,6,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['configurat'],['configuration']
Deployability,"// If cptr is nullptr, the cluster expired previously and was released by the I/O thread",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RClusterPool.cxx:62,release,released,62,tree/ntuple/v7/src/RClusterPool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RClusterPool.cxx,1,['release'],['released']
Deployability,"// If current error logging state is not the same as remote state; // update the remote state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:70,update,update,70,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['update'],['update']
Deployability,"// If denominator is an integral, make a clone with the integration range adjusted to; // the selected component of the normalization integral; // cout << ""NOW PROCESSING DENOMINATOR "" << den->ClassName() << ""::"" << den->GetName() << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:56,integrat,integration,56,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"// If destination is tied to either of the commuted source register, then; // it must be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:89,update,updated,89,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['update'],['updated']
Deployability,"// If distribution is binned and not open-ended override with bin integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:66,integrat,integrator,66,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['integrat'],['integrator']
Deployability,"// If elements picked from Va and Vb have all different (source) indexes; // (relative to the start of the argument), do a mux, and update the mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:132,update,update,132,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['update'],['update']
Deployability,"// If file name contains directory separator, treat it as a path to; // configuration file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp:72,configurat,configuration,72,interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,1,['configurat'],['configuration']
Deployability,"// If fixup is supposed to rewrite some operand in the phi; // that was just updated, it may be already moved to; // another phi node. Such fixup requires update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:77,update,updated,77,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If flag is true, integration limits are taken from definition in input function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h:20,integrat,integration,20,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.h,1,['integrat'],['integration']
Deployability,"// If in sequential (0-slave-PROOF) mode we do not have a packetizer; // so we also send the info to update the progress bar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:101,update,update,101,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['update'],['update']
Deployability,"// If in update mode, retrieve the existing dataset, if any",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:9,update,update,9,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['update'],['update']
Deployability,"// If input is integral, recreate integral but override integration range to be targetRangeName",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:56,integrat,integration,56,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"// If input is sum of integrals, recreate integral from first component of set, but override integration range to be targetRangeName",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:93,integrat,integration,93,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Deployability,"// If instruction I has debug info, then we should not update it.; // Also, if I has a null DebugLoc, then it is still potentially incorrect; // to propagate Load's DebugLoc because Load may not post-dominate I.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:55,update,update,55,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['update'],['update']
Deployability,// If instruction I needs to be guarded update the guarded region; // bounds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['update'],['update']
Deployability,"// If it cancelled out, drop the base register, otherwise update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['update']
Deployability,"// If it did invalidate those pointers, and NormalEntry was the same; // as NormalExit, go back and patch up the fixups.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp:100,patch,patch,100,interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,1,['patch'],['patch']
Deployability,"// If it is a preserving def, do not update the set of intervening defs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFLiveness.cpp:37,update,update,37,interpreter/llvm-project/llvm/lib/CodeGen/RDFLiveness.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFLiveness.cpp,1,['update'],['update']
Deployability,"// If it is not an induction phi, it must be an induction update; // binary operator with an induction phi user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['update'],['update']
Deployability,"// If it is not broken with the kept passes, it's possible that the prefix; // passes must be run before the kept passes to break it. If the program; // WORKS after the prefix passes, but then fails if running the prefix AND; // kept passes, we can update our bitcode file to include the result of the; // prefix passes, then discard the prefix passes.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp:249,update,update,249,interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp,1,['update'],['update']
Deployability,// If it is not first instruction in the chain then it uses previously; // cloned value. We should update it to use cloned value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:99,update,update,99,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['update'],['update']
Deployability,"// If it was an absolute-set instruction, the ""set"" part has been removed.; // ExtR will now be the register with the extended value, and since all; // users of Rd have been updated, all that needs to be done is to replace; // Rd with ExtR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:174,update,updated,174,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['update'],['updated']
Deployability,"// If it's a def, remember all operands that need to be updated.; // If ED is a def, and Diff is not 0, then all uses of the register Rd; // defined by ED must be in the form (Rd, imm), i.e. the immediate offset; // must follow the Rd in the operand list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:56,update,updated,56,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['update'],['updated']
Deployability,// If key exists update in place.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,"// If largest set of observables that can be integrated is empty set, problem was ill defined; // Postpone error messaging and handling to end of function, exit loop here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:45,integrat,integrated,45,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,"// If lastprivate variable is a loop control variable for loop-based; // directive, update its value before copyin back to original; // variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:84,update,update,84,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,"// If list proxy already exists update pointers from proxy; // cout << ""RooParamBinning::insertHook("" << this << "","" << GetName() << "") _lp at beginning = "" << _lp << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:32,update,update,32,roofit/roofitcore/src/RooParamBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx,1,['update'],['update']
Deployability,"// If load is not volatile and there are no uses of the loaded value (and; // the updated indexed value in case of indexed loads), change uses of the; // chain value into uses of the chain input (i.e. delete the dead load).; // TODO: Allow this for unordered atomics (see D66309)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:82,update,updated,82,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['updated']
Deployability,"// If machine instrs are no longer in two-address forms, update; // destination register as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:57,update,update,57,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['update'],['update']
Deployability,"// If main range has a hole and we are moving a subrange use across; // the hole updateRange() cannot properly handle it since it only; // gets the LiveRange and not the whole LiveInterval. As a result; // we may end up with a main range not covering all subranges.; // This is extremely rare case, so let's check and reconstruct the; // main range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:81,update,updateRange,81,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['update'],['updateRange']
Deployability,"// If more than one thread gets here, one will manage the update; // of g_iseed the other we go for at least one more round.; // This is not reproduceable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:58,update,update,58,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['update'],['update']
Deployability,"// If needed, install ROOT notebook files in the user's home directory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx:14,install,install,14,main/src/nbmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx,1,['install'],['install']
Deployability,"// If no caller callsites were already assigned to a clone of this; // function, we can simply assign this clone to the new func clone; // and update all callers to it, then skip to the next clone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:143,update,update,143,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['update']
Deployability,"// If no deployment target was specified on the command line, check for; // environment defines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:9,deploy,deployment,9,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,"// If no observables can be integrated analytically, return code 0 here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:28,integrat,integrated,28,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['integrat'],['integrated']
Deployability,"// If no patch string, minor is the last segment",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:9,patch,patch,9,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['patch'],['patch']
Deployability,"// If none of speculative promotions for NewExts is profitable, rollback; // and save the current extension (I) as the last profitable extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:64,rollback,rollback,64,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['rollback'],['rollback']
Deployability,"// If not at the top of the logical operator nest, update MCDC temp with the; // boolean result of the evaluated condition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp:51,update,update,51,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,1,['update'],['update']
Deployability,"// If not, we have to compute it. We can't use insert above and update; // because computing the cost may insert more things into the map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:64,update,update,64,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['update']
Deployability,"// If nothing was integrated analytically, swap back LVbranches for LVservers for subsequent numeric integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:18,integrat,integrated,18,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['integrat'],"['integrated', 'integration']"
Deployability,"// If nset is still nullptr, get the pointer to a copy of the last-used; // normalization set. It nset is not nullptr, check whether the copy of; // the last-used normalization set needs an update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:190,update,update,190,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['update'],['update']
Deployability,// If offset value is not known at this point then create patch for the; // reference value and write dummy value into the attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp:58,patch,patch,58,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DIEAttributeCloner.cpp,1,['patch'],['patch']
Deployability,"// If one or the other blocks were not in a loop, the new block is not; // either, and thus LI doesn't need to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:114,update,updated,114,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,3,['update'],['updated']
Deployability,"// If our super region is a field or element itself, walk up the region; // hierarchy to see if there is a default value installed in an ancestor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:121,install,installed,121,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['install'],['installed']
Deployability,// If previous sibling is remembered then update it`s SiblingIdx field.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp,1,['update'],['update']
Deployability,"// If printing assembly, use the recently updated ABI Flags information.; // If generating ELF, don't do anything (the .MIPS.abiflags section gets; // emitted later).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:42,update,updated,42,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,9,['update'],['updated']
Deployability,"// If printing assembly, use the recently updated abiflags information.; // If generating ELF, don't do anything (the .MIPS.abiflags section gets; // emitted at the end).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:42,update,updated,42,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,3,['update'],['updated']
Deployability,"// If remote install it from there",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:13,install,install,13,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['install'],['install']
Deployability,"// If resulting type is vec3, there is no point in trimming the; // load with updated offset, as the vec3 would most likely be widened to; // vec4 anyway during lowering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp:78,update,updated,78,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstCombineIntrinsic.cpp,1,['update'],['updated']
Deployability,"// If scheduling one of the node will cause a pipeline stall, delay it.; // If scheduling either one of the node will cause a pipeline stall, sort; // them according to their height.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:46,pipeline,pipeline,46,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,2,['pipeline'],['pipeline']
Deployability,"// If so, and the statement doesn't contain a label, then we do not need to; // generate actual code. This is safe because (1) the current point is; // unreachable, so we don't need to execute the code, and (2) we've already; // handled the statements which update internal data structures (like the; // local variable map) which could be used by subsequent statements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:258,update,update,258,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['update'],['update']
Deployability,"// If so, update each call site to call that implementation directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['update'],['update']
Deployability,"// If so, update the mask to reflect the inserted poison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['update'],['update']
Deployability,"// If so, update the mask to reflect the inserted value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['update'],['update']
Deployability,"// If splicing between two blocks within the same function, just update the; // parent pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['update'],['update']
Deployability,// If status of predecessor block has gone above current block; // we update current blocks status.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/EHUtils.h:70,update,update,70,interpreter/llvm-project/llvm/include/llvm/Analysis/EHUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/EHUtils.h,1,['update'],['update']
Deployability,"// If the #includes are out of order, we generate a single replacement fixing; // the entire block. Otherwise, no replacement is generated.; // In case Style.IncldueStyle.IncludeBlocks != IBS_Preserve, this check is not; // enough as additional newlines might be added or removed across #include; // blocks. This we handle below by generating the updated #include blocks and; // comparing it to the original.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:347,update,updated,347,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['update'],['updated']
Deployability,"// If the BB is updated, it may still has chance to be optimized.; // This usually happen at sink optimization.; // For example:; //; // bb0：; // %and = and i32 %a, 4; // %cmp = icmp eq i32 %and, 0; //; // If the %cmp sink to other BB, the %and will has chance to sink.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:16,update,updated,16,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['update'],['updated']
Deployability,"// If the CGSCC pass wasn't able to provide a valid updated SCC, the; // current SCC may simply need to be skipped if invalid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:52,update,updated,52,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,2,['update'],['updated']
Deployability,"// If the CGSCC pass wasn't able to provide a valid updated SCC,; // the current SCC may simply need to be skipped if invalid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:52,update,updated,52,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['updated']
Deployability,"// If the Cond.AddRecValue is PHI node, update Cond.NonPHIAddRecValue with; // value from backedge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,1,['update'],['update']
Deployability,"// If the DominatorTree was recalculated at some point, stop the batch; // updates. Full recalculations ignore batch updates and look at the actual; // CFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:75,update,updates,75,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,2,['update'],['updates']
Deployability,"// If the GCC installation we found is inside of the sysroot, we want to; // prefer libraries installed in the parent prefix of the GCC installation.; // It is important to *not* use these paths when the GCC installation is; // outside of the system root as that can pick up unintended libraries.; // This usually happens when there is an external cross compiler on the; // host system, and a more minimal sysroot available that is the target of; // the cross. Note that GCC does include some of these directories in some; // configurations but this seems somewhere between questionable and simply; // a bug.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:14,install,installation,14,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,5,"['configurat', 'install']","['configurations', 'installation', 'installed']"
Deployability,"// If the IR does not match the update,; // 1. In batch updates, this update is unnecessary.; // 2. When called by insertEdge*()/deleteEdge*(), this update is invalid.; // Edge does not exist in IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,4,['update'],"['update', 'updates']"
Deployability,"// If the ISel pipeline failed, do not bother running that pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp:15,pipeline,pipeline,15,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InstructionSelect.cpp,6,['pipeline'],['pipeline']
Deployability,"// If the ISel pipeline failed, do not bother running this pass.; // FIXME: Should this be here or in individual combiner passes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Combiner.cpp:15,pipeline,pipeline,15,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Combiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Combiner.cpp,1,['pipeline'],['pipeline']
Deployability,// If the LiveIn set has changed (expensive check) update it and return; // true.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:51,update,update,51,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['update'],['update']
Deployability,"// If the RHS covers any PHI locations that were tracked for debug-info, we; // must update tracking information to reflect the join.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:85,update,update,85,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,// If the SAE intrinsic doesn't use default rounding then we can't upgrade.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:67,upgrade,upgrade,67,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['upgrade'],['upgrade']
Deployability,"// If the SU for the instruction being updated has debug information; // related to the anti-dependency register, make sure to update that; // as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:39,update,updated,39,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If the SU for the instruction being updated has debug; // information related to the anti-dependency register, make; // sure to update that as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:39,update,updated,39,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If the assumption has been disproven, remove any results that may have; // been based on this assumption. Do this after the Entry updates above to; // avoid iterator invalidation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp:133,update,updates,133,interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp,1,['update'],['updates']
Deployability,"// If the base register overlaps a destination register, we can't; // merge the update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:80,update,update,80,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"// If the base register overlaps a source/destination register, we can't; // merge the update. This does not apply to tag store instructions which; // ignore the address part of the source register.; // This does not apply to STGPi as well, which does not have unpredictable; // behavior in this case unlike normal stores, and always performs writeback; // after reading the source register value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:87,update,update,87,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"// If the branch is a Bcc, then the CPSR should be set somewhere within the; // block. We need to determine the reaching definition of CPSR so that; // it can be marked as non-pipelineable, allowing the pipeliner to force; // it into stage 0 or give up if it cannot or will not do so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:176,pipeline,pipelineable,176,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,2,['pipeline'],"['pipelineable', 'pipeliner']"
Deployability,"// If the branch is at the end of its MBB and that has a fall-through block,; // direct the updated conditional branch to the fall-through block. Otherwise,; // split the MBB before the next instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:92,update,updated,92,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['update'],['updated']
Deployability,"// If the cache size isn't too large, do a lookup and if necessary default; // construct an entry. We can then return it to the caller for direct; // use. When they update the value, the cache will get automatically; // updated as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:165,update,update,165,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If the call graph hasn't been preserved, update it based on this; // function pass. This may also update the current SCC to point to; // a smaller, more refined SCC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:44,update,update,44,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,2,['update'],['update']
Deployability,"// If the callee has attribute pure, const, or warn_unused_result, warn; // about it. void foo() { strlen(""bar""); } should warn.; //; // Note: If new cases are added here, DiagnoseUnusedExprResult should be; // updated to match for QoI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:211,update,updated,211,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['update'],['updated']
Deployability,"// If the callee is known and can be used in IPO, we will update the; // state based on the callee state in updateImpl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,2,['update'],"['update', 'updateImpl']"
Deployability,// If the callee saved register is spilled to a register instead of the; // stack then the spill no longer uses the stack pointer.; // This can lead to two consequences:; // 1) We no longer need to update the stack because the function does not; // spill any callee saved registers to stack.; // 2) We have a situation where we still have to update the stack pointer; // even though some registers are spilled to other registers. In; // this case the current code moves the stack update to an incorrect; // position.; // In either case we should abort moving the stack update operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:198,update,update,198,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,4,['update'],['update']
Deployability,// If the callee saved register is spilled to another register abort the; // stack update movement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:83,update,update,83,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// If the canary values are still there",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:10,canary,canary,10,interpreter/cling/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp,1,['canary'],['canary']
Deployability,"// If the canonical template is local, we'll write out this specialization; // when we emit it.; // FIXME: We can do the same thing if there is any local declaration of; // the template, to avoid emitting an update record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp:208,update,update,208,interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp,1,['update'],['update']
Deployability,"// If the class is known to have a lifecycle with teardown that is; // separate from -dealloc, do not warn about missing releases. We; // suppress here (rather than not tracking for instance variables in; // such classes) because these classes are rare.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:121,release,releases,121,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['releases']
Deployability,"// If the code is doing reference counting over the parameter,; // it opens up an opportunity for safely calling a destructor function.; // TODO: We should still check for over-releases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp:177,release,releases,177,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,1,['release'],['releases']
Deployability,"// If the collection has not been updated since MinInterval, call update() and; // return true. Otherwise return false. If update returns an error, return the; // error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Debuginfod/Debuginfod.h:34,update,updated,34,interpreter/llvm-project/llvm/include/llvm/Debuginfod/Debuginfod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Debuginfod/Debuginfod.h,3,['update'],"['update', 'updated']"
Deployability,"// If the condition was updated, it's possible that the operands of the; // select were also updated (for example, EmitTest has a RAUW). Refresh; // the local references to the select operands in case they got stale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:24,update,updated,24,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['update'],['updated']
Deployability,"// If the context is a class, we might not have actually merged it yet, in; // the case where the definition comes from an update record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:123,update,update,123,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,"// If the context is a class, we update the name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:33,update,update,33,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['update'],['update']
Deployability,"// If the corresponding remainder node exists, update its users with; // (Dividend - (Quotient * Divisor).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:47,update,update,47,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,2,['update'],['update']
Deployability,"// If the current LocationContext has a parent, don't check for leaks.; // We will do that later.; // FIXME: we should instead check for imbalances of the retain/releases,; // and suggest annotations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:162,release,releases,162,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['release'],['releases']
Deployability,"// If the current element is wider than the widest element found, update the width",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFDisplay.cxx:66,update,update,66,tree/dataframe/src/RDFDisplay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFDisplay.cxx,2,['update'],['update']
Deployability,"// If the current instruction is a load, update MaxWidth to reflect the; // width of the loaded value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['update'],['update']
Deployability,"// If the current scope is in the 'LinkageNames' table, update its; // logical scope. For other scopes, always we will assume the default; // "".text"" section index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,1,['update'],['update']
Deployability,"// If the decl has an initializer, walk it with the potentially new; // scope we just installed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp:86,install,installed,86,interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,1,['install'],['installed']
Deployability,"// If the default statement is a target of the jump table, we evenly; // distribute the default probability to successors of CurMBB. Also; // update the probability on the edge from JumpMBB to Fallthrough.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,2,['update'],['update']
Deployability,"// If the deployment target is explicitly specified, print a diagnostic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:10,deploy,deployment,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,1,['deploy'],['deployment']
Deployability,"// If the destination type is an incomplete array type, update the; // type accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:56,update,update,56,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['update'],['update']
Deployability,"// If the edge from ToBBI.BB to Succ already exists, update the; // probability of this edge by adding NewProb to it. An example is shown; // below, in which A is ToBBI.BB and B is FromMBB. In this case we; // don't have to set C as A's successor as it already is. We only need to; // update the edge probability on A->C. Note that B will not be; // immediately removed from A's successors. It is possible that B->D is; // not removed either if D is a fallthrough of B. Later the edge A->D; // (generated here) and B->D will be combined into one edge. To maintain; // correct edge probability of this combined edge, we need to set the edge; // probability of A->B to zero, which is already done above. The edge; // probability on A->D is calculated by scaling the original probability; // on A->B by the probability of B->D.; //; // Before ifcvt: After ifcvt (assume B->D is kept):; //; // A A; // /| /|\; // / B / B|; // | /| | ||; // |/ | | |/; // C D C D; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp:53,update,update,53,interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,2,['update'],['update']
Deployability,"// If the equivalent Div node also exists, update its users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:43,update,update,43,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['update'],['update']
Deployability,"// If the exiting block is loop latch, the phi does not have the update at; // last iteration. In this case, update lcssa phi with value from backedge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp:65,update,update,65,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,2,['update'],['update']
Deployability,// If the file gets extracted we update the table with the new symbols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp:33,update,update,33,interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,2,['update'],['update']
Deployability,"// If the first instruction of Tail is predicated, we may have to update; // the IT instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2InstrInfo.cpp:66,update,update,66,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2InstrInfo.cpp,1,['update'],['update']
Deployability,"// If the first name isn't at the module layer, wrap the pipeline up; // automatically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:57,pipeline,pipeline,57,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,1,['pipeline'],['pipeline']
Deployability,"// If the first post-update expression is found, emit conditional; // block if it was requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:21,update,update,21,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,3,['update'],['update']
Deployability,// If the first store isn't right where we want SP then we can't fold the; // update in so create a normal arithmetic instruction instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:78,update,update,78,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,// If the frame index is not negative the callee saved info belongs to a; // stack object that is not a fixed stack object. We ignore non-fixed; // stack objects because we won't move the stack update pointer past them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:194,update,update,194,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,// If the frame index is not negative the callee saved info belongs to a; // stack object that is not a fixed stack object. We ignore non-fixed; // stack objects because we won't move the update of the stack pointer; // past them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:188,update,update,188,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// If the function ends with the exceptional terminator, the memory used; // by the coroutine frame can be released by stack unwinding; // automatically. So we can think the coro.begin doesn't escape if it; // exits the function by exceptional terminator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp:107,release,released,107,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroElide.cpp,1,['release'],['released']
Deployability,"// If the given branch is recognized as a foldable branch (i.e. conditional; // branch with constant condition), it will perform following analyses and; // transformation.; // 1) If the dead out-coming edge is a critical-edge, split it. Let; // R be the target of the dead out-coming edge.; // 1) Identify the set of dead blocks implied by the branch's dead outcoming; // edge. The result of this step will be {X| X is dominated by R}; // 2) Identify those blocks which haves at least one dead predecessor. The; // result of this step will be dominance-frontier(R).; // 3) Update the PHIs in DF(R) by replacing the operands corresponding to; // dead blocks with ""UndefVal"" in an hope these PHIs will optimized away.; //; // Return true iff *NEW* dead code are found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:573,Update,Update,573,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['Update'],['Update']
Deployability,"// If the information about this identifier is out of date, update it from; // the external source.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp:60,update,update,60,interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,1,['update'],['update']
Deployability,"// If the information about this identifier is out of date, update it from; // the external source.; // FIXME: getIdentifierInfo will probably do this for us once we update; // clang. If so, please remove this manual update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:60,update,update,60,interpreter/cling/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp,3,['update'],['update']
Deployability,"// If the information about this identifier is out of date, update it from; // the external source.; // We have to treat __VA_ARGS__ in a special way, since it gets; // serialized with isPoisoned = true, but our preprocessor may have; // unpoisoned it if we're defining a C99 macro.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp:60,update,update,60,interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,1,['update'],['update']
Deployability,"// If the inlined instruction has no line number, or if inline info; // is not being generated, make it look as if it originates from the call; // location. This is important for ((__always_inline, __nodebug__)); // functions which must use caller location for all instructions in their; // function body.; // Don't update static allocas, as they may get moved later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:316,update,update,316,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['update'],['update']
Deployability,"// If the input has been truncated, try to integrate that trunc into the; // scatter instruction (we don't care about alignment here)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp:43,integrat,integrate,43,interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,1,['integrat'],['integrate']
Deployability,"// If the input load is an extending load, it will be an i32 -> i64; // extending load and isValidSplatLoad() will update NewOpcode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:115,update,update,115,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['update'],['update']
Deployability,"// If the install base itself looks like a mingw sysroot, we'll use that; // - don't use any potentially unrelated gcc to influence what triple to use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MinGW.cpp:10,install,install,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/MinGW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MinGW.cpp,1,['install'],['install']
Deployability,"// If the install base of Clang seems to have mingw sysroot files directly; // in the toplevel include and lib directories, use this as base instead of; // looking for a triple prefixed GCC in the path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MinGW.cpp:10,install,install,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/MinGW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MinGW.cpp,1,['install'],['install']
Deployability,"// If the instruction has a non-zero latency dependence with an instruction in; // the current packet, then it should not be scheduled yet. The case occurs; // when the dependent instruction is scheduled in a new packet, so the; // scheduler updates the current cycle and pending instructions become; // available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:242,update,updates,242,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,1,['update'],['updates']
Deployability,"// If the interest box is empty the interest is ALWAYS updated; // See TGLCamera::OfInterest() comment on bootstrapping",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:55,update,updated,55,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['update'],['updated']
Deployability,"// If the invalid specifier is a multibyte UTF-8 string, return the; // total length accordingly so that the conversion specifier can be; // properly updated to reflect a complete UTF-8 specifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/FormatString.cpp:150,update,updated,150,interpreter/llvm-project/clang/lib/AST/FormatString.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/FormatString.cpp,1,['update'],['updated']
Deployability,"// If the ivar belongs to a property that must not be released directly; // in dealloc, emit a warning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:54,release,released,54,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['released']
Deployability,"// If the last N_OSO object file wasn't found, CurrentDebugMapObject will be; // null. Do not update anything until we find the next valid N_OSO entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/MachODebugMapParser.cpp:94,update,update,94,interpreter/llvm-project/llvm/tools/dsymutil/MachODebugMapParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/MachODebugMapParser.cpp,1,['update'],['update']
Deployability,"// If the latency is 0 and there is a data dependence between this; // instruction and any instruction in the current packet, we disregard any; // potential stalls due to the instructions in the previous packet. Most of; // the instruction pairs that can go together in the same packet have 0; // latency between them. The exceptions are; // 1. NewValueJumps as they're generated much later and the latencies can't; // be changed at that point.; // 2. .cur instructions, if its consumer has a 0 latency successor (such as; // .new). In this case, the latency between .cur and the consumer stays; // non-zero even though we can have both .cur and .new in the same packet.; // Changing the latency to 0 is not an option as it causes software pipeliner; // to not pipeline in some cases.; // For Example:; // {; // I1: v6.cur = vmem(r0++#1); // I2: v7 = valign(v6,v4,r2); // I3: vmem(r5++#1) = v7.new; // }; // Here I2 and I3 has 0 cycle latency, but I1 and I2 has 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:740,pipeline,pipeliner,740,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,2,['pipeline'],"['pipeline', 'pipeliner']"
Deployability,"// If the llvm.linker.options named metadata exists, we assume that the; // bitcode reader has upgraded the module flag. Otherwise the flag might; // have been created by a client directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:95,upgrade,upgraded,95,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['upgrade'],['upgraded']
Deployability,"// If the load does a pre/post increment, then insert a MOV after as; // well to update the real base register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp:81,update,update,81,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FalkorHWPFFix.cpp,1,['update'],['update']
Deployability,"// If the load/store is the first instruction in the block, there's obviously; // not any matching update. Ditto if the memory offset isn't zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:99,update,update,99,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"// If the loop size is not a multiple of 32, split off one 16-byte store at; // the end to fold BaseReg update into.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:104,update,update,104,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,"// If the loop was deleted, release all the loop passes. This frees up; // some memory, and avoids trouble with the pass manager trying to call; // verifyAnalysis on them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp:28,release,release,28,interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp,1,['release'],['release']
Deployability,"// If the member to remove happens to be the last one, update the; // LastM indicator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp:55,update,update,55,interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,1,['update'],['update']
Deployability,"// If the memory operand has ordering side effects, we can't move the; // instruction. Such an instruction is technically an invariant load,; // but the caller code would need updated to expect that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp:176,update,updated,176,interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,1,['update'],['updated']
Deployability,"// If the module was compiled with -fpatchable-function-entry, ensure; // we use the same patchable-function-prefix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ModuleUtils.cpp:90,patch,patchable-function-prefix,90,interpreter/llvm-project/llvm/lib/Transforms/Utils/ModuleUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ModuleUtils.cpp,1,['patch'],['patchable-function-prefix']
Deployability,"// If the next pointer is behind, update it to the next symbol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/SymbolSize.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Object/SymbolSize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/SymbolSize.cpp,1,['update'],['update']
Deployability,"// If the node doesn't already exist, we updated it. Inform listeners.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:41,update,updated,41,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['update'],['updated']
Deployability,"// If the node had chain/glue results, update our notion of the current; // chain and glue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:39,update,update,39,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"// If the node has been deleted by recursive CSE updates when updating; // another node, then just skip this entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:49,update,updates,49,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['update'],['updates']
Deployability,"// If the normal destination of the invoke or the parent block of the call; // site is unreachable-terminated, there is little point in inlining this; // unless there is literally zero cost.; // FIXME: Note that it is possible that an unreachable-terminated block has a; // hot entry. For example, in below scenario inlining hot_call_X() may be; // beneficial :; // main() {; // hot_call_1();; // ...; // hot_call_N(); // exit(0);; // }; // For now, we are not handling this corner case here as it is rare in real; // code. In future, we should elaborate this based on BPI and BFI in more; // general threshold adjusting heuristics in updateThreshold().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:635,update,updateThreshold,635,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['update'],['updateThreshold']
Deployability,"// If the object being released is in static or stack storage, we know it's; // not being managed by ObjC reference counting, so we can delete pairs; // regardless of what possible decrements or uses lie between them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:23,release,released,23,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['released']
Deployability,"// If the object is valid, then the normal Python behavior is to allow __len__; // to determine truth. However, that function is defined in typeobject.c and only; // installed if tp_as_number exists w/o the nb_nonzero/nb_bool slot filled in, so; // it can not be called directly. Instead, since we're only ever dealing with; // CPPInstance derived objects, ignore length from sequence or mapping and call; // the __len__ method, if any, directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:166,install,installed,166,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,1,['install'],['installed']
Deployability,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:52,integrat,integration,52,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,2,['integrat'],['integration']
Deployability,"// If the old cmp chain was the function entry, we need to update the function; // entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergeICmps.cpp:59,update,update,59,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergeICmps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergeICmps.cpp,1,['update'],['update']
Deployability,"// If the old declaration was found in an inline namespace and the new; // declaration was qualified, update the DeclContext to match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:102,update,update,102,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['update'],['update']
Deployability,"// If the old instruction is debug value tracked, an update is required.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:53,update,update,53,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['update'],['update']
Deployability,// If the operation was not aborted then update the object offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// If the option is not specified, the default behavior about whether; // counter promotion is done depends on how instrumentaiton lowering; // pipeline is setup, i.e., the default value of true of this option; // does not mean the promotion will be done by default. Explicitly; // setting this option can override the default behavior.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:144,pipeline,pipeline,144,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['pipeline'],['pipeline']
Deployability,"// If the original WaterList entry was ""new water"" on this iteration,; // propagate that to the new island. This is just keeping NewWaterList; // updated to match the WaterList, which will be updated below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:146,update,updated,146,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,6,['update'],['updated']
Deployability,"// If the original loop had exit blocks, walk up through the outer most loop; // of those exit blocks to update LCSSA and form updated dedicated exits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:105,update,update,105,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,2,['update'],"['update', 'updated']"
Deployability,"// If the output streamer does not have mature MC support or the integrated; // assembler has been disabled or not required, just emit the blob textually.; // Otherwise parse the asm and emit it via MC support.; // This is useful in case the asm parser doesn't handle something but the; // system assembler does.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:65,integrat,integrated,65,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp,1,['integrat'],['integrated']
Deployability,"// If the parameter's type is not dependent, update it to match the type; // in the pattern. They can differ in top-level cv-qualifiers, and we want; // the pattern's type here. If the type is dependent, they can't differ,; // per core issue 1668. Substitute into the type from the pattern, in case; // it's instantiation-dependent.; // FIXME: Updating the type to work around this is at best fragile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:45,update,update,45,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['update'],['update']
Deployability,"// If the patch point is at the first word, PC is pointing at the; // next word.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kMCCodeEmitter.cpp:10,patch,patch,10,interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kMCCodeEmitter.cpp,1,['patch'],['patch']
Deployability,// If the pipeline just consists of the word 'default' just replace the AA; // manager with our default one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:10,pipeline,pipeline,10,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,1,['pipeline'],['pipeline']
Deployability,"// If the preprocessor has callbacks installed, notify them of the #line; // change. This is used so that the line marker comes out in -E mode for; // example.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp:37,install,installed,37,interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,1,['install'],['installed']
Deployability,"// If the prior block falls through into us, turn it into an; // explicit branch to us to make updates simpler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp:95,update,updates,95,interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,1,['update'],['updates']
Deployability,"// If the release does not have a reference to the retain as well,; // something happened which is unaccounted for. Do not do anything.; //; // This can happen if we catch an additive overflow during path count; // merging.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:10,release,release,10,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"// If the result is N, the sub-method updated N in place. Tell the legalizer; // core about this to re-analyze.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:38,update,updated,38,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,1,['update'],['updated']
Deployability,"// If the result is N, the sub-method updated N in place. Tell the legalizer; // core about this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:38,update,updated,38,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,6,['update'],['updated']
Deployability,"// If the result is dead, update LV.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp:26,update,update,26,interpreter/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PHIElimination.cpp,1,['update'],['update']
Deployability,"// If the retain does not have a reference to the release as well,; // something happened which is unaccounted for. Do not do anything.; //; // This can happen if we catch an additive overflow during path count; // merging.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:50,release,release,50,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,"// If the root changed (e.g. it was a dead load, update the root).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:49,update,update,49,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,2,['update'],['update']
Deployability,"// If the root node defines glue, we need to update it to the glue result.; // TODO: This never happens in our tests and I think it can be removed /; // replaced with an assert, but if we do it this the way the change is; // NFC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:45,update,update,45,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"// If the scope is the CU, do not update the ranges set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVELFReader.cpp,2,['update'],['update']
Deployability,"// If the stored value and the address of the second instruction is; // the same, it needs to be using the updated register and therefore; // it must not be folded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:107,update,updated,107,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['updated']
Deployability,"// If the style inherits the parent configuration it is a command line; // configuration, which wants to inherit, so we have to skip the check of the; // StyleName.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:36,configurat,configuration,36,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,2,['configurat'],['configuration']
Deployability,"// If the symbol extends beyond the split, update the size to be within; // the new block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp:43,update,update,43,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/JITLink.cpp,1,['update'],['update']
Deployability,"// If the symbol is weak, it might be overridden by a symbol in another; // file. The relocation has to point to the symbol so that the linker; // can update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/ELFObjectWriter.cpp:151,update,update,151,interpreter/llvm-project/llvm/lib/MC/ELFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/ELFObjectWriter.cpp,1,['update'],['update']
Deployability,"// If the target doesn't support this, we have to spill the input vector; // to a temporary stack slot, update the element, then reload it. This is; // badness. We could also load the value into a vector register (either; // with a ""move to register"" or ""extload into register"" instruction, then; // permute it into place, if the idx is a constant and if the idx is; // supported by the target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:104,update,update,104,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['update'],['update']
Deployability,"// If the target is a loop to itself, then the terminator of the split; // block (BodyBlock) needs to be updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp:105,update,updated,105,interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,1,['update'],['updated']
Deployability,"// If the target requires the counter value to be updated in the loop,; // insert a phi to hold the value. The intended purpose is for use by; // loop_decrement_reg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/HardwareLoops.cpp:50,update,updated,50,interpreter/llvm-project/llvm/lib/CodeGen/HardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/HardwareLoops.cpp,1,['update'],['updated']
Deployability,"// If the template argument list is owned by the function template; // specialization, release it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:87,release,release,87,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['release'],['release']
Deployability,"// If the top of the logical operator nest, update the MCDC bitmap for the; // ConditionalOperator prior to visiting its LHS and RHS blocks, since they; // may also contain a boolean expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:44,update,update,44,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,2,['update'],['update']
Deployability,"// If the top of the logical operator nest, update the MCDC bitmap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:44,update,update,44,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,4,['update'],['update']
Deployability,"// If the translation unit has an anonymous namespace, and we don't already; // have an update block for it, write it as an update block.; // FIXME: Why do we not do this if there's already an update block?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:88,update,update,88,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,3,['update'],['update']
Deployability,"// If the true/false operands are swapped and the conditions are compares; // with inverted predicates, the selects are equal:; // select (icmp Pred, X, Y), A, B <--> select (icmp InvPred, X, Y), B, A; //; // This also handles patterns with a double-negation in the sense of not +; // inverse, because we looked through a 'not' in the matching function and; // swapped A/B:; // select (cmp Pred, X, Y), A, B <--> select (not (cmp InvPred, X, Y)), B, A; //; // This intentionally does NOT handle patterns with a double-negation in; // the sense of not + not, because doing so could result in values; // comparing; // as equal that hash differently in the min/max cases like:; // select (cmp slt, X, Y), X, Y <--> select (not (not (cmp slt, X, Y))), X, Y; // ^ hashes as min ^ would not hash as min; // In the context of the EarlyCSE pass, however, such cases never reach; // this code, as we simplify the double-negation before hashing the second; // select (and so still succeed at CSEing them).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:369,A/B,A/B,369,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['A/B'],['A/B']
Deployability,"// If the truncate is free for the given types, return false. Replacing a; // free truncate with an induction variable would add an induction variable; // update instruction to each iteration of the loop. We exclude from this; // check the primary induction variable since it will need an update; // instruction regardless.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:155,update,update,155,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,2,['update'],['update']
Deployability,"// If the type and the type-as-written differ, we may need to update; // the type-as-written too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:62,update,update,62,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['update'],['update']
Deployability,"// If the type of the GlobalValue::GUID changes, then we need to update; // the reader and the writer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/MemProf.h:65,update,update,65,interpreter/llvm-project/llvm/include/llvm/ProfileData/MemProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/MemProf.h,1,['update'],['update']
Deployability,"// If the update doesn't appear in the CFG, it means that; // either the change isn't made or relevant operations; // result in a no-op.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomTreeUpdater.cpp,1,['update'],['update']
Deployability,"// If the update is using the actual CFG, BUI is null. If it's using a view,; // BUI is non-null and the PreCFGView is used. When calculating from; // scratch, make the PreViewCFG equal to the PostCFGView, so Post is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:10,update,update,10,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['update'],['update']
Deployability,"// If the updated SCC was the one containing the deleted function, clear it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:10,update,updated,10,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['update'],['updated']
Deployability,"// If the virtual SrcReg is completely eliminated, update all DBG_VALUEs; // to describe DstReg instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:51,update,update,51,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,"// If there are any PHI nodes in DestBB, we need to update them so that they; // merge incoming values from NewBB instead of from TIBB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,1,['update'],['update']
Deployability,"// If there are any explicit spill slots passed to the statepoint, record; // them, but otherwise do not do anything special. These are user provided; // allocas and give control over placement to the consumer. In this case,; // it is the contents of the slot which may get updated, not the pointer to; // the alloca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:274,update,updated,274,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['update'],['updated']
Deployability,"// If there are any other edges from TIBB to DestBB, update those to go; // through the split block, making those edges non-critical as well (and; // reducing the number of phi entries in the DestBB if relevant).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp:53,update,update,53,interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,1,['update'],['update']
Deployability,"// If there are glue operands involved, N is now the bottom-most node; // of the sequence of nodes that are glued together.; // Update the SUnit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:128,Update,Update,128,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,1,['Update'],['Update']
Deployability,"// If there are interfering Uses (i.e. their defining access is in the; // loop), or ordered loads (stored as Defs!), don't move this store.; // Could do better here, but this is conservatively correct.; // TODO: Cache set of Uses on the first walk in runOnLoop, update when; // moving accesses. Can also extend to dominating uses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp:263,update,update,263,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,1,['update'],['update']
Deployability,"// If there are no places where we have to save LR, then note that we don't; // have to update the stack. Otherwise, give every candidate the default; // call type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:88,update,update,88,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['update'],['update']
Deployability,"// If there are no places where we have to save LR, then note that we; // don't have to update the stack. Otherwise, give every candidate the; // default call type, as long as it's safe to do so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:88,update,update,88,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['update'],['update']
Deployability,"// If there are two instructions in HoistPt to be hoisted in place:; // update Repl to be the first one, such that we can rename the uses; // of the second based on the first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:72,update,update,72,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['update'],['update']
Deployability,"// If there is *any* declaration of the entity that's not from an AST file,; // we can skip writing the update record. We make sure that isUsed() triggers; // completion of the redeclaration chain of the entity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:104,update,update,104,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// If there is a pending allocation from the same reservation right before; // this block, store it's index in PendingMem, to be able to update the; // pending region if part of this block is allocated, rather than having to; // create a new one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:137,update,update,137,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,1,['update'],['update']
Deployability,"// If there is a single SP update, insert it before the ret and we're done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['update']
Deployability,"// If there is already an edge between these nodes, simply update it and; // return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:59,update,update,59,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['update']
Deployability,"// If there is an epilogue which must run, there's no edge from the; // middle block to exit blocks and thus no need to update the immediate; // dominator of the exit blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:120,update,update,120,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,4,['update'],['update']
Deployability,"// If there is explict option disable integratedAS, we can't use it for; // inlineasm either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LLVMTargetMachine.cpp:38,integrat,integratedAS,38,interpreter/llvm-project/llvm/lib/CodeGen/LLVMTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LLVMTargetMachine.cpp,1,['integrat'],['integratedAS']
Deployability,"// If there is no debug location, we do not have to rewrite this; // MDNode. This loop also initializes DILocationReachable, later; // needed by updateLoopMetadataDebugLocationsImpl; the use of; // count_if avoids an early exit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:145,update,updateLoopMetadataDebugLocationsImpl,145,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['update'],['updateLoopMetadataDebugLocationsImpl']
Deployability,"// If there is only one call of the function, and it has internal linkage,; // the cost of inlining it drops dramatically. It may seem odd to update; // Cost in updateThreshold, but the bonus depends on the logic in this method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,2,['update'],"['update', 'updateThreshold']"
Deployability,"// If there is overlap between the found cluster and the authorized range; // update the cache data members with the information about the current cluster.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:78,update,update,78,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['update'],['update']
Deployability,"// If there was a PHINode with an incoming block outside the region,; // make sure is correctly updated in the newly split block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/IROutliner.cpp:96,update,updated,96,interpreter/llvm-project/llvm/lib/Transforms/IPO/IROutliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/IROutliner.cpp,1,['update'],['updated']
Deployability,"// If there was a local def before us, we must have the same effect it; // did. Because every may-def is the same, any phis/etc we would create, it; // would also have created. If there was no local def before us, we; // performed a global update, and have to search all successors and make; // sure we update the first def in each of them (following all paths until; // we hit the first def along each path). This may also insert phi nodes.; // TODO: There are other cases we can skip this work, such as when we have a; // single successor, and only used a straight line of single pred blocks; // backwards to find the def. To make that work, we'd have to track whether; // getDefRecursive only ever used the single predecessor case. These types; // of paths also only exist in between CFG simplifications.; // If this is the first def in the block and this insert is in an arbitrary; // place, compute IDF and place phis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:240,update,update,240,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,2,['update'],['update']
Deployability,"// If there was an explicit dso_local, update GV. In the absence of an explicit; // dso_local we keep the default value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:39,update,update,39,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// If there were any uses of instructions in the duplicated block outside the; // loop, update them, inserting PHI nodes as required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp:88,update,update,88,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp,1,['update'],['update']
Deployability,"// If there were values defined in BB that are used outside the block, then we; // now have to update all uses of the value to use either the original value,; // the cloned value, or some PHI derived value. This can require arbitrary; // PHI insertion, of which we are prepared to do, clean these up now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:95,update,update,95,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,"// If there were values defined in BB that are used outside the funclet,; // then we now have to update all uses of the value to use either the; // original value, the cloned value, or some PHI derived value. This can; // require arbitrary PHI insertion, of which we are prepared to do, clean; // these up now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp:97,update,update,97,interpreter/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WinEHPrepare.cpp,1,['update'],['update']
Deployability,"// If there's no definition yet, then DC's definition is added by an update; // record, but we've not yet loaded that update record. In this case, we; // commit to DC being the canonical definition now, and will fix this when; // we load the update record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:69,update,update,69,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,3,['update'],['update']
Deployability,"// If this BB loops back to itself, conservatively avoid narrowing the; // first instruction that does partial flag update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:116,update,update,116,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,2,['update'],['update']
Deployability,"// If this SUnit uses a reserved or unbuffered resource, mark it as such.; //; // Reserved resources block an instruction from issuing and stall the; // entire pipeline. These are identified by BufferSize=0.; //; // Unbuffered resources prevent execution of subsequent instructions that; // require the same resources. This is used for in-order execution pipelines; // within an out-of-order core. These are identified by BufferSize=1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:160,pipeline,pipeline,160,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"// If this abbrevation still has a fixed byte size, then update the; // FixedAttributeSize as needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp:57,update,update,57,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp,1,['update'],['update']
Deployability,"// If this basic block is ONLY a compare and a branch, and if a predecessor; // branches to us and our successor, fold the comparison into the; // predecessor and use logical operations to update the incoming value; // for PHI nodes in common successor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:189,update,update,189,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['update'],['update']
Deployability,"// If this block has already been visited through a flow graph edge,; // then the instructions have already been processed. Any updates to; // the cells would now only happen through visitUsesOf...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp:128,update,updates,128,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,1,['update'],['updates']
Deployability,"// If this declaration injected a name into a context different from its; // lexical context, and that context is an imported namespace, we need to; // update its visible declarations to include this name.; //; // This happens when we instantiate a class with a friend declaration or a; // function with a local extern declaration, for instance.; //; // FIXME: Can we handle this in AddedVisibleDecl instead?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp:152,update,update,152,interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp,1,['update'],['update']
Deployability,"// If this element is in range, update our magic bitvector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:32,update,update,32,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['update'],['update']
Deployability,"// If this field is set, it has the same effect of specifying an AA pipeline; // identified by the string. Only works with the new pass manager, in; // conjunction OptPipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:68,pipeline,pipeline,68,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,1,['pipeline'],['pipeline']
Deployability,"// If this instruction can be simplified after the operands are updated,; // just use the simplified value instead. This frequently happens due to; // phi translation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:64,update,updated,64,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['updated']
Deployability,"// If this instruction defines the VPR, update the predicate for the; // proceeding instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['update'],['update']
Deployability,"// If this is a development, non-installed, clang, libcxx will; // not be found at ../include/c++ but it likely to be found at; // one of the following two locations:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:33,install,installed,33,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['install'],['installed']
Deployability,"// If this is a leader that is always available, and it's a; // constant or has no equivalences, just replace everything with; // it. We then update the congruence class with whatever members; // are left.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['update'],['update']
Deployability,"// If this is a less-than-standard-aligned load/store, change the type to; // match the standard alignment.; // The alignment is overlooked when selecting _UPD variants; and it's; // easier to introduce bitcasts here than fix that.; // There are 3 ways to get to this base-update combine:; // - intrinsics: they are assumed to be properly aligned (to the standard; // alignment of the memory type), so we don't need to do anything.; // - ARMISD::VLDx nodes: they are only generated from the aforementioned; // intrinsics, so, likewise, there's nothing to do.; // - generic load/store instructions: the alignment is specified as an; // explicit operand, rather than implicitly as the standard alignment; // of the memory type (like the intrisics). We need to change the; // memory type to match the explicit alignment. That way, we don't; // generate non-standard-aligned ARMISD::VLDx nodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:273,update,update,273,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['update'],['update']
Deployability,"// If this is a load that still has uses, then the load must have been added; // as a live value in the SSAUpdate data structure for a block (e.g. because; // the loaded value was stored later). In this case, we need to recursively; // propagate the updates until we get to the real value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdater.cpp:250,update,updates,250,interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SSAUpdater.cpp,1,['update'],['updates']
Deployability,"// If this is a load/store of an alloca, we might have upgraded the alloca's; // alignment earlier. Get the new alignment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp:55,upgrade,upgraded,55,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp,1,['upgrade'],['upgraded']
Deployability,"// If this is a materialization-side-effects-only symbol then drop it,; // otherwise update its map entry with its resolved address.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:85,update,update,85,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,1,['update'],['update']
Deployability,"// If this is a nested initializer list, we might have changed its contents; // (and therefore some of its properties, such as instantiation-dependence); // while filling it in. Inform the outer initializer list so that its state; // can be updated to match.; // FIXME: We should fully build the inner initializers before constructing; // the outer InitListExpr instead of mutating AST nodes after they have; // been used as subexpressions of other nodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:241,update,updated,241,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['update'],['updated']
Deployability,"// If this is a phi, we have to handle memory member updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:53,update,updates,53,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['update'],['updates']
Deployability,"// If this is a postinc, return the value read from memory, otherwise use the; // updated value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:82,update,updated,82,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,2,['update'],['updated']
Deployability,"// If this is a top function that we have already processed, do not; // update its profile again. This happens in the presence of; // function aliases. Since these aliases share the same function; // body, there will be identical replicated profiles for the; // original function. In this case, we simply not bother updating; // the profile of the original function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp:72,update,update,72,interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfReader.cpp,1,['update'],['update']
Deployability,"// If this is a trivial cleanup pad that executes no instructions, it can be; // eliminated. If the cleanup pad continues to the caller, any predecessor; // that is an EH pad will be updated to continue to the caller and any; // predecessor that terminates with an invoke instruction will have its invoke; // instruction converted to a call instruction. If the cleanup pad being; // simplified does not continue to the caller, each predecessor will be; // updated to continue to the unwind destination of the cleanup pad being; // simplified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:183,update,updated,183,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,2,['update'],['updated']
Deployability,"// If this is an early pipeline invocation of this pass, we are done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:23,pipeline,pipeline,23,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['pipeline'],['pipeline']
Deployability,"// If this is an explicit VSETVLI or VSETIVLI, update our state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:47,update,update,47,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,1,['update'],['update']
Deployability,"// If this is an extension from the dest type, we can eliminate it,; // even if it has multiple users. Thus, update the DesiredBitWidth and; // validate all extension instructions agrees on same DesiredBitWidth.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp:109,update,update,109,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,1,['update'],['update']
Deployability,"// If this is an operator, install it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:27,install,install,27,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,14,['install'],['install']
Deployability,"// If this is an update of extended vector elements, insert them as; // appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:17,update,update,17,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['update'],['update']
Deployability,"// If this is not the first declaration or is an update record, we can have; // other redeclarations already. Make a note that we need to propagate the; // DefinitionData pointer onto them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:49,update,update,49,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,"// If this is something that updates VL/VTYPE that we don't know about, set; // the state to unknown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:29,update,updates,29,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,1,['update'],['updates']
Deployability,"// If this is the current decl is being created, make sure we update the name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:62,update,update,62,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['update'],['update']
Deployability,"// If this is the first declaration of an extern C variable, update; // the map of such variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:61,update,update,61,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['update'],['update']
Deployability,"// If this is the first stack frame, add or update alloc node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryProfileInfo.cpp:44,update,update,44,interpreter/llvm-project/llvm/lib/Analysis/MemoryProfileInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryProfileInfo.cpp,1,['update'],['update']
Deployability,"// If this is the first time we're hearing about min and max; // and we haven't explicitly stated what our step is, let's; // update that too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:126,update,update,126,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['update'],['update']
Deployability,"// If this isn't a LocalAsMetadata record, we're dropping it. This used; // to be legal, but there's no upgrade path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:104,upgrade,upgrade,104,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['upgrade'],['upgrade']
Deployability,"// If this line starts and ends in '<' and '>', respectively, it is likely; // part of ""#define <a/b.h>"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:97,a/b,a/b,97,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['a/b'],['a/b']
Deployability,"// If this mapping was specified as a warning but the severity was; // upgraded due to diagnostic settings, simulate the current diagnostic; // settings (and use a warning).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:71,upgrade,upgraded,71,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['upgrade'],['upgraded']
Deployability,"// If this method is a designated initializer, update the class to note that; // it has designated initializers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesWriter.cpp:47,update,update,47,interpreter/llvm-project/clang/lib/APINotes/APINotesWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesWriter.cpp,1,['update'],['update']
Deployability,"// If this move has been eliminated, then method tryEliminateMoveOrSwap should; // have already updated all the register mappings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp:96,update,updated,96,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,1,['update'],['updated']
Deployability,"// If this node shared a dispatch with the previous node,; // just assign the updated shared dispatch and we’re done!; // Otherwise, copy-on-write.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:78,update,updated,78,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,6,['update'],['updated']
Deployability,"// If this node shared tween with the previous node,; // just assign the updated shared tween and we’re done!; // Otherwise, copy-on-write.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:73,update,updated,73,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['update'],['updated']
Deployability,"// If this node's stack id is in the map, update the graph to contain new; // nodes representing any inlining at interior callsites. Note we move the; // associated context ids over to the new nodes.; // Ignore this node if it is for an allocation or we didn't record any; // stack id lists ending at it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['update']
Deployability,"// If this not the first LBR, update the range count between TO of current; // LBR and FROM of next LBR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.cpp:30,update,update,30,interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/PerfReader.cpp,1,['update'],['update']
Deployability,"// If this pred has already been moved to our set or is part of some; // (inner) loop, no update needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:90,update,update,90,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,2,['update'],['update']
Deployability,"// If this simple subvector or scalar/subvector broadcast_load is inserted; // into both halves, use a larger broadcast_load. Update other uses to use; // an extracted subvector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:126,Update,Update,126,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Update'],['Update']
Deployability,// If this symbol has no MaterializingInfo then it's trivially ready.; // Update its state and continue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:74,Update,Update,74,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,1,['Update'],['Update']
Deployability,"// If this value is live in (not live-on-return, or live-through), we can; // treat it the same way patchpoint treats it's ""live in"" values. We'll; // end up folding some of these into stack references, but they'll be; // handled by the register allocator. Note that we do not have the notion; // of a late use so these values might be placed in registers which are; // clobbered by the call. This is fine for live-in. For live-through; // fix-up pass should be executed to force spilling of such registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:100,patch,patchpoint,100,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['patch'],['patchpoint']
Deployability,"// If this write overlapped a read which previously came from the pool,; // someone may still be holding a pointer to that alloc which is now invalid.; // Compute the overlapping range and update the cache entry, so any; // outstanding buffers are automatically updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MappedBlockStream.cpp:189,update,update,189,interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MappedBlockStream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MappedBlockStream.cpp,2,['update'],"['update', 'updated']"
Deployability,// If toolchain choose to use MCAsmParser for inline asm don't pass the; // option to disable integrated-as explictly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:94,integrat,integrated-as,94,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['integrat'],['integrated-as']
Deployability,"// If using instruction referencing, produce this as a DBG_INSTR_REF,; // to be later patched up by finalizeDebugInstrRefs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:86,patch,patched,86,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['patch'],['patched']
Deployability,"// If using instruction referencing, produce this as a DBG_INSTR_REF,; // to be later patched up by finalizeDebugInstrRefs. Tack a deref onto; // the expression, we don't have an ""indirect"" flag in DBG_INSTR_REF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:86,patch,patched,86,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['patch'],['patched']
Deployability,"// If validation is enabled, upgrade visibility only when all vtables; // have typeinfos.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:29,upgrade,upgrade,29,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,2,['upgrade'],['upgrade']
Deployability,"// If we already have a pre/post index load/store then set BaseAccess,; // IncrementOffset and NewBaseReg to the values it already produces,; // allowing us to update and subsequent uses of BaseOp reg with the; // incremented value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:160,update,update,160,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"// If we already have an Objective-C superclass reference, don't; // update it further.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:69,update,update,69,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['update'],['update']
Deployability,"// If we already have info for To then update it, otherwise create a new entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/Consumed.cpp:39,update,update,39,interpreter/llvm-project/clang/lib/Analysis/Consumed.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/Consumed.cpp,1,['update'],['update']
Deployability,"// If we already have one cluster containing eh_pads, this must be updated; // to ExceptionSectionID. Otherwise, we set it equal to the current; // section ID.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp:67,update,updated,67,interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicBlockSections.cpp,1,['update'],['updated']
Deployability,"// If we are called indirectly from within another call to; // TCling::UpdateClassInfo, we delay the update until the dictionary loading; // is finished (i.e. when we return to the top level TCling::UpdateClassInfo).; // This allows for the dictionary to be fully populated when we actually; // update the TClass object. The updating of the TClass sometimes; // (STL containers and when there is an emulated class) forces the building; // of the TClass object's real data (which needs the dictionary info).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:71,Update,UpdateClassInfo,71,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,4,"['Update', 'update']","['UpdateClassInfo', 'update']"
Deployability,"// If we are cloning a function that was already assigned to some; // callers, then essentially we are creating new callsite clones; // of the other callsites in that function that are reached by those; // callers. Clone the other callees of the current callsite's caller; // that were already assigned to PreviousAssignedFuncClone; // accordingly. This is important since we subsequently update the; // calls from the nodes in the graph and their assignments to callee; // functions recorded in CallsiteToCalleeFuncCloneMap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:389,update,update,389,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['update'],['update']
Deployability,"// If we are handling a C++ class template instantiation, we can see multiple; // lexical updates for the same record. It's important that we select only one; // of them, so that field numbering works properly. Just pick the first one we; // see.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:90,update,updates,90,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['update'],['updates']
Deployability,// If we are invoking `nvlink` internally we need to output a `.cubin` file.; // FIXME: This should hopefully be removed if NVIDIA updates their tooling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp:131,update,updates,131,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,1,['update'],['updates']
Deployability,"// If we are linking an image for multiple archs then the linker wants; // -arch_multiple and -final_output <final image name>. Unfortunately, this; // doesn't fit in cleanly because we have to pass this information down.; //; // FIXME: This is a hack; find a cleaner way to integrate this into the; // process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:275,integrat,integrate,275,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['integrat'],['integrate']
Deployability,"// If we are outside of an update, thus before the actual fixpoint iteration; // started (= when we create AAs), we do not track dependences because we will; // put all AAs into the initial worklist anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['update'],['update']
Deployability,"// If we are replacing outside, we also need to update the LiveOuts",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineCFGStructurizer.cpp:48,update,update,48,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineCFGStructurizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineCFGStructurizer.cpp,1,['update'],['update']
Deployability,"// If we are supposed to, toggle the bit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:26,toggle,toggle,26,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['toggle'],['toggle']
Deployability,"// If we are transferring a def from the original interval, make sure; // to only update the subranges for which the original subranges had; // a def at this location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp:82,update,update,82,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,1,['update'],['update']
Deployability,"// If we are updating a file that overridden an original file,; // actually update the original file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/FileRemapper.cpp:76,update,update,76,interpreter/llvm-project/clang/lib/ARCMigrate/FileRemapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/FileRemapper.cpp,1,['update'],['update']
Deployability,"// If we can determine a pointer alignment that is bigger than currently; // set, update the alignment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:82,update,update,82,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['update'],['update']
Deployability,"// If we can use the original VL with the modified element type, this; // means we only have a VTYPE toggle, not a VL toggle. TODO: Should this; // be moved into InsertVSETVLI?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:101,toggle,toggle,101,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,4,['toggle'],['toggle']
Deployability,"// If we changed the computation somewhere in the DAG, this change will; // affect all users of Cond. Update all the nodes so that we do not use; // the generic VSELECT anymore. Otherwise, we may perform wrong; // optimizations as we messed with the actual expectation for the vector; // boolean values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:102,Update,Update,102,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Update'],['Update']
Deployability,"// If we did not find the store or did not see the release, fail.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:51,release,release,51,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,1,['release'],['release']
Deployability,"// If we didn't do updates inside deleteDeadLoopBlocks, do them here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp:19,update,updates,19,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopSimplifyCFG.cpp,1,['update'],['updates']
Deployability,"// If we don't already know the exception specification for this redecl; // chain, add an update record for it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:90,update,update,90,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// If we don't use LMUL or the SEW/LMUL ratio, then adjust LMUL so that we; // maintain the SEW/LMUL ratio. This allows us to eliminate VL toggles in more; // places.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:139,toggle,toggles,139,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,1,['toggle'],['toggles']
Deployability,"// If we end up with too many slow queries, just update the; // DFS numbers on the theory that we are going to keep querying.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:49,update,update,49,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,1,['update'],['update']
Deployability,"// If we fail, reset state since the client will not end up calling the; // matching EndSourceFile(). All paths that return true should release this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp:136,release,release,136,interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,1,['release'],['release']
Deployability,"// If we find an atomic fetch_add or fetch_sub within the destructor in which; // the pointer was released (before the release), this is likely a destructor; // of a shared pointer.; // Because we don't model atomics, and also because we don't know that the; // original reference count is positive, we should not report use-after-frees; // on objects deleted in such destructors. This can probably be improved; // through better shared pointer modeling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:98,release,released,98,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,2,['release'],"['release', 'released']"
Deployability,"// If we find that this is in fact the name of a type trait,; // update the token kind in place and parse again to treat it as; // the appropriate kind of type trait.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp:65,update,update,65,interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,1,['update'],['update']
Deployability,"// If we formed a cycle by creating this call, we need to update more data; // structures.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['update']
Deployability,"// If we found a better result, update Result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:32,update,update,32,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['update'],['update']
Deployability,"// If we found a non-aligned allocation function in the promise_type,; // it indicates the user forgot to update the allocation function. Let's emit; // a warning here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:106,update,update,106,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['update'],['update']
Deployability,"// If we found that the bucket points to N, update the bucket to point to; // whatever is next.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp:44,update,update,44,interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp,1,['update'],['update']
Deployability,"// If we found that truncation is beneficial, perform the truncation and; // update 'Op'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:77,update,update,77,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,1,['update'],['update']
Deployability,"// If we found the store we were looking for and saw the release,; // break. There is no more work to be done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:57,release,release,57,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,1,['release'],['release']
Deployability,"// If we had a '-' in front, toggle the sign bit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:29,toggle,toggle,29,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['toggle'],['toggle']
Deployability,"// If we had a dirty entry for the block, update it. Otherwise, just add; // a new entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,2,['update'],['update']
Deployability,"// If we have #line directives in this file, update and overwrite the physical; // location info if appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:45,update,update,45,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['update'],['update']
Deployability,"// If we have PHI nodes to update, compute the number of edges from Pred to; // BB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['update'],['update']
Deployability,"// If we have SUB(r1, r2) and CMP(r2, r1), the condition code based on CMP; // needs to be updated to be based on SUB. Push the condition code; // operands to OperandsToUpdate. If it is safe to remove CmpInstr, the; // condition code of these operands will be modified.; // Here, Value == 0 means we haven't converted comparison against 1 or -1 to; // comparison against 0, which may modify predicate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:91,update,updated,91,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['update'],['updated']
Deployability,"// If we have SUB(r1, r2) and CMP(r2, r1), the condition code based on; // CMP needs to be updated to be based on SUB. Push the condition; // code operands to OperandsToUpdate. If it is safe to remove; // CmpInstr, the condition code of these operands will be modified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiInstrInfo.cpp:91,update,updated,91,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiInstrInfo.cpp,1,['update'],['updated']
Deployability,"// If we have SUB(r1, r2) and CMP(r2, r1), the condition code based; // on CMP needs to be updated to be based on SUB.; // If we have ADD(r1, r2, X) and CMP(r1, r2), the condition code also; // needs to be modified.; // Push the condition code operands to OperandsToUpdate.; // If it is safe to remove CmpInstr, the condition code of these; // operands will be modified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:91,update,updated,91,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['update'],['updated']
Deployability,"// If we have a SysRoot, ignore GCC_INSTALL_PREFIX.; // GCC_INSTALL_PREFIX specifies the gcc installation for the default; // sysroot and is likely not valid with a different sysroot.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:93,install,installation,93,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['install'],['installation']
Deployability,"// If we have a addi(toc@l)/addis(toc@ha) pair, and the addis has only; // one use, then we can do this for any offset, we just need to also; // update the offset (i.e. the symbol addend) on the addis also.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:145,update,update,145,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['update'],['update']
Deployability,"// If we have a function type, update the substitution context; // appropriately.; //Substitute result type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:31,update,update,31,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['update'],['update']
Deployability,// If we have an array type we need to update every element.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:39,update,update,39,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['update'],['update']
Deployability,"// If we have an available predecessor but it requires casting, insert the; // cast in the predecessor and use the cast. Note that we have to update the; // AvailablePreds vector as we go so that all of the PHI entries for this; // predecessor use the same bitcast.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['update']
Deployability,"// If we have an unbundling job, we need to create results for all the; // outputs. We also update the results cache so that other actions using; // this unbundling action can get the right results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:92,update,update,92,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['update'],['update']
Deployability,"// If we have another child in this scope to match, update FailIndex and; // try it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:52,update,update,52,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['update'],['update']
Deployability,"// If we have any extern ""C"" names, write out a visible update for them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:56,update,update,56,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// If we have branch weight information, we'll want to update it for the; // newly created branches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:55,update,update,55,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['update'],['update']
Deployability,"// If we have captured 'this', the 'this' expression refers; // to the enclosing '*this' object (either by value or reference) which is; // either copied into the closure object's field that represents the; // '*this' or refers to '*this'.; // Update 'Result' to refer to the data member/field of the closure object; // that represents the '*this' capture.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:244,Update,Update,244,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Update'],['Update']
Deployability,"// If we have computed a smaller type for the expression, update VecTy so; // that the costs will be accurate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['update'],['update']
Deployability,"// If we have made any modifications and added any registers to the set of; // registers for which we need to update the kill flags, do so by recomputing; // LiveVariables for those registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:110,update,update,110,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,1,['update'],['update']
Deployability,"// If we have more than one job, then disable integrated-cc1 for now. Do this; // also when we need to report process execution statistics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:46,integrat,integrated-,46,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['integrat'],['integrated-']
Deployability,"// If we have nothing to update, just return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp:25,update,update,25,interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BreakCriticalEdges.cpp,1,['update'],['update']
Deployability,"// If we have seen the store, but not the release...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:42,release,release,42,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,1,['release'],['release']
Deployability,"// If we have to update users but EFLAGS is live-out abort, since we cannot; // easily find all of the users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:17,update,update,17,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['update']
Deployability,"// If we imported a key declaration of this namespace, write the visible; // lookup results as an update record for it rather than including them; // on this declaration. We will only look at key declarations on reload.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:98,update,update,98,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// If we integrate a model that uses RooLinearVar and should be able to get; // integrated analytically, this should also work if we integrate over variable; // clones because RooFit considers them identical. Covers GitHub issue #12646.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx:9,integrat,integrate,9,roofit/roofitcore/test/testRooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx,3,['integrat'],"['integrate', 'integrated']"
Deployability,"// If we just moved the element we're inserting, be sure to update; // the reference (never happens if TakesParamByValue).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:60,update,update,60,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,3,['update'],['update']
Deployability,"// If we just moved the element we're inserting, be sure to update; // the reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:60,update,update,60,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,2,['update'],['update']
Deployability,"// If we know all call sites and all are known no-recurse, we are done.; // If all known call sites, which might not be all that exist, are known; // to be no-recurse, we are not done but we can continue to assume; // no-recurse. If one of the call sites we have not visited will become; // live, another update is triggered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:305,update,update,305,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['update']
Deployability,"// If we managed to sink this instruction, update everything so we; // harden that instruction when we reach it in the instruction; // sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:43,update,update,43,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['update'],['update']
Deployability,"// If we merge into a sub-register of a larger class (test above),; // update SubReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:71,update,update,71,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['update'],['update']
Deployability,"// If we mess up in a release build, we'd still prefer to just drop the bug; // instead of trying to go on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:22,release,release,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,1,['release'],['release']
Deployability,"// If we need this expected index to be a zero element, then update the; // relevant zero mask and perform the known bits at the end to minimize; // repeated computes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:61,update,update,61,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['update'],['update']
Deployability,"// If we only had a forward declaration then update the; // TClingClassInfo with the definition if we have it now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:45,update,update,45,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['update']
Deployability,"// If we pass the updated counter back through a phi, we need to know; // which latch the updated value will be coming from.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TargetTransformInfo.cpp:18,update,updated,18,interpreter/llvm-project/llvm/lib/Analysis/TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TargetTransformInfo.cpp,2,['update'],['updated']
Deployability,// If we plan to replace NewV we need to update it at this point.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['update'],['update']
Deployability,// If we reach here all of the arguments passed the nonnull check.; // If 'state' has been updated generated a new node.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp:91,update,updated,91,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp,1,['update'],['updated']
Deployability,"// If we reassigned the stack pointer, update the debug frame base info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegColoring.cpp:39,update,update,39,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegColoring.cpp,1,['update'],['update']
Deployability,"// If we removed anything, then we potentially need to update; // blocks successors too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:55,update,update,55,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['update'],['update']
Deployability,"// If we removed the last branch, update stop and move to a legal pos.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:34,update,update,34,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['update'],['update']
Deployability,"// If we replaced an argument, we may now also access a global (currently; // classified as ""other"" memory). Update memory attribute to reflect this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SCCP.cpp:109,Update,Update,109,interpreter/llvm-project/llvm/lib/Transforms/IPO/SCCP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SCCP.cpp,1,['Update'],['Update']
Deployability,"// If we replaced something in an instruction, handle the patching of; // metadata. Skip this if we are replacing predicateinfo with its; // original operand, as we already know we can just drop it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:58,patch,patching,58,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['patch'],['patching']
Deployability,"// If we see two releases in a row on the same pointer. If so, make; // a note, and we'll cicle back to revisit it after we've; // hopefully eliminated the second release, which may allow us to; // eliminate the first release too.; // Theoretically we could implement removal of nested retain+release; // pairs by making PtrState hold a stack of states, but this is; // simple and avoids adding overhead for the non-nested case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:17,release,releases,17,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,4,['release'],"['release', 'releases']"
Deployability,"// If we see two retains in a row on the same pointer. If so, make; // a note, and we'll cicle back to revisit it after we've; // hopefully eliminated the second retain, which may allow us to; // eliminate the first retain too.; // Theoretically we could implement removal of nested retain+release; // pairs by making PtrState hold a stack of states, but this is; // simple and avoids adding overhead for the non-nested case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp:290,release,release,290,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/PtrState.cpp,1,['release'],['release']
Deployability,"// If we still might be affected by the write of the access but there are; // dominating writes in the function of the instruction; // (HasBeenWrittenTo), we can try to reason that the access is overwritten; // by them. This would have happend above if they are all in the same; // function, so we only check the inter-procedural case. Effectively, we; // want to show that there is no call after the dominting write that might; // reach the access, and when it returns reach the instruction with the; // updated value. To this end, we iterate all call sites, check if they; // might reach the instruction without going through another access; // (ExclusionSet) and at the same time might reach the access. However,; // that is all part of AAInterFnReachability.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:505,update,updated,505,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['update'],['updated']
Deployability,"// If we succeed, copy S's RRInfo into the Release -> {Retain Set; // Map}. Then we clear S.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:43,Release,Release,43,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['Release'],['Release']
Deployability,// If we try to pop the outer pipeline we have unbalanced parentheses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:30,pipeline,pipeline,30,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,1,['pipeline'],['pipeline']
Deployability,// If we unswitched a branch which collapses the condition to a known; // constant we want to replace all the uses of the invariants within both; // the original and cloned blocks. We do this here so that we can use the; // now updated dominator tree to identify which side the users are on.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:228,update,updated,228,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updated']
Deployability,"// If we updated the node in place, reset the node ID. To the isel,; // this should be just like a newly allocated machine node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:9,update,updated,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,2,['update'],['updated']
Deployability,"// If we use STUX to update the stack pointer, we need the two scratch; // registers TempReg and ScratchReg, we have to save LR here which is stored; // in ScratchReg.; // If the offset can not be encoded into the store instruction, we also have; // to save LR here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:21,update,update,21,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['update'],['update']
Deployability,"// If we use an existing value in this phi, we have to patch the original; // value because the phi will be used to replace a later value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:55,patch,patch,55,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['patch'],['patch']
Deployability,"// If we were allowed to update a cell for a part of a register, the meet; // operation would need to be parametrized by the register number and the; // exact part of the register, so that the computer BitRefs correspond to; // the actual bits of the ""self"" register.; // While this cannot happen in the current implementation, I'm not sure; // if this should be ruled out in the future.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp:25,update,update,25,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,1,['update'],['update']
Deployability,"// If we would over-release here, but we know the value came from an ivar,; // assume it was a strong ivar that's just been relinquished.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:20,release,release,20,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['release'],['release']
Deployability,"// If we're about to splice an INLINEASM_BR from FromBBI, we need to update; // ToBBI's successor list accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp:69,update,update,69,interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,1,['update'],['update']
Deployability,"// If we're checking for a platform older than our minimum deployment; // target, we can fold the check away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:59,deploy,deployment,59,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['deploy'],['deployment']
Deployability,"// If we're going to iterate again, make sure we've updated our; // padding-based contributions to the block sizes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchSelector.cpp:52,update,updated,52,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchSelector.cpp,1,['update'],['updated']
Deployability,"// If we're loading retained from a __strong xvalue, we can avoid; // an extra retain/release pair by zeroing out the source of this; // ""move"" operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:86,release,release,86,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['release'],['release']
Deployability,"// If we're loading/storing from an alloca, align it if possible.; //; // FIXME: We eagerly upgrade the alignment, regardless of whether TTI; // tells us this is beneficial. This feels a bit odd, but it matches; // existing tests. This isn't *so* bad, because at most we align to 4; // bytes (current value of StackAdjustedAlignment).; //; // FIXME: We will upgrade the alignment of the alloca even if it turns out; // we can't vectorize for some other reason.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp:92,upgrade,upgrade,92,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp,2,['upgrade'],['upgrade']
Deployability,"// If we're the head, then update the sparse array and our next.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h:27,update,update,27,interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,1,['update'],['update']
Deployability,"// If we're the tail, then update our head and our previous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h:27,update,update,27,interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,1,['update'],['update']
Deployability,"// If we're updating a namespace, select a key declaration as the key for the; // update record; those are the only ones that will be checked on reload.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:82,update,update,82,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// If we're updating the SCC, also update the FAM inside the proxy's; // result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp:35,update,update,35,interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CGSCCPassManager.cpp,1,['update'],['update']
Deployability,"// If we're using the MSVC linker, it's not sufficient to just use link; // from the program PATH, because other environments like GnuWin32 install; // their own link.exe which may come first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp:140,install,install,140,interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/MSVC.cpp,1,['install'],['install']
Deployability,"// If we're validating, get the vtable symbols that should not be; // upgraded because they correspond to typeIDs outside of index-based; // WPD info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:70,upgrade,upgraded,70,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['upgrade'],['upgraded']
Deployability,"// If we've already loaded the decl, perform the updates when we finish; // loading this block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:49,update,updates,49,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,2,['update'],['updates']
Deployability,"// If we've instantiated the call operator of a lambda or the call; // operator template of a generic lambda, update the ""instantiation of""; // information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:110,update,update,110,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,1,['update'],['update']
Deployability,"// If we've updated the value but the original dbg.assign has an arglist; // then kill it now - we can't use the requested new value.; // We can't replace the DIArgList with the new value as it'd leave; // the DIExpression in an invalid state (DW_OP_LLVM_arg operands without; // an arglist). And we can't keep the DIArgList in case the linked store; // is being split - in which case the DIArgList + expression may no longer; // be computing the correct value.; // This should be a very rare situation as it requires the value being; // stored to differ from the dbg.assign (i.e., the value has been; // represented differently in the debug intrinsic for some reason).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:12,update,updated,12,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['update'],['updated']
Deployability,"// If you edit the description strings, make sure you update; // getPointerWidthV().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/AMDGPU.cpp:54,update,update,54,interpreter/llvm-project/clang/lib/Basic/Targets/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/AMDGPU.cpp,1,['update'],['update']
Deployability,// If-convert MBB and update analyses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:22,update,update,22,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,2,['update'],['update']
Deployability,"// Ignore SIGINT and SIGQUIT. Install handler for SIGUSR1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootx.cxx:30,Install,Install,30,rootx/src/rootx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootx.cxx,1,['Install'],['Install']
Deployability,// Ignore local declarations (for now) and those with const qualification.; // TODO: Local variables should not be allowed if their type declaration has; // ReadOnlyPlacementAttr attribute. To be handled in follow-up patch.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:217,patch,patch,217,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['patch'],['patch']
Deployability,// Immediately run the verifier to catch any problems before starting up the; // pass pipelines. Otherwise we can crash on broken code during; // doInitialization().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/opt.cpp:86,pipeline,pipelines,86,interpreter/llvm-project/llvm/tools/opt/opt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/opt.cpp,1,['pipeline'],['pipelines']
Deployability,"// Important note on validity of BPI/BFI. JumpThreading tries to preserve; // BPI/BFI as it goes. Thus if cached instance exists it will be updated.; // Otherwise, new instance of BPI/BFI is created (up to date by definition).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:140,update,updated,140,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['update'],['updated']
Deployability,"// Important: When the integrator samples x, caching of sub-tree values needs to be off.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:23,integrat,integrator,23,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,['integrat'],['integrator']
Deployability,"// In ARC, disallow definition of retain/release/autorelease/retainCount",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:41,release,release,41,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['release'],['release']
Deployability,"// In ARC, forbid the user from sending messages to; // retain/release/autorelease/dealloc/retainCount explicitly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:63,release,release,63,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['release'],['release']
Deployability,"// In ARC, forbid the user from using @selector for; // retain/release/autorelease/dealloc/retainCount.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:63,release,release,63,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['release'],['release']
Deployability,"// In ARC, move out of consumed arguments so that the release cleanup; // entered by StartFunction doesn't cause an over-release. This isn't; // optimal -O0 code generation, but it should get cleaned up when; // optimization is enabled. This also assumes that delegate calls are; // performed exactly once for a set of arguments, but that should be safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:54,release,release,54,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,2,['release'],['release']
Deployability,// In BTF strings are stored as a continuous memory region with; // individual strings separated by 0 bytes. Strings are identified; // by an offset in such region.; // The `StringsTable` points to this region in the parsed ObjectFile.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTFParser.h:34,continuous,continuous,34,interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTFParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTFParser.h,1,['continuous'],['continuous']
Deployability,"// In CL mode, don't error on apparently non-existent linker inputs, because; // they can be influenced by linker flags the clang driver might not; // understand.; // Examples:; // - `clang-cl main.cc ole32.lib` in a non-MSVC shell will make the driver; // module look for an MSVC installation in the registry. (We could ask; // the MSVCToolChain object if it can find `ole32.lib`, but the logic to; // look in the registry might move into lld-link in the future so that; // lld-link invocations in non-MSVC shells just work too.); // - `clang-cl ... /link ...` can pass arbitrary flags to the linker,; // including /libpath:, which is used to find .lib and .obj files.; // So do not diagnose this on the driver level. Rely on the linker diagnosing; // it. (If we don't end up invoking the linker, this means we'll emit a; // ""'linker' input unused [-Wunused-command-line-argument]"" warning instead; // of an error.); //; // Only do this skip after the typo correction step above. `/Brepo` is treated; // as TY_Object, but it's clearly a typo for `/Brepro`. It seems fine to emit; // an error if we have a flag that's within an edit distance of 1 from a; // flag. (Users can use `-Wl,` or `/linker` to launder the flag past the; // driver in the unlikely case they run into this.); //; // Don't do this for inputs that start with a '/', else we'd pass options; // like /libpath: through to the linker silently.; //; // Emitting an error for linker inputs can also cause incorrect diagnostics; // with the gcc driver. The command; // clang -fuse-ld=lld -Wl,--chroot,some/dir /file.o; // will make lld look for some/dir/file.o, while we will diagnose here that; // `/file.o` does not exist. However, configure scripts check if; // `clang /GR-` compiles without error to see if the compiler is cl.exe,; // so we can't downgrade diagnostics for `/GR-` from an error to a warning; // in cc mode. (We can in cl mode because cl.exe itself only warns on; // unknown flags.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:281,install,installation,281,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['install'],['installation']
Deployability,"// In LLVM IR, SPIR-V and OpenCL builtin types are represented as either; // target(...) target extension types or pointers-to-opaque-structs. The; // approach relying on structs is deprecated and works only in the non-opaque; // pointer mode (-opaque-pointers=0).; // In order to maintain compatibility with LLVM IR generated by older versions; // of Clang and LLVM/SPIR-V Translator, the pointers-to-opaque-structs are; // ""translated"" to target extension types. This translation is temporary and; // will be removed in the future release of LLVM.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp:533,release,release,533,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,1,['release'],['release']
Deployability,// In OpenCL global init functions must be converted to kernels in order to; // be able to launch them from the host.; // FIXME: Some more work might be needed to handle destructors correctly.; // Current initialization function makes use of function pointers callbacks.; // We can't support function pointers especially between host and device.; // However it seems global destruction has little meaning without any; // dynamic resource allocation on the device and program scope variables are; // destroyed by the runtime when program is released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:540,release,released,540,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['release'],['released']
Deployability,"// In Phase 1 we iterate through the instructions of the block and for each; // instruction we get its mode usage. If the instruction uses the Mode register; // we:; // - update the Change status, which tracks the changes to the Mode register; // made by this block; // - if this instruction's requirements are compatible with the current setting; // of the Mode register we merge the modes; // - if it isn't compatible and an InsertionPoint isn't set, then we set the; // InsertionPoint to the current instruction, and we remember the current; // mode; // - if it isn't compatible and InsertionPoint is set we insert a seteg before; // that instruction (unless this instruction forms part of the block's; // entry requirements in which case the insertion is deferred until Phase 3; // when predecessor exit values are known), and move the insertion point to; // this instruction; // - if this is a setreg instruction we treat it as an incompatible instruction.; // This is sub-optimal but avoids some nasty corner cases, and is expected to; // occur very rarely.; // - on exit we have set the Require, Change, and initial Exit modes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp:171,update,update,171,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp,1,['update'],['update']
Deployability,// In a record describing a template the type should be an; // InjectedClassNameType (see Sema::CheckClassTemplate). Update the; // previously set type to the correct value here (ToDescribed is not; // available at record create).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:117,Update,Update,117,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['Update'],['Update']
Deployability,"// In abbreviated templates, the type-constraints of invented template; // type parameters are instantiated with the function type, invalidating; // the TemplateParameterList which relied on the template type parameter; // not having a type constraint. Recreate the TemplateParameterList with; // the updated parameter list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:301,update,updated,301,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,2,['update'],['updated']
Deployability,"// In auto-retain/release, infer strong retension for fields of; // retainable type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:18,release,release,18,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['release'],['release']
Deployability,"// In auto-retain/release, infer strong retension for variables of; // retainable type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:18,release,release,18,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['release'],['release']
Deployability,// In case !Update the .debug_addr table is not generated/preserved.; // Thus instead of DW_FORM_loclistx the DW_FORM_sec_offset is used.; // Since DW_AT_loclists_base is used for only DW_FORM_loclistx the; // DW_AT_loclists_base is removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:12,Update,Update,12,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['Update'],['Update']
Deployability,// In case !Update the .debug_addr table is not generated/preserved.; // Thus instead of DW_FORM_rnglistx the DW_FORM_sec_offset is used.; // Since DW_AT_rnglists_base is used for only DW_FORM_rnglistx the; // DW_AT_rnglists_base is removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:12,Update,Update,12,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['Update'],['Update']
Deployability,"// In case we want to make it without a default canvas. This will; // be implemented after the 5.21/06 Release. Remember to take out; // any reference to the pad/canvas when the fitpanel is shown; // and/or built.; //SetCanvas(0 /*pad->GetCanvas()*/);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:103,Release,Release,103,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['Release'],['Release']
Deployability,"// In cases like:; // struct Q { int a, b, c; };; // Q *getQ();; // void foo() {; // struct A { Q q; } a = { *getQ(), .q.b = 3 };; // }; //; // We will have an InitListExpr for a, with type A, and then a; // DesignatedInitUpdateExpr for ""a.q"" with type Q. The ""base"" for this DIUE; // is the call expression *getQ(); the ""updater"" for the DIUE is "".q.b = 3""; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:322,update,updater,322,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['update'],['updater']
Deployability,"// In implementations which use a barrier to achieve release semantics, we can; // delay emitting this barrier until we know a store is actually going to be; // attempted. The cost of this delay is that we need 2 copies of the block; // emitting the load-linked, affecting code size.; //; // Ideally, this logic would be unconditional except for the minsize check; // since in other cases the extra blocks naturally collapse down to the; // minimal loop. Unfortunately, this puts too much stress on later; // optimisations so we avoid emitting the extra logic in those cases too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:53,release,release,53,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,1,['release'],['release']
Deployability,// In most cases the deployment version is not useful to compare.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Target.h:21,deploy,deployment,21,interpreter/llvm-project/llvm/include/llvm/TextAPI/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Target.h,2,['deploy'],['deployment']
Deployability,// In order to lower atomic loads with stronger guarantees we would need to; // use store.release or insert fences. However these features were only added; // with PTX ISA 6.0 / sm_70.; // TODO: Check if we can actually use the new instructions and implement them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:90,release,release,90,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp,1,['release'],['release']
Deployability,"// In order to perform a partial update, we need the existing bitwise; // value, which we can only extract for a constant int.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp:33,update,update,33,interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,1,['update'],['update']
Deployability,"// In order to support importing modules with illegal data layout strings,; // delay parsing the data layout string until after upgrades and overrides; // have been applied, allowing to fix illegal data layout strings.; // Initialize to the current module's layout string in case none is specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:128,upgrade,upgrades,128,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['upgrade'],['upgrades']
Deployability,"// In order to use this index for testing, specifically import testing, we; // need to update any indirect call edges created from SamplePGO, so that they; // point to the correct GUIDs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp:87,update,update,87,interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp,1,['update'],['update']
Deployability,"// In principle, for simplicity, we preserve the old behavior of; // delivering diagnostics to just one consumer (that is why we don't emit; // to both), but we allow the ""sink"" to be changed.; // Note, however, that consumers might update their internal state in; // calls to, e.g. `BeginSourceFile()` or `EndSourceFile()` (actually,; // `TextDiagnosticPrinter` is an example of this), so in order to be able; // to restore the original consumer, we need to keep forwarding these; // calls also to `m_PrevClient` (see above).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:233,update,update,233,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp,1,['update'],['update']
Deployability,"// In reference_impl.rs, we merge the new CV with existing CVs from the stack; // before pushing it. We can do that because we know more input is coming, so; // we know none of the merges are root.; //; // This setting is different. We want to feed as much input as possible to; // compress_subtree_wide(), without setting aside anything for the chunk_state.; // If the user gives us 64 KiB, we want to parallelize over all 64 KiB at once; // as a single subtree, if at all possible.; //; // This leads to two problems:; // 1) This 64 KiB input might be the only call that ever gets made to update.; // In this case, the root node of the 64 KiB subtree would be the root node; // of the whole tree, and it would need to be ROOT finalized. We can't; // compress it until we know.; // 2) This 64 KiB input might complete a larger tree, whose root node is; // similarly going to be the the root of the whole tree. For example, maybe; // we have 196 KiB (that is, 128 + 64) hashed so far. We can't compress the; // node at the root of the 256 KiB subtree until we know how to finalize it.; //; // The second problem is solved with ""lazy merging"". That is, when we're about; // to add a CV to the stack, we don't merge it with anything first, as the; // reference impl does. Instead we do merges using the *previous* CV that was; // added, which is sitting on top of the stack, and we put the new CV; // (unmerged) on top of the stack afterwards. This guarantees that we never; // merge the root node until finalize().; //; // Solving the first problem requires an additional tool,; // compress_subtree_to_parent_node(). That function always returns the top; // *two* chaining values of the subtree it's compressing. We then do lazy; // merging with each of them separately, so that the second CV will always; // remain unmerged. (That also helps us support extendable output when we're; // hashing an input all-at-once.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c:591,update,update,591,interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,1,['update'],['update']
Deployability,"// In release builds, assume that if there are no direct calls to the new; // function, then there is a ref edge. In debug builds, keep track of; // references to assert that there is actually a ref edge if there is no call; // edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:6,release,release,6,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['release'],['release']
Deployability,"// In scenarios where a function is not known to be a multiversion function; // until a later declaration, it is sometimes necessary to change the; // previously created mangled name to align with requirements of whatever; // multiversion function kind the function is now known to be. This function; // is responsible for performing such mangled name updates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:352,update,updates,352,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,1,['update'],['updates']
Deployability,"// In situations like below it is not known if usage is a kill; // after setReg():; //; // .-> %2:gpr = LD_imm64 @""llvm.t:0:0$0:0""; // |; // |`----------------.; // | %3:gpr = LDD %2:gpr, 0; // | %4:gpr = ADD_rr %0:gpr(tied-def 0), killed %3:gpr <--- (1); // | %5:gpr = LDD killed %4:gpr, 0 ^^^^^^^^^^^^^; // | STD killed %5:gpr, %1:gpr, 0 this is I; // `----------------.; // %6:gpr = LDD %2:gpr, 0; // %7:gpr = ADD_rr %0:gpr(tied-def 0), killed %6:gpr <--- (2); // %8:gpr = LDD killed %7:gpr, 0 ^^^^^^^^^^^^^; // STD killed %8:gpr, %1:gpr, 0 this is I; //; // Instructions (1) and (2) would be updated by setReg() to:; //; // ADD_rr %0:gpr(tied-def 0), %2:gpr; //; // %2:gpr is not killed at (1), so it is necessary to remove kill flag; // from I.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp:596,update,updated,596,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp,1,['update'],['updated']
Deployability,"// In some cases the shift/extend needs to be explicitly parsed together; // with the register, rather than as a separate operand. This is needed; // for addressing modes where the instruction as a whole dictates the; // scaling/extend, rather than specific bits in the instruction.; // By parsing them as a single operand, we avoid the need to pass an; // extra operand in all CodeGen patterns (because all operands need to; // have an associated value), and we avoid the need to update TableGen to; // accept operands that have no associated bits in the instruction.; //; // An added benefit of parsing them together is that the assembler; // can give a sensible diagnostic if the scaling is not correct.; //; // The default is 'lsl #0' (HasExplicitAmount = false) if no; // ShiftExtend is specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:481,update,update,481,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['update'],['update']
Deployability,"// In some cases, e.g. first instruction in a function, the compiler generates; // two entries, both with the same address. We want the last one.; //; // In general we want a non-empty range: the last row whose address is less; // than or equal to Address. This can be computed as upper_bound - 1.; //; // TODO: This function, and its users, needs to be update to return multiple; // rows for bundles with multiple op-indexes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp:354,update,update,354,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFDebugLine.cpp,1,['update'],['update']
Deployability,"// In that case, remapped buffer will be deleted by CompilerInstance on; // BeginSourceFile, so we call release() to avoid double deletion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp:104,release,release,104,interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp,1,['release'],['release']
Deployability,"// In the (few) cases where an expression is intentionally; // ""uninterpreted"", `InitExpr` is not associated with a value. There are; // two ways to handle this situation: propagate the status, so that; // uninterpreted initializers result in uninterpreted variables, or; // provide a default value. We choose the latter so that later refinements; // of the variable can be used for reasoning about the surrounding code.; // For this reason, we let this case be handled by the `createValue()`; // call below.; //; // FIXME. If and when we interpret all language cases, change this to; // assert that `InitExpr` is interpreted, rather than supplying a; // default value (assuming we don't update the environment API to return; // references).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp:688,update,update,688,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,1,['update'],['update']
Deployability,"// In the binary's ""xray_instr_map"" section, an array of these function entries; // describes each instrumentation point. When XRay patches your code, the index; // into this table will be given to your handler as a patch point identifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:132,patch,patches,132,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,2,['patch'],"['patch', 'patches']"
Deployability,"// In the case of added elements, the 'Reference' reader will be modified;; // those elements will be added to it. Update the current reader instance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVCompare.cpp:115,Update,Update,115,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVCompare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVCompare.cpp,1,['Update'],['Update']
Deployability,"// In the case of an aggregate type (class, struct, union, interface),; // get the aggregate size. As the original record is pointing to its; // reference, we have to update it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:167,update,update,167,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['update'],['update']
Deployability,"// In the case we got this far some lanes are still live,; // update EXEC to deactivate lanes as appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp:62,update,update,62,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,1,['update'],['update']
Deployability,"// In the state emulated, BuildOld would recalculate the offset and undo the offset update.; // Note: we should consider adding a new state just for this (the hints indicates that we are mapping a compiled class but; // then we would have to investigate all use of the state with <= and >= condition to make sure they are still appropriate).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:84,update,update,84,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,1,['update'],['update']
Deployability,"// In theory this could be combined with the previous loop, but it is tricky; // to update the IndexList while we are iterating it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SlotIndexes.cpp:84,update,update,84,interpreter/llvm-project/llvm/lib/CodeGen/SlotIndexes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SlotIndexes.cpp,1,['update'],['update']
Deployability,"// In this case the iterations of the loop are constant, so the first; // loop will execute completely (will not jump from one of; // the peeled blocks to the second loop). Here we are updating the; // branch conditions of each of the peeled blocks, such that it will; // branch to its successor which is not the preheader of the second loop; // in the case of unguarded loops, or the succesors of the exit block of; // the first loop otherwise. Doing this update will ensure that the entry; // block of the first loop dominates the entry block of the second loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:457,update,update,457,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['update'],['update']
Deployability,"// In this case the loop operand type was a byte, and there is no need for a; // residual loop to copy the remaining memory after the main loop.; // We do however need to patch up the control flow by creating the; // terminators for the preloop block and the memcpy loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp:171,patch,patch,171,interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerMemIntrinsics.cpp,1,['patch'],['patch']
Deployability,"// In this case, the incoming node's default definition overrides; // the original default definition, all children who relied on that; // definition must be updated accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp:158,update,updated,158,interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,1,['update'],['updated']
Deployability,"// In this case, we update the declId, update its constants and add the enum to the ids map and return.; // At this point it is like it came from the interpreter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:20,update,update,20,core/meta/src/TListOfEnums.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx,2,['update'],['update']
Deployability,"// In this function we output 32-bit branches, which should always; // have enough range. They can be shortened and relaxed by later code; // in the pipeline, if desired.; // Shouldn't be a fall through.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:149,pipeline,pipeline,149,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,1,['pipeline'],['pipeline']
Deployability,"// In v3, properties were written as pointers, so read now and install:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:63,install,install,63,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['install'],['install']
Deployability,"// Include the EOF.; // Otherwise, we have to pre-expand this argument, populating Result. To do; // this, we set up a fake TokenLexer to lex from the unexpanded argument; // list. With this installed, we lex expanded tokens until we hit the EOF; // token at the end of the unexp list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp:191,install,installed,191,interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp,1,['install'],['installed']
Deployability,// Include the parts of the LTO configuration that affect code generation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:32,configurat,configuration,32,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,1,['configurat'],['configuration']
Deployability,"// Increments for worksharing loops (LB = LB + ST; UB = UB + ST).; // Used for directives with static scheduling.; // In combined construct, add combined version that use CombLB and CombUB; // base variables for the update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:216,update,update,216,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update']
Deployability,// Index is updated to the potentially translated insertion lane.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:12,update,updated,12,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['update'],['updated']
Deployability,// Index to the pipeline that is currently being fitted,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:16,pipeline,pipeline,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['pipeline'],['pipeline']
Deployability,// Indicates whether this instance has integrated backend using; // internal LLVM infrastructure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.h:39,integrat,integrated,39,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.h,1,['integrat'],['integrated']
Deployability,"// Info about function range. A function can be split into multiple; // non-continuous ranges, each range corresponds to one FuncRange.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h:76,continuous,continuous,76,interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ProfiledBinary.h,1,['continuous'],['continuous']
Deployability,// Inform the Frame Information that we have a patchpoint in this function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:47,patch,patchpoint,47,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,2,['patch'],['patchpoint']
Deployability,// Informations about how this configuration was built.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkCode.h:31,configurat,configuration,31,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkCode.h,1,['configurat'],['configuration']
Deployability,"// Init Session (get protocol, run authentication, ...); // type of authentication:; // 0 (new), 1 (existing), 2 (updated offset)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:114,update,updated,114,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['update'],['updated']
Deployability,"// Initialize the FileManager. We can't do this in update(), since that; // performs the initialization too late (once both target and language; // options are read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:51,update,update,51,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,1,['update'],['update']
Deployability,"// Initialize the stack printer after installing the one-shot pipe signal; // handler, so we can perform a sigaction() for SIGPIPE on Unix if requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/InitLLVM.cpp:38,install,installing,38,interpreter/llvm-project/llvm/lib/Support/InitLLVM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/InitLLVM.cpp,1,['install'],['installing']
Deployability,"// Initially insert an invalid entry for this loop. If the insertion; // succeeds, proceed to actually compute a backedge-taken count and; // update the value. The temporary CouldNotCompute value tells SCEV; // code elsewhere that it shouldn't attempt to request a new; // backedge-taken count, which could result in infinite recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:142,update,update,142,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['update'],['update']
Deployability,"// Initially, ParentInsertPts is empty and ParentPtsFreq is 0. Every child; // will update its parent's ParentInsertPts and ParentPtsFreq.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp:84,update,update,84,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,1,['update'],['update']
Deployability,// Insert a new conditional branch and a new unconditional branch.; // Also update the ImmBranch as well as adding a new entry for the new branch.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:76,update,update,76,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,3,['update'],['update']
Deployability,// Insert a setreg instruction to update the Mode register.; // It is possible (though unlikely) for an instruction to require a change to; // the value of disjoint parts of the Mode register when we don't know the; // value of the intervening bits. In that case we need to use more than one; // setreg instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp:34,update,update,34,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIModeRegister.cpp,1,['update'],['update']
Deployability,// Insert an element into the in-degree map and initialize to zero. The; // count will get updated in the next step.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp:91,update,updated,91,interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp,1,['update'],['updated']
Deployability,"// Insert new branches and update the successors of the split block. This; // may create unconditional branches to the layout successor, etc., but; // that will be cleaned up later. For now, make sure that correct code is; // generated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:27,update,update,27,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,1,['update'],['update']
Deployability,"// Insert stores after in the loop exit blocks. Each exit block gets a; // store of the live-out values that feed them. Since we've already told; // the SSA updater about the defs in the loop and the preheader; // definition, it is all set and we can start using it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp:157,update,updater,157,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,1,['update'],['updater']
Deployability,"// Insert the Patchable Event Call instruction, that gets lowered properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:14,Patch,Patchable,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['Patch'],['Patchable']
Deployability,"// Insert the Patchable Typed Event Call instruction, that gets lowered properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:14,Patch,Patchable,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['Patch'],['Patchable']
Deployability,// Insert the new retain and release calls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:29,release,release,29,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,// Insert the patchpoint instruction before the call generated by the target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:14,patch,patchpoint,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['patch'],['patchpoint']
Deployability,"// Insert update just before the check, so we call runtime only just; // before the report.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:10,update,update,10,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['update'],['update']
Deployability,"// Insert was the last node entry, update stops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:35,update,update,35,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['update'],['update']
Deployability,// Insert-or-update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:13,update,update,13,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['update'],['update']
Deployability,"// Inserted, update offset and leaf size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:13,update,update,13,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['update'],['update']
Deployability,"// Inserts key,value pair into the map if the key isn't already in the map.; // If the key is already in the map, it returns false and doesn't update the; // value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DenseMap.h:143,update,update,143,interpreter/llvm-project/llvm/include/llvm/ADT/DenseMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DenseMap.h,3,['update'],['update']
Deployability,"// Install FFT reference range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3,Install,Install,3,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['Install'],['Install']
Deployability,"// Install SigPipe handler to handle kKeepAlive failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Install,Install,3,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['Install'],['Install']
Deployability,"// Install Termination handler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Install,Install,3,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['Install'],['Install']
Deployability,// Install a handler to truncate the buffer to the correct size on exit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Path.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/Support/Path.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Path.cpp,1,['Install'],['Install']
Deployability,"// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,1,['Install'],['Install']
Deployability,"// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,1,['Install'],['Install']
Deployability,"// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,1,['Install'],['Install']
Deployability,"// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,1,['Install'],['Install']
Deployability,"// Install a new wrapper around SetDirectoryAutoAdd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,1,['Install'],['Install']
Deployability,"// Install a new wrapper around the Merge function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,2,['Install'],['Install']
Deployability,"// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx:3,Install,Install,3,core/meta/src/TGenericClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGenericClassInfo.cxx,1,['Install'],['Install']
Deployability,"// Install a value representing the fact that this location is effectively; // written to in this block. As there's no reserved value, instead use; // a value number that is never generated. Pick the value number for the; // first instruction in the block, def'ing this location, which we know; // this block never used anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['Install'],['Install']
Deployability,// Install all the subexpressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderStmt.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Serialization/ASTReaderStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderStmt.cpp,1,['Install'],['Install']
Deployability,// Install an instruction selector pass using; // the ISelDag to gen BPF code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp,1,['Install'],['Install']
Deployability,// Install an instruction selector pass using; // the ISelDag to gen Mips code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetMachine.cpp,1,['Install'],['Install']
Deployability,// Install an instruction selector pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp,1,['Install'],['Install']
Deployability,// Install an instruction selector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,5,['Install'],['Install']
Deployability,"// Install argument in static data member to be accessed below through static CINT interface functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Install,Install,3,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['Install'],['Install']
Deployability,// Install definitions to make Objective-C++ ARC work well with various; // C++ Standard Library implementations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,1,['Install'],['Install']
Deployability,// Install function-like macro info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['Install'],['Install']
Deployability,"// Install if required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:3,Install,Install,3,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['Install'],['Install']
Deployability,"// Install interrupt and message input handlers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:3,Install,Install,3,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,4,['Install'],['Install']
Deployability,"// Install interrupt and terminal input handlers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:3,Install,Install,3,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['Install'],['Install']
Deployability,"// Install named set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Install,Install,3,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,3,['Install'],['Install']
Deployability,"// Install new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:3,Install,Install,3,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['Install'],['Install']
Deployability,"// Install new object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:3,Install,Install,3,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx,1,['Install'],['Install']
Deployability,"// Install seg violation handler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:3,Install,Install,3,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['Install'],['Install']
Deployability,// Install standard binary operators.; // 1 is lowest precedence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,18,['Install'],['Install']
Deployability,// Install the body into the most deeply-nested case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,1,['Install'],['Install']
Deployability,"// Install the built-in type for 'Class', ignoring the current definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['Install'],['Install']
Deployability,"// Install the built-in type for 'SEL', ignoring the current definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['Install'],['Install']
Deployability,"// Install the built-in type for 'id', ignoring the current definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['Install'],['Install']
Deployability,// Install the declarator into the current TagDecl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['Install'],['Install']
Deployability,// Install the declarator into the interface decl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['Install'],['Install']
Deployability,// Install the enumerator constant into EnumDecl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['Install'],['Install']
Deployability,// Install the logical handler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,1,['Install'],['Install']
Deployability,// Install the new array. Clear all the buckets to empty.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SmallPtrSet.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/Support/SmallPtrSet.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SmallPtrSet.cpp,2,['Install'],['Install']
Deployability,// Install the new type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['Install'],['Install']
Deployability,// Install the property declarator into interfaceDecl.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['Install'],['Install']
Deployability,"// Install things like __POWERPC__, __GNUC__, etc into the macro table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp:3,Install,Install,3,interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,1,['Install'],['Install']
Deployability,// Install those PHI values into the live-in value array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:3,Install,Install,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,2,['Install'],['Install']
Deployability,// Installation path candidate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h:3,Install,Installation,3,interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/ROCm.h,1,['Install'],['Installation']
Deployability,// Installs new handler that causes crash on allocation failure. It is called by; // InitLLVM.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ErrorHandling.cpp:3,Install,Installs,3,interpreter/llvm-project/llvm/lib/Support/ErrorHandling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ErrorHandling.cpp,1,['Install'],['Installs']
Deployability,"// Instantiate integrator for convolution integrand",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:15,integrat,integrator,15,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['integrat'],['integrator']
Deployability,// Instrs to update the destination and source addresses.; // Update phi instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGNonTrivialStruct.cpp:13,update,update,13,interpreter/llvm-project/clang/lib/CodeGen/CGNonTrivialStruct.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGNonTrivialStruct.cpp,2,"['Update', 'update']","['Update', 'update']"
Deployability,"// Instruct that functions for COFF/CodeView targets should start with a; // patchable instruction, but only on x86/x64. Don't forward this to ARM/ARM64; // backends as they don't need it -- instructions on these architectures are; // always atomically patchable at runtime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp:77,patch,patchable,77,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,2,['patch'],['patchable']
Deployability,"// Instruction issued. Transition to the IS_EXECUTING state, and update; // all the register definitions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:65,update,update,65,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['update'],['update']
Deployability,// Instructions are added to Def's user list if the attached; // debug records use Def. Update those now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:88,Update,Update,88,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,1,['Update'],['Update']
Deployability,"// Instructions dispatched to the Scheduler are internally classified based on; // the instruction stage (see Instruction::InstrStage).; //; // An Instruction dispatched to the Scheduler is added to the WaitSet if not; // all its register operands are available, and at least one latency is; // unknown. By construction, the WaitSet only contains instructions that are; // in the IS_DISPATCHED stage.; //; // An Instruction transitions from the WaitSet to the PendingSet if the; // instruction is not ready yet, but the latency of every register read is; // known. Instructions in the PendingSet can only be in the IS_PENDING or; // IS_READY stage. Only IS_READY instructions that are waiting on memory; // dependencies can be added to the PendingSet.; //; // Instructions in the PendingSet are immediately dominated only by; // instructions that have already been issued to the underlying pipelines. In; // the presence of bottlenecks caused by data dependencies, the PendingSet can; // be inspected to identify problematic data dependencies between; // instructions.; //; // An instruction is moved to the ReadySet when all register operands become; // available, and all memory dependencies are met. Instructions that are; // moved from the PendingSet to the ReadySet must transition to the 'IS_READY'; // stage.; //; // On every cycle, the Scheduler checks if it can promote instructions from the; // PendingSet to the ReadySet.; //; // An Instruction is moved from the ReadySet to the `IssuedSet` when it starts; // exection. This event also causes an instruction state transition (i.e. from; // state IS_READY, to state IS_EXECUTING). An Instruction leaves the IssuedSet; // only when it reaches the write-back stage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:890,pipeline,pipelines,890,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['pipeline'],['pipelines']
Deployability,// Instructions that use an in-order dispatch/issue processor resource must be; // issued immediately to the pipeline(s). Any other in-order buffered; // resources (i.e. BufferSize=1) is consumed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp:109,pipeline,pipeline,109,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,1,['pipeline'],['pipeline']
Deployability,// Instructions with memoperands in the epilog are updated with; // conservative values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:51,update,updated,51,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['update'],['updated']
Deployability,"// Integrate function over this bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:3,Integrat,Integrate,3,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['Integrat'],['Integrate']
Deployability,"// Integrate one of the basis functions. Takes a function that represents the; // indefinite integral, some parameters, and a flag that indicates whether the; // basis function is symmetric or antisymmetric. This information is used to; // evaluate the integrals for the ""Minus"" and ""Sum"" cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:3,Integrat,Integrate,3,roofit/roofitcore/src/RooTruthModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx,1,['Integrat'],['Integrate']
Deployability,"// Integrate the third derivative of s(x)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:3,Integrat,Integrate,3,hist/hist/src/TSpline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx,1,['Integrat'],['Integrate']
Deployability,"// Integrate with crash reporter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:3,Integrat,Integrate,3,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['Integrat'],['Integrate']
Deployability,"// Integrate with macOS crash reporter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TErrorDefaultHandler.cxx:3,Integrat,Integrate,3,core/base/src/TErrorDefaultHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TErrorDefaultHandler.cxx,1,['Integrat'],['Integrate']
Deployability,"// Integrating also over x, so both x and sigma should now be shape servers of the integral",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx:3,Integrat,Integrating,3,roofit/roofitcore/test/testRooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRealIntegral.cxx,1,['Integrat'],['Integrating']
Deployability,"// Integration and derivation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Integrat,Integration,3,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['Integrat'],['Integration']
Deployability,"// Integration over 'mixState'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Integrat,Integration,3,roofit/roofit/src/RooBMixDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx,1,['Integrat'],['Integration']
Deployability,"// Integration over 'mixState' and 'tagFlav'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Integrat,Integration,3,roofit/roofit/src/RooBMixDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx,1,['Integrat'],['Integration']
Deployability,"// Integration over 'rhoQ'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Integrat,Integration,3,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,1,['Integrat'],['Integration']
Deployability,"// Integration over 'tag'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:3,Integrat,Integration,3,roofit/roofit/src/RooBCPEffDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx,3,['Integrat'],['Integration']
Deployability,"// Integration over 'tag' and 'rhoQ'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:3,Integrat,Integration,3,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,1,['Integrat'],['Integration']
Deployability,"// Integration over 'tagFlav'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:3,Integrat,Integration,3,roofit/roofit/src/RooBMixDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx,1,['Integrat'],['Integration']
Deployability,"// Interface to force RooRealIntegral to offer given observable for internal integration; // even if this is deemed unsafe. This default implementation returns always false",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:77,integrat,integration,77,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,1,['integrat'],['integration']
Deployability,// Interfaces to the major aspects of target machine information:; //; // -- Instruction opcode and operand information; // -- Pipelines and scheduling information; // -- Stack frame information; // -- Selection DAG lowering information; // -- Call lowering information; //; // N.B. These objects may change during compilation. It's not safe to cache; // them between functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:127,Pipeline,Pipelines,127,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,1,['Pipeline'],['Pipelines']
Deployability,"// Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEvePad.h:74,update,updates,74,graf3d/eve/inc/TEvePad.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEvePad.h,1,['update'],['updates']
Deployability,"// Internal function to get the normalization set for the integrated; // function. By default, we will take the normalization set from the function; // proxy, but _funcNormSet will be used if it is set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:58,integrat,integrated,58,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Deployability,"// Interprocedural constant propagation now that basic cleanup has occurred; // and prior to optimizing globals.; // FIXME: This position in the pipeline hasn't been carefully considered in; // years, it should be re-analyzed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:145,pipeline,pipeline,145,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// Interval definition, continuous and discrete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h:24,continuous,continuous,24,tmva/tmva/inc/TMVA/Interval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h,2,['continuous'],['continuous']
Deployability,// IntrinsicTypes is unmasked TA version index. Need to update it; // if there is merge operand (It is always in first operand).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp:56,update,update,56,interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Support/RISCVVIntrinsicUtils.cpp,1,['update'],['update']
Deployability,"// Invalidate other so it will not release.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:35,release,release,35,interpreter/cling/include/cling/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h,2,['release'],['release']
Deployability,// Invoke the callbacks registered for the various extension points.; // Custom pipelines should use these to invoke the callbacks registered; // by TargetMachines and other clients.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:80,pipeline,pipelines,80,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['pipeline'],['pipelines']
Deployability,// Is this an alloca in the caller? This is distinct from the attribute case; // above because attributes aren't updated within the inliner itself and we; // always want to catch the alloca derived case.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:113,update,updated,113,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['update'],['updated']
Deployability,// Is this instruction explicitly required not to update flags?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:50,update,update,50,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['update'],['update']
Deployability,"// Is this l-value object safe for use as integration observable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:42,integrat,integration,42,roofit/roofitcore/inc/RooAbsCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h,1,['integrat'],['integration']
Deployability,"// Is this the first addition of a branch (and we are learning and we are in; // the expected TTree), then prefill the cache. (We expect that in future; // release the Prefill-ing will be the default so we test for that inside the; // LearnPrefill call).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:156,release,release,156,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['release'],['release']
Deployability,// Issue IR to the underlying pipelines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp:30,pipeline,pipelines,30,interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp,1,['pipeline'],['pipelines']
Deployability,"// Issue sequence of spills for cs regs. The first spill may be converted; // to a pre-decrement store later by emitPrologue if the callee-save stack; // area allocation can't be combined with the local stack area allocation.; // For example:; // stp x22, x21, [sp, #0] // addImm(+0); // stp x20, x19, [sp, #16] // addImm(+2); // stp fp, lr, [sp, #32] // addImm(+4); // Rationale: This sequence saves uop updates compared to a sequence of; // pre-increment spills like stp xi,xj,[sp,#-16]!; // Note: Similar rationale and sequence for restores in epilog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:405,update,updates,405,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['update'],['updates']
Deployability,"// IssueWidth is the maximum number of instructions that may be scheduled in; // the same per-cycle group. This is meant to be a hard in-order constraint; // (a.k.a. ""hazard""). In the GenericScheduler strategy, no more than; // IssueWidth micro-ops can ever be scheduled in a particular cycle.; //; // In practice, IssueWidth is useful to model any bottleneck between the; // decoder (after micro-op expansion) and the out-of-order reservation; // stations or the decoder bandwidth itself. If the total number of; // reservation stations is also a bottleneck, or if any other pipeline stage; // has a bandwidth limitation, then that can be naturally modeled by adding an; // out-of-order processor resource.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:576,pipeline,pipeline,576,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['pipeline'],['pipeline']
Deployability,// It could be one of the following cases:; // { v = x; cond-update-stmt }; // { v = x; cond-expr-stmt }; // { cond-expr-stmt; v = x; }; // form 45,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:61,update,update-stmt,61,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['update'],['update-stmt']
Deployability,"// It is common for the ivars for read-only assign properties to; // always be stored retained, so their release requirement cannot be; // be determined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:105,release,release,105,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['release'],['release']
Deployability,"// It is not safe to load directly from the pointer, but we can still peek; // through gep offsets and check if it safe to load from a base address with; // updated alignment. If it is, we can shuffle the element(s) into place; // after loading.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:157,update,updated,157,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['update'],['updated']
Deployability,// It is only safe to move the retain to the store if we can prove; // conservatively that nothing besides the release can decrement reference; // counts in between the retain and the store.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:111,release,release,111,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,1,['release'],['release']
Deployability,// It is possible the node has been remapped to another node and had; // its Id updated in the Value to Id table. The node it remapped to; // may not have been processed yet. Look up the Id in the Id to Value; // table and re-check the Processed state. If the node hasn't been; // remapped we'll get the same state as we got earlier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp:80,update,updated,80,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp,1,['update'],['updated']
Deployability,// It is safe to remove CmpInstr if EFLAGS is updated again or killed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:46,update,updated,46,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['updated']
Deployability,// It is safe to remove CmpInstr if EFLAGS is updated again.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:46,update,updated,46,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['update'],['updated']
Deployability,"// It is unlikely that releasing memory is delegated to a destructor; // inside a destructor of a shared pointer, because it's fairly hard; // to pass the information that the pointer indeed needs to be; // released into it. So we're only interested in the innermost; // destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:207,release,released,207,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['release'],['released']
Deployability,"// It may be possible to update the tree without recalculating it, but; // we do not know yet how to do it, and it happens rarely in practice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:25,update,update,25,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['update'],['update']
Deployability,"// It may happen that there are some new nodes in the CFG that are result of; // the ongoing batch update, but we cannot really pretend that they don't; // exist -- we won't see any outgoing or incoming edges to them, so it's; // fine to discover them here, as they would end up appearing in the CFG at; // some point anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:99,update,update,99,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['update'],['update']
Deployability,"// It may not be immediately possible to identify the MachineInstr that; // defines a VReg, it can depend for example on the order blocks are; // emitted in. When this happens, or when further analysis is needed later,; // produce an instruction like this:; //; // DBG_INSTR_REF !123, !456, %0:gr64; //; // i.e., point the instruction at the vreg, and patch it up later in; // MachineFunction::finalizeDebugInstrRefs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp:352,patch,patch,352,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp,1,['patch'],['patch']
Deployability,// It only make sense to toggle these between clobbering the; // addend/subtrahend/minuend one of the multiplicands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp:25,toggle,toggle,25,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInstrInfo.cpp,1,['toggle'],['toggle']
Deployability,// It was a declaration for our prototype. This entry was allocated in the; // beginning. Update the count to match the existing declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Module.cpp:90,Update,Update,90,interpreter/llvm-project/llvm/lib/IR/Module.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Module.cpp,1,['Update'],['Update']
Deployability,// It's common to see a debug user between From and DomPoint. Move it; // after DomPoint to preserve the variable update without any reordering.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:114,update,update,114,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,1,['update'],['update']
Deployability,"// It's not uncommon to pass a tracked object into the thread; // as 'void *arg', and then release it inside the thread.; // FIXME: We could build a much more precise model for these functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp:91,release,release,91,interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/RetainSummaryManager.cpp,1,['release'],['release']
Deployability,"// It's ok if the branch is the integration variable itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:32,integrat,integration,32,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Deployability,"// It's tempting to use replaceAllUsesWith here to fully replace the old; // comparison, but that's not immediately safe, since users of the old; // comparison may not be dominated by the new comparison. Instead, just; // update the branch to use the new comparison; in the common case this; // will make old comparison dead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:222,update,update,222,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['update'],['update']
Deployability,"// Iterate over all definitions of the instruction, and update the; // cells accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp:56,update,update,56,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.cpp,1,['update'],['update']
Deployability,// Iterate over all instructions:; // - dbg.declare -> add single location variable record; // - dbg.* -> Add fragments to FragmentMap; // - untagged store -> Add fragments to FragmentMap and update; // UntaggedStoreVars.; // We need to add fragments for untagged stores too so that we can correctly; // clobber overlapped fragment locations later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:192,update,update,192,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['update'],['update']
Deployability,"// Iterate through (possibly several) operands to DBG_VALUEs and update; // each. For DBG_PHIs, only one operand will be present.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:65,update,update,65,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['update'],['update']
Deployability,"// Iterate through all the SCEVUnknown instances and call their; // destructors, so that they release their references to their values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:94,release,release,94,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['release'],['release']
Deployability,// Iterate through inline frameworks/libraries from interface file and find; // match based on install name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.cpp:95,install,install,95,interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.cpp,1,['install'],['install']
Deployability,// Iterate while we still have blocks to update.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:41,update,update,41,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['update'],['update']
Deployability,// Iterators; // children = the base and the updater,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:45,update,updater,45,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['update'],['updater']
Deployability,"// Jitted; // If some other test case called EnableThreadSafety, the error printed here is of the form; // ""SysError in <TFile::TFile>: file /definitely/not/a/valid/path/f.root can not be opened No such file or; // directory\nError in <TReentrantRWLock::WriteUnLock>: Write lock already released for 0x55f179989378\n"" but the; // address printed changes every time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_snapshot.cxx:287,release,released,287,tree/dataframe/test/dataframe_snapshot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_snapshot.cxx,1,['release'],['released']
Deployability,"// Jitted; // the error printed here is; // ""SysError in <TFile::TFile>: file /definitely/not/a/valid/path/f.root can not be opened No such file or; // directory\nError in <TReentrantRWLock::WriteUnLock>: Write lock already released for 0x55f179989378\n"" but the; // address printed changes every time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_snapshot.cxx:224,release,released,224,tree/dataframe/test/dataframe_snapshot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_snapshot.cxx,1,['release'],['released']
Deployability,"// Join values from predecessors. Updates LiveInIdx, and writes output; // into JoinedInLocs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:34,Update,Updates,34,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['Update'],['Updates']
Deployability,// Just add the register. The height will be updated later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:45,update,updated,45,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['update'],['updated']
Deployability,"// Just transferring between blocks in the same function, simply update the; // parent fields in the instructions...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/SymbolTableListTraitsImpl.h:65,update,update,65,interpreter/llvm-project/llvm/lib/IR/SymbolTableListTraitsImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/SymbolTableListTraitsImpl.h,1,['update'],['update']
Deployability,// KCFI assumes patchable-function-prefix is the same for all indirectly; // called functions. Store the expected offset for code generation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:16,patch,patchable-function-prefix,16,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['patch'],['patchable-function-prefix']
Deployability,// Keep a clone of the terminator for MSSA updates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:43,update,updates,43,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updates']
Deployability,// Keep a stack of positions of lbrace tokens. We will; // update information about whether an lbrace starts a; // braced init list or a different block during the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:59,update,update,59,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['update'],['update']
Deployability,"// Keep mapping of seens pair of old-style CU <-> SP, and update pointers to; // point from SP to CU after a block is completly parsed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp:58,update,update,58,interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/MetadataLoader.cpp,1,['update'],['update']
Deployability,"// Keep official list updated with active TSecContexts",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSecContext.cxx:22,update,updated,22,net/net/src/TSecContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSecContext.cxx,2,['update'],['updated']
Deployability,// Keep the CFG updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp:16,update,updated,16,interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IfConversion.cpp,2,['update'],['updated']
Deployability,// Keep the ReverseNonLocalDeps map up to date so we can efficiently; // update this when we remove instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:73,update,update,73,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['update'],['update']
Deployability,// Keep the ReverseNonLocalPtrDeps map up to date so we can efficiently; // update MemDep when we remove instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:76,update,update,76,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['update'],['update']
Deployability,// Keep the address of the original variable for future update at the end; // of the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:56,update,update,56,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['update'],['update']
Deployability,"// Keep the expected type, only update the location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:32,update,update,32,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['update'],['update']
Deployability,"// Keep the function entry aligned, taking patchable-function-prefix into; // account if set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp:43,patch,patchable-function-prefix,43,interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp,1,['patch'],['patchable-function-prefix']
Deployability,// Keep the list of legalized updates for a deterministic order of updates; // when using a GraphDiff for incremental updates in the DominatorTree.; // The list is kept in reverse to allow popping from end.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGDiff.h:30,update,updates,30,interpreter/llvm-project/llvm/include/llvm/Support/CFGDiff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGDiff.h,3,['update'],['updates']
Deployability,"// Keep the state consistent. In particular prevent change in the state of; // AutoLoading and AutoParsing allowance and gROOT->GetListOfClasses(); // and the later update/modification to the autoparsing state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx:165,update,update,165,core/meta/src/TEnum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TEnum.cxx,1,['update'],['update']
Deployability,"// Keep toggle button",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:8,toggle,toggle,8,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['toggle'],['toggle']
Deployability,"// Keep track if we have a memory access before an SP pre-increment, in this; // case we need to validate later that the update amount respects the red; // zone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp:121,update,update,121,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoadStoreOptimizer.cpp,1,['update'],['update']
Deployability,"// Keep track of the Call array index needing a forward reference.; // We will save the location of the ValueInfo needing an update, but; // can only do so once the std::vector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:125,update,update,125,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// Keep track of the Callsites array index needing a forward reference.; // We will save the location of the ValueInfo needing an update, but; // can only do so once the SmallVector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:130,update,update,130,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// Keep track of the Refs array index needing a forward reference.; // We will save the location of the ValueInfo needing an update, but; // can only do so once the std::vector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:125,update,update,125,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// Keep track of the TypeIdCompatibleVtableInfo array index needing a; // forward reference. We will save the location of the ValueInfo needing an; // update, but can only do so once the std::vector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:151,update,update,151,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// Keep track of the TypeTests array index needing a forward reference.; // We will save the location of the GUID needing an update, but; // can only do so once the std::vector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:125,update,update,125,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// Keep track of the VTableFuncs array index needing a forward reference.; // We will save the location of the ValueInfo needing an update, but; // can only do so once the std::vector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:132,update,update,132,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,"// Keep track of the array index needing a forward reference.; // We will save the location of the GUID needing an update, but; // can only do so once the caller's std::vector is finalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:115,update,update,115,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['update'],['update']
Deployability,// Keep track of the dominator tree updates needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:36,update,updates,36,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['update'],['updates']
Deployability,"// Keep track of the first handle for each file descriptor, since there are; // multiple in the case of an archive. This is used later in the case of; // ThinLTO parallel backends to ensure that each file is only opened and; // released once.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp:228,release,released,228,interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,1,['release'],['released']
Deployability,"// Keep track of the nodes and edges we last saw. Then, in onPassEntry,; // we update the node count and edge count from the subset of these nodes that; // survived.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp:79,update,update,79,interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,1,['update'],['update']
Deployability,"// Keep track of which of retain, release, autorelease, and retain_block; // are actually present in this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:34,release,release,34,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['release'],['release']
Deployability,// Keep trying to update max until we succeed or another thread produces; // a bigger max than us.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h:18,update,update,18,interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,1,['update'],['update']
Deployability,"// Keep writing types, declarations, and declaration update records; // until we've emitted all of them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:53,update,update,53,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['update'],['update']
Deployability,"// Kernel patches thunk calls in runtime, these should never be conditional.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:10,patch,patches,10,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['patch'],['patches']
Deployability,// LCSSA must be performed on the outermost affected loop. The unrolled; // loop's last loop latch is guaranteed to be in the outermost loop; // after LoopInfo's been updated by LoopInfo::erase.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp:167,update,updated,167,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnroll.cpp,1,['update'],['updated']
Deployability,"// LLVM generic code will try to expand memcpy into load/store pairs at this; // stage which is before quite a few IR optimization passes, therefore the; // loads and stores could potentially be moved apart from each other which; // will cause trouble to memcpy pattern matcher inside kernel eBPF JIT; // compilers.; //; // When -bpf-expand-memcpy-in-order specified, we want to defer the expand; // of memcpy to later stage in IR optimization pipeline so those load/store; // pairs won't be touched and could be kept in order. Hence, we set; // MaxStoresPerMem* to zero to disable the generic getMemcpyLoadsAndStores; // code path, and ask LLVM to use target expander EmitTargetCodeForMemcpy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp:444,pipeline,pipeline,444,interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp,1,['pipeline'],['pipeline']
Deployability,"// LLVM is not installed. Try resolving clang from its usual location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:15,install,installed,15,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['install'],['installed']
Deployability,"// LM : update also the step sizes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/HessianGradientCalculator.cxx:8,update,update,8,math/minuit2/src/HessianGradientCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/HessianGradientCalculator.cxx,1,['update'],['update']
Deployability,"// LM : update also the user state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FunctionMinimum.h:8,update,update,8,math/minuit2/inc/Minuit2/FunctionMinimum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FunctionMinimum.h,1,['update'],['update']
Deployability,"// LR is a callee-save register, but we must treat it as clobbered by any call; // site. Hence we include LR in the scratch registers, which are in turn added; // as implicit-defs for stackmaps and patchpoints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:198,patch,patchpoints,198,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['patch'],['patchpoints']
Deployability,"// LR is a callee-save register, but we must treat it as clobbered by any call; // site. Hence we include LR in the scratch registers, which are in turn added; // as implicit-defs for stackmaps and patchpoints. The same reasoning applies; // to CTR, which is used by any indirect call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:198,patch,patchpoints,198,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['patch'],['patchpoints']
Deployability,"// LSR may at times remove all uses of an induction variable from a loop.; // The only remaining use is the PHI in the exit block.; // When this is the case, if the exit value of the IV can be calculated using; // SCEV, we can replace the exit block PHI with the final value of the IV and; // skip the updates in each loop iteration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:302,update,updates,302,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['update'],['updates']
Deployability,"// LT_OS; // FIXME: It seems we need to update the flags of all new strict nodes.; // Otherwise, mayRaiseFPException in MI will return false due to; // NoFPExcept = false by default. However, I didn't find it in other; // patches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:40,update,update,40,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,"['patch', 'update']","['patches', 'update']"
Deployability,// Lanai Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp:29,Configurat,Configuration,29,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiTargetMachine.cpp,1,['Configurat'],['Configuration']
Deployability,"// Last combined viewer/scene clip (set in scene::update)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h:50,update,update,50,graf3d/gl/inc/TGLSceneInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h,1,['update'],['update']
Deployability,// Last field was a bitfield. Must update the info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:35,update,update,35,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['update'],['update']
Deployability,// Last field was unnamed. Must update skip info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:32,update,update,32,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['update'],['update']
Deployability,// Last updated loop counter for the lastprivate conditional var.; // int<xx> last_iv = 0;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:8,update,updated,8,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['update'],['updated']
Deployability,// LastValueMap is updated with the values for the current loop; // which are used the next time this function is called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:19,update,updated,19,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['update'],['updated']
Deployability,// Leave the signal handler enabled. It will be removed when the lock is; // released.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp:77,release,released,77,interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/LockFileManager.cpp,1,['release'],['released']
Deployability,// Legacy CUDA kernel configuration call,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:22,configurat,configuration,22,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['configurat'],['configuration']
Deployability,"// Legacy case of @implementation with no corresponding @interface.; // Build, chain & install the interface decl into the identifier.; // FIXME: Do we support attributes on the @implementation? If so we should; // copy them over.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:87,install,install,87,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['install'],['install']
Deployability,"// Legacy dataset conversion happens here. Legacy RooDataHist inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 2 ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:234,install,installed,234,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['install'],['installed']
Deployability,"// Legacy dataset conversion happens here. Legacy RooDataSet inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 1 ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:233,install,installed,233,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['install'],['installed']
Deployability,"// LegalizeUpdates function simplifies updates assuming a graph structure.; // This function serves double purpose:; // a) It removes redundant updates, which makes it easier to reverse-apply; // them when traversing CFG.; // b) It optimizes away updates that cancel each other out, as the end result; // is the same.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h:39,update,updates,39,interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CFGUpdate.h,3,['update'],['updates']
Deployability,"// Let's update fCumulSizes for the rest of the code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:9,update,update,9,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['update'],['update']
Deployability,// Levarge the 32-bit discriminator field of debug data to store the ID; // and type of a callsite probe. This gets rid of the dependency on; // plumbing a customized metadata through the codegen pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfileProbe.cpp:196,pipeline,pipeline,196,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfileProbe.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfileProbe.cpp,1,['pipeline'],['pipeline']
Deployability,"// Lex name of the macro after either #ifdef or #define. We could have used; // LexIdentifier(), but it has special handling of ""include"" word, which; // could result in awkward diagnostic errors. Consider:; // ----; // #ifdef include; // class ...; // ----; // LexIdentifier() will engage LexInclude(), which will complain about; // missing file with name ""class"". Instead, prepLexMacroName() will treat; // ""include"" as a normal macro name.; //; // On entry, CurPtr points to the end of a preprocessing directive word.; // The method allows for whitespaces between the preprocessing directive; // and the macro name. The allowed whitespaces are ' ' and '\t'.; //; // If the first non-whitespace symbol after the preprocessing directive; // is a valid start symbol for an identifier (i.e. [a-zA-Z_]), then; // the method updates TokStart to the position of the first non-whitespace; // symbol, sets CurPtr to the position of the macro name's last symbol,; // and returns a string reference to the macro name. Otherwise,; // TokStart is set to the first non-whitespace symbol after the preprocessing; // directive, and the method returns an empty string reference.; //; // In all cases, TokStart may be used to point to the word following; // the preprocessing directive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGLexer.h:822,update,updates,822,interpreter/llvm-project/llvm/lib/TableGen/TGLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGLexer.h,1,['update'],['updates']
Deployability,"// Like static constructors, the remote target MCJIT support doesn't handle; // this yet. It could. FIXME.; // Delete the EE - we need to tear it down *before* we terminate the session; // with the remote, otherwise it'll crash when it tries to release resources; // on a remote that has already been disconnected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp:245,release,release,245,interpreter/llvm-project/llvm/tools/lli/lli.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp,1,['release'],['release']
Deployability,// Line in which we build up the resulting unwrapped line.; // FIXME: Investigate changing UnwrappedLine to a pointer type and using it; // instead of rolling our own type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Macros.h:151,rolling,rolling,151,interpreter/llvm-project/clang/lib/Format/Macros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Macros.h,1,['rolling'],['rolling']
Deployability,// Link the SchedGroups in the best found pipeline.; // Tmplated against the SchedGroup iterator (either reverse or forward).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:42,pipeline,pipeline,42,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['pipeline'],['pipeline']
Deployability,"// LinkModeAuto will link with the default link mode for the installation,; // which is dependent on the value of LLVM_LINK_LLVM_DYLIB, and fall back; // to the alternative if the required libraries are not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:61,install,installation,61,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,1,['install'],['installation']
Deployability,"// List internally integrated observables and factorizing observables as analytically integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:19,integrat,integrated,19,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['integrat'],['integrated']
Deployability,"// List numerically integrated and summed observables as numerically integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:20,integrat,integrated,20,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['integrat'],['integrated']
Deployability,"// List of configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h:11,configurat,configuration,11,proof/proof/inc/TVirtualPacketizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualPacketizer.h,1,['configurat'],['configuration']
Deployability,"// List of objects to send updates of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofPlayer.h:27,update,updates,27,proof/proofplayer/inc/TProofPlayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofPlayer.h,1,['update'],['updates']
Deployability,"// List of passes explicitly substituted by this target. Normally this is; // empty, but it is a convenient way to suppress or replace specific passes; // that are part of a standard pass pipeline without overridding the entire; // pipeline. This mechanism allows target options to inherit a standard pass's; // user interface. For example, a target may disable a standard pass by; // default by substituting a pass ID of zero, and the user may still enable; // that standard pass with an explicit command line option.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:188,pipeline,pipeline,188,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,2,['pipeline'],['pipeline']
Deployability,"// Lists that keep the information for each dependency. All the lists are; // meant to be updated in sync. We are adopting separate lists instead of a; // list of structs, because that simplifies forwarding the actions list to; // initialize the inputs of the base Action class.; /// The dependence actions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Action.h:90,update,updated,90,interpreter/llvm-project/clang/include/clang/Driver/Action.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Action.h,1,['update'],['updated']
Deployability,// Live-in value filled in by updateSSA once it is known.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:30,update,updateSSA,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['update'],['updateSSA']
Deployability,// Load any relevant update records.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:21,update,update,21,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['update']
Deployability,"// Load automatically RooFitMore library that automatically will register the; // integrator classes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooFitMoreLib.cxx:82,integrat,integrator,82,roofit/roofitmore/src/RooFitMoreLib.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooFitMoreLib.cxx,1,['integrat'],['integrator']
Deployability,// Load folding won't effect the undef register update since the input is; // a GPR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:48,update,update,48,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,2,['update'],['update']
Deployability,// Load sample profile before running the LTO optimization pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:59,pipeline,pipeline,59,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// Load the pending visible updates for this decl context, if it has any.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:28,update,updates,28,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['update'],['updates']
Deployability,// Load the updated vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:12,update,updated,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['update'],['updated']
Deployability,"// Load's results are { Loaded value, Updated pointer, Chain }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:38,Update,Updated,38,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,1,['Update'],['Updated']
Deployability,"// Loads and stores with immediate offsets can be updated, but only if; // the new offset isn't negative.; // The MachineOperand containing the offset immediate is the last one; // before predicates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:50,update,updated,50,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['update'],['updated']
Deployability,// Local function that updates the declaration specifiers with; // protocol information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:23,update,updates,23,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['update'],['updates']
Deployability,// Local function that updates the declaration specifiers with; // type argument information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:23,update,updates,23,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['update'],['updates']
Deployability,// Local linkage must have default visibility.; // auto-upgrade `hidden` and `protected` for old bitcode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:56,upgrade,upgrade,56,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,3,['upgrade'],['upgrade']
Deployability,"// Locate file name part in URL and update refFileName accordingly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:36,update,update,36,roofit/roofitcore/test/stressRooFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx,1,['update'],['update']
Deployability,// Location of the token parsed before HandleComment is called. This is; // updated every time Preprocessor::Lex lexes a new token.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.h:76,update,updated,76,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.h,1,['update'],['updated']
Deployability,"// Lock the TClass for updates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:23,update,updates,23,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['update'],['updates']
Deployability,// Lock the mutex while we verify / update the ObjCImageInfos map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:36,update,update,36,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,1,['update'],['update']
Deployability,"// Locking - can take/release via const handle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLLockable.h:22,release,release,22,graf3d/gl/inc/TGLLockable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLLockable.h,1,['release'],['release']
Deployability,"// Look at its register uses to see if it only can only receive zeros; // into its false lanes which would then produce zeros. Also check that; // the output register is also defined by an FalseLanesZero instruction; // so that if tail-predication happens, the lanes that aren't updated will; // still be zeros.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:279,update,updated,279,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['update'],['updated']
Deployability,"// Look for a number prefix and parse that, and split out any trailing; // string into GoodVersion.PatchSuffix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:99,Patch,PatchSuffix,99,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['Patch'],['PatchSuffix']
Deployability,"// Look for a suitable configuration starting from the end, so we can; // find the configuration for the specific language first, and the default; // configuration (which can only be at slot 0) after it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:23,configurat,configuration,23,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,3,['configurat'],['configuration']
Deployability,"// Look for compounds until none are found, only update the bundle when; // a compound is found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp:49,update,update,49,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCompound.cpp,1,['update'],['update']
Deployability,// Look for instructions using constant vector. Promote that constant to a; // global variable. Create as few loads of this variable as possible and; // update the uses accordingly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp:153,update,update,153,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,1,['update'],['update']
Deployability,// Look for intrinsic functions and CallInst that need to be upgraded. We use; // make_early_inc_range here because we may remove some functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:61,upgrade,upgraded,61,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['upgrade'],['upgraded']
Deployability,// Look for intrinsic functions which need to be upgraded at some point; // and functions that need to have their function attributes upgraded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:49,upgrade,upgraded,49,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,2,['upgrade'],['upgraded']
Deployability,"// Look for predicate registers defined by this instruction. It's ok; // to speculate such an instruction, but the predicate register cannot; // be used outside of this block (or else it won't be possible to; // update the use of it after predication). PHI uses will be updated; // to use a result of a MUX, and a MUX cannot be created for predicate; // registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:212,update,update,212,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,2,['update'],"['update', 'updated']"
Deployability,"// Look for situation like this:; // %reg101 = MOV %reg100; // %reg102 = ...; // %reg103 = ADD %reg102, %reg101; // ... = %reg103 ...; // %reg100 = MOV %reg103; // If there is a reversed copy chain from reg101 to reg103, commute the ADD; // to eliminate an otherwise unavoidable copy.; // FIXME:; // We can extend the logic further: If an pair of operands in an insn has; // been merged, the insn could be regarded as a virtual copy, and the virtual; // copy could also be used to construct a copy chain.; // To more generally minimize register copies, ideally the logic of two addr; // instruction pass should be integrated with register allocation pass where; // interference graph is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:614,integrat,integrated,614,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['integrat'],['integrated']
Deployability,"// Look for the desired declaration. While we are looking for it, we; // update the state so that we know the component where a given list; // starts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:73,update,update,73,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['update'],['update']
Deployability,"// Look in the registry for Visual Studio installs, and use that to get; // a toolchain path. VS2017 and newer don't get added to the registry.; // So if we find something here, we know that it's an older version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h:42,install,installs,42,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h,1,['install'],['installs']
Deployability,// Look through a 'not' of the condition operand by swapping A/B.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:61,A/B,A/B,61,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['A/B'],['A/B']
Deployability,// Loop info metadata may contain line locations. Update them to have no; // value in the new subprogram since the outlined code could be from; // several locations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/IROutliner.cpp:50,Update,Update,50,interpreter/llvm-project/llvm/lib/Transforms/IPO/IROutliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/IROutliner.cpp,1,['Update'],['Update']
Deployability,// Loop metadata needs to be updated so that the start and end locs; // reference inlined-at locations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:29,update,updated,29,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['update'],['updated']
Deployability,"// Loop over all entries and create/update corresponding metadata.; // TODO If we cannot read some of the trees, is the file corrupted as well?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:36,update,update,36,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['update'],['update']
Deployability,"// Loop over all integrated observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:17,integrat,integrated,17,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Deployability,// Loop over all uses of the Last LEA and update their operands. Note; // that the correctness of this has already been checked in the; // isReplaceable function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp:42,update,update,42,interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86OptimizeLEAs.cpp,1,['update'],['update']
Deployability,// Loop over the various components which exist and select the best GCC; // installation available. GCC installs are ranked by version number.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:76,install,installation,76,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,2,['install'],"['installation', 'installs']"
Deployability,// Loop structure should be the following:; //; // PreHeader; // NewPreHeader; // Header; // ...; // Latch; // NewExit (PN); // EpilogPreHeader; // EpilogHeader; // ...; // EpilogLatch; // Exit (EpilogPN); // Update PHI nodes at NewExit and Exit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:209,Update,Update,209,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,1,['Update'],['Update']
Deployability,"// Loop through 'Tokens', expanding them into ResultToks. Keep; // track of whether we change anything. If not, no need to keep them. If so,; // we install the newly expanded sequence as the new 'Tokens' list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:148,install,install,148,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['install'],['install']
Deployability,"// Loop through all loop latches (branches controlling backedges). We need; // to place a safepoint on every backedge (potentially).; // Note: In common usage, there will be only one edge due to LoopSimplify; // having run sometime earlier in the pipeline, but this code must be correct; // w.r.t. loops with multiple backedges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp:247,pipeline,pipeline,247,interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp,1,['pipeline'],['pipeline']
Deployability,"// Loop through all of the predecessors of the 'this' block (which will be the; // predecessors of the New block), replace the specified successor 'this'; // block to point at the New block and update any PHI nodes in 'this' block.; // If there were PHI nodes in 'this' block, the PHI nodes are updated; // to reflect that the incoming branches will be from the New block and not; // from predecessors of the 'this' block.; // Save predecessors to separate vector before modifying them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp:194,update,update,194,interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,2,['update'],"['update', 'updated']"
Deployability,"// LoopMBB:; // %OldVal = phi [ %OrigVal, StartMBB ], [ %Dest, UpdateMBB ]; // %RotatedOldVal = RLL %OldVal, 0(%BitShift); // CompareOpcode %RotatedOldVal, %Src2; // BRC KeepOldMask, UpdateMBB",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:63,Update,UpdateMBB,63,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,2,['Update'],['UpdateMBB']
Deployability,"// Loops interchanged, update LoopList accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:23,update,update,23,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,1,['update'],['update']
Deployability,"// Lower a patchpoint of the form:; // [<def>], <id>, <numBytes>, <target>, <numArgs>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:11,patch,patchpoint,11,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,4,['patch'],['patchpoint']
Deployability,"// Lower a patchpoint of the form:; // [<def>], <id>, <numBytes>, <target>, <numArgs>, <cc>, ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:11,patch,patchpoint,11,interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,1,['patch'],['patchpoint']
Deployability,"// Lower an SME LDR/STR ZA intrinsic; // Case 1: If the vector number (vecnum) is an immediate in range, it gets; // folded into the instruction; // ldr(%tileslice, %ptr, 11) -> ldr [%tileslice, 11], [%ptr, 11]; // Case 2: If the vecnum is not an immediate, then it is used to modify the base; // and tile slice registers; // ldr(%tileslice, %ptr, %vecnum); // ->; // %svl = rdsvl; // %ptr2 = %ptr + %svl * %vecnum; // %tileslice2 = %tileslice + %vecnum; // ldr [%tileslice2, 0], [%ptr2, 0]; // Case 3: If the vecnum is an immediate out of range, then the same is done as; // case 2, but the base and slice registers are modified by the greatest; // multiple of 15 lower than the vecnum and the remainder is folded into the; // instruction. This means that successive loads and stores that are offset from; // each other can share the same base and slice register updates.; // ldr(%tileslice, %ptr, 22); // ldr(%tileslice, %ptr, 23); // ->; // %svl = rdsvl; // %ptr2 = %ptr + %svl * 15; // %tileslice2 = %tileslice + 15; // ldr [%tileslice2, 7], [%ptr2, 7]; // ldr [%tileslice2, 8], [%ptr2, 8]; // Case 4: If the vecnum is an add of an immediate, then the non-immediate; // operand and the immediate can be folded into the instruction, like case 2.; // ldr(%tileslice, %ptr, %vecnum + 7); // ldr(%tileslice, %ptr, %vecnum + 8); // ->; // %svl = rdsvl; // %ptr2 = %ptr + %svl * %vecnum; // %tileslice2 = %tileslice + %vecnum; // ldr [%tileslice2, 7], [%ptr2, 7]; // ldr [%tileslice2, 8], [%ptr2, 8]; // Case 5: The vecnum being an add of an immediate out of range is also handled,; // in which case the same remainder logic as case 3 is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:864,update,updates,864,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['update'],['updates']
Deployability,// Lower type metadata and the type.test intrinsic in the ThinLTO; // post link pipeline after ICP. This is to enable usage of the type; // tests in ICP sequences.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:80,pipeline,pipeline,80,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['pipeline'],['pipeline']
Deployability,"// M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; // Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:222,integrat,integration,222,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Deployability,"// MCJIT will want to write into this buffer, and we don't want that; // because the file has probably just been mmapped. Instead we make; // a copy. The filed-based buffer will be released when it goes; // out of scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/toy.cpp:181,release,released,181,interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/toy.cpp,3,['release'],['released']
Deployability,"// MI is an instruction that accepts an optional alignment hint,; // and which was already lowered to LoweredMI. If the alignment; // of the original memory operand is known, update LoweredMI to; // an instruction with the corresponding hint set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp:175,update,update,175,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZAsmPrinter.cpp,1,['update'],['update']
Deployability,"// MI was inserted in the middle of the bundle, so its neighbors' flags are; // already fine. Update MI's bundle flags manually.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstrBuilder.h:94,Update,Update,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstrBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstrBuilder.h,1,['Update'],['Update']
Deployability,// MOPSMemorySetTaggingPseudo has two defs; the intrinsic call has only one.; // Therefore an additional virtual register is requried for the updated size; // operand. This value is not accessible via the semantics of the intrinsic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:142,update,updated,142,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['update'],['updated']
Deployability,"// MRI.replaceVregUsesWith does not allow to update the subregister,; // so instead of doing the use-iteration here, create a copy into a; // ""non-subregistered"" register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp:45,update,update,45,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonEarlyIfConv.cpp,1,['update'],['update']
Deployability,"// MSVC doesn't have a predefined macro indicating if optimizations are enabled.; // Use _DEBUG instead. This macro actually corresponds to the choice between; // debug and release CRTs, but it is a reasonable proxy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp:173,release,release,173,interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,1,['release'],['release']
Deployability,"// MSVC generates the following sequence for a CodeView module:; // S_OBJNAME --> Set 'CurrentObjectName'.; // S_COMPILE2 --> Set the compile unit name using 'CurrentObjectName'.; // ...; // S_BUILDINFO --> Extract the source name.; //; // Clang generates the following sequence for a CodeView module:; // S_COMPILE2 --> Set the compile unit name to empty string.; // ...; // S_BUILDINFO --> Extract the source name.; //; // For both toolchains, update the compile unit name from S_BUILDINFO.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:446,update,update,446,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['update'],['update']
Deployability,"// MSVC generates the following sequence for a CodeView module:; // S_OBJNAME --> Set 'CurrentObjectName'.; // S_COMPILE3 --> Set the compile unit name using 'CurrentObjectName'.; // ...; // S_BUILDINFO --> Extract the source name.; //; // Clang generates the following sequence for a CodeView module:; // S_COMPILE3 --> Set the compile unit name to empty string.; // ...; // S_BUILDINFO --> Extract the source name.; //; // For both toolchains, update the compile unit name from S_BUILDINFO.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:446,update,update,446,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,1,['update'],['update']
Deployability,"// Mac Catalyst variant of Apple's iOS deployment target.; // Shader Stages; // The order of these values matters, and must be kept in sync with the; // language options enum in Clang. The ordering is enforced in; // static_asserts in Triple.cpp and in Clang.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:39,deploy,deployment,39,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,1,['deploy'],['deployment']
Deployability,// Mach-O specific configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/MachO/MachOConfig.h:19,configurat,configuration,19,interpreter/llvm-project/llvm/include/llvm/ObjCopy/MachO/MachOConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/MachO/MachOConfig.h,1,['configurat'],['configuration']
Deployability,// Machine dominator tree for the cur loop; // State that is updated as we process loops,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:61,update,updated,61,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['update'],['updated']
Deployability,"// Machine function splitter uses the basic block sections feature. Both; // cannot be enabled at the same time. Basic block sections takes precedence.; // FIXME: In principle, BasicBlockSection::Labels and splitting can used; // together. Update this check once we have addressed any issues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:240,Update,Update,240,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['Update'],['Update']
Deployability,"// Machine-CFG mutators; /// Add Pred as a predecessor of this MachineBasicBlock. Don't do this; /// unless you know what you're doing, because it doesn't update Pred's; /// successors list. Use Pred->addSuccessor instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:155,update,update,155,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['update']
Deployability,"// Machine-CFG mutators; /// Add Succ as a successor of this MachineBasicBlock. The Predecessors list; /// of Succ is automatically updated. PROB parameter is stored in; /// Probabilities list. The default probability is set as unknown. Mixing; /// known and unknown probabilities in successor list is not allowed. When all; /// successors have unknown probabilities, 1 / N is returned as the; /// probability for each successor, where N is the number of successors.; ///; /// Note that duplicate Machine CFG edges are not allowed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:132,update,updated,132,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['update'],['updated']
Deployability,// MachineModuleAnalysis is a module analysis pass that is never invalidated; // because we don't run any module pass in codegen pipeline. This is very; // important because the codegen state is stored in MMI which is the analysis; // result of MachineModuleAnalysis. MMI should not be recomputed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePassManager.cpp:129,pipeline,pipeline,129,interpreter/llvm-project/llvm/lib/CodeGen/MachinePassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePassManager.cpp,1,['pipeline'],['pipeline']
