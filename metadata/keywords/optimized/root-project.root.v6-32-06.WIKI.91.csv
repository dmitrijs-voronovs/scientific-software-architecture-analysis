quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"nd cosine transforms are available; DCT-I - kind=0; DCT-II - kind=1; DCT-III - kind=2; DCT-IV - kind=3; DST-I - kind=4; DST-II - kind=5; DST-III - kind=6; DST-IV - kind=7; -option : consists of 2 parts - flag option and an option to create a new TVirtualFFT; - flag option: choosing how much time should be spent in planning the transform:; Possible options:; ""ES"" (from ""estimate"") - no time in preparing the transform,; but probably sub-optimal performance; ""M"" (from ""measure"") - some time spend in finding the optimal way; to do the transform; ""P"" (from ""patient"") - more time spend in finding the optimal way; to do the transform; ""EX"" (from ""exhaustive"") - the most optimal way is found; This option should be chosen depending on how many transforms of the; same size and type are going to be done.; Planning is only done once, for the first transform of this size and type.; - option allowing to choose between the global fgFFT and a new TVirtualFFT object; """" - default, changes and returns the global fgFFT variable; ""K"" (from ""keep"")- without touching the global fgFFT,; creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; Examples of valid options: ""ES K"", ""EX"", etc. TVirtualFFT* GetCurrentTransform(); static: return current fgFFT. void SetTransform(TVirtualFFT* fft); static: set the current transfrom to parameter. const char * GetDefaultFFT(); static: return the name of the default fft. void SetDefaultFFT(const char* name = """"); static: set name of default fft. Int_t * GetN() const. Int_t GetNdim() const. Option_t * GetType() const. Int_t GetSign() const. Option_t * GetTransformFlag() const. void Init(Option_t* flag, Int_t sign, const Int_t* kind). Bool_t IsInplace() const. void GetPoints(Double_t* data, Bool_t fromInput = kFALSE) const. Double_t GetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const. Double_t GetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const. void GetPointComplex(Int_t ipoint, Double_t& re, Double_t& i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualFFT.html:12373,variab,variable,12373,root/html528/TVirtualFFT.html,https://root.cern,https://root.cern/root/html528/TVirtualFFT.html,6,['variab'],['variable']
Modifiability,"nd cosine transforms are available; DCT-I - kind=0; DCT-II - kind=1; DCT-III - kind=2; DCT-IV - kind=3; DST-I - kind=4; DST-II - kind=5; DST-III - kind=6; DST-IV - kind=7; -option : consists of 2 parts - flag option and an option to create a new TVirtualFFT; - flag option: choosing how much time should be spent in planning the transform:; Possible options:; ""ES"" (from ""estimate"") - no time in preparing the transform,; but probably sub-optimal performance; ""M"" (from ""measure"") - some time spend in finding the optimal way; to do the transform; ""P"" (from ""patient"") - more time spend in finding the optimal way; to do the transform; ""EX"" (from ""exhaustive"") - the most optimal way is found; This option should be chosen depending on how many transforms of the; same size and type are going to be done.; Planning is only done once, for the first transform of this size and type.; - option allowing to choose between the global fgFFT and a new TVirtualFFT object; """" - default, changes and returns the global fgFFT variable; ""K"" (from ""keep"")- without touching the global fgFFT,; creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; Examples of valid options: ""ES K"", ""EX"", etc. TVirtualFFT* GetCurrentTransform(); static: return current fgFFT. void SetTransform(TVirtualFFT* fft); static: set the current transfrom to parameter. const char * GetDefaultFFT(); static: return the name of the default fft. void SetDefaultFFT(const char* name = """"); static: set name of default fft. TVirtualFFT(); {}. Int_t * GetN() const. Int_t GetNdim() const. Option_t * GetType() const. Int_t GetSign() const. Option_t * GetTransformFlag() const. void Init(Option_t* flag, Int_t sign, const Int_t* kind). Bool_t IsInplace() const. void GetPoints(Double_t* data, Bool_t fromInput = kFALSE) const. Double_t GetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const. Double_t GetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const. void GetPointComplex(Int_t ipoint, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualFFT.html:13046,variab,variable,13046,root/html602/TVirtualFFT.html,https://root.cern,https://root.cern/root/html602/TVirtualFFT.html,4,['variab'],['variable']
Modifiability,"nd delete all elements NB: Collection does not own elements,...Definition RooLinkedList.cxx:578; RooLinkedList::Addvirtual void Add(TObject *arg)Definition RooLinkedList.h:73; RooLinkedList::beginRooLinkedListIterImpl begin() constDefinition RooLinkedList.cxx:761; RooLinkedList::FindObjectTObject * FindObject(const char *name) const overrideReturn pointer to object with given name.Definition RooLinkedList.cxx:534; RooMomentDefinition RooMoment.h:26; RooMsgService::instancestatic RooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cxx:345; RooMsgService::isActivebool isActive(T self, RooFit::MsgTopic topic, RooFit::MsgLevel level)Check if logging is active for given object/topic/RooFit::MsgLevel combination.Definition RooMsgService.h:186; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooNumIntConfig::defaultConfigstatic RooNumIntConfig & defaultConfig()Return reference to instance of default numeric integrator configuration object.Definition RooNumIntConfig.cxx:44; RooParamBinningImplementation of RooAbsBinning that constructs a binning with a range definition that depends on ext...Definition RooParamBinning.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::removevoid remove(const char *name=nullptr, bool deleteToo=true)Remove object with given name, or last object added if no name is given.Definition RooPlot.cxx:868; RooPlot::drawBeforebool drawBefore(const char *before, const char *target)Change the order in which our contained objects are drawn so that the target object is drawn just bef...Definition RooPlot.cxx:906; RooPlot::findObjectTObject * findObject(const char *name, const TClass *tClass=nullptr) constFind the named object in our list of items and return a pointer to it.Definition RooPlot.cxx:942; RooPlot::getNormVarsconst RooArgSet * getNormVars() constDefinition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:245208,config,configuration,245208,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"nd efficiency (rejection) versus; signal efficiency plot (first call of this function); - the function returns the signal efficiency at background efficiency; indicated in theString. ""theString"" must have two entries:; [0]: ""Efficiency""; [1]: the value of background efficiency at which the signal efficiency; is to be returned. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodCuts* DynamicCast(TMVA::IMethod* method); this is a workaround which is necessary since CINT is not capable of handling dynamic casts. { return dynamic_cast<MethodCuts*>(method); }. Double_t GetSeparation(TH1* , TH1* ) const; also overwrite --> not computed for cuts. { return -1; }. Double_t GetSeparation(TMVA::PDF* = 0, TMVA::PDF* = 0) const; { return -1; }. Double_t GetSignificance( void ); { return -1; }. Double_t GetmuTransform(TTree* ); { return -1; }. Double_t GetRarity(Double_t , TMVA::Types::ESBType ) const; rarity distributions (signal or background (default) is uniform in [0,1]). { return 0; }. void SetTestSignalEfficiency(Double_t effS); { fTestSignalEff = effS; }. const Ranking* CreateRanking(); ranking of input variables (not available for cuts). { return 0; }. void CheckSetup(); no check of options at this place. {}. void MatchParsToCuts( const std::vector<Double_t>&, Double_t*, Double_t* ); the definition of fit parameters can be different from the actual; cut requirements; these functions provide the matching. » Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodCuts.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCuts.html:26560,variab,variables,26560,root/html532/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCuts.html,2,['variab'],['variables']
Modifiability,"nd executed normally; - 1: command is blank, ignored; - 2: command line unreadable, ignored; - 3: unknown command, ignored; - 4: abnormal termination (e.g., MIGRAD not converged); - 5: command is a request to read PARAMETER definitions; - 6: 'SET INPUT' command; - 7: 'SET TITLE' command; - 8: 'SET COVAR' command; - 9: reserved; - 10: END command; - 11: EXIT or STOP command; - 12: RETURN command. Definition at line 1310 of file TMinuit.cxx. ◆ mncont(). void TMinuit::mncont ; (; Int_t ; ike1, . Int_t ; ike2, . Int_t ; nptu, . Double_t * ; xptu, . Double_t * ; yptu, . Int_t & ; ierrf . ). virtual . Find points along a contour where FCN is minimum. ; Find NPTU points along a contour where the function FMIN (X(KE1),X(KE2)) = AMIN+UP. where FMIN is the minimum of FCN with respect to all; the other NPAR-2 variable parameters (if any).; IERRF on return will be equal to the number of points found:; NPTU if normal termination with NPTU points found; -1 if errors in the calling sequence (KE1, KE2 not variable); 0 if less than four points can be found (using MNMNOT); n>3 if only n points can be found (n < NPTU) input arguments: parx, pary, devs, ngrid ; . Definition at line 1395 of file TMinuit.cxx. ◆ mncrck(). void TMinuit::mncrck ; (; TString ; cardbuf, . Int_t ; maxcwd, . TString & ; comand, . Int_t & ; lnc, . Int_t ; mxp, . Double_t * ; plist, . Int_t & ; llist, . Int_t & ; ierr, . Int_t ; isyswr . ). virtual . Cracks the free-format input. ; Cracks the free-format input, expecting zero or more; alphanumeric fields (which it joins into COMAND(1:LNC)); followed by one or more numeric fields separated by; blanks and/or one comma. The numeric fields are put into; the LLIST (but at most MXP) elements of PLIST. IERR :; - = 0 if no errors,; - = 1 if error(s). . Definition at line 1677 of file TMinuit.cxx. ◆ mncros(). void TMinuit::mncros ; (; Double_t & ; aopt, . Int_t & ; iercr . ). virtual . Find point where MNEVAL=AMIN+UP. ; Find point where MNEVAL=AMIN+UP, along the line thro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:46490,variab,variable,46490,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['variab'],['variable']
Modifiability,"nd fY arrays with the sorted values. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from RooPlotable; double _normValue = 0.0;  ; TString _yAxisLabel;  ; double _ymax = 0.0;  ; double _ymin = 0.0;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooEllipse.h>. Inheritance diagram for RooEllipse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooEllipse() [1/2]. RooEllipse::RooEllipse ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:33704,inherit,inherited,33704,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,2,['inherit'],['inherited']
Modifiability,"nd fZaxis, but for one-dimensional histograms only the X-axis is relevant, while for two-dimensional histograms the X-axis and Y-axis are relevant. See the class TAxis for a description of all the access methods. The bin edges are always stored internally in double precision.; You can examine the actual edges / limits of the histogram bins by accessing the axis parameters, like in the example below:; const Int_t XBINS = 5; const Int_t YBINS = 5;; Double_t xEdges[XBINS + 1] = {0.0, 0.2, 0.3, 0.6, 0.8, 1.0};; Double_t yEdges[YBINS + 1] = {-1.0, -0.4, -0.2, 0.5, 0.7, 1.0};. TH2* h = new TH2D(""h2"", ""h2"", XBINS, xEdges, YBINS, yEdges);; TAxis* xAxis = h->GetXaxis(); TAxis* yAxis = h->GetYaxis();. cout << ""Third bin on Y-dimension: "" << endl; // corresponds to; // [-0.2, 0.5]; cout << ""\tLower edge: "" << yAxis->GetBinLowEdge(3) << endl;; cout << ""\tCenter: "" << yAxis->GetBinCenter(3) << endl;; cout << ""\tUpper edge: "" << yAxis->GetBinUpEdge(3) << endl;; 3.3 Bin Numbering; All histogram types support fixed or variable bin sizes. 2-D histograms may have fixed size bins along X and variable size bins along Y or vice-versa. The functions to fill, manipulate, draw, or access histograms are identical in both cases.; 3.3.1 Convention; For all histogram types: nbins , xlow , xup; Bin# 0 contains the underflow.; Bin# 1 contains the first bin with low-edge ( xlow INCLUDED).; The second to last bin (bin# nbins) contains the upper-edge (xup EXCLUDED).; The Last bin (bin# nbins+1) contains the overflow.; In case of 2-D or 3-D histograms, a “global bin” number is defined. For example, assuming a 3-D histogram h with binx, biny, binz, the function returns a global/linear bin number.; Int_t bin = h->GetBin(binx, biny, binz);; This global bin is useful to access the bin information independently of the dimension.; 3.3.2 Re-binning. At any time, a histogram can be re-binned via the TH1::Rebin() method. It returns a new histogram with the re-binned contents. If bin errors were stored, they a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:75377,variab,variable,75377,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"nd if the start of; the TObject parts is at the very beginning of the objects.; Concretly this means that the following code is proper for this class:; ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from; TObject. Bool_t IsTObject() const; Return kTRUE is the class inherits from TObject. Bool_t IsForeign() const; Return kTRUE is the class is Foreign (the class does not have a Streamer method). void PostLoadCheck(); Do the initialization that can only be done after the CINT dictionary has; been fully populated and can not be delayed efficiently. Long_t Property() const; Set TObject::fBits and fStreamerType to cache information about the; class. The bits are; kIsTObject : the class inherits from TObject; kStartWithTObject: TObject is the left-most class in the inheritance tree; kIsForeign : the class doe not have a Streamer method; The value of fStreamerType are; kTObject : the class inherits from TObject; kForeign : the class does not have a Streamer method; kInstrumented: the class does have a Streamer method; kExternal: the class has a free standing way of streaming itself; kEmulatedStreamer: the class is missing its shared library. void SetStreamerImpl(); Internal routine to set fStreamerImpl based on the value of; fStreamerType. void SetCollectionProxy(const ROOT::TCollectionProxyInfo& ); Create the collection proxy object (and the streamer object) from; using the information in the TCollectionProxyInfo. void SetContextMenuTitle(const char* title); Change (i.e. set) the title of the TNamed. void SetGlobalIsA(IsAGlobalFunc_t ); This function installs a global IsA function for this class.; The global IsA function will be used if there is no local IsA function (fIsA). A global IsA function has the signature:. TClass *func( TClass *cl, const void *obj);. 'cl' is a pointer to the TClass object that corresponds to the; 'pointer type' used to retrieve the value 'obj'. For ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClass.html:54301,inherit,inherits,54301,root/html602/TClass.html,https://root.cern,https://root.cern/root/html602/TClass.html,12,['inherit'],"['inheritance', 'inherits']"
Modifiability,"nd member name. ; The member can be a decimal number which allows to access the n-th member. ; Definition at line 76 of file TZIPFile.cxx. ◆ ~TZIPFile(). TZIPFile::~TZIPFile ; (; ). inlineoverride . Definition at line 137 of file TZIPFile.h. Member Function Documentation. ◆ Class(). static TClass * TZIPFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TZIPFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TZIPFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 144 of file TZIPFile.h. ◆ DeclFileName(). static const char * TZIPFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 144 of file TZIPFile.h. ◆ DecodeZip64ExtendedExtraField(). Int_t TZIPFile::DecodeZip64ExtendedExtraField ; (; TZIPMember * ; m, . Bool_t ; global = kTRUE . ). protected . Decode the Zip64 extended extra field. ; If global is true, decode the extra field coming from the central directory, if false decode the extra field coming from the local file header. Returns -1 in case of error, -2 in case Zip64 extra block was not found and 0 in case of success. ; Definition at line 441 of file TZIPFile.cxx. ◆ FindEndHeader(). Long64_t TZIPFile::FindEndHeader ; (; ). protected . Find the end header of the ZIP archive. Returns 0 in case of error. ; Definition at line 98 of file TZIPFile.cxx. ◆ Get(). UInt_t TZIPFile::Get ; (; const void * ; buffer, . Int_t ; bytes . ). protected . Read a ""bytes"" long little-endian integer value from ""buffer"". ; Definition at line 514 of file TZIPFile.cxx. ◆ Get64(). ULong64_t TZIPFile::Get64 ; (; const void * ; buffer, . Int_t ; bytes . ). protected . Read a 8 byte long little-endian integer value from ""buffer"". ; Definition at line 535 of file TZIPFile.cxx. ◆ IsA(). TClass * TZIPFile::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPFile.html:23401,extend,extended,23401,doc/master/classTZIPFile.html,https://root.cern,https://root.cern/doc/master/classTZIPFile.html,1,['extend'],['extended']
Modifiability,"nd of buffer; Int_tTBuffer::fBufSizeSize of buffer; char*TBuffer::fBufferBuffer used to store objects; vector<TVirtualArray*>TBufferFile::fCacheStackStack of pointers to the cache where to temporarily store the value of 'missing' data members; TExMap*TBufferFile::fClassMapMap containing object,class pairs for reading; Int_tTBufferFile::fDisplacementValue to be added to the map offsets; TStreamerInfo*TBufferFile::fInfoPointer to TStreamerInfo object writing/reading the buffer; vector<TStreamerInfo*>TBufferFile::fInfoStackStack of pointers to the TStreamerInfos; TExMap*TBufferFile::fMapMap containing object,offset pairs for reading/writing; Int_tTBufferFile::fMapCountNumber of objects or classes in map; Int_tTBufferFile::fMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tTBufferFile::fPidOffsetOffset to be added to the pid index in this key/buffer.; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; Int_tTBuffer::fVersionBuffer format version; static Int_tTBufferFile::fgMapSizeDefault map size for all TBuffer objects. private:. TBitsfBitsPIDsArray of bits to mark the TProcessIDs uids written to the message; char*fBufCompCompressed buffer; char*fBufCompCurCurrent position in compressed buffer; TClass*fClassIf message is kMESS_OBJECT pointer to object's class; char*fCompPosPosition of fBufCur when message was compressed; Int_tfCompressCompression level from 0 (not compressed) to 9 (max compression); Bool_tfEvolutionTrue if support for schema evolution required; TList*fInfosArray of TStreamerInfo used in WriteObject; UInt_tfWhatMessage type; static Bool_tfgEvolutionTrue if global support for schema evolution required. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMessage(UInt_t what = kMESS_ANY, Int_t bufsiz = TBuffer::kInitialSize); Create a TMessage object for storing objects. The ""what"" ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMessage.html:19797,extend,extending,19797,root/html528/TMessage.html,https://root.cern,https://root.cern/root/html528/TMessage.html,1,['extend'],['extending']
Modifiability,"nd of buffer; Int_tTBuffer::fBufSizeSize of buffer; char*TBuffer::fBufferBuffer used to store objects; vector<TVirtualArray*>TBufferFile::fCacheStackStack of pointers to the cache where to temporarily store the value of 'missing' data members; TExMap*TBufferFile::fClassMapMap containing object,class pairs for reading; Int_tTBufferFile::fDisplacementValue to be added to the map offsets; TStreamerInfo*TBufferFile::fInfoPointer to TStreamerInfo object writing/reading the buffer; vector<TStreamerInfo*>TBufferFile::fInfoStackStack of pointers to the TStreamerInfos; TExMap*TBufferFile::fMapMap containing object,offset pairs for reading/writing; Int_tTBufferFile::fMapCountNumber of objects or classes in map; Int_tTBufferFile::fMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tTBufferFile::fPidOffsetOffset to be added to the pid index in this key/buffer.; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; Int_tTBuffer::fVersionBuffer format version; static Int_tTBufferFile::fgMapSizeDefault map size for all TBuffer objects. private:. vector<Int_t>*fColumnVec!; TString*fInsertQuery!; vector<int,allocator<int> >::iteratorfIter; TSQLRow**fRowPtr!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferSQL(TBuffer::EMode mode, vector<Int_t>* vc, TString* insert_query, TSQLRow** rowPtr); Constructor. TBufferSQL(TBuffer::EMode mode, Int_t bufsiz, vector<Int_t>* vc, TString* insert_query, TSQLRow** rowPtr); Constructor. TBufferSQL(TBuffer::EMode mode, Int_t bufsiz, vector<Int_t>* vc, TString* insert_query, TSQLRow** rowPtr, void* buf, Bool_t adopt = kTRUE); Constructor. TBufferSQL(); Constructor. ~TBufferSQL(); Destructo. void ReadBool(Bool_t& b); Operator>>. void ReadChar(Char_t& c); Operator>>. void ReadShort(Short_t& s); Operator>>. void ReadInt(Int_t& i); Operator>>. void ReadFloat(Float_t& f); Oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBufferSQL.html:18653,extend,extending,18653,root/html526/TBufferSQL.html,https://root.cern,https://root.cern/root/html526/TBufferSQL.html,2,['extend'],['extending']
Modifiability,"nd one single buffer can be the right choice; when one wants to process only a subset of all entries in the tree.; (you know for example the list of entry numbers you want to process).; Making several branches is particularly interesting in the data analysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:. ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : a boolean (Bool_t); * If the address points to a single numerical variable, the leaflist is optional:; int value;; tree->Branch(branchname, &value);; * If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable (even between CINT and compiled code on the platform); TTree (i.e. you will not be ab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:1983,variab,variable,1983,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['variab'],['variable']
Modifiability,"nd optionally second and third; observable to binning in given reference TH1. Used by constructors; that import data from an external TH1. void initialize(const char* binningName = 0, Bool_t fillTree = kTRUE); Initialization procedure: allocate weights array, calculate; multipliers needed for N-space to 1-dim array jump table,; and fill the internal tree with all bin center coordinates. void checkBinBounds() const. RooDataHist(const RooDataHist& other, const char* newname = 0); Copy constructor. RooDataHist(const char* name, const char* title, RooDataHist* h, const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange, Int_t nStart, Int_t nStop, Bool_t copyCache); Constructor of a data hist from (part of) an existing data hist. The dimensions; of the data set are defined by the 'vars' RooArgSet, which can be identical; to 'dset' dimensions, or a subset thereof. Reduced dimensions will be projected; in the output data hist. The optional 'cutVar' formula variable can used to; select the subset of bins to be copied. For most uses the RooAbsData::reduce() wrapper function, which uses this constructor,; is the most convenient way to create a subset of an existing data. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Construct a clone of this dataset that contains only the cached variables. RooAbsData* reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods. ~RooDataHist(); Destructor. Int_t getIndex(const RooArgSet& coord, Bool_t fast = kFALSE). Int_t calcTreeIndex() const; Calculate the index for the weights array corresponding to; to the bin enclosing the current coordinates of the internal argset. void dump2(); Debug stuff, should go... RooPlot * plotOn(RooPlot* frame, RooAbsData::PlotOpt o) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataHist.html:27602,variab,variable,27602,root/html534/RooDataHist.html,https://root.cern,https://root.cern/root/html534/RooDataHist.html,6,['variab'],['variable']
Modifiability,"nd port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. SSL*fSSL; SSL_CTX*fSSLCtx; static charfgSSLCAFile[2147483647]; static charfgSSLCAPath[2147483647]; static charfgSSLUCert[2147483647]; static charfgSSLUKey[2147483647]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSocket. ←; TSSLSocket. Function documentation; void WrapWithSSL(void); Wraps the socket with OpenSSL. TSSLSocket(TInetAddress addr, const char* service, Int_t tcpwindowsize = -1). TSSLSocket(TInetAddress addr, Int_t port, Int_t tcpwindowsize = -1). TSSLSocket(const char* host, const char* service, Int_t tcpwindowsize = -1). TSSLSocket(const char* url, Int_t port, Int_t tcpwindowsize = -1). TSSLSocket(const char* sockpath). TSSLSocket(Int_t desc). TSSLSocket(Int_t desc, const char* sockpath). TSSLSocket(const TSSLSocket& s). ~TSSLSocket(); Close gracefully the connection, and free SSL structures. void Close(Option_t* option = """"); Close the SSL connection. void SetUpSSL(const char* cafile, const char* capath, const char* ucert, const char* ukey); Set up the static configuration variables. Int_t Recv(TMessage*& mess). Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt = kDefault); Receive a raw buffer of specified length bytes. Int_t Send(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSSLSocket.html:11056,Inherit,Inheritance,11056,root/html602/TSSLSocket.html,https://root.cern,https://root.cern/root/html602/TSSLSocket.html,2,['Inherit'],['Inheritance']
Modifiability,"nd print all signals connected to this connection. ;  ; void SendSignal () override;  ; void SetArg (const char *param) override;  ; void SetArg (const Longptr_t *params, Int_t nparam=-1) override;  ; void SetArg (Double_t param) override;  ; void SetArg (Float_t param) override;  ; void SetArg (Long64_t param) override;  ; void SetArg (Long_t param) override;  ; void SetArg (ULong64_t param) override;  ; void SetArg (ULong_t param) override;  ; template<typename T > ; void SetArgImpl (T arg);  ; void UnLockSlot (TQSlot *) const;  Unlock the interpreter and mark the slot as no longer executing. ;  ;  Protected Member Functions inherited from TVirtualQConnection; template<class T , class = typename std::enable_if<std::is_integral<T>::value>::type> ; void SetArg (const T &val);  ; void SetArg (const void *ptr);  ; void SetArgsImpl ();  ; template<typename T , typename... Ts> ; void SetArgsImpl (const T &arg, const Ts &... tail);  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnection.html:22722,inherit,inherited,22722,doc/master/classTQConnection.html,https://root.cern,https://root.cern/doc/master/classTQConnection.html,1,['inherit'],['inherited']
Modifiability,"nd the TGeoRotation for it; TGDMMapHelper<TGeoScale>fsclmap!Map containing scale names and the TGeoScale for it; TGDMMapHelper<TGeoShape>fsolmap!Map containing solid names and the TGeoShape for it; TGDMMapHelper<TGeoVolume>fvolmap!Map containing volume names and the TGeoVolume for it. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolume* GDMLReadFile(const char* filename = ""test.gdml""); creates the new instance of the XMLEngine called 'gdml', using the filename >>; then parses the file and creates the DOM tree. Then passes the DOM to the; next function to translate it. const char* ParseGDML(TXMLEngine* gdml, XMLNodePointer_t node); this function recursively moves thru the DOM tree of the GDML file. It checks for; key words along the way and if a key word is found it calls the corresponding; function to interpret the node. double Evaluate(const char* evalline). Int_t SetAxis(const char* axisString); When using the 'divide' process in the geometry this function; sets the variable 'axis' depending on what is specified. const char* NameShort(const char* name); this function looks thru a string for the chars '0x' next to; each other, when it finds this, it calls another function to strip; the hex address. It does this recursively until the end of the; string is reached, returning a string without any hex addresses. XMLNodePointer_t ConProcess(TXMLEngine* gdml, XMLNodePointer_t node, XMLAttrPointer_t attr); In the define section of the GDML file, constants can be declared.; when the constant keyword is found, this function is called, and the; name and value of the constant is stored in the ""fformvec"" vector as; a TFormula class, representing a constant function. TString GetScale(const char* unit); Throughout the GDML file, a unit can de specified. Whether it be; angular or linear, values can be used as well as abbreviations such as; 'mm' or 'deg'. This function is passed the specified unit and if it is; found, replaces it wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDMLParse.html:10680,variab,variable,10680,root/html532/TGDMLParse.html,https://root.cern,https://root.cern/root/html532/TGDMLParse.html,4,['variab'],['variable']
Modifiability,"nd the TGeoRotation for it; TGDMMapHelper<TGeoScale>fsclmap!Map containing scale names and the TGeoScale for it; TGDMMapHelper<TGeoShape>fsolmap!Map containing solid names and the TGeoShape for it; TGDMMapHelper<TGeoVolume>fvolmap!Map containing volume names and the TGeoVolume for it. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolume* GDMLReadFile(const char* filename = ""test.gdml""); creates the new instance of the XMLEngine called 'gdml', using the filename >>; then parses the file and creates the DOM tree. Then passes the DOM to the; next function to translate it. const char* ParseGDML(TXMLEngine* gdml, XMLNodePointer_t node); this function recursively moves thru the DOM tree of the GDML file. It checks for; key words along the way and if a key word is found it calls the corresponding; function to interpret the node. double Evaluate(const char* evalline). Int_t SetAxis(const char* axisString); When using the 'divide' process in the geometry this function; sets the variable 'axis' depending on what is specified. const char* NameShort(const char* name); this function looks thru a string for the chars '0x' next to; each other, when it finds this, it calls another function to strip; the hex address. It does this recursively until the end of the; string is reached, returning a string without any hex addresses. XMLNodePointer_t ConProcess(TXMLEngine* gdml, XMLNodePointer_t node, XMLAttrPointer_t attr); In the define section of the GDML file, constants can be declared.; when the constant keyword is found, this function is called, and the; name and value of the constant is stored in the ""fformvec"" vector as; a TFormula class, representing a constant function. const char* GetScale(const char* unit); Throughout the GDML file, a unit can de specified. Whether it be; angular or linear, values can be used as well as abbreviations such as; 'mm' or 'deg'. This function is passed the specified unit and if it is; found, replaces i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDMLParse.html:10615,variab,variable,10615,root/html528/TGDMLParse.html,https://root.cern,https://root.cern/root/html528/TGDMLParse.html,2,['variab'],['variable']
Modifiability,"nd the headers will be removed in ROOT 6.34:. RooAbsTestStatistic; RooAbsOptTestStatistic; RooNLLVar; RooChi2Var; RooXYChi2Var. Please use the higher-level functions RooAbsPdf::createNLL() and RooAbsPdf::createChi2() if you want to create objects that represent test statistics.; Change of RooParamHistFunc; The RooParamHistFunc didn’t take any observable RooRealVar as constructor argument. It assumes as observable the internal variables in the passed RooDataHist. This means it was in most contexts unusable, because the input can’t be changed, other than loading a different bin in the dataset.; Furthermore, there was actually a constructor that took a RooAbsArg x, but it was simply ignored.; To fix all these problems, the existing constructors were replaced by a new one that takes the observable explicitly.; Since the old constructors resulted in wrong computation graphs that caused trouble with the new CPU evaluation backend, they had to be removed without deprecation. Please adapt your code if necessary.; Renaming of some RooFit classes; The RooPower was renamed to RooPowerSum, and RooExpPoly was renamed to RooLegacyExpPoly.; This was a necessary change, because the names of these classes introduced in ROOT 6.28 collided with some classes in CMS combine, which were around already long before. Therefore, the classes had to be renamed to not cause any problems for CMS.; In the unlikeliy case where you should have used these new classes for analysis already, please adapt your code to the new names and re-create your workspaces.; RDataFrame. The RDataFrame constructors that take in input one or more file names (or globs thereof) will now infer the format of the dataset, either TTree or RNTuple, that is stored in the first input file. When multiple files are specified, it is assumed that all other files contain a coherent dataset of the same format and with the same schema, exactly as it used to happen with TChain. This automatic inference further contributes towards a ze",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:14328,adapt,adapt,14328,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['adapt'],['adapt']
Modifiability,"nd unbinned:; h->ResetStats();; h->GetXaxis()->SetRange();; for(int i=0; i<10000; i++) h->Fill(85);; results in GetMean and GetStdDev returning 67.5 and 17.5, respectively; you must call TH1::ResetStats again to get consistent binned statistics.; 3.14 Alphanumeric Bin Labels; By default, a histogram axis is drawn with its numeric bin labels. One can specify alphanumeric labels instead.; 3.14.1 Option 1: SetBinLabel; To set an alphanumeric bin label call:; TAxis::SetBinLabel(bin,label);; This can always be done before or after filling. Bin labels will be automatically drawn with the histogram. Histograms with alphanumeric bin labels. See example in $ROOTSYS/tutorials/hist/hlabels1.C , hlabels2.C; 3.14.2 Option 2: Fill; You can also call a Fill() function with one of the arguments being a string:; hist1->Fill(somename,weigth);; hist2->Fill(x,somename,weight);; hist2->Fill(somename,y,weight);; hist2->Fill(somenamex,somenamey,weight);; 3.14.3 Option 3: TTree::Draw; You can use a char* variable type to histogram strings with TTree::Draw().; // here ""Nation"" and ""Division"" are two char* branches of a Tree; tree.Draw(""Nation::Division"", """", ""text"");. Using a *char variable type in TTree::Draw. There is an example in $ROOTSYS/tutorials/tree/cernstaff.C.; If a variable is defined as char* it is drawn as a string by default. You change that and draw the value of char[0] as an integer by adding an arithmetic operation to the expression as shown below.; // draw the integer value of MyChar[0] where ""MyChar"" is char[5]; tree.Draw(""MyChar + 0"");; 3.14.4 Sort Options; When using the options 2 or 3 above, the labels are automatically added to the list (THashList) of labels for a given axis. By default, an axis is drawn with the order of bins corresponding to the filling sequence. It is possible to reorder the axis alphabetically or by increasing or decreasing values. The reordering can be triggered via the TAxis context menu by selecting the menu item “LabelsOption” or by calling dir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:121738,variab,variable,121738,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"nd using as key the parameter index; unsigned intfDimdimension of the function to be minimized ; doublefMinValminimum values ; vector<std::string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; boolfOwnFuncflag to indicate if objective function is managed ; ROOT::Math::GSLSimAnnealingfSolver; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLSimAnMinimizer(int type = 0). Default constructor. ~GSLSimAnMinimizer(). Destructor (no operations). GSLSimAnMinimizer(const GSLSimAnMinimizer &); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html:5572,variab,variable,5572,root/html526/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html,1,['variab'],['variable']
Modifiability,"nd we will not be; 2454 // able to properly copy the collection proxy; 2455 if (fCollectionProxy && !copy->IsZombie()) {; 2456 copy->CopyCollectionProxy(*fCollectionProxy);; 2457 }; 2458 copy->SetClassSize(fSizeof);; 2459 if (fRefProxy) {; 2460 copy->AdoptReferenceProxy( fRefProxy->Clone() );; 2461 }; 2462 TClass::AddClass(const_cast<TClass*>(this));; 2463 return copy;; 2464}; 2465 ; 2466////////////////////////////////////////////////////////////////////////////////; 2467/// Replaces the collection proxy for this class. The provided object is cloned; 2468/// and the copy is then owned by `TClass`.; 2469 ; 2470void TClass::CopyCollectionProxy(const TVirtualCollectionProxy &orig); 2471{; 2472// // This code was used too quickly test the STL Emulation layer; 2473// Int_t k = TClassEdit::IsSTLCont(GetName());; 2474// if (k==1||k==-1) return;; 2475 ; 2476 delete fCollectionProxy;; 2477 fCollectionProxy = orig.Generate();; 2478}; 2479 ; 2480////////////////////////////////////////////////////////////////////////////////; 2481/// Draw detailed class inheritance structure.; 2482/// If a class B inherits from a class A, the description of B is drawn; 2483/// on the right side of the description of A.; 2484/// Member functions overridden by B are shown in class A with a blue line; 2485/// erasing the corresponding member function; 2486 ; 2487void TClass::Draw(Option_t *option); 2488{; 2489 if (!HasInterpreterInfo()) return;; 2490 ; 2491 TVirtualPad::TContext ctxt(kTRUE);; 2492 ; 2493 // Should we create a new canvas?; 2494 TString opt = option;; 2495 if (!ctxt.GetSaved() || !opt.Contains(""same"")) {; 2496 TVirtualPad *padclass = (TVirtualPad*)(gROOT->GetListOfCanvases())->FindObject(""R__class"");; 2497 if (!padclass) {; 2498 gROOT->ProcessLine(""new TCanvas(\""R__class\"",\""class\"",20,20,1000,750);"");; 2499 } else {; 2500 padclass->cd();; 2501 }; 2502 }; 2503 ; 2504 if (gPad); 2505 gPad->DrawClassObject(this,option);; 2506}; 2507 ; 2508/////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:93343,inherit,inheritance,93343,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"nd we will not be; 2521 // able to properly copy the collection proxy; 2522 if (fCollectionProxy && !copy->IsZombie()) {; 2523 copy->CopyCollectionProxy(*fCollectionProxy);; 2524 }; 2525 copy->SetClassSize(fSizeof);; 2526 if (fRefProxy) {; 2527 copy->AdoptReferenceProxy( fRefProxy->Clone() );; 2528 }; 2529 TClass::AddClass(const_cast<TClass*>(this));; 2530 return copy;; 2531}; 2532 ; 2533////////////////////////////////////////////////////////////////////////////////; 2534/// Replaces the collection proxy for this class. The provided object is cloned; 2535/// and the copy is then owned by `TClass`.; 2536 ; 2537void TClass::CopyCollectionProxy(const TVirtualCollectionProxy &orig); 2538{; 2539// // This code was used too quickly test the STL Emulation layer; 2540// Int_t k = TClassEdit::IsSTLCont(GetName());; 2541// if (k==1||k==-1) return;; 2542 ; 2543 delete fCollectionProxy;; 2544 fCollectionProxy = orig.Generate();; 2545}; 2546 ; 2547////////////////////////////////////////////////////////////////////////////////; 2548/// Draw detailed class inheritance structure.; 2549/// If a class B inherits from a class A, the description of B is drawn; 2550/// on the right side of the description of A.; 2551/// Member functions overridden by B are shown in class A with a blue line; 2552/// erasing the corresponding member function; 2553 ; 2554void TClass::Draw(Option_t *option); 2555{; 2556 if (!HasInterpreterInfo()) return;; 2557 ; 2558 TVirtualPad::TContext ctxt(kTRUE);; 2559 ; 2560 // Should we create a new canvas?; 2561 TString opt = option;; 2562 if (!ctxt.GetSaved() || !opt.Contains(""same"")) {; 2563 TVirtualPad *padclass = (TVirtualPad*)(gROOT->GetListOfCanvases())->FindObject(""R__class"");; 2564 if (!padclass) {; 2565 gROOT->ProcessLine(""new TCanvas(\""R__class\"",\""class\"",20,20,1000,750);"");; 2566 } else {; 2567 padclass->cd();; 2568 }; 2569 }; 2570 ; 2571 if (gPad); 2572 gPad->DrawClassObject(this,option);; 2573}; 2574 ; 2575/////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:96094,inherit,inheritance,96094,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"nd() const { return fLower; }; 118 ; 119 double UpperBound() const { return fUpper; }; 120 ; 121 double FixValue() const { return fLower; }; 122 ; 123 // internal to external transformation; 124 double InternalToExternal( double x) const {; 125 return (fTransform.get() ) ? fTransform->Int2ext(x, fLower, fUpper) : x;; 126 }; 127 ; 128 // derivative of the internal to external transformation ( d Int2Ext / d int ); 129 double DerivativeIntToExt ( double x) const {; 130 return (fTransform.get() ) ? fTransform->DInt2Ext( x, fLower, fUpper) : 1.0;; 131 }; 132 ; 133 // external to internal transformation; 134 double ExternalToInternal(double x) const {; 135 return (fTransform.get() ) ? fTransform->Ext2int(x, fLower, fUpper) : x;; 136 }; 137 ; 138private:; 139 ; 140 bool fFix; ///< fix variable; 141 bool fLowBound; ///< has lower bound; 142 bool fUpBound; ///< has upper bound param; 143 bool fBounds; ///< has double bound; 144 std::unique_ptr< MinimizerVariableTransformation> fTransform; ///< pointer to the minimizer transformation; 145 double fLower; ///< lower parameter limit; 146 double fUpper; ///< upper parameter limit; 147 ; 148};; 149 ; 150 } // end namespace Math; 151 ; 152} // end namespace ROOT; 153 ; 154 ; 155#endif /* ROOT_Math_MinimTransformVariable */; 156 ; 157 ; MinimizerVariableTransformation.h; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; ROOT::Math::MinimTransformVariableMinimTransformVariable class Contains meta information of the variables such as bounds,...Definition MinimTransformVariable.h:48; ROOT::Math::MinimTransformVariable::InternalToExternaldouble InternalToExternal(double x) constDefinition MinimTransformVariable.h:124; ROOT::Math::MinimTransformVariable::fTransformstd::unique_ptr< MinimizerVariableTransformation > fTransformpointer to the minimizer transformationDefinition MinimTrans",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimTransformVariable_8h_source.html:4636,variab,variable,4636,doc/master/MinimTransformVariable_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimTransformVariable_8h_source.html,1,['variab'],['variable']
Modifiability,"nd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOnBoundary(const Double_t* point) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternCylPhi.html:4342,Inherit,InheritsFrom,4342,root/html532/TGeoPatternCylPhi.html,https://root.cern,https://root.cern/root/html532/TGeoPatternCylPhi.html,17,['Inherit'],['InheritsFrom']
Modifiability,"nd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOnBoundary(const Double_t* point) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternCylPhi.html:4171,Inherit,InheritsFrom,4171,root/html602/TGeoPatternCylPhi.html,https://root.cern,https://root.cern/root/html602/TGeoPatternCylPhi.html,18,['Inherit'],['InheritsFrom']
Modifiability,"nd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGeoPatternFinder::IsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphPhi.html:4387,Inherit,InheritsFrom,4387,root/html532/TGeoPatternSphPhi.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphPhi.html,5,['Inherit'],['InheritsFrom']
Modifiability,"nd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGeoPatternFinder::IsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t reflect = kFALSE); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternSphR.html:4163,Inherit,InheritsFrom,4163,root/html602/TGeoPatternSphR.html,https://root.cern,https://root.cern/root/html602/TGeoPatternSphR.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGeoPatternFinder::IsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternHoneycomb.html:4221,Inherit,InheritsFrom,4221,root/html532/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html532/TGeoPatternHoneycomb.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nd() const; virtual const char*TObject::GetIconName() const; virtual TGeoMatrix*TGeoPatternFinder::GetMatrix(); virtual const char*TObject::GetName() const; Int_tTGeoPatternFinder::GetNdiv() const; Int_tTGeoPatternFinder::GetNext() const; TGeoNode*TGeoPatternFinder::GetNodeOffset(Int_t idiv); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoPatternFinder::GetStart() const; Double_tTGeoPatternFinder::GetStep() const; TGeoPatternFinder::ThreadData_t&TGeoPatternFinder::GetThreadData() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*TGeoPatternFinder::GetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGeoPatternFinder::IsOnBoundary(const Double_t*) const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoPatternFinder::IsReflected() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGeoPatternFinder::IsSpacedOut() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual TGeoPatternFinder*MakeCopy(Bool_t); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternHoneycomb.html:4202,Inherit,InheritsFrom,4202,root/html602/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html602/TGeoPatternHoneycomb.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nd) override;  ; void MarkForDirectCopy (Int_t devInd, Bool_t) override;  ; void PaintSingleObject (TVirtualGLPainter *) override;  ; void PanObject (TVirtualGLPainter *o, Int_t x, Int_t y) override;  ; Bool_t PlotSelected (TVirtualGLPainter *plot, Int_t px, Int_t py) override;  ; void PrintViewer (TVirtualViewer3D *vv) override;  ; void ReadGLBuffer (Int_t devInd) override;  ; Bool_t ResizeOffScreenDevice (Int_t devInd, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Create new DIB if needed. ;  ; Bool_t SelectManip (TVirtualGLManip *manip, const TGLCamera *camera, const TGLRect *rect, const TGLBoundingBox *sceneBox) override;  ; void SelectOffScreenDevice (Int_t devInd) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLManager;  TGLManager ();  ;  TGLManager (const TGLManager &)=delete;  ; TGLManager & operator= (const TGLManager &)=delete;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32GLManager.html:2090,inherit,inherited,2090,doc/master/classTGWin32GLManager.html,https://root.cern,https://root.cern/doc/master/classTGWin32GLManager.html,2,['inherit'],['inherited']
Modifiability,"nd);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Protected Member Functions; void DoRedraw () override;  Draw selected pattern as current one. ;  ;  Protected Member Functions inherited from TGedSelect; void DoRedraw () override;  Draw separator and arrow. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw small triangle. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedPatternSelect.html:25417,inherit,inherited,25417,doc/master/classTGedPatternSelect.html,https://root.cern,https://root.cern/doc/master/classTGedPatternSelect.html,2,['inherit'],['inherited']
Modifiability,"nd; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TVirtualPad*fCurPadcurrent pad from which to import; TStyle*fCurStylestyle to copy or to rename; Int_tfMode1=new, 2=rename, 3=import; TGTextEntry*fNameTStyle name text entry; TGLabel*fNameLabelname label; TGTextButton*fOKsave button; TStyleManager*fStyleManagerparent style manager; TGTextEntry*fTitleTStyle title text entry; TGLabel*fTitleLabeltitle label; TList*fTrashListFrameto avoid memory leak; TList*fTrashListLayoutto avoid memory leak; TGLabel*fWarnLabellabel for warnings. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStyleDialog(TStyleManager* sm, TStyle* cur, Int_t mode, TVirtualPad* currentPad = 0); Constructor. Create the dialog window and draw it centered over the; main window 'mf'. A pointer to the style to copy or rename is given; by 'cur' and the parameter 'mode' specify the mode:; 1 = copy | 2 = rename | 3 = import from canvas. ~TStyleDialog(); Destructor. void DoCancel(); Slot called when the Cancel button is clicked. Close the window; without saving submitted changes. void DoCloseWindow(); Slot called when the window is closed via the window manager.; Close the window without saving submitted changes. void DoOK(); Slot called when the OK button is clicked. Rename or create the style; before closing the window. void DoUpdate(); Slot called every time the name is changed. Provide some protection; to avoid letting the user use an empty name or an already used one.; A warning message can be shown and the OK button disabled. » Author: Denis F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStyleDialog.html:22423,Inherit,Inheritance,22423,root/html532/TStyleDialog.html,https://root.cern,https://root.cern/root/html532/TStyleDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndEventAddresses(TTree *); TMVA::DataSetFactory::fCorrelationsBool_t fCorrelationsWhether to print correlations or not.Definition DataSetFactory.h:218; TMVA::DataSetFactory::fLoggerMsgLogger * fLogger! message loggerDefinition DataSetFactory.h:235; TMVA::DataSetFactory::ValuePerClassOfTreeTypestd::map< Types::ETreeType, ValuePerClass > ValuePerClassOfTreeTypeDefinition DataSetFactory.h:124; TMVA::DataSetFactory::RenormEventsvoid RenormEvents(DataSetInfo &dsi, EventVectorOfClassesOfTreeType &eventsmap, const EvtStatsPerClass &eventCounts, const TString &normMode)renormalisation of the TRAINING event weightsDefinition DataSetFactory.cxx:1488; TMVA::DataSetFactory::fComputeCorrelationsBool_t fComputeCorrelationsWhether to force computation of correlations or not.Definition DataSetFactory.h:219; TMVA::DataSetFactory::ResetCurrentTreevoid ResetCurrentTree()Definition DataSetFactory.h:204; TMVA::DataSetFactory::CalcCorrelationMatrixTMatrixD * CalcCorrelationMatrix(DataSet *, const UInt_t classNumber)computes correlation matrix for variables ""theVars"" in tree; ""theType"" defines the required event ""ty...Definition DataSetFactory.cxx:548; TMVA::DataSetFactory::CalcCovarianceMatrixTMatrixD * CalcCovarianceMatrix(DataSet *, const UInt_t classNumber)compute covariance matrixDefinition DataSetFactory.cxx:579; TMVA::DataSetFactory::EventVectorstd::vector< Event * > EventVectorDefinition DataSetFactory.h:118; TMVA::DataSetInfoClass that contains all the data information.Definition DataSetInfo.h:62; TMVA::DataSetClass that contains all the data information.Definition DataSet.h:58; TMVA::IncrementDefinition DataSetFactory.h:85; TMVA::Increment::IncrementIncrement(T start)Definition DataSetFactory.h:88; TMVA::Increment::operator()T operator()()Definition DataSetFactory.h:89; TMVA::Increment::valueT valueDefinition DataSetFactory.h:86; TMVA::MsgLoggerostringstream derivative to redirect and format outputDefinition MsgLogger.h:57; TMVA::TreeInfoDefinition DataInputHandler.h:52; TMVA::nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8h_source.html:15274,variab,variables,15274,doc/master/DataSetFactory_8h_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8h_source.html,1,['variab'],['variables']
Modifiability,"ndModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet*_cloneSetInternal clone of p.d.f.; RooAbsReal*_effPointer to efficiency function; RooAbsGenContext*_generatorGenerator context for p.d.f. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); Constructor of generator context for RooEffProd products. ~RooEffGenContext(); Destructor. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate one event. Generate an event from the p.d.f and; then perform an accept/reject sampling based on the efficiency; function. RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0). » Last changed: Thu Nov 3 20:07:59 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooEffGenContext.html:8949,Inherit,Inheritance,8949,root/html532/RooEffGenContext.html,https://root.cern,https://root.cern/root/html532/RooEffGenContext.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndObject(const TObject* obj) const; Color_tGetBackColor() const; UChar_t*GetBackRGBA(); Bool_tGetDrawBack() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Color_tGetFrameColor() const; Bool_tGetFrameFill() const; Float_t*GetFramePoints() const; UChar_t*GetFrameRGBA(); Int_tGetFrameSize() const; TEveFrameBox::EFrameType_eGetFrameType() const; Float_tGetFrameWidth() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTEveRefBackPtr::IncRefCount(TEveElement* re); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTEveRefCnt::OnZeroRefCount(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveFrameBox.html:2774,Inherit,InheritsFrom,2774,root/html532/TEveFrameBox.html,https://root.cern,https://root.cern/root/html532/TEveFrameBox.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ndObject(const TObject* obj) const; Color_tGetBackColor() const; UChar_t*GetBackRGBA(); Bool_tGetDrawBack() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Color_tGetFrameColor() const; Bool_tGetFrameFill() const; Float_t*GetFramePoints() const; UChar_t*GetFrameRGBA(); Int_tGetFrameSize() const; TEveFrameBox::EFrameType_eGetFrameType() const; Float_tGetFrameWidth() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTEveRefBackPtr::IncRefCount(TEveElement* re); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTEveRefCnt::OnZeroRefCount(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveFrameBox.html:2758,Inherit,InheritsFrom,2758,root/html602/TEveFrameBox.html,https://root.cern,https://root.cern/root/html602/TEveFrameBox.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ndObject(const TObject* obj) const; void*GetAddress() const; Int_tGetArrayDim() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGlobal&operator=(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGlobal.html:2930,Inherit,InheritsFrom,2930,root/html532/TGlobal.html,https://root.cern,https://root.cern/root/html532/TGlobal.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ndObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TObject*FindTObjectInHierarchy(const char* path); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetItemField(const char* fullname, const char* name); ULong_tGetItemHash(const char* itemname); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; ULong_tGetStreamerInfoHash(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasRestriction(const char* item_name); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tIsDrawableClass(TClass* cl); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReadOnly() const; Bool_tIsScanGlobalDir() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsStreamerInfoItem(const char* itemname); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSniffer.html:3048,Inherit,InheritsFrom,3048,root/html604/TRootSniffer.html,https://root.cern,https://root.cern/root/html604/TRootSniffer.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ndObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TUrl*GetCurrentUrl() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TUrl*GetFirstUrl() const; virtual const char*TObject::GetIconName() const; TMD5*GetMD5() const; TFileInfoMeta*GetMetaData(const char* meta = 0) const; TList*GetMetaDataList() const; virtual const char*TNamed::GetName() const; Int_tGetNUrls() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUID*GetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TUrl*NextUrl(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileInfo.html:2921,Inherit,InheritsFrom,2921,root/html532/TFileInfo.html,https://root.cern,https://root.cern/root/html532/TFileInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ndOfLineAction(). void TCling::EndOfLineAction ; (; ). finalvirtual . It calls a ""fantom"" method to synchronize user keyboard input and ROOT prompt line. ; Implements TInterpreter.; Definition at line 3121 of file TCling.cxx. ◆ Evaluate(). int TCling::Evaluate ; (; const char * ; code, . TInterpreterValue & ; value . ). finalvirtual . Get the interpreter value corresponding to the statement. ; Reimplemented from TInterpreter.; Definition at line 7678 of file TCling.cxx. ◆ Execute() [1/5]. void TCling::Execute ; (; const char * ; function, . const char * ; params, . int * ; error = nullptr . ). finalvirtual . Execute a global function with arguments params. ; FIXME: The cint-based version of this code does not check if the SetFunc() call works, and does not do any real checking for errors from the Exec() call. It did fetch the most recent cint security error and return that in error, but this does not really translate well to cling/clang. We should enhance these interfaces so that we can report compilation and runtime errors properly. ; Implements TInterpreter.; Definition at line 5233 of file TCling.cxx. ◆ Execute() [2/5]. void TCling::Execute ; (; TMethod * ; method, . TObjArray * ; params, . int * ; error = nullptr . ). inlinefinalprivatevirtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Implements TInterpreter.; Definition at line 628 of file TCling.h. ◆ Execute() [3/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . Bool_t ; objectIsConst, . int * ; error = nullptr . ). Execute a method from class cl with arguments params. ; FIXME: The cint-based version of this code does not check if the SetFunc() call works, and does not do any real checking for errors from th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:84194,enhance,enhance,84194,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['enhance'],['enhance']
Modifiability,"ndPdf::createExpectedEventsFunc ; (; const RooArgSet * ; nset); const. overridevirtual . Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ; This is used to build the computation graph for the final likelihood. ; Reimplemented from RooAbsPdf.; Definition at line 140 of file RooExtendPdf.cxx. ◆ DeclFileName(). static const char * RooExtendPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 60 of file RooExtendPdf.h. ◆ evaluate(). double RooExtendPdf::evaluate ; (; ); const. inlineoverridevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 34 of file RooExtendPdf.h. ◆ expectedEvents(). double RooExtendPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the number of expected events over the full range of all variables. ; norm, the variable set as normalisation constant in the constructor, will yield the number of events in the range set in the constructor. That is, the function returns ; \[; N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; \]. Where \( x \) is the set of dependents with a restricted range (defined by rangeName in the constructor), and \( y \) are the other dependents. \( x_C \) is the integration of \( x \) over the restricted range, and \( x_F \) is the integration of \( x \) over the full range. norm is the number of events given as parameter to the constructor.; If the nested PDF can be extended, \( N \) is further scaled by its expected number of events. ; Reimplemented from RooAbsPdf.; Definition at line 108 of file RooExtendPdf.cxx. ◆ extendMode(). ExtendMode RooExtendPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:77556,variab,variables,77556,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['variab'],['variables']
Modifiability,"ndard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). ToyMCSampler(); Proof constructor. Do not use. ToyMCSampler(RooStats::TestStatistic& ts, Int_t ntoys). virtual ~ToyMCSampler(). SamplingDistribution* AppendSamplingDistribution(RooArgSet& allParameters, RooStats::SamplingDistribution* last, Int_t additionalMC); Extended interface to append to sampling distribution more samples. Double_t EvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; { return fTestStat; }. Double_t ConfidenceLevel() const; { return 1. - fSize; }. void Initialize(RooAbsArg& , RooArgSet& , RooArgSet& ); { return fNToys; }. void SetNToys(const Int_t ntoy); { fNToys = ntoy; }. void SetNEventsPerToy(const Int_t nevents); Forces n events even for extended PDFs. Set NEvents=0 to; use the Poisson distributed events from the extended PDF. void SetParametersForTestStat(const RooArgSet& nullpoi); specify the values of parameters used when evaluating test statistic. { fNullPOI = (RooArgSet*)nullpoi.snapshot(); }. void SetPdf(RooAbsPdf& pdf); Set the Pdf, add to the the workspace if not already there. { fPdf = &pdf; }. void SetPriorNuisance(RooAbsPdf* pdf); How to randomize the prior. Set to NULL to deactivate randomization. { fPriorNuisance = pdf; }. void SetNuisanceParameters(const RooArgSet& np); specify the nuisance parameters (eg. the rest of the parameters). { fNuisancePars = &np; }. void SetObservables(const RooArgSet& o); specify the observables in the dataset (needed to evaluate the test statistic). { fObservables = &o; }. void SetGlobalObservables(const RooArgSet& o); specify the conditional observables. { fGlobalObservables = &o; }. void SetTestSize(Double_t size); set the size of the test (rate ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__ToyMCSampler.html:5859,extend,extended,5859,root/html528/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html528/RooStats__ToyMCSampler.html,1,['extend'],['extended']
Modifiability,"ndaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& ); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. RooAbsBinning(const char* name = 0). TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth() const. Double_t* array() const. void Print(Option_t* options = 0) const; Printing interface. Bool_t isParameterized() const; Interface function. If true, min/max of binning is parameterized by external RooAbsReals. RooAbsReal* lowBoundFunc() const; Return pointer to RooAbsReal parameterized lower bound, if any. RooAbsReal* highBoundFunc() const; Return pointer to RooAbsReal parameterized upper bound, if any. Bool_t isShareable() const; If true (default) range definition can be shared across clones of a RooRealVar. void insertHook(RooAbsRealLValue& ) const; Hook interface function to execute code upon insertion into a RooAbsRealLValue. void removeHook(RooAbsRealLValue& ) const; Hook interface functionto execute code upon removal from a RooAbsRealLValue. » Last changed: Tue Jun 2 15:26:51 2015 » Last generated: 2015-06-02 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsBinning.html:10559,parameteriz,parameterized,10559,root/html604/RooAbsBinning.html,https://root.cern,https://root.cern/root/html604/RooAbsBinning.html,6,['parameteriz'],['parameterized']
Modifiability,"ndau and landaun are mutually exclusive in the same expression. Boolean optimization (kBoolOptmize) :. Those pseudo operation are used to implement lazy evaluation of; && and ||. When the left hand of the expression if false; (respectively true), the evaluation of the right is entirely skipped; (since it would not change the value of the expreession). && 142 11 (one operation on right) 142 21 (2 operations on right); || 142 12 (one operation on right) 142 22 (2 operations on right). * functions calls (kFunctionCall) :. f0 145 0 f1 145 1 etc.. Errors :. 1 : Division By Zero; 2 : Invalid Floating Point Operation; 4 : Empty String; 5 : invalid syntax; 6 : Too many operators; 7 : Too many parameters; 10 : z specified but not x and y; 11 : z and y specified but not x; 12 : y specified but not x; 13 : z and x specified but not y; 20 : non integer value for parameter number; 21 : atan2 requires two arguments; 22 : pow requires two arguments; 23 : degree of polynomial not specified; 24 : Degree of polynomial must be positive; 25 : Degree of polynomial must be less than 20; 26 : Unknown name; 27 : Too many constants in expression; 28 : strstr requires two arguments; 29 : interpreted or compiled function have to return a numerical type; 30 : Bad numerical expression; 31 : Part of the variable exist but some of it is not accessible or useable; 40 : '(' is expected; 41 : ')' is expected; 42 : '[' is expected; 43 : ']' is expected. /*; ; */. Special functions. By default, the formula is assigned fNumber=0. However, the following; formula built with simple functions are assigned fNumber:; ""gaus"" 100 (or gausn); ""xygaus"" 110; ""expo"" 200; ""polN"" 300+N; ""landau"" 400; ""xylandau"" 410; Note that expressions like gaus(0), expo(1) will force fNumber=0. Warning when deriving a class from TFormula. If you overload this member function, you also HAVE TO; never call the constructor:. TFormula::TFormula(const char *name,const char *expression). and write your own constructor. MyClass::MyClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFormula.html:18389,variab,variable,18389,root/html534/TFormula.html,https://root.cern,https://root.cern/root/html534/TFormula.html,6,['variab'],['variable']
Modifiability,"ndau(double x, double mu, double sigma)Definition MathFuncs.h:331; RooFit::Detail::MathFuncs::gaussiandouble gaussian(double x, double mean, double sigma)Function to evaluate an un-normalized RooGaussian.Definition MathFuncs.h:86; RooFit::Detail::MathFuncs::productdouble product(double const *factors, std::size_t nFactors)Definition MathFuncs.h:93; RooFit::Detail::MathFuncs::chebychevdouble chebychev(double *coeffs, unsigned int nCoeffs, double x_in, double xMin, double xMax)Definition MathFuncs.h:139; RooFit::Detail::MathFuncs::poissondouble poisson(double x, double par)Definition MathFuncs.h:198; RooFit::Detail::MathFuncs::binomialdouble binomial(int n, int k)Calculates the binomial coefficient n over k.Definition MathFuncs.h:31; RooFit::Detail::MathFuncs::getUniformBinningunsigned int getUniformBinning(double low, double high, double val, unsigned int numBins)Definition MathFuncs.h:172; RooFit::Detail::MathFuncs::flexibleInterpSingledouble flexibleInterpSingle(unsigned int code, double low, double high, double boundary, double nominal, double paramVal, double res)Definition MathFuncs.h:213; RooFit::Detail::MathFuncs::interpolate1ddouble interpolate1d(double low, double high, double val, unsigned int numBins, double const *vals)Definition MathFuncs.h:178; RooFit::Detail::MathFuncs::logNormalStandarddouble logNormalStandard(double x, double sigma, double mu)Definition MathFuncs.h:343; RooFit::Detail::MathFuncs::bifurGaussdouble bifurGauss(double x, double mean, double sigmaL, double sigmaR)Definition MathFuncs.h:108; RooFit::Detail::MathFuncs::ratiodouble ratio(double numerator, double denominator)Definition MathFuncs.h:103; RooFit::Detail::MathFuncs::polynomialIntegraldouble polynomialIntegral(double const *coeffs, int nCoeffs, int lowestOrder, double xMin, double xMax)In pdfMode, a coefficient for the constant term of 1.0 is implied if lowestOrder > 0.Definition MathFuncs.h:481; RooFit::Detail::MathFuncs::bernsteinIntegraldouble bernsteinIntegral(double xlo, doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:29240,flexible,flexibleInterpSingledouble,29240,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,2,['flexible'],"['flexibleInterpSingle', 'flexibleInterpSingledouble']"
Modifiability,"nded p.d.f. and X-Y values dataset; The value of the function that defines the chi^2 in this form is takes as; the p.d.f. times the expected number of events. An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; as the Y value and the weight error is interpreted as the Y value error. The weight must have an; non-zero error defined at each point for the chi^2 calculation to be meaningful. To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const char* name, const char* title, RooAbsPdf& extPdf, RooDataSet& data, RooRealVar& yvar, Bool_t integrate = kFALSE). RooXYChi2Var constructor with an extended p.d.f. and X-Y values dataset; The value of the function that defines the chi^2 in this form is takes as; the p.d.f. times the expected number of events. An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; as the Y value and the weight error is interpreted as the Y value error. The weight must have an; non-zero error defined at each point for the chi^2 calculation to be meaningful. To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); on each X-type observable for which the error should be stored and add datapoints to the dataset as follows. RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; are the Double_t values that correspond to the Y and its error. RooXYChi2Var(const RooXYChi2Var& other, const char* name = 0); Copy constructor. void initialize(); Common constructor initialization. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooXYChi2Var.html:39503,extend,extended,39503,root/html528/RooXYChi2Var.html,https://root.cern,https://root.cern/root/html528/RooXYChi2Var.html,10,['extend'],['extended']
Modifiability,"ndent="""") const;  Interface for detailed printing of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsBinning; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinTransBinning.html:13924,inherit,inherited,13924,doc/master/classRooLinTransBinning.html,https://root.cern,https://root.cern/doc/master/classRooLinTransBinning.html,12,['inherit'],['inherited']
Modifiability,"nder () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; const TGPicture * fBgnd;  picture used as background/shape ;  ; TImage * fImage;  image used as background/shape ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be red",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShapedFrame.html:25606,inherit,inherited,25606,doc/master/classTGShapedFrame.html,https://root.cern,https://root.cern/doc/master/classTGShapedFrame.html,2,['inherit'],['inherited']
Modifiability,"nder (signal); TMVA::PDF*fSplSPDFs of MVA distribution (signal); TMVA::PDF*fSplTrainBPDFs of training MVA distribution (background); TSpline*fSplTrainEffBvsSsplines for training signal eff. versus background eff.; TMVA::TSpline1*fSplTrainRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplTrainRefShelper splines for RootFinder (signal); TMVA::PDF*fSplTrainSPDFs of training MVA distribution (signal); TSpline*fSpleffBvsSsplines for signal eff. versus background eff.; UInt_tfTMVATrainingVersionTMVA version used for training; Double_tfTestTimefor timing measurements; TStringfTestvarvariable used in evaluation, etc (mostly the MVA); Double_tfTrainTimefor timing measurements; TMVA::TransformationHandlerfTransformationthe list of transformations; TMVA::TransformationHandler*fTransformationPointerpointer to the rest of transformations; Bool_tfTxtWeightsOnlyif TRUE, write weights only to text files ; Bool_tfUseDecorrsynonymous for decorrelation; TStringfVarTransformStringlabels variable transform method; TMVA::Types::ESBTypefVariableTransformTypethis is the event type (sig or bgd) assumed for variable transform; TStringfVariableTransformTypeStringlabels variable transform type; Bool_tfVerboseverbose flag; TMVA::EMsgTypefVerbosityLevelverbosity level; TStringfVerbosityLevelStringverbosity level (user input string); TStringfWeightFileweight file name; Double_tfXmaxmaximum (signal and background); Double_tfXminminimum (signal and background); static TMVA::MethodBase*fgThisBasethis pointer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~MethodBase( void ); destructor. void SetupMethod(); setup of methods. void ProcessSetup(); process all options; the ""CheckForUnusedOptions"" is done in an independent call, since it may be overridden by derived class; (sometimes, eg, fitters are used which can only be implemented during training phase). void CheckSetup(); check may be overridden by derived class; (sometimes, eg, fitters a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:19657,variab,variable,19657,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,6,['variab'],['variable']
Modifiability,"nder and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGCanvas * fCanvas;  Pointer to the canvas that used this frame. ;  ; TGCompositeFrame * fFrame;  Composite frame used as a container. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTableContainer.h>. Inheritanc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableFrame.html:4862,inherit,inherited,4862,doc/master/classTGTableFrame.html,https://root.cern,https://root.cern/doc/master/classTGTableFrame.html,2,['inherit'],['inherited']
Modifiability,"nder from slot_method in object receiver. ;  . Private Member Functions;  TGLEmbeddedViewer (const TGLEmbeddedViewer &)=delete;  ; void CreateFrames ();  Internal frames creation. ;  ; void Init (const TGWindow *parent);  Common initialization from all constructors. ;  ; TGLEmbeddedViewer & operator= (const TGLEmbeddedViewer &)=delete;  . Private Attributes; Int_t fBorder;  ; TGCompositeFrame * fFrame;  . Additional Inherited Members;  Public Types inherited from TGLViewer; enum  ECameraType { ;   kCameraPerspXOZ; , kCameraPerspYOZ; , kCameraPerspXOY; , kCameraOrthoXOY; , ;   kCameraOrthoXOZ; , kCameraOrthoZOY; , kCameraOrthoZOX; , kCameraOrthoXnOY; , ;   kCameraOrthoXnOZ; , kCameraOrthoZnOY; , kCameraOrthoZnOX. };  ; enum  EDragAction { ;   kDragNone; , kDragCameraRotate; , kDragCameraTruck; , kDragCameraDolly; , ;   kDragOverlay. };  ; enum  EPushAction { kPushStd; , kPushCamCenter; , kPushAnnotate; };  ; enum  ESecSelType { kOnRequest; , kOnKeyMod1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGLLockable; enum  ELock { kUnlocked; , kDrawLock; , kSelectLock; , kModifyLock; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Types inherited from TGLViewerBase; typedef OverlayElmVec_t::iterator OverlayElmVec_i;  ; typedef std::vector< TGLOverlayElement * > OverlayElmVec_t;  ; typedef SceneInfoList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEmbeddedViewer.html:30505,inherit,inherited,30505,doc/master/classTGLEmbeddedViewer.html,https://root.cern,https://root.cern/doc/master/classTGLEmbeddedViewer.html,1,['inherit'],['inherited']
Modifiability,"nder the MIT License, meet these criteria.; These three color schemes are available as color sets with 6, 8, and 10 colors, named kP[6, 8, 10]ColorName. For example, kP6Red represents the red color within the P6 color scheme (P for Petroff or Preferred). The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings. It also demonstrates that they are effective in grayscale. Grayscale view of of canvas with colors; One can toggle between a grayscale preview and the regular colored mode using TCanvas::SetGrayscale(). Note that in grayscale mode, access via RGB will return grayscale values according to ITU standards (and close to b&w printer gray-scales), while access via HLS returns de-saturated gray-scales. The image below shows the ROOT color wheel in grayscale mode.; {; auto w = new TColorWheel();; auto cw = new TCanvas(""cw"",""cw"",0,0,400,400);; cw->GetCanvas()->SetGrayscale();; w->SetCanvas(cw);; w->Draw();; }. Color palettes; It is often very useful to represent a variable with a color map. The concept of ""color palette"" allows to do that. One color palette is active at any time. This ""current palette"" is set using:; gStyle->SetPalette(...);; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; This function has two parameters: the number of colors in the palette and an array of containing the indices of colors in the palette. The following small example demonstrates how to define and use the color palette:; {; auto c1 = new TCanvas(""c1"",""c1"",0,0,600,400);; TF2 *f1 = new TF2(""f1"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; Int_t palette[5];; palette[0] = 15;; palette[1] = 20;; palette[2] = 23;; palette[3] = 30;; palette[4] = 32;; gStyle->SetPalette(5,palette);; f1->Draw(""colz"");; return c1;; }; TF1::Drawvoid Draw(Option_t *option="""") overrideDraw this function with its current at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor.html:7522,variab,variable,7522,doc/master/classTColor.html,https://root.cern,https://root.cern/doc/master/classTColor.html,1,['variab'],['variable']
Modifiability,"nder this element.; Bool_tfSelectViaFrameAllow selection via frame.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tfSingleColorUse the same color for all digits.; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; void*fTooltipCBFoo! Function providing highlight tooltips when always-sec-select is active.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tfValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TEveDigitSet(); Destructor.; Unreference frame and palette. Destroy referenced objects if they; are owned by the TEveDigitSet. void ReleaseIds(); Protected method. Release and delete the referenced objects, the; ownership is *NOT* checked. void UseSingleColor(); Instruct digit-set to use single color for its digits.; Call SetMainColor/Transparency to initialize it. void SetMainColor(Color_t color); Override from TEveElement, forward to Frame. void UnSelected(); Virtual function called when both fSelected is false and; fImpliedSelected is 0. void UnHighlighted(); Virtual function called when both fHighlighted is false and; fImpliedHighlighted is 0. TString GetHighlightTooltip(); Return tooltip for highlighted element if always-sec-select is set.; Otherwise return the tooltip for this element. void RefitPlex(); Instruct underlying memory allocator to regroup itself into a; contiguous memory chunk. void ScanMinMaxValues(Int_t& min, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveDigitSet.html:28114,Inherit,Inheritance,28114,root/html532/TEveDigitSet.html,https://root.cern,https://root.cern/root/html532/TEveDigitSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt5Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt5Timer(). TQt5Timer::TQt5Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 72 of file rootqt5.cpp. Member Function Documentation. ◆ Timeout(). void TQt5Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt5 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 76 of file rootqt5.cpp. gui/qt5webdisplay/rootqt5.cpp. TQt5Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQt5Timer.html:16515,inherit,inherited,16515,doc/master/classTQt5Timer.html,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html,3,['inherit'],['inherited']
Modifiability,"nder, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TQt6Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQt6Timer(). TQt6Timer::TQt6Timer ; (; Long_t ; milliSec, . Bool_t ; mode . ). inline . Definition at line 51 of file rootqt6.cpp. Member Function Documentation. ◆ Timeout(). void TQt6Timer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process all qt6 events in main ROOT thread ; Reimplemented from TTimer.; Definition at line 55 of file rootqt6.cpp. gui/qt6webdisplay/rootqt6.cpp. TQt6Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQt6Timer.html:16515,inherit,inherited,16515,doc/master/classTQt6Timer.html,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html,3,['inherit'],['inherited']
Modifiability,"nder, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGButton * fApplyButton;  ; TGCheckButton * fAutoUpdate;  ; TGNumberEntry * fBoxProp [6];  ; TGCompositeFrame * fBoxPropFrame;  ; TGCheckButton * fClipEdit;  ; TGCheckButton * fClipInside;  ; TGCheckButton * fClipShow;  ; TGLClip::EType fCurrentClip;  ; TGLClipSet * fM;  ; TGNumberEntry * fPlaneProp [4];  ; TGCompositeFrame * fPlanePropFrame;  ; TGButton * fResetButton;  ; TGButtonGroup * fTypeButtons;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetSubEditor.html:25620,inherit,inherited,25620,doc/master/classTGLClipSetSubEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetSubEditor.html,2,['inherit'],['inherited']
Modifiability,"nder, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fBeta;  ; Int_t fCharge;  ; Double_t fDpDs;  ; Int_t fIndex;  ; Int_t fLabel;  ; Int_t fLastPMIdx;  ; Bool_t fLockPoints;  ; TEveVectorD fP;  ; vPathMark_t fPathMarks;  ; Int_t fPdg;  ; TEveVectorD fPEnd;  ; TEveTrackPropagator * fPropagator;  Last path-mark index tried in track-propagation. ;  ; Int_t fStatus;  ; TEveVectorD fV;  ;  Protected Attributes inherited from TEveLine; Bool_t fRnrLine;  ; Bool_t fRnrPoints;  ; Bool_t fSmooth;  ;  Protected Attributes inherited from TEvePointSet; TArrayI * fIntIds;  ; Int_t fIntIdsPerPoint;  ; TString fTitle;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TPoin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrack.html:46888,inherit,inherited,46888,doc/master/classTEveTrack.html,https://root.cern,https://root.cern/doc/master/classTEveTrack.html,3,['inherit'],['inherited']
Modifiability,"nderThreadsbool fUseSenderThreads! use extra threads for sending data from RWebWindow to clientsDefinition RWebWindowsManager.hxx:48; ROOT::RWebWindowsManager::fServerstd::unique_ptr< THttpServer > fServer! central communication with the all used displaysDefinition RWebWindowsManager.hxx:41; ROOT::RWebWindowsManager::SetLoopbackModestatic void SetLoopbackMode(bool on=true)Set loopback mode for THttpServer used for web widgets By default is on.Definition RWebWindowsManager.cxx:128; ROOT::RWebWindowsManager::IsMainThrdstatic bool IsMainThrd()Returns true when called from main process Main process recognized at the moment when library is load...Definition RWebWindowsManager.cxx:104; ROOT::RWebWindowsManager::Instancestatic std::shared_ptr< RWebWindowsManager > & Instance()Returns default window manager Used to display all standard ROOT elements like TCanvas or TFitPanel.Definition RWebWindowsManager.cxx:78; ROOT::RWebWindowsManager::InformListenerbool InformListener(const std::string &msg)If ROOT_LISTENER_SOCKET variable is configured, message will be sent to that unix socket.Definition RWebWindowsManager.cxx:227; ROOT::RWebWindowsManager::fLaunchTmoutfloat fLaunchTmout! timeout in seconds to start browser process, default 30sDefinition RWebWindowsManager.hxx:49; ROOT::RWebWindowsManager::GetUrlstd::string GetUrl(RWebWindow &win, bool remote=false, std::string *produced_key=nullptr)Provide URL address to access specified window from inside or from remote.Definition RWebWindowsManager.cxx:600; ROOT::RWebWindowsManager::Unregistervoid Unregister(RWebWindow &win)Release all references to specified window Called from RWebWindow destructor.Definition RWebWindowsManager.cxx:591; ROOT::RWebWindowsManager::IsLoopbackModestatic bool IsLoopbackMode()Returns true if loopback mode used by THttpServer for web widgets.Definition RWebWindowsManager.cxx:146; ROOT::RWebWindowsManager::CreateWindowstd::shared_ptr< RWebWindow > CreateWindow()Creates new window To show window, RWebWindow:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html:10925,variab,variable,10925,doc/v632/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html,2,"['config', 'variab']","['configured', 'variable']"
Modifiability,"nderThreadsbool fUseSenderThreads! use extra threads for sending data from RWebWindow to clientsDefinition RWebWindowsManager.hxx:52; ROOT::RWebWindowsManager::fServerstd::unique_ptr< THttpServer > fServer! central communication with the all used displaysDefinition RWebWindowsManager.hxx:45; ROOT::RWebWindowsManager::SetLoopbackModestatic void SetLoopbackMode(bool on=true)Set loopback mode for THttpServer used for web widgets By default is on.Definition RWebWindowsManager.cxx:129; ROOT::RWebWindowsManager::IsMainThrdstatic bool IsMainThrd()Returns true when called from main process Main process recognized at the moment when library is load...Definition RWebWindowsManager.cxx:105; ROOT::RWebWindowsManager::Instancestatic std::shared_ptr< RWebWindowsManager > & Instance()Returns default window manager Used to display all standard ROOT elements like TCanvas or TFitPanel.Definition RWebWindowsManager.cxx:79; ROOT::RWebWindowsManager::InformListenerbool InformListener(const std::string &msg)If ROOT_LISTENER_SOCKET variable is configured, message will be sent to that unix socket.Definition RWebWindowsManager.cxx:299; ROOT::RWebWindowsManager::fLaunchTmoutfloat fLaunchTmout! timeout in seconds to start browser process, default 30sDefinition RWebWindowsManager.hxx:53; ROOT::RWebWindowsManager::GetServerLocationsstatic std::map< std::string, std::string > GetServerLocations()Returns server locations as <std::string, std::string> Key is location name (with slash at the end) a...Definition RWebWindowsManager.cxx:209; ROOT::RWebWindowsManager::GetUrlstd::string GetUrl(RWebWindow &win, bool remote=false, std::string *produced_key=nullptr)Provide URL address to access specified window from inside or from remote.Definition RWebWindowsManager.cxx:686; ROOT::RWebWindowsManager::Unregistervoid Unregister(RWebWindow &win)Release all references to specified window Called from RWebWindow destructor.Definition RWebWindowsManager.cxx:674; ROOT::RWebWindowsManager::IsLoopbackModestatic boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html:12424,variab,variable,12424,doc/master/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html,2,"['config', 'variab']","['configured', 'variable']"
Modifiability,"ndex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TMatrixD*fCoeffMatxMatrix of coefficients; vector<vector<Double_t>*>*fLDCoeffLD coefficients; Int_tfNRegOutsize of the output; TMatrixD*fSumMatxSum of coordinates product matrix; TMatrixD*fSumValMatxSum of values multiplied by coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodLD(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& dsi, const TString& theOption = ""LD"", TDirectory* theTargetDir = 0); standard constructor for the LD. MethodLD(TMVA::DataSetInfo& dsi, const TString& theWeightFile, TDirectory* theTargetDir = 0); constructor from weight file. void Init( void ); default initialization called by all constructors. ~MethodLD( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); LD can handle classification with 2 classes and regression with one regression-target. void Train( void ); compute fSumMatx. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); Returns the MVA classification output. const std::vector< Float_t >& GetRegressionValues(); Calculates the regression output. void InitMatrices( void ); Initializaton method; creates global matrices and vectors. void GetSum( void ); Calculates the mat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodLD.html:17346,Inherit,Inheritance,17346,root/html602/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodLD.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndex"" for markers. ;  ; void SetMarkerSize (Float_t markersize) override;  Sets marker size index. ;  ; void SetMarkerStyle (Style_t markerstyle) override;  Sets marker style. ;  ; void SetTextAlign (Short_t talign=11) override;  Sets the text alignment. ;  ; void SetTextColor (Color_t cindex) override;  Sets the color index ""cindex"" for text. ;  ; void SetTextFont (Font_t fontnumber) override;  Sets the current text font number. ;  ; void SetTextSize (Float_t textsize) override;  Sets the current text size to ""textsize"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t SupportsExtension (const char *ext) const;  Returns 1 if window system server supports extension given by the argument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32.html:29183,inherit,inherited,29183,doc/master/classTGWin32.html,https://root.cern,https://root.cern/doc/master/classTGWin32.html,1,['inherit'],['inherited']
Modifiability,"ndex*TTree::GetTreeIndex() const; virtual Int_tTTree::GetTreeNumber() const; virtual Int_tGetType(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTTree::GetUpdate() const; virtual TList*TTree::GetUserInfo(); virtual Double_t*TTree::GetV1(); virtual Double_t*TTree::GetV2(); virtual Double_t*TTree::GetV3(); virtual Double_t*TTree::GetV4(); virtual Double_t*TTree::GetVal(Int_t i); TTreeFormula*TTree::GetVar(Int_t i); TTreeFormula*TTree::GetVar1(); TTreeFormula*TTree::GetVar2(); TTreeFormula*TTree::GetVar3(); TTreeFormula*TTree::GetVar4(); virtual Double_t*TTree::GetW(); virtual Double_tTTree::GetWeight() const; Float_t*GetX(); virtual Long64_tTTree::GetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTTree::IncrementTotalBuffers(Int_t nbytes); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitBranches(Long64_t entry); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTTree::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tTTree::LoadBaskets(Long64_t maxmemory = 2000000000); virtual Long64_tTTree::LoadTree(Long64_t entry); virtual Long64_tTTree::LoadTreeFriend(Long64_t entry, TTree* T); virtual voidTNamed::ls(Option_t* option = """") const; virtual Int_tTTree::MakeClass(const char* classname = 0, Option_t* option = """"); virtual Int_tTTree::MakeCode(const char* filename = 0); virtual Int_tTTree::MakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); virtual Int_tTTree::MakeSelector(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookTree.html:11055,Inherit,InheritsFrom,11055,root/html532/THbookTree.html,https://root.cern,https://root.cern/root/html532/THbookTree.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ndex; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveRefBackPtr. class TEveRefBackPtr: public TEveRefCnt. Base-class for reference-counted objects with reverse references to; TEveElement objects. Function Members (Methods); public:. TEveRefBackPtr(); TEveRefBackPtr(const TEveRefBackPtr&); virtual~TEveRefBackPtr(); static TClass*Class(); virtual voidDecRefCount(TEveElement* re); virtual voidIncRefCount(TEveElement* re); virtual TClass*IsA() const; virtual voidTEveRefCnt::OnZeroRefCount(); TEveRefBackPtr&operator=(const TEveRefBackPtr&); virtual voidShowMembers(TMemberInspector&); virtual voidStampBackPtrElements(UChar_t stamps); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. map<TEveElement*,int>fBackRefs; Int_tTEveRefCnt::fRefCount. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveRefBackPtr(); Default constructor. ~TEveRefBackPtr(); Destructor. Noop, should complain if back-ref list is not empty. TEveRefBackPtr(const TEveRefBackPtr& ); Copy constructor. New copy starts with zero reference count and; empty back-reference list. TEveRefBackPtr& operator=(const TEveRefBackPtr& ); Assignment operator. Reference count and back-reference; information is not assigned as these object hold pointers to a; specific object. void IncRefCount(TEveElement* re); Increase reference cound and add re to the list of back-references. void DecRefCount(TEveElement* re); Decrease reference cound and remove re from the list of back-references. void StampBackPtrElements(UChar_t stamps); Add givem stamps to elements in the list of reverse references. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general pl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveRefBackPtr.html:1029,Inherit,Inheritance,1029,root/html534/TEveRefBackPtr.html,https://root.cern,https://root.cern/root/html534/TEveRefBackPtr.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndex; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::BDTEventWrapper. class TMVA::BDTEventWrapper. Function Members (Methods); public:. ~BDTEventWrapper(); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::Event*); TMVA::BDTEventWrapperBDTEventWrapper(const TMVA::BDTEventWrapper&); Double_tGetCumulativeWeight(Bool_t type) const; Double_tGetVal() const; const TMVA::Event*operator*() const; Bool_toperator<(const TMVA::BDTEventWrapper& other) const; TMVA::BDTEventWrapper&operator=(const TMVA::BDTEventWrapper&); voidSetCumulativeWeight(Bool_t type, Double_t weight); static voidSetVarIndex(Int_t iVar). private:. static Int_t&GetVarIndex(). Data Members; private:. Double_tfBkgWeightcumulative background weight for splitting; const TMVA::Event*fEventpointer to the event; Double_tfSigWeightsame for the signal weights. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BDTEventWrapper(const Event* e); constuctor. ~BDTEventWrapper(); destructor. void SetCumulativeWeight(Bool_t type, Double_t weight); Set the accumulated weight, for sorted signal/background events. * @param fType - true for signal, false for background; * @param weight - the total weight. Double_t GetCumulativeWeight(Bool_t type) const; Get the accumulated weight. Bool_t operator<(const TMVA::BDTEventWrapper& other) const. BDTEventWrapper( const Event* ). void SetVarIndex(Int_t iVar); Set the index of the variable to compare on. * @param iVar - index of the variable in fEvent to use. { if (iVar >= 0) GetVarIndex() = iVar; }. Double_t GetVal() const; Return the value of variable fVarIndex for this event. * @return value of variable fVarIndex for this event. { return fEvent->GetValue(GetVarIndex()); }. const Event* operator*() const; { return fEvent; }. Int_t& GetVarIndex(); This is a workaround for OSx where static thread_local data mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__BDTEventWrapper.html:1036,Inherit,Inheritance,1036,root/html602/TMVA__BDTEventWrapper.html,https://root.cern,https://root.cern/root/html602/TMVA__BDTEventWrapper.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndicates the start of the weights for this layer on the weight vector ; itGradientBeginindicates the start of the gradients for this layer on the gradient vector ; activationFunctionindicates activation functions for this layer ; inverseActivationFunctionindicates the inverse activation functions for this layer ; eModeOutputindicates a potential tranformation of the output values before further computation DIRECT does not further transformation; SIGMOID applies a sigmoid transformation to each output value (to create a probability); SOFTMAX applies a softmax transformation to all output values (mutually exclusive probability) . Definition at line 97 of file NeuralNet.cxx. ◆ LayerData() [4/6]. TMVA::DNN::LayerData::LayerData ; (; size_t ; size, . const_iterator_type ; itWeightBegin, . std::shared_ptr< std::function< double(double)> > ; activationFunction, . ModeOutputValues ; eModeOutput = ModeOutputValues::DIRECT . ). c'tor of LayerData ; C'tor of LayerData for all layers which are not the input layer; Used during the application of the DNN; Parameters. sizesize of the layer ; itWeightBeginindicates the start of the weights for this layer on the weight vector ; activationFunctionindicates the activation function for this layer ; eModeOutputindicates a potential tranformation of the output values before further computation DIRECT does not further transformation; SIGMOID applies a sigmoid transformation to each output value (to create a probability); SOFTMAX applies a softmax transformation to all output values (mutually exclusive probability) . Definition at line 122 of file NeuralNet.cxx. ◆ LayerData() [5/6]. TMVA::DNN::LayerData::LayerData ; (; const LayerData & ; other). inline . copy c'tor of LayerData ; Definition at line 515 of file NeuralNet.h. ◆ LayerData() [6/6]. TMVA::DNN::LayerData::LayerData ; (; LayerData && ; other). inline . move c'tor of LayerData ; Definition at line 538 of file NeuralNet.h. Member Function Documentation. ◆ activationFunction(). std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1LayerData.html:9718,layers,layers,9718,doc/master/classTMVA_1_1DNN_1_1LayerData.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1LayerData.html,1,['layers'],['layers']
Modifiability,"ndif; 4263 ; 4264 clingArgs.push_back(""-fsyntax-only"");; 4265#ifndef R__WIN32; 4266 clingArgs.push_back(""-fPIC"");; 4267#endif; 4268 clingArgs.push_back(""-Xclang"");; 4269 clingArgs.push_back(""-fmodules-embed-all-files"");; 4270 clingArgs.push_back(""-Xclang"");; 4271 clingArgs.push_back(""-main-file-name"");; 4272 clingArgs.push_back(""-Xclang"");; 4273 clingArgs.push_back((dictname + "".h"").c_str());; 4274 ; 4275 ROOT::TMetaUtils::SetPathsForRelocatability(clingArgs);; 4276 ; 4277 // FIXME: This line is from TModuleGenerator, but we can't reuse this code; 4278 // at this point because TModuleGenerator needs a CompilerInstance (and we; 4279 // currently create the arguments for creating said CompilerInstance).; 4280 bool isPCH = (gOptDictionaryFileName.getValue() == ""allDict.cxx"");; 4281 std::string outputFile;; 4282 // Data is in 'outputFile', therefore in the same scope.; 4283 llvm::StringRef moduleName;; 4284 std::string vfsArg;; 4285 // Adding -fmodules to the args will break lexing with __CINT__ defined,; 4286 // and we actually do lex with __CINT__ and reuse this variable later,; 4287 // we have to copy it now.; 4288 auto clingArgsInterpreter = clingArgs;; 4289 ; 4290 if (gOptSharedLibFileName.empty()) {; 4291 gOptSharedLibFileName = gOptDictionaryFileName.getValue();; 4292 }; 4293 ; 4294 if (!isPCH && gOptCxxModule) {; 4295 // We just pass -fmodules, the CIFactory will do the rest and configure; 4296 // clang correctly once it sees this flag.; 4297 clingArgsInterpreter.push_back(""-fmodules"");; 4298 clingArgsInterpreter.push_back(""-fno-implicit-module-maps"");; 4299 ; 4300 for (const std::string &modulemap : gOptModuleMapFiles); 4301 clingArgsInterpreter.push_back(""-fmodule-map-file="" + modulemap);; 4302 ; 4303 clingArgsInterpreter.push_back(""-fmodule-map-file="" +; 4304 std::string(gDriverConfig->fTROOT__GetIncludeDir()) +; 4305 ""/ROOT.modulemap"");; 4306 std::string ModuleMapCWD = ROOT::FoundationUtils::GetCurrentDir() + ""/module.modulemap"";; 4307 if (llvm::sys::fs::exis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:174076,variab,variable,174076,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ndim-dimensional THn / THnSparse (whatever *this is) or if (ndim < 4 and !wantNDim) a TH1/2/3 histogram, keeping only axes in dim (specifying ndim dimensions). ;  ; THnBase * RebinBase (const Int_t *group) const;  Combine the content of ""group"" neighboring bins for each dimension into a new bin and return the resulting THnBase. ;  ; THnBase * RebinBase (Int_t group) const;  Combine the content of ""group"" neighboring bins into a new bin and return the resulting THnBase. ;  ; virtual void Reserve (Long64_t);  ; void ResetBase (Option_t *option="""");  Clear the histogram. ;  ; virtual void SetFilledBins (Long64_t);  ; void UpdateXStat (const Double_t *x, Double_t w=1.);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from THnBase; static THnBase * CreateHnAny (const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THn / THnSparse object from a histogram deriving from TH1. ;  ; static THnBase * CreateHnAny (const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THnSparse (if ""sparse"") or THn from ""hn"", possibly converting THn <-> THnSparse. ;  . #include <THn.h>. Inheritance diagram for THnT< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THnT() [1/3]. template<typename T > . THnT< T >::THnT ; (; ). inline . Definition at line 221 of file THn.h. ◆ THnT() [2/3]. template<typename T > . THnT< T >::THnT ; (; const char * ; name, . const char * ; title, . Int_t ; dim, . const Int_t * ; nbins, . const Double_t * ; xmin, . const Double_t * ; xmax . ). inline . Definition at line 223 of file THn.h. ◆ THnT() [3/3]. template<typename T > . THnT< T >::THnT ; (; const char * ; na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnT.html:24043,inherit,inherited,24043,doc/master/classTHnT.html,https://root.cern,https://root.cern/doc/master/classTHnT.html,1,['inherit'],['inherited']
Modifiability,"nding marker style with line width 1 for the given style. ;  . Protected Attributes; Double_t * fColor {nullptr};  [fNpoints] array of colors ;  ; TGraph * fGraph {nullptr};  Pointer to graph holding X and Y positions. ;  ; TH2F * fHistogram {nullptr};  Pointer to histogram used for drawing axis. ;  ; Double_t fMargin {.1};  Margin around the plot in %. ;  ; Double_t fMaxMarkerSize {5.};  Largest marker size used to paint the markers. ;  ; Int_t fMaxSize {-1};  !Current dimension of arrays fX and fY ;  ; Double_t fMinMarkerSize {1.};  Smallest marker size used to paint the markers. ;  ; Int_t fNpoints {-1};  Number of points <= fMaxSize. ;  ; Double_t * fSize {nullptr};  [fNpoints] array of marker sizes ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter.html:19265,inherit,inherited,19265,doc/master/classTScatter.html,https://root.cern,https://root.cern/doc/master/classTScatter.html,1,['inherit'],['inherited']
Modifiability,"nding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t[] xvector) const; Load the vector of variable values into the RooRealVars associated; as variables with the bound RooAbsReal function. Double_t operator()(const Double_t[] xvector) const; Evaluate the bound RooAbsReal at the variable values provided in xvector. Double_t getMinLimit(UInt_t dimension) const; Return lower limit on i-th variable. Double_t getMaxLimit(UInt_t dimension) const; Return upper limit on i-th variable. const char* getName() const; Return name of function. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& , Double_t , Double_t ) const. std::list<Double_t>* binBoundaries(Int_t ) const. » Last changed: Tue Jun 30 14:35:16 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealBinding.html:3340,variab,variables,3340,root/html602/RooRealBinding.html,https://root.cern,https://root.cern/root/html602/RooRealBinding.html,12,['variab'],"['variable', 'variables']"
Modifiability,"nding of integrand; Int_t_numBins! Size of integration range; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; vector<Double_t>_xmax! Upper integration bound; vector<Double_t>_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooBinIntegrator, is parameters and capabilities with RooNumIntFactory. RooBinIntegrator(); Default constructor. RooBinIntegrator(const RooAbsFunc& function); Construct integrator on given function binding binding. RooBinIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integrator on given function binding binding. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with new function binding and configuration. Needed by RooNumIntFactory. ~RooBinIntegrator(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Calculate numeric integral at given set of function binding parameters. RooBinIntegrator(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag ; return kTRUE ; }. Bool_t canIntegrate1D() const; { return kTRUE ; }. Bool_t canIntegrate2D() const; { return kTRUE ; }. Bool_t canIntegrateND() const; { return kTRUE ; }. Bool_t canIntegrateOpenEnded() const; { return k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooBinIntegrator.html:7435,config,config,7435,root/html532/RooBinIntegrator.html,https://root.cern,https://root.cern/root/html532/RooBinIntegrator.html,14,['config'],"['config', 'configuration']"
Modifiability,"nding on the context, using TSpectrumTransform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 1D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:1644,adapt,adaptive,1644,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['adapt'],['adaptive']
Modifiability,"ndl;. return 0;; }; 13.8 Numerical Integration; The algorithms provided by ROOT for numerical integration are implemented following the hierarchy shown in the next image. ROOT::Math::VirtualIntegrator defines the most basic functionality while the specific behaviours for one or multiple dimensions are implemented in ROOT::Math::VirtualIntegratorOneDim and ROOT::Math::VirtualIntegratorMultiDim. These interfaces define the integrator functionality with abstract methods to set the function, to compute the integral or to set the integration tolerance. These methods must be implemented in the concrete classes existing for the different integration algorithms. The user cannot create directly these virtual integrator interfaces. He needs to create the ROOT::Math::IntegratorOneDim class for integrating one-dimensional functions and ROOT::Math::IntegratorMultiDim for multi-dimensional functions. Through the ROOT Plug-In Manager, the user can initialize ROOT::Math::IntegratorOneDim or ROOT::Math::IntegratorMultiDim with any of the concrete integration classes without dealing with them directly. These two classes provide the same interface as in VirtualIntegratorOneDim and VirtualIntegratorMultiDim, but with the possibility to choose in the constructor, which method will be used to perform the integration.; The method to set the function to be integrated, must be of the function interface type described before. ROOT::Math::IBaseFunctionOneDimFunction is used for ROOT::Math::IBaseFunctionMultiDim and The only difference between the ROOT::Math::IntegratorOneDim and ROOT::Math::IntegratorMultiDim resides in the dimensionality of that function and some specific that will be seen afterwards for the one dimensional one. ROOT::Math Numerical Integrator classes. The rest of the classes shown above in the diagram are the specialized classes provided. Each one implements a different method that will be explained in detail. It is important to notice that the two grayed classes (the one w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:700558,Plug-In,Plug-In,700558,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Plug-In'],['Plug-In']
Modifiability,"ndle Class ReferenceWeb Display. ; Handle of created web-based display Depending from type of web display, holds handle of started browser process or other display-specific information to correctly stop and cleanup display. ; Definition at line 25 of file RWebDisplayHandle.hxx. Classes; class  BrowserCreator;  ; class  ChromeCreator;  ; class  Creator;  !< page content More...;  ; class  FirefoxCreator;  . Public Member Functions;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; virtual bool Resize (int, int);  resize web window - if possible ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome or Mozilla Firefox. ;  ; static bool ProduceImages (const std::string &fname, const std::vector< std::string > &jsons, const std::vector< int > &widths, const std::vector< int > &heights, const char *batch_file=nullptr);  Produce image file(s) using JSON data as source Invokes JSRO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebDisplayHandle.html:1401,config,configured,1401,doc/v632/classROOT_1_1RWebDisplayHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebDisplayHandle.html,1,['config'],['configured']
Modifiability,"ndleConfigureNotify (Event_t *);  ; virtual Bool_t HandleCrossing (Event_t *);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleEvent (Event_t *ev);  Handle the event. ;  ; virtual Bool_t HandleFocusChange (Event_t *);  ; virtual Bool_t HandleKey (Event_t *);  ; virtual Bool_t HandleMotion (Event_t *);  ; virtual Bool_t HandleSelection (Event_t *);  ; virtual Bool_t HandleSelectionClear (Event_t *);  ; virtual Bool_t HandleSelectionRequest (Event_t *);  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void ProcessedEvent (Event_t *event);  ; virtual Bool_t ProcessMessage (Longptr_t, Longptr_t, Longptr_t);  ; virtual void Repaint ();  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGEventHandler.html:1669,inherit,inherited,1669,doc/master/classTGEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGEventHandler.html,1,['inherit'],['inherited']
Modifiability,"ndleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFitEditor.html:14678,Inherit,InheritsFrom,14678,root/html532/TFitEditor.html,https://root.cern,https://root.cern/root/html532/TFitEditor.html,12,['Inherit'],['InheritsFrom']
Modifiability,"ndler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TColorWheel (const TColorWheel &)=delete;  ; TColorWheel & operator= (const TColorWheel &)=delete;  . Private Attributes; TArc * fArc {nullptr};  ! pointer to utility arc ;  ; TCanvas * fCanvas {nullptr};  ! Canvas used to draw the Color Wheel ;  ; Double_t fDr {0.};  Circles radius. ;  ; TGraph * fGraph {nullptr};  ! pointer to utility graph ;  ; TLine * fLine {nullptr};  ! pointer to utility line ;  ; Double_t fR0 {0.};  Minimum radius for circles. ;  ; Double_t fRgray {0.};  Maximum radius of gray circle. ;  ; Double_t fRmax {0.};  Maximum radius for rectangles. ;  ; Double_t fRmin {0.};  Minimum radius for rectangles. ;  ; TText * fText {nullptr};  ! pointer to utility text ;  ; Double_t fX [15];  X coordinates of the center of circles. ;  ; Double_t fY [15];  Y coordinates of the center of circles. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorWheel.h>. Inheritance diagram for TColorWheel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TColorWheel() [1/2]. TColorWheel::TColorWheel ; (; const TColorWhee",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColorWheel.html:13412,inherit,inherited,13412,doc/master/classTColorWheel.html,https://root.cern,https://root.cern/doc/master/classTColorWheel.html,1,['inherit'],['inherited']
Modifiability,"ndler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Additional Inherited Members;  Public Types inherited from TGProgressBar; enum  { kProgressBarStandardWidth = 16; , kProgressBarTextWidth = 24; , kBlockSize = 8; , kBlockSpace = 2; };  ; enum  EBarType { kStandard; , kFancy; };  ; enum  EFillType { kSolidFill; , kBlockFill; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHProgressBar.html:26046,inherit,inherited,26046,doc/master/classTGHProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGHProgressBar.html,2,['inherit'],['inherited']
Modifiability,"ndler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static void ErrorHandler (Int_t level, Bool_t abort, const char *location, const char *msg);  The error handler function. ;  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Private Member Functions; void ExecLogon ();  Execute logon macro's. ;  ; Int_t SendCanvases ();  Send any created canvas to client. ;  ; Int_t Setup ();  Print the Remote Server logo on standard output. ;  . Private Attributes; Bool_t fInterrupt;  ; Bool_t fIsVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationServer.html:19876,inherit,inherited,19876,doc/master/classTApplicationServer.html,https://root.cern,https://root.cern/doc/master/classTApplicationServer.html,1,['inherit'],['inherited']
Modifiability,"ndler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tHasEditor() const; virtual ULong_tTGObject::Hash() const; virtual Bool_tHasMenuBar() const; virtual Bool_tHasStatusBar() const; virtual Bool_tHasToolBar() const; virtual Bool_tHasToolTips() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidIconify(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Int_tInitWindow(); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootCanvas.html:10223,Inherit,InheritsFrom,10223,root/html532/TRootCanvas.html,https://root.cern,https://root.cern/root/html532/TRootCanvas.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ndler::AllowMTSend ; (; ); const. inlineoverridevirtual . Allows usage of special threads for send operations. ; Reimplemented from THttpWSHandler.; Definition at line 152 of file RWebWindowWSHandler.hxx. ◆ CanServeFiles(). Bool_t ROOT::RWebWindowWSHandler::CanServeFiles ; (; ); const. inlineoverridevirtual . returns true when window allowed to serve files relative to default page ; Reimplemented from THttpWSHandler.; Definition at line 138 of file RWebWindowWSHandler.hxx. ◆ CompleteWSSend(). void ROOT::RWebWindowWSHandler::CompleteWSSend ; (; UInt_t ; wsid). inlineoverridevirtual . React on completion of multi-threaded send operation. ; Reimplemented from THttpWSHandler.; Definition at line 155 of file RWebWindowWSHandler.hxx. ◆ GetBoolEnv(). int RWebWindowWSHandler::GetBoolEnv ; (; const std::string & ; name, . int ; dflt = -1 . ). static . Parse boolean gEnv variable which should be ""yes"" or ""no"". ; Returns1 for true or 0 for false Returns; Parameters. dfltif result is not defined ; namename of the env variable . Definition at line 47 of file RWebWindowsManager.cxx. ◆ GetCodeVersion(). std::string ROOT::RWebWindowWSHandler::GetCodeVersion ; (; ). inlineoverrideprotectedvirtual . Method generate extra suffix for all kinds of loaded code. ; Reimplemented from THttpWSHandler.; Definition at line 38 of file RWebWindowWSHandler.hxx. ◆ GetDefaultPageContent(). TString ROOT::RWebWindowWSHandler::GetDefaultPageContent ; (; ). inlineoverridevirtual . returns content of default web-page THttpWSHandler interface ; Reimplemented from THttpWSHandler.; Definition at line 135 of file RWebWindowWSHandler.hxx. ◆ ProcessBatchHolder(). Bool_t ROOT::RWebWindowWSHandler::ProcessBatchHolder ; (; std::shared_ptr< THttpCallArg > & ; ). inlineoverrideprotectedvirtual . Method used to accept or reject root_batch_holder.js request. ; Reimplemented from THttpWSHandler.; Definition at line 33 of file RWebWindowWSHandler.hxx. ◆ ProcessWS(). Bool_t ROOT::RWebWindowWSHandler::ProcessWS ; (; THt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindowWSHandler.html:16236,variab,variable,16236,doc/v632/classROOT_1_1RWebWindowWSHandler.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindowWSHandler.html,1,['variab'],['variable']
Modifiability,"ndler::AllowMTSend ; (; ); const. inlineoverridevirtual . Allows usage of special threads for send operations. ; Reimplemented from THttpWSHandler.; Definition at line 152 of file RWebWindowWSHandler.hxx. ◆ CanServeFiles(). Bool_t ROOT::RWebWindowWSHandler::CanServeFiles ; (; ); const. inlineoverridevirtual . returns true when window allowed to serve files relative to default page ; Reimplemented from THttpWSHandler.; Definition at line 138 of file RWebWindowWSHandler.hxx. ◆ CompleteWSSend(). void ROOT::RWebWindowWSHandler::CompleteWSSend ; (; UInt_t ; wsid). inlineoverridevirtual . React on completion of multi-threaded send operation. ; Reimplemented from THttpWSHandler.; Definition at line 155 of file RWebWindowWSHandler.hxx. ◆ GetBoolEnv(). int RWebWindowWSHandler::GetBoolEnv ; (; const std::string & ; name, . int ; dflt = -1 . ). static . Parse boolean gEnv variable which should be ""yes"" or ""no"". ; Returns1 for true or 0 for false Returns; Parameters. dfltif result is not defined ; namename of the env variable . Definition at line 48 of file RWebWindowsManager.cxx. ◆ GetCodeVersion(). std::string ROOT::RWebWindowWSHandler::GetCodeVersion ; (; ). inlineoverrideprotectedvirtual . Method generate extra suffix for all kinds of loaded code. ; Reimplemented from THttpWSHandler.; Definition at line 38 of file RWebWindowWSHandler.hxx. ◆ GetDefaultPageContent(). TString ROOT::RWebWindowWSHandler::GetDefaultPageContent ; (; ). inlineoverridevirtual . returns content of default web-page THttpWSHandler interface ; Reimplemented from THttpWSHandler.; Definition at line 135 of file RWebWindowWSHandler.hxx. ◆ ProcessBatchHolder(). Bool_t ROOT::RWebWindowWSHandler::ProcessBatchHolder ; (; std::shared_ptr< THttpCallArg > & ; ). inlineoverrideprotectedvirtual . Method used to accept or reject root_batch_holder.js request. ; Reimplemented from THttpWSHandler.; Definition at line 33 of file RWebWindowWSHandler.hxx. ◆ ProcessWS(). Bool_t ROOT::RWebWindowWSHandler::ProcessWS ; (; THt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindowWSHandler.html:16229,variab,variable,16229,doc/master/classROOT_1_1RWebWindowWSHandler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindowWSHandler.html,1,['variab'],['variable']
Modifiability,"ndlers or file handlers with file descriptor >= 0. ; Reimplemented from TSystem.; Definition at line 1202 of file TUnixSystem.cxx. ◆ SendBuf(). int TUnixSystem::SendBuf ; (; int ; sock, . const void * ; buf, . int ; length . ). overridevirtual . Send a buffer headed by a length indicator. ; Returns length of sent buffer or -1 in case of error. ; Reimplemented from TSystem.; Definition at line 3341 of file TUnixSystem.cxx. ◆ SendRaw(). int TUnixSystem::SendRaw ; (; int ; sock, . const void * ; buf, . int ; length, . int ; opt . ). overridevirtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). Returns the number of bytes sent or -1 in case of error. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET). ; Reimplemented from TSystem.; Definition at line 3405 of file TUnixSystem.cxx. ◆ SetDisplay(). void TUnixSystem::SetDisplay ; (; ). overridevirtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented from TSystem.; Definition at line 663 of file TUnixSystem.cxx. ◆ SetDynamicPath(). void TUnixSystem::SetDynamicPath ; (; const char * ; path). overridevirtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented from TSystem.; Definition at line 4748 of file TUnixSystem.cxx. ◆ Setenv(). void TUnixSystem::Setenv ; (; const char * ; name, . const char * ; value . ). overridevirtual . Set environment variable. ; Reimplemented from TSystem.; Definition at line 2129 of file TUnixSystem.cxx. ◆ SetFPEMask(). Int_t TUnixSystem::SetFPEMask ; (; Int_t ; mask = kDefaultMask). overridevirtual . Set which conditions trigger a floating point exception. ; Return the previous set of conditions. ; Reimplemented from TSystem.; Definition at line 999 of file TUnixSystem.cxx. ◆ SetProgname(). void TUnixSystem::SetProgname ; (; const char * ; name). overridevirtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:66941,variab,variable,66941,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['variab'],['variable']
Modifiability,"ndname.Definition TTree.cxx:5975; TTree::GetVarTTreeFormula * GetVar(Int_t i)Definition TTree.h:564; TTree::SetNotifyvirtual void SetNotify(TObject *obj)Sets the address of the object to be notified when the tree is loaded.Definition TTree.cxx:9231; TTree::GetMaximumvirtual Double_t GetMaximum(const char *columname)Return maximum of column with name columname.Definition TTree.cxx:6235; TTree::GetEntryNumberWithBestIndexvirtual Long64_t GetEntryNumberWithBestIndex(Long64_t major, Long64_t minor=0) constReturn entry number corresponding to major and minor number.Definition TTree.cxx:5890; TTree::SetMaxTreeSizestatic void SetMaxTreeSize(Long64_t maxsize=100000000000LL)Set the maximum size in bytes of a Tree file (static function).Definition TTree.cxx:9197; TTree::Printvoid Print(Option_t *option="""") const overridePrint a summary of the tree contents.Definition TTree.cxx:7219; TTree::UnbinnedFitvirtual Int_t UnbinnedFit(const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)Unbinned fit of one or more variable(s) from a tree.Definition TTree.cxx:9702; TTree::fNClusterRangeInt_t fNClusterRangeNumber of Cluster range in addition to the one defined by 'AutoFlush'.Definition TTree.h:95; TTree::PrintCacheStatsvirtual void PrintCacheStats(Option_t *option="""") constPrint statistics about the TreeCache for this tree.Definition TTree.cxx:7370; TTree::BuildIndexvirtual Int_t BuildIndex(const char *majorname, const char *minorname=""0"")Build a Tree Index (default is TTreeIndex).Definition TTree.cxx:2637; TTree::fPlayerTVirtualTreePlayer * fPlayer! Pointer to current Tree playerDefinition TTree.h:134; TTree::GetIteratorOnAllLeavesvirtual TIterator * GetIteratorOnAllLeaves(bool dir=kIterForward)Creates a new iterator that will go through all the leaves on the tree itself and its friend.Definition TTree.cxx:6082; TTree::SetMakeClassvirtual void SetMakeClass(Int_t make)Set all the branches in this TT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8h_source.html:63420,variab,variable,63420,doc/master/TTree_8h_source.html,https://root.cern,https://root.cern/doc/master/TTree_8h_source.html,1,['variab'],['variable']
Modifiability,"ndn . ). virtual . Reads a command string and executes. ; Called by user. 'Reads' a command string and executes.; Equivalent to MNEXCM except that the command is given as a; character string. ICONDN =; - 0: command executed normally; - 1: command is blank, ignored; - 2: command line unreadable, ignored; - 3: unknown command, ignored; - 4: abnormal termination (e.g., MIGRAD not converged); - 5: command is a request to read PARAMETER definitions; - 6: 'SET INPUT' command; - 7: 'SET TITLE' command; - 8: 'SET COVAR' command; - 9: reserved; - 10: END command; - 11: EXIT or STOP command; - 12: RETURN command. Definition at line 1310 of file TMinuit.cxx. ◆ mncont(). void TMinuit::mncont ; (; Int_t ; ike1, . Int_t ; ike2, . Int_t ; nptu, . Double_t * ; xptu, . Double_t * ; yptu, . Int_t & ; ierrf . ). virtual . Find points along a contour where FCN is minimum. ; Find NPTU points along a contour where the function FMIN (X(KE1),X(KE2)) = AMIN+UP. where FMIN is the minimum of FCN with respect to all; the other NPAR-2 variable parameters (if any).; IERRF on return will be equal to the number of points found:; NPTU if normal termination with NPTU points found; -1 if errors in the calling sequence (KE1, KE2 not variable); 0 if less than four points can be found (using MNMNOT); n>3 if only n points can be found (n < NPTU) input arguments: parx, pary, devs, ngrid ; . Definition at line 1395 of file TMinuit.cxx. ◆ mncrck(). void TMinuit::mncrck ; (; TString ; cardbuf, . Int_t ; maxcwd, . TString & ; comand, . Int_t & ; lnc, . Int_t ; mxp, . Double_t * ; plist, . Int_t & ; llist, . Int_t & ; ierr, . Int_t ; isyswr . ). virtual . Cracks the free-format input. ; Cracks the free-format input, expecting zero or more; alphanumeric fields (which it joins into COMAND(1:LNC)); followed by one or more numeric fields separated by; blanks and/or one comma. The numeric fields are put into; the LLIST (but at most MXP) elements of PLIST. IERR :; - = 0 if no errors,; - = 1 if error(s). . Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:46295,variab,variable,46295,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['variab'],['variable']
Modifiability,"ndom* generator = 0); static TConfidenceLevel*ComputeLimit(Double_t s, Double_t b, Int_t d, TVectorD* se, TVectorD* be, TObjArray*, Int_t nmc = 50000, bool stat = false, TRandom* generator = 0); static TConfidenceLevel*ComputeLimit(TH1* s, TH1* b, TH1* d, TVectorD* se, TVectorD* be, TObjArray*, Int_t nmc = 50000, bool stat = false, TRandom* generator = 0); virtual TClass*IsA() const; TLimit&operator=(const TLimit&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TLimit(); TLimit(const TLimit&). protected:. static boolFluctuate(TLimitDataSource* input, TLimitDataSource* output, bool init, TRandom*, bool stat = false); static Double_tLogLikelihood(Double_t s, Double_t b, Double_t b2, Double_t d). Data Members; private:. static TOrdCollection*fgSystNamesCollection of systematics names; static TArrayD*fgTablea log table... just to speed up calculation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TConfidenceLevel * ComputeLimit(TLimitDataSource* data, Int_t nmc = 50000, bool stat = false, TRandom* generator = 0); class TLimit. Algorithm to compute 95% C.L. limits using the Likelihood ratio; semi-bayesian method.; It takes signal, background and data histograms wrapped in a; TLimitDataSource as input and runs a set of Monte Carlo experiments in; order to compute the limits. If needed, inputs are fluctuated according; to systematics. The output is a TConfidenceLevel. class TLimitDataSource. Takes the signal, background and data histograms as well as different; systematics sources to form the TLimit input. class TConfidenceLevel. Final result of the TLimit algorithm. It is created just after the; time-consuming part and can be stored in a TFile for further processing.; It contains light methods to return CLs, CLb and other interesting; quantities. The actual algorithm...; From an input (TLimitDataSource) it produces an output TCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLimit.html:2474,Inherit,Inheritance,2474,root/html602/TLimit.html,https://root.cern,https://root.cern/root/html602/TLimit.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndomEngineGSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineGSLRandomEngine(const ROOT::Math::GSLRandomEngine&); voidInitialize(); doubleLandau() const; doubleLogNormal(double zeta, double sigma) const; vector<unsigned int>Multinomial(unsigned int ntot, const vector<double>& p) const; stringName() const; unsigned intNegativeBinomial(double p, double n) const; doubleoperator()() const; ROOT::Math::GSLRandomEngine&operator=(const ROOT::Math::GSLRandomEngine&); unsigned intPoisson(double mu) const; voidRandomArray(double* begin, double* end) const; unsigned intRndmInt(unsigned int max) const; voidSetSeed(unsigned int seed) const; unsigned intSize() const; doubletDist(double nu) const; voidTerminate(). protected:. voidSetType(ROOT::Math::GSLRngWrapper* r). Data Members; private:. unsigned intfCurTimecurrent time used to seed the generator; ROOT::Math::GSLRngWrapper*fRngpointer to GSL generator wrapper (managed by the class). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine(). default constructor. No creation of rng is done.; If then Initialize() is called an engine is created; based on default GSL type (MT). GSLRandomEngine( GSLRngWrapper * rng). create from an existing rng.; User manage the rng pointer which is then deleted olny by calling Terminate(). void Initialize(). initialize the generator; If no rng is present the default one based on Mersenne and Twister is created. void Terminate(). delete pointer to contained rng. virtual ~GSLRandomEngine(). call Terminate(). double operator()() const. Generate a random number between ]0,1]; 0 is excluded and 1 is included. unsigned int RndmInt(unsigned int max) const. Generate an integer number between [0,max-1] (including 0 and max-1); if max is larger than available range of algorithm; an error message is printed and zero is returned. void RandomArray(double* begin, double* end) const. Generate an array of random numbers.; The iterators poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRandomEngine.html:2605,Inherit,Inheritance,2605,root/html532/ROOT__Math__GSLRandomEngine.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRandomEngine.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Public Types inherited from TGTextEntry; enum  EEchoMode { kNormal; , kNoEcho; , kPassword; };  ; enum  EInsertMode { kInsert; , kReplace; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:35466,inherit,inherited,35466,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,2,['inherit'],['inherited']
Modifiability,"ndow size, scroll bars will be added to the canvas This allows to display very large canvases (even bigger than the screen size). The Following example shows how to proceed. {; auto c = new TCanvas(""c"",""c"");; c->SetCanvasSize(1500, 1500);; c->SetWindowSize(500, 500);; }. Definition at line 23 of file TCanvas.h. Public Types; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TCanvas (Bool_t build=kTRUE);  Canvas default constructor. ;  ;  TCanvas (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ;  TCanvas (const char *name, const char *title, Int_t ww, Int_t wh);  Create a new canvas at a random position. ;  ;  TCanvas (const char *name, const char *title="""", Int_t form=1);  Create a new canvas with a predefined size form. ;  ;  TCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:3229,inherit,inherited,3229,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['inherit'],['inherited']
Modifiability,"ndow used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGedNameFrame(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame | kHorizontalFrame); Constructor. ~TEveGedNameFrame(); Destructor. void SetModel(TObject* obj); Set model object. void SpawnEditorClone(); Create a new floating editor with current object. TEveGedEditor& operator=(const TEveGedNameFrame& ). TEveGedNameFrame(const TEveGedNameFrame& ). » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveGedNameFrame.html:20694,Inherit,Inheritance,20694,root/html604/TEveGedNameFrame.html,https://root.cern,https://root.cern/root/html604/TEveGedNameFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGedNameFrame(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame | kHorizontalFrame); Constructor. ~TEveGedNameFrame(); Destructor. void SetModel(TObject* obj); Set model object. void SpawnEditorClone(); Create a new floating editor with current object. TEveGedEditor& operator=(const TEveGedNameFrame& ). TEveGedNameFrame(const TEveGedNameFrame& ). » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGedNameFrame.html:20694,Inherit,Inheritance,20694,root/html602/TEveGedNameFrame.html,https://root.cern,https://root.cern/root/html602/TEveGedNameFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow. ;  ; float GetOperationTmout () const;  Returns timeout for synchronous WebWindow operations. ;  ; int GetSendQueueLength (unsigned connid) const;  Returns send queue length for specified connection. ;  ; THttpServer * GetServer ();  Return THttpServer instance serving requests to the window. ;  ; std::string GetUrl (bool remote=true);  Return URL string to connect web window URL typically includes extra parameters required for connection with the window like http://localhost:9635/win1/?key=<connection_key>#<session_key> When. ;  ; std::string GetUserArgs () const;  Returns configured user arguments for web window See SetUserArgs method for more details. ;  ; unsigned GetWidth () const;  returns configured window width (0 - default) actual window width can be different ;  ; int GetX () const;  returns configured window X position (-1 - default) ;  ; int GetY () const;  returns configured window Y position (-1 - default) ;  ; bool HasConnection (unsigned connid=0, bool only_active=true) const;  returns true if specified connection id exists ;  ; bool IsNativeOnlyConn () const;  returns true if only native (own-created) connections are allowed ;  ; bool IsRequireAuthKey () const;  returns true if authentication string is required ;  ; bool IsShown () const;  Returns true when window was shown at least once. ;  ; bool IsUseCurrentDir () const;  returns true if window can access local files via currentdir/ path of http server ;  ; int NumConnections (bool with_pending=false) const;  Returns current number of active clients connections. ;  ; void RecordData (const std::string &fname=""protocol.json"", const std::string &fprefix="""");  Configures recording of communication data in protocol file Provided filename will be used to store JSON array with names of written files - text or binary If data was send from client, ""send"" entry will be placed. ;  ; void Run (double tm=0.);  Run window functionality for specified time If no action can be performed - just sleep specif",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:4427,config,configured,4427,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,3,['config'],['configured']
Modifiability,"ndow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a vertical frame widget as a C++ statement(s) on output stream out. TGFrame& operator=(const TGFrame&). TGCompositeFrame& operator=(const TGCompositeFrame&). TGVerticalFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); { SetWindowName(); }. » Author: Fons Rademakers 03/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGVerticalFrame.html:20622,Inherit,Inheritance,20622,root/html604/TGVerticalFrame.html,https://root.cern,https://root.cern/root/html604/TGVerticalFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a vertical frame widget as a C++ statement(s) on output stream out. TGFrame& operator=(const TGFrame&). TGCompositeFrame& operator=(const TGCompositeFrame&). TGVerticalFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); { SetWindowName(); }. » Author: Fons Rademakers 03/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGVerticalFrame.html:20622,Inherit,Inheritance,20622,root/html602/TGVerticalFrame.html,https://root.cern,https://root.cern/root/html602/TGVerticalFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetConeEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Initialize widget pointers to 0; Constructor. void SetModel(TObject* obj); Set model object. TEveJetConeEditor(const TEveJetConeEditor& ). TEveJetConeEditor& operator=(const TEveJetConeEditor& ). virtual ~TEveJetConeEditor(); {}. » Author: Matevz Tadel, Jochen Thaeder 2009 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveJetConeEditor.html:19731,Inherit,Inheritance,19731,root/html534/TEveJetConeEditor.html,https://root.cern,https://root.cern/root/html534/TEveJetConeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveGeoTopNode*fTopNodeRE; TEveGValuator*fVisLevel; TEveGValuator*fVisOption; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGeoTopNodeEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoVisOption(); Slot for VisOption. void DoVisLevel(); Slot for VisLevel. void DoMaxVisNodes(); Slot for MaxVisNodes. TEveGeoNodeEditor& operator=(const TEveGeoTopNodeEditor& ). TEveGeoTopNodeEditor(const TEveGeoTopNodeEditor& ). virtual ~TEveGeoTopNodeEditor(); {}. » Last changed: root/eve:$Id: TEveGeoNodeEditor.h 26034 2008-10-31 14:01:05Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGeoTopNodeEditor.html:19901,Inherit,Inheritance,19901,root/html532/TEveGeoTopNodeEditor.html,https://root.cern,https://root.cern/root/html532/TEveGeoTopNodeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow; kBackDecreasingWindow; kBackSmoothing3; kBackSmoothing5; kBackSmoothing7; kBackSmoothing9; kBackSmoothing11; kBackSmoothing13; kBackSmoothing15; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TH1*fHistogramresulting histogram; Int_tfMaxPeaksMaximum number of peaks to be found; Int_tfNPeaksnumber of peaks found; TStringTNamed::fNameobject identifier; Float_t*fPosition[fNPeaks] array of current peak positions; Float_t*fPositionX[fNPeaks] X position of peaks; Float_t*fPositionY[fNPeaks] Y position of peaks; Float_tfResolutionresolution of the neighboring peaks; TStringTNamed::fTitleobject title; static Int_tfgAverageWindowAverage window of searched peaks; static Int_tfgIterationsMaximum number of decon iterations (default=3). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpectrum(). Constructor.; ; . TSpectrum(Int_t maxpositions, Float_t resolution = 1). ; maxpositions: maximum number of peaks; resolution: determines resolution of the neighboring peaks; default value is 1 correspond to 3 sigma distance; between peaks. Higher values allow higher resolution; (smaller distance between peaks.; May be set later through SetResolution.; ; . ~TSpectrum(). Destructor.; ; . void SetAverageWindow(Int_t w = 3). Static function: Set average window of searched peaks; (see TSpectrum::SearchHighRes).; ; . void SetDeconIterations(Int_t n = 3). Static function: Set max number of decon iterations in deconvolution; operation (see TSpectrum::SearchHighRes).; ; . TH1 * Background(const TH1* hist, Int_t niter = 20, Option_t* option = """"). One-dimensional background estimation function. This function calculates the background spectrum in the input histogram h.; The background is returned as a histogram.; ; Function parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrum.html:9050,Inherit,Inheritance,9050,root/html532/TSpectrum.html,https://root.cern,https://root.cern/root/html532/TSpectrum.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return the default graphics context in use. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; Bool_t fActive;  true if item is active ;  ; const TGPicture * fBigPic;  big icon ;  ; Bool_t fChecked;  true if item is checked ;  ; const TGPicture * fCheckMark;  checkmark ;  ; Int_t * fCpos;  position of sub names ;  ; Int_t * fCtw;  wid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVEntry.html:24241,inherit,inherited,24241,doc/master/classTGLVEntry.html,https://root.cern,https://root.cern/doc/master/classTGLVEntry.html,1,['inherit'],['inherited']
Modifiability,"ndowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; TGButton*fYes; TGButton*fYesAll; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMsgBox(const TGWindow* p = 0, const TGWindow* main = 0, const char* title = 0, const char* msg = 0, const TGPicture* icon = 0, Int_t buttons = kMBDismiss, Int_t* ret_code = 0, UInt_t options = kVerticalFrame, Int_t text_align = kTextCenterX|kTextCenterY); Create a message dialog box. TGMsgBox(const TGWindow* p, const TGWindow* main, const char* title, const char* msg, EMsgBoxIcon icon, Int_t buttons = kMBDismiss, Int_t* ret_code = 0, UInt_t options = kVerticalFrame, Int_t text_align = kTextCenterX|kTextCenterY); Create a message dialog box with the following parameters:.; title: Window title; msg: Message to be shown ('\n' may be used to split it in lines); icon: Picture to be shown at the left on the dialog window.; It might take any of the following values:; kMBIconStop, kMBIconQuestion,; kMBIconExclamation, kMBIconAsterisk; buttons: Buttons to be shown at the botton of the dialgo window.; Look at EMsgBoxButton for the different po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMsgBox.html:22886,Inherit,Inheritance,22886,root/html532/TGMsgBox.html,https://root.cern,https://root.cern/root/html532/TGMsgBox.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cylindrical3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:9554,Inherit,Inheritance,9554,root/html602/ROOT__Math__PositionVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cylindrical3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:9554,Inherit,Inheritance,9554,root/html604/ROOT__Math__PositionVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndricalEta3D<double>& v); ROOT::Math::CylindricalEta3D<double>CylindricalEta3D<double>(ROOT::Math::CylindricalEta3D<double>::Scalar rho, ROOT::Math::CylindricalEta3D<double>::Scalar eta, ROOT::Math::CylindricalEta3D<double>::Scalar phi); doubleEta() const; voidGetCoordinates(Scalar[] dest) const; voidGetCoordinates(ROOT::Math::CylindricalEta3D<double>::Scalar& rho, ROOT::Math::CylindricalEta3D<double>::Scalar& eta, ROOT::Math::CylindricalEta3D<double>::Scalar& phi) const; doubleMag2() const; voidNegate(); booloperator!=(const ROOT::Math::CylindricalEta3D<double>& rhs) const; ROOT::Math::CylindricalEta3D<double>&operator=(const ROOT::Math::CylindricalEta3D<double>& v); ROOT::Math::CylindricalEta3D<double>&operator=<ROOT::Math::CylindricalEta3D<double> >(const ROOT::Math::CylindricalEta3D<double>& c); booloperator==(const ROOT::Math::CylindricalEta3D<double>& rhs) const; doublePerp2() const; doublePhi() const; doubleR() const; doubleRho() const; voidScale(double a); voidSetCoordinates(const Scalar[] src); voidSetCoordinates(ROOT::Math::CylindricalEta3D<double>::Scalar rho, ROOT::Math::CylindricalEta3D<double>::Scalar eta, ROOT::Math::CylindricalEta3D<double>::Scalar phi); voidSetEta(double eta); voidSetPhi(double phi); voidSetRho(double rho); voidSetXYZ(ROOT::Math::CylindricalEta3D<double>::Scalar x, ROOT::Math::CylindricalEta3D<double>::Scalar y, ROOT::Math::CylindricalEta3D<double>::Scalar z); doubleTheta() const; doubleX() const; doublex() const; doubleY() const; doubley() const; doubleZ() const; doublez() const. private:. static ROOT::Math::CylindricalEta3D<double>::Scalarpi(); voidRestrict(). Data Members; private:. doublefEta; doublefPhi; doublefRho. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__CylindricalEta3D_double_.html:2353,Inherit,Inheritance,2353,root/html602/ROOT__Math__CylindricalEta3D_double_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__CylindricalEta3D_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ndricalEta3D<double>& v); ROOT::Math::CylindricalEta3D<double>CylindricalEta3D<double>(ROOT::Math::CylindricalEta3D<double>::Scalar rho, ROOT::Math::CylindricalEta3D<double>::Scalar eta, ROOT::Math::CylindricalEta3D<double>::Scalar phi); doubleEta() const; voidGetCoordinates(Scalar[] dest) const; voidGetCoordinates(ROOT::Math::CylindricalEta3D<double>::Scalar& rho, ROOT::Math::CylindricalEta3D<double>::Scalar& eta, ROOT::Math::CylindricalEta3D<double>::Scalar& phi) const; doubleMag2() const; voidNegate(); booloperator!=(const ROOT::Math::CylindricalEta3D<double>& rhs) const; ROOT::Math::CylindricalEta3D<double>&operator=(const ROOT::Math::CylindricalEta3D<double>& v); ROOT::Math::CylindricalEta3D<double>&operator=<ROOT::Math::CylindricalEta3D<double> >(const ROOT::Math::CylindricalEta3D<double>& c); booloperator==(const ROOT::Math::CylindricalEta3D<double>& rhs) const; doublePerp2() const; doublePhi() const; doubleR() const; doubleRho() const; voidScale(double a); voidSetCoordinates(const Scalar[] src); voidSetCoordinates(ROOT::Math::CylindricalEta3D<double>::Scalar rho, ROOT::Math::CylindricalEta3D<double>::Scalar eta, ROOT::Math::CylindricalEta3D<double>::Scalar phi); voidSetEta(double eta); voidSetPhi(double phi); voidSetRho(double rho); voidSetXYZ(ROOT::Math::CylindricalEta3D<double>::Scalar x, ROOT::Math::CylindricalEta3D<double>::Scalar y, ROOT::Math::CylindricalEta3D<double>::Scalar z); doubleTheta() const; doubleX() const; doublex() const; doubleY() const; doubley() const; doubleZ() const; doublez() const. private:. static ROOT::Math::CylindricalEta3D<double>::Scalarpi(); voidRestrict(). Data Members; private:. doublefEta; doublefPhi; doublefRho. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__CylindricalEta3D_double_.html:2353,Inherit,Inheritance,2353,root/html604/ROOT__Math__CylindricalEta3D_double_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__CylindricalEta3D_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nds of branches can be added to a tree:; 66- Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; 67structures.; 68- Any C++ object or collection, provided by the STL or ROOT.; 69 ; 70In the following, the details about the creation of different types of branches are given.; 71 ; 72\anchor addcolumnoffundamentaltypes; 73## Add a column (""branch"") holding fundamental types and arrays thereof; 74This strategy works also for lists of variables, e.g. to describe simple structures.; 75It is strongly recommended to persistify those as objects rather than lists of leaves.; 76 ; 77~~~ {.cpp}; 78 auto branch = tree.Branch(branchname, address, leaflist, bufsize); 79~~~; 80- address is the address of the first item of a structure; 81- leaflist is the concatenation of all the variable names and types; 82 separated by a colon character :; 83 The variable name and the variable type are separated by a; 84 slash (/). The variable type must be 1 character. (Characters; 85 after the first are legal and will be appended to the visible; 86 name of the leaf, but have no effect.) If no type is given, the; 87 type of the variable is assumed to be the same as the previous; 88 variable. If the first variable does not have a type, it is; 89 assumed of type F by default. The list of currently supported; 90 types is given below:; 91 - `C` : a character string terminated by the 0 character; 92 - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; 93 - `b` : an 8 bit unsigned integer (`UChar_t`); 94 - `S` : a 16 bit signed integer (`Short_t`); 95 - `s` : a 16 bit unsigned integer (`UShort_t`); 96 - `I` : a 32 bit signed integer (`Int_t`); 97 - `i` : a 32 bit unsigned integer (`UInt_t`); 98 - `F` : a 32 bit floating point (`Float_t`); 99 - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); 100 - `D` : a 64 bit floating point (`Double_t`); 101 - `d` : a 24 bit truncated floating poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:4217,variab,variable,4217,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNtupleD(); Default constructor for Ntuple*-*-*-*-*-*-*-*-; *-* ==============================. TNtupleD(const char* name, const char* title, const char* varlist, Int_t bufsize = 32000); Create an Ntuple*-*-; *-* ================; The parameter varlist describes the list of the ntuple variables; separated by a colon:; example: ""x:y:z:energy""; For each variable in the list a separate branch is created. NOTE:; -Use TTree to create branches with variables of different data types.; -Use TTree when the number of branches is large (> 100).; -. ~TNtupleD(); Default destructor for an Ntuple*-*-*-*-*-*-; *-* ================================. void ResetBranchAddress(TBranch* ); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void ResetBranchAddresses(); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void Browse(TBrowser* b); Browse content. Int_t Fill(); -*-*Fill a Ntuple with current values in fArgs; *-* ==========================================; Note that this function is protected.; Currently called only by TChain::Merge. Int_t Fill(const Double_t* x); Fill a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNtupleD.html:24359,variab,variables,24359,root/html528/TNtupleD.html,https://root.cern,https://root.cern/root/html528/TNtupleD.html,2,['variab'],"['variable', 'variables']"
Modifiability,"nd . ); const. inline . Definition at line 238 of file RooAbsCollection.h. ◆ Print(). void RooAbsCollection::Print ; (; Option_t * ; option = nullptr); const. inlineoverridevirtual . This method must be overridden when a class wants to print itself. ; Reimplemented from TObject.; Definition at line 315 of file RooAbsCollection.h. ◆ printClassName(). void RooAbsCollection::printClassName ; (; std::ostream & ; os); const. overridevirtual . Return collection class name. ; Reimplemented from RooPrintable.; Definition at line 1186 of file RooAbsCollection.cxx. ◆ printLatex() [1/2]. RooAbsCollection::printLatex ; (; const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ); const. Output content of collection as LaTex table. ; By default a table with two columns is created: the left column contains the name of each variable, the right column the value.; The following optional named arguments can be used to modify the default behavior . Argument Effect . Columns(Int_t ncol) Fold table into multiple columns, i.e. ncol=3 will result in 3 x 2 = 6 total columns . Sibling(const RooAbsCollection& other) Define sibling list. The sibling list is assumed to have objects with the same name in the same order. If this is not the case warnings will be printed. If a single sibling list is specified, 3 columns will be output: the (common) name, the value of this list and the value in the sibling list. Multiple sibling lists can be specified by repeating the Sibling() command. . Format(const char* str) Classic format string, provided for backward compatibility . Format() Formatting arguments. . const char* what Controls what is shown. ""N"" adds name, ""E"" adds error, ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value . FixedPrecision(int n) Controls precision, set fixed numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCollection.html:46944,variab,variable,46944,doc/master/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/master/classRooAbsCollection.html,1,['variab'],['variable']
Modifiability,"nd . ); const. inline . Definition at line 238 of file RooAbsCollection.h. ◆ Print(). void RooAbsCollection::Print ; (; Option_t * ; option = nullptr); const. inlineoverridevirtual . This method must be overridden when a class wants to print itself. ; Reimplemented from TObject.; Definition at line 338 of file RooAbsCollection.h. ◆ printClassName(). void RooAbsCollection::printClassName ; (; std::ostream & ; os); const. overridevirtual . Return collection class name. ; Reimplemented from RooPrintable.; Definition at line 1176 of file RooAbsCollection.cxx. ◆ printLatex() [1/2]. RooAbsCollection::printLatex ; (; const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ); const. Output content of collection as LaTex table. ; By default a table with two columns is created: the left column contains the name of each variable, the right column the value.; The following optional named arguments can be used to modify the default behavior . Argument Effect . Columns(Int_t ncol) Fold table into multiple columns, i.e. ncol=3 will result in 3 x 2 = 6 total columns . Sibling(const RooAbsCollection& other) Define sibling list. The sibling list is assumed to have objects with the same name in the same order. If this is not the case warnings will be printed. If a single sibling list is specified, 3 columns will be output: the (common) name, the value of this list and the value in the sibling list. Multiple sibling lists can be specified by repeating the Sibling() command. . Format(const char* str) Classic format string, provided for backward compatibility . Format() Formatting arguments. . const char* what Controls what is shown. ""N"" adds name, ""E"" adds error, ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value . FixedPrecision(int n) Controls precision, set fixed numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:48727,variab,variable,48727,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,1,['variab'],['variable']
Modifiability,"ne 'to' inclusive. ;  ; TList * GetListOfLogs () const;  ; Int_t Grep (const char *txt, Int_t from=0);  Search lines containing 'txt', starting from line 'from'. ;  ; TClass * IsA () const override;  ; Bool_t LogToBox ();  ; void Print (Option_t *opt=0) const override;  Print head info about the content. ;  ; void Prt (const char *what, Bool_t newline=kTRUE);  Special printing procedure. ;  ; Int_t Retrieve (const char *ord=""*"", TProofLog::ERetrieveOpt opt=TProofLog::kTrailing, const char *fname=0, const char *pattern=0);  Retrieve the content of the log file associated with worker 'ord'. ;  ; Int_t Save (const char *ord=""*"", const char *fname=0, Option_t *opt=""w"");  Save the content associated with worker 'ord' to finel 'fname'. ;  ; void SetLogToBox (Bool_t lgbox=kFALSE);  ; TDatime StartTime ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLog.html:2523,inherit,inherited,2523,doc/master/classTProofLog.html,https://root.cern,https://root.cern/doc/master/classTProofLog.html,1,['inherit'],['inherited']
Modifiability,"ne (const TSpline &);  Copy constructor. ;  ; TSpline & operator= (const TSpline &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TSplinePoly5 * fPoly = nullptr;  [fNp] Array of polynomial terms ;  ;  Protected Attributes inherited from TSpline; Double_t fDelta = -1.;  Distance between equidistant knots. ;  ; TGraph * fGraph = nullptr;  Graph for drawing the knots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:20086,inherit,inherited,20086,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,2,['inherit'],['inherited']
Modifiability,ne . Update configuration after a fit using the FitResult. ; Definition at line 211 of file FitConfig.h. ◆ UseWeightCorrection(). bool ROOT::Fit::FitConfig::UseWeightCorrection ; (; ); const. inline . Apply Weight correction for error matrix computation. ; Definition at line 214 of file FitConfig.h. Member Data Documentation. ◆ fMinimizerOpts. ROOT::Math::MinimizerOptions ROOT::Fit::FitConfig::fMinimizerOpts. private . minimizer control parameters including name and algo type ; Definition at line 268 of file FitConfig.h. ◆ fMinosErrors. bool ROOT::Fit::FitConfig::fMinosErrors. private . do full error analysis using Minos ; Definition at line 261 of file FitConfig.h. ◆ fMinosParams. std::vector<unsigned int> ROOT::Fit::FitConfig::fMinosParams. private . vector with the parameter indices for running Minos ; Definition at line 266 of file FitConfig.h. ◆ fNormErrors. bool ROOT::Fit::FitConfig::fNormErrors. private . flag for error normalization ; Definition at line 259 of file FitConfig.h. ◆ fParabErrors. bool ROOT::Fit::FitConfig::fParabErrors. private . get correct parabolic errors estimate (call Hesse after minimizing) ; Definition at line 260 of file FitConfig.h. ◆ fSettings. std::vector<ROOT::Fit::ParameterSettings> ROOT::Fit::FitConfig::fSettings. private . vector with the parameter settings ; Definition at line 265 of file FitConfig.h. ◆ fUpdateAfterFit. bool ROOT::Fit::FitConfig::fUpdateAfterFit. private . update the configuration after a fit using the result ; Definition at line 262 of file FitConfig.h. ◆ fWeightCorr. bool ROOT::Fit::FitConfig::fWeightCorr. private . apply correction to errors for weights fits ; Definition at line 263 of file FitConfig.h. Libraries for ROOT::Fit::FitConfig:. [legend]; The documentation for this class was generated from the following files:; math/mathcore/inc/Fit/FitConfig.h; math/mathcore/src/FitConfig.cxx. ROOTFitFitConfig. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:15 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:13095,config,configuration,13095,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,1,['config'],['configuration']
Modifiability,"ne 124 of file TProofDraw.h. Public Member Functions;  TProofDrawEventList ();  ;  ~TProofDrawEventList () override;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void SlaveTerminate () override;  See TProofDraw::SlaveTerminate(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEventList.html:1374,inherit,inherited,1374,doc/master/classTProofDrawEventList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEventList.html,1,['inherit'],['inherited']
Modifiability,"ne 145 of file TProofDraw.h. Public Member Functions;  TProofDrawEntryList ();  ;  ~TProofDrawEntryList () override;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void SlaveTerminate () override;  See TProofDraw::SlaveTerminate(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEntryList.html:1374,inherit,inherited,1374,doc/master/classTProofDrawEntryList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEntryList.html,1,['inherit'],['inherited']
Modifiability,"ne 234 of file DecisionTree.h. ◆ fMinLinCorrForFisher. Double_t TMVA::DecisionTree::fMinLinCorrForFisher. private . the minimum linear correlation between two variables demanded for use in fisher criterium in node splitting ; Definition at line 208 of file DecisionTree.h. ◆ fMinNodeSize. Double_t TMVA::DecisionTree::fMinNodeSize. private . min fraction of training events in node ; Definition at line 215 of file DecisionTree.h. ◆ fMinSepGain. Double_t TMVA::DecisionTree::fMinSepGain. private . min number of separation gain to perform node splitting ; Definition at line 216 of file DecisionTree.h. ◆ fMinSize. Double_t TMVA::DecisionTree::fMinSize. private . min number of events in node ; Definition at line 214 of file DecisionTree.h. ◆ fMyTrandom. TRandom3* TMVA::DecisionTree::fMyTrandom. private . random number generator for randomised trees ; Definition at line 230 of file DecisionTree.h. ◆ fNCuts. Int_t TMVA::DecisionTree::fNCuts. private . number of grid point in variable cut scans ; Definition at line 206 of file DecisionTree.h. ◆ fNNodesBeforePruning. Int_t TMVA::DecisionTree::fNNodesBeforePruning. private . remember this one (in case of pruning, it allows to monitor the before/after ; Definition at line 222 of file DecisionTree.h. ◆ fNodePurityLimit. Double_t TMVA::DecisionTree::fNodePurityLimit. private . purity limit to decide whether a node is signal ; Definition at line 224 of file DecisionTree.h. ◆ fNvars. UInt_t TMVA::DecisionTree::fNvars. private . number of variables used to separate S and B ; Definition at line 205 of file DecisionTree.h. ◆ fPruneMethod. EPruneMethod TMVA::DecisionTree::fPruneMethod. private . method used for pruning ; Definition at line 221 of file DecisionTree.h. ◆ fPruneStrength. Double_t TMVA::DecisionTree::fPruneStrength. private . a parameter to set the ""amount"" of pruning..needs to be adjusted ; Definition at line 219 of file DecisionTree.h. ◆ fRandomisedTree. Bool_t TMVA::DecisionTree::fRandomisedTree. private . choose at each ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:29038,variab,variable,29038,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"ne 26 of file TASImagePlugin.h. Public Member Functions;  TASImagePlugin (const char *ext);  ;  ~TASImagePlugin () override;  ; virtual Bool_t ASImage2File (ASImage *);  ; virtual ASImage * File2ASImage (const char *);  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; unsigned char * ReadFile (const char *, UInt_t &, UInt_t &) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WriteFile (const char *, unsigned char *, UInt_t, UInt_t) override;  ;  Public Member Functions inherited from TImagePlugin;  TImagePlugin (const char *ext);  ;  ~TImagePlugin () override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImagePlugin.html:1296,inherit,inherited,1296,doc/master/classTASImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTASImagePlugin.html,1,['inherit'],['inherited']
Modifiability,"ne 3089 of file TChain.cxx. Member Data Documentation. ◆ fCanDeleteRefs. bool TChain::fCanDeleteRefs. protected . ! If true, TProcessIDs are deleted when closing a file ; Definition at line 40 of file TChain.h. ◆ fFile. TFile* TChain::fFile. protected . ! Pointer to current file (We own the file). ; Definition at line 42 of file TChain.h. ◆ fFiles. TObjArray* TChain::fFiles. protected . -> List of file names containing the trees (TChainElement, owned) ; Definition at line 43 of file TChain.h. ◆ fGlobalRegistration. bool TChain::fGlobalRegistration. protected . ! if true, bypass use of global lists ; Definition at line 46 of file TChain.h. ◆ fNtrees. Int_t TChain::fNtrees. protected . Number of trees. ; Definition at line 37 of file TChain.h. ◆ fProofChain. TChain* TChain::fProofChain. protected . ! chain proxy when going to be processed by PROOF ; Definition at line 45 of file TChain.h. ◆ fStatus. TList* TChain::fStatus. protected . -> List of active/inactive branches (TChainElement, owned) ; Definition at line 44 of file TChain.h. ◆ fTree. TTree* TChain::fTree. protected . ! Pointer to current tree (Note: We do not own this tree.) ; Definition at line 41 of file TChain.h. ◆ fTreeNumber. Int_t TChain::fTreeNumber. protected . ! Current Tree number in fTreeOffset table ; Definition at line 38 of file TChain.h. ◆ fTreeOffset. Long64_t* TChain::fTreeOffset. protected . [fTreeOffsetLen] Array of variables ; Definition at line 39 of file TChain.h. ◆ fTreeOffsetLen. Int_t TChain::fTreeOffsetLen. protected . Current size of fTreeOffset array. ; Definition at line 36 of file TChain.h. ◆ kBigNumber. constexpr auto TChain::kBigNumber = TTree::kMaxEntries. staticconstexpr . Definition at line 68 of file TChain.h. Libraries for TChain:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/TChain.h; tree/tree/src/TChain.cxx. TChain. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:10:57 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:105128,variab,variables,105128,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,1,['variab'],['variables']
Modifiability,"ne 360 of file DeepNet.h. ◆ SetLossFunction(). template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . void TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::SetLossFunction ; (; ELossFunction ; J). inline . Definition at line 364 of file DeepNet.h. ◆ SetRegularization(). template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . void TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::SetRegularization ; (; ERegularization ; R). inline . Definition at line 366 of file DeepNet.h. ◆ SetWeightDecay(). template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . void TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::SetWeightDecay ; (; Scalar_t ; weightDecay). inline . Definition at line 367 of file DeepNet.h. ◆ Update(). template<typename Architecture_t , typename Layer_t > . auto TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::Update ; (; Scalar_t ; learningRate). Function that will update the weights and biases in the layers that contain weights and biases. . Definition at line 1254 of file DeepNet.h. Member Data Documentation. ◆ fBatchDepth. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . size_t TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::fBatchDepth. private . The depth of the batch used for training/testing. ; Definition at line 93 of file DeepNet.h. ◆ fBatchHeight. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . size_t TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::fBatchHeight. private . The height of the batch used for training/testing. ; Definition at line 94 of file DeepNet.h. ◆ fBatchSize. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . size_t TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::fBatchSize. private . Batch size used for training and evaluation. ; Definition at line 88 of file DeepNet.h. ◆ fBatchWidth. template<typename Architecture_t , typename Layer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html:29083,layers,layers,29083,doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,1,['layers'],['layers']
Modifiability,"ne 46 of file RooLegendre.h. ◆ doEval(). void RooLegendre::doEval ; (; RooFit::EvalContext & ; ctx); const. overrideprotectedvirtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 146 of file RooLegendre.cxx. ◆ evaluate(). double RooLegendre::evaluate ; (; ); const. overrideprotectedvirtual . Note: P_0^0 = 1, so P_l^m = P_l^m P_0^0. ; Implements RooAbsReal.; Reimplemented in RooSpHarmonic.; Definition at line 96 of file RooLegendre.cxx. ◆ getAnalyticalIntegral(). Int_t RooLegendre::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Reimplemented in RooSpHarmonic.; Definition at line 165 of file RooLegendre.cxx. ◆ getMaxVal(). Int_t RooLegendre::getMaxVal ; (; const RooArgSet & ; vars); const. overridevirtual . Advertise capability to determine maximum value of function for given set of observables. ; If no direct generator method is provided, this information will assist the accept/reject generator to operate more efficiently as it can skip the initial trial sampling phase to empirically find the function maximum ; Reimplemented from RooAbsReal.; Reimplemented in RooSpHarmonic.; Definition at line 205 of file RooLegendre.cxx. ◆ IsA(). TClass * RooLegendre::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Reimplemented in RooSpHarmonic.; Definition at line 46 of file Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:63263,config,configuration,63263,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,1,['config'],['configuration']
Modifiability,"ne 580 of file TGFrame.h. Public Member Functions;  TGHeaderFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Header Frame constructor. ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event in header frame. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle double click mouse event in header frame. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events in header frame. ;  ; TClass * IsA () const override;  ; void SetColumnsInfo (Int_t nColumns, TGTextButton **colHeader, TGVFileSplitter **splitHeader);  Set columns information in the header frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGHorizontalFrame;  TGHorizontalFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a horizontal frame widget as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHeaderFrame.html:1344,inherit,inherited,1344,doc/master/classTGHeaderFrame.html,https://root.cern,https://root.cern/doc/master/classTGHeaderFrame.html,1,['inherit'],['inherited']
Modifiability,"ne =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooEffGenContext.h>. Inheritance diagram for RooEffGenContext:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooEffGenContext(). RooEffGenContext::RooEffGenContext ; (; const RooAbsPdf & ; model, . const RooAbsPdf & ; pdf, . const RooAbsReal & ; eff, . const RooArgSet & ; vars, . const RooDataSet * ; prototype = nullptr, . const RooArgSet * ; auxProto = nullptr, . bool ; verbose = false, . const RooArgSet * ; forceDirect = nullptr . ). Constructor of generator context for RooEffProd products. ; Definition at line 38 of file RooEffGenContext.cxx. Member Function Documentation. ◆ Class(). static TClass * RooEffGenContext::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooEffGenContext::Class_Name ; (; ). static . ReturnsName of thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffGenContext.html:17066,inherit,inherited,17066,doc/master/classRooEffGenContext.html,https://root.cern,https://root.cern/doc/master/classRooEffGenContext.html,2,['inherit'],['inherited']
Modifiability,"ne about Parallel Coordinates is to find techniques to reduce the output’s cluttering. The Parallel Coordinates plots in ROOT have been implemented as a new plotting option “PARA” in the TTree::Draw()method. To demonstrate how the Parallel Coordinates works in ROOT we will use the tree produced by the following “pseudo C++” code:; void parallel_example() {; TNtuple *nt = new TNtuple(""nt"",""Demo ntuple"",""x:y:z:u:v:w:a:b:c"");; for (Int_t i=0; i<3000; i++) {; nt->Fill( rnd, rnd, rnd, rnd, rnd, rnd, rnd, rnd, rnd );; nt->Fill( s1x, s1y, s1z, s2x, s2y, s2z, rnd, rnd, rnd );; nt->Fill( rnd, rnd, rnd, rnd, rnd, rnd, rnd, s3y, rnd );; nt->Fill( s2x-1, s2y-1, s2z, s1x+.5, s1y+.5, s1z+.5, rnd, rnd, rnd );; nt->Fill( rnd, rnd, rnd, rnd, rnd, rnd, rnd, rnd, rnd );; nt->Fill( s1x+1, s1y+1, s1z+1, s3x-2, s3y-2, s3z-2, rnd, rnd, rnd );; nt->Fill( rnd, rnd, rnd, rnd, rnd, rnd, s3x, rnd, s3z );; nt->Fill( rnd, rnd, rnd, rnd, rnd, rnd, rnd, rnd, rnd );; }; The data set generated has:. 9 variables: x, y, z, u, v, w, a, b, c.; 3000*8 = 24000 events.; 3 sets of random points distributed on spheres: s1, s2, s3; Random values (noise): rnd; The variables a,b,c are almost completely random. The variables a and c are correlated via the 1st and 3rd coordinates of the 3rd “sphere” s3. The command used to produce the Parallel Coordinates plot is:; nt->Draw(""x:a:y:b:z:u:c:v:w"","""",""PARA"");. Cluttered output produced when all the tree events are plotted. If the 24000 events are plotted as solid lines and no special techniques are used to clarify the picture, the result is the previous picture which is very cluttered and useless. To improve the readability of the Parallel Coordinates output and to explore interactively the data set, many techniques are available. We have implemented a few in ROOT. First of all, in order to show better where the clusters on the various axes are, a 1D histogram is associated to each axis. These histograms (one per axis) are filled according to the number of lines pass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:612154,variab,variables,612154,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"ne attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjected;  TEveProjected ();  Constructor. ;  ; virtual ~TEveProjected ();  Destructor. ;  ; Float_t GetDepth () const;  ; TEveProjectionManager * GetManager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the element. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnRefProjectable (TEveProjectable *assumed_parent, bool notifyParent=true);  Remove reference to projectable. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveStraightLineSet; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:33811,inherit,inherited,33811,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,1,['inherit'],['inherited']
Modifiability,"ne attributes for different objects. More...;  ; class  RAttrFill;  Drawing fill attributes for different objects. More...;  ; class  RAttrFont;  A font attributes, used together with text attributes. More...;  ; class  RAttrLine;  Drawing line attributes for different objects. More...;  ; class  RAttrLineEnding;  Attributes for line ending. More...;  ; class  RAttrMap;  ; class  RAttrMargins;  A margins attributes. Only relative and pixel coordinates are allowed. More...;  ; class  RAttrMarker;  A marker attributes. More...;  ; class  RAttrText;  A text attributes. More...;  ; class  RAttrValue;  Template class to access single value from drawable or other attributes. More...;  ; class  RAxisBase;  Histogram axis base class. More...;  ; class  RAxisConfig;  Objects used to configure the different axis types. More...;  ; class  RAxisDrawable;  Axis drawing. More...;  ; class  RAxisEquidistant;  Axis with equidistant bin borders. More...;  ; class  RAxisGrow;  An axis that can extend its range, keeping the number of its bins unchanged. More...;  ; class  RAxisIrregular;  An axis with non-equidistant bins (also known as ""variable binning""). More...;  ; class  RAxisLabels;  A RAxisGrow that has a label assigned to each bin and a bin width of 1. More...;  ; class  RBitsetField;  Template specializations for C++ std::bitset. More...;  ; class  RCanvas;  A window's topmost RPad. More...;  ; class  RCanvasDisplayItem;  class RCanvasDisplayItem More...;  ; class  RCanvasPainter;  Implementation of painter for ROOT::Experimental::RCanvas, using RWebWindow. More...;  ; class  RCardinalityField;  An artificial field that transforms an RNTuple column that contains the offset of collections into collection sizes. More...;  ; class  RChangeAttrRequest;  ; class  RClassField;  The field for a class with dictionary. More...;  ; class  RClusterDescriptor;  Meta-data for a set of ntuple clusters. More...;  ; class  RClusterGroupDescriptor;  Clusters are bundled in cluster groups. Mor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html:2627,extend,extend,2627,doc/master/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html,1,['extend'],['extend']
Modifiability,"ne attributes for different objects. More...;  ; class  RAttrFill;  Drawing fill attributes for different objects. More...;  ; class  RAttrFont;  A font attributes, used together with text attributes. More...;  ; class  RAttrLine;  Drawing line attributes for different objects. More...;  ; class  RAttrLineEnding;  Attributes for line ending. More...;  ; class  RAttrMap;  ; class  RAttrMargins;  A margins attributes. Only relative and pixel coordinates are allowed. More...;  ; class  RAttrMarker;  A marker attributes. More...;  ; class  RAttrText;  A text attributes. More...;  ; class  RAttrValue;  Template class to access single value from drawable or other attributes. More...;  ; class  RAxisBase;  Histogram axis base class. More...;  ; class  RAxisConfig;  Objects used to configure the different axis types. More...;  ; class  RAxisDrawable;  Axis drawing. More...;  ; class  RAxisEquidistant;  Axis with equidistant bin borders. More...;  ; class  RAxisGrow;  An axis that can extend its range, keeping the number of its bins unchanged. More...;  ; class  RAxisIrregular;  An axis with non-equidistant bins (also known as ""variable binning""). More...;  ; class  RAxisLabels;  A RAxisGrow that has a label assigned to each bin and a bin width of 1. More...;  ; class  RBitsetField;  The generic field an std::bitset<N>. More...;  ; class  RCanvas;  A window's topmost RPad. More...;  ; class  RCanvasDisplayItem;  class RCanvasDisplayItem More...;  ; class  RCanvasPainter;  ; class  RCardinalityField;  An artificial field that transforms an RNTuple column that contains the offset of collections into collection sizes. More...;  ; class  RChangeAttrRequest;  ; class  RClassField;  The field for a class with dictionary. More...;  ; class  RClusterDescriptor;  Meta-data for a set of ntuple clusters. More...;  ; class  RClusterGroupDescriptor;  Clusters are bundled in cluster groups. More...;  ; class  RClusterIndex;  Addresses a column element or field item relative to a particula",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html:2531,extend,extend,2531,doc/v632/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Experimental.html,1,['extend'],['extend']
Modifiability,"ne before handing them over to Minit for minimization.; 4.3.2 What the user can supply; Optionally the user can supply his own gradient calculator by implementing the FCNGradientBase interface or supply a full covariance matrix for input if one is available. The covariance matrix can be supplied in form of a std::vector\(<\)double\(>\) in packed storage format (upper triangular), or in a more user-friendly way by using the interface provided by the MnUserCovariance.; 4.4 Running a M minimization; Two use cases are addressed for minimization:. The user just wants the function to be minimized in one go.; The user wants to minimize the \(\mbox{FCN}\) in several minimization steps, re-using the result of the preceeding minimization in the next step and change parameters in between (fix/release/put limits on them, etc.). How M minimizations can be performed is shown in [example:main].; 4.4.1 Direct usage of minimizers; Minimizers such as the VariableMetricMinimizer are designed as state-less minimization engines, which means that they do not depend on the current function and its parameters. Any \(\mbox{FCN}\) function can be minimized with the same minimizer. The interface is restricted to minimization and no parameter interaction is possible.; 4.4.2 Using an application (MnMigrad); MnMigrad uses the VariableMetricMinimizer for minimization but allows as well for parameter interaction by the user. An instance of MnMigrad is specific to the current \(\mbox{FCN}\) and user parameters. Any parameter interaction of the user between two minimization steps will make use of the result of the preceeding minimization in an optimal way. The interface for parameters (see [api:parameters], [api:covariance] and [api:state]) is forwardedin MnMigrad.; 4.4.3 Subsequent minimizations; M takes care that all information is treated in an optimal and correct wayif the user interacts with the parameters between two minimizations. MnMigrad retains the result of the last minimization and uses t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:39166,Variab,VariableMetricMinimizer,39166,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['Variab'],['VariableMetricMinimizer']
Modifiability,"ne class member, from another. ;  ; void SetTypenameTag (const char *tag=""_typename"");  Configures _typename tag in JSON structures By default ""_typename"" field in JSON structures used to store class information One can specify alternative tag like ""$typename"" or ""xy"", but such JSON can not be correctly used in JSROOT If empty string is provided, class information will not be stored. ;  ; void SetTypeversionTag (const char *tag=nullptr);  Configures _typeversion tag in JSON One can specify name of the JSON tag like ""_typeversion"" or ""$tv"" which will be used to store class version Such tag can be used to correctly recover objects from JSON If empty string is provided (default), class version will not be stored. ;  ; void SkipObjectAny () final;  Skip any kind of object from buffer. ;  ; TString StoreObject (const void *obj, const TClass *cl);  Store provided object as JSON structure Allows to configure different TBufferJSON properties before converting object into JSON Actual object class must be specified here Method can be safely called once - after that TBufferJSON instance must be destroyed Code should look like: ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void StreamObject (TObject *obj) override;  ; void StreamObject (void *obj, const char *className, const TClass *onFileClass=nullptr) override;  stream object to/from buffer ;  ; void StreamObject (void *obj, const std::type_info &typeinfo, const TClass *onFileClass=nullptr) override;  stream object to/from buffer ;  ; void StreamObject (void *obj, const TClass *cl, const TClass *onFileClass=nullptr) final;  stream object to/from buffer ;  ; void WriteArray (const Bool_t *b, Int_t n) final;  Write array of Bool_t to buffer. ;  ; void WriteArray (const Char_t *c, Int_t n) final;  Write array of Char_t to buffer. ;  ; void WriteArray (const Double_t *d, Int_t n) final;  Write array of Double_t to buffer. ;  ; voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferJSON.html:13707,config,configure,13707,doc/master/classTBufferJSON.html,https://root.cern,https://root.cern/doc/master/classTBufferJSON.html,1,['config'],['configure']
Modifiability,"ne is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly). void ExpandCreateFast(Int_t n); Expand or shrink the array to n elements and create the clone; objects by calling their default ctor. If n is less than the current size; the array is shrinked but the allocated space is _not_ freed.; This routine is typically used to create a clonesarray into which; one can directly copy object data without going via the; ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; This is a simplified version of ExpandCreate used in the TTree mechanism. TObject * RemoveAt(Int_t idx); Remove object at index idx. TObject * Remove(TObject* obj); Remove object from array. void RemoveRange(Int_t idx1, Int_t idx2); Remove objects from index idx1 to idx2 included. void SetClass(const TClass* cl, Int_t size = 1000); Create an array of clone objects of class cl. The class must inherit from; TObject. If the class defines an own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument s indicates an approximate number of objects; that will be entered in the array. If more than s objects are entered,; the array will be automatically expanded. NB: This function should not be called in the TClonesArray is already; initialized with a class. void SetClass(const char* classname, Int_t size = 1000); see TClonesArray::SetClass(const TClass*). void SetOwner(Bool_t enable = kTRUE); A TClonesArray is always the owner of the object it contains.; However the collection its inherits from (TObjArray) does not.; Hence this member function needs to be a nop for TClonesArray. void Sort(Int_t upto = kMaxInt); If objects in array are sortable (i.e. IsSortable() returns true; for all objects) then sort ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClonesArray.html:19108,inherit,inherit,19108,root/html528/TClonesArray.html,https://root.cern,https://root.cern/root/html528/TClonesArray.html,10,['inherit'],['inherit']
Modifiability,"ne of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAddGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach given set of variables to internal p.d.f. clone. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator contex. Attach theEvent; to internal p.d.f clone and forward initialization call to; the component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Randomly choose one of the component contexts to generate this event,; with a probability proportional to its coefficient. void updateThresholds(); Update the cumulative threshold table from the current coefficient; values. void setProtoDataOrder(Int_t* lut); Forward the setProtoDataOrder call to the component generator contexts. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of the context. RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). » Last changed: Mon Jul 4 15:21:34 2011 » Last generated: 2011-07-04 15:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAddGenContext.html:9703,variab,variables,9703,root/html530/RooAddGenContext.html,https://root.cern,https://root.cern/root/html530/RooAddGenContext.html,1,['variab'],['variables']
Modifiability,"ne of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAddGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach given set of variables to internal p.d.f. clone. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator contex. Attach theEvent; to internal p.d.f clone and forward initialization call to; the component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Randomly choose one of the component contexts to generate this event,; with a probability proportional to its coefficient. void updateThresholds(); Update the cumulative threshold table from the current coefficient; values. void setProtoDataOrder(Int_t* lut); Forward the setProtoDataOrder call to the component generator contexts. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of the context. RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). » Last changed: Thu Nov 3 20:06:54 2011 » Last generated: 2011-11-03 20:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAddGenContext.html:9863,variab,variables,9863,root/html532/RooAddGenContext.html,https://root.cern,https://root.cern/root/html532/RooAddGenContext.html,1,['variab'],['variables']
Modifiability,"ne of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAddGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach given set of variables to internal p.d.f. clone. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator contex. Attach theEvent; to internal p.d.f clone and forward initialization call to; the component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Randomly choose one of the component contexts to generate this event,; with a probability proportional to its coefficient. void updateThresholds(); Update the cumulative threshold table from the current coefficient; values. void setProtoDataOrder(Int_t* lut); Forward the setProtoDataOrder call to the component generator contexts. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of the context. RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). » Last changed: Thu Sep 23 19:58:22 2010 » Last generated: 2010-09-23 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddGenContext.html:9523,variab,variables,9523,root/html528/RooAddGenContext.html,https://root.cern,https://root.cern/root/html528/RooAddGenContext.html,1,['variab'],['variables']
Modifiability,"ne of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAddGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach given set of variables to internal p.d.f. clone. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator contex. Attach theEvent; to internal p.d.f clone and forward initialization call to; the component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Randomly choose one of the component contexts to generate this event,; with a probability proportional to its coefficient. void updateThresholds(); Update the cumulative threshold table from the current coefficient; values. void setProtoDataOrder(Int_t* lut); Forward the setProtoDataOrder call to the component generator contexts. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of the context. RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). » Last changed: Tue Jun 2 15:27:40 2015 » Last generated: 2015-06-02 15:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAddGenContext.html:10991,variab,variables,10991,root/html604/RooAddGenContext.html,https://root.cern,https://root.cern/root/html604/RooAddGenContext.html,2,['variab'],['variables']
Modifiability,"ne of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAddGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach given set of variables to internal p.d.f. clone. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator contex. Attach theEvent; to internal p.d.f clone and forward initialization call to; the component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Randomly choose one of the component contexts to generate this event,; with a probability proportional to its coefficient. void updateThresholds(); Update the cumulative threshold table from the current coefficient; values. void setProtoDataOrder(Int_t* lut); Forward the setProtoDataOrder call to the component generator contexts. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of the context. RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). » Last changed: Tue Jun 30 14:30:42 2015 » Last generated: 2015-06-30 14",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAddGenContext.html:10991,variab,variables,10991,root/html602/RooAddGenContext.html,https://root.cern,https://root.cern/root/html602/RooAddGenContext.html,2,['variab'],['variables']
Modifiability,"ne of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAddGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach given set of variables to internal p.d.f. clone. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator contex. Attach theEvent; to internal p.d.f clone and forward initialization call to; the component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Randomly choose one of the component contexts to generate this event,; with a probability proportional to its coefficient. void updateThresholds(); Update the cumulative threshold table from the current coefficient; values. void setProtoDataOrder(Int_t* lut); Forward the setProtoDataOrder call to the component generator contexts. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of the context. RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). » Last changed: Tue Mar 10 17:14:21 2015 » Last generated: 2015-03-10 17",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddGenContext.html:9978,variab,variables,9978,root/html534/RooAddGenContext.html,https://root.cern,https://root.cern/root/html534/RooAddGenContext.html,2,['variab'],['variables']
Modifiability,"ne of the Fill functions accepting names described above.; 341 The Fill functions compute the bin number corresponding to the given; 342 x, y or z argument and increment this bin by the given weight.; 343 The Fill functions return the bin number for 1-D histograms or global; 344 bin number for 2-D and 3-D histograms.; 345 If TH1::Sumw2 has been called before filling, the sum of squares of; 346 weights is also stored.; 347 One can also increment directly a bin number via TH1::AddBinContent; 348 or replace the existing content via TH1::SetBinContent. Passing an; 349 out-of-range bin to TH1::AddBinContent leads to undefined behavior.; 350 To access the bin content of a given bin, do:; 351~~~ {.cpp}; 352 Double_t binContent = h->GetBinContent(bin);; 353~~~; 354 ; 355 By default, the bin number is computed using the current axis ranges.; 356 If the automatic binning option has been set via; 357~~~ {.cpp}; 358 h->SetCanExtend(TH1::kAllAxes);; 359~~~; 360 then, the Fill Function will automatically extend the axis range to; 361 accomodate the new value specified in the Fill argument. The method; 362 used is to double the bin size until the new value fits in the range,; 363 merging bins two by two. This automatic binning options is extensively; 364 used by the TTree::Draw function when histogramming Tree variables; 365 with an unknown range.; 366 This automatic binning option is supported for 1-D, 2-D and 3-D histograms.; 367 ; 368 During filling, some statistics parameters are incremented to compute; 369 the mean value and Root Mean Square with the maximum precision.; 370 ; 371 In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; 372 a check is made that the bin contents do not exceed the maximum positive; 373 capacity (127 or 32767). Histograms of all types may have positive; 374 or/and negative bin contents.; 375 ; 376\anchor associated-errors; 377### Associated errors; 378 By default, for each bin, the sum of weights is computed at fill time.; 379 One can al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:15716,extend,extend,15716,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extend']
Modifiability,"ne style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions; void AddAliases ();  Aliases are added to the input list. ;  ; void FillDrawAttributes (TProof *p);  Communicate the drawing attributes for this chain to the input list so that the draw selectors can use them, in case of need. ;  . Additional Inherited Members;  Static Public Attributes inherited from TChain; static constexpr auto kBigNumber = TTree::kMaxEntries;  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWithIndex = (1ULL << ( 5 )); , kGetFriend = (1ULL << ( 6 )); , kGetFriendAlias = (1ULL << ( 7 )); , ;   kGetLeaf = (1ULL << ( 8 )); , kLoadTree = (1ULL << ( 9 )); , kPrint = (1ULL << ( 10 )); , kRemoveFriend = (1ULL << ( 11 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TChain; void InvalidateCurrentTree ();  Set the TTree to be reloaded as soon as possible. ;  ; void ReleaseChainProof ();  ;  Protected Member Functions inherited from TTree; virtual TBranch * BranchImp (const char *branchname, const char *classname, TClass *ptrClass, void *addobj, Int_t bufsize, Int_t splitlevel);  Same as TTree::Branch() with added check that addobj matches className. ;  ; virtual TBranch * BranchImp (const char *branchname, TClass *ptrClass, void *addob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofChain.html:50100,inherit,inherited,50100,doc/master/classTProofChain.html,https://root.cern,https://root.cern/doc/master/classTProofChain.html,3,['inherit'],['inherited']
Modifiability,"ne style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  . Private Member Functions;  TEveScalableStraightLineSet (const TEveScalableStraightLineSet &);  ; TEveScalableStraightLineSet & operator= (const TEveScalableStraightLineSet &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScalableStraightLineSet.html:40129,inherit,inherited,40129,doc/master/classTEveScalableStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classTEveScalableStraightLineSet.html,3,['inherit'],['inherited']
Modifiability,"ne width 1 for the given style. ;  . Protected Member Functions; void BuildCoeff () override;  Build coefficients. ;  ; void SetCond (const char *opt);  Check the boundary conditions. ;  ;  Protected Member Functions inherited from TSpline;  TSpline (const TSpline &);  Copy constructor. ;  ; TSpline & operator= (const TSpline &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fBegCond = -1;  0=no beg cond, 1=first derivative, 2=second derivative ;  ; Int_t fEndCond = -1;  0=no end cond, 1=first derivative, 2=second derivative ;  ; TSplinePoly3 * fPoly = nullptr;  [fNp] Array of polynomial terms ;  ; Double_t fValBeg = 0.;  Initial value of first or second derivative. ;  ; Double_t fValEnd = 0.;  End value of first or second derivative. ;  ;  Protected Attributes inherited from TSpline; Double_t fDelta = -1.;  Distance between equidistant knots. ;  ; TGraph * fGraph = nullptr;  Graph for drawing the knots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:19175,inherit,inherited,19175,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,1,['inherit'],['inherited']
Modifiability,"ne with in pixels, default is 3; MarkerStyle(Int_t style) -- Select the ROOT marker style, default is 21; MarkerColor(Int_t color) -- Select the ROOT marker color, default is black; MarkerSize(Double_t size) -- Select the ROOT marker size; FillStyle(Int_t style) -- Select fill style, default is filled.; FillColor(Int_t color) -- Select fill color by ROOT color code; XErrorSize(Double_t frac) -- Select size of X error bar as fraction of the bin width, default is 1. Misc. other options. Name(const chat* name) -- Give curve specified name in frame. Useful if curve is to be referenced later; Invisble() -- Add curve to frame, but do not display. Useful in combination AddTo(); AddTo(const char* name, -- Add constructed histogram to already existing histogram with given name and relative weight factors; double_t wgtSelf, double_t wgtOther). RooPlot * plotOn(RooPlot *frame, PlotOpt o); Create and fill a histogram of the frame's variable and append it to the frame.; The frame variable must be one of the data sets dimensions. The plot range and the number of plot bins is determined by the parameters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. RooPlot* plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsData::PlotOpt o) const; Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ),; where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1; as function of the frames variable. The asymmetry category 'asymCat' must; have exactly 2 (or 3) states defined with index values +1,-1 (and 0). The plot range and the number of plot bins is determined by the parameters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:31642,variab,variable,31642,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,1,['variab'],['variable']
Modifiability,"ne(""<<fN<<"",""<<quote<<fOption<<quote<<"");""<<std::endl;; 590 ; 591 SaveFillAttributes(out, ""pline"", 0, 1001);; 592 SaveLineAttributes(out, ""pline"", 1, 1, 1);; 593 ; 594 for (Int_t i=0;i<Size();i++); 595 out<<"" pline->SetPoint(""<<i<<"",""<<fX[i]<<"",""<<fY[i]<<"");""<<std::endl;; 596 ; 597 out<<"" pline->Draw(""<<quote<<option<<quote<<"");""<<std::endl;; 598}; 599 ; 600////////////////////////////////////////////////////////////////////////////////; 601/// Set NDC mode on if isNDC = kTRUE, off otherwise; 602 ; 603void TPolyLine::SetNDC(Bool_t isNDC); 604{; 605 ResetBit(kPolyLineNDC);; 606 if (isNDC) SetBit(kPolyLineNDC);; 607}; 608 ; 609////////////////////////////////////////////////////////////////////////////////; 610/// Set point following LastPoint to x, y.; 611/// Returns index of the point (new last point).; 612 ; 613Int_t TPolyLine::SetNextPoint(Double_t x, Double_t y); 614{; 615 fLastPoint++;; 616 SetPoint(fLastPoint, x, y);; 617 return fLastPoint;; 618}; 619 ; 620////////////////////////////////////////////////////////////////////////////////; 621/// Set point number n to (x, y); 622/// If n is greater than the current size, the arrays are automatically; 623/// extended.; 624 ; 625void TPolyLine::SetPoint(Int_t n, Double_t x, Double_t y); 626{; 627 if (n < 0) return;; 628 if (!fX || !fY || n >= fN) {; 629 // re-allocate the object; 630 Int_t newN = TMath::Max(2*fN,n+1);; 631 Double_t *savex = new Double_t [newN];; 632 Double_t *savey = new Double_t [newN];; 633 if (fX && fN){; 634 memcpy(savex,fX,fN*sizeof(Double_t));; 635 memset(&savex[fN],0,(newN-fN)*sizeof(Double_t));; 636 delete [] fX;; 637 }; 638 if (fY && fN){; 639 memcpy(savey,fY,fN*sizeof(Double_t));; 640 memset(&savey[fN],0,(newN-fN)*sizeof(Double_t));; 641 delete [] fY;; 642 }; 643 fX = savex;; 644 fY = savey;; 645 fN = newN;; 646 }; 647 fX[n] = x;; 648 fY[n] = y;; 649 fLastPoint = TMath::Max(fLastPoint, n);; 650}; 651 ; 652////////////////////////////////////////////////////////////////////////////////; 653",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8cxx_source.html:20332,extend,extended,20332,doc/master/TPolyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8cxx_source.html,1,['extend'],['extended']
Modifiability,"ne(TString& line); intfReadFile(const char* fileName, bool is_included = false). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TListfBkgPdfNames; boolfCombinationDone; RooAbsPdf*fComboBkgPdf; RooCategory*fComboCat; RooDataSet*fComboDataset; RooAbsPdf*fComboSigBkgPdf; TListfDatasetsNames; intfInclusionLevel; TListfLabelsNames; boolfOwnWs; TListfSigBkgPdfNames; boolfVerbose; RooWorkspace*fWs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HLFactory(const char* name, const char* fileName = 0, bool isVerbose = false); Constructor with the name of the config file to interpret and the; verbosity flag. The extension for the config files is assumed to; be "".rs"". HLFactory(const char* name, RooWorkspace* externalWs, bool isVerbose = false); Constructor without a card but with an exrernal workspace. HLFactory(). ~HLFactory(); destructor. int AddChannel(const char* label, const char* SigBkgPdfName, const char* BkgPdfName = 0, const char* datasetName = 0); Add a channel to the combination. The channel can be specified as:; - A signal plus background pdf; - A background only pdf; - A dataset; Once the combination of the pdfs is done, no more channels should be; added. RooAbsPdf* GetTotSigBkgPdf(); Return the combination of the signal plus background channels.; The facory owns the object. RooAbsPdf* GetTotBkgPdf(); Return the combination of the background only channels.; If no background channel is specified a NULL pointer is returned.; The facory owns the object. RooDataSet* GetTotDataSet(); Return the combination of the datasets.; If no dataset is specified a NULL pointer is returned.; The facory owns the object. R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HLFactory.html:6808,config,config,6808,root/html528/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html528/RooStats__HLFactory.html,6,['config'],['config']
Modifiability,ne.h. ◆ clone(). TObject * RooSpline::clone ; (; const char * ; newname); const. inlineoverridevirtual . Virtual copy constructor. ; Parameters. [in]newnameThe name of the cloned object (optional). . Implements RooAbsArg.; Definition at line 38 of file RooSpline.h. ◆ DeclFileName(). static const char * RooSpline::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 49 of file RooSpline.h. ◆ evaluate(). double RooSpline::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate the spline function at the current point. ; Implements RooAbsReal.; Definition at line 128 of file RooSpline.cxx. ◆ IsA(). TClass * RooSpline::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 49 of file RooSpline.h. ◆ Streamer(). void RooSpline::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooSpline::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 49 of file RooSpline.h. Member Data Documentation. ◆ _logx. bool RooSpline::_logx = false. private . Flag indicating logarithmic scaling of x values. ; Definition at line 46 of file RooSpline.h. ◆ _logy. bool RooSpline::_logy = false. private . Flag indicating logarithmic scaling of y values. ; Definition at line 47 of file RooSpline.h. ◆ _spline. std::unique_ptr<TSpline> RooSpline::_spline. private . The spline object. ; Definition at line 44 of file RooSpline.h. ◆ _x. RooRealProxy RooSpline::_x. private . The independent variable. ; Definition at line 45 of file RooSpline.h. Libraries for RooSpline:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooSpline.h; roofit/roofit/src/RooSpline.cxx. RooSpline. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:09 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpline.html:65475,variab,variable,65475,doc/master/classRooSpline.html,https://root.cern,https://root.cern/doc/master/classRooSpline.html,1,['variab'],['variable']
Modifiability,"ne::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi1() const; virtual Float_tGetPhi2() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTUBS.html:3798,Inherit,InheritsFrom,3798,root/html532/TTUBS.html,https://root.cern,https://root.cern/root/html532/TTUBS.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ne::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi1() const; virtual Float_tGetPhi2() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTUBS.html:3538,Inherit,InheritsFrom,3538,root/html602/TTUBS.html,https://root.cern,https://root.cern/root/html602/TTUBS.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ne; 675- Snapshot; 676- Stats; 677- StdDev; 678- Sum; 679- Systematic variations: Vary and [VariationsFor](\ref ROOT::RDF::Experimental::VariationsFor).; 680- Parallel submission of distributed graphs: [RunGraphs](\ref ROOT::RDF::RunGraphs).; 681- Information about the dataframe: GetColumnNames.; 682 ; 683with support for more operations coming in the future. Data sources other than TTree and TChain (e.g. CSV, RNTuple) are; 684currently not supported.; 685 ; 686\note The distributed RDataFrame module requires at least Python version 3.8.; 687 ; 688### Connecting to a Spark cluster; 689 ; 690In order to distribute the RDataFrame workload, you can connect to a Spark cluster you have access to through the; 691official [Spark API](https://spark.apache.org/docs/latest/rdd-programming-guide.html#initializing-spark), then hook the; 692connection instance to the distributed `RDataFrame` object like so:; 693 ; 694~~~{.py}; 695import pyspark; 696import ROOT; 697 ; 698# Create a SparkContext object with the right configuration for your Spark cluster; 699conf = SparkConf().setAppName(appName).setMaster(master); 700sc = SparkContext(conf=conf); 701 ; 702# Point RDataFrame calls to the Spark specific RDataFrame; 703RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; 704 ; 705# The Spark RDataFrame constructor accepts an optional ""sparkcontext"" parameter; 706# and it will distribute the application to the connected cluster; 707df = RDataFrame(""mytree"", ""myfile.root"", sparkcontext = sc); 708~~~; 709 ; 710If an instance of [SparkContext](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.SparkContext.html); 711is not provided, the default behaviour is to create one in the background for you.; 712 ; 713### Connecting to a Dask cluster; 714 ; 715Similarly, you can connect to a Dask cluster by creating your own connection object which internally operates with one; 716of the cluster schedulers supported by Dask (more information in the; 717[Dask distribute",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:40650,config,configuration,40650,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ne; 715- Snapshot; 716- Stats; 717- StdDev; 718- Sum; 719- Systematic variations: Vary and [VariationsFor](\ref ROOT::RDF::Experimental::VariationsFor).; 720- Parallel submission of distributed graphs: [RunGraphs](\ref ROOT::RDF::RunGraphs).; 721- Information about the dataframe: GetColumnNames.; 722 ; 723with support for more operations coming in the future. Data sources other than TTree and TChain (e.g. CSV, RNTuple) are; 724currently not supported.; 725 ; 726\note The distributed RDataFrame module requires at least Python version 3.8.; 727 ; 728### Connecting to a Spark cluster; 729 ; 730In order to distribute the RDataFrame workload, you can connect to a Spark cluster you have access to through the; 731official [Spark API](https://spark.apache.org/docs/latest/rdd-programming-guide.html#initializing-spark), then hook the; 732connection instance to the distributed `RDataFrame` object like so:; 733 ; 734~~~{.py}; 735import pyspark; 736import ROOT; 737 ; 738# Create a SparkContext object with the right configuration for your Spark cluster; 739conf = SparkConf().setAppName(appName).setMaster(master); 740sc = SparkContext(conf=conf); 741 ; 742# Point RDataFrame calls to the Spark specific RDataFrame; 743RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; 744 ; 745# The Spark RDataFrame constructor accepts an optional ""sparkcontext"" parameter; 746# and it will distribute the application to the connected cluster; 747df = RDataFrame(""mytree"", ""myfile.root"", sparkcontext = sc); 748~~~; 749 ; 750If an instance of [SparkContext](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.SparkContext.html); 751is not provided, the default behaviour is to create one in the background for you.; 752 ; 753### Connecting to a Dask cluster; 754 ; 755Similarly, you can connect to a Dask cluster by creating your own connection object which internally operates with one; 756of the cluster schedulers supported by Dask (more information in the; 757[Dask distribute",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:42290,config,configuration,42290,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ne;  ! last line attributes ;  ; TAttMarker fLastMarker;  ! last marker attributes ;  ; std::string fOper;  list of operations, separated by semicolons ;  ; Int_t fSize {0};  ! filled buffer size ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebPainting.h>. Inheritance diagram for TWebPainting:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWebPainting(). TWebPainting::TWebPainting ; (; ). Constructor. ; Definition at line 28 of file TWebPainting.cxx. ◆ ~TWebPainting(). TWebPainting::~TWebPainting ; (; ). overridedefault . Member Function Documentation. ◆ AddColor(). void TWebPainting::AddColor ; (; Int_t ; indx, . TColor * ; col . ). Add custom color to operations. ; Definition at line 178 of file TWebPainting.cxx. ◆ AddFillAttr(). void TWebPainting::AddFillAttr ; (; const TAttFill & ; attr). Store fill attributes If attributes were not changed - ignore operation. ; Definition at line 131 of file TWebPainting.cxx. ◆ AddLineAttr(). void TWebPainting::AddLin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPainting.html:11379,inherit,inherited,11379,doc/master/classTWebPainting.html,https://root.cern,https://root.cern/doc/master/classTWebPainting.html,2,['inherit'],['inherited']
Modifiability,"neAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine.html:13750,inherit,inherited,13750,doc/master/classTLine.html,https://root.cern,https://root.cern/doc/master/classTLine.html,1,['inherit'],['inherited']
Modifiability,"neGSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineGSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); voidInitialize(); doubleLandau() const; doubleLogNormal(double zeta, double sigma) const; vector<unsigned int>Multinomial(unsigned int ntot, const vector<double>& p) const; stringName() const; unsigned intNegativeBinomial(double p, double n) const; doubleoperator()() const; ROOT::Math::GSLRandomEngine&operator=(const ROOT::Math::GSLRandomEngine& eng); unsigned intPoisson(double mu) const; voidRandomArray(double* begin, double* end) const; unsigned intRndmInt(unsigned int max) const; voidSetSeed(unsigned int seed) const; unsigned intSize() const; doubletDist(double nu) const; voidTerminate(). protected:. voidSetType(ROOT::Math::GSLRngWrapper* r). Data Members; private:. unsigned intfCurTimecurrent time used to seed the generator; ROOT::Math::GSLRngWrapper*fRngpointer to GSL generator wrapper (managed by the class). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine(). default constructor. No creation of rng is done.; If then Initialize() is called an engine is created; based on default GSL type (MT). GSLRandomEngine( GSLRngWrapper * rng). create from an existing rng.; User manage the rng pointer which is then deleted olny by calling Terminate(). GSLRandomEngine(const GSLRandomEngine & eng). Copy constructor : clone the contained GSL generator. GSLRandomEngine & operator=(const ROOT::Math::GSLRandomEngine& eng). Assignment operator : make a deep copy of the contained GSL generator. void Initialize(). initialize the generator; If no rng is present the default one based on Mersenne and Twister is created. void Terminate(). delete pointer to contained rng. virtual ~GSLRandomEngine(). call Terminate(). double operator()() const. Generate a random number between ]0,1]; 0 is excluded and 1 is included. unsigned int RndmInt(unsigned int max) const. Generate an integer number between [0,ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRandomEngine.html:2613,Inherit,Inheritance,2613,root/html534/ROOT__Math__GSLRandomEngine.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRandomEngine.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"neSet->find(GetName()));; 879 ; 880 // The remaining entries in our list of leaf nodes are the external; 881 // dependents (x) and parameters (p) of the projection. Patch them back; 882 // into the theClone. This orphans the nodes they replace, but the orphans; 883 // are still in the cloneList and so will be cleaned up eventually.; 884 //cout << ""redirection leafNodes : "" ; leafNodes.Print(""1"") ;; 885 ; 886 std::unique_ptr<RooArgSet> plotLeafNodes{leafNodes.selectCommon(dependentVars)};; 887 theClone->recursiveRedirectServers(*plotLeafNodes,false,false,false);; 888 ; 889 // Create the set of normalization variables to use in the projection integrand; 890 RooArgSet normSet(dependentVars);; 891 if(nullptr != projectedVars) normSet.add(*projectedVars);; 892 if(nullptr != condObs) {; 893 normSet.remove(*condObs,true,true) ;; 894 }; 895 ; 896 // Try to create a valid projection integral. If no variables are to be projected,; 897 // create a null projection anyway to bind our normalization over the dependents; 898 // consistently with the way they would be bound with a non-trivial projection.; 899 RooArgSet empty;; 900 if(nullptr == projectedVars) projectedVars= &empty;; 901 ; 902 std::string name = GetName();; 903 name += integralNameSuffix(*projectedVars,&normSet,rangeName,true) ;; 904 ; 905 std::string title = std::string{""Projection of ""} + GetTitle();; 906 ; 907 std::unique_ptr<RooAbsReal> projected{theClone->createIntegral(*projectedVars,normSet,rangeName)};; 908 ; 909 if(nullptr == projected || !projected->isValid()) {; 910 coutE(Plotting) << ClassName() << ""::"" << GetName() << "":createPlotProjection: cannot integrate out "";; 911 projectedVars->printStream(std::cout,kName|kArgs,kSingleLine);; 912 return nullptr;; 913 }; 914 ; 915 if(projected->InheritsFrom(RooRealIntegral::Class())){; 916 static_cast<RooRealIntegral&>(*projected).setAllowComponentSelection(true);; 917 }; 918 ; 919 projected->SetName(name.c_str()) ;; 920 projected->SetTitle(title.c_str()) ;; 921 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:36061,variab,variables,36061,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"neStrength() const; Float_tGetOptimalQualityIndex() const; voidOptimize(); voidSetPruneStrength(Float_t alpha = -1.0). Data Members; private:. Float_tfAlpha! regularization parameter in CC pruning; Bool_tfDebug! debug flag; Int_tfOptimalK! index of the optimal tree in the pruned tree sequence; Bool_tfOwnQIndex! flag indicates if fQualityIndex is owned by this; vector<TMVA::DecisionTreeNode*>fPruneSequence! map of weakest links (i.e., branches to prune) -> pruning index; vector<Float_t>fPruneStrengthList! map of alpha -> pruning index; TMVA::SeparationBase*fQualityIndex! the quality index used to calculate R(t), R(T) = sum[t in ~T]{ R(t) }; vector<Float_t>fQualityIndexList! map of R(T) -> pruning index; TMVA::DecisionTree*fTree! (pruned) decision tree; const TMVA::DataSet*fValidationDataSet! the event sample to select the optimally-pruned tree; const TMVA::CCPruner::EventList*fValidationSample! the event sample to select the optimally-pruned tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCPruner( DecisionTree* t_max, const EventList* validationSample, SeparationBase* qualityIndex ); constructor. CCPruner( DecisionTree* t_max, const DataSet* validationSample, SeparationBase* qualityIndex ); constructor. ~CCPruner(). void Optimize(); determine the pruning sequence. std::vector<DecisionTreeNode*> GetOptimalPruneSequence() const; return the prune strength (=alpha) corresponding to the prune sequence. void SetPruneStrength(Float_t alpha = -1.0). CCPruner( DecisionTree* t_max, const EventList* validationSample, SeparationBase* qualityIndex = NULL ). Float_t GetOptimalQualityIndex() const; return the quality index from the validation sample for the optimal subtree T'. Float_t GetOptimalPruneStrength() const; return the prune strength (=alpha) corresponding to the prune sequence. » Last changed: Thu Nov 3 20:19:24 2011 » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__CCPruner.html:1713,Inherit,Inheritance,1713,root/html532/TMVA__CCPruner.html,https://root.cern,https://root.cern/root/html532/TMVA__CCPruner.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"neStrength() const; Float_tGetOptimalQualityIndex() const; voidOptimize(); voidSetPruneStrength(Float_t alpha = -1.0). Data Members; private:. Float_tfAlpha! regularization parameter in CC pruning; Bool_tfDebug! debug flag; Int_tfOptimalK! index of the optimal tree in the pruned tree sequence; Bool_tfOwnQIndex! flag indicates if fQualityIndex is owned by this; vector<TMVA::DecisionTreeNode*>fPruneSequence! map of weakest links (i.e., branches to prune) -> pruning index; vector<Float_t>fPruneStrengthList! map of alpha -> pruning index; TMVA::SeparationBase*fQualityIndex! the quality index used to calculate R(t), R(T) = sum[t in ~T]{ R(t) }; vector<Float_t>fQualityIndexList! map of R(T) -> pruning index; TMVA::DecisionTree*fTree! (pruned) decision tree; const TMVA::DataSet*fValidationDataSet! the event sample to select the optimally-pruned tree; const TMVA::CCPruner::EventList*fValidationSample! the event sample to select the optimally-pruned tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCPruner( DecisionTree* t_max, const EventList* validationSample, SeparationBase* qualityIndex ); constructor. CCPruner( DecisionTree* t_max, const DataSet* validationSample, SeparationBase* qualityIndex ); constructor. ~CCPruner(). void Optimize(); determine the pruning sequence. std::vector<DecisionTreeNode*> GetOptimalPruneSequence() const; return the prune strength (=alpha) corresponding to the prune sequence. void SetPruneStrength(Float_t alpha = -1.0). CCPruner( DecisionTree* t_max, const EventList* validationSample, SeparationBase* qualityIndex = NULL ). Float_t GetOptimalQualityIndex() const; return the quality index from the validation sample for the optimal subtree T'. Float_t GetOptimalPruneStrength() const; return the prune strength (=alpha) corresponding to the prune sequence. » Last changed: Tue Sep 8 17:04:39 2015 » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__CCPruner.html:1713,Inherit,Inheritance,1713,root/html534/TMVA__CCPruner.html,https://root.cern,https://root.cern/root/html534/TMVA__CCPruner.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"neStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*TNode::GetListOfNodes() const; virtual TRotMatrix*TNode::GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*TNode::GetNode(const char* name) const; virtual char*TNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const Option_t*TNode::GetOption() const; virtual TNode*TNode::GetParent() const; TShape*TNode::GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTNode::GetVisibility() const; virtual Double_tTNode::GetX() const; virtual Double_tTNode::GetY() const; virtual Double_tTNode::GetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTNode::ImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTNode::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNode::Local2Master(const Double_t* local, Double_t* master); virtual voidTNode::Local2Master(const Float_t* local, Float_t* master); virtual voidTNode::ls(Option_t* option = ""2"") constMENU ; virtual voidTNode::Master2Local(const Double_t* master, Double_t* local); virtual voidTNode::Master2Local(const Float_t* master, Float_t* local); voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNodeDiv.html:3279,Inherit,InheritsFrom,3279,root/html602/TNodeDiv.html,https://root.cern,https://root.cern/root/html602/TNodeDiv.html,2,['Inherit'],['InheritsFrom']
Modifiability,"neWidthline width; TGeoMedium*TGeoVolume::fMediumtracking medium; TStringTNamed::fNameobject identifier; TObjArray*TGeoVolume::fNodesarray of nodes inside this volume; Int_tTGeoVolume::fNtotaltotal number of physical nodes; Int_tTGeoVolume::fNumbervolume serial number in the list of volumes; TStringTGeoVolume::fOption! option - if any; Int_tTGeoVolume::fRefCountreference counter; TGeoShape*TGeoVolume::fShapeshape; TStringTNamed::fTitleobject title; TGeoExtension*TGeoVolume::fUserExtension! Transient user-defined extension to volumes; TGeoVoxelFinder*TGeoVolume::fVoxelsfinder object for bounding boxes; static TGeoMedium*TGeoVolume::fgDummyMedium! dummy medium. private:. Bool_tfAttSetflag attributes set; Int_tfAxisaxis of division; TGeoVolumeMulti*fDivisiondivision of this volume; Int_tfNdivnumber of divisions; Int_tfNumedmedium number for divisions; Double_tfStartdivision start offset; Double_tfStepdivision step; TObjArray*fVolumeslist of volumes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolumeMulti(); dummy constructor. TGeoVolumeMulti(const char* name, TGeoMedium* med = 0); default constructor. TGeoVolumeMulti(const TGeoVolumeMulti& ); copy constructor. TGeoVolumeMulti& operator=(const TGeoVolumeMulti& ); assignment operator. ~TGeoVolumeMulti(); Destructor. void AddVolume(TGeoVolume* vol); Add a volume with valid shape to the list of volumes. Copy all existing nodes; to this volume. void AddNode(TGeoVolume* vol, Int_t copy_no, TGeoMatrix* mat, Option_t* option = """"); Add a new node to the list of nodes. This is the usual method for adding; daughters inside the container volume. void AddNodeOverlap(TGeoVolume* vol, Int_t copy_no, TGeoMatrix* mat, Option_t* option = """"); Add a new node to the list of nodes, This node is possibly overlapping with other; daughters of the volume or extruding the volume. TGeoShape * GetLastShape() const; Returns the last shape. TGeoVolume * Divide(const char* divname, Int_t iaxis, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVolumeMulti.html:33890,Inherit,Inheritance,33890,root/html534/TGeoVolumeMulti.html,https://root.cern,https://root.cern/root/html534/TGeoVolumeMulti.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::FitterBase::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Double_tfAdaptiveSpeedhow fast temperature change in adaptive (in adaptive two variables describ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__SimulatedAnnealingFitter.html:6411,Config,Configurable,6411,root/html534/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html534/TMVA__SimulatedAnnealingFitter.html,5,['Config'],['Configurable']
Modifiability,"nealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::FitterBase::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html:6832,Config,Configurable,6832,root/html602/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html,10,['Config'],['Configurable']
Modifiability,"nealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::FitterBase::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Double_tfAdaptiveSpeedhow fast temperature change in adaptive (in adaptive two variables describ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html:6392,Config,Configurable,6392,root/html532/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html,5,['Config'],['Configurable']
Modifiability,"near to far camera clip planes; (the minimum and maximum visible depth). See also; TGLVertex3 TGLCamera::ViewportToWorld(const TGLVertex3 & viewportVertex) const; for 3D viewport -> 3D world vertex conversions.; See also OpenGL gluUnProject & glDepth documentation. Camera must have valid frustum cache - call Apply() after last modifcation, before using. std::pair<Bool_t, TGLVertex3> ViewportPlaneIntersection(Double_t viewportX, Double_t viewportY, const TGLPlane& worldPlane) const; Find the intersection of projection of supplied viewport point (a 3D world; line - see ViewportToWorld) with supplied world plane. Returns std::pair; of Bool_t and TGLVertex3. If line intersects std::pair.first (Bool_t) is; kTRUE, and std::pair.second (TGLVertex) contains the intersection vertex.; If line does not intersect (line and plane parallel) std::pair.first; (Bool_t) if kFALSE, and std::pair.second (TGLVertex) is invalid. NOTE: The projection lines is extended for the plane intersection test; hence the intersection vertex can lie outside the near/far clip regions; (not visible). Camera must have valid frustum cache - call Apply() after last modifcation, before using. std::pair<Bool_t, TGLVertex3> ViewportPlaneIntersection(const TPoint& viewport, const TGLPlane& worldPlane) const; Find the intersection of projection of supplied viewport TPoint (a 3D world; line - see ViewportToWorld) with supplied world plane. Returns std::pair; of bool and vertex. If line intersects. Camera must have valid frustum cache - call Apply() after last modifcation, before using. TGLVector3 ViewportDeltaToWorld(const TGLVertex3& worldRef, Double_t viewportXDelta, Double_t viewportYDelta, TGLMatrix* modviewMat = 0) const; Apply a 2D viewport delta (shift) to the projection of worldRef onto viewport,; returning the resultant world vector which equates to it. Useful for making; 3D world objects track mouse moves. Camera must have valid frustum cache - call Apply(). Bool_t OfInterest(const TGLBoundingBox& box",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLCamera.html:12529,extend,extended,12529,root/html528/TGLCamera.html,https://root.cern,https://root.cern/root/html528/TGLCamera.html,10,['extend'],['extended']
Modifiability,"nearMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Implements ROOT::Math::Minimizer.; Definition at line 197 of file TLinearMinimizer.cxx. ◆ MinValue(). double TLinearMinimizer::MinValue ; (; ); const. inlineoverridevirtual . return minimum function value ; Implements ROOT::Math::Minimizer.; Definition at line 63 of file TLinearMinimizer.h. ◆ NCalls(). unsigned int TLinearMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 75 of file TLinearMinimizer.h. ◆ NDim(). unsigned int TLinearMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 79 of file TLinearMinimizer.h. ◆ NFree(). unsigned int TLinearMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 83 of file TLinearMinimizer.h. ◆ ProvidesError(). bool TLinearMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 86 of file TLinearMinimizer.h. ◆ SetFixedVariable(). bool TLinearMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; , . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 190 of file TLinearMinimizer.cxx. ◆ SetFunction(). void TLinearMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the fit model function ; Implements ROOT::Math::Minimizer.; Definition at line 106 of file TLinearMinimizer.cxx. ◆ SetVariable(). bool TLinearMinimizer::SetVariable ; (; uns",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:15045,variab,variables,15045,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,1,['variab'],['variables']
Modifiability,"nearPart(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNdim() const; Int_tGetNpar() const; Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParameter(const char* name) const; Double_tGetParameter(Int_t param) const; Double_t*GetParameters() const; voidGetParameters(Double_t* params) const; const char*GetParName(Int_t ipar) const; Int_tGetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVariable(const char* name) const; TStringGetVarName(Int_t ivar) const; Int_tGetVarNumber(const char* name) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsLinear() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFormu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:3331,Inherit,InheritsFrom,3331,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nearVar is the most general form of a derived real-valued object that can be used by RooRealIntegral to integrate over ;  CRooLinkedListRooLinkedList is an collection class for internal use, storing a collection of RooAbsArg pointers in a doubly linked list ;  CRooLinkedListElemRooLinkedListElem is an link element for the RooLinkedList class ;  CRooLinkedListIterRooLinkedListIter is the TIterator implementation for RooLinkedList ;  CRooLinTransBinningRooLinTransBinning is a special binning implementation for RooLinearVar that transforms the binning of the RooLinearVar input variable in the same way that RooLinearVar does ;  CRooListA RooList is a TList with extra support for working with options that are associated with each node ;  CRooListProxyRooListProxy is the concrete proxy for RooArgList objects ;  CRooLognormalRooFit Lognormal PDF ;  CRooMapCatEntry;  ►CRooMappedCategory;  CEntry;  CRooMath;  CRooMathCoreReg;  CRooMathMoreReg;  CRooMCIntegratorRooMCIntegrator implements an adaptive multi-dimensional Monte Carlo numerical integration, following the VEGAS algorithm originally described in G ;  CRooMCStudyRooMCStudy is a help class to facilitate Monte Carlo studies such as 'goodness-of-fit' studies, that involve fitting a PDF to multiple toy Monte Carlo sets generated from the same PDF or another PDF ;  CRooMinimizerRooMinimizer is a wrapper class around ROOT::Fit:Fitter that provides a seamless interface between the minimizer functionality and the native RooFit interface ;  CRooMinimizerFcn;  CRooMinuitRooMinuit is a wrapper class around TFitter/TMinuit that provides a seamless interface between the MINUIT functionality and the native RooFit interface ;  CRooMomentRooMoment represents the first, second, or third order derivative of any RooAbsReal as calculated (numerically) by the MathCore Richardson derivator class ;  ►CRooMomentMorph;  CCacheElem;  ►CRooMomentMorphFunc;  CCacheElem;  ►CRooMomentMorphFuncND;  CCacheElem;  CDigits;  CGrid2;  ►CRooMomentMorphND;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:118823,adapt,adaptive,118823,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,1,['adapt'],['adaptive']
Modifiability,"nect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DrawBox (Int_t x, Int_t y, UInt_t width, UInt_t height);  Draw resize box (rectangle). ;  ; void MoveResizeIt ();  Move (resize) parent MDI window. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiWinResizer.html:22301,inherit,inherited,22301,doc/master/classTGMdiWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiWinResizer.html,1,['inherit'],['inherited']
Modifiability,"necting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. ~TProofLite(); Destructor. Int_t GetNumberOfWorkers(const char* url = 0); Static method to determine the number of workers giving priority to users request.; Otherwise use the system information, if available, or just start; the minimal number, i.e. 2 . Int_t SetupWorkers(Int_t opt = 0, TList* wrks = 0); Start up PROOF workers. void NotifyStartUp(const char* action, Int_t done, Int_t tot); Notify setting-up operation message. Int_t SetProofServEnv(const char* ord); Create environment files for worker 'ord'. void ResolveKeywords(TString& s, const char* ord, const char* logfile); Resolve some keywords in 's'; <logfilewrk>, <user>, <rootsys>, <cpupin>. Int_t CreateSandbox(); Create the sandbox for this session. void Print(Option_t* option = """") const; Print status of PROOF-Lite cluster. TProofQueryResult * MakeQueryResult(Long64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:29837,sandbox,sandbox,29837,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,6,['sandbox'],['sandbox']
Modifiability,"nections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEditQueryFrame.html:22003,inherit,inherited,22003,doc/master/classTEditQueryFrame.html,https://root.cern,https://root.cern/doc/master/classTEditQueryFrame.html,60,['inherit'],['inherited']
Modifiability,nections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGPictureButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGImageMap.html:23986,inherit,inherited,23986,doc/master/classTGImageMap.html,https://root.cern,https://root.cern/doc/master/classTGImageMap.html,2,['inherit'],['inherited']
Modifiability,"nects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TContextMenuImp; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AddEntrySorted (TGPopupMenu *current, const char *s, Int_t id, void *ud=nullptr, const TGPicture *p=nullptr, Bool_t sorted=kTRUE);  Add a entry to current menu with alphabetical ordering. ;  ; TGPopupMenu * FindHierarchy (const char *commentstring, TString &last_component);  Decodes the Hierarchy=""Level0/Level1/Level2/..."" statement from the comment field and returns the - if needed - created sub menu ""Level0/Level1"" Returns the last component in last_component. ;  ;  Protected Member Functions inherited from TGPopupMenu; void DoRedraw () override;  Draw popup menu. ;  ; void DrawCheckMark (GContext_t gc, Int_t l, Int_t t, Int_t r, Int_t b);  Draw check mark. Used for checked button type menu entries. ;  ; void DrawRCheckMark (GContext_t gc, Int_t l, Int_t t, Int_t r, Int_t b);  Draw radio check mark. Used for radio button type menu entries. ;  ; void DrawTrianglePattern (GContext_t gc, Int_t l, Int_t t, Int_t r, Int_t b);  Draw triangle pattern. ;  ; virtual void Reposition ();  Reposition entries in popup menu. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:27249,inherit,inherited,27249,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,1,['inherit'],['inherited']
Modifiability,"ned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveCompound; Short_t fCompoundOpen;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:33891,inherit,inherited,33891,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,3,['inherit'],['inherited']
Modifiability,"ned by; SetEpsilon(). More specifically: we calculate the following for different cutoff; values C until we reach the target confidence level: \int_{ F >= C } F d{normset}.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the; bins in decreasing order until the desired level of confidence has been; reached. Note that this means the actual confidence level is >= the; confidence level prescribed by the client (unless the user calls; SetHistStrict(kFALSE)). This method is the default but may not remain as such; in future releases, so you may wish to explicitly configure to use this; method by calling SetUseKeys(false). These are not the only ways for the confidence interval to be determined, and; other possibilities are being considered being added, especially for the; 1-dimensional case. One can ask an MCMCInterval for the lower and upper limits on a specific; parameter of interest in the interval. Note that this works better for; some distributions (ones with exactly one local maximum) than others, and sometimes; has little value. Function Members (Methods); public:. virtual~MCMCInterval(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tCheckParameters(const RooArgSet& point) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__MCMCInterval.html:2027,config,configure,2027,root/html526/RooStats__MCMCInterval.html,https://root.cern,https://root.cern/root/html526/RooStats__MCMCInterval.html,1,['config'],['configure']
Modifiability,"ned by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \int_{ F >= C } F; d{normset}.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence level is >= the confidence level; prescribed by the client (unless the user calls SetHistStrict(kFALSE)). This; method is the default but may not remain as such in future releases, so you may; wish to explicitly configure to use this method by calling SetUseKeys(false). These are not the only ways for the confidence interval to be determined, and; other possibilities are being considered being added, especially for the; 1-dimensional case. One can ask an MCMCInterval for the lower and upper limits on a specific; parameter of interest in the interval. Note that this works better for some; distributions (ones with exactly one local maximum) than others, and sometimes; has little value. Function Members (Methods); public:. virtual~MCMCInterval(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tCheckParameters(const RooArgSet& point) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__MCMCInterval.html:2028,config,configure,2028,root/html528/RooStats__MCMCInterval.html,https://root.cern,https://root.cern/root/html528/RooStats__MCMCInterval.html,10,['config'],['configure']
Modifiability,"ned here:. Different matrix views without copying data elements :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTSparseDiag_const<double>(); static TClass*Class(); const double*GetDataPtr() const; const TMatrixTBase<double>*GetMatrix() const; Int_tGetNdiags() const; virtual TClass*IsA() const; doubleoperator()(Int_t i) const; TMatrixTSparseDiag_const<double>&operator=(const TMatrixTSparseDiag_const<double>& trc); doubleoperator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTSparseDiag_const<double>(); TMatrixTSparseDiag_const<double>(const TMatrixTSparse<double>& matrix); TMatrixTSparseDiag_const<double>(const TMatrixTSparseDiag_const<double>& trc). Data Members; protected:. const double*fDataPtrdata pointer; TMatrixTSparse<double>*fMatrixthe matrix I am the diagonal of; Int_tfNdiagnumber of diag elems, min(nrows,ncols). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Element TMatrixTSparseDiag_const<Element> operator()(Int_t i) const. TElementActionT& operator=(const TMatrixTSparseDiag_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetNdiags() const; { return fNdiag; }. const Element * GetDataPtr() const; { return fDataPtr; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-06-30 15:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTSparseDiag_const_double_.html:1728,Inherit,Inheritance,1728,root/html602/TMatrixTSparseDiag_const_double_.html,https://root.cern,https://root.cern/root/html602/TMatrixTSparseDiag_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ned here:. Different matrix views without copying data elements :; TMatrixTRow_const TMatrixTRow; TMatrixTColumn_const TMatrixTColumn; TMatrixTDiag_const TMatrixTDiag; TMatrixTFlat_const TMatrixTFlat; TMatrixTSub_const TMatrixTSub; TMatrixTSparseRow_const TMatrixTSparseRow; TMatrixTSparseDiag_const TMatrixTSparseDiag. TElementActionT; TElementPosActionT. Function Members (Methods); public:. virtual~TMatrixTSparseDiag_const<double>(); static TClass*Class(); const double*GetDataPtr() const; const TMatrixTBase<double>*GetMatrix() const; Int_tGetNdiags() const; virtual TClass*IsA() const; doubleoperator()(Int_t i) const; TMatrixTSparseDiag_const<double>&operator=(const TMatrixTSparseDiag_const<double>& trc); doubleoperator[](Int_t i) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTSparseDiag_const<double>(); TMatrixTSparseDiag_const<double>(const TMatrixTSparse<double>& matrix); TMatrixTSparseDiag_const<double>(const TMatrixTSparseDiag_const<double>& trc). Data Members; protected:. const double*fDataPtrdata pointer; TMatrixTSparse<double>*fMatrixthe matrix I am the diagonal of; Int_tfNdiagnumber of diag elems, min(nrows,ncols). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Element TMatrixTSparseDiag_const<Element> operator()(Int_t i) const. TElementActionT& operator=(const TMatrixTSparseDiag_const<double>& trc); {return *this;}. const TMatrixTBase<Element> * GetMatrix() const; { return fMatrix; }. const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Int_t GetNdiags() const; { return fNdiag; }. const Element * GetDataPtr() const; { return fDataPtr; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMatrixTSparseDiag_const_double_.html:1728,Inherit,Inheritance,1728,root/html604/TMatrixTSparseDiag_const_double_.html,https://root.cern,https://root.cern/root/html604/TMatrixTSparseDiag_const_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ned in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrack.html:10294,inherit,inherits,10294,doc/master/classTGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTGeoTrack.html,1,['inherit'],['inherits']
Modifiability,"ned int ivar) override;  release an existing variable ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower) override;  set lower limit variable (override if minimizer supports them ) ;  ; bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper) override;  set upper limit variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableLimits (unsigned int ivar, double lower, double upper) override;  set the limits of an already existing variable ;  ; bool SetVariableLowerLimit (unsigned int ivar, double lower) override;  set the lower-limit of an already existing variable ;  ; bool SetVariableStepSize (unsigned int ivar, double step) override;  set the step size of an already existing variable ;  ; bool SetVariableUpperLimit (unsigned int ivar, double upper) override;  set the upper-limit of an already existing variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; bool SetVariableValues (const double *x) override;  set the values of all existing variables (array must be dimensioned to the size of existing parameters) ;  ; virtual const double * StepSizes () const;  accessor methods ;  ; int VariableIndex (const std::string &name) const override;  get index of variable given a variable given a name return -1 if variable is no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:3025,variab,variable,3025,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,3,['variab'],['variable']
Modifiability,"ned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& ) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). bool SetVariableInitialRange(unsigned int , double , double ); set the initial range of an existing variable. bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. const double * X() const; return pointer to X values at the minimum. double Edm() const; return expected distance reached from the minimum (re-implement if minimizer provides it. { return -1; }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return NULL; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NIterations() const; number of iterations to reach the minimum. { return NCall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:7098,variab,variable,7098,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,2,['variab'],['variable']
Modifiability,"ned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& pars) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). bool SetVariableInitialRange(unsigned int , double , double ); set the initial range of an existing variable. bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. const double * X() const; return pointer to X values at the minimum. double Edm() const; return expected distance reached from the minimum (re-implement if minimizer provides it. { return -1; }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return NULL; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NIterations() const; number of iterations to reach the minimum. { return N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Minimizer.html:7362,variab,variable,7362,root/html602/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Minimizer.html,4,['variab'],['variable']
Modifiability,"ned int npar); ROOT::Minuit2::FumiliFCNBaseFumiliFCNBase(const ROOT::Minuit2::FumiliFCNBase&); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(const ROOT::Minuit2::GenericFunction&); virtual const vector<double>&Gradient() const; virtual doubleHessian(unsigned int row, unsigned int col) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FumiliFCNBase&operator=(const ROOT::Minuit2::FumiliFCNBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const; virtual doubleValue() const. protected:. vector<double>&Gradient(); vector<double>&Hessian(); virtual voidInitAndReset(unsigned int npar); voidSetFCNValue(double value). Data Members; private:. vector<double>fGradient; vector<double>fHessian; unsigned intfNumberOfParameters; doublefValue. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FumiliFCNBase(). Default Constructor. Need in this case to create when implementing EvaluateAll the Gradient and Hessian vectors with the right size. {}. FumiliFCNBase(unsigned int npar). Constructor which initializes the class with the function provided by the; user for modeling the data. @param npar the number of parameters. {}. virtual ~FumiliFCNBase(); FumiliFCNBase(const ParametricFunction& modelFCN) { fModelFunction = &modelFCN; }. {}. void EvaluateAll(const vector<double>& par). Evaluate function Value, Gradient and Hessian using Fumili approximation, for values of parameters p; The resul is cached inside and is return from the FumiliFCNBase::Value , FumiliFCNBase::Gradient and; FumiliFCNBase::Hessian methods. @param par vector of parameters. double Value() const. Return cached Value of objective function estimated previously using the FumiliFCNBase::EvaluateAll method. { return fValue; }. const std::vector<double> & Gradient() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__FumiliFCNBase.html:2637,Inherit,Inheritance,2637,root/html602/ROOT__Minuit2__FumiliFCNBase.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__FumiliFCNBase.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ned intfDimcached value of dimension; TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions; boolfOwnFuncflag to indicate we own the TF1 function pointer; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions; static doublefgEpsepsilon used in derivative calculation h ~ eps |p|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedMultiTF1(TF1& f, unsigned int dim = 0). constructor from a function pointer to a TF1; If dim = 0 dimension is taken from TF1::GetNdim().; IN case of multi-dimensional function created using directly TF1 object the dimension; returned by TF1::GetNdim is always 1. The user must then pass the correct value of dim. virtual ~WrappedMultiTF1(). Destructor (no operations). Function pointer is not owned. { if (fOwnFunc && fFunc) delete fFunc; }. WrappedMultiTF1(const ROOT::Math::WrappedMultiTF1& rhs). Copy constructor. IMultiGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. unsigned int NDim() const; function dimension. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cached inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (from TF1). void ParameterGradient(const double* x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes rapidly. double GetDerivPrecision(); get precision value used for calculating the derivative step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__WrappedMultiTF1.html:3804,inherit,inherited,3804,root/html602/ROOT__Math__WrappedMultiTF1.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__WrappedMultiTF1.html,2,['inherit'],['inherited']
Modifiability,"ned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower . ). overridevirtual . set lower limit variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 88 of file BasicMinimizer.cxx. ◆ SetMinValue(). void ROOT::Math::BasicMinimizer::SetMinValue ; (; double ; val). inlineprotected . Definition at line 152 of file BasicMinimizer.h. ◆ SetUpperLimitedVariable(). bool ROOT::Math::BasicMinimizer::SetUpperLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; upper . ). overridevirtual . set upper limit variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 97 of file BasicMinimizer.cxx. ◆ SetVariable(). bool ROOT::Math::BasicMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 63 of file BasicMinimizer.cxx. ◆ SetVariableLimits(). bool ROOT::Math::BasicMinimizer::SetVariableLimits ; (; unsigned int ; ivar, . double ; lower, . double ; upper . ). overridevirtual . set the limits of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 159 of file BasicMinimizer.cxx. ◆ SetVariableLowerLimit(). bool ROOT::Math::BasicMinimizer::SetVariableLowerLimit ; (; unsigned int ; ivar, . double ; lower . ). overridevirtual . set the lower-limit of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 147 of file BasicMinimizer.cxx. ◆ SetVariableStepSize(). bool ROOT::Math::BasicMinimizer::SetVariableStepSize ; (; unsigned int ; ivar, . double ; step . ). overridevirtual . set the step size of an already existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 140 of file BasicMinimizer.cxx. ◆ SetVariableUpperLimit(). bool ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:17978,variab,variable,17978,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,1,['variab'],['variable']
Modifiability,"ned n);  ;  Public Member Functions inherited from ROOT::TExecutorCRTP< TProcessExecutor >;  TExecutorCRTP ()=default;  ;  TExecutorCRTP (const TExecutorCRTP &)=delete;  ; auto Map (F func, const std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of an immutable vector. ;  ; auto Map (F func, ROOT::TSeq< INTEGER > args) -> std::vector< InvokeResult_t< F, INTEGER > >;  Execute a function over a sequence of indexes. ;  ; auto Map (F func, std::initializer_list< T > args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of an initializer_list. ;  ; auto Map (F func, std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of a vector. ;  ; auto Map (F func, unsigned nTimes) -> std::vector< InvokeResult_t< F > >;  Execute a function without arguments several times. ;  ; T * MapReduce (F func, const std::vector< T * > &args);  Execute a function over the TObject-inheriting elements of an immutable vector (Map) and merge the objects into a single one (Reduce). ;  ; auto MapReduce (F func, const std::vector< T > &args, R redfunc) -> InvokeResult_t< F, T >;  Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce). ;  ; auto MapReduce (F func, ROOT::TSeq< INTEGER > args, R redfunc) -> InvokeResult_t< F, INTEGER >;  Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce). ;  ; auto MapReduce (F func, std::initializer_list< T > args, R redfunc) -> InvokeResult_t< F, T >;  Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single value (Reduce). ;  ; T * MapReduce (F func, std::vector< T * > &args);  Execute a function over the TObject-inheriting elements of a vector (Map) and merge the objects into a single one (Reduce). ;  ; auto MapReduce (F func, std::vector< T > &args, R redfunc) -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html:6139,inherit,inheriting,6139,doc/v632/classROOT_1_1TProcessExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html,2,['inherit'],['inheriting']
Modifiability,"ned tree to our list of trees to be notified whenever we change; our branch addresses or when we are deleted. TFriendElement* AddFriend(const char* treename, const char* filename = """"); Add a TFriendElement to the list of friends. This function:; -opens a file if filename is specified; -reads a Tree with name treename from the file (current directory); -adds the Tree to the list of friends; see other AddFriend functions. A TFriendElement TF describes a TTree object TF in a file.; When a TFriendElement TF is added to the the list of friends of an; existing TTree T, any variable from TF can be referenced in a query; to T. A tree keeps a list of friends. In the context of a tree (or a chain),; friendship means unrestricted access to the friends data. In this way; it is much like adding another branch to the tree without taking the risk; of damaging it. To add a friend to the list, you can use the TTree::AddFriend; method. The tree in the diagram below has two friends (friend_tree1 and; friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m. /*; ; */. The AddFriend method has two parameters, the first is the tree name and the; second is the name of the ROOT file where the friend tree is saved.; AddFriend automatically opens the friend file. If no file name is given,; the tree called ft1 is assumed to be in the same file as the original tree. tree.AddFriend(""ft1"",""friendfile1.root"");; If the friend tree has the same name as the original tree, you can give it; an alias in the context of the friendship:. tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; Once the tree has friends, we can use TTree::Draw as if the friend's; variables were in the original tree. To specify which tree to use in; the Draw method, use the syntax:. <treeName>.<branchname>.<varname>; If the variablename is enough to uniquely identify the variable, you can; leave out the tree and/or branch name.; For example, these commands generate a 3-d scatter plot of variable ""var""; in the TTree",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:38151,variab,variables,38151,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,6,['variab'],['variables']
Modifiability,"ned tree to our list of trees to be notified whenever we change; our branch addresses or when we are deleted. TFriendElement* AddFriend(const char* treename, const char* filename = """"); Add a TFriendElement to the list of friends. This function:; -opens a file if filename is specified; -reads a Tree with name treename from the file (current directory); -adds the Tree to the list of friends; see other AddFriend functions. A TFriendElement TF describes a TTree object TF in a file.; When a TFriendElement TF is added to the the list of friends of an; existing TTree T, any variable from TF can be referenced in a query; to T. A tree keeps a list of friends. In the context of a tree (or a chain),; friendship means unrestricted access to the friends data. In this way; it is much like adding another branch to the tree without taking the risk; of damaging it. To add a friend to the list, you can use the TTree::AddFriend; method. The tree in the diagram below has two friends (friend_tree1 and; friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m. /*; ; */. The AddFriend method has two parameters, the first is the tree name and the; second is the name of the ROOT file where the friend tree is saved.; AddFriend automatically opens the friend file. If no file name is given,; the tree called ft1 is assumed to be in the same file as the original tree. tree.AddFriend(""ft1"",""friendfile1.root"");; If the friend tree has the same name as the original tree, you can give it; an alias sin the context of the friendship:. tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; Once the tree has friends, we can use TTree::Draw as if the friend's; variables were in the original tree. To specify which tree to use in; the Draw method, use the syntax:. <treeName>.<branchname>.<varname>; If the variablename is enough to uniquely identify the variable, you can; leave out the tree and/or branch name.; For example, these commands generate a 3-d scatter plot of variable ""var""; in the TTre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:34724,variab,variables,34724,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,4,['variab'],['variables']
Modifiability,"ned(R__MUST_REVISIT); 3862#if R__MUST_REVISIT(6,2); 3863 R__LOCKGUARD(gInterpreterMutex);; 3864 Warning(""SaveContext"",""Cling should provide a way to record a state watermark similar to store_dictposition(&fDictPos)"");; 3865#endif; 3866#endif; 3867}; 3868 ; 3869////////////////////////////////////////////////////////////////////////////////; 3870/// Save the current Cling state of global objects.; 3871 ; 3872void TCling::SaveGlobalsContext(); 3873{; 3874#if defined(R__MUST_REVISIT); 3875#if R__MUST_REVISIT(6,2); 3876 R__LOCKGUARD(gInterpreterMutex);; 3877 Warning(""SaveGlobalsContext"",""Cling should provide a way to record a watermark for the list of global variable similar to store_dictposition(&fDictPosGlobals)"");; 3878#endif; 3879#endif; 3880}; 3881 ; 3882////////////////////////////////////////////////////////////////////////////////; 3883/// No op: see TClingCallbacks (used to update the list of globals); 3884 ; 3885void TCling::UpdateListOfGlobals(); 3886{; 3887}; 3888 ; 3889////////////////////////////////////////////////////////////////////////////////; 3890/// No op: see TClingCallbacks (used to update the list of global functions); 3891 ; 3892void TCling::UpdateListOfGlobalFunctions(); 3893{; 3894}; 3895 ; 3896////////////////////////////////////////////////////////////////////////////////; 3897/// No op: see TClingCallbacks (used to update the list of types); 3898 ; 3899void TCling::UpdateListOfTypes(); 3900{; 3901}; 3902 ; 3903////////////////////////////////////////////////////////////////////////////////; 3904/// Check in what order the member of a tuple are layout.; 3905enum class ETupleOrdering {; 3906 kAscending,; 3907 kDescending,; 3908 kUnexpected; 3909};; 3910 ; 3911struct AlternateTupleIntDoubleAsc; 3912{; 3913 Int_t _0;; 3914 Double_t _1;; 3915};; 3916 ; 3917struct AlternateTupleIntDoubleDes; 3918{; 3919 Double_t _1;; 3920 Int_t _0;; 3921};; 3922 ; 3923static ETupleOrdering IsTupleAscending(); 3924{; 3925 std::tuple<int,double> value;; 3926 Alterna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:150294,variab,variable,150294,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nedModel);  ; void SetupKerasModelForEval ();  Setting up model for evaluation Add here some needed optimizations like disabling eager execution. ;  . Private Attributes; UInt_t fBatchSize {0};  ; Bool_t fContinueTraining;  ; TString fFilenameModel;  ; TString fFilenameTrainedModel;  ; TString fGpuOptions;  ; TString fKerasString;  ; TString fLearningRateSchedule;  ; bool fModelIsSetup = false;  ; bool fModelIsSetupForEval = false;  ; UInt_t fNOutputs {0};  ; UInt_t fNumEpochs {0};  ; Int_t fNumThreads {0};  ; TString fNumValidationString;  ; UInt_t fNVars {0};  ; std::vector< float > fOutput;  ; Bool_t fSaveBestOnly;  ; TString fTensorBoard;  ; Int_t fTriesEarlyStopping;  ; TString fUserCodeName;  ; Bool_t fUseTFKeras { true};  ; std::vector< float > fVals;  ; Int_t fVerbose;  . Additional Inherited Members;  Static Public Member Functions inherited from TMVA::PyMethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::vector< size_t > GetDataFromList (PyObject *listObject);  Utility function which retrieves and returns the values of the List object as a vector of size_t. ;  ; static std::vector< size_t > GetDataFromTuple (PyObject *tupleObject);  Utility function which retrieves and returns the values of the Tuple object as a vector of size_t. ;  ; static PyObject * GetValueFromDict (PyObject *dict, const char *key);  Utility function which checks if a given key is present in a Python dictionary object and returns the associated value or throws runtime error. ;  ; static void PyFinalize ();  ; static void PyInitialize ();  Initialize Python interpreter. ;  ; static int PyIsInitialized ();  Check Python interpreter initialization status. ;  ; static void PyRunString (TString code, PyObject *globalNS, PyObject *localNS);  Execute Python code from string. ;  ; static const char * PyStringAsString (PyObject *string);  Returns const char* from Python",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyKeras.html:24088,inherit,inherited,24088,doc/master/classTMVA_1_1MethodPyKeras.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyKeras.html,1,['inherit'],['inherited']
Modifiability,"needed ;  ; bool Contour (unsigned int i, unsigned int j, unsigned int &npoints, double *xi, double *xj) override;  find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; double Correlation (unsigned int i, unsigned int j) const override;  return correlation coefficient between variable i and j. ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrix elements if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ;  ; int CovMatrixStatus () const override;  return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defined status = 1 : covariance only approximate status = 2 : full matrix but forced pos def status = 3 : full accurate matrix ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetCovMatrix (double *cov) const override;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; bool GetHessianMatrix (double *h) const override;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; bool GetMinosError (unsigned int i, double &errLow, double &errUp, int=0) override;  get the minos error for parameter i, return false if Minos failed A minimizaiton must be performed befre, return false if no minimization has been done In case of Minos failed the status error is updated as following status += 10 * minosStatus. ;  ; bool GetVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:2354,variab,variable,2354,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,2,['variab'],['variable']
Modifiability,"needed anymore (p0 is assigned by default); 2535 // if (fNumber == (300+fNpar-1) ) {; 2536 // for (int i = 0; i < fNpar; i++) SetParName(i,TString::Format(""p%d"",i));; 2537 // return;; 2538 // }; 2539 ; 2540 // // general case if parameters are digits (XX) change to pXX; 2541 // auto paramMap = fParams; // need to copy the map because SetParName is going to modify it; 2542 // for ( auto & p : paramMap) {; 2543 // if (p.first.IsDigit() ); 2544 // SetParName(p.second,TString::Format(""p%s"",p.first.Data()));; 2545 // }; 2546 ; 2547 return;; 2548}; 2549 ; 2550////////////////////////////////////////////////////////////////////////////////; 2551/// Return linear part.; 2552 ; 2553const TObject* TFormula::GetLinearPart(Int_t i) const; 2554{; 2555 if (!fLinearParts.empty()) {; 2556 int n = fLinearParts.size();; 2557 if (i < 0 || i >= n ) {; 2558 Error(""GetLinearPart"",""Formula %s has only %d linear parts - requested %d"",GetName(),n,i);; 2559 return nullptr;; 2560 }; 2561 return fLinearParts[i];; 2562 }; 2563 return nullptr;; 2564}; 2565 ; 2566////////////////////////////////////////////////////////////////////////////////; 2567/// Adds variable to known variables, and reprocess formula.; 2568 ; 2569void TFormula::AddVariable(const TString &name, double value); 2570{; 2571 if (fVars.find(name) != fVars.end()) {; 2572 TFormulaVariable &var = fVars[name];; 2573 var.fValue = value;; 2574 ; 2575 // If the position is not defined in the Cling vectors, make space for it; 2576 // but normally is variable is defined in fVars a slot should be also present in fClingVariables; 2577 if (var.fArrayPos < 0) {; 2578 var.fArrayPos = fVars.size();; 2579 }; 2580 if (var.fArrayPos >= (int)fClingVariables.size()) {; 2581 fClingVariables.resize(var.fArrayPos + 1);; 2582 }; 2583 fClingVariables[var.fArrayPos] = value;; 2584 } else {; 2585 TFormulaVariable var(name, value, fVars.size());; 2586 fVars[name] = var;; 2587 fClingVariables.push_back(value);; 2588 if (!fFormula.IsNull()) {; 2589 // printf(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:99265,variab,variable,99265,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGComboBox.h>. Inheritance diagram for TGLineStyleComboBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLineSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLineStyleComboBox.html:34123,inherit,inherited,34123,doc/master/classTGLineStyleComboBox.html,https://root.cern,https://root.cern/doc/master/classTGLineStyleComboBox.html,6,['inherit'],['inherited']
Modifiability,"needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGComboBox.h>. Inheritance diagram for TGLineWidthComboBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLineWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLineWidthComboBox.html:34143,inherit,inherited,34143,doc/master/classTGLineWidthComboBox.html,https://root.cern,https://root.cern/doc/master/classTGLineWidthComboBox.html,6,['inherit'],['inherited']
Modifiability,"needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGFSComboBox.h>. Inheritance diagram for TGFSComboBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGFSComboBox(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFSComboBox.html:34401,inherit,inherited,34401,doc/master/classTGFSComboBox.html,https://root.cern,https://root.cern/doc/master/classTGFSComboBox.html,6,['inherit'],['inherited']
Modifiability,"needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSimpleTable.h>. Inheritance diagram for TGSimpleTable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGSimpleTab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSimpleTable.html:38291,inherit,inherited,38291,doc/master/classTGSimpleTable.html,https://root.cern,https://root.cern/doc/master/classTGSimpleTable.html,6,['inherit'],['inherited']
Modifiability,"nel function sigma2. TF1* GetKDEFunction(UInt_t npx = 100, Double_t xMin = 1., Double_t xMax = 0.); Returns the estimated density. TF1* GetPDFUpperConfidenceInterval(Double_t confidenceLevel = 0.94999999999999996, UInt_t npx = 100, Double_t xMin = 1., Double_t xMax = 0.); Returns the upper estimated density. TF1* GetPDFLowerConfidenceInterval(Double_t confidenceLevel = 0.94999999999999996, UInt_t npx = 100, Double_t xMin = 1., Double_t xMax = 0.); Returns the upper estimated density. TF1* GetKDEApproximateBias(UInt_t npx = 100, Double_t xMin = 1., Double_t xMax = 0.); Returns the approximate bias. explicit TKDE(UInt_t events = 0, const Double_t* data = 0, Double_t xMin = 0., Double_t xMax = 0., const Option_t* option = ""KernelType:Gaussian;Iteration:Adaptive;Mirror:noMirror;Binning:RelaxedBinning"", Double_t rho = 1.). TKDE(UInt_t events, const Double_t* data, const Double_t* dataWeight, Double_t xMin = 0., Double_t xMax = 0., const Option_t* option = ""KernelType:Gaussian;Iteration:Adaptive;Mirror:noMirror;Binning:RelaxedBinning"", Double_t rho = 1.). TKDE(const Char_t* /*name*/, const KernelFunction& kernfunc, UInt_t events, const Double_t* data, Double_t xMin = 0.0, Double_t xMax = 0.0, const Option_t* option = ""KernelType:UserDefined;Iteration:Adaptive;Mirror:noMirror;Binning:RelaxedBinning"", Double_t rho = 1.0). Double_t GetValue(Double_t x) const; { return (*this)(x); }. TF1 * GetDrawnFunction(); get the drawn object to chanage settings; These objects are managed by TKDE and should not be deleted by the user. { return fPDF;}. TF1 * GetDrawnUpperFunction(); { return fUpperPDF;}. TF1 * GetDrawnLowerFunction(); { return fLowerPDF;}. TGraphErrors * GetDrawnGraph(); { return fGraph;}. TKDE operator=(TKDE& kde). Double_t GaussianKernel(Double_t x) const; Returns the kernel evaluation at x. Double_t EpanechnikovKernel(Double_t x) const. Double_t BiweightKernel(Double_t x) const; Returns the kernel evaluation at x. Double_t CosineArchKernel(Double_t x) const; Returns the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TKDE.html:19920,Adapt,Adaptive,19920,root/html604/TKDE.html,https://root.cern,https://root.cern/root/html604/TKDE.html,1,['Adapt'],['Adaptive']
Modifiability,"nel name; Float_tfThetafor Sigmoidal Kernel; Float_tfTolerancetolerance parameter; TMVA::SVWorkingSet*fWgSetsvm working set . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodSVM(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodSVM(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodSVM(); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); SVM can handle classification with 2 classes and regression with one regression-target. void Init(); default initialisation. void DeclareOptions(); declare options available for this method. void DeclareCompatibilityOptions(). void ProcessOptions(); option post processing (if necessary). void Train(); Train SVM. void AddWeightsXMLTo(void* parent) const; write configuration to xml file. void ReadWeightsFromXML(void* wghtnode). void WriteWeightsToStream(TFile& fout) const; TODO write IT; write training sample (TTree) to file. void ReadWeightsFromStream(istream& istr). void ReadWeightsFromStream(TFile& fFin); TODO write IT. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. const std::vector<Float_t>& GetRegressionValues(). void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Marcin Wolter, Andrzej Zemla » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodSVM.h 36966 2010-11-26 09:50:13Z evt $ » Last generated: 2010-12-02 14:53; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodSVM.html:17061,config,configuration,17061,root/html528/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodSVM.html,1,['config'],['configuration']
Modifiability,"nel name; Float_tfThetafor Sigmoidal Kernel; Float_tfTolerancetolerance parameter; TMVA::SVWorkingSet*fWgSetsvm working set . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodSVM(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodSVM(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodSVM(); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); SVM can handle classification with 2 classes and regression with one regression-target. void Init(); default initialisation. void DeclareOptions(); declare options available for this method. void DeclareCompatibilityOptions(). void ProcessOptions(); option post processing (if necessary). void Train(); Train SVM. void AddWeightsXMLTo(void* parent) const; write configuration to xml file. void ReadWeightsFromXML(void* wghtnode). void WriteWeightsToStream(TFile& fout) const; TODO write IT; write training sample (TTree) to file. void ReadWeightsFromStream(istream& istr). void ReadWeightsFromStream(TFile& fFin); TODO write IT. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. const std::vector<Float_t>& GetRegressionValues(). void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Marcin Wolter, Andrzej Zemla » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodSVM.h 39395 2011-05-26 10:05:54Z moneta $ » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodSVM.html:17681,config,configuration,17681,root/html530/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodSVM.html,1,['config'],['configuration']
Modifiability,"nel name; Float_tfThetafor Sigmoidal Kernel; Float_tfTolerancetolerance parameter; TMVA::SVWorkingSet*fWgSetsvm working set . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodSVM(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodSVM(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodSVM(); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); SVM can handle classification with 2 classes and regression with one regression-target. void Init(); default initialisation. void DeclareOptions(); declare options available for this method. void DeclareCompatibilityOptions(). void ProcessOptions(); option post processing (if necessary). void Train(); Train SVM. void AddWeightsXMLTo(void* parent) const; write configuration to xml file. void ReadWeightsFromXML(void* wghtnode). void WriteWeightsToStream(TFile& fout) const; TODO write IT; write training sample (TTree) to file. void ReadWeightsFromStream(istream& istr). void ReadWeightsFromStream(TFile& fFin); TODO write IT. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. const std::vector<Float_t>& GetRegressionValues(). void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Marcin Wolter, Andrzej Zemla » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodSVM.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodSVM.html:17681,config,configuration,17681,root/html532/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodSVM.html,2,['config'],['configuration']
Modifiability,"nel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeout. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Timeout ();  ; virtual void TurnOff ();  Remove timer from system timer list. ;  ; virtual void TurnOn ();  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLRedrawTimer.html:3075,inherit,inherited,3075,doc/master/classTGLRedrawTimer.html,https://root.cern,https://root.cern/doc/master/classTGLRedrawTimer.html,1,['inherit'],['inherited']
Modifiability,"nelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); TMVA::KDEKernel&operator=(const TMVA::KDEKernel&); voidSetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TMVA::MsgLogger&Log() const. Data Members; public:. enum EKernelType { kNone; kGauss; };; enum EKernelIter { kNonadaptiveKDE; kAdaptiveKDE; };; enum EKernelBorder { kNoTreatment; kKernelRenorm; kSampleMirror; };. private:. Float_tfFineFactorfine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function; TH1F*fFirstIterHisthistogram to be filled in the hidden iteration; Bool_tfHiddenIterationDefines if whats currently running is the ; TH1F*fHistcopy of input histogram; TMVA::KDEKernel::EKernelIterfIteriteration number; TMVA::KDEKernel::EKernelBorderfKDEborderThe method to take care about ""border"" effects; TF1*fKernel_integthe integral of the Kernel function; TMVA::MsgLogger*fLoggermessage logger; Float_tfLowerEdgethe lower edge of the PDF; Float_tfSigmaWidth of the Kernel function; TH1F*fSigmaHistcontains the Sigmas Widths for adaptive KDE ; Float_tfUpperEdgethe upper edge of the PDF. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; KDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); constructor; sanity check. ~KDEKernel(); destructor. void SetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); fIter == 1 ---> nonadaptive KDE; fIter == 2 ---> adaptive KDE. Float_t GetBinKernelIntegral(Float_t lowr, Float_t highr, Float_t mean, Int_t binnum); calculates the integral of the Kernel. KDEKernel(TMVA::KDEKernel::EKernel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__KDEKernel.html:1894,adapt,adaptive,1894,root/html528/TMVA__KDEKernel.html,https://root.cern,https://root.cern/root/html528/TMVA__KDEKernel.html,5,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,"nent 1"", x, mean, sigma);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, RooArgSet(a0, a1));; ; // Build exponential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Create dummy dataset that has more observables than the above pdf; RooRealVar y(""y"", ""y"", -10, 10);; RooDataSet data(""data"", ""data"", RooArgSet(x, y));; ; // ---------------------------------------------------; // B a s i c i n f o r m a t i o n r e q u e s t s; // ===================================================; ; // G e t l i s t o f o b s e r v a b l e s; // ---------------------------------------------; ; // Get list of observables of pdf in context of a dataset; //; // Observables are define each context as the variables; // shared between a model and a dataset. In this case; // that is the variable 'x'; ; std::unique_ptr<RooArgSet> model_obs{model.getObservables(data)};; model_obs->Print(""v"");; ; // G e t l i s t o f p a r a m e t e r s; // -------------------------------------------; ; // Get list of parameters, given list of observables; std::unique_ptr<RooArgSet> model_params{model.getParameters(x)};; model_params->Print(""v"");; ; // Get list of parameters, given a dataset; // (Gives identical results to operation above); std::unique_ptr<RooArgSet> model_params2{model.getParameters(data)};; model_params2->Print();; ; // G e t l i s t o f c o m p o n e n t s; // -------------------------------------------; ; // Get list",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf207__comptools_8C.html:2316,variab,variables,2316,doc/master/rf207__comptools_8C.html,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html,1,['variab'],['variables']
Modifiability,"nent selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_t_startFromMinAlways start minimization for global minimum?; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProfileLL(); Default constructor; Should only be used by proof. RooProfileLL(const char* name, const char* title, RooAbsReal& nll, const RooArgSet& observables); Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooProfileLL(const RooProfileLL& other, const char* name = 0); Copy constructor. ~RooProfileLL(); Destructor. const RooArgSet& bestFitParams() const. const RooArgSet& bestFitObs() const. RooAbsReal* createProfile(const RooArgSet& paramsOfInterest); Optimized implementation of createProfile for profile likelihoods.; Return profile of original function in terms of stated parameters; of interest rather than profiling recursively. void initializeMinimizer() const. Double_t evaluate() const; Evaluate profile ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooProfileLL.html:38382,Inherit,Inheritance,38382,root/html602/RooProfileLL.html,https://root.cern,https://root.cern/root/html602/RooProfileLL.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nents created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; RooObjCacheManager _cacheMgr;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJeffreysPrior.html:70790,inherit,inherited,70790,doc/master/classRooJeffreysPrior.html,https://root.cern,https://root.cern/doc/master/classRooJeffreysPrior.html,4,['inherit'],['inherited']
Modifiability,"neous simPdf(""simPdf"",""simPdf"",C) ; ; simPdf.addPdf(pdf_C1,""C1"") ;; simPdf.addPdf(pdf_C2,""C2"") ;; . Coding this example with RooSimPdfBuilder gives; . RooRealVar m(""m"",""mean of gaussian"",-10,10) ;; RooRealVar s(""s"",""sigma of gaussian"",0,20) ;; RooGaussian gauss(""gauss"",""gaussian"",X,m,s) ;; RooRealVar k(""k"",""ArgusBG kappa parameter"",-50,0) ;; RooRealVar xm(""xm"",""ArgusBG cutoff point"",5.29) ;; RooArgusBG argus(""argus"",""argus background"",X,k,xm) ;; RooRealVar gfrac(""gfrac"",""fraction of gaussian"",0.,1.) ;; RooAddPdf pdf(""pdf"",""gauss+argus"",RooArgList(gauss,argus),gfrac) ;; RooSimPdfBuilder builder(pdf) ;; RooArgSet* config = builder.createProtoBuildConfig() ;; (*config)[""physModels""] = ""pdf"" ; // Name of the PDF we are going to work with; (*config)[""splitCats""] = ""C"" ; // Category used to differentiate sub-datasets; (*config)[""pdf""] = ""C : k,s"" ; // Prescription to taylor PDF parameters k and s ; // for each data subset designated by C states; RooSimultaneous* simPdf = builder.buildPdf(*config,&D) ;; . The above snippet of code demonstrates the concept of RooSimPdfBuilder:; the user defines a single 'prototype' PDF that defines the structure of all; PDF components of the RooSimultaneous PDF to be built. RooSimPdfBuilder ; then takes this prototype and replicates it as a component ; PDF for each state of the C index category.; . In the above example RooSimPdfBuilder; will first replicate k and s into ; k_C1,k_C2 and s_C1,s_C2, as prescribed in the; configuration. Then it will recursively replicate all PDF nodes that depend on; the 'split' parameter nodes: gauss into gauss_C1,C2, argus ; into argus_C1,C2 and finally pdf into pdf_C1,pdf_C2. ; When PDFs for all states of C have been replicated; they are assembled into a RooSimultaneous PDF, which is returned by the buildPdf(); method.; . Although in this very simple example the use of RooSimPdfBuilder doesn't; reduce the amount of code much, it is already easier to read and maintain; because there is no duplicate code. As th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:3053,config,config,3053,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,11,['config'],['config']
Modifiability,neoverridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 99 of file GSLNLSMinimizer.h. ◆ MinGradient(). const double * ROOT::Math::GSLNLSMinimizer::MinGradient ; (; ); const. overridevirtual . return pointer to gradient values at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 450 of file GSLNLSMinimizer.cxx. ◆ Minimize(). bool ROOT::Math::GSLNLSMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Reimplemented from ROOT::Math::BasicMinimizer.; Definition at line 247 of file GSLNLSMinimizer.cxx. ◆ NCalls(). unsigned int ROOT::Math::GSLNLSMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 89 of file GSLNLSMinimizer.h. ◆ ProvidesError(). bool ROOT::Math::GSLNLSMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 96 of file GSLNLSMinimizer.h. ◆ SetFunction(). void ROOT::Math::GSLNLSMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Reimplemented from ROOT::Math::BasicMinimizer.; Definition at line 235 of file GSLNLSMinimizer.cxx. Member Data Documentation. ◆ fCovMatrix. std::vector<double> ROOT::Math::GSLNLSMinimizer::fCovMatrix. private . Definition at line 134 of file GSLNLSMinimizer.h. ◆ fEdm. double ROOT::Math::GSLNLSMinimizer::fEdm. private . Definition at line 131 of file GSLNLSMinimizer.h. ◆ fErrors. std::vector<double> ROOT::Math::GSLNLSMinimizer::fErrors. private . Definition at line 133 of file GSLNLSMinimizer.h. ◆ fGSLMultiFit. ROOT::Math::GSLMultiFit* ROOT::Math::GSLNLSMinimizer::fGSLMultiFit. private . Definition at line 129 of file GSLNLS,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html:14080,variab,variables,14080,doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLNLSMinimizer.html,1,['variab'],['variables']
Modifiability,"ner &scan, const ROOT::TMetaUtils::RConstructorTypes &ctorTypes, bool isSplit, bool isGenreflex, bool isSelXML, bool writeEmptyRootPCM)Definition rootcling_impl.cxx:2652; gOptSystemModuleByproductsstatic llvm::cl::opt< bool > gOptSystemModuleByproducts(""mSystemByproducts"", llvm::cl::Hidden, llvm::cl::desc(""Allow implicit build of system modules.""), llvm::cl::cat(gRootclingOptions)); CheckClassDefbool CheckClassDef(const clang::RecordDecl &cl, const cling::Interpreter &interp)Return false if the class does not have ClassDef even-though it should.Definition rootcling_impl.cxx:801; NeedsSelectionbool NeedsSelection(const char *name)Definition rootcling_impl.cxx:3426; extractMultipleOptionsint extractMultipleOptions(std::vector< ROOT::option::Option > &options, int oIndex, std::vector< std::string > &values)Extract from options multiple values with the same option.Definition rootcling_impl.cxx:5527; rootcling_impl.h; ROOT_rootcling_Driverint ROOT_rootcling_Driver(int argc, char **argv, const ROOT::Internal::RootCling::DriverConfig &config)Definition rootcling_impl.cxx:6225; whatstatic const char * whatDefinition stlLoader.cc:5; ROOT::Internal::RootCling::DriverConfigDefinition rootcling_impl.h:18; ROOT::Internal::RootCling::DriverConfig::fTCling__GetInterpretercling::Interpreter *(* fTCling__GetInterpreter)()Definition rootcling_impl.h:26; ROOT::Internal::RootCling::DriverConfig::fBuildingROOTStage1bool fBuildingROOTStage1Definition rootcling_impl.h:19; ROOT::Internal::RootCling::DriverConfig::fCloseStreamerInfoROOTFilebool(* fCloseStreamerInfoROOTFile)(bool writeEmptyRootPCM)Definition rootcling_impl.h:31; ROOT::Internal::RootCling::DriverConfig::fAddEnumToROOTFilevoid(* fAddEnumToROOTFile)(const char *tdname)Definition rootcling_impl.h:30; ROOT::Internal::RootCling::DriverConfig::fInitializeStreamerInfoROOTFilevoid(* fInitializeStreamerInfoROOTFile)(const char *filename)Definition rootcling_impl.h:27; ROOT::Internal::RootCling::DriverConfig::fTROOT__GetIncludeDirconst ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:304815,config,config,304815,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['config'],['config']
Modifiability,"nerate(RooAbsPdf::GenSpec&) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:17100,extend,extended,17100,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"nerate(RooAbsPdf::GenSpec&) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:16834,extend,extended,16834,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"nerate(RooAbsPdf::GenSpec&) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooDataSet*generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsPdf.html:17100,extend,extended,17100,root/html530/RooAbsPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"nerated internally, randomly, and by accept/reject sampling; RooAbsPdf*_pdfCloneClone of input p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; TIterator*_uniIterIterator over uniform observables; RooArgSet_uniformVarsList of observables generated internally, randomly, and by accept/reject sampling; Int_t_updateFMaxPerEventIf true, maximum p.d.f value needs to be recalculated for each event; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGenContext(const RooAbsPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); Initialize a new context for generating events with the specified; variables, using the specified PDF model. A prototype dataset (if provided); is not cloned and still belongs to the caller. The contents and shape; of this dataset can be changed between calls to generate() as long as the; expected columns to be copied to the generated dataset are present.; Any argument supplied in the forceDirect RooArgSet are always offered; for internal generation to the p.d.f., even if this is deemed unsafe by; the logic of RooGenContext. ~RooGenContext(); Destructor. void attach(const RooArgSet& params); Attach the cloned model to the event buffer we will be filling. void initGenerator(const RooArgSet& theEvent); Perform one-time initialization of the generator context. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate one event. The 'remaining' integer is not used other than; for printing messages. void printMultiline(ostream& os,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGenContext.html:11165,variab,variables,11165,root/html602/RooGenContext.html,https://root.cern,https://root.cern/root/html602/RooGenContext.html,4,['variab'],['variables']
Modifiability,"neration ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bool fSetObjectIds {true};  ! set objects ids ;  ; bool fWithoutPrimitives {false};  true when primitives not send while there are no modifications ;  ;  Protected Attributes inherited from TWebSnapshot; Int_t fKind {0};  kind of snapshots ;  ; std::string fObjectID;  object identifier ;  ; std::string fOption;  object draw option ;  ; Bool_t fOwner {kFALSE};  ! if objected owned ;  ; TObject * fSnapshot {nullptr};  snapshot data ;  . Additional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebSnapshot.h>. Inheritance diagram for TCanvasWebSnap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvasWebSnapshot.html:12404,inherit,inherited,12404,doc/master/classTCanvasWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTCanvasWebSnapshot.html,1,['inherit'],['inherited']
Modifiability,"neration ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bool fSetObjectIds {true};  ! set objects ids ;  ; bool fWithoutPrimitives {false};  true when primitives not send while there are no modifications ;  ;  Protected Attributes inherited from TWebSnapshot; Int_t fKind {0};  kind of snapshots ;  ; std::string fObjectID;  object identifier ;  ; std::string fOption;  object draw option ;  ; Bool_t fOwner {kFALSE};  ! if objected owned ;  ; TObject * fSnapshot {nullptr};  snapshot data ;  . Additional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TWebSnapshot.h>. Inheritance diagram for TPadWebSnapsho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPadWebSnapshot.html:11381,inherit,inherited,11381,doc/master/classTPadWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html,1,['inherit'],['inherited']
Modifiability,"neration: method used for pruning - see DecisionTree ; TStringfPruneMethodSforest generation: prune method - see DecisionTree; Double_tfPruneStrengthforest generation: prune strength - see DecisionTree; Int_tfRFNendnodesmax number of rules (only Friedmans module); Int_tfRFNrulesmax number of rules (only Friedmans module); TStringfRFWorkDirworking directory from Friedmans module; TMVA::RuleFitfRuleFitRuleFit instance; TStringfRuleFitModuleSwhich rulefit module to use; Double_tfRuleMinDistrule min distance - see RuleEnsemble; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSforest generation: separation type - see DecisionTree; Double_tfSignalFractionscalefactor for bkg events to modify initial s/b fraction in training data; Double_tfTreeEveFracfraction of events used for traing each tree; Bool_tfUseBoostuse boosted events for forest generation; Bool_tfUseRuleFitJFif true interface with J.Friedmans RuleFit module. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodRuleFit(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodRuleFit(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodRuleFit( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t ); RuleFit can handle classification with 2 classes. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options. general. RuleFitModule <string>; available values are: RFTMVA - use TMVA implementation; RFFriedman - use Friedmans original implementation. Path search (fitting). GDTau <float> gradient-directed path: fit threshhold, default; GDTauPrec <float> gradient-directed path: precision of estimated tau; GDStep <float> gradient-directed path: step size; GD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodRuleFit.html:19703,Inherit,Inheritance,19703,root/html532/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodRuleFit.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"neratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; bool_useHorizMorph; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMomentMorph(); coverity[UNINIT_CTOR]. RooMomentMorph(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const RooArgList& pdfList, const TVectorD& mrefpoints, RooMomentMorph::Setting setting = NonLinearPosFractions); CTOR. RooMomentMorph(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const RooArgList& pdfList, const RooArgList& mrefList, RooMomentMorph::Setting setting = NonLinearPosFractions); CTOR. RooMomentMorph(const RooMomentMorph& other, const char* name = 0). ~RooMomentMorph(). void initialize(). Double_t getVal(const RooArgSet* set = 0) const; Special version of getVal() overrides RooAbsReal::getVal() to save value of current normalization set. RooAbsPdf* sumPdf(const RooArgSet* nset). Double_t evaluate() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new RooMomentMorph(*this,newname",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMomentMorph.html:43857,Inherit,Inheritance,43857,root/html534/RooMomentMorph.html,https://root.cern,https://root.cern/root/html534/RooMomentMorph.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"neric functions; Set the function f for evaluating the derivative.; The function type must implement the assigment operator,; <em> double operator() ( double x ) </em>. SetFunction(const ROOT::Math::Derivator::GSLFuncPointer& f, void* p = 0). double Eval(double x, double h = 1E-8) const. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Derivator.html:3857,adapt,adaptive,3857,root/html526/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Derivator.html,7,['adapt'],['adaptive']
Modifiability,"nericTable. This is the class to represent the array of C-struct; defined at run-time. Function Members (Methods); public:. ~iterator(); TGenericTable::iteratoriterator(const TTable& t); TGenericTable::iteratoriterator(const TGenericTable::iterator& iter); TGenericTable::iteratoriterator(UInt_t size, char& rowPtr); TGenericTable::iteratoriterator(const TTable& t, char& rowPtr); Bool_toperator!=(const TGenericTable::iterator& t) const; char*operator*(); TGenericTable::iterator&operator+(Int_t idx); TGenericTable::iterator&operator++(); voidoperator++(int); TGenericTable::iterator&operator-(Int_t idx); Int_toperator-(const TGenericTable::iterator& it) const; TGenericTable::iterator&operator--(); voidoperator--(int); TGenericTable::iterator&operator=(const TGenericTable::iterator& iter); Bool_toperator==(const TGenericTable::iterator& t) const. protected:. TGenericTable::iteratoriterator(). Data Members; protected:. char*fCurrentRow; UInt_tfRowSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; iterator(); {}. iterator(UInt_t size, char& rowPtr); {}. iterator(const TTable& t, char& rowPtr); {}. iterator(const TTable& t); {}. iterator(const TGenericTable::iterator& iter); {}. iterator & operator=(const TGenericTable::iterator& iter); { fRowSize = iter.fRowSize; fCurrentRow = iter.fCurrentRow; return *this;}. iterator & operator++(); { if (fCurrentRow) fCurrentRow+=fRowSize; return *this;}. void operator++(int ); { if (fCurrentRow) fCurrentRow+=fRowSize;}. iterator & operator--(); { if (fCurrentRow) fCurrentRow-=fRowSize; return *this;}. void operator--(int ); { if (fCurrentRow) fCurrentRow-=fRowSize;}. iterator & operator+(Int_t idx); { if (fCurrentRow) fCurrentRow+=idx*fRowSize; return *this;}. iterator & operator-(Int_t idx); { if (fCurrentRow) fCurrentRow-=idx*fRowSize; return *this;}. Int_t operator-(const TGenericTable::iterator& it) const; { return (fCurrentRow-it.fCurrentRow)/fRowSize; }. Bool_t operator==(const TGeneri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenericTable__iterator.html:1269,Inherit,Inheritance,1269,root/html532/TGenericTable__iterator.html,https://root.cern,https://root.cern/root/html532/TGenericTable__iterator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,nesArray object stored in a TTree ;  CTFormLeafInfoCollectionA small helper class to implement reading a data member on a generic collection object stored in a TTree ;  CTFormLeafInfoCollectionObjectA small helper class to implement reading a data member on a TClonesArray object stored in a TTree ;  CTFormLeafInfoCollectionSizeUsed to return the size of a collection ;  CTFormLeafInfoDirectA small helper class to implement reading a data member on an object stored in a TTree ;  CTFormLeafInfoMethodAsmall helper class to implement executing a method of an object stored in a TTree ;  CTFormLeafInfoMultiVarDimA helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoMultiVarDimClonesA small helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoMultiVarDimCollectionA small helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoMultiVarDimDirectA small helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoNumericalA small helper class to implement reading a numerical value inside a collection ;  CTFormLeafInfoPointerA small helper class to implement reading a data member by following a pointer inside a branch of TTree ;  CTFormLeafInfoReferenceA small helper class to implement the following of reference objects stored in a TTree ;  CTFormLeafInfoTTreeA small helper class to implement reading from the containing TTree object itself ;  CTFormulaThe F O R M U L A class ;  CTFormulaFunctionHelper class for TFormula ;  CTFormulaParamOrderFunctor defining the parameter order ;  CTFormulaVariableAnother helper class for TFormula ;  CTFPBlockThis class represents the encapsulation of a block request ;  CTFractionFitterFits MC fractions to data histogram ;  C,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:138196,variab,variable,138196,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,3,['variab'],['variable']
Modifiability,nesArray object stored in a TTree ;  CTFormLeafInfoCollectionA small helper class to implement reading a data member on a generic collection object stored in a TTree ;  CTFormLeafInfoCollectionObjectA small helper class to implement reading a data member on a TClonesArray object stored in a TTree ;  CTFormLeafInfoCollectionSizeUsed to return the size of a collection ;  CTFormLeafInfoDirectA small helper class to implement reading a data member on an object stored in a TTree ;  CTFormLeafInfoMethodAsmall helper class to implement executing a method of an object stored in a TTree ;  CTFormLeafInfoMultiVarDimA helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoMultiVarDimClonesA small helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoMultiVarDimCollectionA small helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoMultiVarDimDirectA small helper class to implement reading a data member on a variable size array inside a TClonesArray object stored in a TTree ;  CTFormLeafInfoNumericalA small helper class to implement reading a numerical value inside a collection ;  CTFormLeafInfoPointerA small helper class to implement reading a data member by following a pointer inside a branch of TTree ;  CTFormLeafInfoReferenceA small helper class to implement the following of reference objects stored in a TTree ;  CTFormLeafInfoTTreeA small helper class to implement reading from the containing TTree object itself ;  CTFormulaThe Formula class ;  CTFormulaFunctionHelper class for TFormula ;  CTFormulaParamOrderFunctor defining the parameter order ;  CTFormulaVariableAnother helper class for TFormula ;  CTFPBlockThis class represents the encapsulation of a block request ;  CTFractionFitterFits MC fractions to data histogram ;  CTFrame,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:146669,variab,variable,146669,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,4,['variab'],['variable']
Modifiability,"ness(double kappa, double beta2); virtual doubleROOT::Math::Vavilov::Variance() const; static doubleROOT::Math::Vavilov::Variance(double kappa, double beta2); ROOT::Math::VavilovAccurateVavilovAccurate(const ROOT::Math::VavilovAccurate&); ROOT::Math::VavilovAccurateVavilovAccurate(double kappa = 1, double beta2 = 1, double epsilonPM = 5E-4, double epsilon = 1E-5). private:. static doubleE1plLog(double x); doubleG116f1(double x) const; doubleG116f2(double x) const; voidInitQuantile() const; intRzero(double a, double b, double& x0, double eps, int mxf, void f) const. Data Members; public:. enum { MAXTERMS; kNquantMax; };. private:. doublefA_cdf[501]; doublefA_pdf[501]; doublefB_cdf[501]; doublefB_pdf[501]; doublefBeta2; doublefEpsilon; doublefEpsilonPM; doublefH[8]; doublefKappa; doublefLambda[32]; intfNQuant; doublefOmega; doublefQuant[32]; boolfQuantileInit; doublefT; doublefT0; doublefT1; doublefX0; static ROOT::Math::VavilovAccurate*fgInstance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VavilovAccurate(double kappa = 1, double beta2 = 1, double epsilonPM = 5E-4, double epsilon = 1E-5). Initialize an object to calculate the Vavilov distribution. @param kappa The parameter \f$\kappa\f$, which must be in the range \f$\kappa \ge 0.001 \f$; @param beta2 The parameter \f$\beta^2\f$, which must be in the range \f$0 \le \beta^2 \le 1 \f$; @param epsilonPM: \f$\epsilon^+ = \epsilon^-\f$ in Eqs. (2.1) and (2.2) of Schorr's paper; gives an estimate on the integral of the cummulative distribution function; outside the range \f$\lambda_{min} \le \lambda \le \lambda_{max}\f$; where the approximation is valid.; @param epsilon: \f$\epsilon\f$ in Eq. (4.10) of Schorr's paper; determines the accuracy of the series expansion. virtual ~VavilovAccurate(). Destructor. double Pdf(double x) const. Evaluate the Vavilov probability density function. @param x The Landau parameter \f$x = \lambda_L\f$. double Pdf(double x, double kappa, double be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__VavilovAccurate.html:6918,Inherit,Inheritance,6918,root/html532/ROOT__Math__VavilovAccurate.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__VavilovAccurate.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nestatic . ReturnsName of the file containing the class declaration ; Definition at line 58 of file TMLPAnalyzer.h. ◆ DrawDInput(). void TMLPAnalyzer::DrawDInput ; (; Int_t ; i). Draws the distribution (on the test sample) of the impact on the network output of a small variation of the ith input. ; Definition at line 284 of file TMLPAnalyzer.cxx. ◆ DrawDInputs(). void TMLPAnalyzer::DrawDInputs ; (; ). Draws the distribution (on the test sample) of the impact on the network output of a small variation of each input. ; DrawDInputs() draws something that approximates the distribution of the derivative of the NN w.r.t. each input. That quantity is recognized as one of the measures to determine key quantities in the network.; What is done is to vary one input around its nominal value and to see how the NN changes. This is done for each entry in the sample and produces a distribution.; What you can learn from that is:; is variable a really useful, or is my network insensitive to it ?; is there any risk of big systematic ? Is the network extremely sensitive to small variations of any of my inputs ?. As you might understand, this is to be considered with care and can serve as input for an ""educated guess"" when optimizing the network. ; Definition at line 311 of file TMLPAnalyzer.cxx. ◆ DrawNetwork(). void TMLPAnalyzer::DrawNetwork ; (; Int_t ; neuron, . const char * ; signal, . const char * ; bg . ). Draws the distribution of the neural network (using ith neuron). ; Two distributions are drawn, for events passing respectively the ""signal"" and ""background"" cuts. Only the test sample is used. ; Definition at line 337 of file TMLPAnalyzer.cxx. ◆ DrawTruthDeviation(). TProfile * TMLPAnalyzer::DrawTruthDeviation ; (; Int_t ; outnode = 0, . Option_t * ; option = """" . ). Create a profile of the difference of the MLP output minus the true value for a given output node outnode, vs the true value for outnode, for all test data events. ; This method is mainly useful when doing regress",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMLPAnalyzer.html:14481,variab,variable,14481,doc/master/classTMLPAnalyzer.html,https://root.cern,https://root.cern/doc/master/classTMLPAnalyzer.html,1,['variab'],['variable']
Modifiability,"neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are two cuts (see TTreeFormula) defining events to be used during the neural net training and testing.; Example: ""Entry$%2"", ""(Entry$+1)%2"".; Both the TTree and the cut can be defined in the constructor, or later with the suited setter method. ; Definition at line 446 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [3/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . const char * ; weight, . TTree * ; data = nullptr, . const char * ; training = ""Entry$%2==0"", . const char * ; test = """", . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ; Hidden layers are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are two cuts (see TTreeFormula) defining events to be used during the neural net training and testing.; Example: ""Entry$%2"", ""(Entry$+1)%2"".; Both the TTree and the cut can be defined in the constructor, or later with the suited setter method. ; Definition at line 524 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [4/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . TTree * ; data, . TEventList * ; training, . TEventList * ; test, . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:30669,layers,layers,30669,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['layers'],['layers']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBRIK; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTRA.html:15644,inherit,inherited,15644,doc/master/classTGTRA.html,https://root.cern,https://root.cern/doc/master/classTGTRA.html,5,['inherit'],['inherited']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoOverlap.html:14219,inherit,inherited,14219,doc/master/classTGeoOverlap.html,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html,2,['inherit'],['inherited']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNode; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNodeDiv.html:14745,inherit,inherited,14745,doc/master/classTNodeDiv.html,https://root.cern,https://root.cern/doc/master/classTNodeDiv.html,1,['inherit'],['inherited']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPCON; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPGON.html:14521,inherit,inherited,14521,doc/master/classTPGON.html,https://root.cern,https://root.cern/doc/master/classTPGON.html,1,['inherit'],['inherited']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXTRU.html:16293,inherit,inherited,16293,doc/master/classTXTRU.html,https://root.cern,https://root.cern/doc/master/classTXTRU.html,5,['inherit'],['inherited']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TTUBE; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONE.html:14419,inherit,inherited,14419,doc/master/classTCONE.html,https://root.cern,https://root.cern/doc/master/classTCONE.html,4,['inherit'],['inherited']
Modifiability,"new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TTUBS; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TTUBE; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TShape; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONS.html:15305,inherit,inherited,15305,doc/master/classTCONS.html,https://root.cern,https://root.cern/doc/master/classTCONS.html,2,['inherit'],['inherited']
Modifiability,"new data are given. ;  ; TF1 * fPDF;  ; Double_t fRho;  Adjustment factor for sigma. ;  ; std::vector< Bool_t > fSettedOptions;  User input options flag. ;  ; Double_t fSigma;  Data std deviation. ;  ; Double_t fSigmaRob;  Data std deviation (robust estimation) ;  ; Double_t fSumOfCounts;  Data sum of weights. ;  ; TF1 * fUpperPDF;  Output Kernel Density Estimation PDF function. ;  ; Bool_t fUseBins;  ; UInt_t fUseBinsNEvents;  If the algorithm is allowed to use automatic (relaxed) binning this is the minimum number of events to do so. ;  ; Bool_t fUseMinMaxFromData;  Flag top control if min and max must be used from data. ;  ; Bool_t fUseMirroring;  ; Double_t fWeightSize;  Caches the weight size. ;  ; Double_t fXMax;  Data maximum value. ;  ; Double_t fXMin;  Data minimum value. ;  . Friends; struct KernelIntegrand;  ; class TKernel;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TKDE.h>. Inheritance diagram for TKDE:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ KernelFunction_Ptr. typedef ROOT::Math::IBaseFunctionOneDim* TKDE::KernelFunction_Ptr. private . Definition at line 184 of file TKDE.h. Member Enumeration Documentation. ◆ EBinning. enum TKDE::EBinning. Data binning option. ; They can be set using SetBinning() . EnumeratorkUnbinned ; kRelaxedBinning The algorithm is allowed to use binning if the data is large enough. . kForcedBinning . Definition at line 73 of file TKDE.h. ◆ EIteration. enum TKDE::EIteration. Iteration types. They can be set using SetIteration() . EnumeratorkAdaptive ; kFixed . Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKDE.html:20675,inherit,inherited,20675,doc/master/classTKDE.html,https://root.cern,https://root.cern/doc/master/classTKDE.html,2,['inherit'],['inherited']
Modifiability,"new status; 480 of the histogram will be automatically shown in the pad next time; 481 the pad is updated. One does not need to redraw the histogram.; 482 To draw the current version of a histogram in a pad, one can use; 483~~~ {.cpp}; 484 h->DrawCopy();; 485~~~; 486 This makes a clone (see Clone below) of the histogram. Once the clone; 487 is drawn, the original histogram may be modified or deleted without; 488 affecting the aspect of the clone.; 489 ; 490 One can use TH1::SetMaximum() and TH1::SetMinimum() to force a particular; 491 value for the maximum or the minimum scale on the plot. (For 1-D; 492 histograms this means the y-axis, while for 2-D histograms these; 493 functions affect the z-axis).; 494 ; 495 TH1::UseCurrentStyle() can be used to change all histogram graphics; 496 attributes to correspond to the current selected style.; 497 This function must be called for each histogram.; 498 In case one reads and draws many histograms from a file, one can force; 499 the histograms to inherit automatically the current graphics style; 500 by calling before gROOT->ForceStyle().; 501 ; 502\anchor cont-level; 503### Setting Drawing histogram contour levels (2-D hists only); 504 ; 505 By default contours are automatically generated at equidistant; 506 intervals. A default value of 20 levels is used. This can be modified; 507 via TH1::SetContour() or TH1::SetContourLevel().; 508 the contours level info is used by the drawing options ""cont"", ""surf"",; 509 and ""lego"".; 510 ; 511\anchor graph-att; 512### Setting histogram graphics attributes; 513 ; 514 The histogram classes inherit from the attribute classes:; 515 TAttLine, TAttFill, and TAttMarker.; 516 See the member functions of these classes for the list of options.; 517 ; 518\anchor axis-drawing; 519### Customizing how axes are drawn; 520 ; 521 Use the functions of TAxis, such as; 522~~~ {.cpp}; 523 histogram.GetXaxis()->SetTicks(""+"");; 524 histogram.GetYaxis()->SetRangeUser(1., 5.);; 525~~~; 526 ; 527\anchor fitting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:21810,inherit,inherit,21810,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['inherit'],['inherit']
Modifiability,"new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); TMVA::PDFPDF(const TString& name, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TString& options, const TString& suffix = """", TMVA::PDF* defaultPDF = 0, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::PDF::EInterpolateMethod method = kSpline2, Int_t minnsmooth = 0, Int_t maxnsmooth = 0, Bool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetReadingVersion(UInt_t rv); virtual voidTObject::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDF.html:5055,Config,Configurable,5055,root/html532/TMVA__PDF.html,https://root.cern,https://root.cern/root/html532/TMVA__PDF.html,2,['Config'],['Configurable']
Modifiability,"new_top in the kVertical or kHorizontal direction. ;  ; void ScrollDown (Int_t pixels);  ; void ScrollLeft (Int_t pixels);  ; void ScrollRight (Int_t pixels);  ; virtual void ScrollToPosition (TGLongPosition newPos);  Scroll the canvas to pos. ;  ; void ScrollUp (Int_t pixels);  ; void SetBackgroundColor (Pixel_t) override;  Set background color of the canvas frame. ;  ; void SetBackgroundPixmap (Pixmap_t p) override;  Set backgound pixmap. ;  ; void SetLayoutManager (TGLayoutManager *) override;  Set the layout manager for the composite frame. ;  ; virtual void SetVisibleStart (Int_t newTop, Int_t direction);  Scroll view in specified direction to make newTop the visible location. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TGLongPosition ToPhysical (TGLongPosition coord) const;  ; TGLongPosition ToVirtual (TGLongPosition coord) const;  ; virtual void UpdateBackgroundStart ();  set some gc values ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:7995,inherit,inherited,7995,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,3,['inherit'],['inherited']
Modifiability,"newlinern. File names have to be valid, url-encoded URI’s as shown below:; file://localhost/usr/bin/opera or file://localhost/c:/programs/myfile.txt; file://server/data/software.xml or http://root.cern.ch/root/images/ftpstats.gif; The atoms and the drag and drop manager (TGDNDManager), are created at the main application creation time (class TGMainFrame).; Setting a Drag Source - first, create and fill data:; TH1F *h = new TH1F(""h"",""h"",1000,-3,3);; h->FillRandom(""gaus"",50000);; TDNDdata data;; TBufferFile *buf = new TBufferFile(TBuffer::kWrite);; buf->WriteObject(h);; data.fData = buf->Buffer();; data.fDataLength = buf->Length();; data.fDataType = gVirtualX->InternAtom(""application/root"");; Then, set a GUI widget as DND Source, and associate the data. Source widget can be any class inheriting from TGFrame.; SourceWidget=new TGIcon(this,gClient->GetPicture(""f1_s.xpm""),32,32);; SourceWidget->SetDNDSource(kTRUE);; SourceWidget->SetDNDdata(&data);; Setting A Drop Target - set the widget as DND Target, and set the DND types it must be aware of: as SourceWidget, TargetWidget can be any class inheriting from TGFrame.; TargetWidget = new TRootEmbeddedCanvas(""Target"", this, 700, 400);; TargetWidget->SetDNDTarget(kTRUE);; gVirtualX->SetDNDAware(TargetWidget->GetId(),; gDNDManager->GetTypeList());; gDNDManager->GetTypeList() returns the list of types recognized by ROOT.; Note that the Widget may receive drag and drop messages with drop-data it does not understand, and thus it should only accept drops of the proper type.; 25.10.2 Handling Drag and Drop Events; Once a widget has been set as DND Target, it has to handle Drag and Drop events.; Atom_t HandleDNDenter(Atom_t *typelist) - this method is used to handle a drag operation entering the widget. The typelist parameter is the list of types the data contains. If the list contains one type the widget understands, it should return this type to notify the manager that the drop would be accepted, i.e. :; for (int i = 0; typelist[i]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1229343,inherit,inheriting,1229343,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheriting']
Modifiability,"nfig*)loopconfig)->fIncrement;; 1741 iter = (char*)iter + config->fOffset;; 1742 end = (char*)end + config->fOffset;; 1743 for(; iter != end; iter = (char*)iter + incr ) {; 1744 buf >> temp;; 1745 *(To*)( ((char*)iter) ) = (To)temp;; 1746 }; 1747 return 0;; 1748 }; 1749 };; 1750 ; 1751 template <typename To>; 1752 struct ConvertBasicType<BitsMarker,To> {; 1753 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config); 1754 {; 1755 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1756 UInt_t temp;; 1757 const Int_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1758 iter = (char*)iter + config->fOffset;; 1759 end = (char*)end + config->fOffset;; 1760 for(; iter != end; iter = (char*)iter + incr ) {; 1761 buf >> temp;; 1762 ; 1763 if ((temp & kIsReferenced) != 0) {; 1764 HandleReferencedTObject(buf, (char*)iter - config->fOffset, config);; 1765 }; 1766 ; 1767 *(To*)( ((char*)iter) ) = (To)temp;; 1768 }; 1769 return 0;; 1770 }; 1771 };; 1772 ; 1773 template <typename From, typename To>; 1774 struct ConvertBasicType<WithFactorMarker<From>,To> {; 1775 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config); 1776 {; 1777 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1778 TConfWithFactor *conf = (TConfWithFactor *)config;; 1779 From temp;; 1780 const Int_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1781 iter = (char*)iter + config->fOffset;; 1782 end = (char*)end + config->fOffset;; 1783 for(; iter != end; iter = (char*)iter + incr ) {; 1784 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 1785 *(To*)( ((char*)iter) ) = (To)temp;; 1786 }; 1787 return 0;; 1788 }; 1789 };; 1790 ; 1791 template <typename From, typename To>; 1792 struct ConvertBasicType<NoFactorMarker<From>,To> {; 1793 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:73295,config,config,73295,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,5,['config'],['config']
Modifiability,"nfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:02:56",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3PdfBinding_double_double_int_int_.html:43480,Inherit,Inheritance,43480,root/html534/RooCFunction3PdfBinding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3PdfBinding_double_double_int_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nfig->fTypeName);; 1955 return 0;; 1956 }; 1957 ; 1958 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 1959 {; 1960 // Collection of numbers. Memberwise or not, it is all the same.; 1961 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vector<double> *const vec = (std::vector<double>*)(((char*)addr)+config->fOffset);; 1967 Int_t nvalues;; 1968 buf.ReadInt(nvalues);; 1969 vec->resize(nvalues);; 1970 ; 1971#ifdef R__VISUAL_CPLUSPLUS; 1972 if (nvalues <= 0) {; 1973 buf.CheckByteCount(start,count,config->fTypeName);; 1974 return 0;; 1975 }; 1976#endif; 1977 double *begin = &(*vec->begin());; 1978 buf.ReadFastArrayDouble32(begin, nvalues);; 1979 ; 1980 buf.CheckByteCount(start,count,config->fTypeName);; 1981 return 0;; 1982 }; 1983 ; 1984 template <typename From, typename To>; 1985 struct ConvertCollectionBasicType {; 1986 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 1987 {; 1988 // Collection of numbers. Memberwise or not, it is all the same.; 1989 ; 1990 TConfigSTL *config = (TConfigSTL*)conf;; 1991 UInt_t start, count;; 1992 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1993 ; 1994 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 1995 Int_t nvalues;; 1996 buf.ReadInt(nvalues);; 1997 vec->resize(nvalues);; 1998 ; 1999 From *temp = new From[nvalues];; 2000 buf.ReadFastArray(temp, nvalues);; 2001 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2002 (*vec)[ind] = (To)temp[ind];; 2003 }; 2004 delete [] temp;; 2005 ; 2006 buf.CheckByteCount(start,count,config->fTypeName);; 2007 return 0;; 2008 }; 2009 };; 2010 ; 2011 template <typename From, typename To>; 2012 struct ConvertCollectionBasicType<NoFactorMarker<From>,To> {; 2013 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:82206,config,config,82206,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"nfig; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/input_histos_rf_lagrangianmorph.root""; par = ""cHq3""; samplelist = [; ""SM_NPsq0"",; ""cHq3_NPsq1"",; ""cHq3_NPsq2"",; ""cHl3_NPsq1"",; ""cHl3_NPsq2"",; ""cHDD_NPsq1"",; ""cHDD_NPsq2"",; ""cHl3_cHDD_NPsq2"",; ""cHq3_cHDD_NPsq2"",; ""cHl3_cHq3_NPsq2"",; ]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = observablename; config.folderNames = samplelist; config.couplings.add(cHq3); config.couplings.add(cHDD); config.couplings.add(cHl3); config.couplings.add(kSM); ; ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of pTV"", config); ; # Create pseudo data histogram to fit at cHq3 = 0.01, cHl3 = 1.0, cHDD = 0.2; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; morphfunc.setParameter(""cHq3"", 0.01); morphfunc.setParameter(""cHl3"", 1.0); morphfunc.setParameter(""cHDD"", 0.2); ; pseudo_hist = morphfunc.createTH1(""pseudo_hist""); pseudo_dh = ROOT.RooDataHist(""pseudo_dh"", ""pseudo_dh"", [obsvar], pseudo_hist); ; # reset parameters to zeros before fit; morphfunc.setParameter(""cHq3"", 0.0); morphfunc.setParameter(""cHl3"", 0.0); morphfunc.setParameter(""cHDD"", 0.0); ; # set error to set initial step size in fit; cHq3.setError(0.1); cHl3.setError(0.1); cHDD.setError(0.1); ; # Wrap pdf on morphfunc and fit to data histogram; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; # wrapper pdf to normalise morphing function to a morphing pdf; model = ROOT.RooWrapperPdf(""wrap_pdf"", ""wrap_pdf"", morphfunc); fitres = model.fitTo(pseudo_dh, SumW2Error=True, Optimize=Fals",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html:2047,config,config,2047,doc/master/rf712__lagrangianmorphfit_8py.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html,1,['config'],['config']
Modifiability,"nfig; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and macros as on the master.; It is a subbstitute for StartSlaves(...); The code is mostly the master part of StartSlaves,; with the parallel startup removed. Int_t RemoveWorkers(TList* wrks); Used for shuting down the workres after a query is fin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProof.html:33620,Sandbox,Sandbox,33620,root/html532/TProof.html,https://root.cern,https://root.cern/root/html532/TProof.html,1,['Sandbox'],['Sandbox']
Modifiability,"nfig; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind.; Several options can be given separated by a ','. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and macros as on the master.; It is a subbstitute for StartSlaves(...); The code is mostly the master part of StartSlaves,; with the parallel startup removed. Int_t RemoveWorkers(TList* wrks); Used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProof.html:39258,Sandbox,Sandbox,39258,root/html602/TProof.html,https://root.cern,https://root.cern/root/html602/TProof.html,1,['Sandbox'],['Sandbox']
Modifiability,"nfig; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind.; Several options can be given separated by a ','. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and macros as on the master.; It is a subbstitute for StartSlaves(...); The code is mostly the master part of StartSlaves,; with the parallel startup removed. void SetupWorkersEnv(TList* wrks, Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:36759,Sandbox,Sandbox,36759,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,2,['Sandbox'],['Sandbox']
Modifiability,"nfigParameters Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::OptimizeConfigParameters Class ReferenceTMVA. . Definition at line 49 of file OptimizeConfigParameters.h. Public Member Functions;  OptimizeConfigParameters (MethodBase *const method, std::map< TString, TMVA::Interval * > tuneParameters, TString fomType=""Separation"", TString optimizationType=""GA"");  Constructor which sets either ""Classification or Regression"". ;  ; virtual ~OptimizeConfigParameters ();  the destructor (delete the OptimizeConfigParameters, store the graph and .. delete it) ;  ; virtual TClass * IsA () const;  ; std::map< TString, Double_t > optimize ();  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual void ProgressNotifier (TString, TString);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IFitterTarget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Public Attributes; friend TestOptimizeConfigParameters;  . Private Member Functions; Double_t EstimatorFunction (std::vector< Double_t > &);  return the estimator (from current FOM) for the fitting interface ;  ; Double_t GetBkgEffAtSigEff (Double_t sigEff=0.5);  calculate the background efficiency for a given signal efficiency ;  ; Double_t GetBkgRejAtSigEff (Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1OptimizeConfigParameters.html:1027,inherit,inherited,1027,doc/master/classTMVA_1_1OptimizeConfigParameters.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1OptimizeConfigParameters.html,1,['inherit'],['inherited']
Modifiability,"nfig[SSL_CACHE_TIMEOUT]); 16672 : 0);; 16673 if (ssl_cache_timeout > 0) {; 16674 SSL_CTX_set_session_cache_mode(dom_ctx->ssl_ctx, SSL_SESS_CACHE_BOTH);; 16675 /* SSL_CTX_sess_set_cache_size(dom_ctx->ssl_ctx, 10000); ... use; 16676 * default */; 16677 SSL_CTX_set_timeout(dom_ctx->ssl_ctx, (long)ssl_cache_timeout);; 16678 }; 16679 ; 16680#if defined(USE_ALPN); 16681 /* Initialize ALPN only of TLS library (OpenSSL version) supports ALPN */; 16682#if !defined(NO_SSL_DL); 16683 if (!tls_feature_missing[TLS_ALPN]); 16684#endif; 16685 {; 16686 init_alpn(phys_ctx, dom_ctx);; 16687 }; 16688#endif; 16689 ; 16690 return 1;; 16691}; 16692 ; 16693 ; 16694/* Check if SSL is required.; 16695 * If so, dynamically load SSL library; 16696 * and set up ctx->ssl_ctx pointer. */; 16697static int; 16698init_ssl_ctx(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 16699{; 16700 void *ssl_ctx = 0;; 16701 int callback_ret;; 16702 const char *pem;; 16703 const char *chain;; 16704 char ebuf[128];; 16705 ; 16706 if (!phys_ctx) {; 16707 return 0;; 16708 }; 16709 ; 16710 if (!dom_ctx) {; 16711 dom_ctx = &(phys_ctx->dd);; 16712 }; 16713 ; 16714 if (!is_ssl_port_used(dom_ctx->config[LISTENING_PORTS])) {; 16715 /* No SSL port is set. No need to setup SSL. */; 16716 return 1;; 16717 }; 16718 ; 16719 /* Check for external SSL_CTX */; 16720 callback_ret =; 16721 (phys_ctx->callbacks.external_ssl_ctx == NULL); 16722 ? 0; 16723 : (phys_ctx->callbacks.external_ssl_ctx(&ssl_ctx,; 16724 phys_ctx->user_data));; 16725 ; 16726 if (callback_ret < 0) {; 16727 /* Callback exists and returns <0: Initializing failed. */; 16728 mg_cry_ctx_internal(phys_ctx,; 16729 ""external_ssl_ctx callback returned error: %i"",; 16730 callback_ret);; 16731 return 0;; 16732 } else if (callback_ret > 0) {; 16733 /* Callback exists and returns >0: Initializing complete,; 16734 * civetweb should not modify the SSL context. */; 16735 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16736 if (!initialize_openssl(ebuf, sizeof(ebuf))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:495763,config,config,495763,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"nfig[SSL_CACHE_TIMEOUT]); 16673 : 0);; 16674 if (ssl_cache_timeout > 0) {; 16675 SSL_CTX_set_session_cache_mode(dom_ctx->ssl_ctx, SSL_SESS_CACHE_BOTH);; 16676 /* SSL_CTX_sess_set_cache_size(dom_ctx->ssl_ctx, 10000); ... use; 16677 * default */; 16678 SSL_CTX_set_timeout(dom_ctx->ssl_ctx, (long)ssl_cache_timeout);; 16679 }; 16680 ; 16681#if defined(USE_ALPN); 16682 /* Initialize ALPN only of TLS library (OpenSSL version) supports ALPN */; 16683#if !defined(NO_SSL_DL); 16684 if (!tls_feature_missing[TLS_ALPN]); 16685#endif; 16686 {; 16687 init_alpn(phys_ctx, dom_ctx);; 16688 }; 16689#endif; 16690 ; 16691 return 1;; 16692}; 16693 ; 16694 ; 16695/* Check if SSL is required.; 16696 * If so, dynamically load SSL library; 16697 * and set up ctx->ssl_ctx pointer. */; 16698static int; 16699init_ssl_ctx(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 16700{; 16701 void *ssl_ctx = 0;; 16702 int callback_ret;; 16703 const char *pem;; 16704 const char *chain;; 16705 char ebuf[128];; 16706 ; 16707 if (!phys_ctx) {; 16708 return 0;; 16709 }; 16710 ; 16711 if (!dom_ctx) {; 16712 dom_ctx = &(phys_ctx->dd);; 16713 }; 16714 ; 16715 if (!is_ssl_port_used(dom_ctx->config[LISTENING_PORTS])) {; 16716 /* No SSL port is set. No need to setup SSL. */; 16717 return 1;; 16718 }; 16719 ; 16720 /* Check for external SSL_CTX */; 16721 callback_ret =; 16722 (phys_ctx->callbacks.external_ssl_ctx == NULL); 16723 ? 0; 16724 : (phys_ctx->callbacks.external_ssl_ctx(&ssl_ctx,; 16725 phys_ctx->user_data));; 16726 ; 16727 if (callback_ret < 0) {; 16728 /* Callback exists and returns <0: Initializing failed. */; 16729 mg_cry_ctx_internal(phys_ctx,; 16730 ""external_ssl_ctx callback returned error: %i"",; 16731 callback_ret);; 16732 return 0;; 16733 } else if (callback_ret > 0) {; 16734 /* Callback exists and returns >0: Initializing complete,; 16735 * civetweb should not modify the SSL context. */; 16736 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16737 if (!initialize_openssl(ebuf, sizeof(ebuf))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:495796,config,config,495796,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"nfigurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__SimulatedAnnealingFitter.html:6214,Config,Configurable,6214,root/html534/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html534/TMVA__SimulatedAnnealingFitter.html,1,['Config'],['Configurable']
Modifiability,"nfiguration *conf); 1631 {; 1632 TConfigurationUseCache *config = (TConfigurationUseCache*)conf;; 1633 ; 1634 Int_t bufpos = b.Length();; 1635 TVirtualArray *cached = b.PeekDataCache();; 1636 if (cached==0) {; 1637 TStreamerElement *aElement = config->fCompInfo->fElem;; 1638 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1639 Warning(""ReadBuffer"",""Skipping %s::%s because the cache is missing."",info->GetName(),aElement->GetName());; 1640 char *ptr = (char*)start;; 1641 UInt_t n = (((char*)end)-((char*)start))/((TVectorLoopConfig*)loopconf)->fIncrement;; 1642 info->ReadBufferSkip(b,&ptr,config->fCompInfo,config->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1643 } else {; 1644 TVectorLoopConfig cached_config( nullptr, cached->fClass->Size(), /* read */ kTRUE );; 1645 void *cached_start = (*cached)[0];; 1646 void *cached_end = ((char*)cached_start) + cached->fSize * cached_config.fIncrement;; 1647 config->fAction(b,cached_start,cached_end,&cached_config);; 1648 }; 1649 // Idea: Factor out this 'if' to a UseCacheRepeat function; 1650 if (config->fNeedRepeat) {; 1651 b.SetBufferOffset(bufpos);; 1652 }; 1653 return 0;; 1654 }; 1655 ; 1656 INLINE_TEMPLATE_ARGS Int_t UseCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf); 1657 {; 1658 TConfigurationUseCache *config = (TConfigurationUseCache*)conf;; 1659 ; 1660 Int_t bufpos = b.Length();; 1661 TVirtualArray *cached = b.PeekDataCache();; 1662 if (cached==0) {; 1663 TStreamerElement *aElement = config->fCompInfo->fElem;; 1664 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1665 ; 1666 TVirtualCollectionProxy *proxy = ((TGenericLoopConfig*)loopconfig)->fProxy;; 1667 Warning(""ReadBuffer"",""Skipping %s::%s because the cache is missing."",info->GetName(),aElement->GetName());; 1668 UInt_t n = proxy->Size();; 1669 info->ReadBufferSkip(b, *proxy,config->fCompInfo,config->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1670 } else {; 1671 T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:68407,config,config,68407,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,nfiguration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test error found - save the configuration ; : 133 | 10303 9307.9 0.0200258 0.00180758 43912.1 0; : 134 Minimum Test error found - save the configuration ; : 134 | 10217.2 9225.8 0.0200352 0.00180785 43890.1 0; : 135 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:25180,config,configuration,25180,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test error found - save the configuration ; : 133 | 10303 9307.9 0.0200258 0.00180758 43912.1 0; : 134 Minimum Test error found - save the configuration ; : 134 | 10217.2 9225.8 0.0200352 0.00180785 43890.1 0; : 135 Minimum Test error found - save the configuration ; : 135 | 10133.2 9143.83 0.0200313 0.00180712 43897.8 0; : 136 Minimum Test error found - save the configuration ; : 136 | 10051.9 9059.29 0.0200892 0.0018637 43894.4 0; : 137 Minimum Test error found - save the configuration ; : 137 | 9966.99 8978.86 0.0201265 0.00183533 43737 0; : 138 Minimum Test error found - save the configuration ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:25969,config,configuration,25969,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test error found - save the configuration ; : 133 | 10303 9307.9 0.0200258 0.00180758 43912.1 0; : 134 Minimum Test error found - save the configuration ; : 134 | 10217.2 9225.8 0.0200352 0.00180785 43890.1 0; : 135 Minimum Test error found - save the configuration ; : 135 | 10133.2 9143.83 0.0200313 0.00180712 43897.8 0; : 136 Minimum Test error found - save the configuration ; : 136 | 10051.9 9059.29 0.0200892 0.0018637 43894.4 0; : 137 Minimum Test error found - save the configuration ; : 137 | 9966.99 8978.86 0.0201265 0.00183533 43737 0; : 138 Minimum Test error found - save the configuration ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:26080,config,configuration,26080,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28570,config,configuration,28570,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28681,config,configuration,28681,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29812,config,configuration,29812,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 21,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33772,config,configuration,33772,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:40456,config,configuration,40456,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50439,config,configuration,50439,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52478,config,configuration,52478,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 3,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52929,config,configuration,52929,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73219,config,configuration,73219,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:74011,config,configuration,74011,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97189,config,configuration,97189,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:99325,config,configuration,99325,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103424,config,configuration,103424,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:109989,config,configuration,109989,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nfiguration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:22802,config,configuration,22802,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"nfigured; 14157 * to handle it automatically. */; 14158 const char *cors_acrh =; 14159 get_header(ri->http_headers,; 14160 ri->num_headers,; 14161 ""Access-Control-Request-Headers"");; 14162 ; 14163 gmt_time_string(date, sizeof(date), &curtime);; 14164 mg_printf(conn,; 14165 ""HTTP/1.1 200 OK\r\n""; 14166 ""Date: %s\r\n""; 14167 ""Access-Control-Allow-Origin: %s\r\n""; 14168 ""Access-Control-Allow-Methods: %s\r\n""; 14169 ""Content-Length: 0\r\n""; 14170 ""Connection: %s\r\n"",; 14171 date,; 14172 cors_orig_cfg,; 14173 ((cors_meth_cfg[0] == '*') ? cors_acrm : cors_meth_cfg),; 14174 suggest_connection_header(conn));; 14175 ; 14176 if (cors_acrh != NULL) {; 14177 /* CORS request is asking for additional headers */; 14178 const char *cors_hdr_cfg =; 14179 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14180 ; 14181 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14182 /* Allow only if access_control_allow_headers is; 14183 * not NULL and not an empty string. If this; 14184 * configuration is set to *, allow everything.; 14185 * Otherwise this configuration must be a list; 14186 * of allowed HTTP header names. */; 14187 mg_printf(conn,; 14188 ""Access-Control-Allow-Headers: %s\r\n"",; 14189 ((cors_hdr_cfg[0] == '*') ? cors_acrh; 14190 : cors_hdr_cfg));; 14191 }; 14192 }; 14193 if (cors_cred_cfg && *cors_cred_cfg) {; 14194 mg_printf(conn,; 14195 ""Access-Control-Allow-Credentials: %s\r\n"",; 14196 cors_cred_cfg);; 14197 }; 14198 ; 14199 mg_printf(conn, ""Access-Control-Max-Age: 60\r\n"");; 14200 ; 14201 mg_printf(conn, ""\r\n"");; 14202 return;; 14203 }; 14204 }; 14205 ; 14206 /* 5. interpret the url to find out how the request must be handled; 14207 */; 14208 /* 5.1. first test, if the request targets the regular http(s)://; 14209 * protocol namespace or the websocket ws(s):// protocol namespace.; 14210 */; 14211 is_websocket_request = (conn->protocol_type == PROTOCOL_TYPE_WEBSOCKET);; 14212#if defined(USE_WEBSOCKET); 14213 handler_type = is_websocket_request ? WEBSOCKET_HANDLE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:416957,config,configuration,416957,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"nfigured; 14158 * to handle it automatically. */; 14159 const char *cors_acrh =; 14160 get_header(ri->http_headers,; 14161 ri->num_headers,; 14162 ""Access-Control-Request-Headers"");; 14163 ; 14164 gmt_time_string(date, sizeof(date), &curtime);; 14165 mg_printf(conn,; 14166 ""HTTP/1.1 200 OK\r\n""; 14167 ""Date: %s\r\n""; 14168 ""Access-Control-Allow-Origin: %s\r\n""; 14169 ""Access-Control-Allow-Methods: %s\r\n""; 14170 ""Content-Length: 0\r\n""; 14171 ""Connection: %s\r\n"",; 14172 date,; 14173 cors_orig_cfg,; 14174 ((cors_meth_cfg[0] == '*') ? cors_acrm : cors_meth_cfg),; 14175 suggest_connection_header(conn));; 14176 ; 14177 if (cors_acrh != NULL) {; 14178 /* CORS request is asking for additional headers */; 14179 const char *cors_hdr_cfg =; 14180 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14181 ; 14182 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14183 /* Allow only if access_control_allow_headers is; 14184 * not NULL and not an empty string. If this; 14185 * configuration is set to *, allow everything.; 14186 * Otherwise this configuration must be a list; 14187 * of allowed HTTP header names. */; 14188 mg_printf(conn,; 14189 ""Access-Control-Allow-Headers: %s\r\n"",; 14190 ((cors_hdr_cfg[0] == '*') ? cors_acrh; 14191 : cors_hdr_cfg));; 14192 }; 14193 }; 14194 if (cors_cred_cfg && *cors_cred_cfg) {; 14195 mg_printf(conn,; 14196 ""Access-Control-Allow-Credentials: %s\r\n"",; 14197 cors_cred_cfg);; 14198 }; 14199 ; 14200 mg_printf(conn, ""Access-Control-Max-Age: 60\r\n"");; 14201 ; 14202 mg_printf(conn, ""\r\n"");; 14203 return;; 14204 }; 14205 }; 14206 ; 14207 /* 5. interpret the url to find out how the request must be handled; 14208 */; 14209 /* 5.1. first test, if the request targets the regular http(s)://; 14210 * protocol namespace or the websocket ws(s):// protocol namespace.; 14211 */; 14212 is_websocket_request = (conn->protocol_type == PROTOCOL_TYPE_WEBSOCKET);; 14213#if defined(USE_WEBSOCKET); 14214 handler_type = is_websocket_request ? WEBSOCKET_HANDLE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:416990,config,configuration,416990,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"nfo &theData, const TString &theOption="""");  ;  MethodRSVM (DataSetInfo &dsi, const TString &theWeightFile);  ;  ~MethodRSVM (void);  ; virtual void AddWeightsXMLTo (void *) const;  ; const Ranking * CreateRanking ();  ; void DeclareOptions ();  ; Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr);  ; virtual std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  ; void Init ();  ; void ProcessOptions ();  ; void ReadModelFromFile ();  ; virtual void ReadWeightsFromStream (std::istream &);  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; virtual void ReadWeightsFromStream (TFile &);  ; virtual void ReadWeightsFromXML (void *);  ; virtual void TestClassification ();  initialization ;  ; void Train ();  ;  Public Member Functions inherited from TMVA::RMethodBase;  RMethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""", ROOT::R::TRInterface &_r=ROOT::R::TRInterface::Instance());  ;  RMethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile, ROOT::R::TRInterface &_r=ROOT::R::TRInterface::Instance());  ; virtual ~RMethodBase ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodRSVM.html:1486,inherit,inherited,1486,doc/master/classTMVA_1_1MethodRSVM.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodRSVM.html,1,['inherit'],['inherited']
Modifiability,"nfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMaterial::GetPointerName() const; Double_tTGeoMaterial::GetPressure() const; virtual Double_tTGeoMaterial::GetRadLen() const; virtual Double_tGetSpecificActivity(Int_t i = -1) const; TGeoMaterial::EGeoMaterialStateTGeoMaterial::GetState() const; Double_tTGeoMaterial::GetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tTGeoMaterial::GetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; TGeoExtension*TGeoMaterial::GetUserExtension() const; Double_t*GetWmixt() const; virtual Double_tTGeoMaterial::GetZ() const; Double_t*GetZmixt() const; TGeoExtension*TGeoMaterial::GrabFWExtension() const; TGeoExtension*TGeoMaterial::GrabUserExtension() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTGeoMaterial::IsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoMixture.html:4321,Inherit,InheritsFrom,4321,root/html534/TGeoMixture.html,https://root.cern,https://root.cern/root/html534/TGeoMixture.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMaterial::GetPointerName() const; Double_tTGeoMaterial::GetPressure() const; virtual Double_tTGeoMaterial::GetRadLen() const; virtual Double_tGetSpecificActivity(Int_t i = -1) const; TGeoMaterial::EGeoMaterialStateTGeoMaterial::GetState() const; Double_tTGeoMaterial::GetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tTGeoMaterial::GetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; TGeoExtension*TGeoMaterial::GetUserExtension() const; Double_t*GetWmixt() const; virtual Double_tTGeoMaterial::GetZ() const; Double_t*GetZmixt() const; TGeoExtension*TGeoMaterial::GrabFWExtension() const; TGeoExtension*TGeoMaterial::GrabUserExtension() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTGeoMaterial::IsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoMixture.html:4245,Inherit,InheritsFrom,4245,root/html602/TGeoMixture.html,https://root.cern,https://root.cern/root/html602/TGeoMixture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nfoActions.cxx:1697; TStreamerInfoActions::kAssociativeLooper@ kAssociativeLooperDefinition TStreamerInfoActions.cxx:1697; TStreamerInfoActions::WriteTextTObjectInt_t WriteTextTObject(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:267; TStreamerInfoActions::ReadBasicType_WithFactorInt_t ReadBasicType_WithFactor(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:900; TStreamerInfoActions::ReadTextBaseClassInt_t ReadTextBaseClass(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:307; TStreamerInfoActions::UseCacheVectorPtrLoopInt_t UseCacheVectorPtrLoop(TBuffer &b, void *start, const void *end, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1604; TStreamerInfoActions::ReadSTLInt_t ReadSTL(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1399; TStreamerInfoActions::ReadTextTObjectInt_t ReadTextTObject(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:300; TStreamerInfoActions::PushDataCacheInt_t PushDataCache(TBuffer &b, void *, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1498; TStreamerInfoActions::UseCacheInt_t UseCache(TBuffer &b, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1582; TStreamerInfoActions::TIDsstd::vector< TIDNode > TIDsDefinition TStreamerInfoActions.h:138; TStreamerInfoActions::WriteLoopInvalidInt_t WriteLoopInvalid(TBuffer &, void *, const void *, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1691; TStreamerInfoActions::ReadSTLMemberWiseSameClassvoid ReadSTLMemberWiseSameClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers)Definition TStreamerInfoActions.cxx:1122; TStreamerInfoActions::WriteTextTNamedInt_t WriteTextTNamed(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:259; TStreamerInfoActions::ReadTe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:257010,config,config,257010,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"nfoList(); Read back streamer infos from database; List of streamer infos is always stored with key:id 0,; which is not shown in normal keys list. void SaveToDatabase(); save data which is not yet in Database; Typically this is streamerinfos structures or. Int_t StreamKeysForDirectory(TDirectory* dir, Bool_t doupdate, Long64_t specialkeyid = -1, TKeySQL** specialkey = 0); read keys for specified directory (when update == kFALSE); or update value for modified keys when update == kTRUE; Returns number of succesfully read keys or -1 if error. void InitSqlDatabase(Bool_t create); initialize sql database and correspondent structures; identical to TFile::Init() function. Bool_t ReadConfigurations(); read table configurations as special table. void CreateBasicTables(); Creates initial tables in database; This is table with configurations and table with keys; Function called once when first object is stored to the file. void IncrementModifyCounter(); Update value of modify counter in config table; Modify counter used to indicate that something was changed in database.; It will be used when multiple instances of TSQLFile for the same data base; will be connected. TString MakeSelectQuery(TClass* cl); Produce SELECT statement which can be used to get all data; of class cl in one SELECT statement; This statement also can be used to create VIEW by command like; mysql> CREATE VIEW TH1I_view AS $CLASSSELECT$; Where $CLASSSELECT$ argument should be produced by call; f->MakeSelectQuery(TH1I::Class());; VIEWs supported by latest MySQL 5 and Oracle. Bool_t ProduceClassSelectQuery(TVirtualStreamerInfo* info, TSQLClassInfo* sqlinfo, TString& columns, TString& tables, Int_t& tablecnt); used by MakeClassSelectQuery method to add columns from table of; class, specified by TVirtualStreamerInfo structure. Bool_t IsTablesExists(); Checks if main keys table is existing. Bool_t IsWriteAccess(); Checkis, if lock is free in configuration tables. void SetLocking(Int_t mode); Set locking mode for cu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSQLFile.html:39758,config,config,39758,root/html530/TSQLFile.html,https://root.cern,https://root.cern/root/html530/TSQLFile.html,3,['config'],['config']
Modifiability,"nformation about len: number of entries to read. ;  ; virtual Int_t GetLenStatic () const;  Return the fixed length of this leaf. ;  ; virtual Int_t GetLenType () const;  ; virtual Int_t GetMinimum () const;  ; virtual Int_t GetOffset () const;  ; template<typename T > ; T GetTypedValue (Int_t i=0) const;  ; virtual void Import (TClonesArray *, Int_t);  ; virtual bool IsRange () const;  ; virtual bool IsUnsigned () const;  ; virtual void ReadBasket (TBuffer &);  ; virtual void ReadBasketExport (TBuffer &, TClonesArray *, Int_t);  ; virtual bool ReadBasketSerialized (TBuffer &, Long64_t);  ; virtual void ReadValue (std::istream &, Char_t=' ');  ; Int_t ResetAddress (void *add, bool calledFromDestructor=false);  Helper routine for TLeafX::SetAddress. ;  ; virtual void SetAddress (void *add=nullptr);  ; virtual void SetBranch (TBranch *branch);  ; virtual void SetLen (Int_t len=1);  ; virtual void SetOffset (Int_t offset=0);  ; virtual void SetRange (bool range=true);  ; virtual void SetUnsigned ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafElement.html:4670,inherit,inherited,4670,doc/master/classTLeafElement.html,https://root.cern,https://root.cern/doc/master/classTLeafElement.html,1,['inherit'],['inherited']
Modifiability,"nformation to convert a %s into a %s."",; 1279 vers, buf.GetParent() ? buf.GetParent()->GetName() : ""memory/socket"", oldClass ? oldClass->GetName() : ""(could not find the origin TClass)"", newClass ? newClass->GetName() : ""(could not find the destination TClass)"" );; 1280 } else if (newClass && oldClass){; 1281 ; 1282 Version_t vClVersion = buf.ReadVersionForMemberWise( oldClass->GetCollectionProxy()->GetValueClass() );; 1283 ; 1284 TVirtualCollectionProxy *newProxy = newClass->GetCollectionProxy();; 1285 TVirtualCollectionProxy *oldProxy = oldClass->GetCollectionProxy();; 1286 ; 1287 TVirtualCollectionProxy::TPushPop helper( newProxy, (char*)addr );; 1288 Int_t nobjects;; 1289 buf.ReadInt(nobjects);; 1290 void* alternative = newProxy->Allocate(nobjects,true);; 1291 if (nobjects) {; 1292 TActionSequence *actions = newProxy->GetConversionReadMemberWiseActions( oldProxy->GetValueClass(), vClVersion );; 1293 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1294 char endbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1295 void *begin = &(startbuf[0]);; 1296 void *end = &(endbuf[0]);; 1297 config->fCreateIterators( alternative, &begin, &end, newProxy);; 1298 // We can not get here with a split vector of pointer, so we can indeed assume; 1299 // that actions->fConfiguration != null.; 1300 buf.ApplySequence(*actions, begin, end);; 1301 if (begin != &(startbuf[0])) {; 1302 // assert(end != endbuf);; 1303 config->fDeleteTwoIterators(begin,end);; 1304 }; 1305 }; 1306 newProxy->Commit(alternative);; 1307 }; 1308 }; 1309 ; 1310 INLINE_TEMPLATE_ARGS void ReadArraySTLMemberWiseChangedClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers); 1311 {; 1312 // Collection was saved member-wise; 1313 ; 1314 TConfigSTL *config = (TConfigSTL*)conf;; 1315 ; 1316 vers &= ~( TBufferFile::kStreamedMemberWise );; 1317 ; 1318 TClass *newClass = config->fNewClass;; 1319 TClass *oldClass = config->fOldClass;; 1320 ; 1321 if( vers < 8 ) {; 1322 Error( ""ReadSTLMemb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:53707,config,config,53707,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"nformation. Bool_t changeDependents(const RooAbsCollection& newDeps, Bool_t mustReplaceAll, Bool_t nameChange); Change used variables to those with the same name in given list; If mustReplaceAll is true and error is generated if one of the; elements of newDeps is not found as a server. Double_t eval(const RooArgSet* nset = 0); Evaluate ROOT::v5::TFormula using given normalization set to be used as; observables definition passed to RooAbsReal::getVal(). DefinedValue(Int_t code); Interface to ROOT::v5::TFormula, return value defined by object with id 'code'; Object ids are mapped from object names by method DefinedVariable(). Int_t DefinedVariable(TString& name, int& action); Interface to ROOT::v5::TFormula. If name passed by ROOT::v5::TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. Int_t DefinedVariable(TString& name); Interface to ROOT::v5::TFormula. If name passed by ROOT::v5::TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Printing interface. void printValue(ostream& os) const; Print value of formula. void printName(ostream& os) const; Print name of formula. void printTitle(ostream& os) const; Print title of formula. void printClassName(ostream& os) const; Print class name of formula. void printArgs(ostream& os) const; Print arguments of formula, i.e. dependents that are actually used. TObject* Clone(const char* newName = 0) const; { return new RooFormula(*this,newName) ; }. RooAbsArg* getParameter(const char* name) const; Return pointer to parameter with given name. RooAbsArg* getParameter(Int_t index) const; Return pointer to parameter at given index. Bool_t ok(); Function value accessor. { return _isOK ; }. void Print(Option_t* options = 0) const; Printing interface (human readable). RooFormula& operator=(const RooFormula& other).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFormula.html:23459,variab,variable,23459,root/html604/RooFormula.html,https://root.cern,https://root.cern/root/html604/RooFormula.html,2,['variab'],['variable']
Modifiability,"ng &, double, double, double, double) override;  set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited variable ;  ; virtual void SetOptions (const ROOT::Math::MinimizerOptions &opt);  ; void SetParameters (const GeneticMinimizerParameters &params);  ; void SetRandomSeed (int seed);  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set a new free variable ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; virtual int CovMatrixStatus () const;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:3640,variab,variable,3640,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,1,['variab'],['variable']
Modifiability,"ng &bulkname, std::vector< TH1 * > *hv=nullptr) const;  ; void ForceNetworkCalculations ();  calculate input values to each neuron ;  ; void ForceNetworkInputs (const Event *ev, Int_t ignoreIndex=-1);  force the input values of the input neurons force the value for each input neuron ;  ; TNeuron * GetInputNeuron (Int_t index);  ; Double_t GetNetworkOutput ();  ; TNeuron * GetOutputNeuron (Int_t index=0);  ; virtual void MakeClassSpecific (std::ostream &, const TString &) const;  write specific classifier response ;  ; Int_t NumCycles ();  ; std::vector< Int_t > * ParseLayoutString (TString layerSpec);  parse layout specification string and return a vector, each entry containing the number of neurons to go in each successive layer ;  ; void PrintMessage (TString message, Bool_t force=kFALSE) const;  print messages, turn off printing by setting verbose and debug flag appropriately ;  ; void WaitForKeyboard ();  wait for keyboard input, for debugging ;  ;  Protected Member Functions inherited from TMVA::MethodBase; virtual std::vector< Double_t > GetDataMvaValues (DataSet *data=nullptr, Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the given Data type ;  ; const TString & GetInternalVarName (Int_t ivar) const;  ; virtual std::vector< Double_t > GetMvaValues (Long64_t firstEvt=0, Long64_t lastEvt=-1, Bool_t logProgress=false);  get all the MVA values for the events of the current Data type ;  ; const TString & GetOriginalVarName (Int_t ivar) const;  ; const TString & GetWeightFileDir () const;  ; Bool_t HasTrainingTree () const;  ; Bool_t Help () const;  ; Bool_t IgnoreEventsWithNegWeightsInTraining () const;  ; Bool_t IsConstructedFromWeightFile () const;  ; Bool_t IsNormalised () const;  ; virtual void MakeClassSpecificHeader (std::ostream &, const TString &="""") const;  ; void NoErrorCalc (Double_t *const err, Double_t *const errUpper);  ; void SetNormalised (Bool_t norm);  ; void SetWeightFileDir (TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:26590,inherit,inherited,26590,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,1,['inherit'],['inherited']
Modifiability,"ng &code);  Method to eval R code. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; Bool_t Install (TString pkg, TString repos=""http://cran.r-project.org"");  Method to install an R's package. ;  ; void Interactive ();  Method to get a R prompt to work interactively with tab completion support. ;  ; virtual TClass * IsA () const;  ; Bool_t IsInstalled (TString pkg);  Method to verify if a package is installed. ;  ; Binding operator[] (const TString &name);  ; void ProcessEventsLoop ();  Init event loop in a thread to support actions in windows from R graphics system. ;  ; Bool_t Require (TString pkg);  Method to load an R's package. ;  ; void SetVerbose (Bool_t status);  Method to set verbose mode, that produce extra output. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html:8599,inherit,inherited,8599,doc/master/classROOT_1_1R_1_1TRInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html,1,['inherit'],['inherited']
Modifiability,"ng &desc);  ; virtual ~Option ();  ; virtual Int_t GetArraySize () const;  ; TString GetValue (Int_t i) const;  ; virtual Bool_t IsArrayOpt () const;  ; virtual void Print (std::ostream &, Int_t levelofdetail=0) const;  ; virtual Bool_t SetValue (const TString &val, Int_t i=0);  set value for option ;  ; T & Value (Int_t i);  ; const T & Value (Int_t i) const;  ;  Public Member Functions inherited from TMVA::Option< T >;  Option (T &ref, const TString &name, const TString &desc);  ; void AddPreDefVal (const Bool_t &);  ; void AddPreDefVal (const Float_t &);  ; virtual void AddPreDefVal (const T &);  ; virtual Bool_t HasPreDefinedVal () const;  ; virtual Bool_t IsPreDefinedVal (const TString &) const;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual void PrintPreDefs (std::ostream &, Int_t levelofdetail=0) const;  ;  Public Member Functions inherited from TMVA::OptionBase;  OptionBase (const TString &name, const TString &desc);  constructor ;  ; virtual ~OptionBase ();  ; const TString & Description () const;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual TClass * IsA () const;  ; Bool_t IsSet () const;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const char * TheName () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html:1388,inherit,inherited,1388,doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html,1,['inherit'],['inherited']
Modifiability,"ng & ; bins . ); const. Create an empty 1D-histogram with appropriate scale and labels for this variable. ; Definition at line 727 of file RooAbsRealLValue.cxx. ◆ createHistogram() [3/11]. TH1F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const char * ; yAxisLabel, . double ; xlo, . double ; xhi, . Int_t ; nBins . ); const. Create an empty 1D-histogram with appropriate scale and labels for this variable. ; This method uses the default plot range which can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which can be changed with setPlotBins(). The caller takes ownership of the returned object and is responsible for deleting it. ; Definition at line 714 of file RooAbsRealLValue.cxx. ◆ createHistogram() [4/11]. TH2F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const RooAbsRealLValue & ; yvar, . const char * ; zAxisLabel, . const RooAbsBinning ** ; bins . ); const. Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ; Definition at line 803 of file RooAbsRealLValue.cxx. ◆ createHistogram() [5/11]. TH2F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const RooAbsRealLValue & ; yvar, . const char * ; zAxisLabel = nullptr, . double * ; xlo = nullptr, . double * ; xhi = nullptr, . Int_t * ; nBins = nullptr . ); const. Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ; This method uses the default plot ranges for x and y which can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which can be changed with setPlotBins(). The caller takes ownership of the returned object and is responsible for deleting it. ; Definition at line 745 of file RooAbsRealLValue.cxx. ◆ createHistogram() [6/11]. TH3F * RooAbsRealLValue::createHistogram ; (; const char * ; name, . const RooAbsRealLValue & ; yvar, . const RooAbsRealLValue & ; zvar, . const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:71077,variab,variable,71077,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,2,['variab'],['variable']
Modifiability,"ng (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Member Functions;  TFileOpenHandle (const char *n, const char *o, const char *t, Int_t cmp, Int_t no);  ;  TFileOpenHandle (const TFileOpenHandle &)=delete;  ;  TFileOpenHandle (TFile *f);  ; TFile * GetFile () const;  ; TFileOpenHandle & operator= (const TFileOpenHandle &)=delete;  . Private Attributes; Int_t fCompress {0};  Compression level and algorithm. ;  ; TFile * fFile {nullptr};  TFile instance of the file being opened. ;  ; Int_t fNetOpt {0};  Network options. ;  ; TString fOpt;  Options. ;  . Friends; class TFile;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileOpenHandle.html:9767,inherit,inherited,9767,doc/master/classTFileOpenHandle.html,https://root.cern,https://root.cern/doc/master/classTFileOpenHandle.html,1,['inherit'],['inherited']
Modifiability,"ng (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TParallelCoord *para, TEntryList *enlist);  Set the entry lists of ""para"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Init ();  Initialise the data members of TParallelCoord. ;  ; void PaintEntries (TParallelCoordSelect *sel=nullptr);  Loop over the entries and paint them. ;  ; void SetAxesPosition ();  Update the position of the axes. ;  . Private Attributes; TGaxis * fCandleAxis;  ! An axis used when displaying a candle chart. ;  ; TEntryList * fCurrentEntries;  -> Current selected entries in the tree. ;  ; Long64_t fCurrentFirst;  First entry to display. ;  ; Long64_t fCurrentN;  Number o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:20258,inherit,inherited,20258,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,2,['inherit'],['inherited']
Modifiability,"ng = (TObjString *)nextBatchDim();; 498 int idxToken = 0;; 499 ; 500 for (; batchDimString != nullptr; batchDimString = (TObjString *)nextBatchDim()) {; 501 switch (idxToken) {; 502 case 0: // input depth; 503 {; 504 TString strDepth(batchDimString->GetString());; 505 batchDepth = (size_t)strDepth.Atoi();; 506 } break;; 507 case 1: // input height; 508 {; 509 TString strHeight(batchDimString->GetString());; 510 batchHeight = (size_t)strHeight.Atoi();; 511 } break;; 512 case 2: // input width; 513 {; 514 TString strWidth(batchDimString->GetString());; 515 batchWidth = (size_t)strWidth.Atoi();; 516 } break;; 517 }; 518 ++idxToken;; 519 }; 520 ; 521 this->SetBatchDepth(batchDepth);; 522 this->SetBatchHeight(batchHeight);; 523 this->SetBatchWidth(batchWidth);; 524}; 525 ; 526////////////////////////////////////////////////////////////////////////////////; 527/// Create a deep net based on the layout string; 528template <typename Architecture_t, typename Layer_t>; 529void MethodDL::CreateDeepNet(DNN::TDeepNet<Architecture_t, Layer_t> &deepNet,; 530 std::vector<DNN::TDeepNet<Architecture_t, Layer_t>> &nets); 531{; 532 // Layer specification, layer details; 533 const TString layerDelimiter("","");; 534 const TString subDelimiter(""|"");; 535 ; 536 TString layoutString = this->GetLayoutString();; 537 ; 538 //std::cout << ""Create Deepnet - layout string "" << layoutString << ""\t layers : "" << deepNet.GetLayers().size() << std::endl;; 539 ; 540 // Split layers; 541 TObjArray *layerStrings = layoutString.Tokenize(layerDelimiter);; 542 TIter nextLayer(layerStrings);; 543 TObjString *layerString = (TObjString *)nextLayer();; 544 ; 545 ; 546 for (; layerString != nullptr; layerString = (TObjString *)nextLayer()) {; 547 ; 548 // Split layer details; 549 TObjArray *subStrings = layerString->GetString().Tokenize(subDelimiter);; 550 TIter nextToken(subStrings);; 551 TObjString *token = (TObjString *)nextToken();; 552 ; 553 // Determine the type of the layer; 554 TString strLayerType = toke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:20690,layers,layers,20690,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['layers'],['layers']
Modifiability,"ng = nullptr, . TGraph ** ; lCurvePlot = nullptr, . TSpline ** ; logTauXPlot = nullptr, . TSpline ** ; logTauYPlot = nullptr . ). virtual . scan a function wrt tau and determine the minimum ; Parameters. [in]nPointnumber of points to be scanned ; [in]tauMinsmallest tau value to study ; [in]tauMaxlargest tau value to study ; [out]scanResultthe scanned function wrt log(tau) ; [in]mode1st parameter for the scan function ; [in]distribution2nd parameter for the scan function ; [in]projectionMode3rd parameter for the scan function ; [out]lCurvePlotfor monitoring, shows the L-curve ; [out]logTauXPlotfor monitoring, L-curve(X) as a function of log(tau) ; [out]logTauYPlotfor monitoring, L-curve(Y) as a function of log(tau). Return value: the coordinate number on the curve scanResult which corresponds to the minimum ; The function is scanned by repeating the following steps nPoint times . Choose a value of tau . Perform the unfolding for this choice of tau, DoUnfold(tau) . Determinethe scan variable GetScanVariable() . The method GetScanVariable() defines scans of correlation coefficients, where mode is chosen from the enum EScanTauMode. In addition one may set distribution and/or projectionMode to refine the calculation of correlations (e.g. restrict the calcuation to the signal distribution and/or exclude underflow and overflow bins). See the documentation of GetScanVariable() for details. Alternative scan variables may be defined by overriding the GetScanVariable() method. ; Automatic choice of scan range: if (tauMin,tauMax) do not correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then the tau range is determined automatically. Use with care! ; Definition at line 1354 of file TUnfoldDensity.cxx. ◆ Streamer(). void TUnfoldDensity::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TUnfold. ◆ StreamerNVirtual(). void TUnfoldDensity::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:69611,variab,variable,69611,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,1,['variab'],['variable']
Modifiability,"ng BuildWSEntryPage();; 72 ; 73 void ReplaceJSROOTLinks(std::shared_ptr<THttpCallArg> &arg, const std::string &version = """");; 74 ; 75 static Bool_t VerifyFilePath(const char *fname);; 76 ; 77 THttpServer(const THttpServer &) = delete;; 78 THttpServer &operator=(const THttpServer &) = delete;; 79 ; 80public:; 81 THttpServer(const char *engine = ""http:8080"");; 82 virtual ~THttpServer();; 83 ; 84 Bool_t CreateEngine(const char *engine);; 85 ; 86 Bool_t IsAnyEngine() const { return fEngines.GetSize() > 0; }; 87 ; 88 /** returns pointer on objects sniffer */; 89 TRootSniffer *GetSniffer() const { return fSniffer.get(); }; 90 ; 91 void SetSniffer(TRootSniffer *sniff);; 92 ; 93 Bool_t IsReadOnly() const;; 94 ; 95 void SetReadOnly(Bool_t readonly = kTRUE);; 96 ; 97 Bool_t IsWSOnly() const;; 98 ; 99 void SetWSOnly(Bool_t on = kTRUE);; 100 ; 101 /** set termination flag, no any further requests will be processed */; 102 void SetTerminate();; 103 ; 104 /** returns kTRUE, if server was terminated */; 105 Bool_t IsTerminated() const { return fTerminated; }; 106 ; 107 /** Enable CORS header to ProcessRequests() responses; 108 * Specified location (typically ""*"") add as ""Access-Control-Allow-Origin"" header */; 109 void SetCors(const std::string &domain = ""*"") { fCors = domain; }; 110 ; 111 /** Returns kTRUE if CORS was configured */; 112 Bool_t IsCors() const { return !fCors.empty(); }; 113 ; 114 /** Returns specified CORS domain */; 115 const char *GetCors() const { return fCors.c_str(); }; 116 ; 117 /** Enable/disable usage Access-Control-Allow-Credentials response header */; 118 void SetCorsCredentials(const std::string &value = ""true"") { fCorsCredentials = value; }; 119 ; 120 /** Returns kTRUE if Access-Control-Allow-Credentials header should be used */; 121 Bool_t IsCorsCredentials() const { return !fCorsCredentials.empty(); }; 122 ; 123 /** Returns specified CORS credentials value - if any */; 124 const char *GetCorsCredentials() const { return fCorsCredentials.c_str(); }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8h_source.html:4448,config,configured,4448,doc/master/THttpServer_8h_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8h_source.html,1,['config'],['configured']
Modifiability,"ng INFO stream; # ---------------------------------------------------; ; # Print streams configuration; ROOT.RooMsgService.instance().Print(); ; # Add Integration topic to existing INFO stream; ROOT.RooMsgService.instance().getStream(1).addTopic(ROOT.RooFit.Integration); ; # Construct integral over gauss to demonstrate message stream; igauss = gauss.createIntegral({x}); igauss.Print(); ; # Print streams configuration in verbose, also shows inactive streams; ROOT.RooMsgService.instance().Print(); ; # Remove stream; ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Integration); ; # Examples of pdf value tracing; # -----------------------------------------------------------------------; ; # Show DEBUG level message on function tracing, ROOT.RooGaussian only; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.DEBUG, Topic=ROOT.RooFit.Tracing, ClassName=""RooGaussian""); ; # Perform a fit to generate some tracing messages; model.fitTo(data, Verbose=True); ; # Reset message service to default stream configuration; ROOT.RooMsgService.instance().reset(); ; # Show DEBUG level message on function tracing on all objects, output to; # file; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.DEBUG, Topic=ROOT.RooFit.Tracing, OutputFile=""rf506_debug.log""); ; # Perform a fit to generate some tracing messages; model.fitTo(data, Verbose=True); ; # Reset message service to default stream configuration; ROOT.RooMsgService.instance().reset(); ; # Example of another debugging stream; # ---------------------------------------------------------------------; ; # Show DEBUG level messages on client/server link state management; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.DEBUG, Topic=ROOT.RooFit.LinkStateMgmt); ROOT.RooMsgService.instance().Print(""v""); ; # Clone composite pdf g to trigger some link state management activity; gprime = gauss.cloneTree(); gprime.Print(); ; # Reset message service to default stream configuration; ROOT.RooMsgService.instance().reset(); P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8py.html:2127,config,configuration,2127,doc/master/rf506__msgservice_8py.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8py.html,1,['config'],['configuration']
Modifiability,"ng ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Frequently Asked Questions; [expand all][collapse all]. How to generate a dictionary . A dictionary is a source file that once compiled, linked into a library or executable and loaded into a process will give to CINT all the information its need about a type or variable. A dictionary is essential for a C++ to entity to useable from a CINT script or to be Streamed in or out of a ROOT file.; You have 3 options to create a dictionary.; Use ACLiC to generate the dictionary for everything defined in a source or header file:; root [] .L myScript.cxx+; or (from compiled code):; gROOT->ProcessLine("".L myScript.cxx+""). To generate the dictionary for a single class or for a class template instance use (with ROOT v5.27/06 and above):gInterpreter->GenerateDictionary(""vector<Track&gt"",""Track.h;vector"");; gInterpreter->GenerateDictionary(""myclass"",""myheader.h"");. To generate the dictionary from a Makefile, you can use the following rule to generate a dictionary for the headers $(HEADERS) and a library containing the dictionary and the compiled $(SOURCES):. MyDict.cxx: $(HEADERS) Linkdef.h; [TAB] rootcint -f $@ -c $(CXXFLAGS) -p $^. libMyLib.so: MyDict.cxx $(SOURCES); [TAB] g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/faq-page.html:2139,variab,variable,2139,d/faq-page.html,https://root.cern,https://root.cern/d/faq-page.html,1,['variab'],['variable']
Modifiability,"ng Shift+F5 accelerator keys. Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. Key: Action:. Up Move cursor up.; Shift+Up Move cursor up and extend selection.; Down Move cursor down.; Shift+Down Move cursor down and extend selection.; Left Move cursor left.; Shift+Left Move cursor left and extend selection.; Right Move cursor right.; Shift+Right Move cursor right and extend selection.; Home Move cursor to begin of line.; Shift+Home Move cursor to begin of line and extend selection.; Ctrl+Home Move cursor to top of page.; End Move cursor to end of line.; Shift+End Move cursor to end of line and extend selection.; Ctrl+End Move cursor to end of page.; PgUp Move cursor up one page.; Shift+PgUp Move cursor up one page and extend selection.; PgDn Move cursor down one page.; Shift+PgDn Move cursor down one page and extend selection.; Delete Delete character after cursor, or text selection.; BackSpace Delete character before cursor, or text selection.; Ctrl+B Move cursor left.; Ctrl+D Delete character after cursor, or text selection.; Ctrl+E Move cursor to end of line.; Ctrl+H Delete character before cursor, or text selection.; Ctrl+K Delete characters from current position to the; end of line.; Ctrl+U Delete current line. /*. */. Function Members (Methods); public:. TGTextEditor(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGTextEditor(TMacro* macro, const TGWindow* p = 0, UInt_t w = 0, UInt_t h = 0); virtual~TGTextEditor(); voidAbout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); voidAddLine(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTextEditor.html:4160,extend,extend,4160,root/html528/TGTextEditor.html,https://root.cern,https://root.cern/root/html528/TGTextEditor.html,6,['extend'],['extend']
Modifiability,"ng Shift+F5 accelerator keys. Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. Key: Action:. Up Move cursor up.; Shift+Up Move cursor up and extend selection.; Down Move cursor down.; Shift+Down Move cursor down and extend selection.; Left Move cursor left.; Shift+Left Move cursor left and extend selection.; Right Move cursor right.; Shift+Right Move cursor right and extend selection.; Home Move cursor to begin of line.; Shift+Home Move cursor to begin of line and extend selection.; Ctrl+Home Move cursor to top of page.; End Move cursor to end of line.; Shift+End Move cursor to end of line and extend selection.; Ctrl+End Move cursor to end of page.; PgUp Move cursor up one page.; Shift+PgUp Move cursor up one page and extend selection.; PgDn Move cursor down one page.; Shift+PgDn Move cursor down one page and extend selection.; Delete Delete character after cursor, or text selection.; BackSpace Delete character before cursor, or text selection.; Ctrl+B Move cursor left.; Ctrl+D Delete character after cursor, or text selection.; Ctrl+E Move cursor to end of line.; Ctrl+H Delete character before cursor, or text selection.; Ctrl+K Delete characters from current position to the; end of line.; Ctrl+U Delete current line. /*. */. Function Members (Methods); public:. virtual~TGTextEditor(); voidAbout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); voidAddLine(const char* string); voidAddLineFast(const char* string); voidAddText(TGText* text); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlock",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextEditor.html:4160,extend,extend,4160,root/html602/TGTextEditor.html,https://root.cern,https://root.cern/root/html602/TGTextEditor.html,4,['extend'],['extend']
Modifiability,"ng args from allArgs to matchedArgs and return kTRUE. Otherwise; return kFALSE and do not change matchedArgs. RooNumIntConfig* defaultIntegratorConfig(); Returns the default numeric integration configuration for all RooAbsReals. RooNumIntConfig* specialIntegratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumIntConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setIntegratorConfig(const RooNumIntConfig& config); Set the given integrator configuration as default numeric integration; configuration for this object. void setIntegratorConfig(); Remove the specialized numeric integration configuration associated; with this object. void selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); Interface function to force use of a given set of observables; to interpret function value. Needed for functions or p.d.f.s; whose shape depends on the choice of normalization such as; RooAddPdf. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:59429,config,configuration,59429,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,3,['config'],['configuration']
Modifiability,"ng arr = ""["";; 816 ; 817 {; 818 std::lock_guard<std::mutex> grd(fWSMutex);; 819 for (auto &ws : fWSHandlers) {; 820 if (arr.length() > 1); 821 arr.append("", "");; 822 ; 823 arr.append(TString::Format(""{ name: \""%s\"", title: \""%s\"" }"", ws->GetName(), ws->GetTitle()).Data());; 824 }; 825 }; 826 ; 827 arr.append(""]"");; 828 ; 829 std::string res = ReadFileContent((TROOT::GetDataDir() + ""/js/files/wslist.htm"").Data());; 830 ; 831 std::string arg = ""\""$$$wslist$$$\"""";; 832 ; 833 auto pos = res.find(arg);; 834 if (pos != std::string::npos); 835 res.replace(pos, arg.length(), arr);; 836 ; 837 return res;; 838}; 839 ; 840////////////////////////////////////////////////////////////////////////////////; 841/// Replaces all references like ""jsrootsys/..."" or other pre-configured pathes; 842///; 843/// Either using pre-configured JSROOT installation from web or; 844/// redirect to jsrootsys from the main server path to benefit from browser caching; 845/// Creates appropriate importmap instead of <!--jsroot_importmap--> placeholder; 846 ; 847void THttpServer::ReplaceJSROOTLinks(std::shared_ptr<THttpCallArg> &arg, const std::string &version); 848{; 849 const std::string place_holder = ""<!--jsroot_importmap-->"";; 850 ; 851 auto p = arg->fContent.find(place_holder);; 852 ; 853 bool old_format = (p == std::string::npos);; 854 ; 855 // count slashes to handler relative paths to jsroot; 856 Int_t slash_cnt = 0;; 857 if (arg->fPathName.Length() > 0); 858 slash_cnt++;; 859 for (Int_t n = 1; n < arg->fPathName.Length()-1; ++n); 860 if (arg->fPathName[n] == '/') {; 861 if (arg->fPathName[n-1] != '/') {; 862 slash_cnt++; // normal slash in the middle, count it; 863 } else {; 864 slash_cnt = 0; // double slash, do not touch such path; 865 break;; 866 }; 867 }; 868 ; 869 ; 870 if (old_format) {; 871 // old functionality; 872 ; 873 if (!version.empty()) {; 874 // replace link to JSROOT modules in import statements emulating new version for browser; 875 std::string search = ""from './jsrootsys/"";",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8cxx_source.html:26347,config,configured,26347,doc/master/THttpServer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8cxx_source.html,2,['config'],['configured']
Modifiability,"ng attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:41:51 2015 » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction2PdfBinding_double_int_int_.html:46482,variab,variable,46482,root/html604/RooCFunction2PdfBinding_double_int_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction2PdfBinding_double_int_int_.html,2,['variab'],['variable']
Modifiability,"ng component PDF for its analytical integration; capability of the requested set ('allVars'). It finds the largest common set of variables; that can be integrated by all remaining components. If such a set exists, it reconfirms that; each component is capable of analytically integrating the common set, and combines the components; individual integration codes into a single integration code valid for RooProdPdf. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Bool_t checkObservables(const RooArgSet* nset) const; Obsolete. RooAbsPdf::ExtendMode extendMode() const; If this product contains exactly one extendable p.d.f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset) const; Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return generator context optimized for generating events from product p.d.f.s. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Query internal generation capabilities of component p.d.f.s and aggregate capabilities; into master configuration passed to the generator context. void initGenerator(Int_t code); Forward one-time initialization call to component generation initialization; methods. void generateEvent(Int_t code); Generate a single event with configuration specified by 'code'; Defer internal generation to components as encoded in the _genCode; registry for given generator code. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Forward determination of safety of internal generator code to; component p.d.f that would generate the given observ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooProdPdf.html:53162,extend,extendable,53162,root/html528/RooProdPdf.html,https://root.cern,https://root.cern/root/html528/RooProdPdf.html,10,['extend'],['extendable']
Modifiability,"ng const &returnExpr);  Assemble and return the final code with the return expression and global statements. ;  ; std::unique_ptr< LoopScope > beginLoop (RooAbsArg const *in);  Create a RAII scope for iterating over vector observables. ;  ; std::string buildArg (RooAbsCollection const &x);  Function to save a RooListProxy as an array in the squashed code. ;  ; std::string buildArg (std::span< const double > arr);  ; std::string buildArg (std::span< const int > arr);  ; template<typename... Args_t> ; std::string buildCall (std::string const &funcname, Args_t const &...args);  Build the code to call the function with name funcname, passing some arguments. ;  ; void collectFunction (std::string const &name);  Register a function that is only know to the interpreter to the context. ;  ; std::string const & getResult (RooAbsArg const &arg);  Gets the result for the given node using the node name. ;  ; template<class T > ; std::string const & getResult (RooTemplateProxy< T > const &key);  ; std::string getTmpVarName () const;  Get a unique variable name to be used in the generated code. ;  ; std::size_t outputSize (RooFit::Detail::DataKey key) const;  Figure out the output size of a node. ;  . Public Attributes; Experimental::RooFuncWrapper * _wrapper = nullptr;  . Private Member Functions; void addResult (TNamed const *key, std::string const &value);  ; std::string buildArg (RooAbsArg const &arg);  ; template<class T > ; std::string buildArg (RooTemplateProxy< T > const &arg);  ; std::string buildArg (std::nullptr_t);  ; std::string buildArg (std::string const &x);  ; template<class T , typename std::enable_if< std::is_floating_point< T >{}, bool >::type = true> ; std::string buildArg (T x);  ; template<class T , typename std::enable_if< std::is_integral< T >{}, bool >::type = true> ; std::string buildArg (T x);  ; std::string buildArgs ();  ; template<class Arg_t > ; std::string buildArgs (Arg_t const &arg);  ; template<typename Arg_t , typename... Args_t> ; std::string ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1Detail_1_1CodeSquashContext.html:2864,variab,variable,2864,doc/master/classRooFit_1_1Detail_1_1CodeSquashContext.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1Detail_1_1CodeSquashContext.html,1,['variab'],['variable']
Modifiability,"ng custom variation tags. ;  ; template<typename F > ; RInterface< Proxied, DS_t > Vary (std::string_view colName, F &&expression, const ColumnNames_t &inputColumns, std::size_t nVariations, std::string_view variationName="""");  Register systematic variations for a single existing column using auto-generated variation tags. ;  ; RInterface< Proxied, DS_t > Vary (std::string_view colName, std::string_view expression, const std::vector< std::string > &variationTags, std::string_view variationName="""");  Register systematic variations for a single existing column using custom variation tags. ;  ; RInterface< Proxied, DS_t > Vary (std::string_view colName, std::string_view expression, std::size_t nVariations, std::string_view variationName="""");  Register systematic variations for a single existing column using auto-generated variation tags. ;  ;  Public Member Functions inherited from ROOT::RDF::RInterfaceBase;  RInterfaceBase (RDFDetail::RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ;  RInterfaceBase (std::shared_ptr< RDFDetail::RLoopManager > lm);  ; RDFDescription Describe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Protected Member Functions;  RInterface (const std::shared_ptr< Proxied > &proxied, RLoopManager &lm, const RDFInternal::RCol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:21397,inherit,inherited,21397,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['inherit'],['inherited']
Modifiability,"ng event generator; Depending on the fit model (if it is difficult to sample), it may be necessary to change generator settings. For the default generator (RooFoamGenerator), the number of samples or cells could be increased by e.g. using myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);; The foam generator e.g. has the following config options:; nCell[123N]D; nSample; chatLevel See alsorf902_numgenconfig.C. PyROOT; The RooAbsPdf::generate() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 1210 of file RooAbsPdf.cxx. ◆ generate() [2/6]. RooFit::OwningPtr< RooDataSet > RooAbsPdf::generate ; (; const RooArgSet & ; whatVars, . const RooDataSet & ; prototype, . Int_t ; nEvents = 0, . bool ; verbose = false, . bool ; randProtoOrder = false, . bool ; resampleProto = false . ); const. Generate a new dataset using a prototype dataset as a model, with values of the variables in whatVars sampled from our distribution. ; Parameters. [in]whatVarsGenerate for these variables. ; [in]prototypeUse this dataset as a prototype: the new dataset will contain the same number of events as the prototype (by default), and any prototype variables not in whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters. The user can specify a number of events to generate that will override the default. The result is a copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that are not in the prototype will be added as new columns to the generated dataset. ; [in]nEventsNumber of events to generate. Defaults to 0, which means number of event in prototype dataset. ; [in]verboseShow which generator strategies are being used. ; [in]randProtoOrderRandomise order of retrieval of events from proto dataset. ; [in]resampleProtoResample from the proto dataset. . ReturnsThe new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:116910,variab,variables,116910,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,"ng exclusively and directly on the data set dimensions, the equivalent; constructor with a string based cut expression is recommended. RooDataSet(const char* name, const char* title, TTree* ntuple, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an ROOT TTRee. The dimensions; of the data set are defined by the 'vars' RooArgSet. For each dimension; specified, the TTree must have a branch with the same name. For category; branches, this branch should contain the numeric index value. Real dimensions; can be constructed from either 'Double_t' or 'Float_t' tree branches. In the; latter case, an automatic conversion is applied. The 'cuts' string is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable in the; vars argset. For cuts involving variables other than those contained in; the vars argset, such as intermediate formula objects, use the; equivalent constructor accepting RooFormulaVar reference as cut specification. RooDataSet(RooDataSet const& other, const char* newname = 0); Copy constructor. RooDataSet(const char* name, const char* title, RooDataSet* ntuple, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, int nStart, int nStop, Bool_t copyCache, const char* wgtVarName = 0); Protected constructor for internal use only. RooArgSet addWgtVar(const RooArgSet& origVars, const RooAbsArg* wgtVar); Helper function for constructor that adds optional weight variable to construct; total set of observables. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Return a clone of this dataset containing only the cached variables. RooAbsData* emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0) const; Return an empty clone of this dataset. If vars is not null, only the variables in vars; are ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataSet.html:23247,variab,variables,23247,root/html528/RooDataSet.html,https://root.cern,https://root.cern/root/html528/RooDataSet.html,4,['variab'],['variables']
Modifiability,"ng exclusively and directly on the data set dimensions, the equivalent; constructor with a string based cut expression is recommended. RooDataSet(const char* name, const char* title, TTree* ntuple, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an ROOT TTRee. The dimensions; of the data set are defined by the 'vars' RooArgSet. For each dimension; specified, the TTree must have a branch with the same name. For category; branches, this branch should contain the numeric index value. Real dimensions; can be constructed from either 'Double_t' or 'Float_t' tree branches. In the; latter case, an automatic conversion is applied. The 'cuts' string is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable in the; vars argset. For cuts involving variables other than those contained in; the vars argset, such as intermediate formula objects, use the; equivalent constructor accepting RooFormulaVar reference as cut specification. RooDataSet(RooDataSet const& other, const char* newname = 0); Copy constructor. RooDataSet(const char* name, const char* title, RooDataSet* ntuple, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, int nStart, int nStop, Bool_t copyCache, const char* wgtVarName = 0); Protected constructor for internal use only. RooArgSet addWgtVar(const RooArgSet& origVars, const RooAbsArg* wgtVar); Helper function for constructor that adds optional weight variable to construct; total set of observables. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Return a clone of this dataset containing only the cached variables. RooAbsData* emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0, const char* wgtVarName = 0) const; Return an empty clone of this dataset. If vars is not null, only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataSet.html:24845,variab,variables,24845,root/html534/RooDataSet.html,https://root.cern,https://root.cern/root/html534/RooDataSet.html,2,['variab'],['variables']
Modifiability,"ng exclusively and directly on the data set dimensions, the equivalent; constructor with a string based cut expression is recommended. RooDataSet(const char* name, const char* title, TTree* ntuple, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an ROOT TTRee. The dimensions; of the data set are defined by the 'vars' RooArgSet. For each dimension; specified, the TTree must have a branch with the same name. For category; branches, this branch should contain the numeric index value. Real dimensions; can be constructed from either 'Double_t' or 'Float_t' tree branches. In the; latter case, an automatic conversion is applied. The 'cuts' string is an optional; RooFormula expression and can be used to select the subset of the data points; in 'dset' to be copied. The cut expression can refer to any variable in the; vars argset. For cuts involving variables other than those contained in; the vars argset, such as intermediate formula objects, use the; equivalent constructor accepting RooFormulaVar reference as cut specification. RooDataSet(const RooDataSet& other, const char* newname = 0); Copy constructor. RooDataSet(const char* name, const char* title, RooDataSet* ntuple, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, int nStart, int nStop, Bool_t copyCache, const char* wgtVarName = 0); Protected constructor for internal use only. RooArgSet addWgtVar(const RooArgSet& origVars, const RooAbsArg* wgtVar); Helper function for constructor that adds optional weight variable to construct; total set of observables. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Return a clone of this dataset containing only the cached variables. RooAbsData* emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0, const char* wgtVarName = 0) const; Return an empty clone of this dataset. If vars is not null, only",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDataSet.html:26109,variab,variables,26109,root/html602/RooDataSet.html,https://root.cern,https://root.cern/root/html602/RooDataSet.html,4,['variab'],['variables']
Modifiability,"ng exists with such a name, clone the default binning on the fly if so requested ; Implements RooAbsRealLValue.; Definition at line 90 of file RooErrorVar.cxx. ◆ getBinning() [2/2]. RooAbsBinning & RooErrorVar::getBinning ; (; const char * ; name = nullptr, . bool ; verbose = true, . bool ; createOnTheFly = false . ). overridevirtual . Return binning with given name. ; If no binning exists with such a name, clone the default binning on the fly if so requested ; Implements RooAbsRealLValue.; Definition at line 101 of file RooErrorVar.cxx. ◆ getBinningNames(). std::list< std::string > RooErrorVar::getBinningNames ; (; ); const. overridevirtual . Get a list of all binning names. ; An empty name implies the default binning. A 0 pointer should be passed to getBinning in this case. ; Implements RooAbsLValue.; Definition at line 133 of file RooErrorVar.cxx. ◆ getValV(). double RooErrorVar::getValV ; (; const RooArgSet * ; set = nullptr); const. overridevirtual . Return value, i.e. error on input variable. ; Reimplemented from RooAbsReal.; Definition at line 70 of file RooErrorVar.cxx. ◆ hasBinning(). bool RooErrorVar::hasBinning ; (; const char * ; name); const. overridevirtual . Return true if we have binning with given name. ; Implements RooAbsRealLValue.; Definition at line 80 of file RooErrorVar.cxx. ◆ IsA(). TClass * RooErrorVar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsRealLValue.; Definition at line 101 of file RooErrorVar.h. ◆ isFundamental(). bool RooErrorVar::isFundamental ; (; ); const. inlineoverridevirtual . Is this object a fundamental type that can be added to a dataset? Fundamental-type subclasses override this method to return true. ; Note that this test is subtlely different from the dynamic isDerived() test, e.g. a constant is not derived but is also not fundamental. ; Reimplemented from RooAbsArg.; Definition at line 51 of file RooErrorVar.h. ◆ operator=(). RooAbsArg & RooAbsRealLValue:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:72620,variab,variable,72620,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['variab'],['variable']
Modifiability,"ng information, broken file ... give up; 1242 return;; 1243 }; 1244 ; 1245 int objectSize = oldClass->Size();; 1246 char *obj = (char*)addr;; 1247 char *endobj = obj + conf->fLength*objectSize;; 1248 ; 1249 for(; obj<endobj; obj+=objectSize) {; 1250 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)obj );; 1251 Int_t nobjects;; 1252 buf.ReadInt(nobjects);; 1253 void* env = oldProxy->Allocate(nobjects,true);; 1254 ; 1255 if (nobjects || vers < 7 ) {; 1256 // coverity[dereference] since this is a member streaming action by definition the collection contains objects.; 1257 TStreamerInfo *subinfo = (TStreamerInfo*)oldProxy->GetValueClass()->GetStreamerInfo( 0 );; 1258 ; 1259 subinfo->ReadBufferSTL(buf, oldProxy, nobjects, /* offset */ 0, /* v7 */ kFALSE);; 1260 }; 1261 oldProxy->Commit(env);; 1262 }; 1263 }; 1264 }; 1265 ; 1266 INLINE_TEMPLATE_ARGS void ReadSTLMemberWiseChangedClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers); 1267 {; 1268 // Collection was saved member-wise; 1269 ; 1270 TConfigSTL *config = (TConfigSTL*)conf;; 1271 ; 1272 vers &= ~( TBufferFile::kStreamedMemberWise );; 1273 ; 1274 TClass *newClass = config->fNewClass;; 1275 TClass *oldClass = config->fOldClass;; 1276 ; 1277 if( vers < 8 ) {; 1278 Error( ""ReadSTLMemberWiseChangedClass"", ""Unfortunately, version %d of TStreamerInfo (used in %s) did not record enough information to convert a %s into a %s."",; 1279 vers, buf.GetParent() ? buf.GetParent()->GetName() : ""memory/socket"", oldClass ? oldClass->GetName() : ""(could not find the origin TClass)"", newClass ? newClass->GetName() : ""(could not find the destination TClass)"" );; 1280 } else if (newClass && oldClass){; 1281 ; 1282 Version_t vClVersion = buf.ReadVersionForMemberWise( oldClass->GetCollectionProxy()->GetValueClass() );; 1283 ; 1284 TVirtualCollectionProxy *newProxy = newClass->GetCollectionProxy();; 1285 TVirtualCollectionProxy *oldProxy = oldClass->GetCollectionProxy();; 1286 ; 1287 TVirtualCollectionProxy::T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:52251,config,config,52251,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"ng of objects in the TObjectTable. ;  . Private Member Functions; void InitResources ();  Create master node info and submaster/worker lists, and set default values. ;  ; Bool_t ReadConfigFile (const char *confDir, const char *fileName);  Read the PROOF config file and fill the master and worker list. ;  . Static Private Member Functions; static TProofNodeInfo * CreateNodeInfo (const TString &name);  Fill out the preliminary TProofNodeInfo structure. ;  ; static EInfoType GetInfoType (const TString &word);  Static method to determine the info type. ;  ; static void SetOption (TProofNodeInfo *nodeinfo, const TString &option, const TString &value);  Static method to set the node info options. ;  . Private Attributes; TString fFileName;  ; Bool_t fFoundMaster;  ; TProofNodeInfo * fMaster;  ; TList * fSubmasterList;  ; TList * fWorkerList;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TProofResources; Bool_t fValid;  . #include <TProofResourcesStatic.h>. Inheritance diagram for TProofResourcesStatic:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EInfoType. enum TProofResourcesStatic::EInfoType. EnumeratorkNodeType ; kOption ; kHost . Definition at line 40 of file TProofResourcesStatic.h. Constructor & Destructor Documentation. ◆ TProofResourcesStatic() [1/2]. TProofResourcesStatic::TProofResourcesStatic ; (; ). This ctor is used in TProofServ::Setup() in combination with GetWorkDir() for a quick scan of the config file to retrieve the work directory. ; Definition at line 44 of file TProofResourcesStatic.cxx. ◆ TProofResourcesStatic() [2/2]. TProofResourcesStatic::TProo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofResourcesStatic.html:12071,inherit,inherited,12071,doc/master/classTProofResourcesStatic.html,https://root.cern,https://root.cern/doc/master/classTProofResourcesStatic.html,2,['inherit'],['inherited']
Modifiability,"ng of objects in the TObjectTable. ;  . Protected Member Functions;  TGXYLayout (const TGXYLayout &);  copy constructor ;  ; TGXYLayout & operator= (const TGXYLayout &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fFirst;  flag to determine the first call of Layout() ;  ; UInt_t fFirstHeight;  original height of the frame fMain ;  ; UInt_t fFirstWidth;  original width of the frame fMain ;  ; TList * fList;  list of frames to arrange ;  ; TGCompositeFrame * fMain;  container frame ;  ; Int_t fTHeight;  text height ;  ; Int_t fTWidth;  text width of a default character ""1234567890"" / 10 ;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGXYLayout.h>. Inheritance diagram for TGXYLayout:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGXYLayout() [1/2]. TGXYLayout::TGXYLayout ; (; const TGXYLayout & ; xyl). protected . copy constructor ; Definition at line 200 of file TGXYLayout.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGXYLayout.html:11945,inherit,inherited,11945,doc/master/classTGXYLayout.html,https://root.cern,https://root.cern/doc/master/classTGXYLayout.html,1,['inherit'],['inherited']
Modifiability,"ng of the following tree.; : ; : Decision trees are a sequence of binary splits of the data sample; : using a single discriminant variable at a time. A test event ; : ending up after the sequence of left-right splits in a final ; : (""leaf"") node is classified as either signal or background; : depending on the majority type of training events in that node.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : By the nature of the binary splits performed on the individual; : variables, decision trees do not deal well with linear correlations; : between variables (they need to approximate the linear split in; : the two dimensional space by a sequence of splits on the two ; : variables individually). Hence decorrelation could be useful ; : to optimise the BDT performance.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : The two most important parameters in the configuration are the ; : minimal number of events requested by a leaf node as percentage of the ; : number of training events (option ""MinNodeSize"" replacing the actual number ; : of events ""nEventsMin"" as given in earlier versions; : If this number is too large, detailed features ; : in the parameter space are hard to be modelled. If it is too small, ; : the risk to overtrain rises and boosting seems to be less effective; : typical values from our current experience for best performance ; : are between 0.5(%) and 10(%) ; : ; : The default minimal number is currently set to ; : max(20, (N_training_events / N_variables^2 / 10)) ; : and can be changed by the user.; : ; : The other crucial parameter, the pruning strength (""PruneStrength""),; : is also related to overtraining. It is a regularisation parameter ; : that is used when determining after the training which splits ; : are considered statistically insignificant and are removed. The; : user is advised to carefully watch the BDT screen output for; : the comparison between efficiencies obtained on the training and; : the independent test sam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:31812,config,configuration,31812,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,2,['config'],['configuration']
Modifiability,"ng parameter validity An invalid parameter results in an error. ;  ; void ComputeChisquareLambda ();  Method used internally to compute the likelihood ratio chi2 See the function GetChisquare() for details. ;  ; void ComputeFCN (Double_t &f, const Double_t *par, Int_t flag);  Used internally to compute the likelihood value. ;  ; void FindPrediction (int bin, double &t_i, int &k_0, double &A_ki) const;  Function used internally to obtain the template prediction in the individual bins 'bin' <=> 'i' (paper) 'par' <=> 'j' (paper) ;  ; void GetRanges (Int_t &minX, Int_t &maxX, Int_t &minY, Int_t &maxY, Int_t &minZ, Int_t &maxZ) const;  Used internally to obtain the bin ranges according to the dimensionality of the histogram and the limits set by hand. ;  ; bool IsExcluded (Int_t bin) const;  Function for internal use, checking whether the given bin is excluded from the fit or not. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFractionFitter.h>. Inheritance diagram for TFractionFitter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFractionFitter.html:20374,inherit,inherited,20374,doc/master/classTFractionFitter.html,https://root.cern,https://root.cern/doc/master/classTFractionFitter.html,1,['inherit'],['inherited']
Modifiability,"ng point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; RooRealProxy_meas; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; RooRealProxy_true; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooPullVar.html:32923,config,configuration,32923,root/html532/RooPullVar.html,https://root.cern,https://root.cern/root/html532/RooPullVar.html,2,['config'],['configuration']
Modifiability,"ng point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Binding_double_double_int_.html:32281,config,configuration,32281,root/html526/RooCFunction2Binding_double_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Binding_double_double_int_.html,2,['config'],['configuration']
Modifiability,"ng point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Binding_double_int_double_.html:32281,config,configuration,32281,root/html526/RooCFunction2Binding_double_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Binding_double_int_double_.html,2,['config'],['configuration']
Modifiability,"ng productPrefix, string systTerm, double low, double high, int lowBin, int highBin). void AddMultiVarGaussConstraint(RooWorkspace* proto, string prefix, int lowBin, int highBin, vector<string>& likelihoodTermNames); these are the nominal predictions: eg. the mean of some space of variations; later fill these in a loop over histogram bins. void LinInterpWithConstraint(RooWorkspace* proto, TH1F* nominal, vector<TH1F*> lowHist, vector<TH1F*> highHist, vector<string> sourceName, string prefix, string productPrefix, string systTerm, int lowBin, int highBin, vector<string>& likelihoodTermNames); these are the nominal predictions: eg. the mean of some space of variations; later fill these in a loop over histogram bins. string AddNormFactor(RooWorkspace* , string& , string& , RooStats::HistFactory::EstimateSummary& , bool ). void AddEfficiencyTerms(RooWorkspace* proto, string prefix, string interpName, map<string,pair<double,double> > systMap, vector<string>& likelihoodTermNames, vector<string>& totSystTermNames); add variables for all the relative overall uncertainties we expect; range is set using defined macro (see top of the page); string range=""[0,-1,1]"";. void MakeTotalExpected(RooWorkspace* proto, string totName, string , string , int lowBin, int highBin, vector<string>& syst_x_expectedPrefixNames, vector<string>& normByNames); for ith bin calculate totN_i = lumi * sum_j expected_j * syst_j. void AddPoissonTerms(RooWorkspace* proto, string prefix, string obsPrefix, string expPrefix, int lowBin, int highBin, vector<string>& likelihoodTermNames). Relate observables to expected for each bin; later modify variable named expPrefix_i to be product of terms. void SetObsToExpected(RooWorkspace* proto, string obsPrefix, string expPrefix, int lowBin, int highBin). set observed to expected. void Customize(RooWorkspace* proto, const char* pdfNameChar, map<string,string> renameMap). void EditSyst(RooWorkspace* proto, const char* pdfNameChar, map<string,double> gammaSyst, map<stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html:9191,variab,variables,9191,root/html530/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html,https://root.cern,https://root.cern/root/html530/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html,1,['variab'],['variables']
Modifiability,"ng rate for synapse weight adjustments; Double_tfPriorzjh; vector<Double_t>fPriorDevzjh; Int_tfResetStepreset time (how often we clear hessian matrix); Float_tfSamplingEpochfraction of epochs where sampling is used; Float_tfSamplingFractionfraction of events which is sampled for training; Bool_tfSamplingTestingThe testing sample is sampled; Bool_tfSamplingTrainingThe training sample is sampled; Float_tfSamplingWeightchanging factor for event weights when sampling is turned on; Double_tfTauline search variable; Int_tfTestRatetest for overtraining performed at each #th epochs; TStringfTrainMethodStraining method option param; TMVA::MethodMLP::ETrainingMethodfTrainingMethodmethod of training, BP or GA; Int_tfUpdateLimitzjh; boolfUseRegulatorzjh; Float_tfWeightRangesuppress outliers for the estimator calculation; static const Bool_tfgPRINT_BATCHdebug flags; static const Int_tfgPRINT_ESTIMATOR_INCdebug flags; static const Bool_tfgPRINT_SEQdebug flags. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodMLP(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0); standard constructor. MethodMLP(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = 0); constructor from a weight file. ~MethodMLP(); destructor; nothing to be done. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); MLP can handle classification with 2 classes and regression with one regression-target. void Init(); default initializations. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; TrainingMethod <string> Training method; available values are: BP Back-Propagation <default>; GA Genetic Algorithm (takes a LONG time). LearningRate <float> NN learning rate parameter; DecayRate <float> Decay rate for learning parameter; TestRate <int> Test for o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodMLP.html:22363,Inherit,Inheritance,22363,root/html532/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodMLP.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng rotation names and the TGeoRotation for it; TGDMLParse::SclMapfsclmap!Map containing scale names and the TGeoScale for it; TGDMLParse::SolMapfsolmap!Map containing solid names and the TGeoShape for it; TGDMLParse::VolMapfvolmap!Map containing volume names and the TGeoVolume for it. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolume* GDMLReadFile(const char* filename = ""test.gdml""); creates the new instance of the XMLEngine called 'gdml', using the filename >>; then parses the file and creates the DOM tree. Then passes the DOM to the; next function to translate it. const char* ParseGDML(TXMLEngine* gdml, XMLNodePointer_t node); this function recursively moves thru the DOM tree of the GDML file. It checks for; key words along the way and if a key word is found it calls the corresponding; function to interpret the node. double Evaluate(const char* evalline). Int_t SetAxis(const char* axisString); When using the 'divide' process in the geometry this function; sets the variable 'axis' depending on what is specified. const char* NameShort(const char* name); this function looks thru a string for the chars '0x' next to; each other, when it finds this, it calls another function to strip; the hex address. It does this recursively until the end of the; string is reached, returning a string without any hex addresses. XMLNodePointer_t ConProcess(TXMLEngine* gdml, XMLNodePointer_t node, XMLAttrPointer_t attr); In the define section of the GDML file, constants can be declared.; when the constant keyword is found, this function is called, and the; name and value of the constant is stored in the ""fformvec"" vector as; a TFormula class, representing a constant function. TString GetScale(const char* unit); Throughout the GDML file, a unit can de specified. Whether it be; angular or linear, values can be used as well as abbreviations such as; 'mm' or 'deg'. This function is passed the specified unit and if it is; found, replaces it wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGDMLParse.html:11157,variab,variable,11157,root/html602/TGDMLParse.html,https://root.cern,https://root.cern/root/html602/TGDMLParse.html,4,['variab'],['variable']
Modifiability,"ng sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.0223 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Factory : Training finished; : ; Factory : Train method: Fisher for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Fisher ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : Fisher discriminants select events by distinguishing the mean ; : values of the signal and background distributions in a trans- ; : formed variable space where linear correlations are removed.; : ; : (More precisely: the ""linear discriminator"" determines; : an axis in the (correlated) hyperspace of the input ; : variables such that, when projecting the output classes ; : (signal and background) upon this axis, they are pushed ; : as far as possible away from each other, while events; : of a same class are confined in a close vicinity. The ; : linearity property of this classifier is reflected in the ; : metric with which ""far apart"" and ""close vicinity"" are ; : determined: the covariance matrix of the discriminating; : variable space.); : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Optimal performance for Fisher discriminants is obtained for ; : linearly correlated Gaussian-distributed variables. Any deviation; : from this ideal reduces the achievable separation power. In ; : particular, no discrimination at all is achieved for a variable; : that has the same sample mean for signal and background, even if ; : the shapes of the distributions are very different. Thus, Fisher ; : discriminants often benefit from suitable transformations of the ; : input variables. For example, if a variable x in [-1,1] has a ; : a parabolic signal distributio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:18920,variab,variables,18920,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['variab'],['variables']
Modifiability,"ng scaling to another function binding; RooSecondMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:44242,config,configuration,44242,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,12,['config'],['configuration']
Modifiability,"ng separate .icc files increases the build time, the complexity of the build system and, more importantly, increases the number of files one possibly has to scan to find a piece of code.; Declaration Order; In the class definition we first declare all private data members, followed by the private static members, the private methods and the private static methods. Then the protected members and methods and finally the public methods (no public data members). We put private members first since that is the language default and it gives the developer a quick view on what data members are used in a class.; Avoid raw C types; Avoid the use of raw C types like int, long, float, double when using data that might be written to disk. For example, the sizes of int and long are machine dependent. On 32 bit machines ints and longs are 32 bits, but on 64 bit processors an int can be either 32 or 64 bits and a long 64 bits, depending on the processor. For portability reasons and consistent numerical results use the typedefs provided by ROOT's Rtypes.h for the basic raw C types. E.g.: Double_t, Float_t, Int_t etc.; Exception handling; Don't let every method throw an exception when a simple error return code is often enough.; Namespaces; In ROOT 5 all classes are in the ROOT namespace. Some packages will be in a sub-namespace, e.g. ROOT::Reflex. For backward compatibility with the previous versions of ROOT, where all classes were in the global namespace, we have by default using namespace ROOT; in all headers. However, this can be turned off by defining the USE_ROOT_NAMESPACE macro.; Using comments to document the code; ROOT chose Doxygen for its code documentation: please refer to this how-to for all the details.; Source file layout; Each source file, header or implementation file starts with a module identification line and an author line, e.g.:; / @(#)root/net / Author: Fons Rademakers 18/12/96 ; Where in the module identification line the file package is described by root/package",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/coding-conventions.html:4400,portab,portability,4400,d/coding-conventions.html,https://root.cern,https://root.cern/d/coding-conventions.html,1,['portab'],['portability']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManagerEditor.html:35529,inherit,inherited,35529,doc/master/classTGeoManagerEditor.html,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; TString GetCutOptionString ();  Return draw option string related to graphical cut in use. ;  ; TString GetHistAdditiveLabel ();  Return histogram additive options (Arr,Box,Col,Scat,Col,Text,E,Z,FB,BB). ;  ; TString GetHistContLabel ();  Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Editor.html:38658,inherit,inherited,38658,doc/master/classTH2Editor.html,https://root.cern,https://root.cern/doc/master/classTH2Editor.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions; void ChangeErrorCombo (Int_t i);  Change the error combo box entry. ;  ; TString GetHistAddLabel ();  Return the selected shape of the histogram (C, L, LF2). ;  ; TString GetHistCoordsLabel ();  Return the selected coordinate system of the his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1Editor.html:36796,inherit,inherited,36796,doc/master/classTH1Editor.html,https://root.cern,https://root.cern/doc/master/classTH1Editor.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveParamListEditor (const TEveParamListEditor &);  ; TEveParamListEditor & operator= (const TEveParamListEditor &);  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamListEditor.html:29514,inherit,inherited,29514,doc/master/classTEveParamListEditor.html,https://root.cern,https://root.cern/doc/master/classTEveParamListEditor.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGLClipSetEditor (const TGLClipSetEditor &)=delete;  ; TGLClipSetEditor & operator= (const TGLClipSetEditor &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetEditor.html:27117,inherit,inherited,27117,doc/master/classTGLClipSetEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetEditor.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGedFrame (const TGedFrame &)=delete;  ; TGedFrame & operator= (const TGedFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEdi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:24501,inherit,inherited,24501,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGLPShapeRef; TGLPhysicalShape * fPShape;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLPShapeObjEditor.html:33533,inherit,inherited,33533,doc/master/classTGLPShapeObjEditor.html,https://root.cern,https://root.cern/doc/master/classTGLPShapeObjEditor.html,1,['inherit'],['inherited']
Modifiability,"ng signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGL5DDataSetEditor.html:34685,inherit,inherited,34685,doc/master/classTGL5DDataSetEditor.html,https://root.cern,https://root.cern/doc/master/classTGL5DDataSetEditor.html,2,['inherit'],['inherited']
Modifiability,ng simultaneous pdfs to describe simultaneous fits to multiple datasets ;  ; file  rf502_wspacewrite.C;   Organisation and simultaneous fits: creating and writing a workspace ;  ; file  rf502_wspacewrite.py;   Organization and simultaneous fits: creating and writing a workspace ;  ; file  rf503_wspaceread.C;   Organisation and simultaneous fits: reading and using a workspace ;  ; file  rf503_wspaceread.py;   'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #503 ;  ; file  rf504_simwstool.C;   Organisation and simultaneous fits: using RooSimWSTool to construct a simultaneous pdf that is built of variations of an input pdf ;  ; file  rf504_simwstool.py;   Organization and simultaneous fits: using RooSimWSTool to construct a simultaneous pdf that is built of variations of an input pdf ;  ; file  rf505_asciicfg.C;   Organisation and simultaneous fits: reading and writing ASCII configuration files ;  ; file  rf505_asciicfg.py;   Organization and simultaneous fits: reading and writing ASCII configuration files ;  ; file  rf506_msgservice.C;   Organisation and simultaneous fits: tuning and customizing the RooFit message logging facility ;  ; file  rf506_msgservice.py;   Organization and simultaneous fits: tuning and customizing the ROOT.RooFit message logging facility ;  ; file  rf508_listsetmanip.C;   Organization and simultaneous fits: RooArgSet and RooArgList tools and tricks ;  ; file  rf508_listsetmanip.py;   'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #508 ;  ; file  rf509_wsinteractive.C;   Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration ;  ; file  rf509_wsinteractive.py;   Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration ;  ; file  rf510_wsnamedsets.C;   Organization and simultaneous fits: working with named parameter sets and parameter snapshots in workspaces ;  ; file  rf510_wsnamedsets.py;   'ORGANIZATION AND S,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:13226,config,configuration,13226,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['config'],['configuration']
Modifiability,"ng technique; ScanParameters(Int_t nbins, -- Parameters for scanning technique of making CDF: number; Int_t intOrder) of sampled bins and order of interpolation applied on numeric cdf. RooAbsReal* createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder). RooArgSet* getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; This helper function finds and collects all constraints terms of all coponent p.d.f.s; and returns a RooArgSet with all those terms. void clearEvalError(); Clear the evaluation error flag. Bool_t evalError(); Return the evaluation error flag. void raiseEvalError(); Raise the evaluation error flag. RooNumGenConfig* defaultGeneratorConfig(); Returns the default numeric MC generator configuration for all RooAbsReals. RooNumGenConfig* specialGeneratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumGenConfig* specialGeneratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumGenConfig* getGeneratorConfig() const; Return the numeric MC generator configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setGeneratorConfig(const RooNumGenConfig& config); Set the given configuration as default numeric MC generator; configuration for this object. void setGeneratorConfig(); Remove the specialized numeric MC generator configuration associated; with this object. void setNormRange(const char* rangeN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:77793,config,configuration,77793,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,9,['config'],['configuration']
Modifiability,"ng the Streamer facility. ; If the object derives from TNamed, this function is called by TNamed::Clone. TNamed::Clone uses the optional argument to set a new name to the newly created object.; If the object class has a DirectoryAutoAdd function, it will be called at the end of the function with the parameter gDirectory. This usually means that the object will be appended to the current ROOT directory. ; Reimplemented from TObject.; Definition at line 32 of file RooAbsBinning.h. ◆ DeclFileName(). static const char * RooAbsBinning::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 125 of file RooAbsBinning.h. ◆ highBound(). virtual double RooAbsBinning::highBound ; (; ); const. pure virtual . Implemented in RooBinning, RooLinTransBinning, RooParamBinning, RooRangeBinning, and RooUniformBinning. ◆ highBoundFunc(). virtual RooAbsReal * RooAbsBinning::highBoundFunc ; (; ); const. inlinevirtual . Return pointer to RooAbsReal parameterized upper bound, if any. ; Reimplemented in RooParamBinning.; Definition at line 110 of file RooAbsBinning.h. ◆ insertHook(). virtual void RooAbsBinning::insertHook ; (; RooAbsRealLValue & ; ); const. inlinevirtual . Hook interface function to execute code upon insertion into a RooAbsRealLValue. ; Reimplemented in RooParamBinning.; Definition at line 118 of file RooAbsBinning.h. ◆ IsA(). TClass * RooAbsBinning::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in RooBinning, RooLinTransBinning, RooParamBinning, RooRangeBinning, and RooUniformBinning.; Definition at line 125 of file RooAbsBinning.h. ◆ isParameterized(). virtual bool RooAbsBinning::isParameterized ; (; ); const. inlinevirtual . Interface function. ; If true, min/max of binning is parameterized by external RooAbsReals. Default to false, unless overridden by a sub class. ; Reimplemented in RooParamBinning.; Definition at line 102 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsBinning.html:20515,parameteriz,parameterized,20515,doc/master/classRooAbsBinning.html,https://root.cern,https://root.cern/doc/master/classRooAbsBinning.html,1,['parameteriz'],['parameterized']
Modifiability,"ng the plain C-structure array; (1 element of the structure per element). Function Members (Methods); public:. ~iterator(); TTable::iteratoriterator(); TTable::iteratoriterator(const TTable::iterator& iter); TTable::iteratoriterator(const TTable& table, TTable::iterator::vec_const_iterator& arowPtr); void*operator void*() const; Bool_toperator!=(const TTable::iterator& t) const; Long_toperator*() const; TTable::iteratoroperator+(Int_t idx); voidoperator++(); voidoperator++(int); voidoperator+=(Int_t idx); TTable::iteratoroperator-(Int_t idx); Int_toperator-(const TTable::iterator& it) const; voidoperator--(); voidoperator--(int); voidoperator-=(Int_t idx); TTable::iterator&operator=(const TTable::iterator& iter); Bool_toperator==(const TTable::iterator& t) const; void*rowPtr() const; const Long_t&RowSize() const; const TTable&Table() const. Data Members; private:. TTable::iterator::vec_iteratorfCurrentRow; Long_tfRowSize; const TTable*fThisTable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTable & operator=(const TTable::iterator& iter). iterator(); {;}. iterator(const TTable& table, TTable::iterator::vec_const_iterator& arowPtr); {;}. iterator(const TTable& table, TTable::iterator::vec_const_iterator& arowPtr); fCurrentRow(* const_cast<vector<Long_t>::iterator *>(&arowPtr) ) {;}. {;}. void operator++(); { ++fCurrentRow; }. void operator++(int ); { fCurrentRow++; }. void operator--(); { --fCurrentRow; }. void operator--(int ); { fCurrentRow--; }. iterator operator+(Int_t idx); { std::vector<Long_t>::iterator addition = fCurrentRow+idx; return iterator(*fThisTable,addition); }. iterator operator-(Int_t idx); { std::vector<Long_t>::iterator subtraction = fCurrentRow-idx; return iterator(*fThisTable,subtraction); }. void operator+=(Int_t idx); { fCurrentRow+=idx; }. void operator-=(Int_t idx); { fCurrentRow-=idx; }. void * rowPtr() const; { return (void *)(((const char *)fThisTable->GetArray()) + (*fCurrentRow)*fRowSize );",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTable__iterator.html:1306,Inherit,Inheritance,1306,root/html534/TTable__iterator.html,https://root.cern,https://root.cern/root/html534/TTable__iterator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng the roots of a function, but slowest one.; See the <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Root-Bracketing-Algorithms.html"">GSL manual</A> for more information; @ingroup RootFinders. Function Members (Methods); public:. virtual~Brent(); ROOT::Math::Roots::BrentBrent(); ROOT::Math::GSLRootFinderROOT::Math::GSLRootFinder::GSLRootFinder(); ROOT::Math::IRootFinderMethodROOT::Math::IRootFinderMethod::IRootFinderMethod(); ROOT::Math::IRootFinderMethodROOT::Math::IRootFinderMethod::IRootFinderMethod(const ROOT::Math::IRootFinderMethod&); virtual intROOT::Math::GSLRootFinder::Iterate(); virtual intROOT::Math::GSLRootFinder::Iterations() const; virtual const char*ROOT::Math::GSLRootFinder::Name() const; virtual doubleROOT::Math::GSLRootFinder::Root() const; virtual boolROOT::Math::GSLRootFinder::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); boolROOT::Math::GSLRootFinder::SetFunction(ROOT::Math::GSLRootFinder::GSLFuncPointer f, void* params, double xlow, double xup); virtual boolROOT::Math::GSLRootFinder::Solve(int maxIter = 100, double absTol = 1.0E-8, double relTol = 1.0E-10); virtual intROOT::Math::GSLRootFinder::Status() const. protected:. voidROOT::Math::GSLRootFinder::FreeSolver(); voidROOT::Math::GSLRootFinder::SetSolver(ROOT::Math::GSLRootFSolver* s). private:. ROOT::Math::Roots::BrentBrent(const ROOT::Math::Roots::Brent&); ROOT::Math::Roots::Brent&operator=(const ROOT::Math::Roots::Brent&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Brent(). virtual ~Brent(). Brent(const ROOT::Math::Roots::Brent& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Roots__Brent.html:1876,Inherit,Inheritance,1876,root/html602/ROOT__Math__Roots__Brent.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Roots__Brent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng the roots of a function, but slowest one.; See the <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Root-Bracketing-Algorithms.html"">GSL manual</A> for more information; @ingroup RootFinders. Function Members (Methods); public:. virtual~Brent(); ROOT::Math::Roots::BrentBrent(); ROOT::Math::GSLRootFinderROOT::Math::GSLRootFinder::GSLRootFinder(); ROOT::Math::IRootFinderMethodROOT::Math::IRootFinderMethod::IRootFinderMethod(); ROOT::Math::IRootFinderMethodROOT::Math::IRootFinderMethod::IRootFinderMethod(const ROOT::Math::IRootFinderMethod&); virtual intROOT::Math::GSLRootFinder::Iterate(); virtual intROOT::Math::GSLRootFinder::Iterations() const; virtual const char*ROOT::Math::GSLRootFinder::Name() const; virtual doubleROOT::Math::GSLRootFinder::Root() const; virtual boolROOT::Math::GSLRootFinder::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); boolROOT::Math::GSLRootFinder::SetFunction(ROOT::Math::GSLRootFinder::GSLFuncPointer f, void* params, double xlow, double xup); virtual boolROOT::Math::GSLRootFinder::Solve(int maxIter = 100, double absTol = 1.0E-8, double relTol = 1.0E-10); virtual intROOT::Math::GSLRootFinder::Status() const. protected:. voidROOT::Math::GSLRootFinder::FreeSolver(); voidROOT::Math::GSLRootFinder::SetSolver(ROOT::Math::GSLRootFSolver* s). private:. ROOT::Math::Roots::BrentBrent(const ROOT::Math::Roots::Brent&); ROOT::Math::Roots::Brent&operator=(const ROOT::Math::Roots::Brent&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Brent(). virtual ~Brent(). Brent(const ROOT::Math::Roots::Brent& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__Roots__Brent.html:1876,Inherit,Inheritance,1876,root/html604/ROOT__Math__Roots__Brent.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__Roots__Brent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng the up and down cursor keys to change the numerical values.; The step size can be selected with control and shift keys:; -- small step (1 unit/factor of 3); shift medium step (10 units/factor of 10); control large step (100 units/factor of 30); shift-control huge step (1000 units/factor of 100). The steps are either linear or logarithmic. The default behaviour; is set when the entry field is created, but it can be changed by; pressing the alt key at the same time. Changing the number in the widget will generate the event:; kC_TEXTENTRY, kTE_TEXTCHANGED, widget id, 0.; Hitting the enter key will generate:; kC_TEXTENTRY, kTE_ENTER, widget id, 0.; Hitting the tab key will generate:; kC_TEXTENTRY, kTE_TAB, widget id, 0. /*. */. Function Members (Methods); public:. TGNumberFormat(); TGNumberFormat(const TGNumberFormat&); virtual~TGNumberFormat(); static TClass*Class(); virtual TClass*IsA() const; TGNumberFormat&operator=(const TGNumberFormat&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. enum EStyle { kNESInteger; kNESRealOne; kNESRealTwo; kNESRealThree; kNESRealFour; kNESReal; kNESDegree; kNESMinSec; kNESHourMin; kNESHourMinSec; kNESDayMYear; kNESMDayYear; kNESHex; };; enum EAttribute { kNEAAnyNumber; kNEANonNegative; kNEAPositive; };; enum ELimit { kNELNoLimits; kNELLimitMin; kNELLimitMax; kNELLimitMinMax; };; enum EStepSize { kNSSSmall; kNSSMedium; kNSSLarge; kNSSHuge; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TGNumberFormat(); { }. TGNumberEntry& operator=(const TGNumberFormat& ). » Author: Daniel Sigg 03/09/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-04 16:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGNumberFormat.html:3576,Inherit,Inheritance,3576,root/html534/TGNumberFormat.html,https://root.cern,https://root.cern/root/html534/TGNumberFormat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenCategory Generic category-to-category function based on user supplied mapping function; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:35280,variab,variables,35280,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['variab'],['variables']
Modifiability,"ng to a double. ;  ; virtual std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:29409,config,config,29409,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,3,['config'],"['config', 'configuration']"
Modifiability,"ng up real-time data representation for distributed computations. By calling the LiveVisualize function, you can observe the canvas updating with the intermediate results of the histograms as the distributed computation progresses.; from dask.distributed import LocalCluster, Client; import ROOT; ; # Import the live visualization function; LiveVisualize = ROOT.RDF.Experimental.Distributed.LiveVisualize; ; # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ; # Function to create a Dask cluster and return the client; def create_connection():; cluster = LocalCluster(n_workers=4, threads_per_worker=1, processes=True, memory_limit=""2GiB""); client = Client(cluster); return client; ; # Function to fit a Gaussian function to the plot; def fit_gaus(plot):; plot.Fit(""gaus""); ; if __name__ == ""__main__"":; # Setup connection to a Dask cluster; connection = create_connection(); ; # Create an RDataFrame that will use Dask as a backend for computations; num_entries = 100000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=30); ; # Define a gaussean distribution with a variable mean; dd = d.Define(""x"", f""gRandom->Gaus(10*rdfentry_/{num_entries}, 2)"")\; .Define(""y"", f""gRandom->Gaus(10*rdfentry_/{num_entries}, 3)"")\; ; # Create a 1D and a 2D histogram using the defined columns; h_normal_1d = dd.Histo1D((""normal_1d"", ""1D Histogram of a Normal Distribution"",; 100, -10, 20),; ""x""); ; h_normal_2d = dd.Histo2D((""normal_2d"", ""2D Histogram of a Normal Distribution"",; 100, -15, 25, ; 100, -15, 25; ), ""x"", ""y""); ; # Apply LiveVisualize to the histograms. ; # The `fit_gaus` function will be applied to the accumulating partial result ; # of the 1D histogram. The 2D histogram will not be further modified, just drawn. ; # Find more details about usage of LiveVisualize in the RDataFrame docs.; LiveVisualize({h_normal_1d: fit_gaus, h_normal_2d: None}); ; # Plot the histograms side by side on a canvas; c = ROOT.TCanvas(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf003__live__visualization_8py.html:1566,variab,variable,1566,doc/master/distrdf003__live__visualization_8py.html,https://root.cern,https://root.cern/doc/master/distrdf003__live__visualization_8py.html,1,['variab'],['variable']
Modifiability,"ng variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Protected Member Functions; void GetGeneticOptions (ROOT::Math::MinimizerOptions &opt) const;  . Protected Attributes; TMVA::IFitterTarget * fFitness;  ; double fMinValue;  ; GeneticMinimizerParameters fParameters;  ; std::vector< TMVA::Interval * > fRanges;  ; std::vector< double > fResult;  ;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <Math/GeneticMinimizer.h>. Inheritance diagram for ROOT::Math::GeneticMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GeneticMinimizer(). ROOT::Math::GeneticMinimizer::GeneticMinimizer ; (; int ; i = 0). Definition at line 99 of file GeneticMinimizer.cxx. ◆ ~GeneticMinimizer(). ROOT::Math::GeneticMinimizer::~GeneticMinimizer ; (; ). override . Definition at line 117 of file GeneticMinimizer.cxx. Member Function Documentation. ◆ Clear(). void ROOT::Math::GeneticMinimizer::Clear ; (; ). overridevirtual . reset for consecutive minimization - implement if needed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 126 of file GeneticMinim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:10557,inherit,inherited,10557,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,1,['inherit'],['inherited']
Modifiability,"ng with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * GetHtml () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void GetName (TString &name) const;  Get the full name, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDocDirective.h>. Inheritance diagram for TDocDirective:. This browser is not able to show SV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocDirective.html:11559,inherit,inherited,11559,doc/master/classTDocDirective.html,https://root.cern,https://root.cern/doc/master/classTDocDirective.html,1,['inherit'],['inherited']
Modifiability,"ng& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA; check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; it is not again checked in each of these subsequet calls.. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& methodTag, Double_t aux = 0); evaluates the multiclass MVA. TMVA::IMethod* FindMVA(const TString& methodTag); return pointer to method with tag ""methodTag"". TMVA::MethodCuts* FindCutsMVA(const TString& methodTag); special function for Cuts to avoid dynamic_casts in ROOT macros,; which are not properly handled by CINT. Double_t GetProba(const TString& methodTag, Double_t ap_sig = 0.5, Double_t mvaVal = -9999999); evaluates probability of MVA for given set of input variables. Double_t GetRarity(const TString& methodTag, Double_t mvaVal = -9999999); evaluates the MVA's rarity. void DecodeVarNames( const std::string& varNames ); decodes ""name1:name2:..."" form. void DecodeVarNames(const TString& varNames); decodes ""name1:name2:..."" form. Double_t GetMVAError() const; returns error on MVA response for given event; NOTE: must be called AFTER ""EvaluateMVA(...)"" call !. { return fMvaEventError; }. Double_t GetMVAErrorLower() const; { return fMvaEventError; }. Double_t GetMVAErrorUpper() const; { return fMvaEventErrorUpper; }. const char* GetName() const; accessors. { return ""Reader""; }. Bool_t Verbose( void ); { return fVerbose; }. void SetVerbose(Bool_t v); { fVerbose = v; }. const DataSetInfo& DataInfo() const; { return fDataSetInfo; }. DataSetInfo& DataInfo(); { return fDataSetInfo; }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag » Copyright (c)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Reader.html:14709,variab,variables,14709,root/html534/TMVA__Reader.html,https://root.cern,https://root.cern/root/html534/TMVA__Reader.html,2,['variab'],['variables']
Modifiability,"ng& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA; check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; it is not again checked in each of these subsequet calls.. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& methodTag, Double_t aux = 0); evaluates the multiclass MVA. TMVA::IMethod* FindMVA(const TString& methodTag); return pointer to method with tag ""methodTag"". TMVA::MethodCuts* FindCutsMVA(const TString& methodTag); special function for Cuts to avoid dynamic_casts in ROOT macros,; which are not properly handled by CINT. Double_t GetProba(const TString& methodTag, Double_t ap_sig = 0.5, Double_t mvaVal = -9999999); evaluates probability of MVA for given set of input variables. Double_t GetRarity(const TString& methodTag, Double_t mvaVal = -9999999); evaluates the MVA's rarity. void DecodeVarNames( const std::string& varNames ); decodes ""name1:name2:..."" form. void DecodeVarNames(const TString& varNames); decodes ""name1:name2:..."" form. Reader(const TString& theOption = """", Bool_t verbose = 0); without prior specification of variables. Double_t GetMVAError() const; returns error on MVA response for given event; NOTE: must be called AFTER ""EvaluateMVA(...)"" call !. { return fMvaEventError; }. Double_t GetMVAErrorLower() const; { return fMvaEventError; }. Double_t GetMVAErrorUpper() const; { return fMvaEventErrorUpper; }. const char* GetName() const; accessors. { return ""Reader""; }. Bool_t Verbose( void ); { return fVerbose; }. void SetVerbose(Bool_t v); { fVerbose = v; }. const DataSetInfo& DataInfo() const; { return fDataSetInfo; }. DataSetInfo& DataInfo(); { return fDataSetInfo; }. » Author: Andreas Hoecker, Pe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Reader.html:15287,variab,variables,15287,root/html602/TMVA__Reader.html,https://root.cern,https://root.cern/root/html602/TMVA__Reader.html,4,['variab'],['variables']
Modifiability,"ng& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val); set variable values. bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& varObj) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:7640,variab,variable,7640,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],['variable']
Modifiability,"ng& name, double val, double step, double upper); set a new upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& ) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). bool SetVariableInitialRange(unsigned int , double , double ); set the initial range of an existing variable. bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. const double * X() const; return pointer to X values at the minimum. double Edm() const; return expected distance reached from the minimum (re-implement if minimizer provides it. { return -1; }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return NULL; }. unsigned int NCalls() const; number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:6949,variab,variable,6949,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,2,['variab'],['variable']
Modifiability,"ng& name, double val, double step, double upper); set a new upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& pars) const; get variable settings in a variable object (like ROOT::Fit::ParamsSettings). bool SetVariableInitialRange(unsigned int , double , double ); set the initial range of an existing variable. bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. const double * X() const; return pointer to X values at the minimum. double Edm() const; return expected distance reached from the minimum (re-implement if minimizer provides it. { return -1; }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return NULL; }. unsigned int NCalls() const; nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Minimizer.html:7213,variab,variable,7213,root/html602/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Minimizer.html,4,['variab'],['variable']
Modifiability,"ng& theOption = """", TDirectory* theTargetDir = 0); standard constructor for the H-Matrix method. MethodHMatrix(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. void Init( void ); default initialization called by all constructors. ~MethodHMatrix( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); MethodHMatrix options: none (apart from those implemented in MethodBase). void ProcessOptions(); process user options. void Train( void ); computes H-matrices for signal and background samples. void ComputeCovariance(Bool_t , TMatrixD* ); compute covariance matrix. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns the H-matrix signal estimator. Double_t GetChi2(TMVA::Types::ESBType ); compute chi2-estimator for event according to type (signal/background). void AddWeightsXMLTo(void* parent) const; create XML description for HMatrix classification. void ReadWeightsFromXML(void* wghtnode); read weights from XML file. void ReadWeightsFromStream(istream& istr); read variable names and min/max; NOTE: the latter values are mandatory for the normalisation; in the reader application !!!. void MakeClassSpecific(ostream& , const TString& ) const; write Fisher-specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodHMatrix.html:18501,variab,variable,18501,root/html534/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodHMatrix.html,4,['variab'],"['variable', 'variables']"
Modifiability,"ng& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodHMatrix&operator=(const TMVA::MethodHMatrix&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodHMatrix.html:10849,Config,Configurable,10849,root/html602/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodHMatrix.html,2,['Config'],['Configurable']
Modifiability,"ng& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodRuleFit&operator=(const TMVA::MethodRuleFit&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodRuleFit.html:10933,Config,Configurable,10933,root/html602/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodRuleFit.html,2,['Config'],['Configurable']
Modifiability,"ng& theOption = ""KNN"", TDirectory* theTargetDir = __null); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodKNN&operator=(const TMVA::MethodKNN&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& rf); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodKNN.html:9903,Config,Configurable,9903,root/html602/TMVA__MethodKNN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodKNN.html,2,['Config'],['Configurable']
Modifiability,"ng& theWeightFile, TDirectory* theTargetDir = __null); TMVA::MethodCutsMethodCuts(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""MC:150:10000:"", TDirectory* theTargetFile = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodCuts&operator=(const TMVA::MethodCuts&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidPrintCuts(Double_t effS) const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTarget",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:12303,Config,Configurable,12303,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,2,['Config'],['Configurable']
Modifiability,"ng&, double); voidSetLimits(unsigned int, double, double); voidSetLimits(const string&, double, double); voidSetLowerLimit(unsigned int, double); voidSetLowerLimit(const string&, double); voidSetName(unsigned int iext, const string& name); voidSetPrecision(double eps); voidSetUpperLimit(unsigned int, double); voidSetUpperLimit(const string&, double); voidSetValue(unsigned int, double); voidSetValue(const string&, double); const ROOT::Minuit2::MnUserTransformation&Trafo() const; doubleValue(unsigned int) const; doubleValue(const string&) const; unsigned intVariableParameters() const. Data Members; private:. intfCovStatuscovariance matrix status; ROOT::Minuit2::MnUserCovariancefCovariance; boolfCovarianceValid; doublefEDM; doublefFVal; boolfGCCValid; ROOT::Minuit2::MnGlobalCorrelationCoefffGlobalCC; ROOT::Minuit2::MnUserCovariancefIntCovariance; vector<double>fIntParameters; unsigned intfNFcn; ROOT::Minuit2::MnUserParametersfParameters; boolfValid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnUserParameterState(); default constructor (invalid state). {}. MnUserParameterState(const std::vector<double>&, const std::vector<double>&); construct from user parameters (before minimization). MnUserParameterState(const MnUserParameters&). MnUserParameterState(const ROOT::Minuit2::MinimumState& , double , const ROOT::Minuit2::MnUserTransformation& ); construct from user parameters + covariance (before minimization). MnUserParameterState(const std::vector<double>&, const MnUserCovariance&). MnUserParameterState(const MnUserParameters&, const MnUserCovariance&). MnUserParameterState(const ROOT::Minuit2::MinimumState& , double , const ROOT::Minuit2::MnUserTransformation& ); construct from internal parameters (after minimization). ~MnUserParameterState(); {}. MnUserParameterState(const MnUserParameterState& state); {}. MnUserParameterState& operator=(const ROOT::Minuit2::MnUserParameterState& state). const MnGlobalCorrelationCoeff& Glo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnUserParameterState.html:3999,Inherit,Inheritance,3999,root/html602/ROOT__Minuit2__MnUserParameterState.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnUserParameterState.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng&, vector<Double_t>&, const Double_t) const; virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Double_t>fBestParsthe pars that optimise (minimise) the estimator; TStringfConvergerfitmethod uses fConverger as intermediate step to converge into local minimas; TMVA::IFitterTarget*fConvergerFitterintermediate fitter; TStringfFitMethodestimator optimisation method; TMVA::FitterBase*fFitterthe fitter used in the training; TFormula*fFormulathe discrimination function; TStringfFormulaStringPstring with function; TStringfFormulaStringTstring with function; UInt_tfNParsnumber of parameters; Int_tfOutputDimensionsnumber of output values; vector<Interval*>fParRangeranges of parameters;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFDA.html:15647,variab,variables,15647,root/html528/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFDA.html,1,['variab'],['variables']
Modifiability,"ng() = GetError();; 1840 return kTRUE;; 1841 }; 1842 ; 1843 // read first argument; 1844 patbuf0 = """";; 1845 int cnt = 0;; 1846#if defined(R__AIX); 1847again:; 1848#endif; 1849 for (ch = fgetc(pf); ch != EOF && ch != ' ' && ch != '\n'; ch = fgetc(pf)) {; 1850 patbuf0.Append(ch);; 1851 cnt++;; 1852 }; 1853#if defined(R__AIX); 1854 // Work around bug timing problem due to delay in forking a large program; 1855 if (cnt == 0 && ch == EOF) goto again;; 1856#endif; 1857 ; 1858 // skip rest of pipe; 1859 while (ch != EOF) {; 1860 ch = fgetc(pf);; 1861 if (ch == ' ' || ch == '\t') {; 1862 GetLastErrorString() = ""expression ambigous"";; 1863 ::pclose(pf);; 1864 return kTRUE;; 1865 }; 1866 }; 1867 ; 1868 ::pclose(pf);; 1869 ; 1870 return kFALSE;; 1871}; 1872#endif; 1873 ; 1874////////////////////////////////////////////////////////////////////////////////; 1875/// Expand a pathname getting rid of special shell characaters like ~.$, etc.; 1876/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1877/// environment variables in a pathname. If compatibility is not an issue; 1878/// you can use on Unix directly $XXX. The user must delete returned string.; 1879/// Returns the expanded pathname or 0 in case of error.; 1880/// The user must delete returned string (delete []).; 1881 ; 1882char *TUnixSystem::ExpandPathName(const char *path); 1883{; 1884 TString patbuf = path;; 1885 if (ExpandPathName(patbuf)); 1886 return nullptr;; 1887 return StrDup(patbuf.Data());; 1888}; 1889 ; 1890////////////////////////////////////////////////////////////////////////////////; 1891/// Set the file permission bits. Returns -1 in case or error, 0 otherwise.; 1892 ; 1893int TUnixSystem::Chmod(const char *file, UInt_t mode); 1894{; 1895 return ::chmod(file, mode);; 1896}; 1897 ; 1898////////////////////////////////////////////////////////////////////////////////; 1899/// Set the process file creation mode mask.; 1900 ; 1901int TUnixSystem::Umask(Int_t mask); 1902{; 1903 return ::uma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:57480,variab,variables,57480,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,"ng(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfAreaBin area; Bool_tfChangedFor the 3D Painter; Double_tfContentBin content; Int_tfNumberBin number of the bin in TH2Poly; TObject*fPolyObject holding the polygon definition; Double_tfXmaxX maximum value; Double_tfXminX minimum value; Double_tfYmaxY maximum value; Double_tfYminY minimum value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2PolyBin(). TH2PolyBin(TObject* poly, Int_t bin_number). virtual ~TH2PolyBin(). void ClearContent(); {fContent = 0;}. void Fill(Double_t w); {fContent = fContent+w; SetChanged(true);}. Double_t GetArea(). Double_t GetContent() const; {return fContent;}. Bool_t GetChanged() const; {return fChanged;}. Int_t GetBinNumber() const; {return fNumber;}. TObject * GetPolygon() const; {return fPoly;}. Double_t GetXMax(). Double_t GetXMin(). Double_t GetYMax(). Double_t GetYMin(). Bool_t IsInside(Double_t x, Double_t y) const. void SetChanged(Bool_t flag); {fChanged = flag;}. void SetContent(Double_t content); {fContent = content; SetChanged(true);}. » Author: Olivier Couet, Deniz Gunceler » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH2PolyBin.html:5822,Inherit,Inheritance,5822,root/html534/TH2PolyBin.html,https://root.cern,https://root.cern/root/html534/TH2PolyBin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfAreaBin area; Bool_tfChangedFor the 3D Painter; Double_tfContentBin content; Int_tfNumberBin number of the bin in TH2Poly; TObject*fPolyObject holding the polygon definition; Double_tfXmaxX maximum value; Double_tfXminX minimum value; Double_tfYmaxY maximum value; Double_tfYminY minimum value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2PolyBin(). TH2PolyBin(TObject* poly, Int_t bin_number). virtual ~TH2PolyBin(). void ClearContent(); {fContent = 0;}. void Fill(Double_t w); {fContent = fContent+w; SetChanged(true);}. Double_t GetArea(). Double_t GetContent() const; {return fContent;}. Bool_t GetChanged() const; {return fChanged;}. Int_t GetBinNumber() const; {return fNumber;}. TObject * GetPolygon() const; {return fPoly;}. Double_t GetXMax(). Double_t GetXMin(). Double_t GetYMax(). Double_t GetYMin(). Bool_t IsInside(Double_t x, Double_t y) const. void SetChanged(Bool_t flag); {fChanged = flag;}. void SetContent(Double_t content); {fContent = content; SetChanged(true);}. » Author: Olivier Couet, Deniz Gunceler » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TH2Poly.h 37945 2011-02-02 15:35:05Z couet $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2PolyBin.html:5803,Inherit,Inheritance,5803,root/html532/TH2PolyBin.html,https://root.cern,https://root.cern/root/html532/TH2PolyBin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooAbsData*fParameterPointseither a histogram (RooDataHist) or a tree (RooDataSet); vector<SamplingSummary>fSamplingSummariescomposite of several AcceptanceRegions; RooStats::SamplingSummaryLookupfSamplingSummaryLookup. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ConfidenceBelt(); Default constructor. ConfidenceBelt(const char* name); Alternate constructor. ConfidenceBelt(const char* name, const char* title); Alternate constructor. ConfidenceBelt(const char* name, RooAbsData& ); Alternate constructor. ConfidenceBelt(const char* name, const char* title, RooAbsData& ); Alternate constructor. ~ConfidenceBelt(); Destructor. Double_t GetAcceptanceRegionMin(RooArgSet& , Double_t cl = -1., Double_t leftside = -1.). Double_t GetAcceptanceRegionMax(RooArgSet& , Double_t cl = -1., Double_t leftside = -1.). vector<Double_t> ConfidenceLevels() const. void AddAcceptanceRegion(RooArgSet& point, Int_t dataSetIndex, Double_t lower, Double_t upper, Double_t cl = -1., Double_t leftside = -1.). void AddAcceptanceRegion(RooArgSet& , RooStats::AcceptanceRegion region, Double_t cl = -1., Double_t leftside = -1.). AcceptanceRegion* GetAcceptanceRegion(RooArgSet& , Double_t cl = -1., Double_t leftside = -1.); Method t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ConfidenceBelt.html:7149,Inherit,Inheritance,7149,root/html532/RooStats__ConfidenceBelt.html,https://root.cern,https://root.cern/root/html532/RooStats__ConfidenceBelt.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng(vector<Double_t>&); voidUsefulSortAscending(vector<std::vector<Double_t> >&, vector<TString>* vs = 0); voidUsefulSortDescending(vector<Double_t>&); voidUsefulSortDescending(vector<std::vector<Double_t> >&, vector<TString>* vs = 0); voidWriteFloatArbitraryPrecision(Float_t val, ostream& os); voidWriteTMatrixDToXML(void* node, const char* name, TMatrixD* mat); voidWriteTVectorDToXML(void* node, const char* name, TVectorD* vec); TXMLEngine&xmlengine(); intxmlenginebuffersize(). private:. Double_tGetYMean_binX(const TH2&, Int_t bin_x); TMVA::ToolsTools(). Data Members; public:. enum EWelcomeMessage { kStandardWelcomeMsg; kIsometricWelcomeMsg; kBlockWelcomeMsg; kLeanWelcomeMsg; kLogoWelcomeMsg; kSmall1WelcomeMsg; kSmall2WelcomeMsg; kOriginalWelcomeMsgColor; kOriginalWelcomeMsgBW; };; enum ECitation { kPlainText; kBibTeX; kLaTeX; kHtmlLink; };. public:. TMVA::MsgLogger*fLogger; const TStringfRegexp; TXMLEngine*fXMLEngine; static TMVA::Tools*fgTools. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMVA::Tools& Instance(); { return fgTools?*(fgTools): *(fgTools = new Tools()); }. void DestroyInstance(). Tools(); constructor. ~Tools(); destructor. Double_t NormVariable(Double_t x, Double_t xmin, Double_t xmax); normalise to output range: [-1, 1]. Double_t GetSeparation(TH1* S, TH1* B) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x) - B(x))^2/(S(x) + B(x)) dx }. Double_t GetSeparation(const TMVA::PDF& pdfS, const TMVA::PDF& pdfB) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x) - B(x))2/(S(x) + B(x)) dx }. void ComputeStat(const vector<TMVA::Event*>& , vector<Float_t>* , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Int_t signalClass, Bool_t norm = kFALSE); sanity check. TMatrixD* GetSQRootMatrix(TMatrixDSym* symMat); square-root of symmetric matrix; of course the resulting sqrtMat is also symmetric, but it's easier to; treat it as a general matrix. const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Tools.html:5202,Inherit,Inheritance,5202,root/html534/TMVA__Tools.html,https://root.cern,https://root.cern/root/html534/TMVA__Tools.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem in a common way for several concrete calculators. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~HypoTestCalculator(); static TClass*Class(); virtual RooStats::HypoTestResult*GetHypoTest() const; RooStats::HypoTestCalculatorHypoTestCalculator(); RooStats::HypoTestCalculatorHypoTestCalculator(const RooStats::HypoTestCalculator&); virtual TClass*IsA() const; RooStats::HypoTestCalculator&operator=(const RooStats::HypoTestCalculator&); virtual voidSetAlternateModel(const RooStats::ModelConfig& model); virtual voidSetCommonModel(const RooStats::ModelConfig& model); virtual voidSetData(RooAbsData& data); virtual voidSetNullModel(const RooStats::ModelConfig& model); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~HypoTestCalculator(); {}. HypoTestResult* GetHypoTest() const; main interface to get a HypoTestResult, pure virtual. void SetCommonModel(const RooStats::ModelConfig& model); Set a common model for both the null and alternate, add to the the workspace if not already there. SetNullModel(const RooStats::ModelConfig& model). SetAlternateModel(const RooStats::ModelConfig& model). void SetData(RooAbsData& data); Set the DataSet. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestCalculator.html:2355,Inherit,Inheritance,2355,root/html602/RooStats__HypoTestCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem in a common way for several concrete calculators. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~HypoTestCalculator(); static TClass*Class(); virtual RooStats::HypoTestResult*GetHypoTest() const; RooStats::HypoTestCalculatorHypoTestCalculator(); RooStats::HypoTestCalculatorHypoTestCalculator(const RooStats::HypoTestCalculator&); virtual TClass*IsA() const; RooStats::HypoTestCalculator&operator=(const RooStats::HypoTestCalculator&); virtual voidSetAlternateModel(const RooStats::ModelConfig& model); virtual voidSetCommonModel(const RooStats::ModelConfig& model); virtual voidSetData(RooAbsData& data); virtual voidSetNullModel(const RooStats::ModelConfig& model); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~HypoTestCalculator(); {}. HypoTestResult* GetHypoTest() const; main interface to get a HypoTestResult, pure virtual. void SetCommonModel(const RooStats::ModelConfig& model); Set a common model for both the null and alternate, add to the the workspace if not already there. SetNullModel(const RooStats::ModelConfig& model). SetAlternateModel(const RooStats::ModelConfig& model). void SetData(RooAbsData& data); Set the DataSet. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__HypoTestCalculator.html:2355,Inherit,Inheritance,2355,root/html604/RooStats__HypoTestCalculator.html,https://root.cern,https://root.cern/root/html604/RooStats__HypoTestCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng); and ""beta"" beeing a free parameter (standard: beta = 1) that modifies the; boosting. Double_t Bagging(UInt_t imember); call it Bootstrapping, re-sampling or whatever you like, in the end it is nothing; else but applying ""random boostweights"" to each event. void AddWeightsXMLTo(void* parent) const. void ReadWeightsFromStream(istream& istr); read the state of the method from an input stream. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); return the MVA value (range [-1;1]) that classifies the; event.according to the majority vote from the total number of; decision trees; In the literature I found that people actually use the; weighted majority vote (using the boost weights) .. However I; did not see any improvement in doing so :(; --> this is currently switched off. void WriteMonitoringHistosToFile( void ); here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); return the variable importance. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void ReadWeightsFromXML(void* ); {}. const std::vector<TMVA::IMethod*>& GetCommittee() const; accessors. { return fCommittee; }. const std::vector<Double_t>& GetBoostWeights() const; { return fBoostWeights; }. std::vector<IMethod*>& GetCommittee(); accessors. { return fCommittee; }. std::vector<Double_t>& GetBoostWeights(); { return fBoostWeights; }. » Author: Andreas Hoecker, Joerg Ste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCommittee.html:20284,variab,variable,20284,root/html528/TMVA__MethodCommittee.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCommittee.html,8,['variab'],"['variable', 'variables']"
Modifiability,"ng,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:19 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_double_double_.html:37570,variab,variable,37570,root/html534/RooCFunction3Binding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_double_double_.html,2,['variab'],['variable']
Modifiability,"ng,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:05 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3Binding_double_unsigned_int_double_double_.html:35019,variab,variable,35019,root/html530/RooCFunction3Binding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3Binding_double_unsigned_int_double_double_.html,1,['variab'],['variable']
Modifiability,"ng,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:24 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction3Binding_double_unsigned_int_double_double_.html:35398,variab,variable,35398,root/html532/RooCFunction3Binding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction3Binding_double_unsigned_int_double_double_.html,1,['variab'],['variable']
Modifiability,"ng,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:41:38 2015 » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction1PdfBinding_double_double_.html:46417,variab,variable,46417,root/html604/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction1PdfBinding_double_double_.html,2,['variab'],['variable']
Modifiability,"ng. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  . Private Member Functions;  TEveBox (const TEveBox &);  ; TEveBox & operator= (const TEveBox &);  . Friends; class TEveBoxGL;  . Additional Inherited Members;  Public Types inherited from TEveShape; typedef std::vector< TEveVector2 >::iterator vVector2_i;  ; typedef std::vector< TEveVector2 > vVector2_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:34077,inherit,inherited,34077,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,3,['inherit'],['inherited']
Modifiability,"ng. See the repective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized. /*. */. Function Members (Methods); public:. virtual~TIter(); TIter&Begin(); static TClass*Class(); static TIterEnd(); const TCollection*GetCollection() const; Option_t*GetOption() const; virtual TClass*IsA() const; TObject*Next(); Bool_toperator!=(const TIter& aIter) const; TObject*operator()(); TObject*operator*() const; TIter&operator++(); TIter&operator=(const TIter& rhs); Bool_toperator==(const TIter& aIter) const; voidReset(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TIter(TIterator* it); TIter(const TIter& iter); TIter(const TCollection* col, Bool_t dir = kIterForward). protected:. TIter(). Data Members; private:. TIterator*fIteratorcollection iterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TIter(const TIter& iter); Copy a TIter. This involves allocating a new TIterator of the right; sub class and assigning it with the original. TIter & operator=(const TIter& rhs); Assigning an TIter to another. This involves allocatiing a new TIterator; of the right sub class and assigning it with the original. TIter & Begin(); Pointing to the first element of the container. TIter End(); Pointing to the element after the last - to a nullptr value in our case. TObject * operator()(const char *name). TIter(); { }. TIter(const TCollection* col, Bool_t dir = kIterForward); { }. TIter(TIterator* it); { }. virtual ~TIter(); { SafeDelete(fIterator); }. TObject * Next(); { return fIterator ? fIterator->Next() : nullptr; }. const TCollection * GetCollection() const; { return fIterator ? fIterator->GetCollection() : nullptr; }. Option_t * GetOption() const; { return fIterator ? fIterator->GetOption() : """"; }. void Reset(); { if (fIterator) fIterat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TIter.html:1957,Inherit,Inheritance,1957,root/html602/TIter.html,https://root.cern,https://root.cern/root/html602/TIter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooNumIntConfig Class ReferenceRooFit » RooFit Core. ; Holds the configuration parameters of the various numeric integrators used by RooRealIntegral. ; RooRealIntegral and RooAbsPdf use this class in the (normalization) integral configuration interface ; Definition at line 25 of file RooNumIntConfig.h. Public Member Functions;  RooNumIntConfig ();  Constructor. ;  ;  RooNumIntConfig (const RooNumIntConfig &other);  Copy constructor. ;  ;  ~RooNumIntConfig () override;  Destructor. ;  ; bool addConfigSection (std::string const &name, const RooArgSet &inDefaultConfig, bool canIntegrate1D, bool canIntegrate2D, bool canIntegrateND, bool canIntegrateOpenEnded);  Add a configuration section for a particular integrator. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  ; double epsAbs () const;  ; double epsRel () const;  ; RooArgSet & getConfigSection (const char *name);  Return section with configuration parameters for integrator with given (class) name. ;  ; const RooArgSet & getConfigSection (const char *name) const;  Retrieve configuration information specific to integrator with given name. ;  ; TClass * IsA () const override;  ; RooCategory & method1D ();  ; const RooCategory & method1D () const;  ; RooCategory & method1DOpen ();  ; const RooCategory & method1DOpen () const;  ; RooCategory & method2D ();  ; const RooCategory & method2D () const;  ; RooCategory & method2DOpen ();  ; const RooCategory & method2DOpen () const;  ; RooCategory & methodND ();  ; const RooCategory & methodND () const;  ; RooCategory & methodNDOpen ();  ; const RooCategory & methodNDOpen () const;  ; RooNumIntConfig & operator= (const RooNumIntConfig &other);  Assignment operator from other RooNumIntConfig. ;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print its",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntConfig.html:1169,config,configuration,1169,doc/master/classRooNumIntConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"ng.; 2091 ; 2092TString TString::Itoa(Int_t value, Int_t base); 2093{; 2094 std::string buf;; 2095 // check that the base if valid; 2096 if (base < 2 || base > 36) {; 2097 Error(""TString::Itoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base) ;; 2098 return (TString(""!""));; 2099 }; 2100 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2101 Int_t quotient = value;; 2102 // Translating number to string with base:; 2103 do {; 2104 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ TMath::Abs(quotient % base) ];; 2105 quotient /= base;; 2106 } while (quotient);; 2107 // Append the negative sign; 2108 if (value < 0) buf += '-';; 2109 std::reverse(buf.begin(), buf.end());; 2110 return (TString(buf.data()));; 2111}; 2112 ; 2113////////////////////////////////////////////////////////////////////////////////; 2114/// Converts a UInt_t (twice the range of an Int_t) to a TString with respect; 2115/// to the base specified (2-36). Thus it is an enhanced version of sprintf; 2116/// (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; 2117/// In case of error returns the ""!"" string.; 2118 ; 2119TString TString::UItoa(UInt_t value, Int_t base); 2120{; 2121 std::string buf;; 2122 // check that the base if valid; 2123 if (base < 2 || base > 36) {; 2124 Error(""TString::UItoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2125 return (TString(""!""));; 2126 }; 2127 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2128 UInt_t quotient = value;; 2129 // Translating number to string with base:; 2130 do {; 2131 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ quotient % base ];; 2132 quotient /= base;; 2133 } while (quotient);; 2134 std::reverse(buf.begin(), buf.end());; 2135 return (TString(buf.data()));; 2136}; 2137 ; 2138////////////////////////////////////////////////////////////////////////////////; 2139/// Converts a Long64_t to a TString with respect to the base specified (2-36).; 2140/// Thus ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:66481,enhance,enhanced,66481,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,2,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"ng.; list<TEveElement*>TEveElement::fParentsList of parents.; Int_tfPickToSelect; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; G__p2memfuncfSelElement; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveSelection(const char* n = ""TEveSelection"", const char* t = """"); Constructor. void SetHighlightMode(); Set to 'highlight' mode. void DoElementSelect(TEveSelection::SelMap_i entry); Select element indicated by the entry and fill its; implied-selected set. void DoElementUnselect(TEveSelection::SelMap_i entry); Deselect element indicated by the entry and clear its; implied-selected set. Bool_t AcceptElement(TEveElement* el); Pre-addition check. Deny addition if el is already selected.; Virtual from TEveElement. void AddElement(TEveElement* el); Add an element into selection, virtual from TEveElement. void RemoveElement(TEveElement* el); Add an element into selection, virtual from TEveElement.; Overriden here just so that a signal can be emitted. void RemoveElementLocal(TEveElement* el); Virtual from TEveElement. void RemoveElements(); Add an element into selection, virtual from TEveElement.; Overriden here just so that a signal can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveSelection.html:24245,Inherit,Inheritance,24245,root/html532/TEveSelection.html,https://root.cern,https://root.cern/root/html532/TEveSelection.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng64_t &ent, Long64_t &bytes, Long64_t &calls);  ; TList * GetFailedPackets ();  ; Float_t GetInitTime () const;  ; virtual TDSetElement * GetNextPacket (TSlave *sl, TMessage *r);  Get next packet. ;  ; Float_t GetProcTime () const;  ; TNtuple * GetProgressPerf (Bool_t steal=kFALSE);  ; Long64_t GetReadCalls () const;  ; TMap * GetSlaveStats () const;  ; TProofProgressStatus * GetStatus ();  ; Long64_t GetTotalEntries () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const;  ; virtual void MarkBad (TSlave *, TProofProgressStatus *, TList **);  ; void SetFailedPackets (TList *list);  ; virtual void SetInitTime ();  Set the initialization time. ;  ; void SetProgressStatus (TProofProgressStatus *st);  ; void SetTotalEntries (Long64_t ent);  ; virtual void StopProcess (Bool_t abort, Bool_t stoptimer=kFALSE);  Stop process. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPacketizer.html:3660,inherit,inherited,3660,doc/master/classTVirtualPacketizer.html,https://root.cern,https://root.cern/doc/master/classTVirtualPacketizer.html,1,['inherit'],['inherited']
Modifiability,"ng64_tTTree::fSavedBytesNumber of autosaved bytes; Int_tTTree::fScanFieldNumber of runs before prompting in Scan; Int_tTTree::fTimerIntervalTimer interval in milliseconds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TBuffer*TTree::fTransientBuffer! Pointer to the current transient buffer.; TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tfTypeRWN (0) or CWN (1); Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); char*fXstorage area for RWN; Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THbookTree(); default constructor. THbookTree(const char* name, Int_t id); constructor. ~THbookTree(); destructor. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); get one entry from the hbook ntuple. void InitBranches(Long64_t entry); Initialize the branch addresses. void Print(Option_t* option = """") const; Print an overview of the hbook ntuple. Long64_t SetEntries(Long64_t n = -1); Set the number of entries in the tree header and its branches. THbookFile * GetHbookFile(); {return fFile;}. Int_t GetID(); {return fID;}. Int_t GetType(); {return fType;}. Float_t * GetX(); {return (Float_t*)fX;}. char * MakeX(Int_t nvars); {fX = new char[nvars]; return fX;}. void SetHbookFile(THbookFile* file); {fFile = file;}. void SetType(Int_t atype); {fType = atype;}. » Author: Rene Brun 18/02/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/hbook:$Id$ » Last generated: 2015-03-14 16:41; This page has been a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THbookTree.html:26845,Inherit,Inheritance,26845,root/html534/THbookTree.html,https://root.cern,https://root.cern/root/html534/THbookTree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng64_tTTree::fSavedBytesNumber of autosaved bytes; Int_tTTree::fScanFieldNumber of runs before prompting in Scan; Int_tTTree::fTimerIntervalTimer interval in milliseconds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TBuffer*TTree::fTransientBuffer! Pointer to the current transient buffer.; TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tfTypeRWN (0) or CWN (1); Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); char*fXstorage area for RWN; Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THbookTree(); default constructor. THbookTree(const char* name, Int_t id); constructor. ~THbookTree(); destructor. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); get one entry from the hbook ntuple. void InitBranches(Long64_t entry); Initialize the branch addresses. void Print(Option_t* option = """") const; Print an overview of the hbook ntuple. Long64_t SetEntries(Long64_t n = -1); Set the number of entries in the tree header and its branches. THbookFile * GetHbookFile(); {return fFile;}. Int_t GetID(); {return fID;}. Int_t GetType(); {return fType;}. Float_t * GetX(); {return (Float_t*)fX;}. char * MakeX(Int_t nvars); {fX = new char[nvars]; return fX;}. void SetHbookFile(THbookFile* file); {fFile = file;}. void SetType(Int_t atype); {fType = atype;}. » Author: Rene Brun 18/02/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/hbook:$Id: THbookTree.h 20882 2007-11-19 11:31:26Z rdm $ » Last gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookTree.html:25953,Inherit,Inheritance,25953,root/html532/THbookTree.html,https://root.cern,https://root.cern/root/html532/THbookTree.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng64_tfFirstObjId! id of first object to be read from the database; Bool_tfIgnoreVerification! ignore verification of names ; TStreamerInfo*TBufferFile::fInfoPointer to TStreamerInfo object writing/reading the buffer; vector<TStreamerInfo*>TBufferFile::fInfoStackStack of pointers to the TStreamerInfos; Long64_tfLastObjId! id of last object correspond to this key; TExMap*TBufferFile::fMapMap containing object,offset pairs for reading/writing; Int_tTBufferFile::fMapCountNumber of objects or classes in map; Int_tTBufferFile::fMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; Long64_tfObjIdCounter! counter of objects id; TExMap*fObjMap! Map between stored objects and object id; TObjArray*fObjectsInfos! array of objects info for selected key ; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tTBufferFile::fPidOffsetOffset to be added to the pid index in this key/buffer.; TMap*fPoolsMap! map of pools with data from different tables; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; TStringfReadBuffer! Buffer for read value; Int_tfReadVersionBuffer! buffer, used to by ReadVersion method; TSQLFile*fSQL! instance of TSQLFile; TSQLStructure*fStk! pointer on current active structure (stack head); TSQLStructure*fStructure! structures, created by object storing; Int_tTBuffer::fVersionBuffer format version; static Int_tTBufferFile::fgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferSQL2(); Default constructor, should not be used. TBufferSQL2(TBuffer::EMode mode); Creates buffer object to serailize/deserialize data to/from sql.; Mode should be either TBuffer::kRead or TBuffer::kWrite. TBufferSQL2(TBuffer::EMode mode, TSQLFile* file); Creates buffer object to serailize/deserialize data to/from sql.; This constructor should be used, if data from buffer supposed to be stored in file.; Mode should be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBufferSQL2.html:21808,extend,extending,21808,root/html530/TBufferSQL2.html,https://root.cern,https://root.cern/root/html530/TBufferSQL2.html,5,['extend'],['extending']
Modifiability,"ng64_t fBytesRead;  ; Float_t fEffSessions;  ; Float_t fEvtRateI;  ; Float_t fInitTime;  ; Float_t fMBRateI;  ; Long64_t fProcessed;  ; Float_t fProcTime;  ; Long64_t fTotal;  ; Int_t fTotSessions;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProof.h>. Inheritance diagram for TProofProgressInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofProgressInfo(). TProofProgressInfo::TProofProgressInfo ; (; Long64_t ; tot = 0, . Long64_t ; proc = 0, . Long64_t ; bytes = 0, . Float_t ; initt = -1., . Float_t ; proct = -1., . Float_t ; evts = -1., . Float_t ; mbs = -1., . Int_t ; actw = 0, . Int_t ; tsess = 0, . Float_t ; esess = 0. . ). inline . Definition at line 173 of file TProof.h. ◆ ~TProofProgressInfo(). TProofProgressInfo::~TProofProgressInfo ; (; ). inlineoverride . Definition at line 180 of file TProof.h. Member Function Documentation. ◆ Class(). static TClass * TProofProgressInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressInfo.html:9952,inherit,inherited,9952,doc/master/classTProofProgressInfo.html,https://root.cern,https://root.cern/doc/master/classTProofProgressInfo.html,2,['inherit'],['inherited']
Modifiability,"ng; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 1.171; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.66619 0.628056 0.587341 0.0468945 20605.2 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.605139 0.593298 0.586597 0.0468674 20632.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.581823 0.587355 0.586416 0.0468644 20639.4 0; : 4 | 0.575813 0.593823 0.586862 0.0466947 20615.8 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.572257 0.578309 0.587324 0.0469531 20608.1 0; : 6 | 0.567347 0.582461 0.586969 0.0467966 20615.6 1; : 7 Minimum Test error found - save the configuration ; : 7 | 0.564553 0.577241 0.588162 0.0470086 20578.3 0; : 8 | 0.56278 0.582039 0.588324 0.0468355 20565.5 1; : 9 | 0.559377 0.582454 0.588676 0.0469029 20554.7 2; : 10 | 0.55743 0.581686 0.590386 0.0469245 20490.9 3; : 11 | 0.555638 0.57854 0.591068 0.0469776 20467.2 4; : 12 | 0.556914 0.579893 0.589121 0.0470111 20542 5; : 13 | 0.553226 0.579356 0.590241 0.0470372 20500.6 6; : 14 Minimum Test error found - save the configuration ; : 14 | 0.551359 0.575116 0.590392 0.0472515 20503 0; : 15 | 0.550484 0.575412 0.59006 0.0471061 20510 1; : 16 Minimum Test error found - save the configuration ; : 16 | 0.548532 0.572184 0.591616 0.0473333 20460 0; : 17 | 0.544023 0.585132 0.591038 0.0471532 20474.9 1; : 18 | 0.543801 0.585958 0.59089 0.0471671 20481 2; : 19 | 0.543073 0.577544 0.59151 0.0472011 20459 3; : 20 | 0.540305 0.585505 0.591485 0.0472123 20460.3 4; : 21 | 0.541092 0.577737 0.591401 0.0472411 20464.6 5; : 22 | 0.537394 0.582432 0.592336 0.0472536 20429.9 6; :",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:24891,config,configuration,24891,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['config'],['configuration']
Modifiability,"ngAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypeak; RooRealProxytail; RooRealProxywidth; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNovosibirsk(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _peak, RooAbsReal& _width, RooAbsReal& _tail); The two addresses refer to our first dependent variable and; parameter, respectively, as declared in the rdl file. RooNovosibirsk(const RooNovosibirsk& other, const char* name = 0). Double_t evaluate() const; If tail=eta=0 the Belle distribution becomes gaussian. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooNovosibirsk(); Your constructor needs a name and title and then a list of the; dependent variables and parameters used by this PDF. Use an; underscore in the variable names to distinguish them from your; own local versions. {}. TObject* clone(const char* newname) const; { return new RooNovosibirsk(*this,newname);	}. virtual ~RooNovosibirsk(); An empty constructor is usually ok. { }. » Last changed: Tue Mar 10 17:18:11 2015 » Last generated: 2015-03-10 17:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNovosibirsk.html:43896,variab,variables,43896,root/html534/RooNovosibirsk.html,https://root.cern,https://root.cern/root/html534/RooNovosibirsk.html,4,['variab'],"['variable', 'variables']"
Modifiability,"ngDirectory (char driveletter) const;  Return working directory for the selected drive (helper function). ;  ; Bool_t InitUsersGroups ();  Collect local users and groups accounts information. ;  ; Long_t LookupSID (const char *lpszAccountName, int what, int &groupIdx, int &memberIdx);  Take the name and look up a SID so that we can get full domain/user information. ;  ; void TimerThread ();  Special Thread to check asynchronous timers. ;  . Static Private Member Functions; static void ThreadStub (void *Parameter);  . Private Attributes; int fActUser {-1};  ; std::string fDirNameBuffer;  ; struct group * fGroups {nullptr};  ; Bool_t fGroupsInitDone {kFALSE};  ; void * fGUIThreadHandle {nullptr};  ; ULong_t fGUIThreadId {0};  ; HANDLE fhProcess;  ; int fNbGroups {0};  ; int fNbUsers {0};  ; struct passwd * fPasswords {nullptr};  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:33780,inherit,inherited,33780,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,2,['inherit'],['inherited']
Modifiability,"ngEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void DeclareOptions ();  MethodFisher options: format and syntax of option string: ""type"" where type is ""Fisher"" or ""Mahalanobis"". ;  ; void GetCov_BetweenClass (void);  the matrix of covariance 'between class' reflects the dispersion of the events of a class relative to the global center of gravity of all the class hence the separation between classes ;  ; void GetCov_Full (void);  compute full covariance matrix from sum of within and between matrices ;  ; void GetCov_WithinClass (void);  the matrix of covariance 'within class' reflects the dispersion of the events relative to the center of gravity of their own class ;  ; void GetDiscrimPower (void);  computation of discrimination power indicator for each variable small values of ""fWith"" indicates little compactness of sig & of backgd big values of ""fBetw"" indicates large separation between sig & backgd ;  ; void GetFisherCoeff (void);  Fisher = Sum { [coeff]*[variables] }. ;  ; void GetMean (void);  compute mean values of variables in each sample, and the overall means ;  ; void Init (void);  default initialization called by all constructors ;  ; void InitMatrices (void);  initialization method; creates global matrices and vectors ;  ; void ProcessOptions ();  process user options ;  . Private Attributes; TMatrixD * fBetw;  between-class matrix ;  ; TMatrixD * fCov;  full covariance matrix ;  ; std::vector< Double_t > * fDiscrimPow;  discriminating power ;  ; Double_t fF0;  offset ;  ; std::vector< Double_t > * fFisherCoeff;  Fisher coefficients. ;  ; EFish",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:30143,variab,variable,30143,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ngRef(Bool_t strong) const; voidTGLLogicalShape::SubRef(TGLPhysicalShape* phys) const; virtual TGLLogicalShape::ELODAxesTGLLogicalShape::SupportedLODAxes() const; virtual Bool_tTGLLogicalShape::SupportsSecondarySelect() const; UInt_tTGLLogicalShape::UnrefFirstPhysical(); virtual voidTGLLogicalShape::UpdateBoundingBox(); voidTGLLogicalShape::UpdateBoundingBoxesOfPhysicals(). protected:. voidTGLLogicalShape::PurgeDLRange(UInt_t base, Int_t size) const. Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. private:. Double_tfLineWidth; vector<Double_t>fVertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPolyLine(const TBuffer3D& buffer); constructor; dynamic_cast because of multiple inheritance. void DirectDraw(TGLRnrCtx& rnrCtx) const; Debug tracing. » Author: Timur Pocheptsov 03/08/2004 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPolyLine.html:3792,inherit,inheritance,3792,root/html534/TGLPolyLine.html,https://root.cern,https://root.cern/root/html534/TGLPolyLine.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inheritance']"
Modifiability,"ngRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tRooAbsReal::evaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooResolutionModel.html:36026,extend,extended,36026,root/html602/RooResolutionModel.html,https://root.cern,https://root.cern/root/html602/RooResolutionModel.html,2,['extend'],['extended']
Modifiability,"ngRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooCategoryProxy_tag; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooBCPEffDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBCPEffDecay.html:46297,config,configuration,46297,root/html602/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html602/RooBCPEffDecay.html,8,['config'],['configuration']
Modifiability,"ngRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooCategoryProxy_tag; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooBCPGenDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBCPGenDecay.html:46156,config,configuration,46156,root/html602/RooBCPGenDecay.html,https://root.cern,https://root.cern/root/html602/RooBCPGenDecay.html,8,['config'],['configuration']
Modifiability,"ngRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxyalpha; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym; RooRealProxym0; RooRealProxyn; RooRealProxysigma.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCBShape.html:38843,config,configuration,38843,root/html528/RooCBShape.html,https://root.cern,https://root.cern/root/html528/RooCBShape.html,1,['config'],['configuration']
Modifiability,"ngRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; RooCategoryProxy_rhoQ; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooCategoryProxy_tag; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooNonCPEigenDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_wQ; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNonCPEigenDecay.html:45445,config,configuration,45445,root/html534/RooNonCPEigenDecay.html,https://root.cern,https://root.cern/root/html534/RooNonCPEigenDecay.html,4,['config'],['configuration']
Modifiability,"ngRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumConvPdf.html:41668,config,configuration,41668,root/html528/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html528/RooNumConvPdf.html,2,['config'],['configuration']
Modifiability,"ngTNamed::fNameobject identifier; Int_tTH1::fNcellsnumber of bins(1D), cells (2D) +U/Overflows; Double_tTH1::fNormFactorNormalization factor; TStringTH1::fOptionhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Int_tfReady!; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1K(); Constructor. TH1K(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t k = 0); Create a 1-Dim histogram with fix bins of type float; (see TH1K::TH1 for explanation of parameters). ~TH1K(); Destructor. Int_t Fill(Double_t x); Increment bin with abscissa X by 1. if x is less than the low-edge of the first bin, the Underflow bin is incremented; if x is greater than the upper edge of last bin, the Overflow bin is incremented. If the storage of the sum of squares of weights has been triggered,; via the function Sumw2, then the sum of the squares of weights is incremented; by 1 in the bin corresponding to x. Double_t GetBinContent(Int_t bin) const; Return content of global bin number bin. Double_t GetBinError(Int_t bin) const; Return content of global bin error. void Reset(Option_t* option = """"); Reset. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on ou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1K.html:22875,Inherit,Inheritance,22875,root/html532/TH1K.html,https://root.cern,https://root.cern/root/html532/TH1K.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ngTNamed::fNameobject identifier; Int_tTH1::fNcellsnumber of bins(1D), cells (2D) +U/Overflows; Double_tTH1::fNormFactorNormalization factor; TStringTH1::fOptionhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Int_tfReady!; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1K(); Constructor. TH1K(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t k = 0); Create a 1-Dim histogram with fix bins of type float; (see TH1K::TH1 for explanation of parameters). ~TH1K(); Destructor. void Copy(TObject& obj) const; Copy this histogram structure to newth1. Note that this function does not copy the list of associated functions.; Use TObject::Clone to make a full copy of an histogram. Int_t Fill(Double_t x); Increment bin with abscissa X by 1. if x is less than the low-edge of the first bin, the Underflow bin is incremented; if x is greater than the upper edge of last bin, the Overflow bin is incremented. If the storage of the sum of squares of weights has been triggered,; via the function Sumw2, then the sum of the squares of weights is incremented; by 1 in the bin corresponding to x. Double_t GetBinContent(Int_t bin) const; Return content of global bin number bin. Double_t GetBin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1K.html:24186,Inherit,Inheritance,24186,root/html534/TH1K.html,https://root.cern,https://root.cern/root/html534/TH1K.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ng_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPort() const; virtual const char*TObject::GetTitle() const; const char*GetTXTRecord() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBonjourResolver.html:5297,Inherit,InheritsFrom,5297,root/html532/TBonjourResolver.html,https://root.cern,https://root.cern/root/html532/TBonjourResolver.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ng_vector, . Int_t ; numx, . Int_t ; numy, . Int_t ; direction, . Int_t ; type . ). protected . This function calculates 2D Haar and Walsh transforms Function parameters: . working_matrix-pointer to matrix of transformed data; working_vector-pointer to vector where the data are processed; numx,numy-lengths of processed data; direction-forward or inverse; type-type of transform (see manual) . Definition at line 685 of file TSpectrum2Transform.cxx. ◆ IsA(). TClass * TSpectrum2Transform::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 73 of file TSpectrum2Transform.h. ◆ SetDirection(). void TSpectrum2Transform::SetDirection ; (; Int_t ; direction). This function sets the direction of the transform: . direction (forward or inverse) . Definition at line 2762 of file TSpectrum2Transform.cxx. ◆ SetEnhanceCoeff(). void TSpectrum2Transform::SetEnhanceCoeff ; (; Double_t ; enhanceCoeff). This function sets the enhancement coefficient: . enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation. . Definition at line 2784 of file TSpectrum2Transform.cxx. ◆ SetFilterCoeff(). void TSpectrum2Transform::SetFilterCoeff ; (; Double_t ; filterCoeff). This function sets the filter coefficient: . filterCoeff - after the transform the filtered region (xmin, xmax, ymin, ymax) is replaced by this coefficient. Applies only for filtereng operation. . Definition at line 2775 of file TSpectrum2Transform.cxx. ◆ SetRegion(). void TSpectrum2Transform::SetRegion ; (; Int_t ; xmin, . Int_t ; xmax, . Int_t ; ymin, . Int_t ; ymax . ). This function sets the filtering or enhancement region: . xmin, xmax, ymin, ymax . Definition at line 2742 of file TSpectrum2Transform.cxx. ◆ SetTransformType(). void TSpectrum2Transform::SetTransformType ; (; Int_t ; transType, . Int_t ; degree . ). This function sets the following parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:28276,enhance,enhancement,28276,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['enhance'],['enhancement']
Modifiability,"nge [xmin,xmax]. ;  ;  ~RooPlot () override;  Destructor. ;  ; void addObject (TObject *obj, Option_t *drawOptions="""", bool invisible=false);  Add a generic object to this plot. ;  ; void addPlotable (RooPlotable *plotable, Option_t *drawOptions="""", bool invisible=false, bool refreshNorm=false);  Add the specified plotable object to our plot. ;  ; void addTH1 (TH1 *hist, Option_t *drawOptions="""", bool invisible=false);  Add a TH1 histogram object to this plot. ;  ; void Browse (TBrowser *b) override;  Plot RooPlot when double-clicked in browser. ;  ; std::unique_ptr< TLegend > BuildLegend () const;  Build a legend that contains all objects that have been drawn on the plot. ;  ; double chiSquare (const char *pdfname, const char *histname, int nFitParam=0) const;  Calculate and return reduced chi-squared between a curve and a histogram. ;  ; double chiSquare (int nFitParam=0) const;  Shortcut for RooPlot::chiSquare(const char* pdfname, const char* histname, int nFitParam=nullptr) ;  ; void createInternalPlotVarClone ();  Replaces the pointer to the plot variable with a pointer to a clone of the plot variable that is owned by this RooPlot. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default print options, for a given print style. ;  ; void Draw (Option_t *options=nullptr) override;  Draw this plot and all of the elements it contains. ;  ; bool drawAfter (const char *after, const char *target);  Change the order in which our contained objects are drawn so that the target object is drawn just after the specified object. ;  ; bool drawBefore (const char *before, const char *target);  Change the order in which our contained objects are drawn so that the target object is drawn just before the specified object. ;  ; RooPlot * emptyClone (const char *name);  Return empty clone of current RooPlot. ;  ; TObject * findObject (const char *name, const TClass *tClass=nullptr) const;  Find the named object in our list of items and return a pointer to it. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:5484,variab,variable,5484,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,2,['variab'],['variable']
Modifiability,"nge display-state of the title-bar / mini-bar. ;  ; TEveWindow * GetEveParentAsWindow () const;  Returns eve-parent dynamic-casted to TEveWindow. ;  ; TEveWindow * GetEveWindow () const;  ; virtual void HideAllDecorations ();  Hide title-bar and mini-bar. ;  ; virtual TEveWindow * RelinquishEveWindow (Bool_t reparent=kTRUE);  Remove window and decrease its deny-destroy count. ;  ; virtual void SetCurrent (Bool_t curr);  Set current state of this frame. ;  ; virtual void SetShowTitleBar (Bool_t show);  Set state of title-bar. ;  ; virtual void ShowNormalDecorations ();  Show title-bar or mini-bar, as dictated by the window. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TitleBarClicked ();  Slot for mouse-click on the central part of the title-bar. ;  ; virtual void WindowNameChanged (const TString &name);  Update widgets using window's name or title. ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInPack.html:2347,inherit,inherited,2347,doc/master/classTEveCompositeFrameInPack.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInPack.html,1,['inherit'],['inherited']
Modifiability,"nge maximum number of likelihood function class from MINUIT (RooMinimizer default 500 * #parameters) ;  ; void setMaxIterations (int n);  Change maximum number of MINUIT iterations (RooMinimizer default 500 * #parameters) ;  ; void setMinimizerType (std::string const &type);  Choose the minimizer algorithm. ;  ; void setOffsetting (bool flag);  Enable internal likelihood offsetting for enhanced numeric precision. ;  ; void setPrintEvalErrors (int numEvalErrors);  ; void setPrintLevel (int newLevel);  Change the MINUIT internal printing level. ;  ; void setProfile (bool flag=true);  ; void setRecoverFromNaNStrength (double strength);  Try to recover from invalid function values. ;  ; void setStrategy (int istrat);  Change MINUIT strategy to istrat. ;  ; void setVerbose (bool flag=true);  ; int simplex ();  Execute SIMPLEX. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void zeroEvalCount ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMinimizer.html:5343,inherit,inherited,5343,doc/master/classRooMinimizer.html,https://root.cern,https://root.cern/doc/master/classRooMinimizer.html,1,['inherit'],['inherited']
Modifiability,"nge+9);; firstaxis->AddRange(new TParallelCoordRange(firstaxis,-1.263024,-0.755292));; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kOrange@ kOrangeDefinition Rtypes.h:67; kViolet@ kVioletDefinition Rtypes.h:67; TCanvas.h; TFile.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TNtuple.h; TParallelCoordRange.h; TParallelCoordVar.h; TParallelCoord.h; TRandom.h; TStyle.h; gPad#define gPadDefinition TVirtualPad.h:308; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TList::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this list using its name.Definition TList.cxx:576; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TNtuple::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtuple.cxx:169; TObject::FindObjectvirtual TObject * FindObject(const char *name) constMust be redefined in derived classes.Definition TObject.cxx:408; TParallelCoordRangeA TParallelCoordRange is a range used for parallel coordinates plots.Definition TParallelCoordRange.h:25; TParallelCoordVarTParallelCoord axes.Definition TParallelCoordVar.h:24; TParallelCoordVar::AddRangevoid AddRange(TParallelCoordRange *range)Add a range to the current selection on the axis.Definition TParallelCoordVar.cxx:102; TParallelCoordParallel Coordinates class.Definition TParallelCoord.h:28; TParallelCoord::AddSelectionvoid AddSelection(const char *title)Add a selection.Definition TParallelCoord.cxx:242; TParallelCoord::GetCurrentSelectionTParallelCoordSelect * GetCurrentSelection()Return the selection currently being edited.Definition TParallelCoord.cxx:438",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/parallelcoord_8C.html:3258,variab,variables,3258,doc/master/parallelcoord_8C.html,https://root.cern,https://root.cern/doc/master/parallelcoord_8C.html,1,['variab'],['variables']
Modifiability,"nge, otherwise it is performed over the domain of each; integrated observable. If cfg is specified it will be used to configure any numeric integration; aspect of the integral. It will not force the integral to be performed numerically, which is; decided automatically by RooRealIntegral. RooAbsReal* createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; Utility function for createIntegral that creates the actual integreal object. void findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; Utility function for createIntObj() that aids in the construct of recursive integrals; over functions with multiple observables with parameterized ranges. This function; finds in a given set allObs over which integration is requested the largeset subset; of observables that can be integrated simultaneously. This subset consists of; observables with fixed ranges and observables with parameterized ranges whose; parameterization does not depend on any observable that is also integrated. TString integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Construct string with unique suffix name to give to integral object that encodes; integrated observables, normalization observables and the integration range name. const RooAbsReal* createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; Utility function for plotOn() that creates a projection of a function or p.d.f; to be plotted on a RooPlot. const RooAbsReal* createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; Utility function for plotOn() that creates a projection of a function or p.d.f; to be plotted on a RooPlot. const RooAbsReal * createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:37273,parameteriz,parameterized,37273,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,20,['parameteriz'],"['parameterization', 'parameterized']"
Modifiability,"nge; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRecursiveFraction(); Default constructor. RooRecursiveFraction(const char* name, const char* title, const RooArgList& fracSet); Constructor of plain RooAddPdf fraction from list of recursive fractions. RooRecursiveFraction(const RooRecursiveFraction& other, const char* name = 0); Copy constructor. ~RooRecursiveFraction(); Destructor. Double_t evaluate() const; Calculate and return value of 1 - prod_i (1 - f_i ). TObject* clone(const char* newname) const; { return new RooRecursiveFraction(*this, newname); }. » Last changed: Tue Jun 2 15:33:32 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooRecursiveFraction.html:37265,Inherit,Inheritance,37265,root/html604/RooRecursiveFraction.html,https://root.cern,https://root.cern/root/html604/RooRecursiveFraction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nge; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooListProxy_x; Double_t_z; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMultiVarGaussian.html:41587,config,configuration,41587,root/html532/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html532/RooMultiVarGaussian.html,4,['config'],['configuration']
Modifiability,"nge; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; TF1*func; RooListProxylist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTFnPdfBinding.html:39645,config,configuration,39645,root/html532/RooTFnPdfBinding.html,https://root.cern,https://root.cern/root/html532/RooTFnPdfBinding.html,4,['config'],['configuration']
Modifiability,"ngeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveJetConeProjected.html:20143,variab,variable,20143,root/html528/TEveJetConeProjected.html,https://root.cern,https://root.cern/root/html528/TEveJetConeProjected.html,1,['variab'],['variable']
Modifiability,"ngeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; Int_tfNPntsnumber of reduced and projected points; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveVector*fPntsreduced and projected points; list<TEvePolygonSetProjected::Polygon_t,allocator<TEvePolygonSetProjected::Polygon_t> >fPolspolygons; list<TEvePolygonSetProjected::Polygon_t,allocator<TEvePolygonSetProjected::Polygon_t> >fPolsBPpolygons build from TBuffer3D polygons; list<TEvePolygonSetProjected::Polygon_t,allocator<TEvePolygonSetProjected::Polygon_t> >f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePolygonSetProjected.html:21248,variab,variable,21248,root/html528/TEvePolygonSetProjected.html,https://root.cern,https://root.cern/root/html528/TEvePolygonSetProjected.html,6,['variab'],['variable']
Modifiability,"ngeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoShapeProjected.html:20571,variab,variable,20571,root/html528/TEveGeoShapeProjected.html,https://root.cern,https://root.cern/root/html528/TEveGeoShapeProjected.html,11,['variab'],['variable']
Modifiability,"ngeName));; 2069 }; 2070 adjustNorm = pc.getInt(""rangeWNAdjustNorm"") ;; 2071 hasCustomRange = true ;; 2072 ; 2073 coutI(Plotting) << ""RooAbsPdf::plotOn("" << GetName() << "") only plotting range '"" << pc.getString(""rangeName"", """", false) << ""'"" ;; 2074 if (!pc.hasProcessed(""NormRange"")) {; 2075 ccoutI(Plotting) << "", curve is normalized to data in "" << (adjustNorm?""given"":""full"") << "" range"" << endl ;; 2076 } else {; 2077 ccoutI(Plotting) << endl ;; 2078 }; 2079 ; 2080 nameSuffix.append(""_Range["" + std::string(pc.getString(""rangeName"")) + ""]"");; 2081 }; 2082 // Specification of a normalization range override those in a regular range; 2083 if (pc.hasProcessed(""NormRange"")) {; 2084 rangeLim.clear();; 2085 for (const auto& rangeNameToken : ROOT::Split(pc.getString(""normRangeName"", """", false), "","")) {; 2086 const char* thisRangeName = rangeNameToken.empty() ? nullptr : rangeNameToken.c_str();; 2087 if (thisRangeName && !frame->getPlotVar()->hasRange(thisRangeName)) {; 2088 coutE(Plotting) << ""Range '"" << rangeNameToken << ""' not defined for variable '""; 2089 << frame->getPlotVar()->GetName() << ""'. Ignoring ..."" << std::endl;; 2090 continue;; 2091 }; 2092 rangeLim.push_back(frame->getPlotVar()->getRange(thisRangeName));; 2093 }; 2094 adjustNorm = true ;; 2095 hasCustomRange = true ;; 2096 coutI(Plotting) << ""RooAbsPdf::plotOn("" << GetName() << "") p.d.f. curve is normalized using explicit choice of ranges '"" << pc.getString(""normRangeName"", """", false) << ""'"" << endl ;; 2097 ; 2098 nameSuffix.append(""_NormRange["" + std::string(pc.getString(""rangeName"")) + ""]"");; 2099 ; 2100 }; 2101 ; 2102 if (hasCustomRange && adjustNorm) {; 2103 // If overlapping ranges were given, remove them now; 2104 const std::size_t oldSize = rangeLim.size();; 2105 removeRangeOverlap(rangeLim);; 2106 ; 2107 if (oldSize != rangeLim.size() && !pc.hasProcessed(""NormRange"")) {; 2108 // User gave overlapping ranges. This leads to double-counting events and integrals, and must; 2109 // therefore be avoided.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:102855,variab,variable,102855,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ngeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1PdfBinding_double_double_.html:42338,config,configuration,42338,root/html534/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1PdfBinding_double_double_.html,4,['config'],['configuration']
Modifiability,"nged () override;  Update limits and notify data users. ;  ; void GetCellData (const TEveCaloData::CellId_t &id, TEveCaloData::CellData_t &data) const override;  Get cell geometry and value from cell ID. ;  ; void GetCellList (Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, vCellId_t &out) const override;  Get list of cell IDs in given eta and phi range. ;  ; void GetEtaLimits (Double_t &min, Double_t &max) const override;  Get eta limits. ;  ; TH2F * GetHist (Int_t slice) const;  Get histogram in given slice. ;  ; void GetPhiLimits (Double_t &min, Double_t &max) const override;  Get phi limits. ;  ; THStack * GetStack ();  ; TClass * IsA () const override;  ; void Rebin (TAxis *ax, TAxis *ay, vCellId_t &in, Bool_t et, RebinData_t &out) const override;  Rebin. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveCaloData;  TEveCaloData (const char *n=""TEveCalData"", const char *t="""");  ;  ~TEveCaloData () override;  ; virtual void CellSelectionChanged ();  Tell users (TEveCaloViz instances using this data) that cell selection has changed and they should update selection cache if necessary. ;  ; Bool_t Empty () const;  ; void FillImpliedSelectedSet (Set_t &impSelSet) override;  Populate set impSelSet with derived / dependant elements. ;  ; vCellId_t & GetCellsHighlighted ();  ; vCellId_t & GetCellsSelected ();  ; virtual Float_t GetEps () const;  ; virtual TAxis * GetEtaBins () const;  ; TString GetHighlightTooltip () override;  ; virtual Float_t GetMaxVal (Bool_t et) const;  ; Int_t GetNSlices () const;  ; virtual TAxis * GetPhiBins () const;  ; Color_t GetSliceColor (Int_t slice) const;  Get color for given slice. ;  ; Float_t GetSliceThreshold (Int_t slice) const;  Get threshold for given slice. ;  ; Char_t GetSliceTransparency (Int_t slice) const;  Get transparency for given slice. ;  ; Bool_t GetWrapTwoPi () const;  ; virtual void InvalidateUsersCellIdC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloDataHist.html:1631,inherit,inherited,1631,doc/master/classTEveCaloDataHist.html,https://root.cern,https://root.cern/doc/master/classTEveCaloDataHist.html,1,['inherit'],['inherited']
Modifiability,"nged with setPlotBins(). The caller takes ownership of the returned object; and is responsible for deleting it. TH3F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const RooAbsRealLValue& zvar, const char* tAxisLabel, const RooAbsBinning** bins) const; Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. TH1 * createHistogram(const char* name, RooArgList& vars, const char* tAxisLabel, Double_t* xlo, Double_t* xhi, Int_t* nBins); Create 1-, 2- or 3-d ROOT histogram with labels taken; from the variables in 'vars' and the with range and binning; specified in xlo,xhi and nBins. The dimensions of the arrays xlo,xhi,; nBins should match the number of objects in vars. TH1 * createHistogram(const char* name, RooArgList& vars, const char* tAxisLabel, const RooAbsBinning** bins); Create a 1,2, or 3D-histogram with appropriate scale and labels.; Binning and ranges are taken from the variables themselves and can be changed by; calling their setPlotMin/Max() and setPlotBins() methods. A histogram can be filled; using RooAbsReal::fillHistogram() or RooTreeData::fillHistogram().; The caller takes ownership of the returned object and is responsible for deleting it. Bool_t isJacobianOK(const RooArgSet& depList) const; Interface function to indicate that this lvalue; has a unit or constant jacobian terms with respect to; the observable passed as argument. This default implementation; always returns true (i.e. jacobian is constant). inline RooAbsRealLValue(); Constructors, assignment etc. { }. void setVal(Double_t value); Parameter value and error accessors. RooAbsArg& operator=(const RooAbsReal& other). RooAbsArg& operator=(Double_t newValue). Int_t getBin(const char* rangeName = 0) const; { return getBinning(rangeName).binNumber(getVal()) ; }. Int_t numBins(const char* rangeName = 0) const; { return getBins(rangeName) ; }. Double_t getBinWidth(Int_t i, const char* rangeName = 0) const; { return getBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsRealLValue.html:51381,variab,variables,51381,root/html602/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html602/RooAbsRealLValue.html,4,['variab'],['variables']
Modifiability,"nged with setPlotBins(). The caller takes ownership of the returned object; and is responsible for deleting it. TH3F * createHistogram(const char* name, const RooAbsRealLValue& yvar, const RooAbsRealLValue& zvar, const char* tAxisLabel, const RooAbsBinning** bins) const; Create an empty 3D-histogram with appropriate scale and labels for this variable (x); and the specified y,z variables. TH1 * createHistogram(const char* name, RooArgList& vars, const char* tAxisLabel, Double_t* xlo, Double_t* xhi, Int_t* nBins); Create 1-, 2- or 3-d ROOT histogram with labels taken; from the variables in 'vars' and the with range and binning; specified in xlo,xhi and nBins. The dimensions of the arrays xlo,xhi,; nBins should match the number of objects in vars. TH1 * createHistogram(const char* name, RooArgList& vars, const char* tAxisLabel, const RooAbsBinning** bins); Create a 1,2, or 3D-histogram with appropriate scale and labels.; Binning and ranges are taken from the variables themselves and can be changed by; calling their setPlotMin/Max() and setPlotBins() methods. A histogram can be filled; using RooAbsReal::fillHistogram() or RooTreeData::fillHistogram().; The caller takes ownership of the returned object and is responsible for deleting it. Bool_t isJacobianOK(const RooArgSet& depList) const; Interface function to indicate that this lvalue; has a unit or constant jacobian terms with respect to; the observable passed as argument. This default implementation; always returns true (i.e. jacobian is constant). void setVal(Double_t value); Parameter value and error accessors. RooAbsArg& operator=(const RooAbsReal& other). Int_t getBin(const char* rangeName = 0) const; { return getBinning(rangeName).binNumber(getVal()) ; }. Int_t numBins(const char* rangeName = 0) const; { return getBins(rangeName) ; }. Double_t getBinWidth(Int_t i, const char* rangeName = 0) const; { return getBinning(rangeName).binWidth(i) ; }. Double_t volume(const char* rangeName) const; { return getMax(rangeNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsRealLValue.html:46317,variab,variables,46317,root/html528/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html528/RooAbsRealLValue.html,5,['variab'],['variables']
Modifiability,"nges; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendPdf(); Default constructor. RooExtendPdf(const char* name, const char* title, const RooAbsPdf& pdf, const RooAbsReal& norm, const char* rangeName = 0); Constructor. The ExtendedPdf behaves identical to the supplied input pdf,; but adds an extended likelihood term. The expected number of events return; is 'norm'. If a rangename is given, the number of events is interpreted as. RooExtendPdf(const RooExtendPdf& other, const char* name = 0); Copy constructor. ~RooExtendPdf(); Destructor. Double_t expectedEvents(const RooArgSet* nset); Return the number of expected events, which is. n / [ Int(xC,yF) pdf(x,y) / Int(xF,yF) pdf(x,y) ]. Where x is the set of dependents with cuts defined; and y are the other dependents. xC is the integration; of x over the cut range, xF is the integration of; x over the full range. TObject* clone(const char* newname) const; { return new RooExtendPdf(*this,newname) ; }. Double_t evaluate() const; { return _pdf ; }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capabilities to input p.d.f. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Forward calculation of analytical integrals to input p.d.f. Bool_t selfNormalized() const; { return kTRUE ; }. ExtendMode extendMode() const; { return CanBeExtended ; }. Double_t expectedEvents(const RooArgSet* nset). » Last changed: Mon Dec 7 13:47:34 2009 » Last generated: 2009-12-07 13:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooExtendPdf.html:41423,extend,extendMode,41423,root/html526/RooExtendPdf.html,https://root.cern,https://root.cern/root/html526/RooExtendPdf.html,1,['extend'],['extendMode']
Modifiability,"nge}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; N = ROOT.RooRealVar(""N"", ""Extended term"", 0, 20000); extmodel = ROOT.RooExtendPdf(""extmodel"", ""Extended model"", model, N, ""FULL""); ; ; # It can be instructive to fit the above model to either the LEFT or RIGHT; # range. `N` should approximately converge to the expected number of events in; # the full range. One may try to leave out `""FULL""` in the constructor, or the; # interpretation of `N` changes.; extmodel.fitTo(data, Range=""LEFT"", PrintLevel=-1); N.Print(); ; ; # If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]; ; ; c = ROOT.TCanvas(""c"", ""c"", 2100, 700); c.Divide(3); c.cd(1); ; r = model.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r.Print(); ; frame = x.frame(); data.plotOn(frame); model.plotOn(frame, VisualizeError=r); model.plotOn(frame); model.paramOn(frame, Label=""Non-extended fit""); frame.Draw(); ; c.cd(2); ; r2 = extmodel.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r2.Print(); frame2 = x.frame(); data.plotOn(frame2); extmodel.plotOn(frame2); extmodel.plotOn(frame2, VisualizeError=r2); extmodel.paramOn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:4103,extend,extended,4103,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,1,['extend'],['extended']
Modifiability,"ngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngTausGSLRngTaus(); ROOT::Math::GSLRngTausGSLRngTaus(const ROOT::Math::GSLRngTaus&); ROOT::Math::GSLRngTausGSLRngTaus(ROOT::Math::GSLRngTaus&&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngTaus&operator=(const ROOT::Math::GSLRngTaus&); ROOT::Math::GSLRngTaus&operator=(ROOT::Math::GSLRngTaus&&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const GSLRandomEngine & eng). Assignment operator : make a deep copy of the contained GSL generator. GSLRngTaus(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLRngTaus.html:3563,Inherit,Inheritance,3563,root/html602/ROOT__Math__GSLRngTaus.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLRngTaus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngTausGSLRngTaus(); ROOT::Math::GSLRngTausGSLRngTaus(const ROOT::Math::GSLRngTaus&); ROOT::Math::GSLRngTausGSLRngTaus(ROOT::Math::GSLRngTaus&&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngTaus&operator=(const ROOT::Math::GSLRngTaus&); ROOT::Math::GSLRngTaus&operator=(ROOT::Math::GSLRngTaus&&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRandomEngine & operator=(const GSLRandomEngine & eng). Assignment operator : make a deep copy of the contained GSL generator. GSLRngTaus(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__GSLRngTaus.html:3563,Inherit,Inheritance,3563,root/html604/ROOT__Math__GSLRngTaus.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__GSLRngTaus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ngine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic inter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ClassIndex.html:43680,config,configuration,43680,root/html532/ClassIndex.html,https://root.cern,https://root.cern/root/html532/ClassIndex.html,7,['config'],['configuration']
Modifiability,"ngleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static RooAbsData::StorageTypedefaultStorageType. protected:. TIterator*_cacheIter! Iterator over cached variables; RooArgSet_cachedVars! External variables cached with this data set; RooAbsDataStore*_dstoreData storage implementation; TIterator*_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<std::string,RooAbsData*>_ownedComponentsOwned external components; RooArgSet_varsDimensions of this data set; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void setDefaultStorageType(RooAbsData::StorageType s). void claimVars(RooAbsData* ). Bool_t releaseVars(RooAbsData* ); If return value is true variables can be deleted. ~RooAbsData(); Destructor. void convertToVectorStore(); Convert tree-based storage to vector-based storage. Bool_t changeObservableName(const char* from, const char* to). void fill(). Int_t numEntries() const. void reset(). const RooArgSet* get(Int_t index) const. void cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArgSet* nset = 0); Internal method -- Cache given set of functions with data. void resetCache(); Internal method -- Remove cached function values. void attachCache(const RooAbsArg* newOwner, const RooArgSet& cachedVars); Internal method -- Attach dataset copied with cache contents to copied instances of functions. void setArgStatus(const RooArgSet& set, Bool_t active). void setDirtyProp(Bool_t flag); Control propagation of dirty flags from observables in dataset. RooAbsData* reduce(const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsData.html:14741,variab,variables,14741,root/html532/RooAbsData.html,https://root.cern,https://root.cern/root/html532/RooAbsData.html,1,['variab'],['variables']
Modifiability,"ngs & ParSettings(unsigned int i). get the parameter settings for the i-th parameter (non-const method). { return fSettings.at(i); }. const std::vector<ROOT::Fit::ParameterSettings> & ParamsSettings() const. get the vector of parameter settings (const method). { return fSettings; }. std::vector<ROOT::Fit::ParameterSettings> & ParamsSettings(). get the vector of parameter settings (non-const method). { return fSettings; }. void CreateParamsSettings(const ROOT::Math::IParamMultiFunction& func). set the parameter settings from a model function.; Create always new parameter setting list from a given model function. void SetParamsSettings(unsigned int npar, const double* params, const double* vstep = 0). set the parameter settings from number of parameters and a vector of values and optionally step values. If there are not existing or number of parameters does not match existing one, create a new parameter setting list. ROOT::Math::Minimizer * CreateMinimizer(). create a new minimizer according to chosen configuration. void SetMinimizer(const char* type, const char* algo = 0). set minimizer type. const std::string & MinimizerType() const. return type of minimizer package. { return fMinimizerOpts.MinimizerType(); }. const std::string & MinimizerAlgoType() const. return type of minimizer algorithms. { return fMinimizerOpts.MinimizerAlgorithm(); }. bool NormalizeErrors() const. flag to check if resulting errors are be normalized according to chi2/ndf. { return fNormErrors; }. bool ParabErrors() const; do analysis for parabolic errors. { return fParabErrors; }. bool MinosErrors() const; do minos errros analysis on the parameters. { return fMinosErrors; }. const std::vector<unsigned int> & MinosParams() const; return vector of parameter indeces for which the Minos Error will be computed. { return fMinosParams; }. void SetNormErrors(bool on = true). set the option to normalize the error on the result according to chi2/ndf. { fNormErrors= on; }. void SetParabErrors(bool on = tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Fit__FitConfig.html:3628,config,configuration,3628,root/html528/ROOT__Fit__FitConfig.html,https://root.cern,https://root.cern/root/html528/ROOT__Fit__FitConfig.html,1,['config'],['configuration']
Modifiability,"ngs in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static int GetBoolEnv (const std::string &name, int dfl=-1);  Parse boolean gEnv variable which should be ""yes"" or ""no"". ;  ;  Static Public Member Functions inherited from THttpWSHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; RWebWindow & fWindow;  ! window reference ;  . Protected Member Functions; std::string GetCodeVersion () override;  Method generate extra suffix for all kinds of loaded code. ;  ; Bool_t ProcessBatchHolder (std::shared_ptr< THttpCallArg > &arg) override;  Method used to accept or reject root_batch_holder.js request. ;  ; void VerifyDefaultPageContent (std::shared_ptr< THttpCallArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindowWSHandler.html:11604,inherit,inherited,11604,doc/v632/classROOT_1_1RWebWindowWSHandler.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindowWSHandler.html,6,['inherit'],['inherited']
Modifiability,"ngs to it json string Returns true if any parameter was really changed. ;  ; void SetTopVisible (bool on=true);  Set draw options as string for JSROOT TGeoPainter. ;  ; void SetVisLevel (int lvl=3);  Set maximal visible level. ;  . Private Member Functions; void BuildDescription (TGeoNode *topnode, TGeoVolume *topvolume);  Build geometry description. ;  ; void ClearDescription ();  Clear geometry description. ;  ; void CollectNodes (RGeomDrawing &drawing, bool all_nodes=false);  Collect nodes which are used in visibles. ;  ; void CopyMaterialProperties (TGeoVolume *vol, RGeomNode &node);  Copy material properties. ;  ; int CountShapeFaces (TGeoShape *shape);  Count number of faces for the shape. ;  ; ShapeDescr & FindShapeDescr (TGeoShape *shape);  Find description object for requested shape If not exists - will be created. ;  ; int GetUsedNSegments (int min=20);  Returns really used number of cylindrical segments. ;  ; TGeoVolume * GetVolume (int nodeid);  Get volume for specified nodeid If specific volume was configured, it will be returned for nodeid==0. ;  ; int IsPhysNodeVisible (const std::vector< int > &stack);  Check if there special settings for specified physical node returns -1 if nothing is found. ;  ; std::string MakeDrawingJson (RGeomDrawing &drawing, bool has_shapes=false);  Produce JSON for the drawing If TGeoShape appears in the drawing, one has to keep typeinfo But in this case one can exclude several classes which are not interesting, but appears very often. ;  ; ShapeDescr & MakeShapeDescr (TGeoShape *shape);  Find description object and create render information. ;  ; int MarkVisible (bool on_screen=false);  Set visibility flag for each nodes. ;  ; void PackMatrix (std::vector< float > &arr, TGeoMatrix *matr);  Pack matrix into vector, which can be send to client Following sizes can be used for vector: 0 - Identity matrix 3 - Translation 4 - Scale (last element always 1) 9 - Rotation 16 - Full size. ;  ; void ProduceIdShifts ();  Count total numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html:8152,config,configured,8152,doc/v632/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html,2,['config'],['configured']
Modifiability,"ngth of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; double _range [2];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooRangeBinning.h>. Inheritance diagram for RooRangeBinning:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRangeBinning() [1/3]. RooRangeBinning::RooRangeBinning ; (; const char * ; name = nullptr). Default constructor. ; Definition at line 40 of file RooRangeBinning.cxx. ◆ RooRangeB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBinning.html:15867,inherit,inherited,15867,doc/master/classRooRangeBinning.html,https://root.cern,https://root.cern/doc/master/classRooRangeBinning.html,1,['inherit'],['inherited']
Modifiability,"ngth() == 0 || comd[0] == '*' || comd[0] == '?' || comd[0] == 0 || comd==""HELP"" ) {; 3447 Printf("" ==>List of MINUIT Interactive commands:"");; 3448 Printf("" CLEar Reset all parameter names and values undefined"");; 3449 Printf("" CONtour Make contour map of the user function"");; 3450 Printf("" EXIT Exit from Interactive Minuit"");; 3451 Printf("" FIX Cause parameter(s) to remain constant"");; 3452 Printf("" HESse Calculate the Hessian or error matrix."");; 3453 Printf("" IMPROVE Search for a new minimum around current minimum"");; 3454 Printf("" MIGrad Minimize by the method of Migrad"");; 3455 Printf("" MINImize MIGRAD + SIMPLEX method if Migrad fails"");; 3456 Printf("" MINOs Exact (non-linear) parameter error analysis"");; 3457 Printf("" MNContour Calculate one MINOS function contour"");; 3458 Printf("" PARameter Define or redefine new parameters and values"");; 3459 Printf("" RELease Make previously FIXed parameters variable again"");; 3460 Printf("" REStore Release last parameter fixed"");; 3461 Printf("" SAVe Save current parameter values on a file"");; 3462 Printf("" SCAn Scan the user function by varying parameters"");; 3463 Printf("" SEEk Minimize by the method of Monte Carlo"");; 3464 Printf("" SET Set various MINUIT constants or conditions"");; 3465 Printf("" SHOw Show values of current constants or conditions"");; 3466 Printf("" SIMplex Minimize by the method of Simplex"");; 3467 goto L99;; 3468 }; 3469 ; 3470//______________________________________________________________________________; 3471//; 3472// Command CLEAR; 3473//; 3474 if( !strncmp(comd.Data(),""CLE"",3) ) {; 3475 Printf("" ***>CLEAR"");; 3476 Printf("" Resets all parameter names and values to undefined."");; 3477 Printf("" Must normally be followed by a PARameters command or "");; 3478 Printf("" equivalent, in order to define parameter values."");; 3479 goto L99;; 3480 }; 3481//______________________________________________________________________________; 3482//; 3483// Command CONTOUR; 3484//; 3485 if( !strncmp(comd.Data(),""CON"",3) )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:109081,variab,variable,109081,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ngth; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTVirtualPS::fNByteNumber of bytes written in the file (PDF); TStringTNamed::fNameobject identifier; Bool_tTVirtualPS::fPrintedTrue when a page must be printed; Bool_tfRangeTrue when a range has been defined; Int_tTVirtualPS::fSizBufferBuffer size; ofstream*TVirtualPS::fStreamFile stream identifier; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; TStringTNamed::fTitleobject title; Int_tfTypeWorkstation type used to know if the SVG is open; Float_tfXsizePage size along X; Float_tfYsizePage size along Y; Double_tfYsizeSVGPage's Y size in SVG units. Class Charts. Inheritance Chart:. TObject. ←; TNamed. TAttLine. TAttFill. TAttMarker. TAttText. ←; TVirtualPS. ←; TSVG. Function documentation; TSVG(); Default SVG constructor. TSVG(const char* filename, Int_t type = -113); Initialize the SVG interface. fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG; inherits from TVirtualPS it should be kept. Anyway it is not; necessary to specify this parameter at creation time because it; has a default value (which is ignore in the SVG case). void Open(const char* filename, Int_t type = -111); Open a SVG file. ~TSVG(); Default SVG destructor. void Close(Option_t* opt = """"); Close a SVG file. void On(); Activate an already open SVG file. void Off(); Deactivate an already open SVG file. void DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw a Box. void DrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); Draw a Frame around a box. mode = -1 the box look",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSVG.html:12982,Inherit,Inheritance,12982,root/html602/TSVG.html,https://root.cern,https://root.cern/root/html602/TSVG.html,2,['Inherit'],['Inheritance']
Modifiability,"ng fDeclFileName;  ; TString fDeclFileSysName;  ; TString fHtmlFileName;  ; TString fImplFileName;  ; TString fImplFileSysName;  ; TModuleDocInfo * fModule;  ; Bool_t fSelected;  ; TList fTypedefs;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TDocInfo.h>. Inheritance diagram for TClassDocInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TClassDocInfo() [1/3]. TClassDocInfo::TClassDocInfo ; (; TClass * ; cl, . const char * ; htmlfilename = """", . const char * ; fsdecl = """", . const char * ; fsimpl = """", . const char * ; decl = 0, . const char * ; impl = 0 . ). inline . Definition at line 32 of file TDocInfo.h. ◆ TClassDocInfo() [2/3]. TClassDocInfo::TClassDocInfo ; (; TDictionary * ; cl, . const char * ; htmlfilename = """", . const char * ; fsdecl = """", . const char * ; fsimpl = """", . const char * ; decl = 0, . const char * ; impl = 0 . ). inline . Definition at line 42 of file TDocInfo.h. ◆ ~TClassDocInfo(). TClassDocInfo::~TClassDocInfo ; (; ). inlineoverrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocInfo.html:10830,inherit,inherited,10830,doc/master/classTClassDocInfo.html,https://root.cern,https://root.cern/doc/master/classTClassDocInfo.html,2,['inherit'],['inherited']
Modifiability,"ng fHost;  ; Int_t fPort;  ; TString fUser;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  . #include <TNetFile.h>. Inheritance diagram for TNetSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNetSystem() [1/3]. TNetSystem::TNetSystem ; (; const TNetSystem & ; ). privatedelete . ◆ TNetSystem() [2/3]. TNetSystem::TNetSystem ; (; Bool_t ; ftpowner = kTRUE). Create helper class that allows directory access via rootd. ; Use ftpowner = TRUE (default) if this instance is responsible for cleaning of the underlying TFTP connection; this allows to have control on the order of the final cleaning. ; Definition at line 798 of file TNetFile.cxx. ◆ TNetSystem() [3/3]. TNetSystem::TNetSystem ; (; const char * ; url, . Bool_t ; ftpowner = kTRUE . ). Create helper class that allows directory access via rootd. ; Use ftpowner = TRUE (default) if this instanc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetSystem.html:33879,inherit,inherited,33879,doc/master/classTNetSystem.html,https://root.cern,https://root.cern/doc/master/classTNetSystem.html,2,['inherit'],['inherited']
Modifiability,"ng fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveCompositeFrameInPack (const TEveCompositeFrameInPack &);  ; TEveCompositeFrameInPack & operator= (const TEveCompositeFrameInPack &);  . Additional Inherited Members;  Public Types inherited from TEveCompositeFrame; typedef TGFrame *(* IconBarCreator_foo) (TEveCompositeFrame *, TGCompositeFrame *, Int_t);  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInPack.html:28689,inherit,inherited,28689,doc/master/classTEveCompositeFrameInPack.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInPack.html,2,['inherit'],['inherited']
Modifiability,"ng fPattern;  filename pattern ;  ; TRegexp * fReg;  pattern regular expression ;  ; TString fSIcon;  associated small icon (16x16) ;  ; TString fType;  mime type ;  . Friends; class TGMimeTypes;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGMimeTypes.h>. Inheritance diagram for TGMime:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMime(). TGMime::TGMime ; (; ). inline . Definition at line 42 of file TGMimeTypes.h. ◆ ~TGMime(). TGMime::~TGMime ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMime.html:9120,inherit,inherited,9120,doc/master/classTGMime.html,https://root.cern,https://root.cern/doc/master/classTGMime.html,1,['inherit'],['inherited']
Modifiability,"ng fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFunction.h>. Inheritance diagram for TFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunction() [1/2]. TFunction::TFunction ; (; MethodInfo_t * ; info = nullptr). Default TFunction ctor. ; TFunctions are constructed in TROOT via a call to TCling::Up",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFunction.html:14517,inherit,inherited,14517,doc/master/classTFunction.html,https://root.cern,https://root.cern/doc/master/classTFunction.html,1,['inherit'],['inherited']
Modifiability,"ng fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsStudy; void aggregateSummaryOutput (TList *chunkList);  ; void registerSummaryOutput (const RooArgSet &allVars, const RooArgSet &varsWithError=RooArgSet(), const RooArgSet &varsWithAsymError=RooArgSet());  ; void storeDetailedOutput (std::unique_ptr< TNamed > object);  ; void storeSummaryOutput (const RooArgSet &vars);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooGenFitStudy.h>. Inheritance diagram for RooGenFitStudy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooGenFitStudy() [1/2]. RooGenFitStudy::RooGenFitStudy ; (; const char * ; name = nullptr, . const char * ; title = nullptr . ). Constructor. ; Definition at line 42 of file RooGenFitStudy.cxx. ◆ RooGenFitStudy() [2/2]. RooGenFitStudy::RooGenFitStudy ; (; const RooGenFitStudy & ; other). Copy constructor. ; Definition at line 52 of file RooGenFitStudy.cxx. Member Function Documentation. ◆ attach(). bool RooGenFitStudy::attach ; (; Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenFitStudy.html:13248,inherit,inherited,13248,doc/master/classRooGenFitStudy.html,https://root.cern,https://root.cern/doc/master/classRooGenFitStudy.html,3,['inherit'],['inherited']
Modifiability,"ng fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsStudy; void aggregateSummaryOutput (TList *chunkList);  ; void registerSummaryOutput (const RooArgSet &allVars, const RooArgSet &varsWithError=RooArgSet(), const RooArgSet &varsWithAsymError=RooArgSet());  ; void storeDetailedOutput (std::unique_ptr< TNamed > object);  ; void storeSummaryOutput (const RooArgSet &vars);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooStats/ToyMCStudy.h>. Inheritance diagram for RooStats::ToyMCStudy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ToyMCStudy(). RooStats::ToyMCStudy::ToyMCStudy ; (; const char * ; name = ""ToyMCStudy"", . const char * ; title = ""ToyMCStudy"" . ). inline . need to have constructor without arguments for proof ; Definition at line 34 of file ToyMCStudy.h. Member Function Documentation. ◆ Class(). static TClass * RooStats::ToyMCStudy::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ToyMCStudy.html:12266,inherit,inherited,12266,doc/master/classRooStats_1_1ToyMCStudy.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ToyMCStudy.html,3,['inherit'],['inherited']
Modifiability,"nheritance; Inherited Members; Includes; Libraries. Function documentation; ~ToyMCSampler(). Bool_t CheckConfig(void); only checks, no guessing/determination (do this in calculators,; e.g. using ModelConfig::GuessObsAndNuisance(...)). SamplingDistribution* GetSamplingDistribution(RooArgSet& paramPoint); Use for serial and parallel runs. SamplingDistribution* GetSamplingDistributionSingleWorker(RooArgSet& paramPoint); This is the main function for serial runs. It is called automatically; from inside GetSamplingDistribution when no ProofConfig is given.; You should not call this function yourself. This function should; be used by ToyMCStudy on the workers (ie. when you explicitly want; a serial run although ProofConfig is present). void GenerateGlobalObservables() const. RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight) const; This method generates a toy data set for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* GenerateToyDataImportanceSampling(RooArgSet& paramPoint, double& weight) const; This method generates a toy data set for importance sampling for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* Generate(RooAbsPdf& pdf, RooArgSet& observables, const RooDataSet* protoData = NULL, int forceEvents = 0) const; This is the generate function to use in the context of the ToyMCSampler; instead of the standard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). ToyMCSampler(); Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__ToyMCSampler.html:5509,variab,variables,5509,root/html530/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html530/RooStats__ToyMCSampler.html,1,['variab'],['variables']
Modifiability,"nheritance; Inherited Members; Includes; Libraries. Function documentation; ~ToyMCSampler(). Bool_t CheckConfig(void); only checks, no guessing/determination (do this in calculators,; e.g. using ModelConfig::GuessObsAndNuisance(...)). SamplingDistribution* GetSamplingDistribution(RooArgSet& paramPoint); Use for serial and parallel runs. SamplingDistribution* GetSamplingDistributionSingleWorker(RooArgSet& paramPoint); This is the main function for serial runs. It is called automatically; from inside GetSamplingDistribution when no ProofConfig is given.; You should not call this function yourself. This function should; be used by ToyMCStudy on the workers (ie. when you explicitly want; a serial run although ProofConfig is present). void GenerateGlobalObservables() const. RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight) const; This method generates a toy data set for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* GenerateToyDataImportanceSampling(RooArgSet& paramPoint, double& weight) const; This method generates a toy data set for importance sampling for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* Generate(RooAbsPdf& pdf, RooArgSet& observables, const RooDataSet* protoData = NULL, int forceEvents = 0) const; This is the generate function to use in the context of the ToyMCSampler; instead of the standard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). void ClearCache(); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ToyMCSampler.html:5689,variab,variables,5689,root/html532/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html532/RooStats__ToyMCSampler.html,2,['variab'],['variables']
Modifiability,"nherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooNumRunningInt; std::string _binningName;  Name of binning to be used for cache histogram. ;  ; RooRealProxy func;  Proxy to functions whose running integral is calculated. ;  ; RooRealProxy x;  Integrated observable. ;  ;  Protected Attributes inherited from RooAbsCachedReal; std::map< Int_t, std::pair< const RooArgSet *, const RooArgSet * > > _anaIntMap;  ! Map for analytical integration codes ;  ; RooObjCacheManager _cacheMgr;  ! The cache manager ;  ; Int_t _ipOrder;  Interpolation order for cache histograms. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumCdf.html:61204,inherit,inherited,61204,doc/master/classRooNumCdf.html,https://root.cern,https://root.cern/doc/master/classRooNumCdf.html,1,['inherit'],['inherited']
Modifiability,"nherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Protected Attributes; TArrayD fBinEntries;  Number of entries per bin. ;  ; TArrayD fBinSumw2;  Array of sum of squares of weights per bin. ;  ; EErrorType fErrorMode;  Option to compute errors. ;  ; Bool_t fScaling;  ! True when TProfile2D::Scale is called ;  ; Double_t fTsumwz;  Total Sum of weight*Z. ;  ; Double_t fTsumwz2;  Total Sum of weight*Z*Z. ;  ; Double_t fZmax;  Upper limit in Z (if set) ;  ; Double_t fZmin;  Lower limit in Z (if set) ;  ;  Protected Attributes inherited from TH2; Double_t fScalefactor;  Scale factor. ;  ; Double_t fTsumwxy;  Total Sum of weight*X*Y. ;  ; Double_t fTsumwy;  Total Sum of weight*Y. ;  ; Double_t fTsumwy2;  Total Sum of weight*Y*Y. ;  ;  Protected Attributes inherited from TH1; Short_t fBarOffset;  (1000*offset) for bar charts or legos ;  ; Short_t fBarWidth;  (1000*width) for bar charts or legos ;  ; EBinErrorOpt fBinStatErrOpt;  Option for bin statistical errors. ;  ; Double_t * fBuffer;  [fBufferSize] entry buffer ;  ; Int_t fBufferSize;  fBuffer size ;  ; TArrayD fContour;  Array to display contour levels. ;  ; Int_t fDimension;  ! Histogram dimension (1, 2 or 3 dim) ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this histogram ;  ; Double_t fEntries;  Number of entries. ;  ; TList * fFunctions;  ->Pointer to list of functions (fits and user) ;  ; Double_t * fIntegral;  ! Integral of bins used by GetRandom ;  ; Double_t fMaximum;  Maximum value for plotting. ;  ; Double_t fMinimum;  Minimum value for plotting. ;  ; Int_t fNcells;  Number of bins(1D), cells (2D) +U/Overflows. ;  ; Double_t fNormFactor;  Normalization factor. ;  ; TString fOption;  Histogram options. ;  ; TVirtualHistPainter * fPainter;  ! Pointer to histogram painter ;  ; EStatOverflows fStatOverflows;  Per object flag to use under/overflows in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:60759,inherit,inherited,60759,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['inherit'],['inherited']
Modifiability,"nherited from TClingDeclInfo;  TClingDeclInfo ()=default;  ;  TClingDeclInfo (const clang::Decl *D);  ; virtual ~TClingDeclInfo ();  ; clang::Decl * GetDecl ();  ; virtual const clang::Decl * GetDecl () const;  ; virtual bool IsValid () const;  ; virtual const char * Name () const;  . Static Public Member Functions; static bool IsEnum (cling::Interpreter *interp, const char *name);  . Private Attributes; std::string fDeclFileName;  ; bool fDescend: 1;  ; bool fFirstTime: 1;  ; cling::Interpreter * fInterp = nullptr;  ; bool fIsIter: 1;  ; clang::DeclContext::decl_iterator fIter;  ; bool fIterAll: 1;  ; std::vector< clang::DeclContext::decl_iterator > fIterStack;  ; llvm::DenseMap< const clang::Decl *, std::pair< ptrdiff_t, OffsetPtrFunc_t > > fOffsetCache;  ; std::mutex fOffsetCacheMutex;  ; std::string fTitle;  ; const clang::Type * fType = nullptr;  . Additional Inherited Members;  Protected Member Functions inherited from TClingDeclInfo; long Property (long property, clang::QualType &qt) const;  ;  Protected Attributes inherited from TClingDeclInfo; const clang::Decl * fDecl = nullptr;  ; std::string fNameCache;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/metacling/src/TClingClassInfo.h>. Inheritance diagram for TClingClassInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EInheritanceMode. enum TClingClassInfo::EInheritanceMode. EnumeratorkInThisScope ; kWithInheritance . Definition at line 79 of file TClingClassInfo.h. Constructor & Destructor Documentation. ◆ TClingClassInfo() [1/6]. TClingClassInfo::TClingClassInfo ; (; ). inlineexplicit . Definition at line 85 of file TClingClassInfo.h. ◆ TClingClassInfo() [2/6]. TClingClassInfo::TClingClassInfo ; (; const TClingClassInfo & ; rhs). inline . Definition at line 89 of file TClingClassInfo.h. ◆ TClingClassInfo() [3/6]. TClingClassInfo::TClingClassInfo ; (; cling::Interpreter * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClingClassInfo.html:5891,inherit,inherited,5891,doc/master/classTClingClassInfo.html,https://root.cern,https://root.cern/doc/master/classTClingClassInfo.html,2,['inherit'],['inherited']
Modifiability,"nherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTG16ColorSelector.html:26793,inherit,inherited,26793,doc/master/classTG16ColorSelector.html,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html,1,['inherit'],['inherited']
Modifiability,"nherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Attributes; TGHorizontalFrame * fBf;  Buttons frame. ;  ; TGLayoutHints * fBLayout;  Layout for cancel button. ;  ; TGLayoutHints * fBLayout1;  Layout for close button. ;  ; TGTextButton * fCANCEL;  Cancel button. ;  ; TGTextButton * fDONE;  Close button. ;  ; TTVLVEntry * fEntry;  Edited expression entry. ;  ; TGLabel * fLabel;  Label. ;  ; TGLabel * fLabelAlias;  Alias label. ;  ; TGLayoutHints * fLayout;  Layout hints for widgets inside. ;  ; TString fOldAlias;  Old alias for edited entry. ;  ; TGTextEntry * fTe;  Text entry box. ;  ; TGTextEntry * fTeAlias;  Alias text entry. ;  ; TTreeViewer * fViewer;  Pointer to tree viewer. ;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSelectBox.html:30583,inherit,inherited,30583,doc/master/classTGSelectBox.html,https://root.cern,https://root.cern/doc/master/classTGSelectBox.html,1,['inherit'],['inherited']
Modifiability,"nherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fDphi;  ; Double_t fPhi1;  ; Double_t fR;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTorus.html:20203,inherit,inherited,20203,doc/master/classTGeoTorus.html,https://root.cern,https://root.cern/doc/master/classTGeoTorus.html,3,['inherit'],['inherited']
Modifiability,"nherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  . #include <TGraphAsymmErrors.h>. Inheritance diagram for TGraphAsymmErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphAsymmErrors() [1/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; ). TGraphAsymmErrors default constructor. ; Definition at line 72 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [2/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; Int_t ; n). TGraphAsymmErrors normal constructor. ; the arrays are preset to zero ; Definition at line 119 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [3/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y, . const Float_t * ; exl = nullptr, . const Float_t * ; exh = nullptr, . const Float_t * ; eyl = nullptr, . const Float_t * ; eyh = nullptr . ). TGraphAsymmErro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:35385,inherit,inherited,35385,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,2,['inherit'],['inherited']
Modifiability,"nherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  . #include <TGraphBentErrors.h>. Inheritance diagram for TGraphBentErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphBentErrors() [1/5]. TGraphBentErrors::TGraphBentErrors ; (; ). TGraphBentErrors default constructor. ; Definition at line 62 of file TGraphBentErrors.cxx. ◆ TGraphBentErrors() [2/5]. TGraphBentErrors::TGraphBentErrors ; (; Int_t ; n). TGraphBentErrors normal constructor. ; the arrays are preset to zero ; Definition at line 92 of file TGraphBentErrors.cxx. ◆ TGraphBentErrors() [3/5]. TGraphBentErrors::TGraphBentErrors ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y, . const Float_t * ; exl = nullptr, . const Float_t * ; exh = nullptr, . const Float_t * ; eyl = nullptr, . const Float_t * ; eyh = nullptr, . const Float_t * ; exld = nullptr, . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:34062,inherit,inherited,34062,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,2,['inherit'],['inherited']
Modifiability,"nherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  . #include <TGraphErrors.h>. Inheritance diagram for TGraphErrors:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphErrors() [1/9]. TGraphErrors::TGraphErrors ; (; ). TGraphErrors default constructor. ; Definition at line 69 of file TGraphErrors.cxx. ◆ TGraphErrors() [2/9]. TGraphErrors::TGraphErrors ; (; Int_t ; n). TGraphErrors normal constructor. ; the arrays are preset to zero ; Definition at line 80 of file TGraphErrors.cxx. ◆ TGraphErrors() [3/9]. TGraphErrors::TGraphErrors ; (; Int_t ; n, . const Float_t * ; x, . const Float_t * ; y, . const Float_t * ; ex = nullptr, . const Float_t * ; ey = nullptr . ). TGraphErrors normal constructor. ; if ex or ey are null, the corresponding arrays are preset to zero ; Definition at line 93 of file TGraphErrors.cxx. ◆ TGraphErrors(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphErrors.html:33622,inherit,inherited,33622,doc/master/classTGraphErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphErrors.html,2,['inherit'],['inherited']
Modifiability,"nherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  . #include <TGraphQQ.h>. Inheritance diagram for TGraphQQ:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphQQ() [1/4]. TGraphQQ::TGraphQQ ; (; ). default constructor ; Definition at line 92 of file TGraphQQ.cxx. ◆ TGraphQQ() [2/4]. TGraphQQ::TGraphQQ ; (; Int_t ; n, . Double_t * ; x . ). Creates a quantile-quantile plot of dataset x. ; Theoretical distribution function can be defined later by SetFunction method ; Definition at line 100 of file TGraphQQ.cxx. ◆ TGraphQQ() [3/4]. TGraphQQ::TGraphQQ ; (; Int_t ; n, . Double_t * ; x, . TF1 * ; f . ). Creates a quantile-quantile plot of dataset x against function f. ; Definition at line 113 of file TGraphQQ.cxx. ◆ TGraphQQ() [4/4]. TGraphQQ::TGraphQQ ; (; Int_t ; nx, . Double_t * ; x, . Int_t ; ny, . Double_t * ; y . ). Creates a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphQQ.html:34422,inherit,inherited,34422,doc/master/classTGraphQQ.html,https://root.cern,https://root.cern/doc/master/classTGraphQQ.html,2,['inherit'],['inherited']
Modifiability,"nherited from TH2PolyBin; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Fill (Double_t value, Double_t weight);  Fill. ;  ; void SetErrorOption (EErrorType type);  ; void UpdateAverage ();  Update average. ;  ; void UpdateError ();  Update error. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t fAverage;  ; Double_t fError;  ; EErrorType fErrorMode = kERRORMEAN;  ; Double_t fSumvw;  ; Double_t fSumw;  ; Double_t fSumw2;  ; Double_t fSumwv2;  . Friends; class TProfile2Poly;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2PolyBin.html:10941,inherit,inherited,10941,doc/master/classTProfile2PolyBin.html,https://root.cern,https://root.cern/doc/master/classTProfile2PolyBin.html,1,['inherit'],['inherited']
Modifiability,"nherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; typedef std::atomic< TListOfEnums * > AListOfEnums_t;  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TROOT ();  Only used by Dictionary. ;  ; TListOfFunctions * GetGlobalFunctions ();  Internal routine returning, and creating if necessary, the list of global function. ;  ; void InitInterpreter ();  Initialize interpreter (cling) ;  ; void InitSystem ();  Operating System interface. ;  ; void InitThreads ();  Initialize threads library. ;  ; void * operator new (size_t l);  ; void * operator new (size_t l, void *ptr);  ; void ReadGitInfo ();  Read Git commit SHA1 and branch name. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:32120,inherit,inherited,32120,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['inherit'],['inherited']
Modifiability,"nherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Public Attributes; static constexpr int kIOBitCount = 1;  . Protected Member Functions; virtual void ReadResetBuffer (Int_t basketnumber);  Reset the read basket TBuffer memory allocation if needed. ;  ;  Protected Member Functions inherited from TKey; void Build (TDirectory *motherDir, const char *classname, Long64_t filepos);  Method used in all TKey constructor to initialize basic data fields. ;  ; virtual void Create (Int_t nbytes, TFile *f=nullptr);  Create a TKey object of specified size. ;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; void Reset ();  Reset the key as it had not been 'filled' yet. ;  ; virtual Int_t WriteFileKeepBuffer (TFile *f=nullptr);  Write the encoded object supported by this key. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TBranch * fBranch {nullptr};  Pointer to the basket support branch. ;  ; Int_t fBufferSize {0};  fBuffer length in bytes ;  ; TBuffer * fCompressedBufferRef {nullptr};  ! Compressed buffer. ;  ; Int_t * fDisplacement {nullptr};  ![fNevBuf] Displacement of entries in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBasket.html:16663,inherit,inherited,16663,doc/master/classTBasket.html,https://root.cern,https://root.cern/doc/master/classTBasket.html,1,['inherit'],['inherited']
Modifiability,"nherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Attributes; Int_t fDataSetInfoVrs;  ; Int_t fFileInfoVrs;  ; Int_t fSummaryVrs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofMonSender.h>. Inheritance diagram for TProofMonSender:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EConfigBits. enum TProofMonSender::EConfigBits. protected . EnumeratorkSendSummary ; kSendDataSetInfo ; kSendFileInfo . Definition at line 36 of file TProofMonSender.h. Constructor & Destructor Documentation. ◆ TProofMonSender(). TProofMonSender::TProofMonSender ; (; const char * ; n = ""Abstract"", . const char * ; t = ""ProofMonSender"" . ). inline . Definition at line 55 of file TProofMonSender.h. ◆ ~TProofMonSender(). TProofMonSender::~TProofMonSender ; (; ). inlineoverride . Definition at line 62 of file TProofMonSender.h. Member Function Documentation. ◆ Class(). static TClass * TProofMonSender::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSender.html:11632,inherit,inherited,11632,doc/master/classTProofMonSender.html,https://root.cern,https://root.cern/doc/master/classTProofMonSender.html,1,['inherit'],['inherited']
Modifiability,"nherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLCamera; void UpdateCache () const;  largest box diagonal seen in OfInterest() - used when bootstrapping interest box ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGLCamera; Bool_t fCacheDirty;  ; TGLMatrix fCamBase;  ; TGLMatrix fCamTrans;  ; TGLVector3 * fCenter;  ; TGLMatrix fClipM;  modelView matrix (cached) ;  ; TGLVector3 fDefCenter;  ; Double_t fDollyDefault;  last applied far-clip ;  ; Double_t fDollyDistance;  ; TGLVector3 fExtCenter;  ; Bool_t fExternalCenter;  ; Double_t fFarClip;  last applied near-clip ;  ; TGLVector3 fFDCenter;  ; Bool_t fFixDefCenter;  ; TGLPlane fFrustumPlanes [kPlanesPerFrustum];  object space clip matrix (cached) ;  ; TGLBoundingBox fInterestBox;  viewport (GL coords - origin bottom left) ;  ; Double_t fLargestSeen;  the interest box - created in UpdateInterest() ;  ; TGLMatrix fLastNoPickProjM;  timestamp ;  ; TGLMatrix fModVM;  projection matrix (cached) ;  ; Double_t fNearClip;  current camera center ;  ; TGLMatrix fProjM;  no-pick projection matrix (cached) ;  ; UInt_t fTimeStamp;  cached items dirty? ;  ; Float_t fVAxisMinAngle;  ; TGLRect fViewport;  frustum planes (cached) ;  ; Bool_t fWasArcBalled;  ;  Static Protected Attributes inherited from TGLCamera; static UInt_t fgDollyDeltaSens = 500;  . #include <TGLOrthoCamera.h>. Inheritance diagram for TGLOrthoCamera:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EType. enum TGLOrthoCamera::EType. EnumeratorkZOY ; kXOZ ; kXOY ; kZnOY ; kXnOZ ; kXnOY ; kZOX ; kZnOX . Definition at line 38 of file TGLOrthoCamera.h. Constructor & Destructor Documentation. ◆ TGLOrthoCamera() [1/2]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLOrthoCamera.html:19682,inherit,inherited,19682,doc/master/classTGLOrthoCamera.html,https://root.cern,https://root.cern/doc/master/classTGLOrthoCamera.html,2,['inherit'],['inherited']
Modifiability,"nherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLCamera; void UpdateCache () const;  largest box diagonal seen in OfInterest() - used when bootstrapping interest box ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGLCamera; Bool_t fCacheDirty;  ; TGLMatrix fCamBase;  ; TGLMatrix fCamTrans;  ; TGLVector3 * fCenter;  ; TGLMatrix fClipM;  modelView matrix (cached) ;  ; TGLVector3 fDefCenter;  ; Double_t fDollyDefault;  last applied far-clip ;  ; Double_t fDollyDistance;  ; TGLVector3 fExtCenter;  ; Bool_t fExternalCenter;  ; Double_t fFarClip;  last applied near-clip ;  ; TGLVector3 fFDCenter;  ; Bool_t fFixDefCenter;  ; TGLPlane fFrustumPlanes [kPlanesPerFrustum];  object space clip matrix (cached) ;  ; TGLBoundingBox fInterestBox;  viewport (GL coords - origin bottom left) ;  ; Double_t fLargestSeen;  the interest box - created in UpdateInterest() ;  ; TGLMatrix fLastNoPickProjM;  timestamp ;  ; TGLMatrix fModVM;  projection matrix (cached) ;  ; Double_t fNearClip;  current camera center ;  ; TGLMatrix fProjM;  no-pick projection matrix (cached) ;  ; UInt_t fTimeStamp;  cached items dirty? ;  ; Float_t fVAxisMinAngle;  ; TGLRect fViewport;  frustum planes (cached) ;  ; Bool_t fWasArcBalled;  ;  Static Protected Attributes inherited from TGLCamera; static UInt_t fgDollyDeltaSens = 500;  . #include <TGLPerspectiveCamera.h>. Inheritance diagram for TGLPerspectiveCamera:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLPerspectiveCamera() [1/2]. TGLPerspectiveCamera::TGLPerspectiveCamera ; (; ). Construct default XOZ perspective camera. ; Definition at line 34 of file TGLPerspectiveCamera.cxx. ◆ TGLPerspectiveCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLPerspectiveCamera.html:18769,inherit,inherited,18769,doc/master/classTGLPerspectiveCamera.html,https://root.cern,https://root.cern/doc/master/classTGLPerspectiveCamera.html,2,['inherit'],['inherited']
Modifiability,"nherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void CalcNorm (const std::vector< const Event * > &);  TODO --> adapt to variable,target,spectator selection method to calculate minimum, maximum, mean, and RMS for all variables used in the MVA. ;  ; Int_t GetNClasses () const;  ; UInt_t GetNSpectators () const;  ; UInt_t GetNTargets () const;  ; UInt_t GetNVariables () const;  ; void SetCreated (Bool_t c=kTRUE);  ; void SetName (const TString &c);  ; void SetNVariables (UInt_t i);  ; std::vector< TMVA::VariableInfo > & Spectators ();  ; std::vector< TMVA::VariableInfo > & Targets ();  ; std::vector< TMVA::VariableInfo > & Variables ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Event * fBackTransformedEvent;  holds the current back-transformed event ;  ; DataSetInfo & fDsi;  ; DataSetInfo * fDsiOutput;  ; VectorOfCharAndInt fGet;  get variables/targets/spectators ;  ; MsgLogger * fLogger;  ! message logger ;  ; VectorOfCharAndInt fPut;  put variables/targets/spectators ;  ; TMVAVersion_t fTMVAVersion;  ; Event * fTransformedEvent;  holds the current transformed event ;  . Private Member Functions; void UpdateNorm (Int_t ivar, Double_t x);  TODO --> adapt to variable,target,spectator selection update min and max of a given variable (target) and a given transformation method. ;  . Private Attributes; Bool_t fCreated;  has be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:13117,inherit,inherited,13117,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['inherit'],['inherited']
Modifiability,"nherited from TRootBrowser; enum  EInsertPosition { kLeft; , kRight; , kBottom; };  ; enum  ENewBrowserMessages { ;   kBrowse = 11011; , kOpenFile; , kClone; , kHelpAbout; , ;   kHelpOnBrowser; , kHelpOnCanvas; , kHelpOnMenus; , kHelpOnGraphicsEd; , ;   kHelpOnObjects; , kHelpOnPS; , kHelpOnRemote; , kNewEditor; , ;   kNewCanvas; , kNewHtml; , kExecPluginMacro; , kExecPluginCmd; , ;   kCloseTab; , kCloseWindow; , kQuitRoot. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBrowser.html:41672,inherit,inherited,41672,doc/master/classTEveBrowser.html,https://root.cern,https://root.cern/doc/master/classTEveBrowser.html,1,['inherit'],['inherited']
Modifiability,"nherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <RooAbsArg.h>. Inheritance diagram for RooRefArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRefArray() [1/2]. RooRefArray::RooRefArray ; (; ). default . ◆ RooRefArray() [2/2]. RooRefArray::RooRefArray ; (; const RooRefArray & ; other). inline . Definition at line 67 of file RooAbsArg.h. Member Function Documentation. ◆ Class(). static TClass * RooRefArray::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooRefArray::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooRefArray::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 70 of file RooAbsArg.h. ◆ DeclFileName(). static const char * RooRefArray::DeclFileName ; (; ). inlinestatic . ReturnsName of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRefArray.html:19161,inherit,inherited,19161,doc/master/classRooRefArray.html,https://root.cern,https://root.cern/doc/master/classRooRefArray.html,2,['inherit'],['inherited']
Modifiability,"nherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TObjArray; TObject ** fCont;  ; Int_t fLast;  ; Int_t fLowerBound;  Array contents. ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TGeoNavigator.h>. Inheritance diagram for TGeoNavigatorArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoNavigatorArray() [1/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; const TGeoNavigatorArray & ; ). privatedelete . ◆ TGeoNavigatorArray() [2/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; ). inline . Definition at line 303 of file TGeoNavigator.h. ◆ TGeoNavigatorArray() [3/3]. TGeoNavigatorArray::TGeoNavigatorArray ; (; TGeoManager * ; mgr). inline . Definition at line 304 of file TGeoNavigator.h. ◆ ~TGeoNavigatorArray(). TGeoNavigatorArray::~TGeoNavigatorArray ; (; ). inlineoverride . Definition at line 305 of file TGeoNavigator.h. Member Function Documentation. ◆ AddNavigator(). TGeoNavigator * TGeoNavigatorArray::AddNavigator ; (; ). Add a new navigator to the array. ; Definition at line 27",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNavigatorArray.html:19647,inherit,inherited,19647,doc/master/classTGeoNavigatorArray.html,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html,2,['inherit'],['inherited']
Modifiability,"nhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,int>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Str",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4Binding_double_double_double_double_int_.html:35767,config,configuration,35767,root/html534/RooCFunction4Binding_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4Binding_double_double_double_double_int_.html,2,['config'],['configuration']
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2C(); Constructor. ~TH2C(); Destructor. TH2C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2C(const TH2C& h2c); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1*-*-*-*-; *-* ==========================. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w*-*-*-*-; *-* ============",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2C.html:25337,Inherit,Inheritance,25337,root/html532/TH2C.html,https://root.cern,https://root.cern/root/html532/TH2C.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2C(); Constructor. ~TH2C(); Destructor. TH2C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2C(const TH2C& h2c); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy. void Reset(Option_t* optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2C.html:28373,Inherit,Inheritance,28373,root/html602/TH2C.html,https://root.cern,https://root.cern/root/html602/TH2C.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2D(); Constructor. ~TH2D(); Destructor. TH2D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2D(const TMatrixDBase& m); Constructor. TH2D(const TH2D& h2d); Copy constructor. void Copy(TObject& hnew) const; Copy. TH1 * DrawCopy(Option_t* option = """") const; Draw copy. Double_t GetBinContent(Int_t bin) const; Get bin content. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2D.html:25391,Inherit,Inheritance,25391,root/html532/TH2D.html,https://root.cern,https://root.cern/root/html532/TH2D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2D(); Constructor. ~TH2D(); Destructor. TH2D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2D(const TMatrixDBase& m); Constructor. TH2D(const TH2D& h2d); Copy constructor. void Copy(TObject& hnew) const; Copy. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2D.html:28427,Inherit,Inheritance,28427,root/html602/TH2D.html,https://root.cern,https://root.cern/root/html602/TH2D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2F(); Constructor. ~TH2F(); Destructor. TH2F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2F(const TMatrixFBase& m); Constructor. TH2F(const TH2F& h2f); Copy constructor. void Copy(TObject& hnew) const; Copy. TH1 * DrawCopy(Option_t* option = """") const; Draw copy. Double_t GetBinContent(Int_t bin) const; Get bin content. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2F.html:25379,Inherit,Inheritance,25379,root/html532/TH2F.html,https://root.cern,https://root.cern/root/html532/TH2F.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2F(); Constructor. ~TH2F(); Destructor. TH2F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2F(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2F(const TMatrixFBase& m); Constructor. TH2F(const TH2F& h2f); Copy constructor. void Copy(TObject& hnew) const; Copy. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. void SetBinsLength(Int_t n = -1); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2F.html:28415,Inherit,Inheritance,28415,root/html602/TH2F.html,https://root.cern,https://root.cern/root/html602/TH2F.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2I(); Constructor. ~TH2I(); Destructor. TH2I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2I(const TH2I& h2i); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1*-*-*-*-; *-* ==========================. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w*-*-*-*-; *-* ============",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2I.html:25351,Inherit,Inheritance,25351,root/html532/TH2I.html,https://root.cern,https://root.cern/root/html532/TH2I.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2I(); Constructor. ~TH2I(); Destructor. TH2I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2I(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2I(const TH2I& h2i); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy. void Reset(Option_t* optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2I.html:28387,Inherit,Inheritance,28387,root/html602/TH2I.html,https://root.cern,https://root.cern/root/html602/TH2I.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2S(); Constructor. ~TH2S(); Destructor. TH2S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2S(const TH2S& h2s); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1*-*-*-*-; *-* ==========================. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w*-*-*-*-; *-* ============",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2S.html:25357,Inherit,Inheritance,25357,root/html532/TH2S.html,https://root.cern,https://root.cern/root/html532/TH2S.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nhistogram options; TVirtualHistPainter*TH1::fPainter!pointer to histogram painter; Double_tTH2::fScalefactorScale factor; TArrayDTH1::fSumw2Array of sum of squares of weights; TStringTNamed::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH2::fTsumwxyTotal Sum of weight*X*Y; Double_tTH2::fTsumwyTotal Sum of weight*Y; Double_tTH2::fTsumwy2Total Sum of weight*Y*Y; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2S(); Constructor. ~TH2S(); Destructor. TH2S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); Constructor. TH2S(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins); Constructor. TH2S(const TH2S& h2s); Copy constructor. void AddBinContent(Int_t bin); Increment bin content by 1. void AddBinContent(Int_t bin, Double_t w); Increment bin content by w. void Copy(TObject& hnew) const; Copy. void Reset(Option_t* optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2S.html:28393,Inherit,Inheritance,28393,root/html602/TH2S.html,https://root.cern,https://root.cern/root/html602/TH2S.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"niIndex Class ReferenceTMVA. ; Implementation of the GiniIndex as separation criterion. ; Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same amount of signal and bkg) bkg.; Small Indices mean, well separated.; General definition:. \[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \]. Where:; \( M \) is a sample of whatever \( N \) elements (events) that belong to \( K \) different classes.; \( c(k) \) is the number of elements that belong to class \( k \) for just Signal and Background classes this boils down to:. \[; Gini(Sample) = \frac{2sb}{(s+b)^2}; \]. Definition at line 63 of file GiniIndex.h. Public Member Functions;  GiniIndex ();  ;  GiniIndex (const GiniIndex &g);  ; virtual ~GiniIndex ();  ; virtual Double_t GetSeparationIndex (const Double_t s, const Double_t b);  what we use here is 2*Gini. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::SeparationBase;  SeparationBase ();  Constructor. ;  ;  SeparationBase (const SeparationBase &s);  Copy constructor. ;  ; virtual ~SeparationBase ();  ; const TString & GetName ();  ; virtual Double_t GetSeparationGain (const Double_t nSelS, const Double_t nSelB, const Double_t nTotS, const Double_t nTotB);  Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::SeparationBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1GiniIndex.html:1285,inherit,inherited,1285,doc/master/classTMVA_1_1GiniIndex.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1GiniIndex.html,1,['inherit'],['inherited']
Modifiability,"nificance_value) const; Double_tTMVA::MethodBase::GetMean(Int_t ivar) const; const TString&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodANNBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual Double_tTMVA::MethodBase::GetProba(const TMVA::Event* ev); virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodANNBase::GetRegressionValues(); Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1D* histS, TH1D* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; virtual Double_tTMVA::MethodBase::GetSeparation(TH1*, TH1*) const; virtual Double_tTMVA::MethodBase::GetSeparation(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; Double_tTMVA::MethodBase::GetSignalRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodMLP.html:5289,Config,Configurable,5289,root/html602/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodMLP.html,2,['Config'],['Configurable']
Modifiability,"nificant variables(?) can be used for the pattern; recognition problem of extracting the valid combinations of; coordinates describing a true trajectory from the set of all possible; wrong combinations. The program described here performs this principal components analysis; on a sample of data provided by the user. It computes the covariance; matrix, its eigenvalues ands corresponding eigenvectors and exhibits; the behavior of the principal components (), thus providing; to the user all the means of understanding his data. Principal Components Method. Let's consider a sample of prototypes each being characterized by; variables. . Each prototype is a point, or a; column vector, in a -dimensional pattern space. (1). where each represents the particular value associated with the; -dimension. Those variables are the quantities accessible to the; experimentalist, but are not necessarily the most significant for the; classification purpose. The Principal Components Method consists of applying a; linear transformation to the original variables. This; transformation is described by an orthogonal matrix and is equivalent; to a rotation of the original pattern space into a new set of; coordinate vectors, which hopefully provide easier feature; identification and dimensionality reduction. Let's define the covariance matrix:. (2). and the brackets indicate mean value over the sample of ; prototypes. This matrix is real, positive definite, symmetric, and will; have all its eigenvalues greater then zero. It will now be show that; among the family of all the complete orthonormal bases of the pattern; space, the base formed by the eigenvectors of the covariance matrix; and belonging to the largest eigenvalues, corresponds to the most; significant features of the description of the original prototypes. let the prototypes be expanded on into a set of basis vectors. ,. (3). The `best' feature coordinates , spanning a feature; space, will be obtained by minimizing the error due to this;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPrincipal.html:3452,variab,variables,3452,root/html528/TPrincipal.html,https://root.cern,https://root.cern/root/html528/TPrincipal.html,6,['variab'],['variables']
Modifiability,"niform(Double_t x1 = 1); virtual Double_tUniform(Double_t x1, Double_t x2); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteRandom(const char* filename). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; UInt_tfSeedRandom number generator seed; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom(UInt_t seed = 65539); Default constructor. For seed see SetSeed(). ~TRandom(); Default destructor. Can reset gRandom to 0 if gRandom points to this; generator. Int_t Binomial(Int_t ntot, Double_t prob); Generates a random integer N according to the binomial law.; Coded from Los Alamos report LA-5061-MS. N is binomially distributed between 0 and ntot inclusive; with mean prob*ntot and prob is between 0 and 1. Note: This function should not be used when ntot is large (say >100).; The normal approximation is then recommended instead; (with mean =*ntot+0.5 and standard deviation sqrt(ntot*prob*(1-prob)). Double_t BreitWigner(Double_t mean = 0, Double_t gamma = 1); Return a number distributed following a BreitWigner function with mean and gamma. void Circle(Double_t& x, Double_t& y, Double_t r); Generates random vectors, uniformly distributed over a circle of given radius.; Input : r = circle radius; Output: x,y a random 2-d vector ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRandom.html:11081,Inherit,Inheritance,11081,root/html534/TRandom.html,https://root.cern,https://root.cern/root/html534/TRandom.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"niform(Double_t x1 = 1); virtual Double_tUniform(Double_t x1, Double_t x2); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteRandom(const char* filename). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; UInt_tfSeedRandom number generator seed; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom(UInt_t seed = 65539); default constructor*-*-*-*-; *-* ===================. ~TRandom(); default destructor*-*-*-*-; *-* ==================. Int_t Binomial(Int_t ntot, Double_t prob); Generates a random integer N according to the binomial law; Coded from Los Alamos report LA-5061-MS. N is binomially distributed between 0 and ntot inclusive; with mean prob*ntot.; prob is between 0 and 1. Note: This function should not be used when ntot is large (say >100).; The normal approximation is then recommended instead; (with mean =*ntot+0.5 and standard deviation sqrt(ntot*prob*(1-prob)). Double_t BreitWigner(Double_t mean = 0, Double_t gamma = 1); Return a number distributed following a BreitWigner function with mean and gamma. void Circle(Double_t& x, Double_t& y, Double_t r); generates random vectors, uniformly distributed over a circle of given radius.; Input : r = circle radius; Output: x,y a random 2-d vector of length r. Double_t E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRandom.html:11062,Inherit,Inheritance,11062,root/html532/TRandom.html,https://root.cern,https://root.cern/root/html532/TRandom.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TEvePr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneList.html:32171,inherit,inherited,32171,doc/master/classTEveSceneList.html,https://root.cern,https://root.cern/doc/master/classTEveSceneList.html,2,['inherit'],['inherited']
Modifiability,"nimTransformVariableMinimTransformVariable(double lower, ROOT::Math::SqrtLowVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double upper, ROOT::Math::SqrtUpVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); ROOT::Math::MinimTransformVariable&operator=(const ROOT::Math::MinimTransformVariable& rhs); doubleUpperBound() const. Data Members; private:. boolfBoundshas double bound; boolfFixfix variable; boolfLowBoundhas lower bound ; doublefLowerlower parameter limit; auto_ptr<ROOT::Math::MinimizerVariableTransformation>fTransformpointer to the minimizer transformation ; boolfUpBoundhas uppper bound param ; doublefUpperupper parameter limit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformVariable(). Default Constructor for an unlimited variable. {}. MinimTransformVariable(double value); constructor for fixed variable. {}. MinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); constructor for double bound variable. { }. MinimTransformVariable(double lower, SqrtLowVariableTransformation * trafo); constructor for lower bound variable. {}. MinimTransformVariable(double upper, SqrtUpVariableTransformation * trafo); constructor for upper bound variable. {}. MinimTransformVariable(const ROOT::Math::MinimTransformVariable& rhs); copy constructor. MinimTransformVariable & operator=(const ROOT::Math::MinimTransformVariable& rhs); assignment. bool IsFixed() const; { return fFix; }. bool IsLimited() const; { return fBounds || fLowBound || fUpBound; }. bool HasLowerBound() const; { return fLowBound || fBounds; }. bool HasUpperBound() const; { return fUpBound || fBounds; }. double LowerBound() const; { return fLower; }. double UpperBound() const; { return fUpper; }. double FixValue() const; { return fLower; }. double InternalToExternal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MinimTransformVariable.html:1942,variab,variable,1942,root/html534/ROOT__Math__MinimTransformVariable.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MinimTransformVariable.html,2,['variab'],['variable']
Modifiability,"nimisation is performed as a function of x; for fixed lambda=0; or; (b) constrained: stationary point is found as a function of x and lambda. The constraint can be useful to reduce biases on the result x; in cases where the vector y follows non-Gaussian probability densities; (example: Poisson statistics at counting experiments in particle physics). Some random examples:. (1) measure a cross-section as a function of, say, E_T(detector); and unfold it to obtain the underlying distribution E_T(generator); (2) measure a lifetime distribution and unfold the contributions from; different flavours; (3) measure the transverse mass and decay angle; and unfold for the true mass distribution plus background. Documentation. Some technical documentation is available here:; http://www.desy.de/~sschmitt. Note:; For most applications it is better to use the derived class; TUnfoldSys or even better TUnfoldDensity. TUnfoldSys extends the functionality of TUnfold; such that systematic errors are propagated to teh result; and that the unfolding can be done with proper background; subtraction. TUnfoldDensity extends further the functionality of TUnfoldSys; complex binning schemes are supported; The binning of input histograms is handeld consistently:; (1) the regularisation may be done by density,; i.e respecting the bin widths; (2) methods are provided which preserve the proper binning; of the result histograms. Implementation. The result of the unfolding is calculated as follows:. Lsquared = L#L regularisation conditions squared. epsilon_j = sum_i A_ij vector of efficiencies. E^-1 = ((A# Vyy^-1 A)+tau^2 Lsquared). x = E (A# Vyy^-1 y + tau^2 Lsquared x0 +lambda/2 * epsilon) is the result. The derivatives; dx_k/dy_i; dx_k/dA_ij; dx_k/d(tau^2); are calculated for further usage. The covariance matrix V_xx is calculated as:; Vxx_ij = sum_kl dx_i/dy_k Vyy_kl dx_j/dy_l. Warning:. The algorithm is based on ""standard"" matrix inversion, with the; known limitations in numerical accuracy and comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfold.html:3248,extend,extends,3248,root/html534/TUnfold.html,https://root.cern,https://root.cern/root/html534/TUnfold.html,6,['extend'],['extends']
Modifiability,"nimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(ROOT::Math::Minimizer& min, const ROOT::Fit::FitConfig& fconfig, const ROOT::Fit::FitResult::IModelFunction* f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Construct from a Minimizer instance after fitting; Run also Minos if requested from the configuration. FitResult(const FitResult &). Copy constructor. virtual ~FitResult(). Destructor. bool Update(const ROOT::Math::Minimizer& min, bool isValid, unsigned int ncalls = 0). Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created. const std::string & MinimizerType() const; minimization quantities ; minimizer type. { return fMinimType; }. bool IsValid() const. True if fit successful, otherwise false.; A fit is considered successful if the minimizer succeded in finding the; minimum. It could happen that subsequent operations like error analysis (e.g. Minos); failed. In that case the status can be still true if the original minimization algorithm; succeeded in finding the minimum.; One can query in that case the minimizer return status using Status().; It is responability to the Minimizer class to tag a found minimum as valid or not; and to produce also a status code. { return fValid; }. bool IsEmpty() const; True if a fit result does not exist (even invalid) with parameter values. { return (fParams.size() == 0); }. double MinFcnValue() const; Return value of the objective ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__FitResult.html:5737,config,configuration,5737,root/html534/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__FitResult.html,4,['config'],['configuration']
Modifiability,"nimizer.cxx:109; ROOT::Math::Minimizer::SetValidErrorvoid SetValidError(bool on)flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit)Definition Minimizer.h:350; ROOT::Math::Minimizer::SetVariablesint SetVariables(const VariableIterator &begin, const VariableIterator &end)add variables . Return number of variables successfully addedDefinition Minimizer.h:146; ROOT::Math::Minimizer::GlobalCCvirtual double GlobalCC(unsigned int ivar) constreturn global correlation coefficient for variable i This is a number between zero and one which give...Definition Minimizer.cxx:161; ROOT::Math::Minimizer::MinGradientvirtual const double * MinGradient() constreturn pointer to gradient values at the minimumDefinition Minimizer.h:225; ROOT::Math::Minimizer::MinimizerMinimizer(Minimizer &&)=delete; ROOT::Math::Minimizer::fStatusint fStatusstatus of minimizerDefinition Minimizer.h:371; ROOT::Math::Minimizer::SetVariableValuevirtual bool SetVariableValue(unsigned int ivar, double value)set the value of an already existing variableDefinition Minimizer.cxx:53; ROOT::Math::Minimizer::SetFunctionvirtual void SetFunction(const ROOT::Math::IMultiGenFunction &func)=0set the function to minimize; ROOT::Math::Minimizer::Scanvirtual bool Scan(unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0)scan function minimum for variable i.Definition Minimizer.cxx:195; ROOT::Math::Minimizer::MaxIterationsunsigned int MaxIterations() constmax iterationsDefinition Minimizer.h:297; ROOT::Math::Minimizer::SetDefaultOptionsvoid SetDefaultOptions()reset the default options (defined in MinimizerOptions)Definition Minimizer.h:361; ROOT::Math::Minimizer::fValidErrorbool fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit)Definition Minimizer.h:369; ROOT::Math::Minimizer::MinosStatusvirtual int MinosStatus() conststatus code of Minos (to be re-implemented by the minimizers supporting Minos)Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:24220,variab,variableDefinition,24220,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variableDefinition']
Modifiability,"nimizer.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooMinimizerWrapper class around ROOT::Math::Minimizer that provides a seamless interface between the minimizer f...Definition RooMinimizer.h:48; RooMinimizer::migradint migrad()Execute MIGRAD.Definition RooMinimizer.cxx:318; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ShiftToZeroRooCmdArg ShiftToZero()Definition RooGlobalFunc.cxx:191; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; xDouble_t x[n]Definition legend1.C:17; RooFit::Detail::MathFuncs::nlldouble nll(double pdf, double we",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf605__profilell_8C.html:4444,variab,variable,4444,doc/master/rf605__profilell_8C.html,https://root.cern,https://root.cern/doc/master/rf605__profilell_8C.html,1,['variab'],['variable']
Modifiability,"nimizer::MinimizerParametersconst GeneticMinimizerParameters & MinimizerParameters() constDefinition GeneticMinimizer.h:96; ROOT::Math::GeneticMinimizer::NDimunsigned int NDim() const overridethis is <= Function().NDim() which is the total number of variables (free+ constrained ones)Definition GeneticMinimizer.cxx:348; ROOT::Math::GeneticMinimizer::CovMatrixdouble CovMatrix(unsigned int i, unsigned int j) const overridereturn covariance matrices element for variables ivar,jvar if the variable is fixed the return value ...Definition GeneticMinimizer.cxx:368; ROOT::Math::GeneticMinimizer::SetRandomSeedvoid SetRandomSeed(int seed)Definition GeneticMinimizer.h:94; ROOT::Math::GeneticMinimizer::NFreeunsigned int NFree() const overridenumber of free variables (real dimension of the problem) this is <= Function().NDim() which is the to...Definition GeneticMinimizer.cxx:355; ROOT::Math::GeneticMinimizer::SetLimitedVariablebool SetLimitedVariable(unsigned int, const std::string &, double, double, double, double) overrideset a new upper/lower limited variable (override if minimizer supports them ) otherwise as default se...Definition GeneticMinimizer.cxx:146; ROOT::Math::GeneticMinimizer::SetOptionsvirtual void SetOptions(const ROOT::Math::MinimizerOptions &opt)Definition GeneticMinimizer.cxx:217; ROOT::Math::GeneticMinimizer::MinValuedouble MinValue() const overridereturn minimum function valueDefinition GeneticMinimizer.cxx:331; ROOT::Math::GeneticMinimizer::Errorsconst double * Errors() const overridereturn errors at the minimumDefinition GeneticMinimizer.cxx:366; ROOT::Math::GeneticMinimizer::NCallsunsigned int NCalls() const overridenumber of function calls to reach the minimumDefinition GeneticMinimizer.cxx:340; ROOT::Math::GeneticMinimizer::Minimizebool Minimize() overridemethod to perform the minimizationDefinition GeneticMinimizer.cxx:252; ROOT::Math::GeneticMinimizer::GetGeneticOptionsvoid GetGeneticOptions(ROOT::Math::MinimizerOptions &opt) constDefinition GeneticM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneticMinimizer_8h_source.html:4922,variab,variable,4922,doc/master/GeneticMinimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneticMinimizer_8h_source.html,1,['variab'],['variable']
Modifiability,"nimizer::X() const. protected:. boolROOT::Math::BasicMinimizer::CheckDimension() const; boolROOT::Math::BasicMinimizer::CheckObjFunction() const; ROOT::Math::MinimTransformFunction*ROOT::Math::BasicMinimizer::CreateTransformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidROOT::Math::BasicMinimizer::SetFinalValues(const double* x); voidROOT::Math::BasicMinimizer::SetMinValue(double val). private:. ROOT::Math::GSLMinimizerGSLMinimizer(const ROOT::Math::GSLMinimizer&); ROOT::Math::GSLMinimizer&operator=(const ROOT::Math::GSLMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. ROOT::Math::GSLMultiMinimizer*fGSLMultiMin; doublefLSToleranceLine Search Tolerance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMinimizer(ROOT::Math::EGSLMinimizerType type = ROOT::Math::kConjugateFR). Default constructor. GSLMinimizer(const char* type). Constructor with a string giving name of algorithm. virtual ~GSLMinimizer(). Destructor. GSLMinimizer(const ROOT::Math::GSLMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set the function to minimize. { BasicMinimizer::SetFunction(func);}. bool Minimize(); method to perform the minimization. double Edm() const; return expected distance reached from the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLMinimizer.html:7253,Inherit,Inheritance,7253,root/html602/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLMinimizer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nimum values ; vector<std::string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; boolfOwnFuncflag to indicate if objective function is managed ; ROOT::Math::GSLSimAnnealingfSolver; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLSimAnMinimizer(int type = 0). Default constructor. ~GSLSimAnMinimizer(). Destructor (no operations). GSLSimAnMinimizer(const GSLSimAnMinimizer &); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html:5655,variab,variable,5655,root/html526/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html,1,['variab'],['variable']
Modifiability,"nimum. { return NCalls(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total; (re-implement if minimizer supports bounded parameters). { return NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return NULL; }. double CovMatrix(unsigned int ivar, unsigned int jvar) const; return covariance matrices element for variables ivar,jvar; if the variable is fixed the return value is zero; The ordering of the variables is the same as in the parameter and errors vectors. bool GetCovMatrix(double* covMat) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* hMat) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int ivar) const. return global correlation coeffi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:9060,variab,variables,9060,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,6,['variab'],['variables']
Modifiability,"ning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetLearnEntries ();  Static function returning the number of entries used to train the cache see SetLearnEntries. ;  ; static void SetLearnEntries (Int_t n=10);  Static function to set the number of entries to be used in learning mode The default value for n is 10. ;  ;  Static Public Member Functions inherited from TFileCacheRead; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fAutoCreated {false};  ! true if cache was automatically created ;  ; TObjArray * fBranches {nullptr};  ! List of branches to be stored in the cache ;  ; TList * fBrNames {nullptr};  ! list of branch names in the cache ;  ; Long64_t fCurrentClusterStart {-1};  ! Start of the cluster(s) where the current content was picked out ;  ; bool fEnabled {true};  ! cache enabled for cached reading ;  ; Long64_t fEntryCurrent {-1};  ! current lowest entry number in the cache ;  ; Long64",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCache.html:26549,inherit,inherited,26549,doc/v632/classTTreeCache.html,https://root.cern,https://root.cern/doc/v632/classTTreeCache.html,4,['inherit'],['inherited']
Modifiability,"ning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttAxis;  TAttAxis ();  ; virtual ~TAttAxis ();  Destructor. ;  ; void Copy (TAttAxis &attaxis) const;  Copy of the object. ;  ; virtual Color_t GetAxisColor () const;  ; virtual Color_t GetLabelColor () const;  ; virtual Style_t GetLabelFont () const;  ; virtual Float_t GetLabelOffset () const;  ; virtual Float_t GetLabelSize () const;  ; virtual Int_t GetMaxDigits () const;  ; virtual Int_t GetNdivisions () const;  ; virtual Float_t GetTickLength () const;  ; virtual Color_t GetTitleColor () const;  ; virtual Style_t GetTitleFont () const;  ; virtual Float_t GetTitleOffset () const;  ; virtual Float_t GetTitleSize () const;  ; virtual void ResetAttAxis (Option_t *option="""");  Reset axis attributes. ;  ; virtual void SaveAttributes (std::ostream &out, const char *name, const char *subname);  Save axis attributes as C++ statement(s) on output stream out. ;  ; virtual void SetAxisColor (Color_t color=1, Float_t alpha=1.);  Set color of the line axis and tick ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionAxes.html:27933,inherit,inherited,27933,doc/master/classTEveProjectionAxes.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionAxes.html,1,['inherit'],['inherited']
Modifiability,"ning sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.02 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Factory : Training finished; : ; Factory : Train method: Fisher for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Fisher ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : Fisher discriminants select events by distinguishing the mean ; : values of the signal and background distributions in a trans- ; : formed variable space where linear correlations are removed.; : ; : (More precisely: the ""linear discriminator"" determines; : an axis in the (correlated) hyperspace of the input ; : variables such that, when projecting the output classes ; : (signal and background) upon this axis, they are pushed ; : as far as possible away from each other, while events; : of a same class are confined in a close vicinity. The ; : linearity property of this classifier is reflected in the ; : metric with which ""far apart"" and ""close vicinity"" are ; : determined: the covariance matrix of the discriminating; : variable space.); : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Optimal performance for Fisher discriminants is obtained for ; : linearly correlated Gaussian-distributed variables. Any deviation; : from this ideal reduces the achievable separation power. In ; : particular, no discrimination at all is achieved for a variable; : that has the same sample mean for signal and background, even if ; : the shapes of the distributions are very different. Thus, Fisher ; : discriminants often benefit from suitable transformations of the ; : input variables. For example, if a variable x in [-1,1] has a ; : a parabolic signal distributio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:18983,variab,variables,18983,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['variab'],['variables']
Modifiability,"ning specification on first and optionally second and third; observable to binning in given reference TH1. Used by constructors; that import data from an external TH1. void initialize(const char* binningName = 0, Bool_t fillTree = kTRUE); Initialization procedure: allocate weights array, calculate; multipliers needed for N-space to 1-dim array jump table,; and fill the internal tree with all bin center coordinates. RooDataHist(const RooDataHist& other, const char* newname = 0); Copy constructor. RooDataHist(const char* name, const char* title, RooDataHist* h, const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange, Int_t nStart, Int_t nStop, Bool_t copyCache); Constructor of a data hist from (part of) an existing data hist. The dimensions; of the data set are defined by the 'vars' RooArgSet, which can be identical; to 'dset' dimensions, or a subset thereof. Reduced dimensions will be projected; in the output data hist. The optional 'cutVar' formula variable can used to; select the subset of bins to be copied. For most uses the RooAbsData::reduce() wrapper function, which uses this constructor,; is the most convenient way to create a subset of an existing data. RooAbsData* cacheClone(const RooAbsArg* newCacheOwner, const RooArgSet* newCacheVars, const char* newName = 0); Construct a clone of this dataset that contains only the cached variables. RooAbsData* reduceEng(const RooArgSet& varSubset, const RooFormulaVar* cutVar, const char* cutRange = 0, Int_t nStart = 0, Int_t nStop = 2000000000, Bool_t copyCache = kTRUE); Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods. ~RooDataHist(); Destructor. Int_t getIndex(const RooArgSet& coord). Int_t calcTreeIndex() const; Calculate the index for the weights array corresponding to; to the bin enclosing the current coordinates of the internal argset. void dump2(); Debug stuff, should go... RooPlot * plotOn(RooPlot* frame, RooAbsData::PlotOpt o) const; Back end function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataHist.html:25333,variab,variable,25333,root/html526/RooDataHist.html,https://root.cern,https://root.cern/root/html526/RooDataHist.html,5,['variab'],['variable']
Modifiability,"ningTMVAVersionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTMVA::MethodBase::Init(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCompositeBase.html:7747,Inherit,InheritsFrom,7747,root/html532/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCompositeBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ningTMVAVersionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTMVA::MethodBase::Init(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCompositeBase.html:7867,Inherit,InheritsFrom,7867,root/html534/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCompositeBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ningTMVAVersionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTMVA::MethodBase::Init(); voidInitANNBase(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodANNBase.html:7436,Inherit,InheritsFrom,7436,root/html532/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodANNBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ningTMVAVersionCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTMVA::IMethod::HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTMVA::MethodBase::Init(); voidInitANNBase(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodANNBase.html:7590,Inherit,InheritsFrom,7590,root/html534/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodANNBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nip. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualGLManip. class TVirtualGLManip. TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGLManip(); static TClass*Class(); virtual TClass*IsA() const; TVirtualGLManip&operator=(const TVirtualGLManip&); virtual Bool_tSelect(const TGLCamera& camera, const TGLRect& rect, const TGLBoundingBox& sceneBox); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TVirtualGLManip(); TVirtualGLManip(const TVirtualGLManip&). Class Charts. Inheritance Chart:. TVirtualGLManip. ←. TGLManip; ←. TGLRotateManip. TGLScaleManip. TGLTransManip. Function documentation; virtual ~TVirtualGLManip(); {}. Bool_t Select(const TGLCamera& camera, const TGLRect& rect, const TGLBoundingBox& sceneBox). » Author: Valery Fine(fine@vxcern.cern.ch) 05/03/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 16:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TVirtualGLManip.html:1431,Inherit,Inheritance,1431,root/html604/TVirtualGLManip.html,https://root.cern,https://root.cern/root/html604/TVirtualGLManip.html,1,['Inherit'],['Inheritance']
Modifiability,"nip. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualGLManip. class TVirtualGLManip. TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGLManip(); static TClass*Class(); virtual TClass*IsA() const; TVirtualGLManip&operator=(const TVirtualGLManip&); virtual Bool_tSelect(const TGLCamera& camera, const TGLRect& rect, const TGLBoundingBox& sceneBox); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TVirtualGLManip(); TVirtualGLManip(const TVirtualGLManip&). Class Charts. Inheritance Chart:. TVirtualGLManip. ←. TGLManip; ←. TGLRotateManip. TGLScaleManip. TGLTransManip. Function documentation; virtual ~TVirtualGLManip(); {}. Bool_t Select(const TGLCamera& camera, const TGLRect& rect, const TGLBoundingBox& sceneBox). » Author: Valery Fine(fine@vxcern.cern.ch) 05/03/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualGLManip.html:1431,Inherit,Inheritance,1431,root/html602/TVirtualGLManip.html,https://root.cern,https://root.cern/root/html602/TVirtualGLManip.html,1,['Inherit'],['Inheritance']
Modifiability,"nique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetUpSSL (const char *cafile, const char *capath, const char *ucert, const char *ukey);  Set up the static configuration variables. ;  ;  Static Public Member Functions inherited from TSocket; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TSocket * CreateAuthSocket (const char *url, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server. ;  ; static TSocket * CreateAuthSocket (const char *user, const char *host, Int_t port, Int_t size=0, Int_t tcpwindowsize=-1, TSocket *s=nullptr, Int_t *err=nullptr);  Creates a socket or a parallel socket and authenticates to the remote server specified in 'url' on remote 'port' as 'user'. ;  ; static const char * DeclFileName ();  ; static Int_t GetClientProtocol ();  Static method returning supported client protocol. ;  ; static ULong64_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSSLSocket.html:13751,config,configuration,13751,doc/master/classTSSLSocket.html,https://root.cern,https://root.cern/doc/master/classTSSLSocket.html,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"nique volume object, but may also represent more general a family (class); 25of volume objects having the same shape type and medium, but possibly; 26different shape parameters. It is the user's task to provide different names; 27for different volume families in order to avoid ambiguities at tracking time.; 28A generic family rather than a single volume is created only in two cases :; 29when a generic shape is provided to the volume constructor or when a division; 30operation is applied. Each volume in the geometry stores an unique; 31ID corresponding to its family. In order to ease-up their creation, the manager; 32class is providing an API that allows making a shape and a volume in a single step.; 33 ; 34 Volumes are objects that can be visualized, therefore having visibility,; 35colour, line and fill attributes that can be defined or modified any time after; 36the volume creation. It is advisable however to define these properties just; 37after the first creation of a volume namespace, since in case of volume families; 38any new member created by the modeler inherits these properties.; 39 ; 40 In order to provide navigation features, volumes have to be able to find; 41the proper container of any point defined in the local reference frame. This; 42can be the volume itself, one of its positioned daughter volumes or none if; 43the point is actually outside. On the other hand, volumes have to provide also; 44other navigation methods such as finding the distances to its shape boundaries; 45or which daughter will be crossed first. The implementation of these features; 46is done at shape level, but the local mother-daughters management is handled; 47by volumes that builds additional optimisation structures upon geometry closure.; 48In order to have navigation features properly working one has to follow the; 49general rules for building a valid geometry (see TGeoManager class).; 50 ; 51 Now let's make a simple volume representing a copper wire. We suppose that; 52a mediu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoVolume_8cxx_source.html:2380,inherit,inherits,2380,doc/master/TGeoVolume_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoVolume_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"niqueID() const; const Text_t*RooAbsReal::getUnit() const; virtual Double_tRooAbsCachedPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFFTConvPdf.html:23301,Inherit,InheritsFrom,23301,root/html532/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html532/RooFFTConvPdf.html,2,['Inherit'],['InheritsFrom']
Modifiability,"niqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TKeyMapFile(const TKeyMapFile&); TKeyMapFile&operator=(const TKeyMapFile&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TMapFile*fMapFilepointer to map file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TKeyMapFile(); Default constructor. TKeyMapFile(const char* name, const char* classname, TMapFile* mapfile); Constructor. void Browse(TBrowser* b); Browse the contained objects. TKeyMapFile(const TKeyMapFile& ). TKeyMapFile& operator=(const TKeyMapFile& ). virtual ~TKeyMapFile(); {;}. » Author: Rene Brun 23/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TKeyMapFile.h 26606 2008-12-02 20:36:09Z pcanal $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKeyMapFile.html:5894,Inherit,Inheritance,5894,root/html532/TKeyMapFile.html,https://root.cern,https://root.cern/root/html532/TKeyMapFile.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cartesian3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector3D<ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:10620,Inherit,Inheritance,10620,root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nit(). const Text_t * RooAbsReal::getUnit ; (; ); const. inline . Definition at line 143 of file RooAbsReal.h. ◆ getVal() [1/2]. double RooAbsReal::getVal ; (; const RooArgSet & ; normalisationSet); const. inline . Like getVal(const RooArgSet*), but always requires an argument for normalisation. ; Definition at line 126 of file RooAbsReal.h. ◆ getVal() [2/2]. double RooAbsReal::getVal ; (; const RooArgSet * ; normalisationSet = nullptr); const. inline . Evaluate object. ; Returns either cached value or triggers a recalculation. The recalculation happens by calling getValV(), which in the end calls the virtual evaluate() functions of the respective PDFs. Parameters. [in]normalisationSetgetValV() reacts differently depending on the value of the normalisation set. If the set is nullptr, an unnormalised value is returned. . NoteThe normalisation is arbitrary, because it is up to the implementation of the PDF to e.g. leave out normalisation constants for speed reasons. The range of the variables is also ignored.; To normalise the result properly, a RooArgSet has to be passed, which contains the variables to normalise over. These are integrated over their current ranges to compute the normalisation constant, and the unnormalised result is divided by this value. ; Definition at line 103 of file RooAbsReal.h. ◆ getValV(). double RooAbsReal::getValV ; (; const RooArgSet * ; nset = nullptr); const. virtual . Return value of object. ; If the cache is clean, return the cached value, otherwise recalculate on the fly and refill the cache ; Reimplemented in RooConstVar, RooNormalizedPdf, ProgressMonitor, RooAbsHiddenReal, RooConvCoefVar, RooRealMPFE, RooRealVar, RooResolutionModel, RooMomentMorph, RooMomentMorphFunc, RooMomentMorphFuncND, RooAbsCachedPdf, RooAbsCachedReal, RooAbsPdf, RooAddPdf, RooErrorVar, and RooRealIntegral.; Definition at line 281 of file RooAbsReal.cxx. ◆ globalSelectComp(). void RooAbsReal::globalSelectComp ; (; bool ; flag). staticprotected . Global switch ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:114893,variab,variables,114893,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,"nit(). const Text_t * RooAbsReal::getUnit ; (; ); const. inline . Definition at line 143 of file RooAbsReal.h. ◆ getVal() [1/2]. double RooAbsReal::getVal ; (; const RooArgSet & ; normalisationSet); const. inline . Like getVal(const RooArgSet*), but always requires an argument for normalisation. ; Definition at line 126 of file RooAbsReal.h. ◆ getVal() [2/2]. double RooAbsReal::getVal ; (; const RooArgSet * ; normalisationSet = nullptr); const. inline . Evaluate object. ; Returns either cached value or triggers a recalculation. The recalculation happens by calling getValV(), which in the end calls the virtual evaluate() functions of the respective PDFs. Parameters. [in]normalisationSetgetValV() reacts differently depending on the value of the normalisation set. If the set is nullptr, an unnormalised value is returned. . NoteThe normalisation is arbitrary, because it is up to the implementation of the PDF to e.g. leave out normalisation constants for speed reasons. The range of the variables is also ignored.; To normalise the result properly, a RooArgSet has to be passed, which contains the variables to normalise over. These are integrated over their current ranges to compute the normalisation constant, and the unnormalised result is divided by this value. ; Definition at line 103 of file RooAbsReal.h. ◆ getValV(). double RooAbsReal::getValV ; (; const RooArgSet * ; nset = nullptr); const. virtual . Return value of object. ; If the cache is clean, return the cached value, otherwise recalculate on the fly and refill the cache ; Reimplemented in RooConstVar, RooNormalizedPdf, ProgressMonitor, RooAbsHiddenReal, RooConvCoefVar, RooRealVar, RooResolutionModel, RooRealMPFE, RooMomentMorph, RooMomentMorphFunc, RooMomentMorphFuncND, RooAbsCachedPdf, RooAbsCachedReal, RooAbsPdf, RooAddPdf, RooErrorVar, and RooRealIntegral.; Definition at line 300 of file RooAbsReal.cxx. ◆ globalSelectComp(). void RooAbsReal::globalSelectComp ; (; bool ; flag). staticprotected . Global switch ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:113634,variab,variables,113634,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,"nit(); virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TMatrixD*fInvHMatrixBinverse H-matrix (background); TMatrixD*fInvHMatrixSinverse H-matrix (signal); TVectorD*fVecMeanBvector of mean values (background); TVectorD*fVecMeanSvector of mean values (signal). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodHMatrix(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor for the H-Matrix method. MethodHMatrix(TMVA::DataSetInfo& theData, const TString& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodHMatrix.html:16163,variab,variables,16163,root/html530/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodHMatrix.html,10,['variab'],"['variable', 'variables']"
Modifiability,"nit(); virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TStringfHiddenLayerstring containig the hidden layer structure; TStringfLayerSpecLayer specification option; TStringfLearningMethodthe learning method (given via option string); TTree*fLocalTrainingTreelocal copy of training tree; TMultiLayerPerceptron*fMLPthe TMLP; TStringfMLPBuildOptionsoption string to build the mlp; Int_tfNcyclesnumber of training cylcles; Double_tfValidationFractionfraction of events in training tree used for cross validation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodTMlp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodTMlpANN.html:15705,variab,variables,15705,root/html530/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodTMlpANN.html,10,['variab'],"['variable', 'variables']"
Modifiability,"nitHashTableCapacity; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObject**TObjArray::fCont!Array contents; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const TSchemaRule* GetRuleWithSource(const TString& name) const; Return the rule that has 'name' as a source. const TSchemaRule* GetRuleWithTarget(const TString& name) const; Return the rule that has 'name' as a target. Bool_t HasRuleWithSource(const TString& name, Bool_t needingAlloc) const; Return true if the set of rules has at least one rule that has the data; member named 'name' as a source.; If needingAlloc is true, only the rule that requires the data member to; be cached will be taken in consideration. Bool_t HasRuleWithTarget(const TString& name, Bool_t willset) const; Return true if the set of rules has at least one rule that has the data; member named 'name' as a target.; If willset is true, only the rule that will set the value of the data member. virtual ~TSchemaMatch(); {}. » Last changed: root/core:$Id$ » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TSchemaMatch.html:10891,Inherit,Inheritance,10891,root/html602/ROOT__TSchemaMatch.html,https://root.cern,https://root.cern/root/html602/ROOT__TSchemaMatch.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nitHashTableCapacity; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObject**TObjArray::fCont!Array contents; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const TSchemaRule* GetRuleWithSource(const TString& name) const; Return the rule that has 'name' as a source. const TSchemaRule* GetRuleWithTarget(const TString& name) const; Return the rule that has 'name' as a target. Bool_t HasRuleWithSource(const TString& name, Bool_t needingAlloc) const; Return true if the set of rules has at least one rule that has the data; member named 'name' as a source.; If needingAlloc is true, only the rule that requires the data member to; be cached will be taken in consideration. Bool_t HasRuleWithTarget(const TString& name, Bool_t willset) const; Return true if the set of rules has at least one rule that has the data; member named 'name' as a target.; If willset is true, only the rule that will set the value of the data member. virtual ~TSchemaMatch(); {}. » Last changed: root/core:$Id$ » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TSchemaMatch.html:10891,Inherit,Inheritance,10891,root/html604/ROOT__TSchemaMatch.html,https://root.cern,https://root.cern/root/html604/ROOT__TSchemaMatch.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nition Compression.h:61; ROOT::RCompressionSetting::ELevel::EValuesEValuesNote: this is only temporarily a struct and will become a enum class hence the name convention used.Definition Compression.h:63; ROOT::RCompressionSetting::ELevel::kInherit@ kInheritSome objects use this value to denote that the compression algorithm should be inherited from the par...Definition Compression.h:66; ROOT::RCompressionSetting::ELevel::kUseMin@ kUseMinCompression level reserved when we are not sure what to use (1 is for the fastest compression)Definition Compression.h:70; ROOT::RCompressionSetting::ELevel::kDefaultOld@ kDefaultOldCompression level reserved for old ROOT compression algorithm.Definition Compression.h:78; ROOT::RCompressionSetting::ELevel::kUncompressed@ kUncompressedCompression level reserved for ""uncompressed state"".Definition Compression.h:68; ROOT::RCompressionSetting::ELevel::kDefaultLZMA@ kDefaultLZMACompression level reserved for LZMA compression algorithm (slowest compression with smallest files)Definition Compression.h:80; ROOT::RCompressionSetting::ELevel::kDefaultZSTD@ kDefaultZSTDCompression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression...Definition Compression.h:76; ROOT::RCompressionSetting::ELevel::kDefaultZLIB@ kDefaultZLIBCompression level reserved for ZLIB compression algorithm (fastest compression)Definition Compression.h:72; ROOT::RCompressionSetting::ELevel::kDefaultLZ4@ kDefaultLZ4Compression level reserved for LZ4 compression algorithm (trade-off between file ratio/decompression ...Definition Compression.h:74; ROOT::RCompressionSettingThe global settings depend on a global variable named R__ZipMode which can be modified by a global fu...Definition Compression.h:45; ROOT::RCompressionSetting::AlgorithmToStringstatic std::string AlgorithmToString(EAlgorithm::EValues algorithm). corezipincCompression.h. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:07:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Compression_8h_source.html:11322,variab,variable,11322,doc/v632/Compression_8h_source.html,https://root.cern,https://root.cern/doc/v632/Compression_8h_source.html,1,['variab'],['variable']
Modifiability,"nition Minimizer.cxx:44; ROOT::Math::Minimizer::SetMaxFunctionCallsvoid SetMaxFunctionCalls(unsigned int maxfcn)set maximum of function callsDefinition Minimizer.h:331; ROOT::Math::Minimizer::IsValidErrorbool IsValidError() constreturn true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit)Definition Minimizer.h:320; ROOT::Math::Minimizer::Edmvirtual double Edm() constreturn expected distance reached from the minimum (re-implement if minimizer provides itDefinition Minimizer.h:222; ROOT::Math::Minimizer::GetMinosErrorvirtual bool GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option=0)minos error for variable i, return false if Minos failed or not supported and the lower and upper err...Definition Minimizer.cxx:172; ROOT::Math::Minimizer::SetOptionsvoid SetOptions(const MinimizerOptions &opt)set all options in one goDefinition Minimizer.h:353; ROOT::Math::Minimizer::SetVariableValuesvirtual bool SetVariableValues(const double *x)set the values of all existing variables (array must be dimensioned to the size of the existing param...Definition Minimizer.h:187; ROOT::Math::Minimizer::Clearvirtual void Clear()reset for consecutive minimization - implement if neededDefinition Minimizer.h:136; ROOT::Math::Minimizer::SetExtraOptionsvoid SetExtraOptions(const IOptions &extraOptions)set only the extra optionsDefinition Minimizer.h:358; ROOT::Math::Minimizer::MinValuevirtual double MinValue() const =0return minimum function value; ROOT::Math::Minimizer::PrintLevelint PrintLevel() constminimizer configuration parametersDefinition Minimizer.h:291; ROOT::Math::Minimizer::PrintResultsvirtual void PrintResults()return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const ...Definition Minimizer.h:282; ROOT::Math::Minimizer::NDimvirtual unsigned int NDim() const =0this is <= Function().NDim() which is the total number of variables (free+ constrained ones); ROOT::Math::Minimizer::NFreevirtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:30514,variab,variables,30514,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variables']
Modifiability,"nition RSha256.hxx:106; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; TCanvasThe Canvas class.Definition TCanvas.h:23; double; and in the batch mode simply do: c->SetCanvasSize(w,h);; If the canvas size exceeds the window size, scroll bars will be added to the canvas This allows to display very large canvases (even bigger than the screen size). The Following example shows how to proceed. {; auto c = new TCanvas(""c"",""c"");; c->SetCanvasSize(1500, 1500);; c->SetWindowSize(500, 500);; }. Definition at line 23 of file TCanvas.h. Public Types; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TCanvas (Bool_t build=kTRUE);  Canvas default constructor. ;  ;  TCanvas (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ;  TCanvas (const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:2980,inherit,inherited,2980,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['inherit'],['inherited']
Modifiability,"nition RSha256.hxx:99; kRed@ kRedDefinition Rtypes.h:66; TArcCreate an Arc.Definition TArc.h:26; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TMarkerManages Markers.Definition TMarker.h:22; TMarker::DrawMarkervirtual TMarker * DrawMarker(Double_t x, Double_t y)Draw this marker with new coordinates.Definition TMarker.cxx:208; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4; ttauto * ttDefinition textangle.C:16; t1auto * t1Definition textangle.C:20; . Text Color; The text color is a color index (integer) pointing in the ROOT color table. The text color of any class inheriting from TAttText can be changed using the method SetTextColor and retrieved using the method GetTextColor. The following table shows the first 50 default colors. Color transparency; SetTextColorAlpha(), allows to set a transparent color. In the following example the text color of the text text is set to blue with an opacity of 35% (i.e. a transparency of 65%). (The color kBlue itself is internally stored as fully opaque.); text->SetTextColorAlpha(kBlue, 0.35);; textOption_t Option_t TPoint TPoint const char textDefinition TGWin32VirtualXProxy.cxx:68; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. Text Size; If the text precision (see next paragraph)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText.html:5597,inherit,inheriting,5597,doc/master/classTAttText.html,https://root.cern,https://root.cern/doc/master/classTAttText.html,1,['inherit'],['inheriting']
Modifiability,"nition Reader.h:64; TMVA::Reader::EvaluateRegressionconst std::vector< Float_t > & EvaluateRegression(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:565; TMVA::Reader::fMethodMapstd::map< TString, IMethod * > fMethodMapmap of methodsDefinition Reader.h:157; TMVA::Reader::GetNamevirtual const char * GetName() constReturns name of object.Definition Reader.h:113; TMVA::Reader::EvaluateMVADouble_t EvaluateMVA(const std::vector< Float_t > &, const TString &methodTag, Double_t aux=0)Evaluate a std::vector<float> of input data for a given method The parameter aux is obligatory for th...Definition Reader.cxx:468; TMVA::Reader::GetRarityDouble_t GetRarity(const TString &methodTag, Double_t mvaVal=-9999999)evaluates the MVA's rarityDefinition Reader.cxx:737; TMVA::Reader::FindMVAIMethod * FindMVA(const TString &methodTag)return pointer to method with tag ""methodTag""Definition Reader.cxx:695; TMVA::Reader::Initvoid Init(void)default initialisation (no member variables)Definition Reader.cxx:292; TMVA::Reader::GetProbaDouble_t GetProba(const TString &methodTag, Double_t ap_sig=0.5, Double_t mvaVal=-9999999)evaluates probability of MVA for given set of input variablesDefinition Reader.cxx:706; TMVA::Reader::fMvaEventErrorUpperDouble_t fMvaEventErrorUpperper-event error returned by MVADefinition Reader.h:155; TMVA::Reader::SetVerbosevoid SetVerbose(Bool_t v)Definition Reader.h:115; TMVA::Reader::GetMethodTypeFromFileTString GetMethodTypeFromFile(const TString &filename)read the method type from the fileDefinition Reader.cxx:337; TMVA::Reader::fDataSetManagerDataSetManager * fDataSetManagerDefinition Reader.h:128; TMVA::Reader::fColorBool_t fColorcolor modeDefinition Reader.h:151; TMVA::Reader::fDataSetInfoDataSetInfo fDataSetInfoDefinition Reader.h:136; TMVA::Reader::fVerboseBool_t fVerboseverbosityDefinition Reader.h:149; TMVA::Reader::fCalculateErrorBool_t fCalculateErrorerror calculation modeDefinition Reader.h:152; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8h_source.html:9577,variab,variables,9577,doc/master/Reader_8h_source.html,https://root.cern,https://root.cern/doc/master/Reader_8h_source.html,1,['variab'],['variables']
Modifiability,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf311__rangeplot_8C.html:5361,variab,variables,5361,doc/master/rf311__rangeplot_8C.html,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html,2,['variab'],['variables']
Modifiability,"nition Rtypes.h:66; destOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t destDefinition TGWin32VirtualXProxy.cxx:164; xminfloat xminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; gROOT#define gROOTDefinition TROOT.h:406; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TPad::FindObjectTObject * FindObject(const char *name) const overrideSearch if object named name is inside this pad or in pads inside this pad.Definition TPad.cxx:2700; TSpectrumTransformAdvanced 1-dimensional orthogonal transform functions.Definition TSpectrumTransform.h:18; TSpectrumTransform::SetRegionvoid SetRegion(Int_t xmin, Int_t xmax)This function sets the filtering or enhancement region:Definition TSpectrumTransform.cxx:2264; TSpectrumTransform::kTransformCos@ kTransformCosDefinition TSpectrumTransform.h:34; TSpectrumTransform::Enhancevoid Enhance(const Double_t *source, Double_t *destVector)This function transforms the source spectrum.Definition TSpectrumTransform.cxx:1779; TSpectrumTransform::SetEnhanceCoeffvoid SetEnhanceCoeff(Double_t enhanceCoeff)This function sets the enhancement coefficient:Definition TSpectrumTransform.cxx:2300; TSpectrumTransform::TSpectrumTransformTSpectrumTransform()default constructorDefinition TSpectrumTransform.cxx:40; TSpectrumTransform::SetTransformTypevoid SetTransformType(Int_t transType, Int_t degree)This function sets the following parameters for transform:Definition TSpectrumTransform.cxx:2237; TSpectrumAdvanced Spectra Processing.Definition TSpectrum.h:18; double; int. Definition at line 1779 of file TSpectrumTransform.cxx. ◆ FilterZonal(). void TSpectrumTransform::FilterZonal ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:21931,enhance,enhancement,21931,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"nition TBranchElement.h:79; TBranchElement::ReadLeavesCollectionSplitVectorPtrMembervoid ReadLeavesCollectionSplitVectorPtrMember(TBuffer &b)Read leaves into i/o buffers for this branch.Definition TBranchElement.cxx:4398; TBranchElement::GetMakeClassbool GetMakeClass() const overrideReturn whether this branch is in a mode where the object are decomposed or not (Also known as MakeCla...Definition TBranchElement.cxx:2866; TBranchElement::SetAddressImplvoid SetAddressImpl(void *addr, bool implied) overrideSee TBranchElement::SetAddress.Definition TBranchElement.cxx:4970; TBranchElement::SetFillLeavesPtrvoid SetFillLeavesPtr()Set the FillLeaves pointer to execute the expected operations.Definition TBranchElement.cxx:5811; TBranchElement::ReadLeavesCollectionMembervoid ReadLeavesCollectionMember(TBuffer &b)Read leaves into i/o buffers for this branch.Definition TBranchElement.cxx:4429; TBranchA TTree is a list of TBranches.Definition TBranch.h:93; TBranch::fAddresschar * fAddress! Address of 1st leaf (variable or object)Definition TBranch.h:147; TBranch::fTreeTTree * fTree! Pointer to Tree headerDefinition TBranch.h:144; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TClassRefTClassRef is used to implement a permanent reference to a TClass object.Definition TClassRef.h:28; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClonesArrayAn array of clone (identical) objects.Definition TClonesArray.h:29; TFileMergeInfoDefinition TFileMergeInfo.h:42; TFolder<div class=""legacybox""><h2>Legacy Code</h2> TFolder is a legacy interface: there will be no bug fixes...Definition TFolder.h:30; TLeafElementA TLeaf for the general case when using the branches created via a TStreamerInfo (i....Definition TLeafElement.h:32; TLeafA TLeaf describes individual elements of a TBranch See TBranch structure in TTree.Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8h_source.html:39794,variab,variable,39794,doc/master/TBranchElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8h_source.html,1,['variab'],['variable']
Modifiability,"nition TGWin32VirtualXProxy.cxx:249; namechar name[80]Definition TGX11.cxx:110; TCutA specialized string object used for TTree selections.Definition TCut.h:25; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TH2Service class for 2-D histogram classes.Definition TH2.h:30; TMVA::ConfigurableDefinition Configurable.h:45; TMVA::CvSplitDefinition CvSplit.h:37; TMVA::DataInputHandlerClass that contains all the data information.Definition DataInputHandler.h:78; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::fDataInputHandlerDataInputHandler * fDataInputHandler->Definition DataLoader.h:189; TMVA::DataLoader::CreateEventAssignTreesTTree * CreateEventAssignTrees(const TString &name)create the data assignment tree (for event-wise data assignment by user)Definition DataLoader.cxx:195; TMVA::DataLoader::AddVariablesArrayvoid AddVariablesArray(const TString &expression, int size, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating array of variables in data set info in case input tree provides an array ...Definition DataLoader.cxx:504; TMVA::DataLoader::fATreeWeightFloat_t fATreeWeightweight of the eventDefinition DataLoader.h:207; TMVA::DataLoader::fTrainAssignTreestd::vector< TTree * > fTrainAssignTreefor each class: tmp tree if user wants to assign the events directlyDefinition DataLoader.h:203; TMVA::DataLoader::SetBackgroundTreevoid SetBackgroundTree(TTree *background, Double_t weight=1.0)Definition DataLoader.cxx:439; TMVA::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddDataSetDataSetInfo & AddDataSet(DataSetInfo &)Definition DataLoader.cxx:119; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:11938,variab,variables,11938,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variables']
Modifiability,"nition TGeoManager.cxx:4096; Example:; // Writing to a file geometry definition ending with:; root[] gGeoManager->CloseGeometry();; // geometry is ready; root[] gGeoManager->Export(""MyGeom.root"");; // file MyGeom.root produced; root[] gGeoManager->Export(""MyGeom.C"");; // C++ macro MyGeom.C produced; root[] gGeoManager->Export(""MyGeom.gdml"");; // GDML file MyGeom.gdml produced; root[] myVolume->SaveAs(""MyVolume.C"");; // C++ macro for the branch starting; // with MyVolume; // Reading from a file; root[] gSystem->Load(""libGeom"");; root[] TGeoManager::Import(""MyGeom.root""); // geometry is ready; Note that not all-current information held by the modeller is written on the file. For instance, the painter and checker objects are not written, as well as the temporary current navigation properties: current node path, point or direction. On the other hand, all objects belonging to the geometrical hierarchy will always be written. The idea is to be able to retrieve the geometry in a ready state, ignoring what the state variables that can be always re-initialized. When the code is generated for a given TGeoVolume in the geometry, just the branch starting with that volume will be saved in the file. Executing the generated code will create a geometry that has MyVolume as top volume. In this case, only the materials/media/matrices used effectively in the MyVolume branch are exported to file.; Volumes can be made persistent in the same way the full geometry is. Exporting is straightforward (module1, 2 are pointers to TGeoVolume objects):; module1->Export(""file.root"");; // by default file is overwritten; module2->Export(""file.root"","""",""update"");; // to the same file; Importing will append the volume to the current TGeoManager or will create one:; TGeoManager *geom = new TGeoManager(""myGeom"", """");; TGeoVolume *top = geom->MakeBox(...);; geom->SetTopVolume(top);; //name of volume or key (depending on export usage); TGeoVolume *module1 = TGeoVolume::Import(""file.root"", ""MOD1"");; TGeoVol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:123673,variab,variables,123673,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['variab'],['variables']
Modifiability,"nition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::MakeZombievoid MakeZombie()Definition TObject.h:53; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TObject::kInvalidObject@ kInvalidObjectif object ctor succeeded but object should not be usedDefinition TObject.h:72; TObject::kMustCleanup@ kMustCleanupif object destructor must call RecursiveRemove()Definition TObject.h:64; TPluginHandlerDefinition TPluginManager.h:103; TPluginHandler::ExecPluginLongptr_t ExecPlugin(int nargs)Definition TPluginManager.h:231; TPluginHandler::LoadPluginInt_t LoadPlugin()Load the plugin library for this handler.Definition TPluginManager.cxx:293; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::ToLowervoid ToLower()Change string to lower-case.Definition TString.cxx:1182; TString::AtoiInt_t Atoi() constReturn integer value of string.Definition TString.cxx:1988; TString::AtofDouble_t Atof() constReturn floating-point value contained in string.Definition TString.cxx:2054; TString::IsFloatBool_t IsFloat() constReturns kTRUE if string contains a floating point or integer number.Definition TString.cxx:1858; TString::Dataconst char * Data() constDefinition TString.h:376; TString::IsDigitBool_t IsDigit() constReturns true if all characters in string are digits (0-9) or white spaces, i.e.Definition TString.cxx:1830; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::AppendTString & Append(const char *cs)Definition TString.h:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:80035,plugin,plugin,80035,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,1,['plugin'],['plugin']
Modifiability,"nition TROOT.h:122; TROOT::fSpecialsTSeqCollection * fSpecialsList of special objects.Definition TROOT.h:156; TROOT::GetListOfFunctionTemplatesTCollection * GetListOfFunctionTemplates()Definition TROOT.cxx:1771; TROOT::RegisterModulestatic void RegisterModule(const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false)Called by static dictionary initialization to register clang modules for headers.Definition TROOT.cxx:2535; TROOT::FindObjectTObject * FindObject(const char *name) const overrideReturns address of a ROOT object if it exists.Definition TROOT.cxx:1313; TROOT::fClassesTCollection * fClassesList of classes definition.Definition TROOT.h:140; TROOT::fEditHistogramsBool_t fEditHistogramsTrue if histograms can be edited with the mouse.Definition TROOT.h:130; TROOT::fGlobalsTListOfDataMembers * fGlobalsList of global variables.Definition TROOT.h:143; TROOT::fFuncTemplateTListOfFunctionTemplates * fFuncTemplateList of global function templates.Definition TROOT.h:142; TROOT::fTimerInt_t fTimerTimer flag.Definition TROOT.h:123; TROOT::fDataSetsTSeqCollection * fDataSetsList of data sets (TDSet or TChain)Definition TROOT.h:164; TROOT::fConfigOptionsTString fConfigOptionsROOT ./configure set build options.Definition TROOT.h:111; TROOT::GetStyleTStyle * GetStyle(const char *name) constReturn pointer to style with name.Definition TROOT.cxx:1579; TROOT::GetListOfEnumsTCollection * GetListOfEnums(Bool_t load=kFALSE)Definition TROOT.cxx:1754; TROOT::ProcessLineSyncLongptr_t ProcessLineSync(const char *line, Int_t *error=nullptr)Process interpreter command via TApplication::ProcessLine().Definition TROOT.cxx:2390; TROOT::InitInterpretervoid InitInterpreter()Initialize interpreter (cling)Definition TROOT.cxx:2064; TROOT::GetListOfGlobalsTCollection * GetListOfGlobals(Bool_t load=kFA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:152251,variab,variables,152251,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variables']
Modifiability,"nition at line 165 of file RooRealVar.h. Constructor & Destructor Documentation. ◆ RooRealVar() [1/5]. RooRealVar::RooRealVar ; (; ). Default constructor. ; Definition at line 111 of file RooRealVar.cxx. ◆ RooRealVar() [2/5]. RooRealVar::RooRealVar ; (; const char * ; name, . const char * ; title, . double ; value, . const char * ; unit = """" . ). Create a constant variable with a value and optional unit. ; Definition at line 120 of file RooRealVar.cxx. ◆ RooRealVar() [3/5]. RooRealVar::RooRealVar ; (; const char * ; name, . const char * ; title, . double ; minValue, . double ; maxValue, . const char * ; unit = """" . ). Create a variable allowed to float in the given range. ; The initial value will be set to the center of the range. ; Definition at line 136 of file RooRealVar.cxx. ◆ RooRealVar() [4/5]. RooRealVar::RooRealVar ; (; const char * ; name, . const char * ; title, . double ; value, . double ; minValue, . double ; maxValue, . const char * ; unit = """" . ). Create a variable with the given starting value. ; It is allowed to float within the defined range. Optionally, a unit can be specified for axis labels. ; Definition at line 171 of file RooRealVar.cxx. ◆ RooRealVar() [5/5]. RooRealVar::RooRealVar ; (; const RooRealVar & ; other, . const char * ; name = nullptr . ). Copy Constructor. ; Definition at line 191 of file RooRealVar.cxx. ◆ ~RooRealVar(). RooRealVar::~RooRealVar ; (; ). override . Destructor. ; Definition at line 218 of file RooRealVar.cxx. Member Function Documentation. ◆ _nullProp(). RooRealVarSharedProperties & RooRealVar::_nullProp ; (; ). staticprotected . Null property. ; Return a dummy object to use when properties are not initialised. ; Definition at line 102 of file RooRealVar.cxx. ◆ attachToTree(). void RooRealVar::attachToTree ; (; TTree & ; t, . Int_t ; bufSize = 32000 . ). overrideprotectedvirtual . Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:74331,variab,variable,74331,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"nition at line 173 of file RWebWindow.cxx. ◆ GetUserArgs(). std::string RWebWindow::GetUserArgs ; (; ); const. Returns configured user arguments for web window See SetUserArgs method for more details. ; Definition at line 1320 of file RWebWindow.cxx. ◆ GetWidth(). unsigned ROOT::RWebWindow::GetWidth ; (; ); const. inline . returns configured window width (0 - default) actual window width can be different ; Definition at line 278 of file RWebWindow.hxx. ◆ GetWindowConnections(). RWebWindow::ConnectionsList_t RWebWindow::GetWindowConnections ; (; unsigned ; connid = 0, . bool ; only_active = false . ); const. private . returns connection list (or all active connections) ; Parameters. connidconnection id, when 0 - all existing connections are returned ; only_activewhen true, only active (already established) connections are returned . Definition at line 1458 of file RWebWindow.cxx. ◆ GetX(). int ROOT::RWebWindow::GetX ; (; ); const. inline . returns configured window X position (-1 - default) ; Definition at line 286 of file RWebWindow.hxx. ◆ GetY(). int ROOT::RWebWindow::GetY ; (; ); const. inline . returns configured window Y position (-1 - default) ; Definition at line 290 of file RWebWindow.hxx. ◆ HasConnection(). bool RWebWindow::HasConnection ; (; unsigned ; connid = 0, . bool ; only_active = true . ); const. returns true if specified connection id exists ; Parameters. connidconnection id (0 - any) ; only_activewhen true only active connection will be checked, otherwise also pending (not yet established) connections are checked . Definition at line 1413 of file RWebWindow.cxx. ◆ HasKey(). bool RWebWindow::HasKey ; (; const std::string & ; key, . bool ; also_newkey = false . ); const. private . Returns true if provided key value already exists (in processes map or in existing connections) In special cases one also can check if key value exists as newkey. ; Definition at line 558 of file RWebWindow.cxx. ◆ HMAC(). std::string RWebWindow::HMAC ; (; const std::string &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:35273,config,configured,35273,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,1,['config'],['configured']
Modifiability,"nition at line 173 of file RWebWindow.cxx. ◆ GetUserArgs(). std::string RWebWindow::GetUserArgs ; (; ); const. Returns configured user arguments for web window See SetUserArgs method for more details. ; Definition at line 1362 of file RWebWindow.cxx. ◆ GetWidth(). unsigned ROOT::RWebWindow::GetWidth ; (; ); const. inline . returns configured window width (0 - default) actual window width can be different ; Definition at line 281 of file RWebWindow.hxx. ◆ GetWindowConnections(). RWebWindow::ConnectionsList_t RWebWindow::GetWindowConnections ; (; unsigned ; connid = 0, . bool ; only_active = false . ); const. private . returns connection list (or all active connections) ; Parameters. connidconnection id, when 0 - all existing connections are returned ; only_activewhen true, only active (already established) connections are returned . Definition at line 1500 of file RWebWindow.cxx. ◆ GetX(). int ROOT::RWebWindow::GetX ; (; ); const. inline . returns configured window X position (-1 - default) ; Definition at line 289 of file RWebWindow.hxx. ◆ GetY(). int ROOT::RWebWindow::GetY ; (; ); const. inline . returns configured window Y position (-1 - default) ; Definition at line 293 of file RWebWindow.hxx. ◆ HasConnection(). bool RWebWindow::HasConnection ; (; unsigned ; connid = 0, . bool ; only_active = true . ); const. returns true if specified connection id exists ; Parameters. connidconnection id (0 - any) ; only_activewhen true only active connection will be checked, otherwise also pending (not yet established) connections are checked . Definition at line 1455 of file RWebWindow.cxx. ◆ HasKey(). bool RWebWindow::HasKey ; (; const std::string & ; key, . bool ; also_newkey = false . ); const. private . Returns true if provided key value already exists (in processes map or in existing connections) In special cases one also can check if key value exists as newkey. ; Definition at line 559 of file RWebWindow.cxx. ◆ HMAC(). std::string RWebWindow::HMAC ; (; const std::string &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:34157,config,configured,34157,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,1,['config'],['configured']
Modifiability,"nition at line 302 of file RTreeViewer.cxx. ◆ GetShowHierarchy(). bool ROOT::RTreeViewer::GetShowHierarchy ; (; ); const. inline . Returns default hierarchy browser visibility. ; Definition at line 79 of file RTreeViewer.hxx. ◆ GetTitle(). const std::string & ROOT::RTreeViewer::GetTitle ; (; ); const. inline . Definition at line 59 of file RTreeViewer.hxx. ◆ GetWindowAddr(). std::string RTreeViewer::GetWindowAddr ; (; ); const. Return address of web window used for tree viewer. ; Definition at line 232 of file RTreeViewer.cxx. ◆ GetWindowUrl(). std::string RTreeViewer::GetWindowUrl ; (; bool ; remote). Return URL of web window used for tree viewer See ROOT::RWebWindow::GetUrl docu for more details. ; Definition at line 241 of file RTreeViewer.cxx. ◆ InvokeTreeDraw(). void RTreeViewer::InvokeTreeDraw ; (; ). private . Invoke tree drawing. ; Definition at line 393 of file RTreeViewer.cxx. ◆ NewViewer(). RTreeViewer * RTreeViewer::NewViewer ; (; TTree * ; t). static . Create new viewer Method used for plugin. ; Definition at line 495 of file RTreeViewer.cxx. ◆ SendCfg(). void RTreeViewer::SendCfg ; (; unsigned ; connid). private . Send data for initialize viewer. ; Definition at line 257 of file RTreeViewer.cxx. ◆ SendProgress(). void RTreeViewer::SendProgress ; (; Double_t ; nevent = 0.). private . Send progress to the client. ; Definition at line 463 of file RTreeViewer.cxx. ◆ SetCallback(). void ROOT::RTreeViewer::SetCallback ; (; PerformDrawCallback_t ; func). inline . Definition at line 73 of file RTreeViewer.hxx. ◆ SetShowHierarchy(). void ROOT::RTreeViewer::SetShowHierarchy ; (; bool ; on = true). inline . Configures default hierarchy browser visibility, only has effect before showing web window. ; Definition at line 76 of file RTreeViewer.hxx. ◆ SetTitle(). void ROOT::RTreeViewer::SetTitle ; (; const std::string & ; title). inline . Definition at line 58 of file RTreeViewer.hxx. ◆ SetTree(). void RTreeViewer::SetTree ; (; TTree * ; tree). assign new TTree to th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RTreeViewer.html:5246,plugin,plugin,5246,doc/v632/classROOT_1_1RTreeViewer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RTreeViewer.html,1,['plugin'],['plugin']
Modifiability,"nition at line 309 of file RTreeViewer.cxx. ◆ GetShowHierarchy(). bool ROOT::RTreeViewer::GetShowHierarchy ; (; ); const. inline . Returns default hierarchy browser visibility. ; Definition at line 79 of file RTreeViewer.hxx. ◆ GetTitle(). const std::string & ROOT::RTreeViewer::GetTitle ; (; ); const. inline . Definition at line 59 of file RTreeViewer.hxx. ◆ GetWindowAddr(). std::string RTreeViewer::GetWindowAddr ; (; ); const. Return address of web window used for tree viewer. ; Definition at line 239 of file RTreeViewer.cxx. ◆ GetWindowUrl(). std::string RTreeViewer::GetWindowUrl ; (; bool ; remote). Return URL of web window used for tree viewer See ROOT::RWebWindow::GetUrl docu for more details. ; Definition at line 248 of file RTreeViewer.cxx. ◆ InvokeTreeDraw(). void RTreeViewer::InvokeTreeDraw ; (; ). private . Invoke tree drawing. ; Definition at line 400 of file RTreeViewer.cxx. ◆ NewViewer(). RTreeViewer * RTreeViewer::NewViewer ; (; TTree * ; t). static . Create new viewer Method used for plugin. ; Definition at line 502 of file RTreeViewer.cxx. ◆ SendCfg(). void RTreeViewer::SendCfg ; (; unsigned ; connid). private . Send data for initialize viewer. ; Definition at line 264 of file RTreeViewer.cxx. ◆ SendProgress(). void RTreeViewer::SendProgress ; (; Double_t ; nevent = 0.). private . Send progress to the client. ; Definition at line 470 of file RTreeViewer.cxx. ◆ SetCallback(). void ROOT::RTreeViewer::SetCallback ; (; PerformDrawCallback_t ; func). inline . Definition at line 73 of file RTreeViewer.hxx. ◆ SetShowHierarchy(). void ROOT::RTreeViewer::SetShowHierarchy ; (; bool ; on = true). inline . Configures default hierarchy browser visibility, only has effect before showing web window. ; Definition at line 76 of file RTreeViewer.hxx. ◆ SetTitle(). void ROOT::RTreeViewer::SetTitle ; (; const std::string & ; title). inline . Definition at line 58 of file RTreeViewer.hxx. ◆ SetTree(). void RTreeViewer::SetTree ; (; TTree * ; tree). assign new TTree to th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RTreeViewer.html:5289,plugin,plugin,5289,doc/master/classROOT_1_1RTreeViewer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RTreeViewer.html,1,['plugin'],['plugin']
Modifiability,"nition at line 36 of file TModuleGenerator.h. Public Types; enum  ESourceFileKind { kSFKNotC; , kSFKHeader; , kSFKSource; , kSFKLinkdef; };  . Public Member Functions;  TModuleGenerator (clang::CompilerInstance *CI, bool inlineHeader, const std::string &shLibFileName, bool isInPCH);  ;  ~TModuleGenerator ();  ; const std::string & GetContentName () const;  ; const std::string & GetDemangledDictionaryName () const;  ; const std::string & GetDictionaryName () const;  ; int GetErrorCount () const;  ; const std::vector< std::string > & GetHeaders () const;  ; const std::vector< std::string > & GetIncludePaths () const;  ; const std::string & GetModuleDirName () const;  ; const std::string & GetModuleFileName () const;  ; const std::string & GetUmbrellaName () const;  ; bool IsPCH () const;  ; void ParseArgs (const std::vector< std::string > &args);  Parse -I -D -U headers.h SomethingLinkdef.h. ;  ; void WriteContentHeader (std::ostream &out) const;  Write a header file describing the content of this module through a series of variables inside the namespace ROOT::Dict::[DictionaryName]. ;  ; std::ostream & WritePPDefines (std::ostream &out) const;  Write #ifndef FOO # define FOO=bar #endif ;  ; std::ostream & WritePPUndefines (std::ostream &out) const;  Write #ifdef FOO # undef FOO #endif ;  ; void WriteRegistrationSource (std::ostream &out, const std::string &fwdDeclnArgsToKeepString, const std::string &headersClassesMapString, const std::string &fwdDeclsString, const std::string &extraIncludes, bool hasCxxModule) const;  ; void WriteUmbrellaHeader (std::ostream &out) const;  Write a header file pulling in the content of this module through a series of #defined, #undefs and #includes. ;  . Private Types; typedef std::vector< std::pair< std::string, std::string > > StringPairVec_t;  . Private Member Functions; void ConvertToCppString (std::string &text) const;  ; bool FindHeader (const std::string &hdrName, std::string &hdrFullPath) const;  Return true if the header is f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html:1367,variab,variables,1367,doc/v632/classROOT_1_1TModuleGenerator.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html,2,['variab'],['variables']
Modifiability,"nition at line 64 of file RWebBrowserImp.cxx. Member Function Documentation. ◆ BrowseObj(). void RWebBrowserImp::BrowseObj ; (; TObject * ; obj). finalvirtual . Browse specified object. ; Reimplemented from TBrowserImp.; Definition at line 110 of file RWebBrowserImp.cxx. ◆ Iconify(). void RWebBrowserImp::Iconify ; (; ). finalvirtual . Iconify browser. ; Reimplemented from TBrowserImp.; Definition at line 87 of file RWebBrowserImp.cxx. ◆ NewBrowser() [1/2]. TBrowserImp * RWebBrowserImp::NewBrowser ; (; TBrowser * ; b, . const char * ; title, . Int_t ; x, . Int_t ; y, . UInt_t ; width, . UInt_t ; height, . Option_t * ; opt = """" . ). static . Factory method to create RWebBrowserImp via plugin. ; Definition at line 129 of file RWebBrowserImp.cxx. ◆ NewBrowser() [2/2]. TBrowserImp * RWebBrowserImp::NewBrowser ; (; TBrowser * ; b = nullptr, . const char * ; title = ""ROOT Browser"", . UInt_t ; width = 800, . UInt_t ; height = 500, . Option_t * ; opt = """" . ). static . Factory method to create RWebBrowserImp via plugin. ; Definition at line 121 of file RWebBrowserImp.cxx. ◆ Refresh(). void RWebBrowserImp::Refresh ; (; Bool_t ; = kFALSE). finalvirtual . Refresh browser. ; Reimplemented from TBrowserImp.; Definition at line 94 of file RWebBrowserImp.cxx. ◆ Show(). void RWebBrowserImp::Show ; (; ). finalvirtual . Show browser. ; Reimplemented from TBrowserImp.; Definition at line 101 of file RWebBrowserImp.cxx. ◆ ShowWarning(). void RWebBrowserImp::ShowWarning ; (; ). private . Show warning that RBrowser will be shown. ; Definition at line 71 of file RWebBrowserImp.cxx. Member Data Documentation. ◆ fHeight. Int_t ROOT::RWebBrowserImp::fHeight {0}. private . window coordinates ; Definition at line 25 of file RWebBrowserImp.hxx. ◆ fWebBrowser. std::shared_ptr<RBrowser> ROOT::RWebBrowserImp::fWebBrowser. private . actual browser used ; Definition at line 24 of file RWebBrowserImp.hxx. ◆ fWidth. Int_t ROOT::RWebBrowserImp::fWidth {0}. private . Definition at line 25 of file RWebBro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebBrowserImp.html:5910,plugin,plugin,5910,doc/v632/classROOT_1_1RWebBrowserImp.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebBrowserImp.html,1,['plugin'],['plugin']
Modifiability,"nition at line 65 of file TModuleGenerator.h. ◆ GetSourceFileKind(). TModuleGenerator::ESourceFileKind TModuleGenerator::GetSourceFileKind ; (; const char * ; filename); const. private . Check whether the file's extension is compatible with C or C++. ; Return whether source, header, Linkdef or nothing. ; Definition at line 102 of file TModuleGenerator.cxx. ◆ GetUmbrellaName(). const std::string & ROOT::TModuleGenerator::GetUmbrellaName ; (; ); const. inline . Definition at line 76 of file TModuleGenerator.h. ◆ IsPCH(). bool ROOT::TModuleGenerator::IsPCH ; (; ); const. inline . Definition at line 52 of file TModuleGenerator.h. ◆ ParseArgs(). void TModuleGenerator::ParseArgs ; (; const std::vector< std::string > & ; args). Parse -I -D -U headers.h SomethingLinkdef.h. ; Definition at line 180 of file TModuleGenerator.cxx. ◆ WriteContentHeader(). void TModuleGenerator::WriteContentHeader ; (; std::ostream & ; out); const. Write a header file describing the content of this module through a series of variables inside the namespace ROOT::Dict::[DictionaryName]. ; Each variable is an array of string literals, with a const char* of 0 being the last element, e.g. ROOT::Dict::_DictName::arrIncludes[] = { ""A.h"", ""B.h"", 0 }; ; Definition at line 543 of file TModuleGenerator.cxx. ◆ WriteDefinesArray(). std::ostream & ROOT::TModuleGenerator::WriteDefinesArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 133 of file TModuleGenerator.h. ◆ WriteHeaderArray(). std::ostream & ROOT::TModuleGenerator::WriteHeaderArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 125 of file TModuleGenerator.h. ◆ WriteIncludePathArray(). std::ostream & ROOT::TModuleGenerator::WriteIncludePathArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 129 of file TModuleGenerator.h. ◆ WritePPCode(). std::ostream & ROOT::TModuleGenerator::WritePPCode ; (; std::ostream & ; out); const. inlineprivate . Definition at line 117 of file TModuleGener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html:7837,variab,variables,7837,doc/v632/classROOT_1_1TModuleGenerator.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html,2,['variab'],['variables']
Modifiability,"nition at line 826 of file RooAbsArg.cxx. ◆ recursiveRedirectServers(). bool RooAbsArg::recursiveRedirectServers ; (; const RooAbsCollection & ; newServerList, . bool ; mustReplaceAll = false, . bool ; nameChange = false, . bool ; recurseInNewSet = true . ). Recursively replace all servers with the new servers in newSet. ; This substitutes objects that we receive values from (also indirectly through other objects) with new objects that have the same name.; Copied from redirectServers:; This substitutes objects that we receive values from with new objects that have the same name. See alsorecursiveRedirectServers() Use recursive version if servers that are only indirectly serving this object should be replaced as well. . redirectServers() If only the direct servers of an object need to be replaced.; Note that changing the types of objects is generally allowed, but can be wrong if the interface of an object changes. For example, one can reparametrise a model by substituting a variable with a function: ; \[; f(x\, |\, a) = a \cdot x \rightarrow f(x\, |\, b) = (2.1 \cdot b) \cdot x; \]. If an object, however, expects a PDF, and this is substituted with a function that isn't normalised, wrong results might be obtained or it might even crash the program. The types of the objects being substituted are not checked.; Parameters. [in]newSetOrigSet of new servers that should be used instead of the current servers. ; [in]mustReplaceAllA warning is printed and error status is returned if not all servers could be substituted successfully. ; [in]nameChangeIf false, an object named ""x"" is only replaced with an object also named ""x"" in newSetOrig. If the object in newSet is called differently, set nameChange to true and use setAttribute() on the x object: objectToReplaceX.setAttribute(""ORIGNAME:x""); Now, the renamed object will be selected based on the attribute ""ORIGNAME:<name>"". ; [in]isRecursionStepInternal switch used when called from recursiveRedirectServers(). ; newSetRoo collec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:87595,variab,variable,87595,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['variab'],['variable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(); virtual voidProcessOptions(). Data Members; public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBayesClassifier.html:13763,Config,Configurable,13763,root/html602/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBayesClassifier.html,12,['Config'],['Configurable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(); voidGetCov_BetweenClass(); voidGetCov_Full(); voidGetCov_WithinClass(); voidGetDiscrimPower(); voidGetFisherCoeff(); voidGetMean(); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodFisher.html:15920,Config,Configurable,15920,root/html602/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodFisher.html,12,['Config'],['Configurable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidCalculateMulticlassValues(const TMVA::Event*& evt, vector<Double_t>& parameters, vector<Float_t>& values); voidClearAll(); voidCreateFormula(); virtual voidDecla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodFDA.html:14169,Config,Configurable,14169,root/html602/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodFDA.html,12,['Config'],['Configurable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidComputeCovariance(Bool_t, TMatrixD*); virtual voidDeclareOptions(); Double_tGetChi2(TMVA::Types::ESBType); virtual voidInit(); virtual voidProcessOptions(). Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodHMatrix.html:14381,Config,Configurable,14381,root/html602/TMVA__MethodHMatrix.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodHMatrix.html,12,['Config'],['Configurable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidCreateMLPOptions(TString); virtual voidDeclareOptions(); virtual voidInit(); virtual voidProcessOptions(). Data Members; public:. Bool_tTMVA::MethodBase::fSetupC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodTMlpANN.html:13973,Config,Configurable,13973,root/html602/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodTMlpANN.html,12,['Config'],['Configurable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidCreateVariablePDFs(); voidGetEffsfromPDFs(Double_t* cutMin, Double_t* cutMax, Double_t& effS, Double_t& effB); voidGetEffsfromSelection(Double_t* cutMin, Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:16156,Config,Configurable,16156,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,12,['Config'],['Configurable']
Modifiability,"nitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidGetLDCoeff(); voidGetSum(); voidGetSumVal(); virtual voidInit(); voidInitMatrices(); voidPrintCoefficients(). Data Members; public:. Bool_tTMVA::MethodBase::fSet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodLD.html:13478,Config,Configurable,13478,root/html602/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodLD.html,12,['Config'],['Configurable']
Modifiability,"nix domain connections to it. ; Returns socket fd or -1. ; Definition at line 4458 of file TUnixSystem.cxx. ◆ UnixUnixService() [2/2]. int TUnixSystem::UnixUnixService ; (; int ; port, . int ; backlog . ). staticprotected . Open a socket, bind to it and start listening for Unix domain connections to it. ; Returns socket fd or -1. ; Definition at line 4432 of file TUnixSystem.cxx. ◆ UnixWaitchild(). int TUnixSystem::UnixWaitchild ; (; ). staticprotected . Wait till child is finished. ; Definition at line 4130 of file TUnixSystem.cxx. ◆ Unlink(). int TUnixSystem::Unlink ; (; const char * ; name). overridevirtual . Unlink, i.e. ; remove, a file or directory. Returns 0 when successful, -1 in case of failure. ; Reimplemented from TSystem.; Definition at line 1708 of file TUnixSystem.cxx. ◆ Unload(). void TUnixSystem::Unload ; (; const char * ; module). overridevirtual . Unload a shared library. ; Reimplemented from TSystem.; Definition at line 2832 of file TUnixSystem.cxx. ◆ Unsetenv(). void TUnixSystem::Unsetenv ; (; const char * ; name). overridevirtual . Unset environment variable. ; Reimplemented from TSystem.; Definition at line 2145 of file TUnixSystem.cxx. ◆ Utime(). int TUnixSystem::Utime ; (; const char * ; file, . Long_t ; modtime, . Long_t ; actime . ). overridevirtual . Set a files modification and access times. ; If actime = 0 it will be set to the modtime. Returns 0 on success and -1 in case of error. ; Reimplemented from TSystem.; Definition at line 1910 of file TUnixSystem.cxx. ◆ WorkingDirectory(). const char * TUnixSystem::WorkingDirectory ; (; ). overridevirtual . Return working directory. ; Reimplemented from TSystem.; Definition at line 1445 of file TUnixSystem.cxx. Libraries for TUnixSystem:. [legend]; The documentation for this class was generated from the following files:; core/unix/inc/TUnixSystem.h; core/unix/src/TUnixSystem.cxx. TUnixSystem. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:42 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:80519,variab,variable,80519,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['variab'],['variable']
Modifiability,"nixSystem::RemoveTimerTTimer * RemoveTimer(TTimer *ti) overrideRemove timer from list of system timers.Definition TUnixSystem.cxx:3018; TUnixSystem::AnnounceUdpServiceint AnnounceUdpService(int port, int backlog) overrideAnnounce UDP service.Definition TUnixSystem.cxx:3250; TUnixSystem::AnnounceUnixServiceint AnnounceUnixService(int port, int backlog) overrideAnnounce unix domain service on path ""kServerPath/<port>"".Definition TUnixSystem.cxx:3258; TUnixSystem::UnixTcpConnectstatic int UnixTcpConnect(const char *hostname, int port, int tcpwindowsize)Open a TCP/IP connection to server and connect to a service (i.e.Definition TUnixSystem.cxx:4145; TUnixSystem::SetFPEMaskInt_t SetFPEMask(Int_t mask=kDefaultMask) overrideSet which conditions trigger a floating point exception.Definition TUnixSystem.cxx:999; TUnixSystem::UnixGetdirentrystatic const char * UnixGetdirentry(void *dir)Returns the next directory entry.Definition TUnixSystem.cxx:4010; TUnixSystem::Setenvvoid Setenv(const char *name, const char *value) overrideSet environment variable.Definition TUnixSystem.cxx:2129; TUnixSystem::ConnectServiceint ConnectService(const char *server, int port, int tcpwindowsize, const char *protocol=""tcp"")Connect to service servicename on server servername.Definition TUnixSystem.cxx:3201; TUnixSystem::ChangeDirectoryBool_t ChangeDirectory(const char *path) overrideChange directory. Returns kTRUE in case of success, kFALSE otherwise.Definition TUnixSystem.cxx:1434; TUnixSystem::UnixHomedirectorystatic const char * UnixHomedirectory(const char *user=nullptr)Returns the user's home directory.Definition TUnixSystem.cxx:3935; TUnixSystem::GetServiceByPortchar * GetServiceByPort(int port) overrideGet name of internet service.Definition TUnixSystem.cxx:3186; TUnixSystem::CheckSignalsBool_t CheckSignals(Bool_t sync)Check if some signals were raised and call their Notify() member.Definition TUnixSystem.cxx:1286; TUnixSystem::UnixMakedirstatic int UnixMakedir(const char *name)Make a Unix fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:203976,variab,variable,203976,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,2,['variab'],['variable']
Modifiability,"nize(const TString& delim) const; Bool_tTString::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidDrawHotChar(Drawable_t id, GContext_t gc, Int_t x, Int_t y); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. enum TString::[unnamed] { kAlignment; };; enum TString::EStripType { kLeading; kTrailing; kBoth; };; enum TString::ECaseCompare { kExact; kIgnoreCase; };. protected:. charfHotCharhot character; Int_tfHotPosposition of hot character; GContext_tfLastGCcontext used during last drawing; Int_tfOff1variable used during drawing (cache); Int_tfOff2variable used during drawing (cache). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHotString(const char* s); Create a hot string. void Draw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); Draw a hot string and underline the hot character. void DrawWrapped(Drawable_t id, GContext_t gc, Int_t x, Int_t y, UInt_t w, FontStruct_t font); Draw a hot string in a column with width w. If string is longer than; w wrap it to next line. void DrawHotChar(Drawable_t id, GContext_t gc, Int_t x, Int_t y); Draw the underline under the hot character. TGHotString(const char* s). Int_t GetHotChar() const; { return fHotChar; }. Int_t GetHotPos() const; { return fHotPos; }. » Author: Fons Rademakers 05/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGString.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGHotString.html:8287,Inherit,Inheritance,8287,root/html532/TGHotString.html,https://root.cern,https://root.cern/root/html532/TGHotString.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nk. ;  ; TGTextButton * fUpdateButton;  Button to update current view. ;  ; TGTextButton * fGotoButton;  Button to goto a new range. ;  ; TGLabel * fFirstCellLabel;  Label for the range frame. ;  ; TGLabel * fRangeLabel;  Label for the range frame. ;  ; TGTextEntry * fFirstCellEntry;  TextEntry for the range frame. ;  ; TGTextEntry * fRangeEntry;  TextEntry for the range frame. ;  ; Pixel_t fOddRowBackground;  Background color for odd numbered rows. ;  ; Pixel_t fEvenRowBackground;  Background color for even numbered rows. ;  ; Pixel_t fHeaderBackground;  Background color for headers. ;  ; TList * fCellHintsList;  ; TList * fRHdrHintsList;  ; TList * fCHdrHintsList;  ; TList * fMainHintsList;  List for all hints used in the main table frame. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSimpleTable.html:36906,inherit,inherited,36906,doc/master/classTGSimpleTable.html,https://root.cern,https://root.cern/doc/master/classTGSimpleTable.html,2,['inherit'],['inherited']
Modifiability,"nkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; RooNumConvolution&conv() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; voidinitialize() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumConvPdf.html:36417,extend,extended,36417,root/html602/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html602/RooNumConvPdf.html,4,['extend'],['extended']
Modifiability,"nkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; RooNumConvolution&conv() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; voidinitialize() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumConvPdf.html:36424,extend,extended,36424,root/html534/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html534/RooNumConvPdf.html,2,['extend'],['extended']
Modifiability,"nkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tRooAbsReal::evaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Int_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); static Bool_tRooAbsArg::inhibitDirty(); TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:35708,extend,extended,35708,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,1,['extend'],['extended']
Modifiability,"nks:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » IO; » IO; » TStreamerInfoActions::TConfiguration. class TStreamerInfoActions::TConfiguration. Function Members (Methods); public:. virtual~TConfiguration(); virtual voidAddToOffset(Int_t delta); virtual TStreamerInfoActions::TConfiguration*Copy(); TStreamerInfoActions::TConfiguration&operator=(const TStreamerInfoActions::TConfiguration&); virtual voidPrint() const; virtual voidPrintDebug(TBuffer& buffer, void* object) const; TStreamerInfoActions::TConfigurationTConfiguration(const TStreamerInfoActions::TConfiguration&); TStreamerInfoActions::TConfigurationTConfiguration(TVirtualStreamerInfo* info, UInt_t id, Int_t offset); TStreamerInfoActions::TConfigurationTConfiguration(TVirtualStreamerInfo* info, UInt_t id, Int_t offset, UInt_t length). Data Members; public:. UInt_tfElemIdIdentifier of the TStreamerElement; TVirtualStreamerInfo*fInfoTStreamerInfo form which the action is derived; UInt_tfLengthNumber of element in a fixed length array.; Int_tfOffsetOffset within the object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TConfiguration(TVirtualStreamerInfo* info, UInt_t id, Int_t offset); {}. TConfiguration(TVirtualStreamerInfo* info, UInt_t id, Int_t offset, UInt_t length); {}. virtual ~TConfiguration(); {}. void AddToOffset(Int_t delta). TConfiguration * Copy(); { return new TConfiguration(*this); }. void Print() const. void PrintDebug(TBuffer& buffer, void* object) const. » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 40872 2011-09-13 21:33:33Z pcanal $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerInfoActions__TConfiguration.html:1237,Inherit,Inheritance,1237,root/html532/TStreamerInfoActions__TConfiguration.html,https://root.cern,https://root.cern/root/html532/TStreamerInfoActions__TConfiguration.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nks:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooMsgService. class RooMsgService: public TObject. The RooMsgService class is a singleton class that organizes informational, debugging, ; warning and errors messages generated by the RooFit core code. ; ; Each message generated by the core; has a message level (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL), an originating object,; and a 'topic'. Currently implemented topics are ""Generation"",""Plotting"",; ""Integration"", ""Minimization"" and ""Workspace"" and ""ChangeTracking"".; ; The RooMsgService class allows to filter and redirect messages into 'streams' ; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects. ; ; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams ; for logging of e.g. DEBUG messages on particular topics or objects and or redirect streams to; C++ streams or files.; ; The singleton instance is accessible through RooMsgService::instance() ;; . Function Members (Methods); public:. virtual~RooMsgService(); voidTObject::AbstractMethod(const char* method) const; Int_taddStream(RooFit::MsgLevel level, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg()); static Bool_tanyDebug(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMsgService.html:999,config,configuration,999,root/html526/RooMsgService.html,https://root.cern,https://root.cern/root/html526/RooMsgService.html,11,['config'],['configuration']
Modifiability,"nks:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::Ranking. class TMVA::Ranking. Ranking for variables in method (implementation). Function Members (Methods); public:. virtual~Ranking(); virtual voidAddRank(const TMVA::Rank& rank); static TClass*Class(); virtual TClass*IsA() const; TMVA::Ranking&operator=(const TMVA::Ranking&); virtual voidPrint() const; TMVA::RankingRanking(); TMVA::RankingRanking(const TMVA::Ranking&); TMVA::RankingRanking(const TString& context, const TString& rankingDiscriminatorName); voidSetContext(const TString& context); voidSetDiscrName(const TString& discrName); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TMVA::MsgLogger&Log() const. Data Members; private:. TStringfContextthe ranking context; TMVA::MsgLogger*fLogger! message logger; vector<TMVA::Rank>fRankingvector of ranks; TStringfRankingDiscriminatorNamethe name of the ranking discriminator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Ranking(); default constructor. Ranking(const TString& context, const TString& rankingDiscriminatorName); constructor. ~Ranking(); destructor. void SetContext(const TString& context). void AddRank(const TMVA::Rank& rank); Add a new rank; take ownership of it. void Print() const; get maximum length of variable names. Ranking(). void SetDiscrName(const TString& discrName); { fRankingDiscriminatorName = discrName; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: Ranking.h 29195 2009-06-24 10:39:49Z brun $ » Last generated: 2010-09-23 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Ranking.html:1555,variab,variable,1555,root/html528/TMVA__Ranking.html,https://root.cern,https://root.cern/root/html528/TMVA__Ranking.html,1,['variab'],['variable']
Modifiability,"nline . Definition at line 117 of file MathFuncs.h. ◆ effProd(). double RooFit::Detail::MathFuncs::effProd ; (; double ; eff, . double ; pdf . ). inline . Definition at line 348 of file MathFuncs.h. ◆ exponentialIntegral(). double RooFit::Detail::MathFuncs::exponentialIntegral ; (; double ; xMin, . double ; xMax, . double ; constant . ). inline . Definition at line 470 of file MathFuncs.h. ◆ fast_fma(). double RooFit::Detail::MathFuncs::fast_fma ; (; double ; x, . double ; y, . double ; z . ). inlinenoexcept . use fast FMA if available, fall back to normal arithmetic if not ; Definition at line 500 of file MathFuncs.h. ◆ flexibleInterp(). double RooFit::Detail::MathFuncs::flexibleInterp ; (; unsigned int ; code, . double const * ; params, . unsigned int ; n, . double const * ; low, . double const * ; high, . double ; boundary, . double ; nominal, . int ; doCutoff . ). inline . Definition at line 320 of file MathFuncs.h. ◆ flexibleInterpSingle(). double RooFit::Detail::MathFuncs::flexibleInterpSingle ; (; unsigned int ; code, . double ; low, . double ; high, . double ; boundary, . double ; nominal, . double ; paramVal, . double ; res . ). inline . Definition at line 213 of file MathFuncs.h. ◆ gaussian(). double RooFit::Detail::MathFuncs::gaussian ; (; double ; x, . double ; mean, . double ; sigma . ). inline . Function to evaluate an un-normalized RooGaussian. ; Definition at line 86 of file MathFuncs.h. ◆ gaussianIntegral(). double RooFit::Detail::MathFuncs::gaussianIntegral ; (; double ; xMin, . double ; xMax, . double ; mean, . double ; sigma . ). inline . Function to calculate the integral of an un-normalized RooGaussian over x. ; To calculate the integral over mean, just interchange the respective values of x and mean. Parameters. xMinMinimum value of variable to integrate wrt. ; xMaxMaximum value of of variable to integrate wrt. ; meanMean. ; sigmaSigma. . ReturnsThe integral of an un-normalized RooGaussian over the value in x. ; Definition at line 418 of file M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit_1_1Detail_1_1MathFuncs.html:7074,flexible,flexibleInterpSingle,7074,doc/master/namespaceRooFit_1_1Detail_1_1MathFuncs.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit_1_1Detail_1_1MathFuncs.html,1,['flexible'],['flexibleInterpSingle']
Modifiability,"nloadPackages; static TProof::EProofDataSetCommandskUploadDataSet; static TProof::EProofDataSetCommandskVerifyDataSet. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProof(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProof.html:38274,config,config,38274,root/html602/TProof.html,https://root.cern,https://root.cern/root/html602/TProof.html,4,['config'],['config']
Modifiability,"nly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoEltu (const TGeoEltu &)=delete;  ; TGeoEltu & operator= (const TGeoEltu &)=delete;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoEltu.html:22444,inherit,inherited,22444,doc/master/classTGeoEltu.html,https://root.cern,https://root.cern/doc/master/classTGeoEltu.html,1,['inherit'],['inherited']
Modifiability,"nly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_t fgStreamMemberWise = kTRUE;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TVirtualStreamerInfo.h>. Inheritance diagram for TVirtualStreamerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EReadWrite. enum TVirtualStreamerInfo::EReadWrite. EReadWrite Enumerator. . Enum Constant Description . kBase Base class element . kOffsetL Fixed size array . kOffsetP Pointer to object . kCounter Counter for array size . kCharStar Pointer to array of char . kLegacyChar Equal to TDataTyp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualStreamerInfo.html:17184,inherit,inherited,17184,doc/master/classTVirtualStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTVirtualStreamerInfo.html,1,['inherit'],['inherited']
Modifiability,"nly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; std::vector< double > _array;  ! do not persist ;  ; double _binw;  ; Int_t _nbins;  ; double _xhi;  ; double _xlo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniformBinning.html:15654,inherit,inherited,15654,doc/master/classRooUniformBinning.html,https://root.cern,https://root.cern/doc/master/classRooUniformBinning.html,1,['inherit'],['inherited']
Modifiability,"nly a reasonable thing to do when you use; ""YesOrNo"" leafs, while it might loose s.th. if you use the; purity information in the nodes.; --> hence I don't call it automatically in the tree building. Double_t PruneTree(const TMVA::DecisionTree::EventConstList* validationSample = __null); prune (get rid of internal nodes) the Decision tree to avoid overtraining; serveral different pruning methods can be applied as selected by the; variable ""fPruneMethod"". void ApplyValidationSample(const TMVA::DecisionTree::EventConstList* validationSample) const; run the validation sample through the (pruned) tree and fill in the nodes; the variables NSValidation and NBValidadtion (i.e. how many of the Signal; and Background events from the validation sample. This is then later used; when asking for the ""tree quality"" .. Double_t TestPrunedTreeQuality(const TMVA::DecisionTreeNode* dt = __null, Int_t mode = 0) const; return the misclassification rate of a pruned tree; a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at; any node, hence this tree quality testing will stop there, hence test; the pruned tree (while the full tree is still in place for normal/later use). void CheckEventWithPrunedTree(const TMVA::Event* ) const; pass a single validation event throught a pruned decision tree; on the way down the tree, fill in all the ""intermediate"" information; that would normally be there from training. Double_t GetSumWeights(const TMVA::DecisionTree::EventConstList* validationSample) const; calculate the normalization factor for a pruning validation sample. UInt_t CountLeafNodes(TMVA::Node* n = __null); return the number of terminal nodes in the sub-tree below Node n. void DescendTree(TMVA::Node* n = __null); descend a tree to find all its leaf nodes. void PruneNode(TMVA::DecisionTreeNode* node); prune away the subtree below the node. void PruneNodeInPlace(TMVA::DecisionTreeNode* node); prune a node temporaily (without actually deleting its decendants; which allows tes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTree.html:11842,variab,variable,11842,root/html602/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTree.html,4,['variab'],['variable']
Modifiability,"nly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGouraudFunction(Int_t ia, Int_t ib, Double_t* f, Double_t* t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidImplicitFunction(Double_t* rmin, Double_t* rmax, Int_t nx, Int_t ny, Int_t nz, const char* chopt); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitMoveScreen(Double_t xmin, Double_t xmax); voidInitRaster(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Int_t nx, Int_t ny); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; voidIsoSurface(Int_t ns, Double_t* s, Int_t nx, Int_t ny, Int_t nz, Double_t* x, Double_t* y, Double_t* z, const char* chopt); virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; voidLegoCartesian(Double_t ang, Int_t nx, Int_t ny, const char* chopt); voidLegoCylindrical(Int_t iordr, Int_t na, Int_t nb, const char* chopt); voidLegoFunction(Int_t ia, Int_t ib, Int_t& nv, Double_t* ab, Double_t* vv, Double_t* t); voidLegoPolar(Int_t iordr, Int_t na, Int_t nb, const char* chopt); voidLegoSpherical(Int_t ipsdr, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPainter3dAlgorithms.html:4729,Inherit,InheritsFrom,4729,root/html532/TPainter3dAlgorithms.html,https://root.cern,https://root.cern/root/html532/TPainter3dAlgorithms.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRow&&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepStd<double,2,2> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepStd<double,2,2> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepStd_double_2_2_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRow&&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepStd<double,3,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepStd<double,3,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepStd_double_3_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRow&&); ROOT::Math::SMatrix<double,3,4,ROOT::Math::MatRepStd<double,3,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,3U,4U,ROOT::Math::MatRepStd<double,3,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_4_-p1MatRepStd_double_3_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRow&&); ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,4U,3U,ROOT::Math::MatRepStd<double,4,3> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_3_-p1MatRepStd_double_4_3_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRow&&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepStd<double,4,4> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepStd<double,4,4> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepStd_double_4_4_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRow&&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepStd<double,5,5> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepStd<double,5,5> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepStd_double_5_5_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRow&&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepStd<double,6,6> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepStd<double,6,6> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepStd_double_6_6_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRow&&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepStd<double,7,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepStd<double,7,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepStd_double_7_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nly; D*(D+1)/2. See \ref SMatrixDoc. Original author is Thorsten Glebe; HERA-B Collaboration, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow(); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&operator=(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&operator=(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&&); double&operator[](int j); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(const ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRow&&); ROOT::Math::SMatrix<double,9,7,ROOT::Math::MatRepStd<double,9,7> >::SMatrixRowSMatrixRow(ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i). Data Members; private:. ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrixRow(ROOT::Math::SMatrix<double,9U,7U,ROOT::Math::MatRepStd<double,9,7> >& rhs, unsigned int i); {}. T & operator[](int j); { return (*fMat)(fRow,j); }. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html:2141,Inherit,Inheritance,2141,root/html604/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_9_7_-p1MatRepStd_double_9_7_____SMatrixRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nment operator. ;  ; void Print (Option_t *option="""") const override;  Pretty print basic ZIP member info. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArchiveMember;  TArchiveMember ();  Default ctor. ;  ;  TArchiveMember (const char *name);  Create an archive member file. ;  ;  TArchiveMember (const TArchiveMember &member);  Copy ctor. ;  ;  ~TArchiveMember () override;  ; const char * GetComment () const;  ; Long64_t GetCompressedSize () const;  ; Long64_t GetDecompressedSize () const;  ; Long64_t GetFilePosition () const;  ; TDatime GetModTime () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Long64_t GetPosition () const;  ; Bool_t IsDirectory () const;  ; TArchiveMember & operator= (const TArchiveMember &rhs);  Assignment operator. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPMember.html:2108,inherit,inherited,2108,doc/master/classTZIPMember.html,https://root.cern,https://root.cern/doc/master/classTZIPMember.html,1,['inherit'],['inherited']
Modifiability,"nn->dom_ctx->config[SSL_SHORT_TRUST] != NULL); 15683 && (mg_strcasecmp(conn->dom_ctx->config[SSL_SHORT_TRUST], ""yes"") == 0);; 15684 ; 15685 if (short_trust) {; 15686 int trust_ret = refresh_trust(conn);; 15687 if (!trust_ret) {; 15688 return trust_ret;; 15689 }; 15690 }; 15691 ; 15692 mg_lock_context(conn->phys_ctx);; 15693 conn->ssl = SSL_new(conn->dom_ctx->ssl_ctx);; 15694 mg_unlock_context(conn->phys_ctx);; 15695 if (conn->ssl == NULL) {; 15696 mg_cry_internal(conn, ""sslize error: %s"", ssl_error());; 15697 OPENSSL_REMOVE_THREAD_STATE();; 15698 return 0;; 15699 }; 15700 SSL_set_app_data(conn->ssl, (char *)conn);; 15701 ; 15702 ret = SSL_set_fd(conn->ssl, conn->client.sock);; 15703 if (ret != 1) {; 15704 mg_cry_internal(conn, ""sslize error: %s"", ssl_error());; 15705 SSL_free(conn->ssl);; 15706 conn->ssl = NULL;; 15707 OPENSSL_REMOVE_THREAD_STATE();; 15708 return 0;; 15709 }; 15710 ; 15711 if (client_options) {; 15712 if (client_options->host_name) {; 15713 SSL_set_tlsext_host_name(conn->ssl, client_options->host_name);; 15714 }; 15715 }; 15716 ; 15717 /* Reuse the request timeout for the SSL_Accept/SSL_connect timeout */; 15718 if (conn->dom_ctx->config[REQUEST_TIMEOUT]) {; 15719 /* NOTE: The loop below acts as a back-off, so we can end; 15720 * up sleeping for more (or less) than the REQUEST_TIMEOUT. */; 15721 int to = atoi(conn->dom_ctx->config[REQUEST_TIMEOUT]);; 15722 if (to >= 0) {; 15723 timeout = (unsigned)to;; 15724 }; 15725 }; 15726 ; 15727 /* SSL functions may fail and require to be called again:; 15728 * see https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html; 15729 * Here ""func"" could be SSL_connect or SSL_accept. */; 15730 for (i = 0; i <= timeout; i += 50) {; 15731 ERR_clear_error();; 15732 /* conn->dom_ctx may be changed here (see ssl_servername_callback) */; 15733 ret = func(conn->ssl);; 15734 if (ret != 1) {; 15735 err = SSL_get_error(conn->ssl, ret);; 15736 if ((err == SSL_ERROR_WANT_CONNECT); 15737 || (err == SSL_ERROR_WANT_ACCEPT); 1573",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:464350,config,config,464350,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"nn->dom_ctx->config[SSL_SHORT_TRUST] != NULL); 15684 && (mg_strcasecmp(conn->dom_ctx->config[SSL_SHORT_TRUST], ""yes"") == 0);; 15685 ; 15686 if (short_trust) {; 15687 int trust_ret = refresh_trust(conn);; 15688 if (!trust_ret) {; 15689 return trust_ret;; 15690 }; 15691 }; 15692 ; 15693 mg_lock_context(conn->phys_ctx);; 15694 conn->ssl = SSL_new(conn->dom_ctx->ssl_ctx);; 15695 mg_unlock_context(conn->phys_ctx);; 15696 if (conn->ssl == NULL) {; 15697 mg_cry_internal(conn, ""sslize error: %s"", ssl_error());; 15698 OPENSSL_REMOVE_THREAD_STATE();; 15699 return 0;; 15700 }; 15701 SSL_set_app_data(conn->ssl, (char *)conn);; 15702 ; 15703 ret = SSL_set_fd(conn->ssl, conn->client.sock);; 15704 if (ret != 1) {; 15705 mg_cry_internal(conn, ""sslize error: %s"", ssl_error());; 15706 SSL_free(conn->ssl);; 15707 conn->ssl = NULL;; 15708 OPENSSL_REMOVE_THREAD_STATE();; 15709 return 0;; 15710 }; 15711 ; 15712 if (client_options) {; 15713 if (client_options->host_name) {; 15714 SSL_set_tlsext_host_name(conn->ssl, client_options->host_name);; 15715 }; 15716 }; 15717 ; 15718 /* Reuse the request timeout for the SSL_Accept/SSL_connect timeout */; 15719 if (conn->dom_ctx->config[REQUEST_TIMEOUT]) {; 15720 /* NOTE: The loop below acts as a back-off, so we can end; 15721 * up sleeping for more (or less) than the REQUEST_TIMEOUT. */; 15722 int to = atoi(conn->dom_ctx->config[REQUEST_TIMEOUT]);; 15723 if (to >= 0) {; 15724 timeout = (unsigned)to;; 15725 }; 15726 }; 15727 ; 15728 /* SSL functions may fail and require to be called again:; 15729 * see https://www.openssl.org/docs/manmaster/ssl/SSL_get_error.html; 15730 * Here ""func"" could be SSL_connect or SSL_accept. */; 15731 for (i = 0; i <= timeout; i += 50) {; 15732 ERR_clear_error();; 15733 /* conn->dom_ctx may be changed here (see ssl_servername_callback) */; 15734 ret = func(conn->ssl);; 15735 if (ret != 1) {; 15736 err = SSL_get_error(conn->ssl, ret);; 15737 if ((err == SSL_ERROR_WANT_CONNECT); 15738 || (err == SSL_ERROR_WANT_ACCEPT); 1573",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:464383,config,config,464383,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"nnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_tfAdaptiveBandwidthFactorGeometric mean of the kernel density estimation from the data for adaptive iteration; TF1*fApproximateBiasOutput Kernel Density Estimation approximate bias; Bool_tfAsymLeft; Bool_tfAsymRight; vector<UInt_t>fBinCountNumber of events per bin for binned data option; TKDE::EBinningfBinning; vector<Double_t>fCanonicalBandwidths; vector<Double_t>fDataData events; vector<Double_t>fEventsOriginal data storage; TGraphErrors*fGraphGraph with the errors; TKDE::EIterationfIteration; TKDE::TKernel*fKernel; ROOT::Math::IBaseFunctionOneDim*fKernelFunction; vector<Double_t>fKernelSigmas2; TKDE::EKernelTypefKernelType; TF1*fLowerPDFOutput Kernel Density Estimation lower confidence interval PDF function; Double_tfMeanData mean; TKDE::EMirrorfMirror; Bool_tfMirrorLeft; Bool_tfMirrorRight; UInt_tfNBinsNumber of bins for binned data option; UInt_tfNEventsData's number of events; Bool_tfNewDataflag to control when new data are given; TF1*fPDFOutput Kernel Density Estimation PDF function; Double_tfRhoAdjustment factor for sigma; vector<Bool_t>fSettedOptionsUser input options flag; Double_tfSigmaData std deviation; Double_tfSigmaRobData std deviation (robust estimation); TF1*fUpperPDFOutput Kernel Density Estimation upper confidence interval PDF function; Bool_tfUseBins; UInt_tfUseBinsNEventsIf the algorithm is allowed to use binning this is the minimum number of events to do so; Bool_tfUseMinMaxFromDataflag top control if min and max must be used from data; Bool_tfUseMirroring; Double_tfWeightSizeCaches the weight size; Double_tfXMaxData maximum value; Double_tfXMinData minimum value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TKDE(UInt_t events = 0, const Double_t* data = 0, Double_t xMin = 0.0, Double_t xMax = 0.0, Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKDE.html:9226,adapt,adaptive,9226,root/html528/TKDE.html,https://root.cern,https://root.cern/root/html528/TKDE.html,6,['adapt'],['adaptive']
Modifiability,"nnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Int_t_curIndex! Index associated with current event; RooAbsDataStore*_curStore! Datastore associated with current event; map<Int_t,RooAbsDataStore*>_dataMap; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; RooCategory*_indexCat; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; Bool_t_ownComps! ; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCompositeDataStore(). RooCompositeDataStore(const char* name, const char* title, const RooArgSet& vars, RooCategory& indexCat, map<std::string,RooAbsDataStore*> inputData); Convert map by label to map by index for more efficient internal use. RooCompositeDataStore(const RooCompositeDataStore& other, const char* newname = 0); Convert map by label to map by index for more efficient internal use. RooCompositeDataStore(const RooCompositeDataStore& other, const RooArgSet& vars, const char* newname = 0); Update index category pointer, if it is contained in input argument vars. ~RooCompositeDataStore(); Destructor. Bool_t valid() const; Return true if currently loaded coordinate is considered valid within; the current range definitions of all observables. Int_t fill(); Forward fill request to appropriate subset. Double_t sumEntries() const; Forward fill request to appropriate subset. const RooArgSet* get(Int_t index) const; Load the n-th d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCompositeDataStore.html:9742,Inherit,Inheritance,9742,root/html532/RooCompositeDataStore.html,https://root.cern,https://root.cern/root/html532/RooCompositeDataStore.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Int_t_curIndex! Index associated with current event; RooAbsDataStore*_curStore! Datastore associated with current event; map<Int_t,RooAbsDataStore*>_dataMap; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; RooCategory*_indexCat; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; Bool_t_ownComps! ; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCompositeDataStore(). RooCompositeDataStore(const char* name, const char* title, const RooArgSet& vars, RooCategory& indexCat, map<std::string,RooAbsDataStore*> inputData); Convert map by label to map by index for more efficient internal use. RooCompositeDataStore(const RooCompositeDataStore& other, const char* newname = 0); Convert map by label to map by index for more efficient internal use. RooCompositeDataStore(const RooCompositeDataStore& other, const RooArgSet& vars, const char* newname = 0); Update index category pointer, if it is contained in input argument vars. ~RooCompositeDataStore(); Destructor. Bool_t valid() const; Return true if currently loaded coordinate is considered valid within; the current range definitions of all observables. void recalculateCache(const RooArgSet* , Int_t , Int_t , Int_t , Bool_t ); Forward recalculate request to all subsets. Bool_t hasFilledCache() const. void forceCacheUpdate(). Int_t fill()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCompositeDataStore.html:9845,Inherit,Inheritance,9845,root/html534/RooCompositeDataStore.html,https://root.cern,https://root.cern/root/html534/RooCompositeDataStore.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; virtual void InitializeContext ();  Initialize parser parameters, such as, disactivate non-standards libxml1 features, on/off validation, clear error and warning messages. ;  ; virtual void OnValidateError (const TString &message);  This function is called when an error from the parser has occurred. ;  ; virtual void OnValidateWarning (const TString &message);  This function is called when a warning from the parser has occurred. ;  ; virtual void ReleaseUnderlying ();  To release any existing document. ;  ; virtual void SetParseCode (Int_t code);  Set the parse code: ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; _xmlParserCtxt * fContext;  Parse the xml file. ;  ; Int_t fParseCode;  To keep track of the errorcodes. ;  ; Bool_t fReplaceEntities;  Replace entities. ;  ; Bool_t fStopError;  Stop when parse error occurs. ;  ; Bool_t fValidate;  To validate the parse context. ;  ; TString fValidateError;  Parse error. ;  ; TString fValidateWarning;  Parse warning. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TXMLParser (const TXMLParser &)=delete;  ; TXMLParser & operator= (const TXMLParser &)=delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLParser.html:13872,inherit,inherited,13872,doc/master/classTXMLParser.html,https://root.cern,https://root.cern/doc/master/classTXMLParser.html,1,['inherit'],['inherited']
Modifiability,"nnect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Bool_t fDragging;  true if in dragging mode ;  ; Bool_t fExternalHandler;  true when splitter movement is handled externally ;  ; Cursor_t fSplitCursor;  split cursor ;  ; const TGPicture * fSplitterPic;  picture to draw splitter ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitter.html:21966,inherit,inherited,21966,doc/master/classTGSplitter.html,https://root.cern,https://root.cern/doc/master/classTGSplitter.html,1,['inherit'],['inherited']
Modifiability,"nnected(?) query icon picture; const TGPicture*fQueryDiscondisconnected(?) query icon picture; TSessionQueryFrame*fQueryFrameright side query frame; TGPopupMenu*fQueryMenuquery menu entry; TGIcon*fRightIconassociated picture; TGPicture*fRightIconPicturelower bottom left icon used to show connection status; TSessionServerFrame*fServerFrameright side server frame; TSessionFrame*fSessionFrameright side session frame; TGListTree*fSessionHierarchymain sessions/queries hierarchy list tree; TGListTreeItem*fSessionItembase (main) session list tree item; TGPopupMenu*fSessionMenusession menu entry; TList*fSessionslist of sessions; time_tfStarttime of connection; TGStatusBar*fStatusBarbottom status bar; TTimer*fTimertimer used to change icon picture; TGToolBar*fToolBarapplication tool bar; TGCanvas*fTreeViewmain right sessions/queries tree view; UserGroup_t*fUserGroupuser connected to session; TGVerticalFrame*fV1; TGVerticalFrame*fV2; TEnv*fViewerEnvviewer's configuration. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. ←; TSessionViewer. Function documentation; TSessionViewer(const char* title = ""ROOT Session Viewer"", UInt_t w = 550, UInt_t h = 320); Main Session viewer constructor. TSessionViewer(const char* title, Int_t x, Int_t y, UInt_t w, UInt_t h); Main Session viewer constructor. void ReadConfiguration(const char* filename = 0); Read configuration file and populate list of sessions; list of queries and list of packages.; Read and set also global options as feedback histos. void UpdateListOfProofs(); Update list of existing Proof sessions. void UpdateListOfSessions(); Update list of existing Proof sessions. void WriteConfiguration(const char* filename = 0); Save actual configuration in config file ""filename"". void Build(); Build main session viewer frame and subframes. ~TSessionViewer(); Destructor. void OnListTreeClicked(TGListTreeItem* entry, Int_t btn, Int_t x, Int_t y); Handle mouse clic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionViewer.html:26376,Inherit,Inheritance,26376,root/html602/TSessionViewer.html,https://root.cern,https://root.cern/root/html602/TSessionViewer.html,2,['Inherit'],['Inheritance']
Modifiability,"nnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQUndoManager.html:26261,inherit,inherited,26261,doc/master/classTQUndoManager.html,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html,3,['inherit'],['inherited']
Modifiability,"nnection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TGClient (const TGClient &)=delete;  ; Bool_t DoRedraw ();  Redraw all windows that need redrawing. ;  ; TGClient & operator= (const TGClient &)=delete;  ; Bool_t ProcessIdleEvent ();  Process one idle event. ;  ; Bool_t ProcessOneEvent ();  Process one event. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Pixel_t fBackColor;  default background color ;  ; Pixel_t fBlack;  black color index ;  ; Colormap_t fDefaultColormap;  default colormap ;  ; TGWindow * fDefaultRoot;  default root window (base window of display) ;  ; TGFontPool * fFontPool;  font pool ;  ; Bool_t fForceRedraw;  redraw widgets as soon as possible ;  ; Pixel_t fForeColor;  default foreground color ;  ; TGGCPool * fGCPool;  graphics context pool ;  ; std::atomic< Bool_t > fGlobalNeedRedraw;  true if at least one window needs to be redrawn ;  ; Pixel_t fHilite;  default highlight color ;  ; TList * fIdleHandlers;  list of idle handlers ;  ; TGMimeTypes * fMimeTypeList;  mimetype list ;  ; TGPicturePool * fPicturePool;  pixmap pool ;  ; TList * fPlist;  list of popup windows used in HandleMaskEvent() ;  ; TGResourcePool * fResourcePool;  global GUI resource pool ;  ; TGWindow * fRoot;  current root window (changing ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGClient.html:17544,inherit,inherited,17544,doc/master/classTGClient.html,https://root.cern,https://root.cern/doc/master/classTGClient.html,1,['inherit'],['inherited']
Modifiability,"nnection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw vertical slider widget. ;  ;  Protected Member Functions inherited from TGSlider; virtual void CreateDisabledPicture ();  Creates disabled picture. ;  ; TString GetTypeString () const;  used in SavePrimitive ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVSlider.html:23779,inherit,inherited,23779,doc/master/classTGVSlider.html,https://root.cern,https://root.cern/doc/master/classTGVSlider.html,1,['inherit'],['inherited']
Modifiability,"nnection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGDockableFrame (const TGDockableFrame &)=delete;  ; TGDockableFrame & operator= (const TGDockableFrame &)=delete;  . Friends; class TGUndockedFrame;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockableFrame.html:29095,inherit,inherited,29095,doc/master/classTGDockableFrame.html,https://root.cern,https://root.cern/doc/master/classTGDockableFrame.html,1,['inherit'],['inherited']
Modifiability,"nnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TProofPlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualProofPlayer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TVirtualProofPlayer * Create (const char *player, TProof *p, TSocket *s=0);  Create a PROOF player. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLocal.html:17025,inherit,inherited,17025,doc/master/classTProofPlayerLocal.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLocal.html,6,['inherit'],['inherited']
Modifiability,"nnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long64_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Long_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:32756,variab,variable,32756,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,2,['variab'],"['variable', 'variables']"
Modifiability,nnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGDockButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground (,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockHideButton.html:20816,inherit,inherited,20816,doc/master/classTGDockHideButton.html,https://root.cern,https://root.cern/doc/master/classTGDockHideButton.html,2,['inherit'],['inherited']
Modifiability,nnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGSlider; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSlider.html:20310,inherit,inherited,20310,doc/master/classTGHSlider.html,https://root.cern,https://root.cern/doc/master/classTGHSlider.html,4,['inherit'],['inherited']
Modifiability,nnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; ECursor fCursorMouseOut;  cursor shape out of regions ;  ; ECursor fCursorMouseOver;  cursor shape in regions ;  ; Int_t fLastVisited;  id of the last visited region ;  ; TList * fListOfRegions;  list of regions ;  ; TGToolTip * fMainTip;  tooltip text for main region ;  ; ENavMode fNavMode;  navigation mode ;  ; TList * fTrash;  collect all objects that need to be cleaned up ;  ;  Protected Attributes inherited from TGPictureButton; Bool_t fOwnDisabledPic;  kTRUE if disabled picture was autogenerated ;  ; const TGPicture * fPic;  picture to be put in button ;  ; const TGPicture * fPicD;  picture shown when button disabled ;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; U,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGImageMap.html:28304,inherit,inherited,28304,doc/master/classTGImageMap.html,https://root.cern,https://root.cern/doc/master/classTGImageMap.html,3,['inherit'],['inherited']
Modifiability,"nned likelihood fit; 494 bool DoUnbinnedLikelihoodFit( bool extended = false, const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential);; 495 /// linear least square fit; 496 bool DoLinearFit();; 497 /// Set Objective function; 498 bool DoSetFCN(bool useExtFCN, const ROOT::Math::IMultiGenFunction &fcn, const double *params, unsigned int dataSize,; 499 int fitType);; 500 ; 501 // initialize the minimizer; 502 bool DoInitMinimizer();; 503 /// do minimization; 504 template<class ObjFunc_t>; 505 bool DoMinimization(std::unique_ptr<ObjFunc_t> f, const ROOT::Math::IMultiGenFunction * chifunc = nullptr);; 506 // do minimization for weighted likelihood fits; 507 template<class ObjFunc_t>; 508 bool DoWeightMinimization(std::unique_ptr<ObjFunc_t> f, const ROOT::Math::IMultiGenFunction * chifunc = nullptr);; 509 // do minimization after having set the objective function; 510 bool DoMinimization(const ROOT::Math::IMultiGenFunction * chifunc = nullptr);; 511 // update config after fit; 512 void DoUpdateFitConfig();; 513 // update minimizer options for re-fitting; 514 bool DoUpdateMinimizerOptions(bool canDifferentMinim = true);; 515 // get function calls from the FCN; 516 int GetNCallsFromFCN();; 517 ; 518 /// Set the input data for the fit using a shared ptr (No Copying); 519 template <class Data>; 520 void SetData(const std::shared_ptr<Data> & data) {; 521 fData = std::static_pointer_cast<Data>(data);; 522 }; 523 ; 524 /// Set the input data for the fit (Copying the given data object); 525 template <class Data>; 526 void SetData(const Data & data) {; 527 auto dataClone = std::make_shared<Data>(data);; 528 SetData(dataClone);; 529 }; 530 ; 531 /// look at the user provided FCN and get data and model function is; 532 /// they derive from ROOT::Fit FCN classes; 533 void ExamineFCN();; 534 ; 535 ; 536 /// internal functions to get data set and model function from FCN; 537 /// useful for fits done with customized FCN classes; 538 template <class ObjFuncTyp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:21165,config,config,21165,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['config'],['config']
Modifiability,"nning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c = ROOT.TCanvas(""rf108_plotbinning"", ""rf108_plotbinning"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); dtframe.GetYaxis().SetTitleOffset(1.6); dtframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); aframe.GetYaxis().SetTitleOffset(1.6); aframe.Draw(); ; c.SaveAs(""rf108_plotbinning.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf108_plotbinning.py. tutorialsroofitrf108_plotbinning.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf108__plotbinning_8py.html:3801,variab,variables,3801,doc/master/rf108__plotbinning_8py.html,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html,2,['variab'],['variables']
Modifiability,"nnotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TMVA::CvSplit; Bool_t fMakeFoldDataSet;  ; UInt_t fNumFolds;  ; std::vector< std::vector< TMVA::Event * > > fTestEvents;  ; std::vector< std::vector< TMVA::Event * > > fTrainEvents;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TMVA/CvSplit.h>. Inheritance diagram for TMVA::CvSplitKFolds:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ CvSplitKFolds(). TMVA::CvSplitKFolds::CvSplitKFolds ; (; UInt_t ; numFolds, . TString ; splitExpr = """", . Bool_t ; stratified = kTRUE, . UInt_t ; seed = 100 . ). Splits a dataset into k folds, ready for use in cross validation. ; Parameters. [in]numFoldsNumber of folds to split data into ; [in]stratifiedIf true, use stratified splitting, balancing the number of events across classes and folds. If false, no such balancing is done. For ; [in]splitExprExpression used to split data into folds. If """" a random assignment will be done. Otherwise the expression is fed into ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CvSplitKFolds.html:15086,inherit,inherited,15086,doc/master/classTMVA_1_1CvSplitKFolds.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CvSplitKFolds.html,3,['inherit'],['inherited']
Modifiability,"nnotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TListfBkgPdfNames; boolfCombinationDone; RooAbsPdf*fComboBkgPdf; RooCategory*fComboCat; RooDataSet*fComboDataset; RooAbsPdf*fComboSigBkgPdf; TListfDatasetsNames; intfInclusionLevel; TListfLabelsNames; boolfOwnWs; TListfSigBkgPdfNames; boolfVerbose; RooWorkspace*fWs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HLFactory(const char* name, const char* fileName = 0, bool isVerbose = false); Constructor with the name of the config file to interpret and the; verbosity flag. The extension for the config files is assumed to; be "".rs"". HLFactory(const char* name, RooWorkspace* externalWs, bool isVerbose = false); Constructor without a card but with an exrernal workspace. HLFactory(). ~HLFactory(); destructor. int AddChannel(const char* label, const char* SigBkgPdfName, const char* BkgPdfName = 0, const char* datasetName = 0); Add a channel to the combination. The channel can be specified as:; - A signal plus background pdf; - A background only pdf; - A dataset; Once the combination of the pdfs is done, no more channels should be; added. RooAbsPdf* GetTotSigBkgPdf(); Return the combination of the signal plus background channels.; The facory owns the object. RooAbsPdf* GetTotBkgPdf(); Return the combination of the background only channels.; If no back",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HLFactory.html:7169,Inherit,Inheritance,7169,root/html602/RooStats__HLFactory.html,https://root.cern,https://root.cern/root/html602/RooStats__HLFactory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nnotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. char*TBranch::fAddress! Address of 1st leaf (variable or object); Int_t*TBranch::fBasketBytes[fMaxBaskets] Length of baskets on file; Long64_t*TBranch::fBasketEntry[fMaxBaskets] Table of first entry in each basket; Long64_t*TBranch::fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tTBranch::fBasketSizeInitial Size of Basket Buffer; TObjArrayTBranch::fBaskets-> List of baskets of this branch; TBranch*fBranchCountBranch with clones count; TObjArrayTBranch::fBranches-> List of Branches of this branch; TList*TBranch::fBrowsables! List of TVirtualBranchBrowsables used for Browse(); TStringfClassNamename of the class of the objets in the ClonesArray; Int_tTBranch::fCompressCompression level and algorithm; TBasket*TBranch::fCurrentBasket! Pointer to the current basket.; TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; TBranch::FillLeaves_tTBranch::fFillLeaves! Pointer to the FillLe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranchClones.html:11129,variab,variable,11129,root/html602/TBranchClones.html,https://root.cern,https://root.cern/root/html602/TBranchClones.html,4,['variab'],['variable']
Modifiability,"no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widget organizes TGButton widgets in a group; with one horizontal row. TGHButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. The TGVButtonGroup widget organizes TGButton widgets in a group; with one vertical column. TGVButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. Function Members (Methods); public:. TGButtonGroup(const TGWindow* parent = 0, const TString& title = """", UInt_t options = kChildFrame|kVerticalFrame, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); TGButtonGroup(const TGWindow* parent, UInt_t r, UInt_t c, Int_t s = 0, Int_t h = 0, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); virtual~TGButtonGroup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGButtonGroup.html:2733,inherit,inherits,2733,root/html528/TGButtonGroup.html,https://root.cern,https://root.cern/root/html528/TGButtonGroup.html,6,['inherit'],['inherits']
Modifiability,"no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widget organizes TGButton widgets in a group; with one horizontal row. TGHButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. The TGVButtonGroup widget organizes TGButton widgets in a group; with one vertical column. TGVButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. Function Members (Methods); public:. TGHButtonGroup(const TGWindow* parent, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); virtual~TGHButtonGroup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGButtonGroup::ButtonClicked(); virtual voidTGButtonGroup::ButtonPressed(); virtual voidTGButtonGroup::ButtonReleased(); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHButtonGroup.html:2737,inherit,inherits,2737,root/html528/TGHButtonGroup.html,https://root.cern,https://root.cern/root/html528/TGHButtonGroup.html,6,['inherit'],['inherits']
Modifiability,"no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widget organizes TGButton widgets in a group; with one horizontal row. TGHButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. The TGVButtonGroup widget organizes TGButton widgets in a group; with one vertical column. TGVButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. Function Members (Methods); public:. TGVButtonGroup(const TGWindow* parent, const TString& title = """", GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); virtual~TGVButtonGroup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGButtonGroup::ButtonClicked(); virtual voidTGButtonGroup::ButtonPressed(); virtual voidTGButtonGroup::ButtonReleased(); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVButtonGroup.html:2737,inherit,inherits,2737,root/html528/TGVButtonGroup.html,https://root.cern,https://root.cern/root/html528/TGVButtonGroup.html,6,['inherit'],['inherits']
Modifiability,"no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widget organizes TGButton widgets in a group; with one horizontal row. TGHButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. The TGVButtonGroup widget organizes TGButton widgets in a group; with one vertical column. TGVButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. Function Members (Methods); public:. virtual~TGButtonGroup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidButtonClicked(); virtual voidButtonPressed(); virtual voidButtonReleased(); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGButtonGroup.html:2733,inherit,inherits,2733,root/html602/TGButtonGroup.html,https://root.cern,https://root.cern/root/html602/TGButtonGroup.html,4,['inherit'],['inherits']
Modifiability,"no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widget organizes TGButton widgets in a group; with one horizontal row. TGHButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. The TGVButtonGroup widget organizes TGButton widgets in a group; with one vertical column. TGVButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. Function Members (Methods); public:. virtual~TGHButtonGroup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGButtonGroup::ButtonClicked(); virtual voidTGButtonGroup::ButtonPressed(); virtual voidTGButtonGroup::ButtonReleased(); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHButtonGroup.html:2737,inherit,inherits,2737,root/html602/TGHButtonGroup.html,https://root.cern,https://root.cern/root/html602/TGHButtonGroup.html,4,['inherit'],['inherits']
Modifiability,"no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. The TGHButtonGroup widget organizes TGButton widgets in a group; with one horizontal row. TGHButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. The TGVButtonGroup widget organizes TGButton widgets in a group; with one vertical column. TGVButtonGroup is a convenience class that; offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. Function Members (Methods); public:. virtual~TGVButtonGroup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGButtonGroup::ButtonClicked(); virtual voidTGButtonGroup::ButtonPressed(); virtual voidTGButtonGroup::ButtonReleased(); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGVButtonGroup.html:2737,inherit,inherits,2737,root/html602/TGVButtonGroup.html,https://root.cern,https://root.cern/root/html602/TGVButtonGroup.html,4,['inherit'],['inherits']
Modifiability,"no operations). {}. void Clear(); reset for consecutive minimizations - implement if needed. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction & func); set a function to minimize using gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). return SetLimitedVariable(unsigned int , const string& , double , double , double , double ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int , double ); set the value of an existing variable. { return false; }. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. bool ProvidesError() const; minimizer provides error and error matrix. const double * Errors() const; return errors at ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Minimizer.html:5395,variab,variable,5395,root/html526/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Minimizer.html,1,['variab'],['variable']
Modifiability,"no. of points; *-* parx2p(i) x value of point i; *-* pary2p(i) y value of point i; -; *-* coef2p(1...3) coefficients of the fitted parabola; *-* y=coef2p(1) + coef2p(2)*x + coef2p(3)*x**2; *-* sdev2p= variance; *-* method : chi**2 = min equation solved explicitly; *. void mnpint(Double_t& pexti, Int_t i, Double_t& pinti); Calculates the internal parameter value PINTI*-; *-* =============================================; *-* corresponding to the external value PEXTI for parameter I.; *. void mnplot(Double_t* xpt, Double_t* ypt, char* chpt, Int_t nxypt, Int_t npagwd, Int_t npagln); Plots points in array xypt onto one page with labelled axes*-; *-* ===========================================================; *-* NXYPT is the number of points to be plotted; *-* XPT(I) = x-coord. of ith point; *-* YPT(I) = y-coord. of ith point; *-* CHPT(I) = character to be plotted at this position; *-* the input point arrays XPT, YPT, CHPT are destroyed.; -; -; *-* If fGraphicsmode is true (default), a TGraph object is produced; *-* via the Plug-in handler. To get the plot, you can do:; *-* TGraph *gr = (TGraph*)gMinuit->GetPlot();; *-* gr->Draw(""al"");; -; *. void mnpout(Int_t iuext, TString& chnam, Double_t& val, Double_t& err, Double_t& xlolim, Double_t& xuplim, Int_t& iuint) const; -*Provides the user with information concerning the current status; *-* ================================================================; *-* of parameter number IUEXT. Namely, it returns:; *-* CHNAM: the name of the parameter; *-* VAL: the current (external) value of the parameter; *-* ERR: the current estimate of the parameter uncertainty; *-* XLOLIM: the lower bound (or zero if no limits); *-* XUPLIM: the upper bound (or zero if no limits); *-* IUINT: the internal parameter number (or zero if not variable,; *-* or negative if undefined).; *-* Note also: If IUEXT is negative, then it is -internal parameter; *-* number, and IUINT is returned as the EXTERNAL number.; *-* Except for IUINT, this is exactly t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMinuit.html:49810,Plug-in,Plug-in,49810,root/html532/TMinuit.html,https://root.cern,https://root.cern/root/html532/TMinuit.html,4,['Plug-in'],['Plug-in']
Modifiability,"node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidSetTestSignalEfficiency(Double_t effS); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCuts.html:12905,Config,Configurable,12905,root/html532/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCuts.html,1,['Config'],['Configurable']
Modifiability,"node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodFDA.html:11020,Config,Configurable,11020,root/html532/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodFDA.html,3,['Config'],['Configurable']
Modifiability,"node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidSetTestSignalEfficiency(Double_t effS); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCuts.html:13844,Config,Configurable,13844,root/html602/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCuts.html,2,['Config'],['Configurable']
Modifiability,"node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidSetTestSignalEfficiency(Double_t effS); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCuts.html:13085,Config,Configurable,13085,root/html534/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCuts.html,1,['Config'],['Configurable']
Modifiability,"node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStrea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodFDA.html:11865,Config,Configurable,11865,root/html602/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodFDA.html,6,['Config'],['Configurable']
Modifiability,"node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodFDA.html:11108,Config,Configurable,11108,root/html534/TMVA__MethodFDA.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodFDA.html,3,['Config'],['Configurable']
Modifiability,"nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Int_t_ipOrderInterpolation order for cache histograms ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCachedReal.html:32994,config,configuration,32994,root/html526/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html526/RooAbsCachedReal.html,2,['config'],['configuration']
Modifiability,"nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; RooListProxy_list; TIterator*_listIter! do not persist; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRecursiveFraction.html:31790,config,configuration,31790,root/html526/RooRecursiveFraction.html,https://root.cern,https://root.cern/root/html526/RooRecursiveFraction.html,2,['config'],['configuration']
Modifiability,"nominator;  ; RooRealProxy _numerator;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRatio.html:55694,inherit,inherited,55694,doc/master/classRooRatio.html,https://root.cern,https://root.cern/doc/master/classRooRatio.html,1,['inherit'],['inherited']
Modifiability,"nonInterfering). private . disable interference between terms ; Definition at line 1882 of file RooLagrangianMorphFunc.cxx. ◆ disableInterferences(). void RooLagrangianMorphFunc::disableInterferences ; (; const std::vector< std::vector< const char * > > & ; nonInterfering). private . disable interference between terms ; Definition at line 1899 of file RooLagrangianMorphFunc.cxx. ◆ evaluate(). double RooLagrangianMorphFunc::evaluate ; (; ); const. overridevirtual . call getVal on the internal function ; Implements RooAbsReal.; Definition at line 2903 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [1/3]. double RooLagrangianMorphFunc::expectedEvents ; (; ); const. return the number of expected events for the current parameter set ; Definition at line 2793 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [2/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet & ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2804 of file RooLagrangianMorphFunc.cxx. ◆ expectedEvents() [3/3]. double RooLagrangianMorphFunc::expectedEvents ; (; const RooArgSet * ; nset); const. return expected number of events for extended likelihood calculation, this is the sum of all coefficients ; Definition at line 2785 of file RooLagrangianMorphFunc.cxx. ◆ expectedUncertainty(). double RooLagrangianMorphFunc::expectedUncertainty ; (; ); const. return the expected uncertainty for the current parameter set ; Definition at line 2812 of file RooLagrangianMorphFunc.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooLagrangianMorphFunc::extendMode ; (; ); const. return extended mored capabilities ; Definition at line 2776 of file RooLagrangianMorphFunc.cxx. ◆ forceAnalyticalInt(). bool RooLagrangianMorphFunc::forceAnalyticalInt ; (; const RooAbsArg & ; arg); const. overridevirtual . Force analytical integration for the given observable. ; Reimplemented from RooAbsReal.; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:78798,extend,extended,78798,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['extend'],['extended']
Modifiability,"none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection* whichVars = __null) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection& whichVars) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; RooStats::MarkovChainMarkovChain(); RooStats::MarkovChainMarkovChain(RooArgSet& parameters); RooStats::MarkovChainMarkovChain(const RooStats::MarkovChain&); RooStats::MarkovChainMarkovChain(const char* name, const char* title, RooArgSet& parameters); voidTObject::MayNotUse(const char* method) const; virtual Double_tNLL() const; virtual Double_tNLL(Int_t i) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MarkovChain.html:4086,Inherit,InheritsFrom,4086,root/html602/RooStats__MarkovChain.html,https://root.cern,https://root.cern/root/html602/RooStats__MarkovChain.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TObjArray*fParticles->static container of the primary particles; Float_tfPtCut!Pt cut. Do not show primaries below; Bool_tfShowNeutrons!display neutrons if true; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGenerator(const char* name, const char* title = ""Generator class""); Event generator default constructor. ~TGenerator(); Event generator default destructor. void GenerateEvent(); must be implemented in concrete class (see eg TPythia6). TObjArray* ImportParticles(Option_t* option = """"). It reads the /HEPEVT/ common block which has been filled by the; GenerateEvent method. If the event generator does not use the; HEPEVT common block, This routine has to be overloaded by the; subclasses. The default action is to store only the stable particles (ISTHEP =; 1) This can be demanded explicitly by setting the option = ""Final""; If the option = ""All"", all the particles are stored. Int_t ImportParticles(TClonesArray* particles, Option_t* option = """"). It reads the /HEPEVT/ common block which has been filled by the; GenerateEvent method. If the event generator does not use the; HEPEVT common block, This routine has to be overloaded by the; subclass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGenerator.html:10187,Inherit,Inheritance,10187,root/html602/TGenerator.html,https://root.cern,https://root.cern/root/html602/TGenerator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TGLLightSet::ELightkLightBottom; static TGLLightSet::ELightkLightFront; static TGLLightSet::ELightkLightLeft; static TGLLightSet::ELightkLightMask; static TGLLightSet::ELightkLightRight; static TGLLightSet::ELightkLightSpecular; static TGLLightSet::ELightkLightTop; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_tfFrontPower! power of the front lamp; UInt_tfLightState! light states (on/off) mask; Float_tfSidePower! power of the side lamps; Float_tfSpecularPower! power of specular lamp; Bool_tfUseSpecular!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLLightSet(); Constructor. void ToggleLight(TGLLightSet::ELight light); Toggle light on/off. void SetLight(TGLLightSet::ELight light, Bool_t on); Set a light on/off. void StdSetupLights(const TGLBoundingBox& bbox, const TGLCamera& camera, Bool_t debug = kFALSE); Setup lights for current given bounding box and camera.; This is called by standard GL viewer.; Expects matrix-mode to be model-view. TGLLightSet(const TGLLightSet& ). TGLLightSet& operator=(const TGLLightSet& ). virtual ~TGLLightSet(); {}. UInt_t GetLightState(); { return fLightState; }. Bool_t GetUseSpecular() const; { return fUseSpecular; }. void SetUseSpecular(Bool_t s); { fUseSpecular = s; }. Float_t GetFrontPower() const; { return fFrontPower; }. Float_t GetSidePower() const; { return fSidePower; }. Float_t GetSpecularPower() const; { return fSpecularPower; }. void SetFrontPower(Float_t p); { fFrontPower = p; }. void SetSidePower(Float_t p); { fSidePower = p; }. void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLLightSet.html:6568,Inherit,Inheritance,6568,root/html602/TGLLightSet.html,https://root.cern,https://root.cern/root/html602/TGLLightSet.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TStringTNamed::fNameobject identifier; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TStringTNamed::fTitleobject title; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfIsActivekTRUE if handler is active, kFALSE if not active; TObject*fObject; TGWindow*fWindow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleEvent(Event_t* ev); Handle the event. Returns true if the event has been handled,; false otherwise. void SendMessage(const TGWindow* w, Long_t msg, Long_t parm1, Long_t parm2); Send message (i.e. event) to window w. Message is encoded in one long; as message type and up to two long parameters. TGEventHandler(const TGEventHandler& ). TGEventHandler& operator=(const TGEventHandler& ). void * GetSender(); { return this; }. TGEventHandler(const char* name, TGWindow* w, TObject* obj, const char* title = """"); { }. virtual ~TGEventHandler(); { }. void Activate(); { fIsActive = kTRUE; }. void DeActivate(); { fIsActive = kFALSE; }. Bool_t IsActive() const; { return fIsActive; }. Bool_t HandleConfigureNotify(Event_t* ); { return kFALSE; }. Bool_t HandleButton(Event_t* ); { return kFALSE; }. Bool_t HandleDoubleClick(Event_t* ); { return kFALSE; }. Bool_t HandleCrossing(Event_t* ); { return kFALSE; }. Bool_t HandleMotion(Event_t* ); {",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGEventHandler.html:10467,Inherit,Inheritance,10467,root/html602/TGEventHandler.html,https://root.cern,https://root.cern/root/html602/TGEventHandler.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. _xmlParserCtxt*fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tfParseCodeto keep track of the errorcodes; Bool_tfReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tfStopErrorstop when parse error occurs; Bool_tfValidateto validate the parse context; TStringfValidateErrorparse error; TStringfValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TXMLParser. ←. TDOMParser. TSAXParser. Function documentation; TXMLParser(); Initializes parser variables. ~TXMLParser(); Cleanup. void SetValidate(Bool_t val = kTRUE); The parser will validate the xml file if val = true. void SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t code); Set the parse code:; 0: Parse successful; -1: Attempt to parse a second file while a parse is in pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:10833,variab,variables,10833,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,4,['variab'],['variables']
Modifiability,"nonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; TStringTNamed::fNameobject identifier; Int_tfNvertnumber of vertices of the 2D polygon (at least 3); Int_tfNznumber of z planes (at least two); Double_tTGeoBBox::fOrigin[3]box origin; Double_t*fScale[fNz] array of scale factors (for each Z); UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; vector<TGeoXtru::ThreadData_t*>fThreadData! Navigation data per thread; Int_tfThreadSize! size of thread-specific array; TStringTNamed::fTitleobject title; Double_t*fX[fNvert] X positions for polygon vertices; Double_t*fX0[fNz] array of X offsets (for each Z); Double_t*fY[fNvert] Y positions for polygon vertices; Double_t*fY0[fNz] array of Y offsets (for each Z); Double_t*fZ[fNz] array of Z planes positions; Double_tfZcurrentcurrent Z position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ClearThreadData() const. void CreateThreadData(Int_t nthreads); Create thread data for n threads max. void SetIz(Int_t iz); Set current z-plane. void SetSeg(Int_t iseg); Set current segment. TGeoXtru(); dummy ctor. TGeoXtru(Int_t nz); Default constructor. TGeoXtru(Double_t* param); Default constructor in GEANT3 style; param[0] = nz // number of z planes. param[1] = z1 // Z position of first plane; param[2] = x1 // X position of first plane; param[3] = y1 // Y position of first plane; param[4] = scale1 // scale factor for first plane. param[4*(nz-1]+1] = zn; param[4*(nz-1)+2] = xn; param[4*(nz-1)+3] = yn; param[4*(nz-1)+4] = scalen. TGeoXtru(const TGeoXtru& ); copy constructor. TGeoXtru& operator=(const TGeoXtru& ); assignment operator. ~TGeoXtru(); destructor. Double_t Capacity() const; Compute capacity [length^3] of this shape. void ComputeBBox(); compute bounding box of the pcon. void ComputeNormal(const Double_t* point, const D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoXtru.html:16804,Inherit,Inheritance,16804,root/html602/TGeoXtru.html,https://root.cern,https://root.cern/root/html602/TGeoXtru.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the eventlist with given values. void SlaveTerminate(void); See TProofDraw::SlaveTerminate(). void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawEventList(); {}. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofDrawEventList.html:8392,Inherit,Inheritance,8392,root/html604/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html604/TProofDrawEventList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the eventlist with given values. void SlaveTerminate(void); See TProofDraw::SlaveTerminate(). void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawEventList(); {}. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawEventList.html:8392,Inherit,Inheritance,8392,root/html602/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html602/TProofDrawEventList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,nonymous)TObject::kZombie. protected:. UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TGLSceneInfo*fGLSceneInfo; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; TEveScene*fScene; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveViewer*fViewer; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionCo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveSceneInfo.html:17741,variab,variable,17741,root/html602/TEveSceneInfo.html,https://root.cern,https://root.cern/root/html602/TEveSceneInfo.html,4,['variab'],['variable']
Modifiability,"nonymous)kMinimalSize; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TBuffer::EModekRead; static TObject::(anonymous)TObject::kSingleKey; static TBuffer::EModekWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. char*fBufCurCurrent position in buffer; char*fBufMaxEnd of buffer; Int_tfBufSizeSize of buffer; char*fBufferBuffer used to store objects; TBuffer::CacheList_tfCacheStackStack of pointers to the cache where to temporarily store the value of 'missing' data members; Bool_tfModeRead or write mode; TObject*fParentPointer to parent object owning this buffer; ReAllocCharFun_tfReAllocFunc! Realloc function to be used when extending the buffer.; Int_tfVersionBuffer format version. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBuffer(EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBuffer(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBuffer(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the new buffer is _not_ adopted and no memory allocation routine; is provided, a Fatal error will be issued if the Buffer attempts to; expand. ~TBuffer(); Delete an I/O buffer object. void AutoExpand(Int_t size_needed); Auto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBuffer.html:17672,Inherit,Inheritance,17672,root/html602/TBuffer.html,https://root.cern,https://root.cern/root/html602/TBuffer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nor(px,py);; pz = px*px + py*py;; pt = r.Landau(0,1);; hprof3d->Fill(px,py,pz,pt,1);; }; hprof3d->Draw();; }; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TCanvasThe Canvas class.Definition TCanvas.h:23; TProfile3D::TProfile3DTProfile3D()Default constructor for Profile3D histograms.Definition TProfile3D.cxx:76; TRandom3Random number generator class based on M.Definition TRandom3.h:27; double; int; ptTPaveText * ptDefinition entrylist_figure1.C:7; c1return c1Definition legend1.C:41; NOTE: A TProfile3D is drawn as it was a simple TH3 ; Definition at line 27 of file TProfile3D.h. Public Member Functions;  TProfile3D ();  Default constructor for Profile3D histograms. ;  ;  TProfile3D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins, Option_t *option="""");  Create a 3-D Profile with variable bins in X , Y and Z. ;  ;  TProfile3D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup, Option_t *option="""");  Normal Constructor for Profile histograms. ;  ;  TProfile3D (const TProfile3D &profile);  Copy constructor. ;  ;  ~TProfile3D () override;  Default destructor for Profile3D histograms. ;  ; Bool_t Add (const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) override;  Replace contents of this profile3D by the addition of h1 and h2. ;  ; Bool_t Add (const TH1 *h1, Double_t c1=1) override;  Performs the operation: this = this + c1*h1 . ;  ; Bool_t Add (TF1 *h1, Double_t c1=1, Option_t *option="""") override;  Performs the operation: this = this + c1*f1 . ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; void B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:3089,variab,variable,3089,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['variab'],['variable']
Modifiability,"normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_t_relParam; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHistConstraint.html:43904,config,configuration,43904,root/html602/RooHistConstraint.html,https://root.cern,https://root.cern/root/html602/RooHistConstraint.html,8,['config'],['configuration']
Modifiability,"normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; Bool_t_protectNegative; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooPoisson.html:43860,config,configuration,43860,root/html602/RooPoisson.html,https://root.cern,https://root.cern/root/html602/RooPoisson.html,8,['config'],['configuration']
Modifiability,"normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given config",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:16131,config,configuration,16131,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,49,['config'],['configuration']
Modifiability,"normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:13388,config,configuration,13388,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,18,['config'],['configuration']
Modifiability,"normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:15577,config,configuration,15577,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['config'],['configuration']
Modifiability,"normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:13681,config,configuration,13681,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['config'],['configuration']
Modifiability,"normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:13949,config,configuration,13949,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,4,['config'],['configuration']
Modifiability,"normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:15295,config,configuration,15295,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['config'],['configuration']
Modifiability,"normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_t_ownBasisFlag indicating ownership of _basis ; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyxDependent/convolution variable.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooResolutionModel.html:41052,config,configuration,41052,root/html528/RooResolutionModel.html,https://root.cern,https://root.cern/root/html528/RooResolutionModel.html,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooCategoryProxy_tagFlav; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooBMixDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBMixDecay.html:44514,config,configuration,44514,root/html534/RooBMixDecay.html,https://root.cern,https://root.cern/root/html534/RooBMixDecay.html,4,['config'],['configuration']
Modifiability,"normSet, const char *rangeName=nullptr) const override;  Return analytical integral represent by appropriate element of projection cache. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooAbsPdf * createProjection (const RooArgSet &iset) override;  Special version of RooAbsReal::createProjection that deals with projections of projections. ;  ; double expectedEvents (const RooArgSet *nset) const override;  Return expected number of events to be used in calculation of extended likelihood. ;  ; ExtendMode extendMode () const override;  Returns ability of PDF to provide extended likelihood terms. ;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  Force RooRealIntegral to relegate integration of all observables to internal logic. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Mark all requested variables as internally integrated. ;  ; void initGenerator (Int_t) override;  Interface for one-time initialization to setup the generator for the specified code. ;  ; TClass * IsA () const override;  ; void printMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the integration operation. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:2630,variab,variables,2630,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['variab'],['variables']
Modifiability,"normal constructor. ;  ;  ~TAttParticle () override;  Particle destructor. ;  ; virtual Double_t GetCharge () const;  ; virtual Double_t GetDecayWidth () const;  ; virtual Double_t GetEnergyCut () const;  ; virtual Double_t GetEnergyLimit () const;  ; virtual Double_t GetGranularity () const;  ; virtual Double_t GetMass () const;  ; virtual Int_t GetMCNumber () const;  ; virtual const char * GetParticleType () const;  ; virtual Bool_t GetStable () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print the entire information of this kind of particle. ;  ; virtual Double_t SampleMass () const;  Samples a mass according to the Breit-Wigner resonance distribution. ;  ; virtual Double_t SampleMass (Double_t widthcut) const;  Samples a mass in the interval: ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttParticle.html:1758,inherit,inherited,1758,doc/master/classTAttParticle.html,https://root.cern,https://root.cern/doc/master/classTAttParticle.html,1,['inherit'],['inherited']
Modifiability,"normal, kTRUE - accelerated ;  ; Pixel_t fBgndColor;  background color ;  ; Bool_t fDragging;  in dragging mode? ;  ; Bool_t fGrabPointer;  grab pointer when dragging ;  ; TGScrollBarElement * fHead;  head button of scrollbar ;  ; const TGPicture * fHeadPic;  picture in head (up or left arrow) ;  ; Pixel_t fHighColor;  highlight color ;  ; Int_t fPos;  logical current position ;  ; Int_t fPsize;  logical page size of scrollbar ;  ; Int_t fRange;  logical upper range of scrollbar ;  ; TTimer * fRepeat;  repeat rate timer (when mouse stays pressed) ;  ; TGScrollBarElement * fSlider;  slider ;  ; Int_t fSliderRange;  logical slider range ;  ; Int_t fSliderSize;  logical slider size ;  ; Int_t fSmallInc;  Small Increment in the sliding algorithm. ;  ; Window_t fSubw;  sub window in which mouse is pressed ;  ; TGScrollBarElement * fTail;  tail button of scrollbar ;  ; const TGPicture * fTailPic;  picture in tail (down or right arrow) ;  ; Int_t fX0;  ; Int_t fXp;  ; Int_t fY0;  current slider position in pixels ;  ; Int_t fYp;  previous slider position in pixels ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHScrollBar.html:28845,inherit,inherited,28845,doc/master/classTGHScrollBar.html,https://root.cern,https://root.cern/doc/master/classTGHScrollBar.html,3,['inherit'],['inherited']
Modifiability,"nos(const ROOT::Minuit2::MnMinos&); ROOT::Minuit2::MnMinosMnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, unsigned int stra = 1); ROOT::Minuit2::MnMinosMnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, const ROOT::Minuit2::MnStrategy& stra); pair<double,double>operator()(unsigned int, unsigned int maxcalls = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::MnMinos&operator=(const ROOT::Minuit2::MnMinos&); doubleUpper(unsigned int, unsigned int maxcalls = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::MnCrossUpval(unsigned int, unsigned int maxcalls = 0, double toler = 0.10000000000000001) const. protected:. ROOT::Minuit2::MnCrossFindCrossValue(int dir, unsigned int, unsigned int maxcalls, double toler) const. Data Members; private:. const ROOT::Minuit2::FCNBase&fFCN; const ROOT::Minuit2::FunctionMinimum&fMinimum; ROOT::Minuit2::MnStrategyfStrategy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, unsigned int stra = 1); construct from FCN + Minimum + strategy. MnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, const ROOT::Minuit2::MnStrategy& stra); construct from FCN + Minimum + strategy. ~MnMinos(); {}. std::pair<double,double> operator()(unsigned int , unsigned int maxcalls = 0, double toler = 0.10000000000000001) const; returns the negative (pair.first) and the positive (pair.second); Minos Error of the Parameter. double Lower(unsigned int , unsigned int maxcalls = 0, double toler = 0.10000000000000001) const; calculate one side (negative or positive Error) of the Parameter; give as input (optionally) maxcalls and tolerance. double Upper(unsigned int , unsigned int maxcalls = 0, double toler = 0.10000000000000001) const. MnCross Loval(unsigned int , unsigned int maxcalls = 0, double toler = 0.100000000000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__MnMinos.html:1841,Inherit,Inheritance,1841,root/html602/ROOT__Minuit2__MnMinos.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__MnMinos.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nostat’ draw option - disabled stat drawing; Using ‘same’ identifier in item name, one can easily draw or superimpose similar items from different files. Could be used in URL like: ...&files=[file1.root,file2.root]&items=[file1.root/hpx, file2.root/_same_] ...&files=[file1.root,file2.root]&item=file1.root/hpx+file2.root/_same_ Main limitation - file names should have similar length.; When ‘autozoom’ specified in draw options, histogram zoomed into non-empty content. Same command available via context menu.; Item of ‘Text’ kind can be created. It is displayed as lain text in the browser. If property ‘mathjax’ specified, MathJax.js library will be loaded and used for rendering. See tutorials/http/httpcontrol.C macro for example.; When using foreignObject, provide workaround for absolute positioning problem in Chrome/Safari, see http://bit.ly/1wjqCQ9; Support usage of minimized versions of .js and .css files. Minimized scripts used by default on web servers.; Implement JSROOT.extend instead of jQuery.extend, reduce usage of jquery.js in core JSROOT classes; Implement main graphics without jquery at all, such mode used in nobrowser mode.; Provide optional latex drawing with MathJax SVG. TMathText always drawn with MathJax, other classes require mathjax option in URL; Improve drawing of different text classes, correctly handle their alignment and scaling, special handling for IE. TTree Libraries; TTree Behavior change.; Merging.; Added fast cloning support to TTree::MergeTrees and TTree::Merge(TCollection,Option_t).; TTreeCache; The TTreeCache is now enabled by default. The default size of the TTreeCache is the estimated size of a cluster size for the TTree. The TTreeCache prefilling is also enabled by default; when in learning phase rather than reading each requested branch individually, the TTreeCache will read all the branches thus trading off the latencies inherent to multiple small reads for the potential of requesting more data than needed by read from the disk or s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:11246,extend,extend,11246,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['extend'],['extend']
Modifiability,"not already there. ;  ; virtual void SetPriorPdf (const char *name);  Specify the name of the PDF in the workspace to be used. ;  ; virtual void SetPriorPdf (const RooAbsPdf &pdf);  Set the Prior Pdf, add to the workspace if not already there. ;  ; virtual void SetProtoData (const char *name);  Specify the name of the dataset in the workspace to be used. ;  ; virtual void SetProtoData (RooAbsData &data);  Set the proto DataSet, add to the workspace if not already there. ;  ; virtual void SetSnapshot (const RooArgSet &set);  Set parameter values for a particular hypothesis if using a common PDF by saving a snapshot in the workspace. ;  ; virtual void SetWorkspace (RooWorkspace &ws);  ; void SetWS (RooWorkspace &ws) override;  Set a workspace that owns all the necessary components for the analysis. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html:8230,inherit,inherited,8230,doc/master/classRooStats_1_1ModelConfig.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html,1,['inherit'],['inherited']
Modifiability,"not be recalculated; if the observable p changes. RooCachedPdf(const RooCachedPdf& other, const char* name = 0); Copy constructor. ~RooCachedPdf(); Destructor. void fillCacheObject(RooAbsCachedPdf::PdfCacheElem& cachePdf) const; Update contents of cache histogram by resampling the input p.d.f. Note that; the cache is filled with normalized p.d.f values so that the RooHistPdf; that represents the cache contents can be explicitly declared as self normalized; eliminating the need for superfluous numeric calculations of unit normalization.s. void preferredObservableScanOrder(const RooArgSet& obs, RooArgSet& orderedObs) const; Defer preferred scan order to cached pdf prefernece. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedPdf(); {}. TObject* clone(const char* newname) const; { return new RooCachedPdf(*this,newname); }. const char* inputBaseName() const; Return the base name for cache objects, in this case the name of the cached p.d.f. Double_t evaluate() const; Dummy evaluate, it is never called. const char* payloadUniqueSuffix() const; { return pdf.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Mon Jul 4 15:22:22 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCachedPdf.html:44623,variab,variables,44623,root/html530/RooCachedPdf.html,https://root.cern,https://root.cern/root/html530/RooCachedPdf.html,1,['variab'],['variables']
Modifiability,"not be recalculated; if the observable p changes. RooCachedPdf(const RooCachedPdf& other, const char* name = 0); Copy constructor. ~RooCachedPdf(); Destructor. void fillCacheObject(RooAbsCachedPdf::PdfCacheElem& cachePdf) const; Update contents of cache histogram by resampling the input p.d.f. Note that; the cache is filled with normalized p.d.f values so that the RooHistPdf; that represents the cache contents can be explicitly declared as self normalized; eliminating the need for superfluous numeric calculations of unit normalization.s. void preferredObservableScanOrder(const RooArgSet& obs, RooArgSet& orderedObs) const; Defer preferred scan order to cached pdf prefernece. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedPdf(); {}. TObject* clone(const char* newname) const; { return new RooCachedPdf(*this,newname); }. const char* inputBaseName() const; Return the base name for cache objects, in this case the name of the cached p.d.f. Double_t evaluate() const; Dummy evaluate, it is never called. const char* payloadUniqueSuffix() const; { return pdf.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Thu Nov 3 20:07:41 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCachedPdf.html:45030,variab,variables,45030,root/html532/RooCachedPdf.html,https://root.cern,https://root.cern/root/html532/RooCachedPdf.html,1,['variab'],['variables']
Modifiability,"not be recalculated; if the observable p changes. RooCachedPdf(const RooCachedPdf& other, const char* name = 0); Copy constructor. ~RooCachedPdf(); Destructor. void fillCacheObject(RooAbsCachedPdf::PdfCacheElem& cachePdf) const; Update contents of cache histogram by resampling the input p.d.f. Note that; the cache is filled with normalized p.d.f values so that the RooHistPdf; that represents the cache contents can be explicitly declared as self normalized; eliminating the need for superfluous numeric calculations of unit normalization.s. void preferredObservableScanOrder(const RooArgSet& obs, RooArgSet& orderedObs) const; Defer preferred scan order to cached pdf prefernece. RooArgSet* actualObservables(const RooArgSet& nset) const; If this pdf is operated with a fixed set of observables, return; the subset of the fixed observables that are actual dependents; of the external input p.d.f. If this p.d.f is operated without; a fixed set of cache observables, return the actual observables; of the external input p.d.f given the choice of observables defined; in nset. RooArgSet* actualParameters(const RooArgSet& nset) const; If this p.d.f is operated with a fixed set of observables, return; all variables of the external input p.d.f that are not one of; the cache observables. If this p.d.f is operated in automatic mode,; return the parameters of the external input p.d.f. RooCachedPdf(); {}. TObject* clone(const char* newname) const; { return new RooCachedPdf(*this,newname); }. const char* inputBaseName() const; Return the base name for cache objects, in this case the name of the cached p.d.f. Double_t evaluate() const; Dummy evaluate, it is never called. const char* payloadUniqueSuffix() const; { return pdf.arg().aggregateCacheUniqueSuffix() ; }. » Last changed: Tue Jun 2 15:29:45 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCachedPdf.html:49056,variab,variables,49056,root/html604/RooCachedPdf.html,https://root.cern,https://root.cern/root/html604/RooCachedPdf.html,2,['variab'],['variables']
Modifiability,"not benefit from file; 10032 * compression, but there is still some overhead. */; 10033#if defined(USE_ZLIB); 10034 if (filep->stat.size < MG_FILE_COMPRESSION_SIZE_LIMIT) {; 10035 /* File is below the size limit. */; 10036 allow_on_the_fly_compression = 0;; 10037 }; 10038#endif; 10039 ; 10040 /* Standard CORS header */; 10041 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 10042 origin_hdr = mg_get_header(conn, ""Origin"");; 10043 if (cors_orig_cfg && *cors_orig_cfg && origin_hdr) {; 10044 /* Cross-origin resource sharing (CORS), see; 10045 * http://www.html5rocks.com/en/tutorials/cors/,; 10046 * http://www.html5rocks.com/static/images/cors_server_flowchart.png; 10047 * -; 10048 * preflight is not supported for files. */; 10049 cors1 = ""Access-Control-Allow-Origin"";; 10050 cors2 = cors_orig_cfg;; 10051 } else {; 10052 cors1 = cors2 = """";; 10053 }; 10054 ; 10055 /* Credentials CORS header */; 10056 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 10057 if (cors_cred_cfg && *cors_cred_cfg && origin_hdr) {; 10058 cors3 = ""Access-Control-Allow-Credentials"";; 10059 cors4 = cors_cred_cfg;; 10060 } else {; 10061 cors3 = cors4 = """";; 10062 }; 10063 ; 10064 /* Prepare Etag, and Last-Modified headers. */; 10065 gmt_time_string(lm, sizeof(lm), &filep->stat.last_modified);; 10066 construct_etag(etag, sizeof(etag), &filep->stat);; 10067 ; 10068 /* Create 2xx (200, 206) response */; 10069 mg_response_header_start(conn, conn->status_code);; 10070 send_static_cache_header(conn);; 10071 send_additional_header(conn);; 10072 mg_response_header_add(conn,; 10073 ""Content-Type"",; 10074 mime_vec.ptr,; 10075 (int)mime_vec.len);; 10076 if (cors1[0] != 0) {; 10077 mg_response_header_add(conn, cors1, cors2, -1);; 10078 }; 10079 if (cors3[0] != 0) {; 10080 mg_response_header_add(conn, cors3, cors4, -1);; 10081 }; 10082 mg_response_header_add(conn, ""Last-Modified"", lm, -1);; 10083 mg_response_header_add(conn, ""Etag"", etag, -1);; 10084 ; 10085#if defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:288604,config,config,288604,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"not benefit from file; 10033 * compression, but there is still some overhead. */; 10034#if defined(USE_ZLIB); 10035 if (filep->stat.size < MG_FILE_COMPRESSION_SIZE_LIMIT) {; 10036 /* File is below the size limit. */; 10037 allow_on_the_fly_compression = 0;; 10038 }; 10039#endif; 10040 ; 10041 /* Standard CORS header */; 10042 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 10043 origin_hdr = mg_get_header(conn, ""Origin"");; 10044 if (cors_orig_cfg && *cors_orig_cfg && origin_hdr) {; 10045 /* Cross-origin resource sharing (CORS), see; 10046 * http://www.html5rocks.com/en/tutorials/cors/,; 10047 * http://www.html5rocks.com/static/images/cors_server_flowchart.png; 10048 * -; 10049 * preflight is not supported for files. */; 10050 cors1 = ""Access-Control-Allow-Origin"";; 10051 cors2 = cors_orig_cfg;; 10052 } else {; 10053 cors1 = cors2 = """";; 10054 }; 10055 ; 10056 /* Credentials CORS header */; 10057 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 10058 if (cors_cred_cfg && *cors_cred_cfg && origin_hdr) {; 10059 cors3 = ""Access-Control-Allow-Credentials"";; 10060 cors4 = cors_cred_cfg;; 10061 } else {; 10062 cors3 = cors4 = """";; 10063 }; 10064 ; 10065 /* Prepare Etag, and Last-Modified headers. */; 10066 gmt_time_string(lm, sizeof(lm), &filep->stat.last_modified);; 10067 construct_etag(etag, sizeof(etag), &filep->stat);; 10068 ; 10069 /* Create 2xx (200, 206) response */; 10070 mg_response_header_start(conn, conn->status_code);; 10071 send_static_cache_header(conn);; 10072 send_additional_header(conn);; 10073 mg_response_header_add(conn,; 10074 ""Content-Type"",; 10075 mime_vec.ptr,; 10076 (int)mime_vec.len);; 10077 if (cors1[0] != 0) {; 10078 mg_response_header_add(conn, cors1, cors2, -1);; 10079 }; 10080 if (cors3[0] != 0) {; 10081 mg_response_header_add(conn, cors3, cors4, -1);; 10082 }; 10083 mg_response_header_add(conn, ""Last-Modified"", lm, -1);; 10084 mg_response_header_add(conn, ""Etag"", etag, -1);; 10085 ; 10086#if defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:288637,config,config,288637,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"not do this itself.; 5.9.4.3 Numerical Inaccuracies; It is possible that the apparent lack of positive-definiteness is due to excessive round off errors in numerical calculations (in the user function), or not enough precision. This is unlikely in general, but becomes more likely if the number of free parameters is very large, or if the parameters are badly scaled (not all of the same order of magnitude), and correlations are large. In any case, whether the non-positive-definiteness is real or only numerical is largely irrelevant, since in both cases the error matrix will be unreliable and the minimum suspicious.; 5.9.4.4 An Ill-posed Problem; For questions of parameter dependence, see the discussion above on positive-definiteness. Possible other mathematical problems are the following:. Excessive numerical round off - be especially careful of exponential and factorial functions which get big very quickly and lose accuracy.; Starting too far from the solution - the function may have unphysical local minima, especially at infinity in some variables. 5.10 Minuit2 Package; Minuit2 is a new object-oriented implementation, written in C++, of the popular MINUIT minimization package. Compared with the TMinuit class, which is a direct conversion from FORTRAN to C++, Minuit2 is a complete redesign and re-implementation of the package. This new version provides all the functionality present in the old FORTRAN version, with almost equivalent numerical accuracy and computational performances. Furthermore, it contains some fixes and small improvements and this new functionality: * The possibility to set single side parameter limits * the FUMILI algorithm (see the next paragraph “FUMILI Minimization Package”), which is an optimized method for least square and log likelihood minimizations.; Minuit2 has been originally developed by M. Winkler and F. James in the SEAL project. More information can be found on the MINUIT Web Site and in particular at the following documentation page a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:225169,variab,variables,225169,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"not implemented in this case; 406 if (!extended) {; 407 MATH_WARN_MSG(""Fitter::DoBinnedLikelihoodFit"",; 408 ""Not-extended binned fit with gradient not yet supported - do an extended fit"");; 409 extended = true;; 410 }; 411 if (fFunc_v) {; 412 // create a chi2 function to be used for the equivalent chi-square; 413 Chi2FCN<BaseFunc, IModelFunction_v> chi2(data, fFunc_v);; 414 std::shared_ptr<IGradModelFunction_v> gradFun = std::dynamic_pointer_cast<IGradModelFunction_v>(fFunc_v);; 415 if (!gradFun) {; 416 MATH_ERROR_MSG(""Fitter::DoBinnedLikelihoodFit"", ""wrong type of function - it does not provide gradient"");; 417 return false;; 418 }; 419 auto logl = std::make_unique<PoissonLikelihoodFCN<BaseGradFunc, IModelFunction_v>>(data, gradFun, useWeight, extended, executionPolicy);; 420 // do minimization; 421 return (useWeight) ? DoWeightMinimization(std::move(logl),&chi2) : DoMinimization(std::move(logl),&chi2);; 422 } else {; 423 // create a chi2 function to be used for the equivalent chi-square; 424 Chi2FCN<BaseFunc> chi2(data, fFunc);; 425 // check if fFunc provides gradient; 426 std::shared_ptr<IGradModelFunction> gradFun = std::dynamic_pointer_cast<IGradModelFunction>(fFunc);; 427 if (!gradFun) {; 428 MATH_ERROR_MSG(""Fitter::DoBinnedLikelihoodFit"", ""wrong type of function - it does not provide gradient"");; 429 return false;; 430 }; 431 // use gradient for minimization; 432 auto logl = std::make_unique<PoissonLikelihoodFCN<BaseGradFunc>>(data, gradFun, useWeight, extended, executionPolicy);; 433 // do minimization; 434 return (useWeight) ? DoWeightMinimization(std::move(logl),&chi2) : DoMinimization(std::move(logl),&chi2);; 435 }; 436 }; 437 return false;; 438}; 439 ; 440bool Fitter::DoUnbinnedLikelihoodFit(bool extended, const ROOT::EExecutionPolicy &executionPolicy) {; 441 // perform a likelihood fit on a set of unbinned data; 442 ; 443 std::shared_ptr<UnBinData> data = std::dynamic_pointer_cast<UnBinData>(fData);; 444 assert(data);; 445 ; 446 bool useWeight = fConfig.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:16339,extend,extended,16339,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,2,['extend'],['extended']
Modifiability,"not opened.; = RECREATE create a new file, if the file already; exists it will be overwritten.; = UPDATE open an existing file for writing.; if no file exists, it is created.; = READ open an existing file for reading (default).; = NET used by derived remote file access; classes, not a user callable option; = WEB used by derived remote http access; class, not a user callable option; If option = """" (default), READ is assumed. The file can be specified as a URL of the form:; file:///user/rdm/bla.root or file:/user/rdm/bla.root. The file can also be a member of an archive, in which case it is; specified as:; multi.zip#file.root or multi.zip#0; which will open file.root which is a member of the file multi.zip; archive or member 1 from the archive. For more on archive file; support see the TArchiveFile class. TFile and its remote access plugins can also be used to open any; file, i.e. also non ROOT files, using:; file.tar?filetype=raw; This is convenient because the many remote file access plugins allow; easy access to/from the many different mass storage systems. The title of the file (ftitle) will be shown by the ROOT browsers. A ROOT file (like a Unix file system) may contain objects and; directories. There are no restrictions for the number of levels; of directories. A ROOT file is designed such that one can write in the file in pure; sequential mode (case of BATCH jobs). In this case, the file may be; read sequentially again without using the file index written; at the end of the file. In case of a job crash, all the information; on the file is therefore protected. A ROOT file can be used interactively. In this case, one has the; possibility to delete existing objects and add new ones.; When an object is deleted from the file, the freed space is added; into the FREE linked list (fFree). The FREE list consists of a chain; of consecutive free segments on the file. At the same time, the first; 4 bytes of the freed record on the file are overwritten by GAPSIZE; where GAP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:24175,plugin,plugins,24175,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,10,['plugin'],['plugins']
Modifiability,"notPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&fDsi; TMVA::DataSetInfo*fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntfGetget variables/targets/spectators; TMVA::MsgLogger*fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntfPutput variables/targets/spectators; TMVA::TMVAVersion_tfTMVAVersion; TMVA::Event*fTransformedEventholds the current transformed event. private:. Bool_tfCreatedhas been created; Bool_tfEnabledhas been enabled; UInt_tfNSpectatorsnumber of spectators to be transformed; UInt_tfNTargetsnumber of targets to be transformed; UInt_tfNVariablesnumber of variables to be transformed; UInt_tfNVarsnumber of variables; Bool_tfNormalisenormalise input variables; Bool_tfSortGetif true, sort the variables into the order as defined by the user at the var definition; vector<TMVA::VariableInfo>fSpectatorsevent spectators [saved to weight file --> TODO ]; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; Bool_tfVariableTypesAreCountedtrue if variable types have been counted already; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~VariableTransformBase(). void SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); select the variables/targets/spectators which serve as input to the transformation. Bool_t GetInput(const TMVA::Event* event, vector<Float_t>& input, vector<Char_t>& mask, Bool_t backTransform = kFALSE) const; select the values from the event. void SetOutput",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableTransformBase.html:8117,variab,variables,8117,root/html530/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableTransformBase.html,24,"['Variab', 'variab']","['VariableInfo', 'variables']"
Modifiability,"notPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfIsActivekTRUE if handler is active, kFALSE if not active. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TSysEvtHandler. ←. TFileHandler; ←. TXSocketHandler. TSignalHandler. TStdExceptionHandler; ←. TEveManager::TExceptionHandler. TTimer; ←. TProcessEventTimer. Function documentation; void Activate(); Activate a system event handler. All handlers are by default; activated. Use this method to activate a de-activated handler. void DeActivate(); De-activate a system event handler. Use this method to temporarily; disable an event handler to avoid it from being recursively called.; Use DeActivate() / Activate() instead of Remove() / Add() for this; purpose, since the Add() will add the handler back to the end of; the list of handlers and cause it to be called again for the same,; already handled, event. void * GetSender(); { return this; }. TSysEvtHandler(); { }. virtual ~TSysEvtHandler(); { }. Bool_t IsActive() const; { return fIsActive; }. void Add(). void Remove(). Bool_t Notify(). void Activated(); { Emit(""Activated()""); }. void DeActivated(); { Emit(""DeAct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSysEvtHandler.html:9705,Inherit,Inheritance,9705,root/html602/TSysEvtHandler.html,https://root.cern,https://root.cern/root/html602/TSysEvtHandler.html,2,['Inherit'],['Inheritance']
Modifiability,"notPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TVirtualMCApplication*fApplication! User MC application; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TVirtualMCDecayer*fDecayer! External decayer; TVirtualMagField*fMagField! Magnetic field; TRandom*fRandom! Random number generator; TVirtualMCStack*fStack! Particles stack; static TVirtualMC*fgMCMonte Carlo singleton instance. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TVirtualMC. Function documentation; TVirtualMC(const char* name, const char* title, Bool_t isRootGeometrySupported = kFALSE). Standard constructor. TVirtualMC(). Default constructor. ~TVirtualMC(). Destructor. TVirtualMC * GetMC(); static: return virtual MC object. void SetStack(TVirtualMCStack* stack). Set particles stack. void SetExternalDecayer(TVirtualMCDecayer* decayer). Set external decayer. void SetRandom(TRandom* random). Set random number generator. void SetMagField(TVirtualMagField* field). Set magnetic field. TVirtualMC(const char* name, const char* title, Bool_t isRootGeometrySupported = kFALSE); Standard constructor; isRootGeometrySupported = True if implementation of TVirtualMC; supports geometry defined with TGeo. Bool_t IsRootGeometrySupported() const. methods for building/management of geometry. Info about supporting geometry defined via Root. void Material(Int_t& kmat, const char* name, Double_t a, Double_t z, Double_t dens, Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMC.html:15761,Inherit,Inheritance,15761,root/html602/TVirtualMC.html,https://root.cern,https://root.cern/root/html602/TVirtualMC.html,2,['Inherit'],['Inheritance']
Modifiability,"nots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpline3() [1/8]. TSpline3::TSpline3 ; (; ). inline . Definition at line 194 of file TSpline.h. ◆ TSpline3() [2/8]. TSpline3::TSpline3 ; (; const char * ; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:20253,inherit,inherited,20253,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,1,['inherit'],['inherited']
Modifiability,"nots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline5:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpline5() [1/8]. TSpline5::TSpline5 ; (; ). inline . Definition at line 250 of file TSpline.h. ◆ TSpline5() [2/8]. TSpline5::TSpline5 ; (; const char * ; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:20656,inherit,inherited,20656,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,1,['inherit'],['inherited']
Modifiability,"nots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpline() [1/3]. TSpline::TSpline ; (; const TSpline & ; sp). protected . Copy constructor. ; Definition at line 41 of file TSpline.cxx. ◆ TSpline() [2/3]. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline.html:17048,inherit,inherited,17048,doc/master/classTSpline.html,https://root.cern,https://root.cern/doc/master/classTSpline.html,1,['inherit'],['inherited']
Modifiability,"npar), where npar is the total number of parameters (TF1::GetNpar()),; including also the fixed parameters. When there are fixed parameters, the pointer returned from; TVirtualFitter::GetCovarianceMatrix() cannot be used.; One should use the TFitResult class, as shown in the example below. To get the matrix and values from an old fit do for example:; TFitResultPtr r = histo->Fit(func, ""S"");; ..... after performing other fits on the same function do; func->IntegralError(x1,x2,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );. Double_t IntegralFast(const TGraph *g, Double_t a, Double_t b, Double_t *params); Gauss-Legendre integral, see CalcGaussLegendreSamplingPoints. Double_t IntegralMultiple(Int_t n, const Double_t* a, const Double_t* b, Double_t epsilon, Double_t& relerr); See more general prototype below.; This interface kept for back compatibility. Double_t IntegralMultiple(Int_t n, const Double_t* a, const Double_t* b, Int_t minpts, Int_t maxpts, Double_t epsilon, Double_t& relerr, Int_t& nfnevl, Int_t& ifail); Adaptive Quadrature for Multiple Integrals over N-Dimensional; Rectangular Regions. Author(s): A.C. Genz, A.A. Malik; converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120); The new code features many changes compared to the Fortran version.; Note that this function is currently called only by TF2::Integral (n=2); and TF3::Integral (n=3). This function computes, to an attempted specified accuracy, the value of; the integral over an n-dimensional rectangular region. Input parameters:. n : Number of dimensions [2,15]; a,b : One-dimensional arrays of length >= N . On entry A[i], and B[i],; contain the lower and upper limits of integration, respectively.; minpts: Minimum number of function evaluations requested. Must not exceed maxpts.; if minpts < 1 minpts is set to 2^n +2*n*(n+1) +1; maxpts: Maximum number of function evaluations to be allowed.; maxpts >= 2^n +2*n*(n+1) +1; if maxpts<minpts, maxpts is set to 10*minpts; eps ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TF1.html:56944,Adapt,Adaptive,56944,root/html532/TF1.html,https://root.cern,https://root.cern/root/html532/TF1.html,2,['Adapt'],['Adaptive']
Modifiability,"nput shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPolynomial(); coverity[UNINIT_CTOR]. RooPolynomial(const char* name, const char* title, RooAbsReal& _x, const RooArgList& _coefList, Int_t lowestOrder = 1); Constructor. RooPolynomial(const char* name, const char* title, RooAbsReal& x). RooPolynomial(const RooPolynomial& other, const char* name = 0); Copy constructor. ~RooPolynomial(); Destructor. Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. TObject* clone(const char* newname) const; { return new RooPolynomial(*this, newname); }. » Last changed: Thu Nov 3 20:08:58 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooPolynomial.html:41018,Inherit,Inheritance,41018,root/html532/RooPolynomial.html,https://root.cern,https://root.cern/root/html532/RooPolynomial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nput shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxym0; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLognormal(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _m0, RooAbsReal& _k). RooLognormal(const RooLognormal& other, const char* name = 0). Double_t evaluate() const; ln(k)<1 would correspond to sigma < 0 in the parametrization; resulting by transforming a normal random variable in its; standard parametrization to a lognormal random variable; => treat ln(k) as -ln(k) for k<1. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooLognormal(); {}. TObject* clone(const char* newname) const; { return new RooLognormal(*this,newname); }. virtual ~RooLognormal(); { }. » Last changed: Tue Jun 2 15:31:56 2015 » Last generated: 2015-06-02 15:31; This page has b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooLognormal.html:44980,Inherit,Inheritance,44980,root/html604/RooLognormal.html,https://root.cern,https://root.cern/root/html604/RooLognormal.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nput shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxym0; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLognormal(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _m0, RooAbsReal& _k). RooLognormal(const RooLognormal& other, const char* name = 0). Double_t evaluate() const; ln(k)<1 would correspond to sigma < 0 in the parametrization; resulting by transforming a normal random variable in its; standard parametrization to a lognormal random variable; => treat ln(k) as -ln(k) for k<1. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooLognormal(); {}. TObject* clone(const char* newname) const; { return new RooLognormal(*this,newname); }. virtual ~RooLognormal(); { }. » Last changed: Tue Jun 30 14:33:51 2015 » Last generated: 2015-06-30 14:33; This page has ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooLognormal.html:44980,Inherit,Inheritance,44980,root/html602/RooLognormal.html,https://root.cern,https://root.cern/root/html602/RooLognormal.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nput values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealVar(); Default constructor. RooRealVar(const char* name, const char* title, Double_t value, const char* unit = """"); Constructor with value and unit. RooRealVar(const char* name, const char* title, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with range and unit. Initial value is center of range. RooRealVar(const char* name, const char* title, Double_t value, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with value, range and unit. RooRealVar(const RooRealVar& other, const char* name = 0); Copy Constructor. ~RooRealVar(); Destructor. Double_t getVal(const RooArgSet* nset = 0) const; Return value of variable. void setVal(Double_t value); Set value of variable to 'value'. If 'value' is outside; range of object, clip value into range. void setVal(Double_t value, const char* rangeName); Set value of variable to 'value'. If 'value' is outside; range named 'rangeName' of object, clip value into that range. RooErrorVar* errorVar() const; Return a RooAbsRealLValue representing the error associated; with this variable. The callers takes ownership of the; return object. Bool_t hasBinning(const char* name) const; Returns true if variable has a binning with 'name'. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooRealVar.html:39800,variab,variable,39800,root/html528/RooRealVar.html,https://root.cern,https://root.cern/root/html528/RooRealVar.html,2,['variab'],['variable']
Modifiability,"nput values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealVar(); Default constructor. RooRealVar(const char* name, const char* title, Double_t value, const char* unit = """"); Constructor with value and unit. RooRealVar(const char* name, const char* title, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with range and unit. Initial value is center of range. RooRealVar(const char* name, const char* title, Double_t value, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with value, range and unit. RooRealVar(const RooRealVar& other, const char* name = 0); Copy Constructor. ~RooRealVar(); Destructor. Double_t getVal(const RooArgSet* nset = 0) const; Return value of variable. void setVal(Double_t value); Set value of variable to 'value'. If 'value' is outside; range of object, clip value into range. void setVal(Double_t value, const char* rangeName); Set value of variable to 'value'. If 'value' is outside; range named 'rangeName' of object, clip value into that range. RooErrorVar* errorVar() const; Return a RooAbsRealLValue representing the error associated; with this variable. The callers takes ownership of the; return object. Bool_t hasBinning(const char* name) const; Returns true if variable has a binning with 'name'. const RooAbsBinning& getBinning(const char* name, Bool_t verbose, Bool_t createOnTheFly); Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. RooAbsBinning& getBinning(const char* name, Bool_t verbose, Bool_t createOnTheFly); Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealVar.html:39319,variab,variable,39319,root/html526/RooRealVar.html,https://root.cern,https://root.cern/root/html526/RooRealVar.html,1,['variab'],['variable']
Modifiability,"nput. RooErrorVar(const RooErrorVar& other, const char* name = 0). ~RooErrorVar(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return value, i.e. error on input variable. Bool_t hasBinning(const char* name) const; Return true if we have binning with given name. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. std::list<std::string> getBinningNames() const; Get a list of all binning names. An empty name implies the default binning.; A 0 pointer should be passed to getBinning in this case. void setBinning(const RooAbsBinning& binning, const char* name = 0); Store given binning with this variable under the given name. void setMin(const char* name, Double_t value); Set the lower bound of the range with the given name to the given value; If name is a null pointer, set the lower bound of the default range. void setMax(const char* name, Double_t value); Set the upper bound of the range with the given name to the given value; If name is a null pointer, set the upper bound of the default range. void setRange(const char* name, Double_t min, Double_t max); Set the upper and lower lower bound of the range with the given name to the given values; If name is a null pointer, set the upper and lower bounds of the default range. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from given stream. void writeToStream(ostream& os, Bool_t compact) const; Write value to stream. void syncCache(const RooArgSet* set = 0); Force the internal value cache to be up to date. inline RooErrorVar(); Constructors, ass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooErrorVar.html:41807,variab,variable,41807,root/html534/RooErrorVar.html,https://root.cern,https://root.cern/root/html534/RooErrorVar.html,6,['variab'],['variable']
Modifiability,"nput; histogram. If interpolation is used on the integral over; all histogram observables is supported. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; Return integral identified by 'code'. The actual integration; is deferred to RooDataHist::sum() which implements partial; or complete summation over the histograms contents. list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. Int_t getMaxVal(const RooArgSet& vars) const; Only handle case of maximum in all variables. Double_t maxVal(Int_t code) const. Bool_t areIdentical(const RooDataHist& dh1, const RooDataHist& dh2). Bool_t importWorkspaceHook(RooWorkspace& ws); Check if our datahist is already in the workspace. void Streamer(TBuffer& ); Stream an object of class RooHistPdf. TObject* clone(const char* newname) const; { return new RooHistPdf(*this,newname); }. RooDataHist& dataHist(); Return RooDataHist that is represented. const RooDataHist& dataHist() const; Return RooDataHist that is represented. void setInterpolationOrder(Int_t order); Set histogram interpolation order. Int_t getInterpolationOrder() const; Return histogram interpolation order. void setCdfBoundaries(Bool_t flag); Set use of special boundary conditions for c.d.f.s. Bool_t getCdfBoundaries() const; If true, special boundary conditions for c.d.f.s are used. void setUnitNorm(Bool_t flag); Declare contents to have unit normalization. Bool_t haveUnitNorm() const; Return true if contents ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistPdf.html:47008,variab,variables,47008,root/html534/RooHistPdf.html,https://root.cern,https://root.cern/root/html534/RooHistPdf.html,6,['variab'],['variables']
Modifiability,"nput; histogram. If interpolation is used on the integral over; all histogram observables is supported. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; Return integral identified by 'code'. The actual integration; is deferred to RooDataHist::sum() which implements partial; or complete summation over the histograms contents. list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. Int_t getMaxVal(const RooArgSet& vars) const; Only handle case of maximum in all variables. Double_t maxVal(Int_t code) const. Bool_t importWorkspaceHook(RooWorkspace& ws); Check if our datahist is already in the workspace. void Streamer(TBuffer& b); Stream an object of class RooHistPdf. TObject* clone(const char* newname) const; { return new RooHistPdf(*this,newname); }. RooDataHist& dataHist(); Return RooDataHist that is represented. const RooDataHist& dataHist() const; Return RooDataHist that is represented. void setInterpolationOrder(Int_t order); Set histogram interpolation order. Int_t getInterpolationOrder() const; Return histogram interpolation order. void setCdfBoundaries(Bool_t flag); Set use of special boundary conditions for c.d.f.s. Bool_t getCdfBoundaries() const; If true, special boundary conditions for c.d.f.s are used. void setUnitNorm(Bool_t flag); Declare contents to have unit normalization. Bool_t haveUnitNorm() const; Return true if contents is declared to be unit normalized. Bool_t selfNormalized() const; { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHistPdf.html:45437,variab,variables,45437,root/html532/RooHistPdf.html,https://root.cern,https://root.cern/root/html532/RooHistPdf.html,2,['variab'],['variables']
Modifiability,"nrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from ROOT::Experimental::REveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Private Member Functions;  REveTrackList (const REveTrackList &)=delete;  ; REveTrackList & operator= (const REveTrackList &)=delete;  . Additional Inherited Members;  Public Types inherited from ROOT::Experimental::REveElement; typedef std::list< REveAunt * > AuntList_t;  ; enum  EChangeBits { ;   kCBColorSelection = BIT(0); , kCBTransBBox = BIT(1); , kCBObjProps = BIT(2); , kCBVisibility = BIT(3); , ;   kCBElementAdded = BIT(4). };  ; typedef std::list< REveElement * > List_t;  ; typedef std::set< REveElement * > Set_t;  ;  Public Types inherited from ROOT::Experimental::REveProjectable; typedef std::list< REveProjected * > ProjList_t;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrackList.html:22464,inherit,inherited,22464,doc/master/classROOT_1_1Experimental_1_1REveTrackList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveTrackList.html,1,['inherit'],['inherited']
Modifiability,"ns () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Member Functions;  TProofInputHandler (const TProofInputHandler &);  ; TProofInputHandler & operator= (const TProofInputHandler &);  . Private Attributes; TProof * fProof;  ; TSocket * fSocket;  . Additional Inherited Members;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TFileHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofInputHandler.html:11913,inherit,inherited,11913,doc/master/classTProofInputHandler.html,https://root.cern,https://root.cern/doc/master/classTProofInputHandler.html,2,['inherit'],['inherited']
Modifiability,"ns ;  ; GContext_t fNormGC;  drawing graphics context ;  ; TGVFileSplitter ** fSplitHeader;  column splitters ;  ; EListViewMode fViewMode;  view mode if list view widget ;  ;  Protected Attributes inherited from TGCanvas; TGHScrollBar * fHScrollbar;  horizontal scrollbar ;  ; Int_t fScrolling;  flag which scrolling modes are allowed ;  ; TGViewPort * fVport;  viewport through which we look at contents ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListView.html:28102,inherit,inherited,28102,doc/master/classTGListView.html,https://root.cern,https://root.cern/doc/master/classTGListView.html,1,['inherit'],['inherited']
Modifiability,"ns = 0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidGetAverages(Double_t& evtmax, Double_t& mbmax, Double_t& evt, Double_t& mb) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEvtRateAvg() const; Double_tGetEvtRateAvgMax() const; virtual const char*TObject::GetIconName() const; Double_tGetMBRateAvg() const; Double_tGetMBRateAvgMax() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLatencyPlot(const char* wrks = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPerfAnalysis.html:2883,Inherit,InheritsFrom,2883,root/html534/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html534/TProofPerfAnalysis.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ns = 0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidGetAverages(Double_t& evtmax, Double_t& mbmax, Double_t& evt, Double_t& mb) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEvtRateAvg() const; Double_tGetEvtRateAvgMax() const; virtual const char*TObject::GetIconName() const; Double_tGetMBRateAvg() const; Double_tGetMBRateAvgMax() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; voidLatencyPlot(const char* wrks = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPerfAnalysis.html:2742,Inherit,InheritsFrom,2742,root/html602/TProofPerfAnalysis.html,https://root.cern,https://root.cern/root/html602/TProofPerfAnalysis.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ns MVA value for given event ;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  Variable can handle classification with 2 classes. ;  ; void Init (void);  default initialisation ;  ; virtual TClass * IsA () const;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  read back the training results from a file (stream) ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (void);  some training ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html:1648,inherit,inherited,1648,doc/master/classTMVA_1_1MethodBayesClassifier.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html,1,['inherit'],['inherited']
Modifiability,"ns and change the value of the object to the central value of a; given fit bin, regardless of the type of value.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsLValue(); static TClass*Class(); virtual Int_tgetBin(const char* rangeName = 0) const; virtual Int_tgetBin(const RooAbsBinning*) const; virtual list<string>getBinningNames() const; virtual const RooAbsBinning*getBinningPtr(const char* rangeName) const; virtual Double_tgetBinWidth(Int_t i, const char* rangeName = 0) const; virtual TClass*IsA() const; virtual Int_tnumBins(const char* rangeName = 0) const; RooAbsLValue&operator=(const RooAbsLValue&); virtual voidrandomize(const char* rangeName = 0); RooAbsLValue(); RooAbsLValue(const RooAbsLValue&); virtual voidsetBin(Int_t ibin, const char* rangeName = 0); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual Double_tvolume(const char* rangeName) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsLValue(); Constructor. ~RooAbsLValue(); Destructor. RooAbsLValue(); Constructors, cloning and assignment. void setBin(Int_t ibin, const char* rangeName = 0). Int_t getBin(const char* rangeName = 0) const. Int_t numBins(const char* rangeName = 0) const. Double_t getBinWidth(Int_t i, const char* rangeName = 0) const. Double_t volume(const char* rangeName) const. void randomize(const char* rangeName = 0). const RooAbsBinning* getBinningPtr(const char* rangeName) const. std::list<std::string> getBinningNames() const. Int_t getBin(const RooAbsBinning* ) const. » Last changed: Tue Jun 2 15:27:09 2015 » Last generated: 2015-06-02 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsLValue.html:1604,Inherit,Inheritance,1604,root/html604/RooAbsLValue.html,https://root.cern,https://root.cern/root/html604/RooAbsLValue.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ns for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fAvoidSignal;  flag for executing slots ;  ; TList * fExtraTabs;  addtional tabs in ged editor ;  ; TGedEditor * fGedEditor;  manager of this frame ;  ; Bool_t fInit;  init flag for setting signals/slots ;  ; TClass * fModelClass;  class corresponding to instantiated GedFrame ;  ; Int_t fPriority;  location in GedEditor ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:22614,inherit,inherited,22614,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,3,['inherit'],['inherited']
Modifiability,"ns inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPave.h>. Inheritance diagram for TPave:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkNameIsAction double clicking on TPave will execute action . Definition at line 35 of file TPave.h. Constructor & Destructor Documentation. ◆ TPave() [1/3]. TPave::TPave ; (; ). Pave defau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPave.html:18174,inherit,inherited,18174,doc/master/classTPave.html,https://root.cern,https://root.cern/doc/master/classTPave.html,1,['inherit'],['inherited']
Modifiability,"ns inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Private Member Functions;  TVirtualPS (const TVirtualPS &)=delete;  ; TVirtualPS & operator= (const TVirtualPS &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPS.html:19884,inherit,inherited,19884,doc/master/classTVirtualPS.html,https://root.cern,https://root.cern/doc/master/classTVirtualPS.html,1,['inherit'],['inherited']
Modifiability,"ns inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fMaximum;  Maximum value if leaf range is specified. ;  ; Float_t fMinimum;  Minimum value if leaf range is specified. ;  ; Float_t ** fPointer;  ! Address of pointer to data buffer! ;  ; Float_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafF.html:14099,inherit,inherited,14099,doc/master/classTLeafF.html,https://root.cern,https://root.cern/doc/master/classTLeafF.html,1,['inherit'],['inherited']
Modifiability,"ns inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Short_t fMaximum;  Maximum value if leaf range is specified. ;  ; Short_t fMinimum;  Minimum value if leaf range is specified. ;  ; Short_t ** fPointer;  ! Address of pointer to data buffer ;  ; Short_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafS.html:14389,inherit,inherited,14389,doc/master/classTLeafS.html,https://root.cern,https://root.cern/doc/master/classTLeafS.html,1,['inherit'],['inherited']
Modifiability,"ns inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fFOV;  . Static Private Attributes; static Double_t fgFOVDefault = 30;  ; static UInt_t fgFOVDeltaSens = 500;  ; static Double_t fgFOVMax = 120.0;  ; static Double_t fgFOVMin = 0.01;  . Additional Inherited Members;  Public Types inherited from TGLCamera; enum  EFrustumPlane { ;   kNear = 0; , kLeft = 1; , kRight = 2; , kTop = 3; , ;   kBottom = 4; , kFar = 5; , kPlanesPerFrustum = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLCamera; void UpdateCache () const;  largest box diagonal seen in OfInterest() - used when bootstrapping interest box ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLPerspectiveCamera.html:17656,inherit,inherited,17656,doc/master/classTGLPerspectiveCamera.html,https://root.cern,https://root.cern/doc/master/classTGLPerspectiveCamera.html,1,['inherit'],['inherited']
Modifiability,ns inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGFrame * fGUIFrame;  ;  Protected Attributes inherited from TEveWindow; TEveCompositeFrame * fEveFrame;  ; Bool_t fShowTitleBar;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TStri,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowFrame.html:32291,inherit,inherited,32291,doc/master/classTEveWindowFrame.html,https://root.cern,https://root.cern/doc/master/classTEveWindowFrame.html,3,['inherit'],['inherited']
Modifiability,"ns inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAlpha;  ; Int_t fBeta;  ; Int_t fBezier;  ; Int_t fBx1;  ; Int_t fBx2;  ; Int_t fBy1;  ; Int_t fBy2;  ; Int_t fBzX [4];  ; Int_t fBzY [4];  ; Int_t fChanlineColor;  ; Int_t fChanlineEnDis;  ; Int_t fChanmarkColor;  ; Int_t fChanmarkEnDis;  ; Int_t fChanmarkHeight;  ; Int_t fChanmarkStyle;  ; Int_t fChanmarkWidth;  ; Int_t fColorAlg;  ; Int_t fContWidth;  ; Int_t fDisplayMode;  ; Double_t fDxspline;  ; Double_t fDyspline;  ; Short_t * fEnvelope;  ; Short_t * fEnvelopeContour;  ; Double_t fGbezx;  ; Double_t fGbezy;  ; TH2 * fH2;  ; Double_t fKx;  ; Double_t fKy;  ; Int_t fLevels;  ; Double_t fLHweight;  ; Int_t fLine;  ; Int_t fMaximumXScreenResolution;  ; Int_t fModeGroup;  ; Double_t fMxx;  ; Double_t fMxy;  ; Double_t fMyx;  ; Double_t fMyy;  ; TColor * fNewColor;  ; Int_t fNewColorIndex;  buffers' size ;  ; Int_t fNodesx;  ; Int_t fNodesy;  ; Double_t fNuSli;  ; Int_t fPenColor;  ; Int_t fPenDash;  ; Int_t fPenWidth;  ; Double_t fRainbow1Step;  ; Double_t fRainbow2Step;  ; Double_t fRainbow3Step;  ; Int_t fShading;  ; Int_t fShadow;  ; Double_t fTxx;  ; Double_t fTxy;  ; Double_t fTyx;  ; Double_t fTyy;  ; Double_t fTyz;  ; Int_t fViewAngle;  ; Double_t fVx;  ; Double_t fVy;  ; Int_t fXe;  ; Int_t fXlight;  ; Int_t fXmax;  ; Int_t fXmin;  ; Int_t fXs;  ; Int_t fXt;  ; Int_t fYe;  ; Int_t fYlight;  ; Int_t fYmax;  ; Int_t fYmin;  ; Int_t fYs;  ; Int_t fYt;  ; Double_t fZ;  ; Double_t fZeq;  ; Int_t fZlight;  ; Double_t fZmax;  ; Double_t fZmin;  ; Double_t fZPresetValue;  ; Int_t fZscale;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TSpectrum2Painter (const TSpectrum2Painter &);  ; TSpectrum2Painter & operator= (const TSpectrum2Painter &);  . Additional Inherited Members;  Protected Type",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Painter.html:20287,inherit,inherited,20287,doc/master/classTSpectrum2Painter.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Painter.html,1,['inherit'],['inherited']
Modifiability,"ns inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; double _bufFrac;  ; BufStrat _bufStrat;  ; RooSetProxy _cacheObs;  Non-convolution observables that are also cached. ;  ; RooSetProxy _params;  Effective parameters of this p.d.f. ;  ; RooRealProxy _pdf1;  First input p.d.f. ;  ; RooRealProxy _pdf2;  Second input p.d.f. ;  ; double _shift1;  ; double _shift2;  ; RooRealProxy _x;  Convolution observable. ;  ; RooRealProxy _xprime;  Input function representing value of convolution observable. ;  ;  Protected Attributes inherited from RooAbsCachedPdf; std::map< Int_t, AnaIntConfig > _anaIntMap;  ! Map for analytical integration codes ;  ; RooAICRegistry _anaReg;  ! Registry for analytical integration codes ;  ; RooObjCacheManager _cacheMgr;  ; Int_t _ipOrder;  The cache manager. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:79656,inherit,inherited,79656,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['inherit'],['inherited']
Modifiability,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <RooFit/xRooFit/xRooNode.h>. Inheritance diagram for ROOT::Experimental::XRooFit::xRooNode::InteractiveObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * ROOT::Experimental::XRooFit::xRooNode::InteractiveObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * ROOT::Experimental::XRooFit::xRooNode::InteractiveObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t ROOT::Experimental::XRooFit::xRooNode::InteractiveObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 468 of file xRooNode.h. ◆ DeclFileName(). static const char * ROOT::Experimenta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html:5051,inherit,inherited,5051,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,2,['inherit'],['inherited']
Modifiability,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TEveManager.h>. Inheritance diagram for TEveManager::TExceptionHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TExceptionHandler(). TEveManager::TExceptionHandler::TExceptionHandler ; (; ). inline . Definition at line 74 of file TEveManager.h. ◆ ~TExceptionHandler(). TEveManager::TExceptionHandler::~TExceptionHandler ; (; ). inlineoverride . Definition at line 75 of file TEveManager.h. Member Function Documentation. ◆ Class(). static TClass * TEveManager::TExceptionHandler::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveManager::TExceptionHandler::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveManager_1_1TExceptionHandler.html:15741,inherit,inherited,15741,doc/master/classTEveManager_1_1TExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTEveManager_1_1TExceptionHandler.html,2,['inherit'],['inherited']
Modifiability,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TMonitor.h>. Inheritance diagram for TMonitor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EInterest. enum TMonitor::EInterest. EnumeratorkRead ; kWrite . Definition at line 54 of file TMonitor.h. Constructor & Destructor Documentation. ◆ TMonitor() [1/2]. TMonitor::TMonitor ; (; Bool_t ; mainloop = kTRUE). Create a monitor object. ; If mainloop is true the monitoring will be done in the main event loop. ; Definition at line 109 of file TMonitor.cxx. ◆ TMonitor() [2/2]. TMonitor::TMonitor ; (; const TMonitor & ; m). Copy constructor. ; Definition at line 123 of file TMonitor.cxx. ◆ ~TMonitor(). TMonitor::~TMonitor ; (; ). virtual . Cleanup the monitor object. Does not delete sockets being monitored. ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMonitor.html:16142,inherit,inherited,16142,doc/master/classTMonitor.html,https://root.cern,https://root.cern/doc/master/classTMonitor.html,2,['inherit'],['inherited']
Modifiability,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSysEvtHandler.h>. Inheritance diagram for TStdExceptionHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatus. enum TStdExceptionHandler::EStatus. EnumeratorkSEProceed ; kSEHandled ; kSEAbort . Definition at line 175 of file TSysEvtHandler.h. Constructor & Destructor Documentation. ◆ TStdExceptionHandler(). TStdExceptionHandler::TStdExceptionHandler ; (; ). Handle standard C++ exceptions intercepted by the TSystem::Run(). ; Virtual method EStatus Handle(std::exception& exc) is called on the collection of handlers registered to TSystem. The return value of each handler influences the continuation of handling procedure:; kSEProceed - Proceed with passing of the exception to other handlers, the exception has no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStdExceptionHandler.html:15060,inherit,inherited,15060,doc/master/classTStdExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTStdExceptionHandler.html,2,['inherit'],['inherited']
Modifiability,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSysEvtHandler.h>. Inheritance diagram for TSysEvtHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSysEvtHandler(). TSysEvtHandler::TSysEvtHandler ; (; ). inline . Definition at line 36 of file TSysEvtHandler.h. ◆ ~TSysEvtHandler(). virtual TSysEvtHandler::~TSysEvtHandler ; (; ). inlinevirtual . Definition at line 37 of file TSysEvtHandler.h. Member Function Documentation. ◆ Activate(). void TSysEvtHandler::Activate ; (; ). Activate a system event handler. ; All handlers are by default activated. Use this method to activate a de-activated handler. ; Definition at line 32 of file TSysEvtHandler.cxx. ◆ Activated(). virtual void TSysEvtHandler::Activated ; (; ). inlinevirtual . Definition at line 47 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSysEvtHandler.html:14526,inherit,inherited,14526,doc/master/classTSysEvtHandler.html,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html,2,['inherit'],['inherited']
Modifiability,"ns inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TVirtualProofPlayer.h>. Inheritance diagram for TVirtualProofPlayer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EExitStatus. enum TVirtualProofPlayer::EExitStatus. EnumeratorkFinished ; kStopped ; kAborted . Definition at line 48 of file TVirtualProofPlayer.h. ◆ EStatusBits. enum TVirtualProofPlayer::EStatusBits. EnumeratorkIsSubmerger . Definition at line 46 of file TVirtualProofPlayer.h. Constructor & Destructor Documentation. ◆ TVirtualProofPlayer(). TVirtualProofPlayer::TVirtualProofPlayer ; (; ). inline . Definition at line 50 of file TVirtualProofPlayer.h. ◆ ~TVirtualProofPlayer(). TVirtualProofPlayer::~TVirtualProofPlayer ; (; ). inlineoverride . Definition at line 51 of file TVirtualProofPlayer.h. Member F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualProofPlayer.html:18087,inherit,inherited,18087,doc/master/classTVirtualProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualProofPlayer.html,2,['inherit'],['inherited']
Modifiability,"ns internal number of output (truth) matrix rows ;  ; Int_t GetNy (void) const;  returns the number of measurement bins ;  ; virtual TString GetOutputBinName (Int_t iBinX) const;  Get bin name of an outpt bin. ;  ; Double_t GetRhoIFromMatrix (TH1 *rhoi, const TMatrixDSparse *eOrig, const Int_t *binMap, TH2 *invEmat) const;  ; Int_t GetRowFromBin (int ix) const;  converts truth histogram bin number to matrix row ;  ; const TMatrixDSparse * GetVxx (void) const;  covariance matrix of the result ;  ; const TMatrixDSparse * GetVxxInv (void) const;  inverse of covariance matrix of the result ;  ; const TMatrixDSparse * GetVyyInv (void) const;  inverse of covariance matrix of the data y ;  ; const TMatrixD * GetX (void) const;  vector of the unfolding result ;  ; TMatrixDSparse * InvertMSparseSymmPos (const TMatrixDSparse *A, Int_t *rank) const;  get the inverse or pseudo-inverse of a positive, sparse matrix ;  ; TMatrixDSparse * MultiplyMSparseM (const TMatrixDSparse *a, const TMatrixD *b) const;  multiply sparse matrix and a non-sparse matrix ;  ; TMatrixDSparse * MultiplyMSparseMSparse (const TMatrixDSparse *a, const TMatrixDSparse *b) const;  multiply two sparse matrices ;  ; TMatrixDSparse * MultiplyMSparseMSparseTranspVector (const TMatrixDSparse *m1, const TMatrixDSparse *m2, const TMatrixTBase< Double_t > *v) const;  calculate a sparse matrix product M1*V*M2T where the diagonal matrix V is given by a vector ;  ; TMatrixDSparse * MultiplyMSparseTranspMSparse (const TMatrixDSparse *a, const TMatrixDSparse *b) const;  multiply a transposed Sparse matrix with another Sparse matrix ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD * fAoutside;  Input: underflow/overflow bins. ;  ; TMap * fBgrErrScaleIn;  Input: background sources correlated error. ;  ; TMap * fBgrErrUncorrInSq;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldSys.html:27582,inherit,inherited,27582,doc/master/classTUnfoldSys.html,https://root.cern,https://root.cern/doc/master/classTUnfoldSys.html,1,['inherit'],['inherited']
Modifiability,"ns internal number of output (truth) matrix rows ;  ; Int_t GetNy (void) const;  returns the number of measurement bins ;  ; virtual TString GetOutputBinName (Int_t iBinX) const;  Get bin name of an outpt bin. ;  ; Double_t GetRhoIFromMatrix (TH1 *rhoi, const TMatrixDSparse *eOrig, const Int_t *binMap, TH2 *invEmat) const;  ; Int_t GetRowFromBin (int ix) const;  converts truth histogram bin number to matrix row ;  ; const TMatrixDSparse * GetVxx (void) const;  covariance matrix of the result ;  ; const TMatrixDSparse * GetVxxInv (void) const;  inverse of covariance matrix of the result ;  ; const TMatrixDSparse * GetVyyInv (void) const;  inverse of covariance matrix of the data y ;  ; const TMatrixD * GetX (void) const;  vector of the unfolding result ;  ; TMatrixDSparse * InvertMSparseSymmPos (const TMatrixDSparse *A, Int_t *rank) const;  get the inverse or pseudo-inverse of a positive, sparse matrix ;  ; TMatrixDSparse * MultiplyMSparseM (const TMatrixDSparse *a, const TMatrixD *b) const;  multiply sparse matrix and a non-sparse matrix ;  ; TMatrixDSparse * MultiplyMSparseMSparse (const TMatrixDSparse *a, const TMatrixDSparse *b) const;  multiply two sparse matrices ;  ; TMatrixDSparse * MultiplyMSparseMSparseTranspVector (const TMatrixDSparse *m1, const TMatrixDSparse *m2, const TMatrixTBase< Double_t > *v) const;  calculate a sparse matrix product M1*V*M2T where the diagonal matrix V is given by a vector ;  ; TMatrixDSparse * MultiplyMSparseTranspMSparse (const TMatrixDSparse *a, const TMatrixDSparse *b) const;  multiply a transposed Sparse matrix with another Sparse matrix ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void DeleteMatrix (TMatrixD **m);  delete matrix and invalidate pointer ;  ; static void DeleteMatrix (TMatrixDSparse **m);  delete sparse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfold.html:20806,inherit,inherited,20806,doc/master/classTUnfold.html,https://root.cern,https://root.cern/doc/master/classTUnfold.html,1,['inherit'],['inherited']
Modifiability,"ns passed in the auxSplitCats RooArgSet can be used regularly; in the splitting configuration. They should not be listed in splitCats,; but must be able to be expressed completely in terms of the splitCats that ; are listed.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . END_HTMLEND_HTML. Function Members (Methods); public:. RooSimPdfBuilder(const RooArgSet& pdfProtoList); virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:12973,config,configA,12973,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,3,['config'],['configA']
Modifiability,"ns passed in the auxSplitCats RooArgSet can be used regularly; in the splitting configuration. They should not be listed in splitCats,; but must be able to be expressed completely in terms of the splitCats that ; are listed.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . Function Members (Methods); public:. RooSimPdfBuilder(const RooArgSet& pdfProtoList); virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimPdfBuilder.html:12954,config,configA,12954,root/html528/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html528/RooSimPdfBuilder.html,18,['config'],['configA']
Modifiability,"ns passed in the auxSplitCats RooArgSet can be used regularly; in the splitting configuration. They should not be listed in splitCats,; but must be able to be expressed completely in terms of the splitCats that ; are listed.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype PDFs ; pdfA(x;p,q) and pdfB(x;p,r) that have a common parameter p. ; We want to build a RooSimultaneous for both pdfA and B, ; which involves a split of parameter p and we would like to build the; simultaneous pdfs simA and simB such that still share their (now split) parameters; p_XXX. This is accomplished by letting a single instance of RooSimPdfBuilder handle; the builds of both pdfA and pdfB, as illustrated in this example:; . RooSimPdfBuilder builder(RooArgSet(pdfA,pdfB)) ;; RooArgSet* configA = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfA"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simA = builder.buildPdf(*configA,&D) ;; RooArgSet* configB = builder.createProtoBuildConfig() ;; (*configA)[""physModels""] = ""pdfB"" ; ; (*configA)[""splitCats""] = ""C"" ; ; (*configA)[""pdf""] = ""C : p"" ; ; RooSimultaneous* simB = builder.buildPdf(*configB,&D) ;; ; Ownership of constructed PDFs. The RooSimPdfBuilder instance owns all the objects it creates, including the top-level; RooSimultaneous returned by buildPdf(). Therefore the builder instance should ; exist as long as the constructed PDFs needs to exist.; . Function Members (Methods); public:. virtual~RooSimPdfBuilder(); voidTObject::AbstractMethod(const char* method) const; voidaddSpecializations(const RooArgSet& specSet); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); RooSimultaneous*buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); RooSi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimPdfBuilder.html:12954,config,configA,12954,root/html602/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html602/RooSimPdfBuilder.html,12,['config'],['configA']
Modifiability,ns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fBoundingBox;  True when the SVG header is printed. ;  ; Bool_t fRange;  True when a range has been defined. ;  ; Int_t fType;  Workstation type used to know if the SVG is open. ;  ; Float_t fXsize;  Page size along X. ;  ; Float_t fYsize;  Page size along Y. ;  ; Double_t fYsizeSVG;  Page's Y size in SVG units. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Static Protected Attributes; static Int_t fgLineCap = 0;  Appearance of line caps. ;  ; static Int_t fgLineJoin = 0;  Appearance of joining lines. ;  . Additional In,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSVG.html:23393,inherit,inherited,23393,doc/master/classTSVG.html,https://root.cern,https://root.cern/doc/master/classTSVG.html,3,['inherit'],['inherited']
Modifiability,"ns to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; void Init ();  Initialize the TCanvas members. Called by all constructors. ;  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInspectCanvas.html:60586,inherit,inherited,60586,doc/master/classTInspectCanvas.html,https://root.cern,https://root.cern/doc/master/classTInspectCanvas.html,1,['inherit'],['inherited']
Modifiability,"ns |; Private Attributes |; List of all members ; TMVA::MethodFisher Class ReferenceTMVA. ; Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis) ; In the method of Fisher discriminants event selection is performed in a transformed variable space with zero linear correlations, by distinguishing the mean values of the signal and background distributions.; The linear discriminant analysis determines an axis in the (correlated) hyperspace of the input variables such that, when projecting the output classes (signal and background) upon this axis, they are pushed as far as possible away from each other, while events of a same class are confined in a close vicinity. The linearity property of this method is reflected in the metric with which ""far apart"" and ""close vicinity"" are determined: the covariance matrix of the discriminant variable space.; The classification of the events in signal and background classes relies on the following characteristics (only): overall sample means, \( x_i \), for each input variable, \( i \), class-specific sample means, \( x_{S(B),i}\), and total covariance matrix \( T_{ij} \). The covariance matrix can be decomposed into the sum of a within ( \( W_{ij} \)) and a between-class ( \( B_{ij} \)) class matrix. They describe the dispersion of events relative to the means of their own class (within-class matrix), and relative to the overall sample means (between-class matrix). The Fisher coefficients, \( F_i \), are then given by. \[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \]. where in TMVA is set \( N_S = N_B \), so that the factor in front of the sum simplifies to \( \frac{1}{2}\). The Fisher discriminant then reads. \[; X_{Fi} = F_0 + \sum_{i=1}^{N_{SB}} F_i X_i; \]. The offset \( F_0 \) centers the sample mean of \( x_{Fi} \) at zero. Instead of using the within-class matrix, the Mahalanobis variant determines the Fisher coefficients as follows:. \[; F_i = \frac{\sq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:1306,variab,variable,1306,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['variab'],['variable']
Modifiability,"ns() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetParseCode() const; const char*GetParseCodeMessage(Int_t parseCode) const; Bool_tGetReplaceEntities() const; Bool_tGetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValidate() const; const char*GetValidateError() const; const char*GetValidateWarning() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLParser.html:5522,Inherit,InheritsFrom,5522,root/html532/TXMLParser.html,https://root.cern,https://root.cern/root/html532/TXMLParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ns() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetParseCode() const; const char*GetParseCodeMessage(Int_t parseCode) const; Bool_tGetReplaceEntities() const; Bool_tGetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValidate() const; const char*GetValidateError() const; const char*GetValidateWarning() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:5547,Inherit,InheritsFrom,5547,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ns(Int_t evtNum = 0). void BuildSplinePDF(); build the PDF from the original histograms. void BuildKDEPDF(); creates high-binned reference histogram to be used instead of the; PDF for speed reasons. void SmoothHistogram(). void FillHistToGraph(); Simple conversion. void FillSplineToHist(); creates high-binned reference histogram to be used instead of the; PDF for speed reasons. void CheckHist() const; sanity check: compare PDF with original histogram. void ValidatePDF(TH1* original = 0) const; comparison of original histogram with reference PDF. Double_t GetIntegral() const; computes normalisation. Double_t IGetVal(Double_t* , Double_t* ); static external auxiliary function (integrand). Double_t GetIntegral(Double_t xmin, Double_t xmax); computes PDF integral within given ranges. Double_t GetVal(Double_t x) const; returns value PDF(x). void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; PDFInterpol[ivar] <string> Spline0, Spline1, Spline2 <default>, Spline3, Spline5, KDE used to interpolate reference histograms; if no variable index is given, it is valid for ALL the variables. NSmooth <int> how often the input histos are smoothed; MinNSmooth <int> min number of smoothing iterations, for bins with most data; MaxNSmooth <int> max number of smoothing iterations, for bins with least data; NAvEvtPerBin <int> minimum average number of events per PDF bin; TransformOutput <bool> transform (often strongly peaked) likelihood output through sigmoid inversion; fKDEtype <KernelType> type of the Kernel to use (1 is Gaussian); fKDEiter <KerneIter> number of iterations (1 --> ""static KDE"", 2 --> ""adaptive KDE""); fBorderMethod <KernelBorder> the method to take care about ""border"" effects (1=no treatment , 2=kernel renormalization, 3=sample mirroring). void ProcessOptions(). void AddXMLTo(void* parent); XML file writing. void ReadXML(void* pdfnode); XML file reading. TMVA::PDF* ThisPDF( void ); return global ""this"" pointer o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDF.html:11363,variab,variable,11363,root/html528/TMVA__PDF.html,https://root.cern,https://root.cern/root/html528/TMVA__PDF.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ns(Int_t n1, Int_t n2, Int_t n3, Bool_t optim = kTRUE); virtual voidSetTickLength(Float_t length = 0.03)MENU ; virtual voidSetTickSize(Float_t size = 0.03); virtual voidSetTitleColor(Color_t color = 1)MENU ; virtual voidSetTitleFont(Style_t font = 62)MENU ; virtual voidSetTitleOffset(Float_t offset = 1)MENU ; virtual voidSetTitleSize(Float_t size = 0.04)MENU ; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Color_tfAxisColorcolor of the line axis; Color_tfLabelColorcolor of labels; Style_tfLabelFontfont for labels; Float_tfLabelOffsetoffset of labels; Float_tfLabelSizesize of labels; Int_tfNdivisionsNumber of divisions(10000*n3 + 100*n2 + n1); Float_tfTickLengthlength of tick marks; Color_tfTitleColorcolor of axis title; Style_tfTitleFontfont for axis title; Float_tfTitleOffsetoffset of axis title; Float_tfTitleSizesize of axis title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttAxis(); Constructor. ~TAttAxis(); Destructor. void Copy(TAttAxis& attaxis) const; Copy of the object. void ResetAttAxis(Option_t* option = """"); Reset axis attributes. void SaveAttributes(ostream& out, const char* name, const char* subname); Save axis attributes as C++ statement(s) on output stream out. void SetAxisColor(Color_t color = 1, Float_t alpha = 1.); Set color of the line axis and tick marks. void SetLabelColor(Color_t color = 1, Float_t alpha = 1.); Set color of labels. void SetLabelFont(Style_t font = 62); Set labels' font. void SetLabelOffset(Float_t offset = 0.005); Set distance between the axis and the labels; The distance is expressed in per cent of the pad width. void SetLabelSize(Float_t size = 0.04); Set size of axis labels; The size is expressed in per cent of the pad width. void SetNdivisions(Int_t n = 510, Bool_t optim = kTRUE); Set the number of divisions for this axis. if optim = kTRUE (default), the number o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttAxis.html:2433,Inherit,Inheritance,2433,root/html534/TAttAxis.html,https://root.cern,https://root.cern/root/html534/TAttAxis.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ns(const ROOT::Math::IOptions& opt); voidSetIntegrator(const char* name); voidSetNPoints(unsigned int n); voidROOT::Math::BaseIntegratorOptions::SetRelTolerance(double tol); voidROOT::Math::BaseIntegratorOptions::SetWKSize(unsigned int size); unsigned intROOT::Math::BaseIntegratorOptions::WKSize() const. protected:. ROOT::Math::BaseIntegratorOptionsROOT::Math::BaseIntegratorOptions::BaseIntegratorOptions(); voidROOT::Math::BaseIntegratorOptions::ClearExtra(). Data Members; protected:. doubleROOT::Math::BaseIntegratorOptions::fAbsToleranceabsolute tolerance; ROOT::Math::IOptions*ROOT::Math::BaseIntegratorOptions::fExtraOptionsextra options; intROOT::Math::BaseIntegratorOptions::fIntegTypeIntegrator type (value converted from enum); unsigned intROOT::Math::BaseIntegratorOptions::fNCalls(max) funxtion calls; doubleROOT::Math::BaseIntegratorOptions::fRelTolerancerelative tolerance; unsigned intROOT::Math::BaseIntegratorOptions::fWKSizeworkspace size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseIntegratorOptions & operator=(const ROOT::Math::IntegratorOneDimOptions& rhs); assignment operators. std::string Integrator() const; name of 1D integrator. IntegratorOneDimOptions(IOptions * extraOpts = 0); constructor using the default options; can pass a pointer to extra options (N.B. pointer will be managed by the class). virtual ~IntegratorOneDimOptions(); {}. IntegratorOneDimOptions(const IntegratorOneDimOptions & rhs); copy constructor. {}. void SetNPoints(unsigned int n); specific method for one-dim; set number of points rule; values of 1,2,3,4,5,6 corresponds to 15,21,31,41,51,61 and they are used in GSL adaptive; values > 6 corresponds to the actual points and they are used by teh GaussLegendre integrator. { fNCalls = n; }. unsigned int NPoints() const; maximum number of function calls. { return fNCalls; }. IntegrationOneDim::Type IntegratorType() const; type of the integrator (return the enumeration type). { return (Integ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__IntegratorOneDimOptions.html:3195,Inherit,Inheritance,3195,root/html602/ROOT__Math__IntegratorOneDimOptions.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__IntegratorOneDimOptions.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ns) override;  Redefine x axis parameters. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow. ;  ; void SetBuffer (Int_t buffersize, Option_t *option="""") override;  Set the buffer size in units of 8 bytes (double). ;  ; virtual void SetErrorOption (Option_t *option="""");  Set option to compute profile errors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TProfile. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 (Bool_t flag=kTRUE) override;  Create/delete structure to store sum of squares of weights per bin. ;  ;  Public Member Functions inherited from TH1D;  TH1D ();  Constructor. ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const TH1D &h1d);  Constructor. ;  ;  TH1D (const TVectorD &v);  Create a histogram from a TVectorD by default the histogram name is ""TVectorD"" and title = """". ;  ;  ~TH1D () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w Passing an out-of-range bin leads to undefined behavior. ;  ; TH1D & operator= (const TH1D &h1);  Operator =. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:10052,variab,variable,10052,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,2,['variab'],['variable']
Modifiability,"ns. ;  ; void GetRhoItotal (TH1 *rhoi, const Int_t *binMap=nullptr, TH2 *invEmat=nullptr);  Get global correlatiocn coefficients, summing up all contributions. ;  ; TSortedList * GetSysSources (void) const;  Get a new list of all systematic uuncertainty sources. ;  ; TClass * IsA () const override;  ; Int_t SetInput (const TH1 *hist_y, Double_t scaleBias=0.0, Double_t oneOverZeroError=0.0, const TH2 *hist_vyy=nullptr, const TH2 *hist_vyy_inv=nullptr) override;  Define input data for subsequent calls to DoUnfold(tau) ;  ; void SetTauError (Double_t delta_tau);  Specify an uncertainty on tau. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubtractBackground (const TH1 *hist_bgr, const char *name, Double_t scale=1.0, Double_t scale_error=0.0);  Specify a source of background. ;  ;  Public Member Functions inherited from TUnfold;  TUnfold (const TH2 *hist_A, EHistMap histmap, ERegMode regmode=kRegModeSize, EConstraint constraint=kEConstraintArea);  Set up response matrix and regularisation scheme. ;  ;  TUnfold (void);  only for use by root streamer or derived classes ;  ;  ~TUnfold (void) override;  ; virtual Double_t DoUnfold (Double_t tau);  perform the unfolding for a given regularisation parameter tau ;  ; Double_t DoUnfold (Double_t tau, const TH1 *hist_y, Double_t scaleBias=0.0);  perform the unfolding for a given input and regularisation ;  ; void GetBias (TH1 *bias, const Int_t *binMap=nullptr) const;  get bias vector including bias scale ;  ; Double_t GetChi2A (void) const;  get χ2A contribution determined in recent unfolding ;  ; Double_t GetChi2L (void) const;  get χ2L contribution determined in recent unfolding ;  ; double GetDF (void) const;  return the effecive number of degrees of freedom See e.g. ;  ; void GetDXDY (TH2 *dxdy) const;  get matrix connecting input and output changes ;  ; void GetEmatrix (TH2 *ematrix, const Int_t *binMap=nullptr) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:17570,inherit,inherited,17570,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,2,['inherit'],['inherited']
Modifiability,"ns:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::FeldmanCousins. class RooStats::FeldmanCousins: public RooStats::IntervalCalculator, public TNamed. The FeldmanCousins class (like the Feldman-Cousins technique) is essentially a specific configuration; of the more general NeymanConstruction. It is a concrete implementation of the IntervalCalculator interface that, which uses the NeymanConstruction in a particular way. As the name suggests, it returns a ConfidenceInterval. In particular, it produces a RooStats::PointSetInterval, which is a concrete implementation of the ConfInterval interface. . The Neyman Construction is not a uniquely defined statistical technique, it requires that one specify an ordering rule ; or ordering principle, which is usually incoded by choosing a specific test statistic and limits of integration ; (corresponding to upper/lower/central limits). As a result, this class must be configured with the corresponding; information before it can produce an interval. . In the case of the Feldman-Cousins approach, the ordering principle is the likelihood ratio -- motivated; by the Neyman-Pearson lemma. When nuisance parameters are involved, the profile likelihood ratio is the natural generalization. One may either choose to perform the construction over the full space of the nuisance parameters, or restrict the nusiance parameters to their conditional MLE (eg. profiled values). . Function Members (Methods); public:. virtual~FeldmanCousins(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Double_tConfidenceLevel() const; virtual voidTNamed::Copy(TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__FeldmanCousins.html:1141,config,configured,1141,root/html526/RooStats__FeldmanCousins.html,https://root.cern,https://root.cern/root/html526/RooStats__FeldmanCousins.html,1,['config'],['configured']
Modifiability,"ns; (width and height), positions (x and y), insets and rectangles.; They are trivial and their members are public. Function Members (Methods); public:. TGRectangle(); TGRectangle(const TGRectangle& r); TGRectangle(const TGPosition& p, const TGDimension& d); TGRectangle(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh); virtual~TGRectangle(); Int_tArea() const; static TClass*Class(); Bool_tContains(const TGPosition& p) const; Bool_tContains(Int_t px, Int_t py) const; voidEmpty(); Bool_tIntersects(const TGRectangle& r) const; virtual TClass*IsA() const; Bool_tIsEmpty() const; TGPositionLeftTop() const; voidMerge(const TGRectangle& r); TGRectangle&operator=(const TGRectangle&); TGPositionRightBottom() const; virtual voidShowMembers(TMemberInspector&); TGDimensionSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. UInt_tfHheight; UInt_tfWwidth; Int_tfXx position; Int_tfYy position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Merge(const TGRectangle& r); Merge parameters. TGRectangle(); constructors. { Empty(); }. TGRectangle(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh); { }. TGRectangle(const TGPosition& p, const TGDimension& d); { }. TGRectangle(const TGRectangle& r); { }. virtual ~TGRectangle(); { }. Bool_t Contains(Int_t px, Int_t py) const; methods. Bool_t Contains(const TGPosition& p) const. Bool_t Intersects(const TGRectangle& r) const. Int_t Area() const; { return (fW * fH); }. TGDimension Size() const; { return TGDimension(fW, fH); }. TGPosition LeftTop() const; { return TGPosition(fX, fY); }. TGPosition RightBottom() const; { return TGPosition(fX + (Int_t) fW - 1, fY + (Int_t) fH - 1); }. void Empty(); { fX = fY = 0; fW = fH = 0; }. Bool_t IsEmpty() const; { return ((fW == 0) && (fH == 0)); }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGRectangle.html:1372,Inherit,Inheritance,1372,root/html534/TGRectangle.html,https://root.cern,https://root.cern/root/html534/TGRectangle.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ns; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooProdPdf PDF representing a product of PDFs; RooProduct Product of RooAbsReal and/or RooAbsCategory terms; RooProfileLL Real-valued function representing profile likelihood of external (likelihood) function; RooProjectedPdf Operator p.d.f calculating projection of another p.d.f; RooPullVar Calculation of pull of measurement w.r.t a truth value; RooQuasiRandomGenerator Q",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:38021,config,configuration,38021,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,4,"['config', 'parameteriz', 'portab']","['configuration', 'parameterized', 'portable']"
Modifiability,"ns; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; Int_tfIndexReconstruction index; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tfLabelSimulation label; Int_tfLastPMIdx!Last path-mark index tried in track-propagation.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tfLockPointsLock points that are currently in - do nothing in MakeTrack().; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; TEveVectorDfPStarting momentum; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; TEveVectorDfPEndMomentum at the last point of extrapolation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; TEveTrack::vPathMark_tfPathMarksTEveVector of known points along the track; Int_tfPdgPDG code; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*fPropagatorPointer to shared render-st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrack.html:28717,variab,variable,28717,root/html602/TEveTrack.html,https://root.cern,https://root.cern/root/html602/TEveTrack.html,4,['variab'],['variable']
Modifiability,"ns; static VO dummyFunction (VI1, VI2);  . Private Attributes; func_t _ptr;  . Static Private Attributes; static RooCFunction2Map< VO, VI1, VI2 > * _fmap = nullptr;  Pointer to embedded function. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooCFunction2Binding.h>. Inheritance diagram for RooCFunction2Ref< VO, VI1, VI2 >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ func_t. template<class VO , class VI1 , class VI2 > . typedef VO(* RooCFunction2Ref< VO, VI1, VI2 >::func_t) (VI1, VI2). private . Definition at line 147 of file RooCFunction2Binding.h. Constructor & Destructor Documentation. ◆ RooCFunction2Ref(). template<class VO , class VI1 , class VI2 > . RooCFunction2Ref< VO, VI1, VI2 >::RooCFunction2Ref ; (; VO(*)(VI1, VI2) ; ptr = nullptr). inline . Definition at line 100 of file RooCFunction2Binding.h. Member Function Documentation. ◆ argName(). template<class VO , class VI1 , class VI2 > . const char * RooCFunction2Ref< VO, VI1, VI2 >::argName ; (; Int_t ; iarg)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction2Ref.html:10192,inherit,inherited,10192,doc/master/classRooCFunction2Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction2Ref.html,2,['inherit'],['inherited']
Modifiability,"ns;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSchemaRule.h>. Inheritance diagram for ROOT::TSchemaRule::TSources:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSources(). ROOT::TSchemaRule::TSources::TSources ; (; const char * ; name = nullptr, . const char * ; title = nullptr, . const char * ; dims = nullptr . ). inline . Definition at line 27 of file TSchemaRule.h. Member Function Documentation. ◆ Class(). static TClass * ROOT::TSchemaRule::TSources::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * ROOT::TSchemaRule::TSources::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t ROOT::TSchemaRule::TSources::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 30 of file TSchemaRule.h. ◆ DeclFileName(). static const char * ROOT::TSche",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TSchemaRule_1_1TSources.html:11028,inherit,inherited,11028,doc/master/classROOT_1_1TSchemaRule_1_1TSources.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TSchemaRule_1_1TSources.html,1,['inherit'],['inherited']
Modifiability,"ns;  HuberLossFunctionBDT ();  ;  HuberLossFunctionBDT (Double_t quantile);  ;  ~HuberLossFunctionBDT ();  ; Double_t Fit (std::vector< LossFunctionEventInfo > &evs);  huber BDT, determine the fit value for the terminal node based upon the events in the terminal node ;  ; void Init (std::map< const TMVA::Event *, LossFunctionEventInfo > &evinfomap, std::vector< double > &boostWeights);  huber BDT, initialize the targets and prepare for the regression ;  ; void SetTargets (std::vector< const TMVA::Event * > &evs, std::map< const TMVA::Event *, LossFunctionEventInfo > &evinfomap);  huber BDT, set the targets for a collection of events ;  ; Double_t Target (LossFunctionEventInfo &e);  huber BDT, set the target for a single event ;  ;  Public Member Functions inherited from TMVA::LossFunctionBDT;  LossFunctionBDT ();  ; virtual ~LossFunctionBDT ();  ;  Public Member Functions inherited from TMVA::LossFunction;  LossFunction ();  ; virtual ~LossFunction ();  ;  Public Member Functions inherited from TMVA::HuberLossFunction;  HuberLossFunction ();  huber constructor ;  ;  HuberLossFunction (Double_t quantile);  ;  ~HuberLossFunction ();  huber destructor ;  ; Double_t CalculateLoss (LossFunctionEventInfo &e);  huber, determine the loss for a single event ;  ; Double_t CalculateMeanLoss (std::vector< LossFunctionEventInfo > &evs);  huber, determine the mean loss for a collection of events ;  ; Double_t CalculateNetLoss (std::vector< LossFunctionEventInfo > &evs);  huber, determine the net loss for a collection of events ;  ; Double_t CalculateQuantile (std::vector< LossFunctionEventInfo > &evs, Double_t whichQuantile, Double_t sumOfWeights, bool abs);  huber, determine the quantile for a given input ;  ; Double_t CalculateSumOfWeights (const std::vector< LossFunctionEventInfo > &evs);  huber, calculate the sum of weights for the events in the vector ;  ; Int_t Id ();  ; void Init (std::vector< LossFunctionEventInfo > &evs);  figure out the residual that determines the sepa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1HuberLossFunctionBDT.html:1345,inherit,inherited,1345,doc/master/classTMVA_1_1HuberLossFunctionBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1HuberLossFunctionBDT.html,1,['inherit'],['inherited']
Modifiability,"ns;  TGDragWindow (const TGWindow *p, Pixmap_t pic, Pixmap_t mask, UInt_t options=kChildFrame, Pixel_t back=GetWhitePixel());  TGDragWindow constructor. ;  ;  ~TGDragWindow () override;  TGDragWindow destructor. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; Window_t GetInputId () const;  ; Bool_t HasWindow (Window_t w) const;  ; TClass * IsA () const override;  ; void Layout () override;  Layout TGDragWindow. ;  ; void LowerWindow () override;  Lower TGDragWindow. ;  ; void MapRaised () override;  Map and Raise TGDragWindow. ;  ; void MapWindow () override;  Map TGDragWindow. ;  ; void RaiseWindow () override;  Raise TGDragWindow. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  Unmap TGDragWindow. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDragWindow.html:1426,inherit,inherited,1426,doc/master/classTGDragWindow.html,https://root.cern,https://root.cern/doc/master/classTGDragWindow.html,1,['inherit'],['inherited']
Modifiability,"ns;  TSplinePoly5 ();  ;  TSplinePoly5 (Double_t x, Double_t y, Double_t b, Double_t c, Double_t d, Double_t e, Double_t f);  ;  TSplinePoly5 (TSplinePoly5 const &other);  ; Double_t & B ();  ; Double_t & C ();  ; Double_t & D ();  ; Double_t Derivative (Double_t x) const;  ; Double_t & E ();  ; Double_t Eval (Double_t x) const override;  ; Double_t & F ();  ; TClass * IsA () const override;  ; TSplinePoly5 & operator= (TSplinePoly5 const &other);  Assignment operator. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSplinePoly;  TSplinePoly ();  ;  TSplinePoly (Double_t x, Double_t y);  ;  TSplinePoly (TSplinePoly const &other);  ; void GetKnot (Double_t &x, Double_t &y) const;  ; TSplinePoly & operator= (TSplinePoly const &other);  Assignment operator. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & X ();  ; Double_t & Y ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly5.html:1453,inherit,inherited,1453,doc/master/classTSplinePoly5.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly5.html,1,['inherit'],['inherited']
Modifiability,"nsReference(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tUseColor() const; Bool_tWriteOptionsReference() const. private:. (unknown)(); TMVA::ConfigConfig(); TMVA::MsgLogger&Log() const. Data Members; public:. TMVA::Config::IONamesfIONamesCustomisable weight file properties; TMVA::Config::VariablePlottingfVariablePlottingCustomisable plotting properties. private:. Bool_tfDrawProgressBardraw progress bar to indicate training evolution; TMVA::MsgLogger*fLoggermessage logger; Bool_tfSilentno output at all; Bool_tfUseColoredConsolecoloured standard output; Bool_tfWriteOptionsReferenceif set true: Configurable objects write file with option reference; static TMVA::Config*fgConfigPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Config(); constructor - set defaults. void DestroyInstance(); static function: destroy TMVA instance. TMVA::Config& Instance(); static function: returns TMVA instance. Bool_t UseColor() const; { return fUseColoredConsole; }. void SetUseColor(Bool_t uc); { fUseColoredConsole = uc; }. Bool_t IsSilent() const; { return fSilent; }. void SetSilent(Bool_t s); { fSilent = s; }. Bool_t WriteOptionsReference() const; { return fWriteOptionsReference; }. void SetWriteOptionsReference(Bool_t w); { fWriteOptionsReference = w; }. Bool_t DrawProgressBar() const; { return fDrawProgressBar; }. void SetDrawProgressBar(Bool_t d); { fDrawProgressBar = d; }. VariablePlotting& GetVariablePlotting(); { return fVariablePlotting; }. IONames& GetIONames(); { return fIONames; }. Config(); private constructor. » Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss » Copyright (c) 2006: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Config.html:1752,Config,Config,1752,root/html534/TMVA__Config.html,https://root.cern,https://root.cern/root/html534/TMVA__Config.html,3,"['Config', 'Variab']","['Config', 'VariablePlotting']"
Modifiability,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButton.html:10903,inherit,inherited,10903,doc/master/classTGButton.html,https://root.cern,https://root.cern/doc/master/classTGButton.html,65,['inherit'],['inherited']
Modifiability,"nse_1 (Dense) (None, 64) 4160 ; ; dense_2 (Dense) (None, 64) 4160 ; ; dense_3 (Dense) (None, 64) 4160 ; ; dense_4 (Dense) (None, 2) 130 ; ; =================================================================; Total params: 13122 (51.26 KB); Trainable params: 13122 (51.26 KB); Non-trainable params: 0 (0.00 Byte); _________________________________________________________________; Factory : Booking method: ␛[1mPyKeras␛[0m; : ; : Setting up tf.keras; : Using TensorFlow version 2; : Use Keras version from TensorFlow : tf.keras; : Loading Keras Model ; : Loaded model from file: model_higgs.h5; Factory : ␛[1mTrain all methods␛[0m; Factory : [dataset] : Create Transformation ""I"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'm_jj' <---> Output : variable 'm_jj'; : Input : variable 'm_jjj' <---> Output : variable 'm_jjj'; : Input : variable 'm_lv' <---> Output : variable 'm_lv'; : Input : variable 'm_jlv' <---> Output : variable 'm_jlv'; : Input : variable 'm_bb' <---> Output : variable 'm_bb'; : Input : variable 'm_wbb' <---> Output : variable 'm_wbb'; : Input : variable 'm_wwbb' <---> Output : variable 'm_wwbb'; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : m_jj: 1.0318 0.65629 [ 0.15106 16.132 ]; : m_jjj: 1.0217 0.37420 [ 0.34247 8.9401 ]; : m_lv: 1.0507 0.16678 [ 0.26679 3.6823 ]; : m_jlv: 1.0161 0.40288 [ 0.38441 6.5831 ]; : m_bb: 0.97707 0.53961 [ 0.080986 8.2551 ]; : m_wbb: 1.0358 0.36856 [ 0.38503 6.4013 ]; : m_wwbb: 0.96265 0.31608 [ 0.43228 4.5350 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; IdTransformation : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Separation; : -------------------------------; : 1 : m_bb : 9.511e-02; : 2 : m_wbb : 4.268e-02; : 3 : m_wwbb : 4.178e-02; : 4 : m_jjj : 2.825e-02; : 5 : m_jlv : 1.999e-02; : 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:14816,variab,variable,14816,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,14,['variab'],['variable']
Modifiability,"nsecutives minimizations. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Minuit2__Minuit2Minimizer.html:6567,variab,variable,6567,root/html528/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Minuit2__Minuit2Minimizer.html,4,['variab'],['variable']
Modifiability,"nsecutives minimizations. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val); set variable values. bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& varObj) const; get variable settings in a variable ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:7353,variab,variable,7353,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],['variable']
Modifiability,nselect) while the mouse moves over a multi selectable list box ;  ; TGLBEntry * fLastActive;  last active listbox entry in single selection listbox ;  ; TGListBox * fListBox;  list box which contains this container ;  ; Bool_t fMultiSelect;  true if multi selection is switched on ;  ;  Protected Attributes inherited from TGContainer; Bool_t fBdown;  ; TGCanvas * fCanvas;  pointer to canvas ;  ; Bool_t fDragging;  true if in dragging mode ;  ; TGRectangle fExposedRegion;  exposed area ;  ; TString fKeyInput;  keyboard input (buffer) ;  ; TTimer * fKeyTimer;  keyboard timer ;  ; Bool_t fKeyTimerActive;  kTRUE - keyboard timer is active ;  ; TGFrameElement * fLastActiveEl;  last active item ;  ; Bool_t fLastCase;  case sensitivity of last search ;  ; Bool_t fLastDir;  direction of last search ;  ; TString fLastName;  the name of object of last search ;  ; Bool_t fLastSubstring;  substring search option of last search ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ; Bool_t fOnMouseOver;  kTRUE when mouse pointer is over entry ;  ; Bool_t fScrolling;  kTRUE - when scrolling is ON ;  ; TTimer * fScrollTimer;  autoscroll timer ;  ; Int_t fSelected;  number of selected items ;  ; Int_t fTotal;  total items ;  ; TGViewPort * fViewPort;  container viewport ;  ; Int_t fX0;  ; Int_t fXDND;  ; Int_t fXf;  ; Int_t fXp;  ; Int_t fY0;  corner of rubber band box ;  ; Int_t fYDND;  ; Int_t fYf;  other corner of rubber band box ;  ; Int_t fYp;  previous pointer position ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBContainer.html:34166,inherit,inherited,34166,doc/master/classTGLBContainer.html,https://root.cern,https://root.cern/doc/master/classTGLBContainer.html,2,['inherit'],['inherited']
Modifiability,"nserted object to back to drawing stack if requested; 2846 if (pc.getInt(""moveToBack"") && frame->numItems()>1) {; 2847 frame->drawBefore(frame->getObject(0)->GetName(), frame->getCurve()->GetName());; 2848 }; 2849 ; 2850 ; 2851 return frame ;; 2852}; 2853 ; 2854 ; 2855 ; 2856 ; 2857////////////////////////////////////////////////////////////////////////////////; 2858/// Utility function for plotOn(), perform general sanity check on frame to ensure safe plotting operations; 2859 ; 2860bool RooAbsReal::plotSanityChecks(RooPlot* frame) const; 2861{; 2862 // check that we are passed a valid plot frame to use; 2863 if(nullptr == frame) {; 2864 coutE(Plotting) << ClassName() << ""::"" << GetName() << "":plotOn: frame is null"" << std::endl;; 2865 return true;; 2866 }; 2867 ; 2868 // check that this frame knows what variable to plot; 2869 RooAbsReal* var = frame->getPlotVar() ;; 2870 if(!var) {; 2871 coutE(Plotting) << ClassName() << ""::"" << GetName(); 2872 << "":plotOn: frame does not specify a plot variable"" << std::endl;; 2873 return true;; 2874 }; 2875 ; 2876 // check that the plot variable is not derived; 2877 if(!dynamic_cast<RooAbsRealLValue*>(var)) {; 2878 coutE(Plotting) << ClassName() << ""::"" << GetName() << "":plotOn: cannot plot variable \""""; 2879 << var->GetName() << ""\"" of type "" << var->ClassName() << std::endl;; 2880 return true;; 2881 }; 2882 ; 2883 // check if we actually depend on the plot variable; 2884 if(!this->dependsOn(*var)) {; 2885 coutE(Plotting) << ClassName() << ""::"" << GetName() << "":plotOn: WARNING: variable is not an explicit dependent: ""; 2886 << var->GetName() << std::endl;; 2887 }; 2888 ; 2889 return false ;; 2890}; 2891 ; 2892 ; 2893 ; 2894 ; 2895////////////////////////////////////////////////////////////////////////////////; 2896/// Utility function for plotOn() that constructs the set of; 2897/// observables to project when plotting ourselves as function of; 2898/// 'plotVar'. 'allVars' is the list of variables that must be; 2899/// projecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:125099,variab,variable,125099,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,6,['variab'],['variable']
Modifiability,"nset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:22038,inherit,inherited,22038,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,5,['inherit'],['inherited']
Modifiability,"nsform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Double_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Double_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id$ » Last generated: 2015-06-02 16:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSpectrumTransform.html:23586,enhance,enhancement,23586,root/html604/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html604/TSpectrumTransform.html,2,['enhance'],['enhancement']
Modifiability,"nsform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Double_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Double_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:23586,enhance,enhancement,23586,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,2,['enhance'],['enhancement']
Modifiability,"nsform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSpectrumTransform.html:22416,enhance,enhancement,22416,root/html534/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html534/TSpectrumTransform.html,2,['enhance'],['enhancement']
Modifiability,"nsform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-10-01 15:52; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrumTransform.html:22328,enhance,enhancement,22328,root/html528/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html528/TSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"nsform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpectrumTransform.html:22397,enhance,enhancement,22397,root/html530/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html530/TSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,"nsform"",""Transform1"",10,10,1000,700);; ��; h->SetAxisRange(700,1024);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrumTransform.html:22397,enhance,enhancement,22397,root/html532/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html532/TSpectrumTransform.html,2,['enhance'],['enhancement']
Modifiability,"nsform, TMVA::VariableNormalizeTransform, TMVA::VariablePCATransform, and TMVA::VariableRearrangeTransform. Member Data Documentation. ◆ fBackTransformedEvent. Event* TMVA::VariableTransformBase::fBackTransformedEvent. mutableprotected . holds the current back-transformed event ; Definition at line 140 of file VariableTransformBase.h. ◆ fCreated. Bool_t TMVA::VariableTransformBase::fCreated. private . has been created ; Definition at line 154 of file VariableTransformBase.h. ◆ fDsi. DataSetInfo& TMVA::VariableTransformBase::fDsi. protected . Definition at line 130 of file VariableTransformBase.h. ◆ fDsiOutput. DataSetInfo* TMVA::VariableTransformBase::fDsiOutput. protected . Definition at line 131 of file VariableTransformBase.h. ◆ fEnabled. Bool_t TMVA::VariableTransformBase::fEnabled. private . has been enabled ; Definition at line 153 of file VariableTransformBase.h. ◆ fGet. VectorOfCharAndInt TMVA::VariableTransformBase::fGet. protected . get variables/targets/spectators ; Definition at line 143 of file VariableTransformBase.h. ◆ fLogger. MsgLogger* TMVA::VariableTransformBase::fLogger. mutableprotected . ! message logger ; Definition at line 174 of file VariableTransformBase.h. ◆ fNormalise. Bool_t TMVA::VariableTransformBase::fNormalise. private . normalise input variables ; Definition at line 155 of file VariableTransformBase.h. ◆ fNSpectators. UInt_t TMVA::VariableTransformBase::fNSpectators. mutableprivate . number of spectators to be transformed ; Definition at line 165 of file VariableTransformBase.h. ◆ fNTargets. UInt_t TMVA::VariableTransformBase::fNTargets. mutableprivate . number of targets to be transformed ; Definition at line 164 of file VariableTransformBase.h. ◆ fNVariables. UInt_t TMVA::VariableTransformBase::fNVariables. mutableprivate . number of variables to be transformed ; Definition at line 163 of file VariableTransformBase.h. ◆ fNVars. UInt_t TMVA::VariableTransformBase::fNVars. private . number of variables ; Definition at line 156 of fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:29569,variab,variables,29569,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['variab'],['variables']
Modifiability,"nsform;  CVariableRearrangeTransform;  CVariableTransformBase;  CVarTransformHandler;  CVolume;  ►NTStreamerInfoActions;  CTActionSequence;  CTConfigurationBase class of the Configurations ;  CTConfiguredAction;  CTLoopConfigurationBase class of the Configurations for the member wise looping routines ;  ►Nvdt;  ►Ndetails;  Cieee754Used to switch between different type of interpretations of the data (64 bits) ;  ►Nwriter;  Cwriter;  C_root_std_complex;  C_x3d_data_;  C_x3d_sizeof_;  CAnyCollectionProxy;  CAnyCollectionStreamer;  CApplicationWindowMain Qt&Root Application Window: ;  CBalancerInfo;  CBaseSelectionRule;  Cbasic_string_view;  ►CBidirMMapPipeBidirMMapPipe creates a bidirectional channel between the current process and a child it forks ;  CPollEntryFor poll() interface ;  CBinaryOpPolicy;  CBinomialNeymanInterval;  CBinomialProbHelper;  CClassSelectionRule;  CClusterD;  CColorStruct_t;  CCompareAsc;  CcompareBAasc;  CcompareBAdesc;  CCompareDesc;  CContDistFree functions adapter needed by UNURAN for onedimensional continuous distributions ;  CContextSmall helper to keep current directory context ;  CCpuInfo_t;  CDiscrDistFree functions adapter needed by UNURAN for one-dimensional discrete distribution ;  CDUMMY;  CEditor;  CEvent_t;  CExceptionContext_t;  CFeldmanCousinsBinomialInterval;  CFeldmanCousinsSorter;  CFileStat_t;  CFontAttributes_t;  CFontMetrics_t;  CFoption_t;  CFUMILI2;  Cfuncptr_and_voidptr_t;  CGaussFunction;  CGcCache_t;  CGCValues_t;  Cgroup;  CGSL_BFGS;  CGSL_BFGS2;  CGSL_FR;  CGSL_NLS;  CGSL_PR;  Ch1analysis;  Ch1analysisTreeReader;  Chash< std::experimental::basic_string_view< _CharT, _Traits > >;  CHelperOps;  CHEPEVT_DEFHEPEVT common block ;  CHit;  CHoption_tHistogram option structure ;  CHparam_tHistogram parameters structure ;  CJet;  CJetEvent;  CLINEAR;  CMemInfo_t;  Cmg_callbacks;  Cmg_client_options;  Cmg_form_data_handler;  Cmg_option;  ►Cmg_request_info;  Cmg_header;  Cmg_server_ports;  CMINUIT2;  CMultiDistFree functions a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:72342,adapt,adapter,72342,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['adapt'],['adapter']
Modifiability,"nsformHandler::VarTransformHandler ; (; DataLoader * ; dl). constructor ; Definition at line 49 of file VarTransformHandler.cxx. ◆ ~VarTransformHandler(). TMVA::VarTransformHandler::~VarTransformHandler ; (; ). destructor ; Definition at line 61 of file VarTransformHandler.cxx. Member Function Documentation. ◆ CalcNorm(). void TMVA::VarTransformHandler::CalcNorm ; (; ). private . Computes maximum, minimum, mean, RMS and variance for all variables and targets. ; Definition at line 148 of file VarTransformHandler.cxx. ◆ CopyDataLoader(). void TMVA::VarTransformHandler::CopyDataLoader ; (; TMVA::DataLoader * ; des, . TMVA::DataLoader * ; src . ). private . Definition at line 287 of file VarTransformHandler.cxx. ◆ Log(). MsgLogger & TMVA::VarTransformHandler::Log ; (; ); const. inline . message logger ; Definition at line 49 of file VarTransformHandler.h. ◆ UpdateNorm(). void TMVA::VarTransformHandler::UpdateNorm ; (; Int_t ; ivar, . Double_t ; x . ). private . Updates maximum and minimum value of a variable or target. ; Definition at line 129 of file VarTransformHandler.cxx. ◆ VarianceThreshold(). TMVA::DataLoader * TMVA::VarTransformHandler::VarianceThreshold ; (; Double_t ; threshold). Computes variance of all the variables and returns a new DataLoader with the selected variables whose variance is above a specific threshold. ; Threshold can be provided by user otherwise default value is 0 i.e. remove the variables which have same value in all the events.; Parameters. [in]thresholdvalue (Double). Transformation Definition String Format: ""VT(optional float value)""; Usage examples:. String Description . ""VT"" Select variables whose variance is above threshold value = 0 (Default) . ""VT(1.5)"" Select variables whose variance is above threshold value = 1.5 . Definition at line 84 of file VarTransformHandler.cxx. Member Data Documentation. ◆ fDataLoader. DataLoader* TMVA::VarTransformHandler::fDataLoader. private . Definition at line 54 of file VarTransformHandler.h. ◆ fDataSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VarTransformHandler.html:2352,variab,variable,2352,doc/master/classTMVA_1_1VarTransformHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VarTransformHandler.html,1,['variab'],['variable']
Modifiability,"nsform_t transform_pixel_to_logical (void) const override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; bool is_cyrillic_or_cjk (const wchar_t c) const;  ; size_t root_cjk_face_number (const bool serif=false) const;  ; size_t root_face_number (const unsigned int family, const bool serif=false) const;  . Private Attributes; float _angle_degree;  ; float _current_font_size [mathtext::math_text_renderer_t::NFAMILY];  ; float _font_size;  ; float _pad_pixel_transform [6];  ; float _pad_scale;  ; float _pad_scale_x;  ; float _pad_scale_x_relative;  ; float _pad_scale_y;  ; float _pad_scale_y_relative;  ; TMathText * _parent;  ; float _x0;  ; float _y0;  . Additional Inherited Members;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathTextRenderer.html:18344,inherit,inherited,18344,doc/master/classTMathTextRenderer.html,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html,2,['inherit'],['inherited']
Modifiability,"nsforms. orthogonal transforms can be successfully used for the processing of nuclear spectra (not only); they can be used to remove high frequency noise, to increase signal-to-background ratio as well as to enhance low intensity components [1], to carry out e.g. Fourier analysis etc.; we have implemented the function for the calculation of the commonly used orthogonal transforms as well as functions for the filtration and enhancement of experimental data. References:; [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [2] Morhac; M., Matouoek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; [3] Morhac; M., Matouoek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac; M., Matouoek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. Example - script Transform.c:. Fig. 1 Original gamma-ray spectrum. Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; Script:; Example to illustrate Transform function (class TSpectrumTransform). To execute this example, do:; root > .x Transform.C; #include <TSpectrum>; #include <TSpectrumTransform>; void Transform() {; Int_t i;; Double_t nbins = 4096;; Double_t xmin = 0;; Double_t xmax = (Double_t)nbins;; Double_t * source = new Double_t[nbins];; Double_t * dest = new Double_t[nbins];; TH1F *h = new TH1F(""h"",""Transformed spectrum using Cosine transform"",nbins,xmin,xmax);; TFile *f = new TFile(""spectra/TSpectrum.root"");; h=(TH1F*) f->Get(""transform1;1"");; for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; TSpectrum *s = new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:31049,adapt,adaptive,31049,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['adapt'],['adaptive']
Modifiability,"nsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TGCheckButton*fRnrLines; TGCheckButton*fRnrMarkers; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveStraightLineSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Initialize widget pointers to 0; Constructor. void SetModel(TObject* obj); Set model object. void DoRnrMarkers(); Slot for RnrMarkers. void DoRnrLines(); Slot for RnrLines. TEveStraightLineSetEditor(const TEveStraightLineSetEditor& ). TEveStraightLineSetEditor& operator=(const TEveStraightLineSetEditor& ). virtual ~TEveStraightLineSetEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveStraightLineSetEditor.html:19975,Inherit,Inheritance,19975,root/html534/TEveStraightLineSetEditor.html,https://root.cern,https://root.cern/root/html534/TEveStraightLineSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TGCheckButton*fShowTitleBar; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveWindowEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoShowTitleBar(); Slot for ShowTitleBar. TEveWindowEditor(const TEveWindowEditor& ). TEveWindowEditor& operator=(const TEveWindowEditor& ). virtual ~TEveWindowEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveWindowEditor.h 26561 2008-12-01 17:35:55Z matevz $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveWindowEditor.html:19752,Inherit,Inheritance,19752,root/html532/TEveWindowEditor.html,https://root.cern,https://root.cern/root/html532/TEveWindowEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nside() for each of them.; This method checks if the input location is in that bin. If the filling; coordinate is inside, the bin is filled. Looping over all the bin is; very slow. The alternative is to divide the histogram into virtual rectangular regions; called ""cells"". Each cell stores the pointers of the bins intersecting it.; When a coordinate is to be filled, the method finds which cell the coordinate; falls into. Since the cells are rectangular, this can be done very quickly.; It then only loops over the bins associated with that cell. The addition of bins to the appropriate cells is done when the bin is added; to the histogram. To do this, AddBin() calls the; AddBinToPartition() method.; This method adds the input bin to the partitioning matrix. The number of partition cells per axis can be specified in the constructor.; If it is not specified, the default value of 25 along each axis will be; assigned. This value was chosen because it is small enough to avoid slowing; down AddBin(), while being large enough to enhance Fill() by a considerable; amount. Regardless of how it is initialized at construction time, it can be; changed later with the ChangePartition() method.; ChangePartition() deletes the; old partition matrix and generates a new one with the specified number of cells; on each axis. The optimum number of partition cells per axis changes with the number of; times Fill() will be called. Although partitioning greatly speeds up; filling, it also adds a constant time delay into the code. When Fill(); is to be called many times, it is more efficient to divide the histogram into; a large number cells. However, if the histogram is to be filled only a few; times, it is better to divide into a small number of cells.; . Function Members (Methods); public:. TH2Poly(); TH2Poly(const TH2Poly&); TH2Poly(const char* name, const char* title, Double_t xlow, Double_t xup, Double_t ylow, Double_t yup); TH2Poly(const char* name, const char* title, Int_t nX, Double_t xl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2Poly.html:4548,enhance,enhance,4548,root/html528/TH2Poly.html,https://root.cern,https://root.cern/root/html528/TH2Poly.html,6,['enhance'],['enhance']
Modifiability,"nside() for each of them.; This method checks if the input location is in that bin. If the filling; coordinate is inside, the bin is filled. Looping over all the bin is; very slow. The alternative is to divide the histogram into virtual rectangular regions; called ""cells"". Each cell stores the pointers of the bins intersecting it.; When a coordinate is to be filled, the method finds which cell the coordinate; falls into. Since the cells are rectangular, this can be done very quickly.; It then only loops over the bins associated with that cell. The addition of bins to the appropriate cells is done when the bin is added; to the histogram. To do this, AddBin() calls the; AddBinToPartition() method.; This method adds the input bin to the partitioning matrix. The number of partition cells per axis can be specified in the constructor.; If it is not specified, the default value of 25 along each axis will be; assigned. This value was chosen because it is small enough to avoid slowing; down AddBin(), while being large enough to enhance Fill() by a considerable; amount. Regardless of how it is initialized at construction time, it can be; changed later with the ChangePartition() method.; ChangePartition() deletes the; old partition matrix and generates a new one with the specified number of cells; on each axis. The optimum number of partition cells per axis changes with the number of; times Fill() will be called. Although partitioning greatly speeds up; filling, it also adds a constant time delay into the code. When Fill(); is to be called many times, it is more efficient to divide the histogram into; a large number cells. However, if the histogram is to be filled only a few; times, it is better to divide into a small number of cells.; . Function Members (Methods); public:. virtual~TH2Poly(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(const TH1* h1, Double_t c1); virtual Bool_tAdd(TF1* h1, Double_t c1 = 1, Option_t* option = """"); virtual Bool_tAdd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Poly.html:4497,enhance,enhance,4497,root/html602/TH2Poly.html,https://root.cern,https://root.cern/root/html602/TH2Poly.html,4,['enhance'],['enhance']
Modifiability,"nside() for each of them.; This method checks if the input location is in that bin. If the filling; coordinate is inside, the bin is filled. Looping over all the bin is; very slow. The alternative is to divide the histogram into virtual rectangular regions; called ""cells"". Each cell stores the pointers of the bins intersecting it.; When a coordinate is to be filled, the method finds which cell the coordinate; falls into. Since the cells are rectangular, this can be done very quickly.; It then only loops over the bins associated with that cell. The addition of bins to the appropriate cells is done when the bin is added; to the histogram. To do this, AddBin() calls the; AddBinToPartition() method.; This method adds the input bin to the partitioning matrix. The number of partition cells per axis can be specified in the constructor.; If it is not specified, the default value of 25 along each axis will be; assigned. This value was chosen because it is small enough to avoid slowing; down AddBin(), while being large enough to enhance Fill() by a considerable; amount. Regardless of how it is initialized at construction time, it can be; changed later with the ChangePartition() method.; ChangePartition() deletes the; old partition matrix and generates a new one with the specified number of cells; on each axis. The optimum number of partition cells per axis changes with the number of; times Fill() will be called. Although partitioning greatly speeds up; filling, it also adds a constant time delay into the code. When Fill(); is to be called many times, it is more efficient to divide the histogram into; a large number cells. However, if the histogram is to be filled only a few; times, it is better to divide into a small number of cells.; . Function Members (Methods); public:. virtual~TH2PolyBin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2PolyBin.html:4510,enhance,enhance,4510,root/html602/TH2PolyBin.html,https://root.cern,https://root.cern/root/html602/TH2PolyBin.html,4,['enhance'],['enhance']
Modifiability,"nsientFrame * fUndocked;  Main frame used when ""undocking"" frame. ;  ; Float_t fWRatio;  Width ratio between the first child and this. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGSplitFrame (const TGSplitFrame &)=delete;  ; TGSplitFrame & operator= (const TGSplitFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitFrame.html:27970,inherit,inherited,27970,doc/master/classTGSplitFrame.html,https://root.cern,https://root.cern/doc/master/classTGSplitFrame.html,1,['inherit'],['inherited']
Modifiability,"nsigned indx);  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (const void *ptr);  Assign id using arbitrary pointer value Typically drawable pointer should be used here. ;  ; void SetStyle (RStyle *style);  . Protected Attributes; const RAttrMap * fAttr {nullptr};  temporary pointer on attributes ;  ; PadPrimitives_t fPrimitives;  display items for all primitives in the pad ;  ; std::vector< std::shared_ptr< RStyle > > fStyles;  ! locked styles of the objects and pad until streaming is performed ;  ;  Protected Attributes inherited from ROOT::Experimental::RDisplayItem; bool fDummy {false};  if true, just placeholder for drawable which does not changed ;  ; unsigned fIndex {0};  ! index inside current pad, used to produce fully-qualified id, not send to client ;  ; std::string fObjectID;  unique object identifier ;  ; RStyle * fStyle {nullptr};  style object ;  . Additional Inherited Members;  Static Public Member Functions inherited from ROOT::Experimental::RDisplayItem; static std::string ObjectIDFromPtr (const void *ptr);  Construct fillid using pointer value. ;  . #include <ROOT/RPadDisplayItem.hxx>. Inheritance diagram for ROOT::Experimental::RPadBaseDisplayItem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ PadPrimitives_t. using ROOT::Experimental::RPadBaseDisplayItem::PadPrimitives_t = std::vector<std::unique_ptr<RDisplayItem> >. Definition at line 31 of file RPadDisplayItem.hxx. Constructor & Destructor Documentation. ◆ RPadBaseDisplayItem(). ROOT::Experimental::RPadBaseDisplayItem::RPadBaseDisplayItem ; (; ). default . ◆ ~RPadBaseDisplayItem(). ROOT::Experimental::RPadBaseDisplayItem::~RPadBaseDisplayItem ; (; ). overridedefault . Member Function Documentation. ◆ Add(). void ROOT::Experimental::RPadBaseDisplayItem::Add ; (; std::unique_ptr< RDisplayItem > && ; item, . std::shared_ptr< RStyle > && ; style . ). inline . Add display item and style which s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html:2486,inherit,inherited,2486,doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBaseDisplayItem.html,1,['inherit'],['inherited']
Modifiability,"nsigned int i, unsigned int j) const override;  return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ;  ; double Edm () const override;  return expected distance reached from the minimum (re-implement if minimizer provides it ;  ; const double * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; const GeneticMinimizerParameters & MinimizerParameters () const;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameters) ;  ; ROOT::Math::MinimizerOptions Options () const override;  retrieve the minimizer options (implement derived class if needed) ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int ivar, const std::string &name, double val) override;  set a new fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int, const std::string &, double, double, double, double) override;  set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited variable ;  ; virtual void SetOptions (const ROOT::Math::MinimizerOptions &opt);  ; void SetParameters (const Genetic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:1673,variab,variables,1673,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,2,['variab'],['variables']
Modifiability,"nsigned int, const std::vector< double > &);  ; unsigned int NegativeBinomial (double, double);  ; double operator() ();  non-virtual method ;  ; double Pareto (double, double);  ; int Poisson (double mean);  Generates a random integer N according to a Poisson law. ;  ; double PoissonD (double mean);  ; void Rannor (double &a, double &b);  Generate numbers distributed following a gaussian with mean=0 and sigma=1. ;  ; double Rayleigh (double);  ; void Sphere (double &x, double &y, double &z, double r);  Generates random vectors, uniformly distributed over the surface of a sphere of given radius. ;  ; double tDist (double);  ; double Uniform (double a);  generate random numbers following a Uniform distribution in the [0,a] interval ;  ; double Uniform (double a, double b);  generate random numbers following a Uniform distribution in the [a,b] interval ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::RandomFunctions< EngineType, DefaultEngineType >; double Rndm_impl ();  Internal implementation to return random number Since this one is not a virtual function is faster than Rndm. ;  ; EngineType & Rng ();  . #include <Math/GSLRandomFunctions.h>. Inheritance diagram for ROOT::Math::RandomFunctions< EngineType, ROOT::Math::GSLRandomEngine >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RandomFunctions() [1/2]. template<class EngineType > . ROOT::Math::RandomFunctions< EngineType, ROOT::Math::GSLRandomEngine >::RandomFunctions ; (; ). inline . Definition at line 50 of file GSLRandomFunctions.h. ◆ RandomFunctions() [2/2]. template<class EngineType > . ROOT::Math::RandomFunctions< EngineType, ROOT::Math::GSLRandomEngine >::RandomFunctions ; (; EngineType & ; rng). inline . Definition at line 52 of file GSLRandomFunctions.h. Member Function Documentation. ◆ Beta(). template<class EngineType > . double ROOT::Math::RandomFunctions< EngineType, R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctions_3_01EngineType_00_01ROOT_1_1Math_1_1GSLRandomEngine_01_4.html:5296,inherit,inherited,5296,doc/master/classROOT_1_1Math_1_1RandomFunctions_3_01EngineType_00_01ROOT_1_1Math_1_1GSLRandomEngine_01_4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RandomFunctions_3_01EngineType_00_01ROOT_1_1Math_1_1GSLRandomEngine_01_4.html,1,['inherit'],['inherited']
Modifiability,"nsigned int, double); voidROOT::Minuit2::MnApplication::SetValue(const char*, double); const ROOT::Minuit2::MnUserParameterState&ROOT::Minuit2::MnApplication::State() const; const ROOT::Minuit2::MnStrategy&ROOT::Minuit2::MnApplication::Strategy() const; doubleROOT::Minuit2::MnApplication::Value(unsigned int) const; doubleROOT::Minuit2::MnApplication::Value(const char*) const; unsigned intROOT::Minuit2::MnApplication::VariableParameters() const. private:. ROOT::Minuit2::MnFumiliMinimize&operator=(const ROOT::Minuit2::MnFumiliMinimize&). Data Members; protected:. const ROOT::Minuit2::FCNBase&ROOT::Minuit2::MnApplication::fFCN; unsigned intROOT::Minuit2::MnApplication::fNumCall; ROOT::Minuit2::MnUserParameterStateROOT::Minuit2::MnApplication::fState; ROOT::Minuit2::MnStrategyROOT::Minuit2::MnApplication::fStrategy; boolROOT::Minuit2::MnApplication::fUseGrad. private:. const ROOT::Minuit2::FumiliFCNBase&fFCN; ROOT::Minuit2::FumiliMinimizerfMinimizer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnFumiliMinimize(const FumiliFCNBase& fcn, const std::vector<double>& par, const std::vector<double>& err, unsigned int stra = 1); construct from FumiliFCNBase + std::vector for parameters and errors. {}. MnFumiliMinimize(const ROOT::Minuit2::FumiliFCNBase& fcn, const vector<double>& par, unsigned int nrow, const vector<double>& cov, unsigned int stra = 1); construct from FumiliFCNBase + std::vector for parameters and covariance. {}. MnFumiliMinimize(const FumiliFCNBase& fcn, const std::vector<double>& par, const MnUserCovariance& cov, unsigned int stra = 1); construct from FumiliFCNBase + std::vector for parameters and MnUserCovariance. {}. MnFumiliMinimize(const ROOT::Minuit2::FumiliFCNBase& fcn, const ROOT::Minuit2::MnUserParameters& par, unsigned int stra = 1); construct from FumiliFCNBase + MnUserParameters. {}. MnFumiliMinimize(const FumiliFCNBase& fcn, const MnUserParameters& par, const MnUserCovariance& cov, unsigned int stra =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnFumiliMinimize.html:5128,Inherit,Inheritance,5128,root/html532/ROOT__Minuit2__MnFumiliMinimize.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnFumiliMinimize.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nsigned short>(unsigned short). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(unsigned short ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TClaImpProxy_unsigned_short_.html:4303,Inherit,Inheritance,4303,root/html532/ROOT__TClaImpProxy_unsigned_short_.html,https://root.cern,https://root.cern/root/html532/ROOT__TClaImpProxy_unsigned_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nsion () const;  Get a copy of the framework extension pointer. ;  ; TGeoExtension * GrabUserExtension () const;  Get a copy of the user extension pointer. ;  ; Bool_t IsUsed () const;  ; void Print (const Option_t *option="""") const override;  print characteristics of this material ;  ; virtual void SetCerenkovProperties (TObject *cerenkov);  ; void SetFWExtension (TGeoExtension *ext);  Connect framework defined extension to the material. ;  ; void SetIndex (Int_t index);  ; void SetPressure (Double_t pressure);  ; void SetRadLen (Double_t radlen, Double_t intlen=0.);  Set radiation/absorption lengths. ;  ; void SetState (EGeoMaterialState state);  ; void SetTemperature (Double_t temperature);  ; void SetTransparency (Char_t transparency=0);  ; void SetUsed (Bool_t flag=kTRUE);  ; void SetUserExtension (TGeoExtension *ext);  Connect user-defined extension to the material. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMixture.html:6689,inherit,inherited,6689,doc/master/classTGeoMixture.html,https://root.cern,https://root.cern/doc/master/classTGeoMixture.html,1,['inherit'],['inherited']
Modifiability,"nsional functions. ;  ; double ParameterDerivative (const double *x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values (multi-dim like interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values. ;  ; void ParameterGradient (const double *x, const double *p, double *grad) const;  Compatibility interface with multi-dimensional functions. ;  ; void ParameterGradient (const double *x, double *grad) const;  Evaluate all derivatives using cached parameter values (multi-dim like interface) ;  ; void ParameterGradient (double x, double *grad) const;  Evaluate all derivatives using cached parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionOneDim; double Derivative (const double *x) const;  Compatibility method with multi-dimensional interface for partial derivative. ;  ; double Derivative (double x) const;  Return the derivative of the function at a point x Use the private method DoDerivative. ;  ; void FdF (const double *x, double &f, double *df) const;  Compatibility method with multi-dimensional inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedTF1.html:3180,inherit,inherited,3180,doc/master/classROOT_1_1Math_1_1WrappedTF1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedTF1.html,1,['inherit'],['inherited']
Modifiability,"nsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:35989,inherit,inherited,35989,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,2,['inherit'],['inherited']
Modifiability,nsity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSparseRow<double>. TMatrixTSparseRow<float>. TMatrixTSub<double>. TMatrixTSub<float>. TMatrixTSym<double>. TMatrixTSym<float>. TMatrixTSymLazy<double>←. THilbert,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77372,Variab,VariableIdentityTransform,77372,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariableIdentityTransform']
Modifiability,"nsityBase * GetDistr () const;  ; void Grow ();  Internal subprogram used by Create. ;  ; void InitCells ();  Internal subprogram used by Create. ;  ; void MakeAlpha ();  Internal subprogram used by Create. ;  ; void OutputGrow (Bool_t finished=false);  Overridden function of PDEFoam to avoid native foam output. ;  ; Long_t PeekMax ();  Internal subprogram used by Create. ;  ; void SetCellElement (PDEFoamCell *cell, UInt_t i, Double_t value);  Set cell element i of cell to value. ;  ; template<typename T > ; T Sqr (T x) const;  ; void Varedu (Double_t[5], Int_t &, Double_t &, Double_t &);  Internal subprogram used by Create. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; ETargetSelection fTargetSelection;  ;  Protected Attributes inherited from TMVA::PDEFoam; Double_t * fAlpha;  [fDim] Internal parameters of the hyperrectangle ;  ; PDEFoamCell ** fCells;  [fNCells] Array of ALL cells ;  ; Int_t fDim;  Dimension of the integration/simulation space. ;  ; PDEFoamDensityBase * fDistr;  ! distribution of training events ;  ; EDTSeparation fDTSeparation;  BACKWARDS COMPATIBILITY: split cells according to decision tree logic. ;  ; Int_t fEvPerBin;  Maximum number of effective (wt=1) events per bin. ;  ; Bool_t fFillFoamWithOrigWeights;  BACKWARDS COMPATIBILITY: fill the foam with boost or orig. weights. ;  ; EFoamType fFoamType;  BACKWARDS COMPATIBILITY: type of foam. ;  ; TObjArray * fHistEdg;  Histograms of wt, one for each cell edge. ;  ; Int_t * fInhiDiv;  ! [fDim] Flags for inhibiting cell division ;  ; Int_t fLastCe;  Index of the last cell. ;  ; MsgLogger * fLogger;  ! message logger ;  ; Int_t * fMaskDiv;  ! [fDim] Dynamic Mask for cell division ;  ; UInt_t fMaxDepth;  maximum depth of cell tree ;  ; TString fName;  Name of a given instance of the FOAM class. ;  ; Int_t fNBin; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:17503,inherit,inherited,17503,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,1,['inherit'],['inherited']
Modifiability,"nsparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveParamList (const TEveParamList &);  ; TEveParamList & operator= (const TEveParamList &);  . Friends; class TEveParamListEditor;  . Additional Inherited Members;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveParamList.html:33222,inherit,inherited,33222,doc/master/classTEveParamList.html,https://root.cern,https://root.cern/doc/master/classTEveParamList.html,2,['inherit'],['inherited']
Modifiability,"nsparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; mathtext::affine_transform_t transform_logical_to_pixel (void) const override;  ; mathtext::affine_transform_t transform_pixel_to_logical (void) const override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; bool is_cyrillic_or_cjk (const wchar_t c) const;  ; size_t root_cjk_face_number (const bool serif=false) const;  ; size_t root_face_number (const unsigned int family, const bool serif=false) const;  . Private Attributes; float _angle_degree;  ; float _current_font_size [mathtext::math_text_renderer_t::NFAMILY];  ; float _font_size;  ; float _pad_pixel_transform [6];  ; float _pad_scale;  ; float _pad_scale_x;  ; float _pad_scale_x_relative;  ; float _pad_scale_y;  ; float _pad_scale_y_relative;  ; TMathText * _parent;  ; float _x0;  ; float _y0;  . Additional Inherited Members;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathTextRenderer.html:17536,inherit,inherited,17536,doc/master/classTMathTextRenderer.html,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html,1,['inherit'],['inherited']
Modifiability,"nst Double_t *x, Double_t D, Double_t E=0);  Add a row consisting of fNVariables independent variables, the known, dependent quantity, and optionally, the square error in the dependent quantity, to the training sample to be used for the parameterization. ;  ; virtual void AddTestRow (const Double_t *x, Double_t D, Double_t E=0);  Add a row consisting of fNVariables independent variables, the known, dependent quantity, and optionally, the square error in the dependent quantity, to the test sample to be used for the test of the parameterization. ;  ; void Browse (TBrowser *b) override;  Browse the TMultiDimFit object in the TBrowser. ;  ; void Clear (Option_t *option="""") override;  Clear internal structures and variables. ;  ; void Draw (Option_t *=""d"") override;  Default Draw method for all objects. ;  ; virtual Double_t Eval (const Double_t *x, const Double_t *coeff=nullptr) const;  Evaluate parameterization at point x. ;  ; virtual Double_t EvalError (const Double_t *x, const Double_t *coeff=nullptr) const;  Evaluate parameterization error at point x. ;  ; virtual void FindParameterization (Option_t *option="""");  Find the parameterization. ;  ; virtual void Fit (Option_t *option="""");  Try to fit the found parameterisation to the test sample. ;  ; Double_t GetChi2 () const;  ; const TVectorD * GetCoefficients () const;  ; const TVectorD * GetCoefficientsRMS () const;  ; const TMatrixD * GetCorrelationMatrix () const;  ; Double_t GetError () const;  ; Int_t * GetFunctionCodes () const;  ; const TMatrixD * GetFunctions () const;  ; virtual TList * GetHistograms () const;  ; Double_t GetMaxAngle () const;  ; Int_t GetMaxFunctions () const;  ; Int_t * GetMaxPowers () const;  ; Double_t GetMaxQuantity () const;  ; Int_t GetMaxStudy () const;  ; Int_t GetMaxTerms () const;  ; const TVectorD * GetMaxVariables () const;  ; Double_t GetMeanQuantity () const;  ; const TVectorD * GetMeanVariables () const;  ; Double_t GetMinAngle () const;  ; Double_t GetMinQuantity () const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:19934,parameteriz,parameterization,19934,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['parameteriz'],['parameterization']
Modifiability,"nst Double_t* x) const; Int_tGetGlobalBinNumber(Double_t x, Double_t y) const; Int_tGetGlobalBinNumber(Double_t x, Double_t y, Double_t z) const; Int_tGetGlobalBinNumber(Double_t x0, Double_t x1, Double_t x2, Double_t x3) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; const TUnfoldBinning*GetNextNode() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TUnfoldBinning*GetParentNode() const; const TUnfoldBinning*GetPrevNode() const; Int_tGetStartBin() const; Int_tGetTH1xNumberOfBins(Bool_t originalAxisBinning = kTRUE, const char* axisSteering = 0) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldBinning.html:6568,Inherit,InheritsFrom,6568,root/html534/TUnfoldBinning.html,https://root.cern,https://root.cern/root/html534/TUnfoldBinning.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst Double_t* x) const; Int_tGetGlobalBinNumber(Double_t x, Double_t y) const; Int_tGetGlobalBinNumber(Double_t x, Double_t y, Double_t z) const; Int_tGetGlobalBinNumber(Double_t x0, Double_t x1, Double_t x2, Double_t x3) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; const TUnfoldBinning*GetNextNode() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TUnfoldBinning*GetParentNode() const; const TUnfoldBinning*GetPrevNode() const; Int_tGetStartBin() const; Int_tGetTH1xNumberOfBins(Bool_t originalAxisBinning = kTRUE, const char* axisSteering = 0) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfoldBinning.html:6393,Inherit,InheritsFrom,6393,root/html602/TUnfoldBinning.html,https://root.cern,https://root.cern/root/html602/TUnfoldBinning.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst Double_t* x, const Double_t* y); voidDrawPolyMarker(); voidDrawTesselation(Int_t n, const Double_t* x, const Double_t* y); TGLPadPainter&operator=(const TGLPadPainter& rhs); voidRestoreModelviewMatrix() const; voidRestoreProjectionMatrix() const; voidRestoreViewport(); voidSaveModelviewMatrix() const; voidSaveProjectionMatrix() const; voidSaveViewport(); TGLPadPainter(const TGLPadPainter& rhs). Data Members; public:. static TVirtualPadPainter::ETextModeTVirtualPadPainter::kClear; static TVirtualPadPainter::EBoxModeTVirtualPadPainter::kFilled; static TVirtualPadPainter::EBoxModeTVirtualPadPainter::kHollow; static TVirtualPadPainter::ETextModeTVirtualPadPainter::kOpaque. private:. TGLFontfF; TGLFontManagerfFM; Bool_tfIsHollowArea; Rgl::Pad::GLLimitsfLimits; Bool_tfLocked; Rgl::Pad::MarkerPainterfMarker; vector<TPoint>fPoly; Rgl::Pad::PolygonStippleSetfSSet; Rgl::Pad::TesselatorfTess; Int_tfVp[4]; vector<Double_t>fVsVertex buffer for tesselator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPadPainter(). Color_t GetLineColor() const; Delegate to gVirtualX. Style_t GetLineStyle() const; Delegate to gVirtualX. Width_t GetLineWidth() const; Delegate to gVirtualX. void SetLineColor(Color_t lcolor); Delegate to gVirtualX. void SetLineStyle(Style_t lstyle); Delegate to gVirtualX. void SetLineWidth(Width_t lwidth); Delegate to gVirtualX. Color_t GetFillColor() const; Delegate to gVirtualX. Style_t GetFillStyle() const; Delegate to gVirtualX. Bool_t IsTransparent() const; Delegate to gVirtualX.; IsTransparent is implemented as inline function in TAttFill. void SetFillColor(Color_t fcolor); Delegate to gVirtualX. void SetFillStyle(Style_t fstyle); Delegate to gVirtualX. void SetOpacity(Int_t percent); Delegate to gVirtualX. Short_t GetTextAlign() const; Delegate to gVirtualX. Float_t GetTextAngle() const; Delegate to gVirtualX. Color_t GetTextColor() const; Delegate to gVirtualX. Font_t GetTextFont() const; Delegate to gVirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLPadPainter.html:4985,Inherit,Inheritance,4985,root/html602/TGLPadPainter.html,https://root.cern,https://root.cern/root/html602/TGLPadPainter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst Event *);  insert a new ""event"" in the binary tree ;  ; virtual TClass * IsA () const;  ; Float_t Max (Types::ESBType sb, UInt_t var);  access to Maximum for signal and background for each variable ;  ; Float_t Mean (Types::ESBType sb, UInt_t var);  access to mean for signal and background for each variable ;  ; Float_t Min (Types::ESBType sb, UInt_t var);  access to Minimum for signal and background for each variable ;  ; void NormalizeTree ();  Normalisation of tree. ;  ; Float_t RMS (Types::ESBType sb, UInt_t var);  access to RMS for signal and background for each variable ;  ; Float_t RMS (UInt_t var);  access to RMS for each variable ;  ; BinarySearchTreeNode * Search (Event *event) const;  search the tree to find the node matching ""event"" ;  ; Double_t SearchVolume (Volume *, std::vector< const TMVA::BinarySearchTreeNode * > *events=nullptr);  search the whole tree and add up all weights of events that lie within the given volume ;  ; Int_t SearchVolumeWithMaxLimit (TMVA::Volume *, std::vector< const TMVA::BinarySearchTreeNode * > *events=nullptr, Int_t=-1);  recursively walk through the daughter nodes and add up all weights of events that lie within the given volume a maximum number of events can be given ;  ; void SetNormalize (Bool_t norm);  ; void SetPeriode (Int_t p);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::BinaryTree;  BinaryTree (void);  constructor for a yet ""empty"" tree. Needs to be filled afterwards ;  ; virtual ~BinaryTree ();  destructor (deletes the nodes and ""events"" if owned by the tree ;  ; virtual void * AddXMLTo (void *parent) const;  add attributes to XML ;  ; UInt_t CountNodes (Node *n=nullptr);  return the number of nodes in the tree. (make a new count --> takes time) ;  ; Node * GetLeftDaughter (Node *n);  get left daughter node current node ""n"" ;  ; UInt_t GetNNodes () const;  ; Node * GetRightDaughter (Node *n);  get right ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:2213,variab,variable,2213,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,3,"['inherit', 'variab']","['inherited', 'variable']"
Modifiability,"nst EventConstList & ; eventSample, . DecisionTreeNode * ; node . ). inline . Definition at line 108 of file DecisionTree.h. ◆ TrainNodeFast(). Double_t TMVA::DecisionTree::TrainNodeFast ; (; const EventConstList & ; eventSample, . TMVA::DecisionTreeNode * ; node . ). Decide how to split a node using one of the variables that gives the best separation of signal/background. ; In order to do this, for each variable a scan of the different cut values in a grid (grid = fNCuts) is performed and the resulting separation gains are compared. in addition to the individual variables, one can also ask for a fisher discriminant being built out of (some) of the variables and used as a possible multivariate split. ; Definition at line 1374 of file DecisionTree.cxx. ◆ TrainNodeFull(). Double_t TMVA::DecisionTree::TrainNodeFull ; (; const EventConstList & ; eventSample, . TMVA::DecisionTreeNode * ; node . ). train a node by finding the single optimal cut for a single variable that best separates signal and background (maximizes the separation gain) ; Definition at line 2536 of file DecisionTree.cxx. Member Data Documentation. ◆ fAnalysisType. Types::EAnalysisType TMVA::DecisionTree::fAnalysisType. private . kClassification(=0=false) or kRegression(=1=true) ; Definition at line 239 of file DecisionTree.h. ◆ fDataSetInfo. DataSetInfo* TMVA::DecisionTree::fDataSetInfo. private . Definition at line 241 of file DecisionTree.h. ◆ fgDebugLevel. const Int_t TMVA::DecisionTree::fgDebugLevel = 0. staticprivate . debug level determining some printout/control plots etc. ; Definition at line 236 of file DecisionTree.h. ◆ fgRandomSeed. const Int_t TMVA::DecisionTree::fgRandomSeed = 0. staticprivate . Definition at line 69 of file DecisionTree.h. ◆ fMaxDepth. UInt_t TMVA::DecisionTree::fMaxDepth. private . max depth ; Definition at line 234 of file DecisionTree.h. ◆ fMinLinCorrForFisher. Double_t TMVA::DecisionTree::fMinLinCorrForFisher. private . the minimum linear correlation between two variabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:27189,variab,variable,27189,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"nst Float_t* p); voidTGLObject::SetAxisAlignedBBox(Float_t xmin, Float_t xmax, Float_t ymin, Float_t ymax, Float_t zmin, Float_t zmax); Bool_tTGLObject::SetModelCheckClass(TObject* obj, TClass* cls). private:. TEveTextGL(const TEveTextGL&); TEveTextGL&operator=(const TEveTextGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TGLFontfFontFTFont wrapper; TEveText*fMmodel object.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); Double_tfX[4][3]3D position of font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTextGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Actual rendering code.; Virtual from TGLLogicalShape. TEveTextGL(const TEveTextGL& ). TEveTextGL& operator=(const TEveTextGL& ). virtual ~TEveTextGL(); {}. » Last changed: root/eve:$Id: TEveTextGL.h 30418 2009-09-24 17:10:11Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTextGL.html:3912,Inherit,Inheritance,3912,root/html532/TEveTextGL.html,https://root.cern,https://root.cern/root/html532/TEveTextGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst Int_t n, TArrayD &Aa, TArrayI &Aiw, TArrayD &Aw, const Int_t maxfrt, TVectorD &b, TArrayI &Aiw1, const Int_t nsteps, Int_t *icntl, Int_t *info);  Main routine for solving Ax=b. ;  ; static void Solve_sub1 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, Int_t &latop, Int_t *icntl);  Help routine for solving. ;  ; static void Solve_sub2 (const Int_t n, Double_t *a, Int_t *iw, Double_t *w, Double_t *rhs, Int_t *iw2, const Int_t nblk, const Int_t latop, Int_t *icntl);  Help routine for solving. ;  ;  Static Protected Member Functions inherited from TDecompBase; static void DiagProd (const TVectorD &diag, Double_t tol, Double_t &d1, Double_t &d2);  . Protected Attributes; TMatrixDSparse fA;  ; Double_t fCntl [6];  ; TArrayI fColFact;  ; TArrayD fFact;  ; Int_t fIcntl [31];  ; TArrayI fIkeep;  ; Int_t fInfo [21];  ; Double_t fIPessimism;  ; TArrayI fIw;  ; TArrayI fIw1;  ; TArrayI fIw2;  ; Int_t fMaxfrt;  ; Int_t fNnonZeros;  ; Int_t fNrows;  ; Int_t fNsteps;  ; Double_t fPrecision;  ; TArrayI fRowFact;  ; Double_t fRPessimism;  ; Int_t fVerbose;  ; TArrayD fW;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompSparse.html:16330,inherit,inherited,16330,doc/master/classTDecompSparse.html,https://root.cern,https://root.cern/doc/master/classTDecompSparse.html,1,['inherit'],['inherited']
Modifiability,"nst Int_t ; y). overridevirtual . Set top of BoundingBox to a value (resize in y direction on top) ; Implements TAttBBox2D.; Definition at line 667 of file TLine.cxx. ◆ SetBBoxY2(). void TLine::SetBBoxY2 ; (; const Int_t ; y). overridevirtual . Set bottom of BoundingBox to a value (resize in y direction on bottom) ; Implements TAttBBox2D.; Definition at line 680 of file TLine.cxx. ◆ SetHorizontal(). void TLine::SetHorizontal ; (; Bool_t ; set = kTRUE). Force the line to be drawn horizontally. ; Makes fY2 equal to fY1. The line length is kept. TArrow and TGaxis also get this function by inheritance. ; Definition at line 478 of file TLine.cxx. ◆ SetNDC(). void TLine::SetNDC ; (; Bool_t ; isNDC = kTRUE). virtual . Set NDC mode on if isNDC = kTRUE, off otherwise. ; Definition at line 467 of file TLine.cxx. ◆ SetVertical(). void TLine::SetVertical ; (; Bool_t ; set = kTRUE). Force the line to be drawn vertically. ; Makes fX2 equal to fX1. The line length is kept. TArrow and TGaxis also get this function by inheritance. ; Definition at line 499 of file TLine.cxx. ◆ SetX1(). virtual void TLine::SetX1 ; (; Double_t ; x1). inlinevirtual . Definition at line 65 of file TLine.h. ◆ SetX2(). virtual void TLine::SetX2 ; (; Double_t ; x2). inlinevirtual . Definition at line 66 of file TLine.h. ◆ SetY1(). virtual void TLine::SetY1 ; (; Double_t ; y1). inlinevirtual . Definition at line 67 of file TLine.h. ◆ SetY2(). virtual void TLine::SetY2 ; (; Double_t ; y2). inlinevirtual . Definition at line 68 of file TLine.h. ◆ Streamer(). void TLine::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TLine. ; Reimplemented from TObject.; Definition at line 518 of file TLine.cxx. ◆ StreamerNVirtual(). void TLine::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 79 of file TLine.h. Member Data Documentation. ◆ fX1. Double_t TLine::fX1 {0}. protected . X of 1st point. ; Definition at line 25 of file TLine.h. ◆ fX2. Double_t TL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine.html:22793,inherit,inheritance,22793,doc/master/classTLine.html,https://root.cern,https://root.cern/doc/master/classTLine.html,1,['inherit'],['inheritance']
Modifiability,"nst ROOT::Math::LorentzRotation& rhs) const; voidRectify(); voidSetComponents(double* begin, double* end); voidSetComponents(ROOT::Math::LorentzRotation::Scalar xx, ROOT::Math::LorentzRotation::Scalar xy, ROOT::Math::LorentzRotation::Scalar xz, ROOT::Math::LorentzRotation::Scalar xt, ROOT::Math::LorentzRotation::Scalar yx, ROOT::Math::LorentzRotation::Scalar yy, ROOT::Math::LorentzRotation::Scalar yz, ROOT::Math::LorentzRotation::Scalar yt, ROOT::Math::LorentzRotation::Scalar zx, ROOT::Math::LorentzRotation::Scalar zy, ROOT::Math::LorentzRotation::Scalar zz, ROOT::Math::LorentzRotation::Scalar zt, ROOT::Math::LorentzRotation::Scalar tx, ROOT::Math::LorentzRotation::Scalar ty, ROOT::Math::LorentzRotation::Scalar tz, ROOT::Math::LorentzRotation::Scalar tt). Data Members; public:. enum ELorentzRotationMatrixIndex { kXX; kXY; kXZ; kXT; kYX; kYY; kYZ; kYT; kZX; kZY; kZZ; kZT; kTX; kTY; kTZ; kTT; };. private:. ROOT::Math::LorentzRotation::ScalarfM[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; LorentzRotation(); ========== Constructors and Assignment =====================. Default constructor (identity transformation). LorentzRotation(double* begin, double* end). Construct given a pair of pointers or iterators defining the; beginning and end of an array of sixteen Scalars. { SetComponents(begin,end); }. LorentzRotation( LorentzRotation const & r ); The compiler-generated and dtor are OK but we have implementwd the copy-ctor and; assignment operators since we have a template assignment. Copy constructor. explicit LorentzRotation( Boost const & b ). Construct from a pure boost. { b.GetLorentzRotation( fM+0 ); }. explicit LorentzRotation( BoostX const & bx ); { bx.GetLorentzRotation( fM+0 ); }. explicit LorentzRotation( BoostY const & by ); { by.GetLorentzRotation( fM+0 ); }. explicit LorentzRotation( BoostZ const & bz ); { bz.GetLorentzRotation( fM+0 ); }. explicit LorentzRotation( Rotation3D const & r ). Construct from a 3-D ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__LorentzRotation.html:6322,Inherit,Inheritance,6322,root/html532/ROOT__Math__LorentzRotation.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__LorentzRotation.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindCPAsymVar.h>. Inheritance diagram for RooUnblindCPAsymVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindCPAsymVar() [1/4]. RooUnblindCPAsymVar::RooUnblindCPAsymVar ; (; ). Default constructor. ; Definition at line 40 of file RooUnblindCPAsymVar.cxx. ◆ RooUnblindCPAsymVar() [2/4]. RooUnblindCPAsymVar::RooUnblindCPAsymVar ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . RooAbsReal & ; cpasym . ). Constructor from a given RooAbsReal (to hold the blind value) and a set of blinding parameters. ; Definition at line 47 of file RooUnblindCPAsymVar.cxx. ◆ RooUnblindCPAsymVar() [3/4]. RooUnblindCPAsymVar::RooUnblindCPAsymVar ; (; const char * ; name, . cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindCPAsymVar.html:61914,inherit,inherited,61914,doc/master/classRooUnblindCPAsymVar.html,https://root.cern,https://root.cern/doc/master/classRooUnblindCPAsymVar.html,1,['inherit'],['inherited']
Modifiability,"nst RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindOffset.h>. Inheritance diagram for RooUnblindOffset:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindOffset() [1/4]. RooUnblindOffset::RooUnblindOffset ; (; ). default . ◆ RooUnblindOffset() [2/4]. RooUnblindOffset::RooUnblindOffset ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; scale, . RooAbsReal & ; blindValue . ). Constructor from a given RooAbsReal (to hold the blind value) and a set of blinding parameters. ; Definition at line 40 of file RooUnblindOffset.cxx. ◆ RooUnblindOffset() [3/4]. RooUnblindOffset::RooUnblindOffset ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; scale, . RooAbsReal & ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindOffset.html:61815,inherit,inherited,61815,doc/master/classRooUnblindOffset.html,https://root.cern,https://root.cern/doc/master/classRooUnblindOffset.html,1,['inherit'],['inherited']
Modifiability,"nst RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindPrecision.h>. Inheritance diagram for RooUnblindPrecision:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindPrecision() [1/4]. RooUnblindPrecision::RooUnblindPrecision ; (; ). default . ◆ RooUnblindPrecision() [2/4]. RooUnblindPrecision::RooUnblindPrecision ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; centralValue, . double ; scale, . RooAbsReal & ; blindValue, . bool ; sin2betaMode = false . ). Constructor from a given RooAbsReal (to hold the blind value) and a set of blinding parameters. ; Definition at line 40 of file RooUnblindPrecision.cxx. ◆ RooUnblindPrecision() [3/4]. RooUnblindPrecision::RooUnblindPrecision ; (; const char * ; na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindPrecision.html:61940,inherit,inherited,61940,doc/master/classRooUnblindPrecision.html,https://root.cern,https://root.cern/doc/master/classRooUnblindPrecision.html,1,['inherit'],['inherited']
Modifiability,"nst RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsHiddenReal; static RooCategory * _dummyBlindState = nullptr;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUnblindUniform.h>. Inheritance diagram for RooUnblindUniform:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUnblindUniform() [1/3]. RooUnblindUniform::RooUnblindUniform ; (; ). default . ◆ RooUnblindUniform() [2/3]. RooUnblindUniform::RooUnblindUniform ; (; const char * ; name, . const char * ; title, . const char * ; blindString, . double ; scale, . RooAbsReal & ; blindValue . ). Constructor from a given RooAbsReal (to hold the blinded value) and a set of blinding parameters. ; Parameters. nameName of this transformation ; titleTitle (for plotting) ; blindStringString to initialise the random generator ; scaleScale the offset. High values make the blinding more violent. ; blindValueThe paramet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindUniform.html:61637,inherit,inherited,61637,doc/master/classRooUnblindUniform.html,https://root.cern,https://root.cern/doc/master/classRooUnblindUniform.html,1,['inherit'],['inherited']
Modifiability,"nst RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum State { Initialize; Client; Server; Inline; };; enum Message { SendReal; SendCat; Calculate; Retrieve; ReturnValue; Terminate; ConstOpt; Verbose; RetrieveErrors; SendError; LogEvalError; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooRealProxy_argFunction to calculate in parallel process; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; Bool_t_calcInProgress; RooRefCountListR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealMPFE.html:31044,Config,ConfigChange,31044,root/html532/RooRealMPFE.html,https://root.cern,https://root.cern/root/html532/RooRealMPFE.html,1,['Config'],['ConfigChange']
Modifiability,"nst RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCallProfiling(Bool_t flag, Int_t nbinX = 40, Int_t nbinCall = 40, Int_t nCallHigh = 1000); voidsetCallWarning(Int_t threshold = 2000); voidsetConvolutionWindow(RooAbsReal& centerParam, RooAbsReal& widthParam, Double_t widthScaleFactor = 1); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFAL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumConvPdf.html:31631,config,config,31631,root/html534/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html534/RooNumConvPdf.html,6,['config'],['config']
Modifiability,"nst RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. private:. RooAbsData*fAsimovDataasimov data set ; RooArgSetfAsimovGlobObssnapshot of Asimov global observables ; RooArgSetfBestFitParamssnapshot of all best fitted Parameter values; RooArgSetfBestFitPoisnapshot of best fitted POI values; doublefNLLAsimov; doublefNLLObs; boolfOneSidedfor one sided PL test statistic (upper limits); boolfOneSidedDiscoveryfor one sided PL test statistic (for discovery); intfUseQTildeflag to indicate if using qtilde or not (-1 (default based on RooRealVar)), 0 false, 1 (true); static intfgPrintLevelcontrol print level (0 minimal, 1 normal, 2 debug). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetPrintLevel(int level); set print level (static function); 0 minimal, 1 normal, 2 debug. AsymptoticCalculator(RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, bool nominalAsimov = false); constructor for asymptotic calculator from Data set and ModelConfig; The constructor will perform a global fit of the model to the data; and build an Asimov data set.; It will then also fit the model to the Asimov data set to find the likelihood value; of the Asimov data set; nominalAsimov is an option for using Asimov data set obtained using nominal nuisance parameter values; By default the nuisance parameters are fitted to the data; NOTE: If a fit has been done before, one for speeding up could set all the initial prameters; to the fit value and in addition set the null snapshot to the best fit. Double_t EvaluateNLL(RooAbsPdf& pdf, RooAbsData& data, const RooArgSet* condObs, const RooArgSet* poi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__AsymptoticCalculator.html:5351,Inherit,Inheritance,5351,root/html534/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__AsymptoticCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst RooArgProxy& c, const RooArgProxy& d) const; Utility function for use in getAnalyticalIntegral(). If the; contents of proxies a,b,c,d occur in set 'allDeps' then the arguments; held in a,b,c,d are copied from allDeps to analDeps. Bool_t matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Utility function for use in getAnalyticalIntegral(). If the; contents of 'refset' occur in set 'allDeps' then the arguments; held in 'refset' are copied from allDeps to analDeps. Bool_t matchArgsByName(const RooArgSet& allArgs, RooArgSet& matchedArgs, const TList& nameList) const; Check if allArgs contains matching elements for each name in nameList. If it does,; add the corresponding args from allArgs to matchedArgs and return kTRUE. Otherwise; return kFALSE and do not change matchedArgs. RooNumIntConfig* defaultIntegratorConfig(); Returns the default numeric integration configuration for all RooAbsReals. RooNumIntConfig* specialIntegratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumIntConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig() const; Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:59525,config,configuration,59525,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,9,['config'],['configuration']
Modifiability,"nst RooArgSet &set);  specify the parameters of interest in the interval ;  ; virtual void SetPriorPdf (RooAbsPdf &pdf);  Set only the Prior Pdf. ;  ; void SetScanOfPosterior (int nbin=100);  use directly the approximate posterior function obtained by binning it in nbins by default the cdf is used by integrating the posterior if a value of nbin <= 0 the cdf function will be used ;  ; void SetShortestInterval ();  set the Bayesian calculator to compute the shortest interval (default is central interval) to switch off SetLeftSideTailFraction to the right value ;  ; void SetTestSize (double size) override;  set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval) ;  ; double Size () const override;  Get the size of the test (eg. rate of Type I error) ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooStats::IntervalCalculator; virtual ~IntervalCalculator ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1BayesianCalculator.html:7212,inherit,inherited,7212,doc/master/classRooStats_1_1BayesianCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1BayesianCalculator.html,2,['inherit'],['inherited']
Modifiability,"nst RooArgSet& iset, const RooArgSet& nset, const char* isetRangeName) const; Make an appropriate automatic name for a RooGenProdProj object in getPartIntList(). Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force RooRealIntegral to offer all observables for internal integration. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Determine which part (if any) of given integral can be performed analytically.; If any analytical integration is possible, return integration scenario code. RooProdPdf implements two strategies in implementing analytical integrals. First, PDF components whose entire set of dependents are requested to be integrated; can be dropped from the product, as they will integrate out to 1 by construction. Second, RooProdPdf queries each remaining component PDF for its analytical integration; capability of the requested set ('allVars'). It finds the largest common set of variables; that can be integrated by all remaining components. If such a set exists, it reconfirms that; each component is capable of analytically integrating the common set, and combines the components; individual integration codes into a single integration code valid for RooProdPdf. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Bool_t checkObservables(const RooArgSet* nset) const; Obsolete. RooAbsPdf::ExtendMode extendMode() const; If this product contains exactly one extendable p.d.f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset) const; Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooProdPdf.html:52307,variab,variables,52307,root/html528/RooProdPdf.html,https://root.cern,https://root.cern/root/html528/RooProdPdf.html,10,['variab'],['variables']
Modifiability,"nst RooArgSet& iset, const RooArgSet& nset, const char* isetRangeName) const; Make an appropriate automatic name for a RooGenProdProj object in getPartIntList(). Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force RooRealIntegral to offer all observables for internal integration. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Determine which part (if any) of given integral can be performed analytically.; If any analytical integration is possible, return integration scenario code. RooProdPdf implements two strategies in implementing analytical integrals. First, PDF components whose entire set of dependents are requested to be integrated; can be dropped from the product, as they will integrate out to 1 by construction. Second, RooProdPdf queries each remaining component PDF for its analytical integration; capability of the requested set ('allVars'). It finds the largest common set of variables; that can be integrated by all remaining components. If such a set exists, it reconfirms that; each component is capable of analytically integrating the common set, and combines the components; individual integration codes into a single integration code valid for RooProdPdf. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Bool_t checkObservables(const RooArgSet* nset) const; Obsolete. RooAbsPdf::ExtendMode extendMode() const; If this product contains exactly one extendable p.d.f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset); Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooProdPdf.html:50258,variab,variables,50258,root/html526/RooProdPdf.html,https://root.cern,https://root.cern/root/html526/RooProdPdf.html,1,['variab'],['variables']
Modifiability,"nst RooArgSet& set) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; Bool_tRooAbsHiddenReal::isHidden() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooUnblindCPAsymVar.html:16509,Inherit,InheritsFrom,16509,root/html534/RooUnblindCPAsymVar.html,https://root.cern,https://root.cern/root/html534/RooUnblindCPAsymVar.html,12,['Inherit'],['InheritsFrom']
Modifiability,"nst RooArgSet& set) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; Bool_tisHidden() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsHiddenReal.html:16054,Inherit,InheritsFrom,16054,root/html534/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html534/RooAbsHiddenReal.html,3,['Inherit'],['InheritsFrom']
Modifiability,"nst RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; virtual Double_tglobalNormalization() const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsOptTestStatistic::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsOptTestStatistic::isSealed() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDataWeightedAverage.html:16155,Inherit,InheritsFrom,16155,root/html532/RooDataWeightedAverage.html,https://root.cern,https://root.cern/root/html532/RooDataWeightedAverage.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst RooArgSet* set=nullptr) const override ;; 190 virtual double getLogVal(const RooArgSet* set=nullptr) const ;; 191 ; 192 void getLogProbabilities(std::span<const double> pdfValues, double * output) const;; 193 ; 194 /// \copydoc getNorm(const RooArgSet*) const; 195 double getNorm(const RooArgSet& nset) const {; 196 return getNorm(&nset) ;; 197 }; 198 virtual double getNorm(const RooArgSet* set=nullptr) const ;; 199 ; 200 virtual void resetErrorCounters(Int_t resetValue=10) ;; 201 void setTraceCounter(Int_t value, bool allNodes=false) ;; 202 ; 203 double analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName=nullptr) const override ;; 204 ; 205 /// Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term.; 206 /// Always returns false, unless a PDF overrides this function.; 207 virtual bool selfNormalized() const {; 208 return false ;; 209 }; 210 ; 211 // Support for extended maximum likelihood, switched off by default; 212 enum ExtendMode { CanNotBeExtended, CanBeExtended, MustBeExtended } ;; 213 /// Returns ability of PDF to provide extended likelihood terms. Possible; 214 /// answers are in the enumerator RooAbsPdf::ExtendMode.; 215 /// This default implementation always returns CanNotBeExtended.; 216 virtual ExtendMode extendMode() const { return CanNotBeExtended; }; 217 /// If true, PDF can provide extended likelihood term.; 218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:10079,extend,extended,10079,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,2,['extend'],['extended']
Modifiability,"nst RooArgSet*GetDetailedOutput() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::MinNLLTestStatMinNLLTestStat(); RooStats::MinNLLTestStatMinNLLTestStat(RooAbsPdf& pdf); RooStats::MinNLLTestStatMinNLLTestStat(const RooStats::MinNLLTestStat& rhs); RooStats::MinNLLTestStat&operator=(const RooStats::MinNLLTestStat& rhs); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; voidSetLOffset(Bool_t flag = kTRUE); voidSetMinimizer(const char* minimizer); voidSetOneSided(Bool_t flag = true); voidSetOneSidedDiscovery(Bool_t flag = true); voidSetPrintLevel(Int_t printlevel); voidSetReuseNLL(Bool_t flag); voidSetStrategy(Int_t strategy); voidSetTolerance(double tol); virtual voidSetVarName(const char* name); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. RooStats::ProfileLikelihoodTestStat*fProflts. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinNLLTestStat(); Proof constructor. Do not use. MinNLLTestStat(RooAbsPdf& pdf). MinNLLTestStat(const RooStats::MinNLLTestStat& rhs). MinNLLTestStat & operator=(const RooStats::MinNLLTestStat& rhs). virtual ~MinNLLTestStat(). void SetOneSided(Bool_t flag = true); {fProflts->SetOneSided(flag);}. void SetOneSidedDiscovery(Bool_t flag = true); {fProflts->SetOneSidedDiscovery(flag);}. void SetReuseNLL(Bool_t flag); { fProflts->SetReuseNLL(flag); }. void SetMinimizer(const char* minimizer); { fProflts->SetMinimizer(minimizer); }. void SetStrategy(Int_t strategy); { fProflts->SetStrategy(strategy); }. void SetTolerance(double tol); { fProflts->SetTolerance(tol); }. void SetPrintLevel(Int_t printlevel); { fProflts->SetPrintLevel(printlevel); }. void SetLOffset(Bool_t flag = kTRUE); { fProflts->SetLOffset(flag) ; }. Double_t Evaluate(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__MinNLLTestStat.html:1767,Inherit,Inheritance,1767,root/html534/RooStats__MinNLLTestStat.html,https://root.cern,https://root.cern/root/html534/RooStats__MinNLLTestStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst RooArgSet*RooStats::ToyMCSampler::fNuisancePars; vector<RooAbsPdf*>fNullDensities; vector<RooAbsReal*>fNullNLLs!; vector<const RooArgSet*>fNullSnapshots; const RooArgSet*RooStats::ToyMCSampler::fObservables; const RooArgSet*RooStats::ToyMCSampler::fParametersForTestStat; RooAbsPdf*RooStats::ToyMCSampler::fPdfmodel (can be alt or null); RooAbsPdf*RooStats::ToyMCSampler::fPriorNuisanceprior pdf for nuisance parameters; RooStats::ProofConfig*RooStats::ToyMCSampler::fProofConfig!; const RooDataSet*RooStats::ToyMCSampler::fProtoDatain dev; boolfReuseNLL; stringRooStats::ToyMCSampler::fSamplingDistNamename of the model; Double_tRooStats::ToyMCSampler::fSize; vector<TestStatistic*>RooStats::ToyMCSampler::fTestStatistics; Double_tRooStats::ToyMCSampler::fToysInTails; RooStats::toysStrategiesfToysStrategy; Bool_tRooStats::ToyMCSampler::fUseMultiGenUse PrepareMultiGen?; static Bool_tRooStats::ToyMCSampler::fgAlwaysUseMultiGenUse PrepareMultiGen always. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~ToyMCImportanceSampler(). void ClearCache(void). RooDataSet* GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint). RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight) const. RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight, vector<double>& impNLLs, double& nullNLL) const. RooAbsData* GenerateToyData(vector<double>& weights) const. RooAbsData* GenerateToyData(vector<double>& weights, vector<double>& nullNLLs, vector<double>& impNLLs) const; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. int CreateImpDensitiesForOnePOIAdaptively(RooAbsPdf& pdf, const RooArgSet& allPOI, RooRealVar& poi, double nStdDevOverlap = 0.5, double poiValueForBackground = 0.0); these might not necessarily be the same thing. int CreateNImpDensitiesForOnePOI(RooAbsPdf& pdf, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html:8435,Inherit,Inheritance,8435,root/html534/RooStats__ToyMCImportanceSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; virtual std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; virtual RooAbsPdf * createProjection (const RooArgSet &iset);  Return a p.d.f that represent a projection of this p.d.f integrated over given observables. ;  ; RooFit::OwningPtr< RooAbsReal > createScanCdf (const RooArgSet &iset, const RooArgSet &nset, Int_t numScanBins, Int_t intOrder);  ; double expectedEvents (const RooArgSet &nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; double extendedTerm (double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;  ; double extendedTerm (double sumEntries, RooArgSet const *nset, double sumEntriesW2=0.0, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; double extendedTerm (RooAbsData const &data, bool weightSquared, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooFitResult > fitTo (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Fit PDF to given dataset. ;  ; RooFit::OwningPtr< RooDataSet > g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:9644,extend,extended,9644,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,2,['extend'],['extended']
Modifiability,"nst RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; virtual std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; virtual RooAbsPdf * createProjection (const RooArgSet &iset);  Return a p.d.f that represent a projection of this p.d.f integrated over given observables. ;  ; RooFit::OwningPtr< RooAbsReal > createScanCdf (const RooArgSet &iset, const RooArgSet &nset, Int_t numScanBins, Int_t intOrder);  ; double expectedEvents (const RooArgSet &nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; virtual double expectedEvents (const RooArgSet *nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; double extendedTerm (double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;  ; double extendedTerm (double sumEntries, RooArgSet const *nset, double sumEntriesW2=0.0, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; double extendedTerm (RooAbsData const &data, bool weightSquared, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; virtual ExtendMode extendMode () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:9587,extend,extended,9587,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,62,['extend'],['extended']
Modifiability,"nst RooDataSet&,; Bool_t randOrder) -- Prototype data for the event generation. If the randOrder flag is; set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated; events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision; with mu equal to the specified number of events. RooMCStudy(const RooAbsPdf& genModel, const RooAbsPdf& fitModel, const RooArgSet& dependents, const char* genOptions = """", const char* fitOptions = """", const RooDataSet* genProtoData = 0, const RooArgSet& projDeps = RooArgSet()); OBSOLETE, RETAINED FOR BACKWARD COMPATIBILY. PLEASE; USE CONSTRUCTOR WITH NAMED ARGUMENTS. Constructor with a generator and fit model. Both models may point; to the same object. The 'dependents' set of variables is generated; in the generator phase. The optional prototype dataset is passed to; the generator. Available generator options; v - Verbose; e - Extended: use Poisson distribution for Nevts generated. Available fit options; See RooAbsPdf::fitTo(). ~RooMCStudy(); Destructor. void addModule(RooAbsMCStudyModule& module); Insert given RooMCStudy add-on module to the processing chain; of this MCStudy object. Bool_t run(Bool_t generate, Bool_t fit, Int_t nSamples, Int_t nEvtPerSample, Bool_t keepGenData, const char* asciiFilePat); Run engine method. Generate and/or fit, according to flags, 'nSamples' samples of 'nEvtPerSample' events.; If keepGenData is set, all generated data sets will be kept in memory and can be accessed; later via genData(). When generating, data sets will be written out in ascii form if the pattern string is supplied; The pattern, which is a template for snprintf, should look something like ""data/toymc_%04d.dat""; and should contain one integer field that encodes the sample serial number. When fitting only, data sets may optionally be read from ascii files, using the same file; pattern. Bool_t generateAndFit(Int_t nS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMCStudy.html:15129,Extend,Extended,15129,root/html532/RooMCStudy.html,https://root.cern,https://root.cern/root/html532/RooMCStudy.html,4,['Extend'],['Extended']
Modifiability,"nst RooRandom&); static Bool_tquasi(UInt_t dimension, Double_t* vector, RooQuasiRandomGenerator* generator = quasiGenerator()); static RooQuasiRandomGenerator*quasiGenerator(); static TRandom*randomGenerator(); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); static Double_tuniform(TRandom* generator = randomGenerator()); static voiduniform(UInt_t dimension, Double_t* vector, TRandom* generator = randomGenerator()). private:. RooRandom(). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom * randomGenerator(); Return a pointer to a singleton random-number generator; implementation. Creates the object the first time it is called. RooQuasiRandomGenerator * quasiGenerator(); Return a pointer to a singleton quasi-random generator; implementation. Creates the object the first time it is called. Double_t uniform(TRandom* generator = randomGenerator()); Return a number uniformly distributed from (0,1). void uniform(UInt_t dimension, Double_t* vector, TRandom* generator = randomGenerator()); Fill the vector provided with random numbers uniformly distributed from (0,1). UInt_t integer(UInt_t max, TRandom* generator = randomGenerator()); Return an integer uniformly distributed from [0,n-1]. Double_t gaussian(TRandom* generator = randomGenerator()); Return a Gaussian random variable with mean 0 and variance 1. Bool_t quasi(UInt_t dimension, Double_t* vector, RooQuasiRandomGenerator* generator = quasiGenerator()); Return a quasi-random number in the range (0,1) using the; Niederreiter base 2 generator described in Bratley, Fox, Niederreiter,; ACM Trans. Model. Comp. Sim. 2, 195 (1992). virtual ~RooRandom(); {}. RooRandom(). » Last changed: Mon Dec 7 13:48:48 2009 » Last generated: 2009-12-07 13:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRandom.html:2144,variab,variable,2144,root/html526/RooRandom.html,https://root.cern,https://root.cern/root/html526/RooRandom.html,1,['variab'],['variable']
Modifiability,"nst RooSimultaneous * _pdf;  Original PDF. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimSplitGenContext.html:16202,inherit,inherited,16202,doc/master/classRooSimSplitGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimSplitGenContext.html,1,['inherit'],['inherited']
Modifiability,"nst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServ * fProofServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIdleTOTimer.html:12393,inherit,inherited,12393,doc/master/classTIdleTOTimer.html,https://root.cern,https://root.cern/doc/master/classTIdleTOTimer.html,1,['inherit'],['inherited']
Modifiability,"nst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCanvasImp;  TCanvasImp (TCanvas *c, const char *name, Int_t x, Int_t y, UInt_t width, UInt_t height);  ;  TCanvasImp (TCanvas *c, const char *name, UInt_t width, UInt_t height);  ;  TCanvasImp (TCanvas *c=nullptr);  ; virtual ~TCanvasImp ();  ; TCanvas * Canvas () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootCanvas.html:26425,inherit,inherited,26425,doc/master/classTRootCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootCanvas.html,1,['inherit'],['inherited']
Modifiability,"nst TConfiguration *config); 2082 {; 2083 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2084 From temp;; 2085 const Int_t offset = config->fOffset;; 2086 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2087 buf >> temp;; 2088 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2089 *x = (To)temp;; 2090 }; 2091 return 0;; 2092 }; 2093 };; 2094 ; 2095 template <typename To>; 2096 struct ConvertBasicType<BitsMarker,To> {; 2097 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2098 {; 2099 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2100 UInt_t temp;; 2101 const Int_t offset = config->fOffset;; 2102 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2103 buf >> temp;; 2104 ; 2105 if ((temp & kIsReferenced) != 0) {; 2106 HandleReferencedTObject(buf,*(void**)iter,config);; 2107 }; 2108 ; 2109 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2110 *x = (To)temp;; 2111 }; 2112 return 0;; 2113 }; 2114 };; 2115 ; 2116 template <typename From, typename To>; 2117 struct ConvertBasicType<WithFactorMarker<From>,To> {; 2118 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2119 {; 2120 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2121 TConfWithFactor *conf = (TConfWithFactor *)config;; 2122 From temp;; 2123 const Int_t offset = config->fOffset;; 2124 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2125 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 2126 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2127 *x = (To)temp;; 2128 }; 2129 return 0;; 2130 }; 2131 };; 2132 ; 2133 template <typename From, typename To>; 2134 struct ConvertBasicType<NoFactorMarker<From>,To> {; 2135 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2136 {; 2137 // Simple conversion from a 'From' on disk t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:86280,config,config,86280,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"nst TEveQuadSetGL&); TEveQuadSetGL&operator=(const TEveQuadSetGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; set<Int_t>*TEveDigitSetGL::fHighlightSet; TEveQuadSet*fM; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveQuadSetGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void DirectDraw(TGLRnrCtx& rnrCtx) const; Draw quad-set with GL. void RenderQuads(TGLRnrCtx& rnrCtx) const; GL rendering for free-quads and rectangles. void RenderLines(TGLRnrCtx& rnrCtx) const; GL rendering for line-types. void RenderHexagons(TGLRnrCtx& rnrCtx) const; GL rendering for hexagons. TEveQuadSetGL(const TEveQuadSetGL& ). TEveQuadSetGL& operator=(const TEveQuadSetGL& ). virtual ~TEveQuadSetGL(); {}. Bool_t IgnoreSizeForOfInterest() const; { return kTRUE; }. » Last changed: root/eve:$Id: TEveQuadSetGL.h 33124 2010-04-21 20:04:42Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveQuadSetGL.html:4174,Inherit,Inheritance,4174,root/html532/TEveQuadSetGL.html,https://root.cern,https://root.cern/root/html532/TEveQuadSetGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst TGLCamera&, const TGLRect&, const TGLBoundingBox&); voidTGLManip::SetActive(Bool_t a); voidTGLManip::SetSelectedWidget(UInt_t s); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidTGLManip::CalcDrawScale(const TGLBoundingBox& box, const TGLCamera& camera, Double_t& base, TGLVector3* axis) const; const UChar_t*TGLManip::ColorFor(UInt_t widget) const; TGLManip&TGLManip::operator=(const TGLManip&). private:. voidLimitScale(Double_t& factor) const. Data Members; protected:. Bool_tTGLManip::fActive! manipulator is active?; TPointTGLManip::fFirstMouse! first (start) mouse position (in WINDOW coords); TPointTGLManip::fLastMouse! last (latest) mouse position (in WINDOW coords); UInt_tTGLManip::fSelectedWidget! active width (axis) component; TGLPhysicalShape*TGLManip::fShape! manipulated shape. private:. TGLVector3fStartScale! initial scaling factors. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLScaleManip(); Construct scale manipulator not bound to any physical shape. TGLScaleManip(TGLPhysicalShape* shape); Construct scale manipulator bound to TGLPhysicalShape 'shape'. ~TGLScaleManip(); Destory the scale manipulator. void Draw(const TGLCamera& camera) const; Draw scale manipulator - tubes with box heads, in local axes of; attached shape, in red(X), green(Y) and blue(Z), with white center sphere.; If selected widget (mouse over) this is drawn in active colour (yellow). Bool_t HandleButton(const Event_t& event, const TGLCamera& camera); Handle mouse button event over manipulator - returns kTRUE if; redraw required kFALSE otherwise. Bool_t HandleMotion(const Event_t& event, const TGLCamera& camera); Handle mouse motion over manipulator - if active (selected; widget) scale physical along selected widget (axis) of the; manipulator, so it tracks mouse action. Returns kTRUE if redraw; required kFALSE otherwise. void LimitScale(Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLScaleManip.html:2146,Inherit,Inheritance,2146,root/html534/TGLScaleManip.html,https://root.cern,https://root.cern/root/html534/TGLScaleManip.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGedPopup(const TGWindow* p, const TGWindow* m, UInt_t w, UInt_t h, UInt_t options = 0, Pixel_t back = GetDefaultFrameBackground()); Create a popup frame. void EndPopup(); Ungrab pointer and unmap popup window. void PlacePopup(Int_t x, Int_t y, UInt_t w, UInt_t h); Place popup window at the specified place. Bool_t HandleButton(Event_t* event); Handle mouse button event in popup window. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages generated by popup window. virtual ~TGedPopup(); { }. » Author: Marek Biskup, Ilka Antcheva 24/07/03 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-14 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGedPopup.html:19357,Inherit,Inheritance,19357,root/html534/TGedPopup.html,https://root.cern,https://root.cern/root/html534/TGedPopup.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNedges;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Navigation data per thread. ;  ;  Protected Attributes inherited from TGeoPcon; Double_t fC1 = 0;  Full phi range flag. ;  ; Double_t fC2 = 0;  Sine of phi1. ;  ; Double_t fCdphi = 0;  Sine of (phi1+phi2)/2. ;  ; Double_t fCm = 0;  Sine of phi1+dphi. ;  ; Double_t fDphi = 0;  ; Bool_t fFullPhi = false;  ; Int_t fNz = 0;  ; Double_t fPhi1 = 0;  ; Double_t * fRmax = nullptr;  ; Double_t * fRmin = nullptr;  ; Double_t fS1 = 0;  Cosine of phi1. ;  ; Double_t fS2 = 0;  Cosine of phi1+dphi. ;  ; Double_t fSm = 0;  Cosine of (phi1+phi2)/2. ;  ; Double_t * fZ = nullptr;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPgon.html:22781,inherit,inherited,22781,doc/master/classTGeoPgon.html,https://root.cern,https://root.cern/doc/master/classTGeoPgon.html,1,['inherit'],['inherited']
Modifiability,"nst TLorentzRotation&); virtual voidTObject::UseCurrentStyle(); TVector3Vect() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_tX() const; Double_tY() const; Double_tZ() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kX; kY; kZ; kT; kNUM_COORDINATES; kSIZE; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Double_tfEtime or energy of (x,y,z,t) or (px,py,pz,e); TVector3fP3 vector component. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLorentzVector(); {}. TLorentzVector(Double_t x, Double_t y, Double_t z, Double_t t); {}. TLorentzVector(const Double_t* carray); {}. TLorentzVector(const Float_t* carray); {}. TLorentzVector(const TVector3& vector3, Double_t t); {}. TLorentzVector(const TLorentzVector& lorentzvector); {}. ~TLorentzVector(); {}. void Boost(Double_t , Double_t , Double_t ); Boost this Lorentz vector. Double_t Rapidity() const; return rapidity. TLorentzVector & Transform(const TLorentzRotation& ); Transform this Lorentzvector. void Streamer(TBuffer& ); Stream an object of class TLorentzVector. void Print(Option_t* option = """") const; Print the TLorentz vector components as (x,y,z,t) and (P,eta,phi,E) representations. Double_t X() const; { return fP.X(); }. Double_t Y() const; { return fP.Y(); }. Double_t Z() const; { return fP.Z(); }. Double_t T() const; { return fE; }. void SetX(Double_t a); { fP.SetX(a); }. void SetY(Double_t a); { fP.SetY(a); }. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLorentzVector.html:14920,Inherit,Inheritance,14920,root/html534/TLorentzVector.html,https://root.cern,https://root.cern/root/html534/TLorentzVector.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst TLorentzRotation&); virtual voidTObject::UseCurrentStyle(); TVector3Vect() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_tX() const; Double_tY() const; Double_tZ() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kX; kY; kZ; kT; kNUM_COORDINATES; kSIZE; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Double_tfEtime or energy of (x,y,z,t) or (px,py,pz,e); TVector3fP3 vector component. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLorentzVector(Double_t x = 0.0, Double_t y = 0.0, Double_t z = 0.0, Double_t t = 0.0); {}. TLorentzVector(const Double_t* carray); {}. TLorentzVector(const Float_t* carray); {}. TLorentzVector(const TVector3& vector3, Double_t t); {}. TLorentzVector(const TLorentzVector& lorentzvector); {}. ~TLorentzVector(); {}. void Boost(Double_t , Double_t , Double_t ); Boost this Lorentz vector. Double_t Rapidity() const; return rapidity. TLorentzVector & Transform(const TLorentzRotation& ); Transform this Lorentzvector. void Streamer(TBuffer& b); Stream an object of class TLorentzVector. void Print(Option_t* option = """") const; Print the TLorentz vector components as (x,y,z,t) and (P,eta,phi,E) representations. Double_t X() const; { return fP.X(); }. Double_t Y() const; { return fP.Y(); }. Double_t Z() const; { return fP.Z(); }. Double_t T() const; { return fE; }. void SetX(Double_t a); { fP.SetX(a); }. void SetY(Double_t a); { fP.SetY(a); }. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLorentzVector.html:14907,Inherit,Inheritance,14907,root/html532/TLorentzVector.html,https://root.cern,https://root.cern/root/html532/TLorentzVector.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWindow.html:8558,inherit,inherits,8558,doc/master/classTGWindow.html,https://root.cern,https://root.cern/doc/master/classTGWindow.html,1,['inherit'],['inherits']
Modifiability,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEditQueryFrame.html:16723,inherit,inherits,16723,doc/master/classTEditQueryFrame.html,https://root.cern,https://root.cern/doc/master/classTEditQueryFrame.html,112,['inherit'],['inherits']
Modifiability,"nst TObject* obj) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TDictionary::DeclId_tGetDeclId() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; UInt_tGetTemplateMinReqArgs() const; UInt_tGetTemplateNargs() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFunctionTemplate&operator=(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFunctionTemplate.html:2790,Inherit,InheritsFrom,2790,root/html602/TFunctionTemplate.html,https://root.cern,https://root.cern/root/html602/TFunctionTemplate.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst TRootApplication&); TRootApplication(const char* appClassName, Int_t* argc, char** argv); virtual~TRootApplication(); virtual const char*TApplicationImp::ApplicationName() const; static TClass*Class(); TGClient*Client() const; virtual Int_tTApplicationImp::ExecCommand(TGWin32Command* code, Bool_t synch); virtual voidHide(); virtual voidIconify(); virtual voidInit(); virtual TClass*IsA() const; virtual Bool_tIsCmdThread(); virtual voidLower(); virtual voidOpen(); TRootApplication&operator=(const TRootApplication&); virtual voidRaise(); virtual voidShow(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TRootApplication(); voidGetOptions(Int_t* argc, char** argv). Data Members; protected:. TStringTApplicationImp::fApplicationNameapplication name. private:. TGClient*fClientpointer to the client environment; char*fDisplaydisplay server to connect to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRootApplication(const char* appClassName, Int_t* argc, char** argv); Create ROOT application environment. ~TRootApplication(); Delete ROOT application environment. Bool_t IsCmdThread(); By default (for UNIX) ROOT is a single thread application; For win32gdk returns kTRUE if it's called from inside of server/cmd thread. void GetOptions(Int_t* argc, char** argv); Handle command line arguments. Arguments handled are removed from the; argument array. Currently only option ""-display xserver"" is considered. TRootApplication(); { fClient = 0; fDisplay = 0; }. TRootApplication(const char* appClassName, Int_t* argc, char** argv). void Show(); { }. void Hide(); { }. void Iconify(); { }. void Init(); { }. void Open(); { }. void Raise(); { }. void Lower(); { }. » Author: Fons Rademakers 15/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-14 16:48; This page has been automat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootApplication.html:1623,Inherit,Inheritance,1623,root/html534/TRootApplication.html,https://root.cern,https://root.cern/root/html534/TRootApplication.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst TSlave* sl, Long_t timeout = -1, Int_t endtype = -1, Bool_t deactonfail = kFALSE); Int_tCollect(TMonitor* mon, Long_t timeout = -1, Int_t endtype = -1, Bool_t deactonfail = kFALSE); Int_tCollectInputFrom(TSocket* s, Int_t endtype = -1, Bool_t deactonfail = kFALSE); Bool_tCreateMerger(TSlave* sl, Int_t port); voidDeActivateAsyncInput(); Int_tDisablePackage(const char* package); Int_tDisablePackageOnClient(const char* package); Int_tDisablePackages(); Int_tExec(const char* cmd, TProof::ESlaves list, Bool_t plusMaster); voidFinalizationDone(); Int_tFindNextFreeMerger(); TSlave*FindSlave(TSocket* s) const; voidFindUniqueSlaves(); Int_tGetActiveMergersCount(); static TList*GetDataSetSrvMaps(const TString& srvmaps); TList*GetListOfBadSlaves() const; TList*GetListOfInactiveSlaves() const; TList*GetListOfSlaves() const; TList*GetListOfUniqueSlaves() const; Int_tGetNumberOfActiveSlaves() const; Int_tGetNumberOfBadSlaves() const; Int_tGetNumberOfInactiveSlaves() const; Int_tGetNumberOfSlaves() const; Int_tGetNumberOfUniqueSlaves() const; Int_tGetQueryReference(Int_t qry, TString& ref); Int_tGoParallel(Int_t nodes, Bool_t accept = kFALSE, Bool_t random = kFALSE); Int_tHandleInputMessage(TSlave* wrk, TMessage* m, Bool_t deactonfail = kFALSE); voidHandleSubmerger(TMessage* mess, TSlave* sl); voidInterrupt(TProof::EUrgent type, TProof::ESlaves list = kActive); voidInterruptCurrentMonitor(); Bool_tIsEndMaster() const; Bool_tIsSync() const; Int_tLoadPackage(const char* package, Bool_t notOnClient = kFALSE, TList* loadopts = 0); Int_tLoadPackageOnClient(const char* package, TList* loadopts = 0); voidMarkBad(TSlave* wrk, const char* reason = 0); voidMarkBad(TSocket* s, const char* reason = 0); voidModifyWorkerLists(const char* ord, Bool_t add); voidNotifyLogMsg(const char* msg, const char* sfx = ""\n""); voidoperator=(const TProof&); voidParseConfigField(const char* config); Int_tPing(TProof::ESlaves list); voidPrintProgress(Long64_t total, Long64_t processed, Float_t procTime = -1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:22994,config,config,22994,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,1,['config'],['config']
Modifiability,"nst TString& expression, const TString& title, const TString& unit, char type = 'F', Double_t min = 0, Double_t max = 0); user inserts discriminating variable in data set info. void AddVariable(const TString& expression, char type = 'F', Double_t min = 0, Double_t max = 0); user inserts discriminating variable in data set info. void AddTarget(const TString& expression, const TString& title = """", const TString& unit = """", Double_t min = 0, Double_t max = 0); user inserts target in data set info. void AddSpectator(const TString& expression, const TString& title = """", const TString& unit = """", Double_t min = 0, Double_t max = 0); user inserts target in data set info. TMVA::DataSetInfo& DefaultDataSetInfo(); default creation. void SetInputVariables(vector<TString>* theVariables); fill input variables in data set. void SetSignalWeightExpression(const TString& variable). void SetBackgroundWeightExpression(const TString& variable). void SetWeightExpression(const TString& variable, const TString& className = """"); Log() << kWarning << DefaultDataSetInfo().GetNClasses() /*fClasses.size()*/ << Endl;. void SetCut(const TString& cut, const TString& className = """"). void SetCut(const TCut& cut, const TString& className = """"). void AddCut(const TString& cut, const TString& className = """"). void AddCut(const TCut& cut, const TString& className = """"). void PrepareTrainingAndTestTree(const TCut& cut, Int_t NsigTrain, Int_t NbkgTrain, Int_t NsigTest, Int_t NbkgTest, const TString& otherOpt = ""SplitMode=Random:!V""); prepare the training and test trees. void PrepareTrainingAndTestTree(const TCut& cut, Int_t Ntrain, Int_t Ntest = -1); prepare the training and test trees; kept for backward compatibility. void PrepareTrainingAndTestTree(const TCut& cut, const TString& splitOpt); prepare the training and test trees; -> same cuts for signal and background. void PrepareTrainingAndTestTree(TCut sigcut, TCut bkgcut, const TString& splitOpt); prepare the training and test trees. TMVA::MethodBase*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Factory.html:17495,variab,variable,17495,root/html528/TMVA__Factory.html,https://root.cern,https://root.cern/root/html528/TMVA__Factory.html,6,['variab'],['variable']
Modifiability,"nst TString& fin = ""TMVA.root""); voidBDT(Int_t itree, TString wfile = ""weights/TMVAnalysis_test_BDT.weights.txt"", TString methName = ""BDT"", Bool_t useTMVAStyle = kTRUE); voidBDT_DeleteTBar(int i); voidBDT_Reg(const TString& fin = ""TMVAReg.root""); voidBDT_Reg(Int_t itree, TString wfile = ""weights/TMVARegression_BDT.weights.xml"", TString methName = ""BDT"", Bool_t useTMVAStyle = kTRUE); voidbdtcontrolplots(TDirectory*); voidBDTControlPlots(TString fin = ""TMVA.root"", Bool_t useTMVAStyle = kTRUE); voidBDTReg_DeleteTBar(int i); voidboostcontrolplots(TDirectory* boostdir); voidBoostControlPlots(TString fin = ""TMVA.root"", Bool_t useTMVAStyle = kTRUE); voidcompareanapp(TString finAn = ""TMVA.root"", TString finApp = ""TMVApp.root"", TMVA::HistType htype = kMVAType, bool useTMVAStyle = kTRUE); voidcorrelations(TString fin = ""TMVA.root"", Bool_t isRegression = kFALSE, Bool_t greyScale = kFALSE, Bool_t useTMVAStyle = kTRUE); voidcorrelationscatters(TString fin, TString var = ""var3"", TString dirName_ = ""InputVariables_Id"", TString title = ""TMVA Input Variable"", Bool_t isRegression = kFALSE, Bool_t useTMVAStyle = kTRUE); voidcorrelationscattersMultiClass(TString fin = ""TMVA.root"", TString var = ""var3"", TString dirName_ = ""InputVariables_Id"", TString title = ""TMVA Input Variable"", Bool_t isRegression = kFALSE, Bool_t useTMVAStyle = kTRUE); voidcorrelationsMultiClass(TString fin = ""TMVA.root"", Bool_t isRegression = kFALSE, Bool_t greyScale = kFALSE, Bool_t useTMVAStyle = kTRUE); voidCorrGui(TString fin = ""TMVA.root"", TString dirName = ""InputVariables_Id"", TString title = ""TMVA Input Variable"", Bool_t isRegression = kFALSE); voidCorrGui_DeleteTBar(); voidCorrGuiMultiClass(TString fin = ""TMVA.root"", TString dirName = ""InputVariables_Id"", TString title = ""TMVA Input Variable"", Bool_t isRegression = kFALSE); voidCorrGuiMultiClass_DeleteTBar(); voiddeviations(TString fin = ""TMVAReg.root"", TMVA::HistType htype = kMVAType, Bool_t showTarget = kTRUE, Bool_t useTMVAStyle = kTRUE); voiddraw_activa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA.html:1644,Variab,Variable,1644,root/html604/TMVA.html,https://root.cern,https://root.cern/root/html604/TMVA.html,1,['Variab'],['Variable']
Modifiability,"nst TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; virtual voidTMVA::MethodANNBase::PrintNetwork() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidTMVA::MethodANNBase::ReadWeightsFromStream(istream& istr); virtual voidTMVA::MethodANNBase::ReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodMLP.html:9430,Config,Configurable,9430,root/html532/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodMLP.html,1,['Config'],['Configurable']
Modifiability,"nst TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0); virtual Bool_tTMVA::MethodBase::MonitorBoost(TMVA::MethodBoost*); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDERS.html:10577,Config,Configurable,10577,root/html532/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDERS.html,1,['Config'],['Configurable']
Modifiability,"nst TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for just an ordinar ""decision trees"". MethodDT(TMVA::DataSetInfo& dsi, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from Reader. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; UseRandomisedTrees choose at each node splitting a random set of variables; UseNvars use UseNvars variables in randomised trees; SeparationType the separation criterion applied in the node splitting; known: GiniIndex; MisClassificationError; CrossEntropy; SDivSqrtSPlusB; nEventsMin: the minimum number of events in a node (leaf criteria, stop splitting); nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then; step size is determined by the events); UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B; (from the training) in the leaf node; NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine; misclassification error rate); PruneMethod The Pruning method:; known: NoPruning // switch off pruning completely; ExpectedError; CostComplexity; PruneStrength a parameter to adjust the amount of pruning. Should be large enouth such that overtraining is avoided"");. void DeclareCompatibilityOptions(); options that are used ONLY for the READER to ensure backward compatibility. void ProcessOptions(); the option string is decoded, for available options see ""DeclareOptions"". void SetMinNodeSize(Double_t sizeInPercent). void SetMinNodeSize(TString sizeInPercent). void Init( void ); common initialisation with defaults for the DT-Method. ~MethodDT( void ); destructor. void Train( void ). Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:21714,variab,variables,21714,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,4,['variab'],['variables']
Modifiability,"nst TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for just an ordinar ""decision trees"". MethodDT(TMVA::DataSetInfo& dsi, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from Reader. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; UseRandomisedTrees choose at each node splitting a random set of variables; UseNvars use UseNvars variables in randomised trees; SeparationType the separation criterion applied in the node splitting; known: GiniIndex; MisClassificationError; CrossEntropy; SDivSqrtSPlusB; nEventsMin: the minimum number of events in a node (leaf criteria, stop splitting); nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then; step size is determined by the events); UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B; (from the training) in the leaf node; NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine; misclassification error rate); PruneMethod The Pruning method:; known: NoPruning // switch off pruning completely; ExpectedError; CostComplexity; PruneStrength a parameter to adjust the amount of pruning. Should be large enouth such that overtraining is avoided"");. void ProcessOptions(); the option string is decoded, for available options see ""DeclareOptions"". void Init( void ); common initialisation with defaults for the DT-Method. ~MethodDT( void ); destructor. void Train( void ). Bool_t MonitorBoost(TMVA::MethodBoost* booster). Double_t PruneTree(const Int_t methodIndex). Double_t TestTreeQuality(TMVA::DecisionTree* dt). void AddWeightsXMLTo(void* parent) const. void ReadWeightsFro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodDT.html:20714,variab,variables,20714,root/html528/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodDT.html,8,['variab'],['variables']
Modifiability,"nst TString& theOpt, TList& loo) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfConfigDescriptiondescription of this configurable; TStringfConfigNamethe name of this configurable; TMVA::OptionBase*fLastDeclaredOption! last declared option; TListfListOfOptions! option list; TMVA::MsgLogger*fLogger! message logger; Bool_tfLooseOptionCheckingEnabled! checker for option string; TStringfOptions! options string; TStringfReferenceFilereference file for options writing. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Configurable(const TString& theOption = """"); constructor. ~Configurable(); default destructur. void SplitOptions(const TString& theOpt, TList& loo) const; splits the option string at ':' and fills the list 'loo' with the primitive strings. void ResetSetFlag(); resets the IsSet falg for all declare options; to be called before options are read from stream. void ParseOptions(); options parser. void CheckForUnusedOptions() const; checks for unused options in option string. void PrintOptions() const; prints out the options set in the options string and the defaults. void WriteOptionsToStream(ostream& o, const TString& prefix) const; write options to output stream (e.g. in writing the MVA weight files. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Configurable.html:6549,config,configurable,6549,root/html602/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html602/TMVA__Configurable.html,8,['config'],['configurable']
Modifiability,"nst TString& theOption, TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodPDERS&operator=(const TMVA::MethodPDERS&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDERS.html:11473,Config,Configurable,11473,root/html602/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDERS.html,2,['Config'],['Configurable']
Modifiability,"nst TVectorD &x)=0;  ; virtual void CTransmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ; virtual Double_t DataNorm ()=0;  ; virtual void DataRandom (TVectorD &x, TVectorD &y, TVectorD &z, TVectorD &s)=0;  ; virtual TVectorD & GetBa ();  ; virtual void GetDiagonalOfQ (TVectorD &dQ)=0;  ; virtual TVectorD & GetG ();  ; virtual TVectorD & GetiSlowerBound ();  ; virtual TVectorD & GetiSupperBound ();  ; virtual TVectorD & GetiXlowerBound ();  ; virtual TVectorD & GetiXupperBound ();  ; virtual TVectorD & GetSlowerBound ();  ; virtual TVectorD & GetSupperBound ();  ; virtual TVectorD & GetXlowerBound ();  ; virtual TVectorD & GetXupperBound ();  ; virtual Double_t ObjectiveValue (TQpVar *vars)=0;  ; TQpDataBase & operator= (const TQpDataBase &source);  Assignment operator. ;  ; virtual void PutAIntoAt (TMatrixDBase &M, Int_t row, Int_t col)=0;  ; virtual void PutCIntoAt (TMatrixDBase &M, Int_t row, Int_t col)=0;  ; virtual void PutQIntoAt (TMatrixDBase &M, Int_t row, Int_t col)=0;  ; virtual void Qmult (Double_t beta, TVectorD &y, Double_t alpha, const TVectorD &x)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataBase.html:2418,inherit,inherited,2418,doc/master/classTQpDataBase.html,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html,1,['inherit'],['inherited']
Modifiability,"nst TVirtualBranchBrowsable* parent = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TBranch*GetBranch() const; TClass*GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetIconName() const; TList*GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*GetParent() const; voidGetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualBranchBrowsable.html:4555,Inherit,InheritsFrom,4555,root/html532/TVirtualBranchBrowsable.html,https://root.cern,https://root.cern/root/html532/TVirtualBranchBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst TVirtualBranchBrowsable* parent = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TBranch*GetBranch() const; TClass*GetClassType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetIconName() const; TList*GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*GetParent() const; voidGetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualBranchBrowsable&operator=(const TVirtualBranchBrowsabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualBranchBrowsable.html:4522,Inherit,InheritsFrom,4522,root/html602/TVirtualBranchBrowsable.html,https://root.cern,https://root.cern/root/html602/TVirtualBranchBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char * RooNumGenConfig::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file RooNumGenConfig.h. ◆ defaultConfig(). RooNumGenConfig & RooNumGenConfig::defaultConfig ; (; ). static . Return reference to instance of default numeric integrator configuration object. ; Definition at line 44 of file RooNumGenConfig.cxx. ◆ defaultPrintStyle(). RooPrintable::StyleOption RooNumGenConfig::defaultPrintStyle ; (; Option_t * ; opt); const. overridevirtual . Reimplemented from RooPrintable.; Definition at line 302 of file RooNumGenConfig.cxx. ◆ getConfigSection() [1/2]. RooArgSet & RooNumGenConfig::getConfigSection ; (; const char * ; name). Return section with configuration parameters for integrator with given (class) name. ; Definition at line 279 of file RooNumGenConfig.cxx. ◆ getConfigSection() [2/2]. const RooArgSet & RooNumGenConfig::getConfigSection ; (; const char * ; name); const. Retrieve configuration information specific to integrator with given name. ; Definition at line 288 of file RooNumGenConfig.cxx. ◆ IsA(). TClass * RooNumGenConfig::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 75 of file RooNumGenConfig.h. ◆ method1D() [1/2]. RooCategory & RooNumGenConfig::method1D ; (; bool ; cond, . bool ; cat . ). Definition at line 172 of file RooNumGenConfig.cxx. ◆ method1D() [2/2]. const RooCategory & RooNumGenConfig::method1D ; (; bool ; cond, . bool ; cat . ); const. Definition at line 208 of file RooNumGenConfig.cxx. ◆ method2D() [1/2]. RooCategory & RooNumGenConfig::method2D ; (; bool ; cond, . bool ; cat . ). Definition at line 184 of file RooNumGenConfig.cxx. ◆ method2D() [2/2]. const RooCategory & RooNumGenConfig::method2D ; (; bool ; cond, . bool ; cat . ); const. Definition at line 217 of file RooNumGenConfig.cxx. ◆ methodND() [1/2]. RooCategory & RooNumGenConfig::methodND ; (; bool ; cond, . bool ; cat .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenConfig.html:17342,config,configuration,17342,doc/master/classRooNumGenConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumGenConfig.html,1,['config'],['configuration']
Modifiability,"nst char * SetPrompt(const char* newPrompt); Set a new default prompt. It returns the previous prompt.; The prompt may contain a %d which will be replaced by the commend; number. The default prompt is ""root [%d] "". The maximum length of; the prompt is 55 characters. To set the prompt in an interactive; session do:; root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> ""); aap>. Bool_t HandleTermInput(); Handle input coming from terminal. void HandleException(Int_t sig); Handle exceptions (kSigBus, kSigSegmentationViolation,; kSigIllegalInstruction and kSigFloatingException) trapped in TSystem.; Specific TApplication implementations may want something different here. void Terminate(int status); Terminate the application. Reset the terminal to sane mode and call; the logoff macro defined via Rint.Logoff environment variable. void SetEchoMode(Bool_t mode); Set console mode:. mode = kTRUE - echo input symbols; mode = kFALSE - noecho input symbols. Long_t ProcessRemote(const char* line, Int_t* error = 0); Process the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script]; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Int_t TabCompletionHook(char* buf, int* pLoc, ostream& out); Forward tab completion request to our TTabCom::Hook(). TRint(const TRint& ). TRint& operator=(const TRint& ). void Interrupt(); { fInterrupt = kTRUE; }. » Author: Rene Brun 17/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/rint:$Id$ » Last generated: 2015-03-17 21:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRint.html:15172,variab,variable,15172,root/html534/TRint.html,https://root.cern,https://root.cern/root/html534/TRint.html,2,['variab'],['variable']
Modifiability,"nst char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TH1 * fHistogram;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Private Member Functions; void DefVar1D ();  Define vars for 1D Histogram. ;  ; void DefVar2D ();  Define variables for 2D histogram. ;  ; void DefVar3D ();  Define variables for 3D histogram. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProofDraw; enum  { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawHist.html:13772,variab,variables,13772,doc/master/classTProofDrawHist.html,https://root.cern,https://root.cern/doc/master/classTProofDrawHist.html,1,['variab'],['variables']
Modifiability,"nst char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; THttpServer * fServer {nullptr};  ! object server ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class THttpServer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <THttpEngine.h>. Inheritance diagram for THttpEngine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THttpEngine(). THttpEngine::THttpEngine ; (; const char * ; name, . const char * ; title . ). protected . constructor ; Definition at line 25 of file THttpEngine.cxx. Member Function Documentation. ◆ Class(). static TClass * THttpEngine::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THttpEngine::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THttpEngine::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 42 of file THttpEngine.h. ◆ Create(). virtual Bool_t THttpEngine::Create ; (; const char * ; ). inlinevirtual . Method to create all components of engine. ; Called once from by the server ; R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpEngine.html:11630,inherit,inherited,11630,doc/master/classTHttpEngine.html,https://root.cern,https://root.cern/doc/master/classTHttpEngine.html,1,['inherit'],['inherited']
Modifiability,"nst char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDphi1;  ; Float_t * fDz;  ; Int_t fNdiv;  ; Int_t fNz;  ; Float_t fPhi1;  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; Float_t * fRmax;  ; Float_t * fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPCON.h>. Inheritance diagram for TPCON:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPCON() [1/3]. TPCON::TPCON ; (; const TPCON & ; pc). protected . copy constructor ; Definition at line 91 of file TPCON.cxx. ◆ TPCON() [2/3]. TPCON::TPCON ; (; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPCON.html:17899,inherit,inherited,17899,doc/master/classTPCON.html,https://root.cern,https://root.cern/doc/master/classTPCON.html,1,['inherit'],['inherited']
Modifiability,"nst char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:22587,inherit,inherits,22587,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,15,['inherit'],['inherits']
Modifiability,"nst char *name, const char *title, RooAbsReal &_intpdf, const RooArgSet &intObs);  Construct projection of input pdf '_intpdf' over observables 'intObs'. ;  ;  RooProjectedPdf (const RooProjectedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral represent by appropriate element of projection cache. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooAbsPdf * createProjection (const RooArgSet &iset) override;  Special version of RooAbsReal::createProjection that deals with projections of projections. ;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  Force RooRealIntegral to relegate integration of all observables to internal logic. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Mark all requested variables as internally integrated. ;  ; void initGenerator (Int_t) override;  Interface for one-time initialization to setup the generator for the specified code. ;  ; TClass * IsA () const override;  ; void printMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the integration operation. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:2167,variab,variables,2167,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['variab'],['variables']
Modifiability,"nst char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; float fEt {0};  ; float fEta {0};  ; float fPhi {0};  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for RCaloTower:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRCaloTower.html:8952,inherit,inherited,8952,doc/master/classRCaloTower.html,https://root.cern,https://root.cern/doc/master/classRCaloTower.html,1,['inherit'],['inherited']
Modifiability,"nst char *regexp, const char *className, const char *pluginName, const char *ctor=nullptr, const char *origin=nullptr);  Add plugin handler to the list of handlers. ;  ; TPluginHandler * FindHandler (const char *base, const char *uri=nullptr);  Returns the handler if there exists a handler for the specified URI. ;  ; TClass * IsA () const override;  ; void LoadHandlersFromEnv (TEnv *env);  Load plugin handlers specified in config file, like: ;  ; void LoadHandlersFromPluginDirs (const char *base=nullptr);  Load plugin handlers specified via macros in a list of plugin directories. ;  ; void Print (Option_t *opt="""") const override;  Print list of registered plugin handlers. ;  ; void RemoveHandler (const char *base, const char *regexp=nullptr);  Remove handler for the specified base class and the specified regexp. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WritePluginMacros (const char *dir, const char *plugin=nullptr) const;  Write in the specified directory the plugin macros. ;  ; Int_t WritePluginRecords (const char *envFile, const char *plugin=nullptr) const;  Write in the specified environment config file the plugin records. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:5374,plugin,plugin,5374,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,2,['plugin'],['plugin']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGLViewer.h>. Inheritance diagram for TGLRedrawTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLRedrawTimer(). TGLRedrawTimer::TGLRedrawTimer ; (; TGLViewer & ; viewer). inline . Definition at line 408 of file TGLViewer.h. ◆ ~TGLRedrawTimer(). TGLRedrawTimer::~TGLRedrawTimer ; (; ). inlineoverride . Definition at line 410 of file TGLViewer.h. Member Function Documentation. ◆ IsPending(). Bool_t TGLRedrawTimer::IsPending ; (; ); const. inline . Definition at line 417 of file TGLViewer.h. ◆ Notify(). Bool_t TGLRedrawTimer::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLRedrawTimer.html:16780,inherit,inherited,16780,doc/master/classTGLRedrawTimer.html,https://root.cern,https://root.cern/doc/master/classTGLRedrawTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTextView.h>. Inheritance diagram for TViewTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TViewTimer() [1/2]. TViewTimer::TViewTimer ; (; const TViewTimer & ; ). privatedelete . ◆ TViewTimer() [2/2]. TViewTimer::TViewTimer ; (; TGView * ; t, . Long_t ; ms . ). inline . Definition at line 153 of file TGTextView.h. Member Function Documentation. ◆ Notify(). Bool_t TViewTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Reimplemented from TTimer.; Definition at line 60 of file TGTextView.cxx. ◆ operator=(). TViewTimer & TViewTimer::operator= ; (; const TViewTimer & ; )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewTimer.html:16646,inherit,inherited,16646,doc/master/classTViewTimer.html,https://root.cern,https://root.cern/doc/master/classTViewTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TIdleTOTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIdleTOTimer(). TIdleTOTimer::TIdleTOTimer ; (; TProofServ * ; p, . Int_t ; delay . ). inline . Definition at line 448 of file TProofServ.h. Member Function Documentation. ◆ Notify(). Bool_t TIdleTOTimer::Notify ; (; ). overridevirtual . Handle expiration of the idle timer. The session will just be terminated. ; Implements TSysEvtHandler.; Definition at line 515 of file TProofServ.cxx. Member Data Documentation. ◆ fProofServ. TProofServ* TIdleTOTimer::fProofServ. private . Definition at line 445 of file TProofServ.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIdleTOTimer.html:16601,inherit,inherited,16601,doc/master/classTIdleTOTimer.html,https://root.cern,https://root.cern/doc/master/classTIdleTOTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TReaperTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TReaperTimer(). TReaperTimer::TReaperTimer ; (; Long_t ; frequency = 1000). inline . Definition at line 434 of file TProofServ.h. ◆ ~TReaperTimer(). TReaperTimer::~TReaperTimer ; (; ). override . Destructor. ; Definition at line 449 of file TProofServ.cxx. Member Function Documentation. ◆ AddPid(). void TReaperTimer::AddPid ; (; Int_t ; pid). Add an entry for 'pid' in the internal list. ; Definition at line 461 of file TProofServ.cxx. ◆ Notify(). Bool_t TReaperTimer::Notify ; (; ). overridevirtual . Check if any of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTReaperTimer.html:16701,inherit,inherited,16701,doc/master/classTReaperTimer.html,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TProofServ.h>. Inheritance diagram for TShutdownTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TShutdownTimer(). TShutdownTimer::TShutdownTimer ; (; TProofServ * ; p, . Int_t ; delay . ). Construtor. ; Definition at line 404 of file TProofServ.cxx. Member Function Documentation. ◆ Notify(). Bool_t TShutdownTimer::Notify ; (; ). overridevirtual . Handle expiration of the shutdown timer. ; In the case of low activity the process will be aborted. ; Implements TSysEvtHandler.; Definition at line 416 of file TProofServ.cxx. Member Data Documentation. ◆ fProofServ. TProofServ* TShutdownTimer::fProofServ. private",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShutdownTimer.html:16608,inherit,inherited,16608,doc/master/classTShutdownTimer.html,https://root.cern,https://root.cern/doc/master/classTShutdownTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSystem.h>. Inheritance diagram for TProcessEventTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProcessEventTimer(). TProcessEventTimer::TProcessEventTimer ; (; Long_t ; delay). Create async event processor timer. Delay is in milliseconds. ; Definition at line 81 of file TSystem.cxx. Member Function Documentation. ◆ Class(). static TClass * TProcessEventTimer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProcessEventTimer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProcessEventTimer::Class_Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessEventTimer.html:17087,inherit,inherited,17087,doc/master/classTProcessEventTimer.html,https://root.cern,https://root.cern/doc/master/classTProcessEventTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TThread.h>. Inheritance diagram for TThreadTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TThreadTimer(). TThreadTimer::TThreadTimer ; (; Long_t ; ms = kItimerResolution + 10). Create thread timer. ; Definition at line 1194 of file TThread.cxx. Member Function Documentation. ◆ Notify(). Bool_t TThreadTimer::Notify ; (; ). overridevirtual . Periodically execute the TThread::XAction() method in the main thread. ; Implements TSysEvtHandler.; Definition at line 1202 of file TThread.cxx. Libraries for TThreadTimer:. [legend]; The documentation for this class was generated from the following files:; core/thread/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadTimer.html:16553,inherit,inherited,16553,doc/master/classTThreadTimer.html,https://root.cern,https://root.cern/doc/master/classTThreadTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for ROOT::RBrowserTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserTimer(). ROOT::RBrowserTimer::RBrowserTimer ; (; Long_t ; milliSec, . Bool_t ; mode, . RBrowser & ; br . ). inline . !< browser processing postponed requests ; constructor ; Definition at line 52 of file RBrowser.cxx. Member Function Documentation. ◆ Timeout(). void ROOT::RBrowserTimer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process postponed requests in main ROOT thread ; Reimplemented from TTimer.; Definition at line 56 of file RBrowser.cxx. Member Data Documentation. ◆ fBrowser. RBrowser& ROOT::RB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:16636,inherit,inherited,16636,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,6,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for ROOT::RTreeDrawInvokeTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RTreeDrawInvokeTimer(). ROOT::RTreeDrawInvokeTimer::RTreeDrawInvokeTimer ; (; Long_t ; milliSec, . bool ; mode, . RTreeViewer & ; viewer . ). inline . constructor ; Definition at line 91 of file RTreeViewer.cxx. Member Function Documentation. ◆ Timeout(). void ROOT::RTreeDrawInvokeTimer::Timeout ; (; ). inlineoverridevirtual . timeout handler used to process postponed requests in main ROOT thread ; Reimplemented from TTimer.; Definition at line 95 of file RTreeViewer.cxx. Member Data Documentation. ◆ fViewer. RTreeViewer& ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RTreeDrawInvokeTimer.html:16638,inherit,inherited,16638,doc/v632/classROOT_1_1RTreeDrawInvokeTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RTreeDrawInvokeTimer.html,6,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TBlinkTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBlinkTimer(). TBlinkTimer::TBlinkTimer ; (; TGTextEntry * ; t, . Long_t ; ms . ). inline . Definition at line 226 of file TGTextEntry.cxx. Member Function Documentation. ◆ Notify(). Bool_t TBlinkTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 233 of file TGTextEntry.cxx. Member Data Documentation. ◆ fTextEntry. TGTextEntry* TBlinkTimer::fTextEntry. private . Definition at line 224 of file TGTextEntry.cxx. gui/gui/src/TGTextEntry.cxx. TBlinkTimer. ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBlinkTimer.html:16576,inherit,inherited,16576,doc/master/classTBlinkTimer.html,https://root.cern,https://root.cern/doc/master/classTBlinkTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TDispatchTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDispatchTimer(). TDispatchTimer::TDispatchTimer ; (; TProofPlayer * ; p). inline . Definition at line 117 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TDispatchTimer::Notify ; (; ). overridevirtual . Handle expiration of the timer associated with dispatching pending events while processing. ; We must act as fast as possible here, so we just set a flag submitting a request for dispatching pending events ; Implements TSysEvtHandler.; Definition at line 126 of file TProofPlayer.cxx. Member Data Documentation.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDispatchTimer.html:16617,inherit,inherited,16617,doc/master/classTDispatchTimer.html,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TGContainerKeyboardTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGContainerKeyboardTimer(). TGContainerKeyboardTimer::TGContainerKeyboardTimer ; (; TGContainer * ; t). inline . Definition at line 97 of file TGCanvas.cxx. Member Function Documentation. ◆ Notify(). Bool_t TGContainerKeyboardTimer::Notify ; (; ). overridevirtual . single shot timer ; Implements TSysEvtHandler.; Definition at line 104 of file TGCanvas.cxx. Member Data Documentation. ◆ fContainer. TGContainer* TGContainerKeyboardTimer::fContainer. private . Definition at line 95 of file TGCanvas.cxx. gui/gui/src/TGCanvas.cxx. TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainerKeyboardTimer.html:16569,inherit,inherited,16569,doc/master/classTGContainerKeyboardTimer.html,https://root.cern,https://root.cern/doc/master/classTGContainerKeyboardTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TGContainerScrollTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGContainerScrollTimer(). TGContainerScrollTimer::TGContainerScrollTimer ; (; TGContainer * ; t). inline . Definition at line 118 of file TGCanvas.cxx. Member Function Documentation. ◆ Notify(). Bool_t TGContainerScrollTimer::Notify ; (; ). overridevirtual . on-timeout ; Implements TSysEvtHandler.; Definition at line 125 of file TGCanvas.cxx. Member Data Documentation. ◆ fContainer. TGContainer* TGContainerScrollTimer::fContainer. private . Definition at line 116 of file TGCanvas.cxx. gui/gui/src/TGCanvas.cxx. TGContainerScrollTi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainerScrollTimer.html:16557,inherit,inherited,16557,doc/master/classTGContainerScrollTimer.html,https://root.cern,https://root.cern/doc/master/classTGContainerScrollTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TGuiBldDragManagerRepeatTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGuiBldDragManagerRepeatTimer(). TGuiBldDragManagerRepeatTimer::TGuiBldDragManagerRepeatTimer ; (; TGuiBldDragManager * ; m, . Long_t ; ms . ). inline . Definition at line 675 of file TGuiBldDragManager.cxx. Member Function Documentation. ◆ Notify(). Bool_t TGuiBldDragManagerRepeatTimer::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGuiBldDragManagerRepeatTimer.html:16697,inherit,inherited,16697,doc/master/classTGuiBldDragManagerRepeatTimer.html,https://root.cern,https://root.cern/doc/master/classTGuiBldDragManagerRepeatTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for THttpTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THttpTimer(). THttpTimer::THttpTimer ; (; Long_t ; milliSec, . Bool_t ; mode, . THttpServer & ; serv . ). inline . !< server processing requests ; constructor ; Definition at line 51 of file THttpServer.cxx. Member Function Documentation. ◆ IsSlow(). Bool_t THttpTimer::IsSlow ; (; ); const. inline . Definition at line 69 of file THttpServer.cxx. ◆ SetSlow(). void THttpTimer::SetSlow ; (; Bool_t ; flag). inline . Definition at line 53 of file THttpServer.cxx. ◆ Timeout(). void THttpTimer::Timeout ; (; ). inlineoverridevirtual . timeout handle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpTimer.html:16787,inherit,inherited,16787,doc/master/classTHttpTimer.html,https://root.cern,https://root.cern/doc/master/classTHttpTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TPopupDelayTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPopupDelayTimer(). TPopupDelayTimer::TPopupDelayTimer ; (; TGPopupMenu * ; p, . Long_t ; ms . ). inline . Definition at line 102 of file TGMenu.cxx. Member Function Documentation. ◆ Notify(). Bool_t TPopupDelayTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 109 of file TGMenu.cxx. Member Data Documentation. ◆ fPopup. TGPopupMenu* TPopupDelayTimer::fPopup. private . Definition at line 100 of file TGMenu.cxx. gui/gui/src/TGMenu.cxx. TPopupDelayTime",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPopupDelayTimer.html:16581,inherit,inherited,16581,doc/master/classTPopupDelayTimer.html,https://root.cern,https://root.cern/doc/master/classTPopupDelayTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TProctimeTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProctimeTimer(). TProctimeTimer::TProctimeTimer ; (; TProofPlayer * ; p, . Long_t ; to . ). inline . Definition at line 146 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TProctimeTimer::Notify ; (; ). overridevirtual . Handle expiration of the timer associated with dispatching pending events while processing. ; We must act as fast as possible here, so we just set a flag submitting a request for dispatching pending events ; Implements TSysEvtHandler.; Definition at line 155 of file TProofPlayer.cxx. Member D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProctimeTimer.html:16628,inherit,inherited,16628,doc/master/classTProctimeTimer.html,https://root.cern,https://root.cern/doc/master/classTProctimeTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TRepeatTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRepeatTimer(). TRepeatTimer::TRepeatTimer ; (; TGRepeatFireButton * ; button, . Long_t ; ms . ). inline . Definition at line 1871 of file TGNumberEntry.cxx. Member Function Documentation. ◆ Notify(). Bool_t TRepeatTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 1996 of file TGNumberEntry.cxx. Member Data Documentation. ◆ fButton. TGRepeatFireButton* TRepeatTimer::fButton. private . Definition at line 1868 of file TGNumberEntry.cxx. gui/gui/src/TGNumb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRepeatTimer.html:16598,inherit,inherited,16598,doc/master/classTRepeatTimer.html,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TSBRepeatTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSBRepeatTimer(). TSBRepeatTimer::TSBRepeatTimer ; (; TGScrollBar * ; s, . Long_t ; ms, . Int_t ; inc . ). inline . Definition at line 78 of file TGScrollBar.cxx. Member Function Documentation. ◆ GetSmallInc(). Int_t TSBRepeatTimer::GetSmallInc ; (; ); const. inline . Definition at line 82 of file TGScrollBar.cxx. ◆ Notify(). Bool_t TSBRepeatTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Implements TSysEvtHandler.; Definition at line 88 of file TGScrollBar.cxx. Member Data Documentation. ◆ fScr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSBRepeatTimer.html:16646,inherit,inherited,16646,doc/master/classTSBRepeatTimer.html,https://root.cern,https://root.cern/doc/master/classTSBRepeatTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TSingleShotCleaner:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSingleShotCleaner(). TSingleShotCleaner::TSingleShotCleaner ; (; ). inline . Definition at line 58 of file TTimer.cxx. ◆ ~TSingleShotCleaner(). virtual TSingleShotCleaner::~TSingleShotCleaner ; (; ). inlinevirtual . Definition at line 59 of file TTimer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TSingleShotCleaner::Notify ; (; ). inlineoverridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSingleShotCleaner.html:16642,inherit,inherited,16642,doc/master/classTSingleShotCleaner.html,https://root.cern,https://root.cern/doc/master/classTSingleShotCleaner.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TStopTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStopTimer(). TStopTimer::TStopTimer ; (; TProofPlayer * ; p, . Bool_t ; abort, . Int_t ; to . ). Constructor for the timer to stop/abort processing. ; The 'timeout' is in seconds. Make sure that 'to' make sense, i.e. not larger than 10 days; the minimum value is 10 ms (0 does not seem to start the timer ...). ; Definition at line 186 of file TProofPlayer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TStopTimer::Notify ; (; ). overridevirtual . Handle the signal coming from the expiration of the timer associated with an abort or sto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStopTimer.html:16710,inherit,inherited,16710,doc/master/classTStopTimer.html,https://root.cern,https://root.cern/doc/master/classTStopTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TTimeOutTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTimeOutTimer(). TTimeOutTimer::TTimeOutTimer ; (; TMonitor * ; m, . Long_t ; ms . ). Definition at line 85 of file TMonitor.cxx. Member Function Documentation. ◆ Notify(). Bool_t TTimeOutTimer::Notify ; (; ). overridevirtual . This method must be overridden to handle object notification (the base implementation is no-op). ; Different objects in ROOT use the Notify method for different purposes, in coordination with other objects that call this method at the appropriate time.; For example, TLeaf uses it to load class information; TBranchR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimeOutTimer.html:16618,inherit,inherited,16618,doc/master/classTTimeOutTimer.html,https://root.cern,https://root.cern/doc/master/classTTimeOutTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TTipDelayTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTipDelayTimer(). TTipDelayTimer::TTipDelayTimer ; (; TGToolTip * ; tip, . Long_t ; ms . ). inline . Definition at line 60 of file TGToolTip.cxx. Member Function Documentation. ◆ Notify(). Bool_t TTipDelayTimer::Notify ; (; ). overridevirtual . Notify when timer times out and reset the timer. ; Reimplemented from TTimer.; Definition at line 67 of file TGToolTip.cxx. Member Data Documentation. ◆ fTip. TGToolTip* TTipDelayTimer::fTip. private . Definition at line 58 of file TGToolTip.cxx. gui/gui/src/TGToolTip.cxx. TTipDelayTimer. ROOT mas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTipDelayTimer.html:16512,inherit,inherited,16512,doc/master/classTTipDelayTimer.html,https://root.cern,https://root.cern/doc/master/classTTipDelayTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TViewUpdateTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TViewUpdateTimer(). TViewUpdateTimer::TViewUpdateTimer ; (; TGFileContainer * ; t, . Long_t ; ms . ). inline . Definition at line 72 of file TGFSContainer.cxx. Member Function Documentation. ◆ Notify(). Bool_t TViewUpdateTimer::Notify ; (; ). overridevirtual . Reset the timer. ; Reimplemented from TTimer.; Definition at line 243 of file TGFSContainer.cxx. Member Data Documentation. ◆ fContainer. TGFileContainer* TViewUpdateTimer::fContainer. private . Definition at line 69 of file TGFSContainer.cxx. gui/gui/src/TGFSContainer.cxx. TView",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewUpdateTimer.html:16506,inherit,inherited,16506,doc/master/classTViewUpdateTimer.html,https://root.cern,https://root.cern/doc/master/classTViewUpdateTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TTimer; TTime fAbsTime;  ; TString fCommand;  ; Bool_t fIntSyscalls;  ; TObject * fObject;  ; Bool_t fSync;  ; TTime fTime;  ; UInt_t fTimeID;  ; Bool_t fTimeout;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TWebCanvasTimer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWebCanvasTimer(). TWebCanvasTimer::TWebCanvasTimer ; (; TWebCanvas & ; canv). inline . Definition at line 73 of file TWebCanvas.cxx. Member Function Documentation. ◆ IsSlow(). Bool_t TWebCanvasTimer::IsSlow ; (; ); const. inline . Definition at line 75 of file TWebCanvas.cxx. ◆ SetSlow(). void TWebCanvasTimer::SetSlow ; (; Bool_t ; slow = kTRUE). inline . Definition at line 76 of file TWebCanvas.cxx. ◆ Timeout(). void TWebCanvasTimer::Timeout ; (; ). inlineoverridevirtual . used to send control messages to clients ; Reimplemented from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvasTimer.html:16679,inherit,inherited,16679,doc/master/classTWebCanvasTimer.html,https://root.cern,https://root.cern/doc/master/classTWebCanvasTimer.html,3,['inherit'],['inherited']
Modifiability,"nst char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitButton.html:30984,inherit,inherited,30984,doc/master/classTGSplitButton.html,https://root.cern,https://root.cern/doc/master/classTGSplitButton.html,4,['inherit'],['inherited']
Modifiability,"nst char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrame.html:24186,inherit,inherited,24186,doc/master/classTGFrame.html,https://root.cern,https://root.cern/doc/master/classTGFrame.html,1,['inherit'],['inherited']
Modifiability,"nst char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitleP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButtonGroup.html:32092,inherit,inherited,32092,doc/master/classTGButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html,3,['inherit'],['inherited']
Modifiability,"nst char *title);  ; void SetSelectable (Bool_t a);  ; void SetStyle (Short_t st);  ; virtual void SetTitle (const char *title);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Short_t Style () const;  ; void TagViewersChanged ();  Tag all viewers as changed. ;  ;  Public Member Functions inherited from TGLLockable;  TGLLockable ();  ; virtual ~TGLLockable ();  ; ELock CurrentLock () const;  ; Bool_t IsDrawOrSelectLock () const;  ; Bool_t IsLocked () const;  ; Bool_t ReleaseLock (ELock lock) const;  Release current lock, make sure it the same as the 'lock' argument. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TakeLock (ELock lock) const;  Lock the object in mode 'lock'. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualViewer3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualViewer3D * Viewer3D (TVirtualPad *pad=nullptr, Option_t *type="""");  Create a Viewer 3D of specified type. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TGLScene; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:17912,inherit,inherited,17912,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['inherit'],['inherited']
Modifiability,"nst char * ; ref = 0). Return pointer to the full TQueryResult instance owned by the player and referenced by 'ref'. ; If ref = 0 or """", return the last query result. ; Definition at line 2148 of file TProof.cxx. ◆ GetQueryResults(). TList * TProof::GetQueryResults ; (; ). Return pointer to the list of query results in the player. ; Definition at line 2139 of file TProof.cxx. ◆ GetRC() [1/3]. Int_t TProof::GetRC ; (; const char * ; RCenv, . Double_t & ; env, . const char * ; ord = ""0"" . ). Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. ; Definition at line 6691 of file TProof.cxx. ◆ GetRC() [2/3]. Int_t TProof::GetRC ; (; const char * ; RCenv, . Int_t & ; env, . const char * ; ord = ""0"" . ). Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. ; Definition at line 6665 of file TProof.cxx. ◆ GetRC() [3/3]. Int_t TProof::GetRC ; (; const char * ; RCenv, . TString & ; env, . const char * ; ord = ""0"" . ). Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. ; Definition at line 6717 of file TProof.cxx. ◆ GetRealTime(). Float_t TProof::GetRealTime ; (; ); const. inline . Definition at line 930 of file TProof.h. ◆ GetRemoteProtocol(). Int_t TProof::GetRemoteProtocol ; (; ); const. inline . Definition at line 913 of file TProof.h. ◆ GetRunStatus(). ERunStatus TProof::GetRunStatus ; (; ); const. inline . Definition at line 943 of file TProof.h. ◆ GetSandbox(). Int_t TProof::GetSandbox ; (; TString & ; sb, . Bool_t ; assert = kFALSE, . const char * ; rc = 0 . ). protected . Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'. ; Use the existing setting or the default if nothing is found. If 'assert' is kTRUE, make also sure that the path exists. Return 0 on success, -1 on failure ; Definition at line 1016 of file TProof.cxx. ◆ GetSeqNum(). Int_t TProof::GetSeqNum ; (; ); const. inline . Definition at line 918 of file TProof.h. ◆ GetSessionID(). Int_t TProof::GetSessionID ; (; ); const. i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:105046,variab,variable,105046,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['variab'],['variable']
Modifiability,"nst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void CheckCache (const char *fn);  Check the memory cache associated with file 'fn'. ;  ; void CopyFile (const char *fn);  Copy file 'fn' to fDestDir. ;  ; void ReleaseCache (const char *fn);  Release the memory cache associated with file 'fn'. ;  ; void RemoveFile (const char *fn);  Physically remove the file 'fn'. ;  . Private Attributes; TString fDestDir;  ; TPBHandleDSType * fType;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelHandleDataSet.html:11530,inherit,inherited,11530,doc/master/classTSelHandleDataSet.html,https://root.cern,https://root.cern/doc/master/classTSelHandleDataSet.html,2,['inherit'],['inherited']
Modifiability,"nst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TList * fElements;  ; Bool_t fMiniFrame;  ; Float_t fRGBA [4];  ; Float_t fRGBALine [4];  ; Bool_t fRnrElements;  ; Bool_t fRnrFrame;  ; Bool_t fRnrSelf;  ; TGeoShape * fShape;  ; Double_t fTrans [16];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  REveGeoShapeExtract (const REveGeoShapeExtract &)=delete;  ; REveGeoShapeExtract & operator= (const REveGeoShapeExtract &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <ROOT/REveGeoShapeExtract.hxx>. Inheritance diagram for ROOT::Experimental::REveGeoShapeExtract:. This browser is not able to show ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveGeoShapeExtract.html:11516,inherit,inherited,11516,doc/master/classROOT_1_1Experimental_1_1REveGeoShapeExtract.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveGeoShapeExtract.html,1,['inherit'],['inherited']
Modifiability,"nst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <ROOT/RGeoPainter.hxx>. Inheritance diagram for ROOT::RGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeoPainter(). RGeoPainter::RGeoPainter ; (; TGeoManager * ; manager). Definition at line 19 of file RGeoPainter.cxx. ◆ ~RGeoPainter(). RGeoPainter::~RGeoPainter ; (; ). override . Definition at line 25 of file RGeoPainter.cxx. Member Function Documentation. ◆ AddSize3D(). void ROOT::RGeoPainter::AddSize3D ; (; Int_t ; , . Int_t ; , . Int_t ;  . ). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 31 of file RGeoPainter.hxx. ◆ AddTrack(). TVirtualGeoTrack * ROOT::RGeoPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:15039,inherit,inherited,15039,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,2,['inherit'],['inherited']
Modifiability,"nst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TVirtualGeoPainter; static TVirtualGeoPainter * fgGeoPainter = nullptr;  . #include <ROOT/RGeoPainter.hxx>. Inheritance diagram for ROOT::RGeoPainter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeoPainter(). RGeoPainter::RGeoPainter ; (; TGeoManager * ; manager). Definition at line 20 of file RGeoPainter.cxx. ◆ ~RGeoPainter(). RGeoPainter::~RGeoPainter ; (; ). override . Definition at line 26 of file RGeoPainter.cxx. Member Function Documentation. ◆ AddSize3D(). void ROOT::RGeoPainter::AddSize3D ; (; Int_t ; , . Int_t ; , . Int_t ;  . ). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 31 of file RGeoPainter.hxx. ◆ AddTrack(). TVirtualGeoTrack * RGeoPainter:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeoPainter.html:15040,inherit,inherited,15040,doc/master/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeoPainter.html,2,['inherit'],['inherited']
Modifiability,"nst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoElement { kElemUsed = (1ULL << ( 17 )); , kElemDefined = (1ULL << ( 18 )); , kElementChecked = (1ULL << ( 19 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Attributes; Double_t fA;  ; Double_t * fAbundances;  ; Double_t fCoulomb;  ; TObjArray * fIsotopes;  ; Int_t fN;  ; Int_t fNisotopes;  ; Double_t fRadTsai;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoElement (const TGeoElement &other)=delete;  ; void ComputeCoulombFactor ();  Compute Coulomb correction factor (Phys Rev. D50 3-1 (1994) page 1254) ;  ; void ComputeLradTsaiFactor ();  Compute Tsai's Expression for the Radiation Length (Phys Rev. D50 3-1 (1994) page 1254) ;  ; TGeoElement & operator= (const TGeoElement &other)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRefe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElement.html:12018,inherit,inherited,12018,doc/master/classTGeoElement.html,https://root.cern,https://root.cern/doc/master/classTGeoElement.html,1,['inherit'],['inherited']
Modifiability,"nst char * DeclFileName ();  . Protected Member Functions; Double_t FindClosestPhase (Double_t phi0, Double_t cosine);  Finds the closest phase to phi0 that gives cos(phase) = cosine. ;  ; THelix & operator= (const THelix &);  assignment operator ;  ; void SetRotMatrix ();  Set the rotational matrix according to the helix axis. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fAxis [3];  ; Double_t fPhi0;  ; Double_t fRange [2];  ; TRotMatrix * fRotMat;  ; Double_t fVt;  ; Double_t fVz;  ; Double_t fW;  ; Double_t fX0;  ; Double_t fY0;  ; Double_t fZ0;  ;  Protected Attributes inherited from TPolyLine3D; Int_t fLastPoint {-1};  The index of the last filled point. ;  ; Int_t fN {0};  Number of points. ;  ; TString fOption;  options ;  ; Float_t * fP {nullptr};  [3*fN] Array of 3-D coordinates (x,y,z) ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Static Protected Attributes; static Int_t fgMinNSeg =5;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHelix.html:18228,inherit,inherited,18228,doc/master/classTHelix.html,https://root.cern,https://root.cern/doc/master/classTHelix.html,1,['inherit'],['inherited']
Modifiability,"nst char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Build (TDirectory *motherDir, const char *classname, Long64_t filepos);  Method used in all TKey constructor to initialize basic data fields. ;  ; virtual void Create (Int_t nbytes, TFile *f=nullptr);  Create a TKey object of specified size. ;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; void Reset ();  Reset the key as it had not been 'filled' yet. ;  ; virtual Int_t WriteFileKeepBuffer (TFile *f=nullptr);  Write the encoded object supported by this key. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char * fBuffer;  Object buffer. ;  ; TBuffer * fBufferRef;  Pointer to the TBuffer object. ;  ; TString fClassName;  Object Class name. ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey.html:15064,inherit,inherited,15064,doc/master/classTKey.html,https://root.cern,https://root.cern/doc/master/classTKey.html,1,['inherit'],['inherited']
Modifiability,"nst char * DeclFileName ();  ; static TSelector * GetSelector (const char *filename);  The code in filename is loaded (interpreted or compiled, see below), filename must contain a valid class implementation derived from TSelector. ;  ; static bool IsStandardDraw (const char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; virtual void DefVar ()=0;  ; virtual void DoFill (Long64_t entry, Double_t w, const Double_t *v)=0;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDraw.html:11405,inherit,inherited,11405,doc/master/classTProofDraw.html,https://root.cern,https://root.cern/doc/master/classTProofDraw.html,1,['inherit'],['inherited']
Modifiability,"nst char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; std::complex< double > evalCerfInt (double sign, double wt, double tau, double umin, double umax, double c) const;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooResolutionModel; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with randomized order for nProto prototype events. ;  ; virtual bool syncNormalization (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:61662,inherit,inherited,61662,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,1,['inherit'],['inherited']
Modifiability,nst char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCategoryLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCategory; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  A buffer for reading values from trees. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given am,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:39984,inherit,inherited,39984,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,4,['inherit'],['inherited']
Modifiability,"nst char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofDraw.h>. Inheritance diagram for TProofVectorContainer< T >:. This browser is not able to show SVG: try Firefox, Chrome, Saf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofVectorContainer.html:10327,inherit,inherited,10327,doc/master/classTProofVectorContainer.html,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html,1,['inherit'],['inherited']
Modifiability,"nst char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numpoints, Int_t px, Int_t py) const;  Returns distance to shape primitive mesh. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:9028,inherit,inherited,9028,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,9,['inherit'],['inherited']
Modifiability,"nst char * GetVarY () const;  ; virtual Double_t IntegralHist (TH2 *h, Option_t *option="""") const;  Compute the integral of 2-d histogram h for all bins inside the cut if option ""width"" is specified, the integral is the sum of the bin contents multiplied by the bin width in x and in y. ;  ; TClass * IsA () const override;  ; TCutG & operator= (const TCutG &);  Assignment operator. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetObjectX (TObject *obj);  Set the X object (and delete the previous one if any). ;  ; virtual void SetObjectY (TObject *obj);  Set the Y object (and delete the previous one if any). ;  ; virtual void SetVarX (const char *varx);  Set X variable. ;  ; virtual void SetVarY (const char *vary);  Set Y variable. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TCutG. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraph (const TVectorD &vx, const TVectorD &vy);  Graph constructor with two vectors of doubles in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of points in the graph is the minimum of number of points in vx and vy. ;  ;  TGraph (const TVectorF &vx, const TVectorF &vy);  Graph constructor with two vectors of floats in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCutG.html:5458,inherit,inherited,5458,doc/master/classTCutG.html,https://root.cern,https://root.cern/doc/master/classTCutG.html,1,['inherit'],['inherited']
Modifiability,"nst char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); voidOptimizeAllMethods(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); voidOptimizeAllMethodsForClassification(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); voidOptimizeAllMethodsForRegression(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); voidPrepareTrainingAndTestTree(const TCut& cut, const TString& splitOpt); voidPrepareTrainingAndTestTree(TCut sigcut, TCut bkgcut, const TString& splitOpt); voidPrepareTrainingAndTestTree(const TCut& cut, Int_t Ntrain, Int_t Ntest = -1); voidPrepareTrainingAndTestTree(const TCut& cut, Int_t NsigTrain, Int_t NbkgTrain, Int_t NsigTest, Int_t NbkgTest, const TString& otherOpt = ""SplitMode=Random:!V""); virtual voidTObject::Print(Option_t* option = """") const; voidPrintHelpMessage(const TString& methodTitle = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); static TDirectory*RootBaseDir(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetBackgroundTree(TTree* background, Double_t weight = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Factory.html:7903,Config,Configurable,7903,root/html532/TMVA__Factory.html,https://root.cern,https://root.cern/root/html532/TMVA__Factory.html,6,['Config'],['Configurable']
Modifiability,"nst char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Bool_tDoOwner(Bool_t done = kTRUE); Bool_tIsOwner() const; voidTObject::MakeZombie(). Data Members; public:. enum EOwnerBits { kIsOwner; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TPoints3DABC*fPoints. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPoints3D(TPoints3DABC* points = 0); -*-*3-D PolyLine default constructor; *-* ================================. TPoints3D(Int_t n, Option_t* option = """"); 3-D PolyLine normal constructor without initialisation*-; *-* ======================================================; *-* If n < 0 the default size (2 points) is set; -. TPoints3D(Int_t n, Float_t* p, Option_t* option = """"); -*3-D Point3D normal constructor; *-* ===============================; *-* If n < 0 the default size (2 points) is set; -. TPoints3D(Int_t n, Float_t* x, Float_t* y, Float_t* z, Option_t* option = """"); -*3-D PolyLine normal constructor; *-* ===============================; *-* If n < 0 the default size (2 points) is set; -. ~TPoints3D(); -*3-D PolyLine default destructor; *-* ===============================. TPoints3D(const TPoints3D& points); to be documented. void Copy(TObject& points) const; -*Copy this TPoints3D to another ; *-* =============================",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPoints3D.html:7255,Inherit,Inheritance,7255,root/html532/TPoints3D.html,https://root.cern,https://root.cern/root/html532/TPoints3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidBuild(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TMap*fActiveNodesMap of active node infos; Int_tfMaxWrksNodeMax number of workers per node; Int_tfMinWrksNodeMin number of workers per node; Int_tfNActiveWrksNumber of active workers; Int_tfNNodesNumber of nodes; Int_tfNWrksNumber of workers; TMap*fNodesMap of node infos; TProof*fProof. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofNodes(TProof* proof); Constructor. ~TProofNodes(); Destructor. void Build(); Desctiption: Build the node list, which is a list of nodes whose members; in turn are lists of workers on the node.; Input: Nothing; Return: Nothing. Int_t ActivateWorkers(Int_t nwrks); Description: Activate 'nwrks' workers; calls TProof::SetParallel and; rebuild the internal lists; Input: number of workers; Return: 0 is successful, <0 otherwise. Int_t ActivateWorkers(const char* workers); Description: Activate the same number of workers on all nodes.; Input: workers: string of the form ""nx"" where non-negative integer n; is the number of worker on each node to be activated.; Return: The number of active workers per node when the operation is; successful.; <0 otherwise. void Print(Option_t* option = """") const; Description: Print node information. TProofNodes(TProof* proof). Int_t GetMaxWrksPerNode() const; { return fMaxWrksNode; }. Int_t GetNWorkersCluste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofNodes.html:5738,Inherit,Inheritance,5738,root/html532/TProofNodes.html,https://root.cern,https://root.cern/root/html532/TProofNodes.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetHeight() const; virtual const char*TObject::GetIconName() const; Pixmap_tGetMask() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Pixmap_tGetPicture() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; UInt_tGetWidth() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; static const char*HashName(const char* name, Int_t width, Int_t height); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsScaled() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPicture.html:2787,Inherit,InheritsFrom,2787,root/html532/TGPicture.html,https://root.cern,https://root.cern/root/html532/TGPicture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetHeight() const; virtual const char*TObject::GetIconName() const; Pixmap_tGetMask() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Pixmap_tGetPicture() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; UInt_tGetWidth() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; static const char*HashName(const char* name, Int_t width, Int_t height); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsScaled() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGPicture&operator=(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPicture.html:2758,Inherit,InheritsFrom,2758,root/html602/TGPicture.html,https://root.cern,https://root.cern/root/html602/TGPicture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TDictionary*GetDictionary(const char* name); static TDictionary*GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDictionary&operator=(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDictionary.html:3171,Inherit,InheritsFrom,3171,root/html532/TDictionary.html,https://root.cern,https://root.cern/root/html532/TDictionary.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static const char*GetMimeType(const char* path); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TRootSniffer*GetSniffer() const; virtual const char*TNamed::GetTitle() const; const char*GetTopName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFileRequested(const char* uri, TString& res) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReadOnly() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THttpServer.html:2649,Inherit,InheritsFrom,2649,root/html602/THttpServer.html,https://root.cern,https://root.cern/root/html602/THttpServer.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tLocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGFileStager.html:2708,Inherit,InheritsFrom,2708,root/html534/TNetXNGFileStager.html,https://root.cern,https://root.cern/root/html534/TNetXNGFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tLocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetXNGFileStager.html:2622,Inherit,InheritsFrom,2622,root/html602/TNetXNGFileStager.html,https://root.cern,https://root.cern/root/html602/TNetXNGFileStager.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tTFileStager::LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetFileStager.html:2591,Inherit,InheritsFrom,2591,root/html534/TNetFileStager.html,https://root.cern,https://root.cern/root/html534/TNetFileStager.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tTFileStager::LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetFileStager.html:2535,Inherit,InheritsFrom,2535,root/html602/TNetFileStager.html,https://root.cern,https://root.cern/root/html602/TNetFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNetFileStager.html:2591,Inherit,InheritsFrom,2591,root/html532/TNetFileStager.html,https://root.cern,https://root.cern/root/html532/TNetFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Int_tTQpProbBase::fMynumber of rows in A and b; Int_tTQpProbBase::fMznumber of rows in C; Int_tTQpProbBase::fNxnumber of elements in x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQpProbDens(Int_t nx, Int_t my, Int_t mz); Constructor. TQpProbDens(const TQpProbDens& another); Copy constructor. TQpDataBase * MakeData(Double_t* c, Double_t* Q, Double_t* xlo, Bool_t* ixlo, Double_t* xup, Bool_t* ixup, Double_t* A, Double_t* bA, Double_t* C, Double_t* clo, Bool_t* iclo, Double_t* cup, Bool_t* icup); Setup the data. TQpDataBase * MakeData(TVectorD& c, TMatrixDBase& Q_in, TVectorD& xlo, TVectorD& ixlo, TVectorD& xup, TVectorD& ixup, TMatrixDBase& A_in, TVectorD& bA, TMatrixDBase& C_in, TVectorD& clo, TVectorD& iclo, TVectorD& cup, TVectorD& icup); Setup the data. TQpResidual* MakeResiduals(const TQpDataBase* data); Setup the residuals. TQpVar* MakeVariables(const TQpDataBase* data); Setup the variables. TQpLinSolverBase* MakeLinSys(const TQpDataBase* data); Setup the linear solver. void JoinRHS(TVectorD& rhs_in, TVectorD& rhs1_in, TVectorD& rhs2_in, TVectorD& rhs3_in); Assembles a single vector object from three given",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQpProbDens.html:6241,Inherit,Inheritance,6241,root/html532/TQpProbDens.html,https://root.cern,https://root.cern/root/html532/TQpProbDens.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Int_tTQpProbBase::fMynumber of rows in A and b; Int_tTQpProbBase::fMznumber of rows in C; Int_tTQpProbBase::fNxnumber of elements in x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQpProbSparse(Int_t nx, Int_t my, Int_t mz); Constructor. TQpProbSparse(const TQpProbSparse& another); Copy constructor. TQpDataBase * MakeData(Double_t *c, Int_t nnzQ,Int_t *irowQ,Int_t *icolQ,Double_t *Q, Double_t *xlo,Bool_t *ixlo, Double_t *xup,Bool_t *ixup, Int_t nnzA,Int_t *irowA,Int_t *icolA,Double_t *A, Double_t *bA, Int_t nnzC,Int_t *irowC,Int_t *icolC,Double_t *C, Double_t *clo,Bool_t *iclo, Double_t *cup,Bool_t *icup); Setup the data. TQpResidual* MakeResiduals(const TQpDataBase* data); Setup the residuals. TQpVar* MakeVariables(const TQpDataBase* data); Setup the variables. TQpLinSolverBase* MakeLinSys(const TQpDataBase* data); Setup the linear solver. void JoinRHS(TVectorD& rhs_in, TVectorD& rhs1_in, TVectorD& rhs2_in, TVectorD& rhs3_in); Assembles a single vector object from three given vectors .; rhs_out (output) final joined vector; rhs1_in (input) first part of rhs; rhs2_in (input) middle part of rhs; rhs3_in (input) l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQpProbSparse.html:6053,Inherit,Inheritance,6053,root/html532/TQpProbSparse.html,https://root.cern,https://root.cern/root/html532/TQpProbSparse.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* msgfmt) const; virtual Double_tFindBlocking(TQpVar* step, Double_t& primalValue, Double_t& primalStep, Double_t& dualValue, Double_t& dualStep, Int_t& firstOrSecond); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Double_tGetMu(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInteriorPoint(Double_t alpha, Double_t beta); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInteriorPoint(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Double_tMuStep(TQpVar* step, Double_t alpha); virtual voidNegate(); virtual Double_tNorm1(); virtual Double_tNormInf(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQpVar.html:2956,Inherit,InheritsFrom,2956,root/html532/TQpVar.html,https://root.cern,https://root.cern/root/html532/TQpVar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* msgfmt) const; virtual Double_tFindBlocking(TQpVar* step, Double_t& primalValue, Double_t& primalStep, Double_t& dualValue, Double_t& dualStep, Int_t& firstOrSecond); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Double_tGetMu(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInteriorPoint(Double_t alpha, Double_t beta); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInteriorPoint(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Double_tMuStep(TQpVar* step, Double_t alpha); virtual voidNegate(); virtual Double_tNorm1(); virtual Double_tNormInf(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpVar.html:2541,Inherit,InheritsFrom,2541,root/html602/TQpVar.html,https://root.cern,https://root.cern/root/html602/TQpVar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsBinning(); Destructor. void printName(ostream& os) const; Print binning name. void printTitle(ostream& os) const; Print binning title. void printClassName(ostream& os) const; Print binning class name. void printArgs(ostream& os) const; Print binning arguments (the RooAbsReal objects represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& ); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsBinning.html:7818,Inherit,Inheritance,7818,root/html534/RooAbsBinning.html,https://root.cern,https://root.cern/root/html534/RooAbsBinning.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidCheckMatrix(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TGeoMatrix::EGeoTransfTypes { kGeoIdentity; kGeoTranslation; kGeoRotation; kGeoScale; kGeoReflection; kGeoRegistered; kGeoSavePrimitive; kGeoMatrixOwned; kGeoCombiTrans; kGeoGenTrans; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; Double_tfRotationMatrix[9]rotation matrix; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoRotation(); Default constructor. TGeoRotation(const TGeoRotation& other); Copy ctor. TGeoRotation(const TGeoMatrix& other); Copy ctor. TGeoRotation(const char* name); Named rotation constructor. TGeoRotation(const char* name, Double_t phi, Double_t theta, Double_t psi); Default rotation constructor with Euler angles. Phi is the rotation angle about; Z axis and is done first, theta is the rotation about new Y and is done; second, psi is the rotation angle about new Z and is done third. All angles are in; degrees. TGeoRotation(const char* name, Double_t theta1, Double_t phi1, Double_t theta2, Double_t phi2, Double_t theta3, Double_t phi3); Rotation constructor a la GEANT3. Angles theta(i), phi(i) are the polar and azimuthal; angles of the (i) axis of the rotated system with respect to the initial non-rotated; system.; Example : the identity matrix (no rotation) is composed by; theta1=90, phi1=0, theta2=90, phi2=90, theta3=0, phi3=0; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoRotation.html:15242,Inherit,Inheritance,15242,root/html532/TGeoRotation.html,https://root.cern,https://root.cern/root/html532/TGeoRotation.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TClass*GetClassPointer(Bool_t load = kTRUE); Int_tGetDelta() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Int_tIsSTLContainer(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBaseClass.html:2775,Inherit,InheritsFrom,2775,root/html532/TBaseClass.html,https://root.cern,https://root.cern/root/html532/TBaseClass.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual const char*FindFullPathName(const char* name) const; virtual const char*FindFullPathName(const TObject* obj) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TCollection*GetListOfFolders() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOwner() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") constMENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Int_tOccurence(const TObject* obj) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFolder.html:5726,Inherit,InheritsFrom,5726,root/html532/TFolder.html,https://root.cern,https://root.cern/root/html532/TFolder.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual const char*FindFullPathName(const char* name) const; virtual const char*FindFullPathName(const TObject* obj) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TCollection*GetListOfFolders() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOwner() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") constMENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Int_tOccurence(const TObject* obj) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFolder.html:5669,Inherit,InheritsFrom,5669,root/html602/TFolder.html,https://root.cern,https://root.cern/root/html602/TFolder.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*TRootSnifferStore::GetResClass() const; TDataMember*TRootSnifferStore::GetResMember() const; Int_tTRootSnifferStore::GetResNumChilds() const; void*TRootSnifferStore::GetResPtr() const; Int_tTRootSnifferStore::GetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStoreXml.html:2938,Inherit,InheritsFrom,2938,root/html534/TRootSnifferStoreXml.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStoreXml.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*TRootSnifferStore::GetResClass() const; TDataMember*TRootSnifferStore::GetResMember() const; Int_tTRootSnifferStore::GetResNumChilds() const; void*TRootSnifferStore::GetResPtr() const; Int_tTRootSnifferStore::GetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRootSnifferStoreXml&o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSnifferStoreXml.html:2837,Inherit,InheritsFrom,2837,root/html604/TRootSnifferStoreXml.html,https://root.cern,https://root.cern/root/html604/TRootSnifferStoreXml.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*TRootSnifferStore::GetResClass() const; TDataMember*TRootSnifferStore::GetResMember() const; Int_tTRootSnifferStore::GetResNumChilds() const; void*TRootSnifferStore::GetResPtr() const; Int_tTRootSnifferStore::GetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTRootSnifferStore::IsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStoreJson.html:2952,Inherit,InheritsFrom,2952,root/html534/TRootSnifferStoreJson.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStoreJson.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*TRootSnifferStore::GetResClass() const; TDataMember*TRootSnifferStore::GetResMember() const; Int_tTRootSnifferStore::GetResNumChilds() const; void*TRootSnifferStore::GetResPtr() const; Int_tTRootSnifferStore::GetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTRootSnifferStore::IsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSnifferStoreJson.html:2846,Inherit,InheritsFrom,2846,root/html604/TRootSnifferStoreJson.html,https://root.cern,https://root.cern/root/html604/TRootSnifferStoreJson.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortGetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*GetOption() const; virtual TList*GetOutputList() const; static TSelector*GetSelector(const char* filename); virtual Long64_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tIsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelector.html:5301,Inherit,InheritsFrom,5301,root/html534/TSelector.html,https://root.cern,https://root.cern/root/html534/TSelector.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortGetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*GetOption() const; virtual TList*GetOutputList() const; static TSelector*GetSelector(const char* filename); virtual Long64_tGetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tIsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelector.html:5312,Inherit,InheritsFrom,5312,root/html602/TSelector.html,https://root.cern,https://root.cern/root/html602/TSelector.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelVerifyDataSet.html:2796,Inherit,InheritsFrom,2796,root/html534/TSelVerifyDataSet.html,https://root.cern,https://root.cern/root/html534/TSelVerifyDataSet.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::GetAbort() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTSelector::GetEntry(Long64_t, Int_t = 0); virtual const char*TObject::GetIconName() const; virtual TList*TSelector::GetInputList() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const char*TSelector::GetOption() const; virtual TList*GetOutputList() const; static TSelector*TSelector::GetSelector(const char* filename); virtual Long64_tTSelector::GetStatus() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TTree*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tTSelector::IsStandardDraw(const char* selec); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelVerifyDataSet.html:2772,Inherit,InheritsFrom,2772,root/html602/TSelVerifyDataSet.html,https://root.cern,https://root.cern/root/html602/TSelVerifyDataSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tTLeaf::GetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tIsVirtual() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLeafObject.html:3400,Inherit,InheritsFrom,3400,root/html534/TLeafObject.html,https://root.cern,https://root.cern/root/html534/TLeafObject.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name); virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tTLeaf::GetValue(Int_t i = 0) const; virtual Long64_tTLeaf::GetValueLong64(Int_t i = 0) const; virtual LongDouble_tTLeaf::GetValueLongDouble(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTLeaf::Import(TClonesArray*, Int_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tIsVirtual() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLeafObject.html:3286,Inherit,InheritsFrom,3286,root/html602/TLeafObject.html,https://root.cern,https://root.cern/root/html602/TLeafObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char* name, const char* leaflist, Int_t compress); voidTObject::MakeZombie(); voidReadLeaves0Impl(TBuffer& b); voidReadLeaves1Impl(TBuffer& b); voidReadLeaves2Impl(TBuffer& b); voidReadLeavesImpl(TBuffer& b); voidSetSkipZip(Bool_t skip = kTRUE); Int_tWriteBasket(TBasket* basket, Int_t where). private:. TBranch(const TBranch&); TBranch&operator=(const TBranch&). Data Members; public:. enum EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fAddress! Address of 1st leaf (variable or object); Int_t*fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tfBasketSizeInitial Size of Basket Buffer; TObjArrayfBaskets-> List of baskets of this branch; TObjArrayfBranches-> List of Branches of this branch; TList*fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tfCompressCompression level and algorithm; TBasket*fCurrentBasket! Pointer to the current basket.; TDirectory*fDirectory! Pointer to directory where this branch buffers are stored; Long64_tfEntriesNumber of entries; TBuffer*fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tfEntryNumberCurrent entry number (last one filled in this branch); Int_tfEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringfFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Long64_tfFirstBasketEntry! First entry in the current basket.; Long64_tfFirstEntryNumber of the first entry in this branch; TObjArrayfLeaves-> List of leaves of this branch; In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBranch.html:9902,variab,variable,9902,root/html530/TBranch.html,https://root.cern,https://root.cern/root/html530/TBranch.html,1,['variab'],['variable']
Modifiability,"nst char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10""); Set up to 10 parameter names*-*-*-*-*-; *-* ============================. void Streamer(TBuffer& b); Stream a class object*-*-*-*-*-*-*-; *-* =========================================. void Convert(UInt_t fromVersion); Convert the fOper of a TFormula version fromVersion to the current in memory version. void MakePrimitive(const char* expr, Int_t pos). MakePrimitive; find TFormulaPrimitive replacement for some operands. void Optimize(). MI include. Optimize formula; 1.) Minimize the number of operands; a.) several operanands are glued togther; b.) some primitive functions glued together - exemp. (x+y) => PlusXY(x,y); c.) maximize number of standard calls minimizing number of jumps in Eval cases; d.) variables, parameters and constants are mapped - using fOperOfssets0; Eval procedure use direct acces to data (only one corresponding case statement in eval procedure). pdata[operand={Var,Par,Const}][offset]; pdata[fOperOffsets0[i]][fOperOffset1[i+1]]; 2.) The fastest evaluation function is choosen at the end; a.) fOptimal := pointer to the fastest function for given evaluation string; switch(GetActionOptimized(0)){; case kData : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive0; break;}; case kUnary : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive1; break;}; case kBinary : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive2; break;}; case kThree : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive3; break;}; case kFDM : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive4; break;}; }; b.) ex. fOptimal = ::EvalPrimitive0 - if it return only variable, constant or parameter; = ::EvalParameter1 - if only one unary operation; = ::EvalPrimitive2 - if only one binary operation. Double_t EvalPrimitive(const Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:30266,variab,variables,30266,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,4,['variab'],['variables']
Modifiability,"nst char* ord, const char* url). Data Members; public:. enum ELogLocationBit { kLogToBox; };; enum ERetrieveOpt { kLeading; kTrailing; kAll; kGrep; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TStringTNamed::fNameobject identifier; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TStringTNamed::fTitleobject title; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. TList*fElemlist of TProofLogElem objects; void*fFILEpointer logging file, if any; TProofMgr*fMgrparent TProofMgr; TDatimefStartTimeTime at which this session started. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLog(const char* stag, const char* url, TProofMgr* mgr); Constructor. ~TProofLog(); Destructor. TProofLogElem * Add(const char* ord, const char* url); Add new entry to the list of elements. Int_t Retrieve(const char* ord = ""*"", TProofLog::ERetrieveOpt opt = TProofLog::kTrailing, const char* fname = 0, const char* pattern = 0); Retrieve the content of the log file associated with worker 'ord'.; If 'ord' is ""*"" (default), all the workers are retrieved. If 'all'; is true, the whole files are retrieved; else a max of; fgMaxTransferSize (about 1000 lines) per file is read, starting from; the end (i.e. the last ~1000 lines).; The received buffer is added to the file fname, if the latter is defined.; If opt == TProofLog::kGrep only the lines containing 'pattern' are; retrieved (remote grep functionality); to filter out a pattern 'pat' use; pattern = ""-v pat"".; Return 0 on success, -1 in case of any error. void Display(const char* ord = """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofLog.html:9872,Inherit,Inheritance,9872,root/html532/TProofLog.html,https://root.cern,https://root.cern/root/html532/TProofLog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodLD&operator=(const TMVA::MethodLD&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodLD.html:10079,Config,Configurable,10079,root/html602/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodLD.html,2,['Config'],['Configurable']
Modifiability,"nst char* sqlname); voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObjArray*fColInfos! array with TSQLClassColumnInfo, used later for TSQLClassInfo; TObjArrayfColumns! collection of columns; TSQLFile*fFile!; TSQLClassInfo*fInfo!. Class Charts. Inheritance Chart:. TObject. ←; TSQLTableData. Function documentation; TSQLTableData(TSQLFile* f = 0, TSQLClassInfo* info = 0); normal constructor. ~TSQLTableData(); destructor. void AddColumn(const char* name, Long64_t value); Add INT column to list of columns. void AddColumn(const char* name, const char* sqltype, const char* value, Bool_t numeric); Add nomral column to list of columns. TString DefineSQLName(const char* fullname); produce suitable name for column, taking into account length limitation. Bool_t HasSQLName(const char* sqlname); checks if columns list already has that sql name. Int_t GetNumColumns(); returns number of columns in provided set. const char* GetColumn(Int_t n); returm column value. Bool_t IsNumeric(Int_t n); identifies if column has numeric value. TObjArray* TakeColInfos(); take ownership over colinfos. TSQLTableData(TSQLFile* f = 0, TSQLClassInfo* info = 0). » Author: Sergey Linev 20/11/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLTableData.html:6539,Inherit,Inheritance,6539,root/html602/TSQLTableData.html,https://root.cern,https://root.cern/root/html602/TSQLTableData.html,2,['Inherit'],['Inheritance']
Modifiability,"nst char* title, RooAbsReal& _intpdf, const RooArgSet& intObs); Construct projection of input pdf '_intpdf' over observables 'intObs'. RooProjectedPdf(const RooProjectedPdf& other, const char* name = 0); Copy constructor. Double_t getValV(const RooArgSet* set = 0) const; Special version of getVal() overrides RooAbsReal::getValF() to save value of current normalization set. Double_t evaluate() const; Evaluate projected p.d.f. const RooAbsReal* getProjection(const RooArgSet* iset, const RooArgSet* nset, const char* rangeName, int& code) const; Retrieve object representing projection integral of input p.d.f; over observables iset, while normalizing over observables; nset. The code argument returned by reference is the unique code; defining this particular projection configuration. RooAbsPdf* createProjection(const RooArgSet& iset); Special version of RooAbsReal::createProjection that deals with; projections of projections. Instead of integrating twice, a new; RooProjectedPdf is returned that is configured to perform the; complete integration in one step. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force RooRealIntegral to relegate integration of all observables to internal logic. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Mark all requested variables as internally integrated. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral represent by appropriate element of projection cache. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; No internal generator is implemented. void generateEvent(Int_t code); No internal generator is implemented. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t , Bool_t , Bool_t ); Intercept a server redirection all and update list of dependents if necessary; Specifically update the set proxy ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProjectedPdf.html:43606,config,configured,43606,root/html532/RooProjectedPdf.html,https://root.cern,https://root.cern/root/html532/RooProjectedPdf.html,8,['config'],['configured']
Modifiability,"nst char* url, TString& pfx). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TStringfPrefixprefix to prepend to requests; TXNetSystem*fSysteminstance of the admin interface. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TFileStager. ←; TXNetFileStager. Function documentation; TXNetFileStager(const char* stager = """"); Constructor. Init a TXNetSystem instance to the XRD system. ~TXNetFileStager(); Destructor. Bool_t IsStaged(const char* path); Check if the file defined by 'path' is ready to be used. Bool_t Stage(TCollection* pathlist, Option_t* opt = 0); Issue a stage request for file defined by 'path'. The string 'opt'; defines 'option' and 'priority' for 'Prepare': the format is; opt = ""option=o priority=p"". Bool_t Stage(const char* path, Option_t* opt = 0); Issue a stage request for file defined by 'path'. The string 'opt'; defines 'option' and 'priority' for 'Prepare': the format is; opt = ""option=o priority=p"". void GetPrefix(const char* url, TString& pfx); Isolate prefix in url. void Print(Option_t* option = """") const; Print basic info about this stager. Int_t Locate(const char* path, TString& endpath); Get actual end-point url for a path; Returns 0 in case of suc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXNetFileStager.html:6755,Inherit,Inheritance,6755,root/html602/TXNetFileStager.html,https://root.cern,https://root.cern/root/html602/TXNetFileStager.html,1,['Inherit'],['Inheritance']
Modifiability,"nst char*GetFileAndOptions() const; const char*GetHost() const; const char*GetHostFQDN() const; virtual const char*TObject::GetIconName() const; Int_tGetIntValueFromOptions(const char* key) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; const char*GetPasswd() const; Int_tGetPort() const; const char*GetProtocol() const; static TObjArray*GetSpecialProtocols(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl(Bool_t withDeflt = kFALSE) const; const char*GetUser() const; const char*GetValueFromOptions(const char* key) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasOption(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUrl.html:3060,Inherit,InheritsFrom,3060,root/html534/TUrl.html,https://root.cern,https://root.cern/root/html534/TUrl.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char*GetFileAndOptions() const; const char*GetHost() const; const char*GetHostFQDN() const; virtual const char*TObject::GetIconName() const; Int_tGetIntValueFromOptions(const char* key) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; const char*GetPasswd() const; Int_tGetPort() const; const char*GetProtocol() const; static TObjArray*GetSpecialProtocols(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl(Bool_t withDeflt = kFALSE) const; const char*GetUser() const; const char*GetValueFromOptions(const char* key) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasOption(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUrl.html:2999,Inherit,InheritsFrom,2999,root/html602/TUrl.html,https://root.cern,https://root.cern/root/html602/TUrl.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*GetHostFQDN() const; virtual const char*TObject::GetIconName() const; Int_tGetIntValueFromOptions(const char* key) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; const char*GetPasswd() const; Int_tGetPort() const; const char*GetProtocol() const; static TObjArray*GetSpecialProtocols(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl(Bool_t withDeflt = kFALSE) const; const char*GetUser() const; const char*GetValueFromOptions(const char* key) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasOption(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TUrl&oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUrl.html:3126,Inherit,InheritsFrom,3126,root/html534/TUrl.html,https://root.cern,https://root.cern/root/html534/TUrl.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char*GetHostFQDN() const; virtual const char*TObject::GetIconName() const; Int_tGetIntValueFromOptions(const char* key) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; const char*GetPasswd() const; Int_tGetPort() const; const char*GetProtocol() const; static TObjArray*GetSpecialProtocols(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl(Bool_t withDeflt = kFALSE) const; const char*GetUser() const; const char*GetValueFromOptions(const char* key) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasOption(const char* key) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TUrl&operator=(const TUrl& rhs); virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUrl.html:3065,Inherit,InheritsFrom,3065,root/html602/TUrl.html,https://root.cern,https://root.cern/root/html602/TUrl.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*GetParentName() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; Int_tGetStreamerType() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual TClass*GetTargetClass(); virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; Int_tGetType() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(Int_t i, Int_t len, Bool_t subarr = kFALSE) const; virtual void*GetValuePointer() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; Bool_tIsBranchFolder() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsObjectOwner() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchElement.html:6325,Inherit,InheritsFrom,6325,root/html532/TBranchElement.html,https://root.cern,https://root.cern/root/html532/TBranchElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TNamed::GetName() const; Double_tgetNominalBinWidth() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; const char*RooPlotable::getYAxisLabel() const; Double_tRooPlotable::getYAxisMax() const; Double_tRooPlotable::getYAxisMin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_thasIdenticalBinning(const RooHist& other) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tisIdentical(const RooHist& other, Double_t tol = 1e-6) const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTGraph::LeastSquareFit(Int_t m, Double_t* a, Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHist.html:8666,Inherit,InheritsFrom,8666,root/html532/RooHist.html,https://root.cern,https://root.cern/root/html532/RooHist.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMatchingState(TGeoNavigator* nav) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPhysicalNode.html:4649,Inherit,InheritsFrom,4649,root/html534/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html534/TGeoPhysicalNode.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMatchingState(TGeoNavigator* nav) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPhysicalNode.html:4593,Inherit,InheritsFrom,4593,root/html602/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html602/TGeoPhysicalNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TObject::GetIconName() const; Int_tGetLevel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TGeoHMatrix*GetMatrix(Int_t level = -1) const; TGeoNode*GetMother(Int_t levup = 1) const; virtual const char*TNamed::GetName() const; TGeoNode*GetNode(Int_t level = -1) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGeoHMatrix*GetOriginalMatrix() const; TGeoShape*GetShape(Int_t level = -1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoVolume*GetVolume(Int_t level = -1) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsAligned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsVisible() const; Bool_tIsVisibleFull() const; Bool_tIsVolAttributes() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPhysicalNode.html:4647,Inherit,InheritsFrom,4647,root/html532/TGeoPhysicalNode.html,https://root.cern,https://root.cern/root/html532/TGeoPhysicalNode.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TObject::GetIconName() const; virtual Int_tGetKey(Int_t); virtual Int_tTTablePoints::GetLastPosition() const; virtual Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TTablePoints::GetOption() const; virtual Float_t*GetP() const; virtual void*TTablePoints::GetTable(); virtual const char*TObject::GetTitle() const; virtual Int_tGetTotalKeys(); virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetX(Int_t idx) const; virtual const Float_t*GetXYZ(Int_t); virtual Float_t*GetXYZ(Float_t* xyz, Int_t idx, Int_t num = 1) const; virtual Float_tGetY(Int_t idx) const; virtual Float_tGetZ(Int_t idx) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Int_tTTablePoints::Indx(Int_t sortedIndx) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTable3Points.html:5825,Inherit,InheritsFrom,5825,root/html532/TTable3Points.html,https://root.cern,https://root.cern/root/html532/TTable3Points.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TObject::GetIconName() const; virtual Int_tGetKey(Int_t); virtual Int_tTTablePoints::GetLastPosition() const; virtual Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TTablePoints::GetOption() const; virtual Float_t*GetP() const; virtual void*TTablePoints::GetTable(); virtual const char*TObject::GetTitle() const; virtual Int_tGetTotalKeys(); virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetX(Int_t idx) const; virtual const Float_t*GetXYZ(Int_t); virtual Float_t*GetXYZ(Float_t* xyz, Int_t idx, Int_t num = 1) const; virtual Float_tGetY(Int_t idx) const; virtual Float_tGetZ(Int_t idx) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Int_tTTablePoints::Indx(Int_t sortedIndx) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTable3Points.html:5486,Inherit,InheritsFrom,5486,root/html602/TTable3Points.html,https://root.cern,https://root.cern/root/html602/TTable3Points.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst char*TObject::GetIconName() const; virtual RooStats::MCMCInterval::IntervalTypeGetIntervalType(); Double_tGetKeysMax(); virtual Double_tGetKeysPdfCutoff(); virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual Int_tGetNumBurnInSteps(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooArgSet*GetParameters() const; virtual TH1*GetPosteriorHist(); virtual RooNDKeysPdf*GetPosteriorKeysPdf(); virtual RooProduct*GetPosteriorKeysProduct(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tGetUseKeys(); virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet& point) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tLowerLimit(RooRealVar& param); virtual Double_tLowerLimitByDataHist(RooRealVar& param); virtual Double_tLowerLimitByHist(RooRealVar& param); virtual Double_tLowerLimitByKeys(RooRealVar& param); virtual Double_tLowerLimitBySparseHist(RooRealVar& param); virtual Double_tLowerLimitShortest(RooRealVar& param); virtual Double_tLowerLimitTailFraction(RooRealVar& param); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCIntervalMCMCInterval(const char* name = 0); RooStats::MCMCIntervalMCMCInterval(const RooStats::MCMC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MCMCInterval.html:5531,Inherit,InheritsFrom,5531,root/html532/RooStats__MCMCInterval.html,https://root.cern,https://root.cern/root/html532/RooStats__MCMCInterval.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst debug (non-debug) ROOT? . Microsoft's STL classes (std::string, std::vector,...) are different for debug and optimized mode. When calling a ROOT function that expects a STL object as an argument, the caller (e.g. your code) and ROOT must agree on what the object looks like. Thus if you link against ROOT libraries built as debug (non-debug) you must also compile your code as debug (non-debug). ACLiC does that automatically for you. ; . Changing the Displayed Title in Canvas. . Disable the title and add yourself your own title with a TPaveLabel: ; gStyle->SetOptTitle(0);; TPaveLabel *title = new TPaveLabel(.11,.95,.35,.99,""new title"",""brndc"");; title->Draw(); ; Changing the Displayed Title in Canvas. ; . Segmentation violation in TASImage::InitVisual () on Mac . The configure command should specify explicitly where ROOT should find all X11-related libs. ./configure --with-x11-libdir=/opt/local/lib/ ; --with-xpm-libdir=/opt/local/lib/ ; --with-xft-libdir=/opt/local/lib/ ; --with-xext-libdir=/opt/local/lib/; A simple Draw(0 or a Browser opening might cause a Segmentation violation in TASImage::InitVisual () on Mac. ; . How do I start PROOF? . Type at the ROOT prompt:. root [0] TProof::Open(""""); How do I start PROOF? ; . How to render graphics in a file, without displaying the image on the screen ? . Run in batch mode:. root -b -q myscript.C. or in your program add:. gROOT->SetBatch();; ; . Prerequisites for building ROOT from source. . To successfully build ROOT a number of prerequisite packages must be installed. Check the prerequisites page for the list of packages needed for your platform.; ; . How to use ROOT libraries in Xcode on Mac OS X? . The easiest way is to use cmake and let it create the Xcode project, this has the advantage that the dictionaries are created automatically. The CMakeLists.txt file will define the libraries and executables to be added to the Xcode project. An example from the ROOT Event example (found in root/test) can be downloaded here. J",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/faq-page.html:6119,config,configure,6119,d/faq-page.html,https://root.cern,https://root.cern/d/faq-page.html,1,['config'],['configure']
Modifiability,"nst double > ; x0, . std::span< const double > ; y0, . int ; order = 3, . bool ; logx = false, . bool ; logy = false . ). Constructor for creating a spline from raw data. ; Parameters. [in]nameThe name of the spline. ; [in]titleThe title of the spline. ; [in]xThe independent variable. ; [in]x0The array of x values for the spline points. ; [in]y0The array of y values for the spline points. ; [in]orderThe order of the spline (3 or 5). ; [in]logxIf true, the x values are logarithmically scaled before spline creation. ; [in]logyIf true, the y values are logarithmically scaled before spline creation. . Definition at line 74 of file RooSpline.cxx. ◆ RooSpline() [3/4]. RooSpline::RooSpline ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . const TGraph & ; gr, . int ; order = 3, . bool ; logy = false, . bool ; logx = false . ). Constructor for creating a spline from a TGraph. ; Parameters. [in]nameThe name of the spline. ; [in]titleThe title of the spline. ; [in]xThe independent variable. ; [in]grThe input TGraph containing the data points. ; [in]orderThe order of the spline (3 or 5). ; [in]logxIf true, the x values are logarithmically scaled before spline creation. ; [in]logyIf true, the y values are logarithmically scaled before spline creation. . Definition at line 58 of file RooSpline.cxx. ◆ RooSpline() [4/4]. RooSpline::RooSpline ; (; const RooSpline & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Parameters. [in]otherThe RooSpline object to copy from. ; [in]nameThe name of the new RooSpline object (optional). . Definition at line 118 of file RooSpline.cxx. Member Function Documentation. ◆ Class(). static TClass * RooSpline::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooSpline::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooSpline::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpline.html:62800,variab,variable,62800,doc/master/classRooSpline.html,https://root.cern,https://root.cern/doc/master/classRooSpline.html,1,['variab'],['variable']
Modifiability,"nst double&operator()(Int_t i) const; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTDiag_const<double>& d); voidoperator+=(double val); voidoperator+=(const TMatrixTDiag_const<double>& d); voidoperator=(double val); voidoperator=(const TMatrixTDiag_const<double>& d); TMatrixTDiag<double>&operator=(const TMatrixTDiag<double>& d); voidoperator=(const TVectorT<double>& vec); const double&operator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tTMatrixTDiag_const<double>::fIncif ptr=@a[i,i], then ptr+inc = @a[i+1,i+1]; TMatrixTBase<double>*TMatrixTDiag_const<double>::fMatrixthe matrix I am the diagonal of; Int_tTMatrixTDiag_const<double>::fNdiagnumber of diag elems, min(nrows,ncols); const double*TMatrixTDiag_const<double>::fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTDiag_double_.html:2345,Inherit,Inheritance,2345,root/html534/TMatrixTDiag_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTDiag_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst override;  Dump this pavetext with its attributes. ;  ; virtual void ReadFile (const char *filename, Option_t *option="""", Int_t nlines=50, Int_t fromline=0);  Read lines of filename in this pavetext. ;  ; virtual void SaveLines (std::ostream &out, const char *name, Bool_t saved);  Save lines of this pavetext as C++ statements on output stream out. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetAllWith (const char *text, Option_t *option, Double_t value);  Set attribute option for all lines containing string text. ;  ; virtual void SetLabel (const char *label);  ; virtual void SetMargin (Float_t margin=0.05);  ; void Streamer (TBuffer &) override;  Stream an object of class TPaveText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UseCurrentStyle () override;  Replace current attributes by current style. ;  ;  Public Member Functions inherited from TPave;  TPave ();  Pave default constructor. ;  ;  TPave (const TPave &pave);  Pave copy constructor. ;  ;  TPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; virtual TPave * DrawPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Draw this pave with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Int_t GetBorderSize () const;  ; Double_t GetCornerRadius () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Option_t * GetO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDiamond.html:5315,inherit,inherited,5315,doc/master/classTDiamond.html,https://root.cern,https://root.cern/doc/master/classTDiamond.html,3,['inherit'],['inherited']
Modifiability,"nst override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:13965,inherit,inherited,13965,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,6,['inherit'],['inherited']
Modifiability,"nst override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; const char * UnixPathName (const char *unixpathname) override;  Convert a pathname to a unix pathname. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return the working directory for the default drive. ;  ; const char * WorkingDirectory (char driveletter);  Return working directory for the selected drive driveletter == 0 means return the working durectory for the default drive. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual void Closelog ();  Close connection to system log daemon. ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name=""""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:13879,inherit,inherited,13879,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['inherit'],['inherited']
Modifiability,"nst override;  Virtual function for retrieving name of the element. ;  ; const char * GetElementTitle () const override;  Virtual function for retrieving title of the render-element. ;  ; TObject * GetObject (const TEveException &=""TEveElementList::GetObject "") const override;  Get a TObject associated with this render-element. ;  ; TClass * IsA () const override;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void SetChildClass (TClass *c);  ; void SetElementName (const char *name) override;  Virtual function for setting of name of an element. ;  ; void SetElementNameTitle (const char *name, const char *title) override;  Virtual function for setting of name and title of render element. ;  ; void SetElementTitle (const char *title) override;  Virtual function for setting of title of an element. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveElement;  TEveElement ();  Default constructor. ;  ;  TEveElement (Color_t &main_color);  Constructor. ;  ;  TEveElement (const TEveElement &e);  Copy constructor. ;  ; virtual ~TEveElement ();  Destructor. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TEveElement *parent);  Add this render element into ltree to all items belonging to parent. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TGListTreeItem *parent_lti);  Add this element into ltree to an already existing item parent_lti. ;  ; virtual TGListTreeItem * AddIntoListTrees (TEveElement *parent);  Add this render element into all list-trees and all items belonging to parent. ;  ; virtual void AddParent (TEveElement *re);  Add re into the list parents. ;  ; virtual void AddStamp (UChar_t bits);  Add (bitwise or) given stamps to fChangeBits. ;  ; virtual void Annihilate ();  Optimized destruction without check of reference-count. ;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:3184,inherit,inherited,3184,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,2,['inherit'],['inherited']
Modifiability,"nst override;  Virtual function for retrieving name of the element. ;  ; const char * GetElementTitle () const override;  Virtual function for retrieving title of the render-element. ;  ; TObject * GetObject (const TEveException &=""TEveElementList::GetObject "") const override;  Get a TObject associated with this render-element. ;  ; TClass * IsA () const override;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void SetChildClass (TClass *c);  ; void SetElementName (const char *name) override;  Virtual function for setting of name of an element. ;  ; void SetElementNameTitle (const char *name, const char *title) override;  Virtual function for setting of name and title of render element. ;  ; void SetElementTitle (const char *title) override;  Virtual function for setting of title of an element. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveElement;  TEveElement ();  Default constructor. ;  ;  TEveElement (Color_t &main_color);  Constructor. ;  ;  TEveElement (const TEveElement &e);  Copy constructor. ;  ; virtual ~TEveElement ();  Destructor. ;  ; virtual void AddElement (TEveElement *el);  Add el to the list of children. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TEveElement *parent);  Add this render element into ltree to all items belonging to parent. ;  ; virtual TGListTreeItem * AddIntoListTree (TGListTree *ltree, TGListTreeItem *parent_lti);  Add this element into ltree to an already existing item parent_lti. ;  ; virtual TGListTreeItem * AddIntoListTrees (TEveElement *parent);  Add this render element into all list-trees and all items belonging to parent. ;  ; virtual void AddParent (TEveElement *re);  Add re into the list parents. ;  ; virtual void AddStamp (UChar_t bits);  Add (bitwise or) given stamps to fChangeBits. ;  ; virtual void A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:2217,inherit,inherited,2217,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,1,['inherit'],['inherited']
Modifiability,"nst override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the fit model function ;  ; bool SetVariable (unsigned int, const std::string &, double, double) override;  set free variable (dummy impl. since there is no need to set variables in the Linear Fitter) ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:2414,variab,variable,2414,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,2,['variab'],['variable']
Modifiability,"nst std::vector< Double_t > &event, Double_t weight=1.0)add signal testing eventDefinition DataLoader.cxx:236; TMVA::DataLoader::DefaultDataSetInfoDataSetInfo & DefaultDataSetInfo()default creationDefinition DataLoader.cxx:533; TMVA::DataLoader::AddBackgroundTestEventvoid AddBackgroundTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:252; TMVA::DataLoader::fDataSetManagerDataSetManager * fDataSetManagerDefinition DataLoader.h:186; TMVA::DataLoader::MakeCopyDataLoader * MakeCopy(TString name)Copy method use in VI and CV.Definition DataLoader.cxx:691; TMVA::DataLoader::SetSignalWeightExpressionvoid SetSignalWeightExpression(const TString &variable)Definition DataLoader.cxx:549; TMVA::DataLoader::MakeKFoldDataSetvoid MakeKFoldDataSet(CvSplit &s)Function required to split the training and testing datasets into a number of folds.Definition DataLoader.cxx:662; TMVA::DataLoader::SetWeightExpressionvoid SetWeightExpression(const TString &variable, const TString &className="""")Definition DataLoader.cxx:563; TMVA::DataLoader::AddBackgroundTrainingEventvoid AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:244; TMVA::DataLoader::RecombineKFoldDataSetvoid RecombineKFoldDataSet(CvSplit &s, Types::ETreeType tt=Types::kTraining)Recombines the dataset.Definition DataLoader.cxx:683; TMVA::DataLoader::VarTransformDataLoader * VarTransform(TString trafoDefinition)Transforms the variables and return a new DataLoader with the transformed variables.Definition DataLoader.cxx:146; TMVA::DataLoader::SetBackgroundWeightExpressionvoid SetBackgroundWeightExpression(const TString &variable)Definition DataLoader.cxx:556; TMVA::DataLoader::AddCutvoid AddCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:588; TMVA::DataLoader::AddEventvoid AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:34267,variab,variable,34267,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nst string& name, double val, double step, double, double); virtual boolROOT::Math::Minimizer::SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); voidROOT::Math::Minimizer::SetMaxFunctionCalls(unsigned int maxfcn); voidROOT::Math::Minimizer::SetMaxIterations(unsigned int maxiter); voidROOT::Math::Minimizer::SetOptions(const ROOT::Math::MinimizerOptions& opt); voidROOT::Math::Minimizer::SetPrecision(double prec); voidROOT::Math::Minimizer::SetPrintLevel(int level); voidROOT::Math::Minimizer::SetStrategy(int strategyLevel); voidROOT::Math::Minimizer::SetTolerance(double tol); virtual boolROOT::Math::Minimizer::SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); voidROOT::Math::Minimizer::SetValidError(bool on); virtual boolSetVariable(unsigned int ivar, const string& name, double val, double step); virtual boolROOT::Math::Minimizer::SetVariableInitialRange(unsigned int, double, double); virtual boolROOT::Math::Minimizer::SetVariableLimits(unsigned int ivar, double lower, double upper); virtual boolROOT::Math::Minimizer::SetVariableLowerLimit(unsigned int ivar, double lower); virtual boolROOT::Math::Minimizer::SetVariableStepSize(unsigned int ivar, double value); virtual boolROOT::Math::Minimizer::SetVariableUpperLimit(unsigned int ivar, double upper); virtual boolSetVariableValue(unsigned int ivar, double val); virtual boolROOT::Math::Minimizer::SetVariableValues(const double* x); virtual voidShowMembers(TMemberInspector& insp) const; intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TFumiliMinimizer(int dummy = 0); doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string& name) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int ivar) const; virtual const double*X() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFumiliMinimizer.html:5037,Variab,VariableIndex,5037,root/html602/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html602/TFumiliMinimizer.html,4,['Variab'],"['VariableIndex', 'VariableName']"
Modifiability,"nst the values for that variables are zero.; 146 The array will be filled as h[i *ndim + j]; 147*/; 148bool Minimizer::GetHessianMatrix(double *hMat) const; 149{; 150 MATH_UNUSED(hMat);; 151 return false;; 152}; 153 ; 154/**; 155 return global correlation coefficient for variable i; 156 This is a number between zero and one which gives; 157 the correlation between the i-th parameter and that linear combination of all; 158 other parameters which is most strongly correlated with i.; 159 Minimizer must overload method if implemented; 160 */; 161double Minimizer::GlobalCC(unsigned int ivar) const; 162{; 163 MATH_UNUSED(ivar);; 164 return -1;; 165}; 166 ; 167/**; 168 minos error for variable i, return false if Minos failed or not supported; 169 and the lower and upper errors are returned in errLow and errUp; 170 An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run; 171*/; 172bool Minimizer::GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option); 173{; 174 MATH_ERROR_MSG(""Minimizer::GetMinosError"", ""Minos Error not implemented"");; 175 MATH_UNUSED(ivar);; 176 MATH_UNUSED(errLow);; 177 MATH_UNUSED(errUp);; 178 MATH_UNUSED(option);; 179 return false;; 180}; 181 ; 182/**; 183 perform a full calculation of the Hessian matrix for error calculation; 184 */; 185bool Minimizer::Hesse(); 186{; 187 MATH_ERROR_MSG(""Minimizer::Hesse"", ""Hesse not implemented"");; 188 return false;; 189}; 190 ; 191/**; 192 scan function minimum for variable i. Variable and function must be set before using Scan; 193 Return false if an error or if minimizer does not support this functionality; 194 */; 195bool Minimizer::Scan(unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin, double xmax); 196{; 197 MATH_ERROR_MSG(""Minimizer::Scan"", ""Scan not implemented"");; 198 MATH_UNUSED(ivar);; 199 MATH_UNUSED(nstep);; 200 MATH_UNUSED(x);; 201 MATH_UNUSED(y);; 202 MATH_UNUSED(xmin);; 203 MATH_UNUSED(xmax);; 204 return false;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:5999,variab,variable,5999,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,2,['variab'],['variable']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGCanvas.h>. Inheritance diagram for TGCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkCanvasNoScroll ; kCanvasScrollHorizontal ; kCanvasScrollVertical ; kCanvasScrollBoth . Definition at line 205 of file TGCanvas.h. Constructor & Destructor Documentation. ◆ TGCanvas() [1/2]. TGCanvas::TGCanvas ; (; const TGCanvas & ; ). privatedelete . ◆ TGCanvas() [2/2]. TGCanvas::TGCanvas ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCanvas.html:28061,inherit,inherited,28061,doc/master/classTGCanvas.html,https://root.cern,https://root.cern/doc/master/classTGCanvas.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPalette:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPalette() [1/2]. TGColorPalette::TGColorPalette ; (; const TGColorPalette & ; ). privatedelete . ◆ TGColorPalette() [2/2]. TGColorPalette::TGColorPalette ; (; const TGWindow * ; p = nullptr, . Int_t ; cols = 8, . Int_t ; rows = 8, . Int_t ; id = -1 . ). TGColorPalette widget: this is just a grid of color cells ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPalette.html:28852,inherit,inherited,28852,doc/master/classTGColorPalette.html,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPick:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPick(). TGColorPick::TGColorPick ; (; const TGWindow * ; p = nullptr, . Int_t ; w = 1, . Int_t ; h = 1, . Int_t ; id = -1 . ). TGColorPick constructor. ; TGColorPick is a widget which allows a color to be picked from HLS space. It consists of two elements: a color map window from where the user can select the hue ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPick.html:29570,inherit,inherited,29570,doc/master/classTGColorPick.html,https://root.cern,https://root.cern/doc/master/classTGColorPick.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorFrame() [1/2]. TGColorFrame::TGColorFrame ; (; const TGColorFrame & ; ). privatedelete . ◆ TGColorFrame() [2/2]. TGColorFrame::TGColorFrame ; (; const TGWindow * ; p = nullptr, . Pixel_t ; color = 0, . Int_t ; n = 1 . ). TGColorFrame constructor. ; The TGColorFrame is a small frame with border showing a specific ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorFrame.html:26604,inherit,inherited,26604,doc/master/classTGColorFrame.html,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGDoubleSlider.h>. Inheritance diagram for TGDoubleHSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGDoubleHSlider(). TGDoubleHSlider::TGDoubleHSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; type = 1, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFrame, . Pixel_t ; back = GetDefaultFrameBackground(), . Bool_t ; reversed = kFALSE, . Bool_t ; mark_ends = kFALSE . ). Create horizontal ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:31582,inherit,inherited,31582,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGDoubleSlider.h>. Inheritance diagram for TGDoubleVSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGDoubleVSlider(). TGDoubleVSlider::TGDoubleVSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; h = 1, . UInt_t ; type = 1, . Int_t ; id = -1, . UInt_t ; options = kVerticalFrame, . Pixel_t ; back = GetDefaultFrameBackground(), . Bool_t ; reversed = kFALSE, . Bool_t ; mark_ends = kFALSE . ). Create a vertical sl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleVSlider.html:31443,inherit,inherited,31443,doc/master/classTGDoubleVSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleVSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGIcon.h>. Inheritance diagram for TGIcon:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGIcon() [1/3]. TGIcon::TGIcon ; (; const TGIcon & ; ). privatedelete . ◆ TGIcon() [2/3]. TGIcon::TGIcon ; (; const TGWindow * ; p, . const TGPicture * ; pic, . UInt_t ; w, . UInt_t ; h, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). inline . Definition at line 36 of file TGIcon.h. ◆ TGIcon() [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIcon.html:26853,inherit,inherited,26853,doc/master/classTGIcon.html,https://root.cern,https://root.cern/doc/master/classTGIcon.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGListBox.h>. Inheritance diagram for TGLBEntry:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLBEntry(). TGLBEntry::TGLBEntry ; (; const TGWindow * ; p = nullptr, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFrame, . Pixel_t ; back = GetWhitePixel() . ). Base class entry constructor. ; Definition at line 99 of file TGListBox.cxx. Member Function Documentation. ◆ Activate(). void TGLBEntry::Activate ; (; Bool_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBEntry.html:26388,inherit,inherited,26388,doc/master/classTGLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGLBEntry.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiDecorFrame.h>. Inheritance diagram for TGMdiTitleIcon:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMdiTitleIcon(). TGMdiTitleIcon::TGMdiTitleIcon ; (; const TGWindow * ; p, . const TGWindow * ; titlebar, . const TGPicture * ; pic, . Int_t ; w, . Int_t ; h . ). TGMdiTitleIcon constructor. ; the TGMdiTitleIcon is the left icon used also for the MDI popup menu allowing access to MDI commands as : restore, move, si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiTitleIcon.html:27608,inherit,inherited,27608,doc/master/classTGMdiTitleIcon.html,https://root.cern,https://root.cern/doc/master/classTGMdiTitleIcon.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiDecorFrame.h>. Inheritance diagram for TGMdiWinResizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMdiWinResizer(). TGMdiWinResizer::TGMdiWinResizer ; (; const TGWindow * ; p, . const TGWindow * ; mdiwin, . Int_t ; pos, . const TGGC * ; boxgc, . Int_t ; linew, . Int_t ; mdioptions = kMdiDefaultResizeMode, . Int_t ; w = 1, . Int_t ; h = 1, . UInt_t ; options = kOwnBackground . ). TGMdiWinResizer constructor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiWinResizer.html:28334,inherit,inherited,28334,doc/master/classTGMdiWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiWinResizer.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiMainFrame.h>. Inheritance diagram for TGMdiContainer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMdiContainer(). TGMdiContainer::TGMdiContainer ; (; const TGMdiMainFrame * ; p, . Int_t ; w, . Int_t ; h, . UInt_t ; options = 0, . ULong_t ; back = GetDefaultFrameBackground() . ). TGMdiContainer constructor. ; Definition at line 1174 of file TGMdiMainFrame.cxx. Member Function Documentation. ◆ Class(). static TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiContainer.html:25928,inherit,inherited,25928,doc/master/classTGMdiContainer.html,https://root.cern,https://root.cern/doc/master/classTGMdiContainer.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGMdiMainFrame.h>. Inheritance diagram for TGMdiMainFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkMinimizedWidth . Definition at line 136 of file TGMdiMainFrame.h. Constructor & Destructor Documentation. ◆ TGMdiMainFrame(). TGMdiMainFrame::TGMdiMainFrame ; (; const TGWindow * ; p, . TGMdiMenuBar * ; menu, . Int_t ; w, . Int_t ; h, . UInt_t ; options = 0, . Pixel_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiMainFrame.html:32639,inherit,inherited,32639,doc/master/classTGMdiMainFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiMainFrame.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGScrollBar.h>. Inheritance diagram for TGScrollBarElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGScrollBarElement() [1/2]. TGScrollBarElement::TGScrollBarElement ; (; const TGScrollBarElement & ; ). privatedelete . ◆ TGScrollBarElement() [2/2]. TGScrollBarElement::TGScrollBarElement ; (; const TGWindow * ; p = nullptr, . const TGPicture * ; pic = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGScrollBarElement.html:26908,inherit,inherited,26908,doc/master/classTGScrollBarElement.html,https://root.cern,https://root.cern/doc/master/classTGScrollBarElement.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSlider.h>. Inheritance diagram for TGHSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGHSlider(). TGHSlider::TGHSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 40, . UInt_t ; type = kSlider1 | kScaleBoth, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Create horizontal slider widget. ; Definition at line 368 of file TGSlider.cxx. ◆ ~TGHSl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSlider.html:29849,inherit,inherited,29849,doc/master/classTGHSlider.html,https://root.cern,https://root.cern/doc/master/classTGHSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSlider.h>. Inheritance diagram for TGSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGSlider() [1/2]. TGSlider::TGSlider ; (; const TGSlider & ; ). privatedelete . ◆ TGSlider() [2/2]. TGSlider::TGSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; type = kSlider1 | kScaleBoth, . Int_t ; id = -1, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSlider.html:28908,inherit,inherited,28908,doc/master/classTGSlider.html,https://root.cern,https://root.cern/doc/master/classTGSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSlider.h>. Inheritance diagram for TGVSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGVSlider(). TGVSlider::TGVSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; h = 40, . UInt_t ; type = kSlider1 | kScaleBoth, . Int_t ; id = -1, . UInt_t ; options = kVerticalFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Create a vertical slider widget. ; Definition at line 173 of file TGSlider.cxx. ◆ ~TGVSlid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVSlider.html:29701,inherit,inherited,29701,doc/master/classTGVSlider.html,https://root.cern,https://root.cern/doc/master/classTGVSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSpeedo.h>. Inheritance diagram for TGSpeedo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGlowColor. enum TGSpeedo::EGlowColor. EnumeratorkNoglow ; kGreen ; kOrange ; kRed . Definition at line 25 of file TGSpeedo.h. Constructor & Destructor Documentation. ◆ TGSpeedo() [1/2]. TGSpeedo::TGSpeedo ; (; const TGWindow * ; p = nullptr, . int ; id = -1 . ). TGSpeedo widget constructor. ; Definition at line 47 of file TGSpeedo.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSpeedo.html:31058,inherit,inherited,31058,doc/master/classTGSpeedo.html,https://root.cern,https://root.cern/doc/master/classTGSpeedo.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSplitter.h>. Inheritance diagram for TGHSplitter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGHSplitter() [1/3]. TGHSplitter::TGHSplitter ; (; const TGHSplitter & ; ). privatedelete . ◆ TGHSplitter() [2/3]. TGHSplitter::TGHSplitter ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 4, . UInt_t ; h = 4, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Create a horizontal splitt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSplitter.html:28104,inherit,inherited,28104,doc/master/classTGHSplitter.html,https://root.cern,https://root.cern/doc/master/classTGHSplitter.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSplitter.h>. Inheritance diagram for TGSplitter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGSplitter() [1/2]. TGSplitter::TGSplitter ; (; const TGSplitter & ; ). privatedelete . ◆ TGSplitter() [2/2]. TGSplitter::TGSplitter ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 2, . UInt_t ; h = 4, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Create a splitter. ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitter.html:26786,inherit,inherited,26786,doc/master/classTGSplitter.html,https://root.cern,https://root.cern/doc/master/classTGSplitter.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGSplitter.h>. Inheritance diagram for TGVSplitter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGVSplitter() [1/3]. TGVSplitter::TGVSplitter ; (; const TGVSplitter & ; ). privatedelete . ◆ TGVSplitter() [2/3]. TGVSplitter::TGVSplitter ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 4, . UInt_t ; h = 4, . UInt_t ; options = kChildFrame, . Pixel_t ; back = GetDefaultFrameBackground() . ). Create a vertical splitter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVSplitter.html:27979,inherit,inherited,27979,doc/master/classTGVSplitter.html,https://root.cern,https://root.cern/doc/master/classTGVSplitter.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTab.h>. Inheritance diagram for TGTabElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTabElement() [1/2]. TGTabElement::TGTabElement ; (; const TGTabElement & ; ). privatedelete . ◆ TGTabElement() [2/2]. TGTabElement::TGTabElement ; (; const TGWindow * ; p = nullptr, . TGString * ; text = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . GContext_t ; norm = TGTab::GetDefaultGC()(), . FontStruct_t ; font = TGTab::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTabElement.html:27267,inherit,inherited,27267,doc/master/classTGTabElement.html,https://root.cern,https://root.cern/doc/master/classTGTabElement.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTripleSlider.h>. Inheritance diagram for TGTripleHSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTripleHSlider(). TGTripleHSlider::TGTripleHSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; type = 1, . Int_t ; id = -1, . UInt_t ; options = kHorizontalFrame, . Pixel_t ; back = GetDefaultFrameBackground(), . Bool_t ; reversed = kFALSE, . Bool_t ; mark_ends = kFALSE, . Bool_t ; constrained",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleHSlider.html:33686,inherit,inherited,33686,doc/master/classTGTripleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleHSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTripleSlider.h>. Inheritance diagram for TGTripleVSlider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTripleVSlider(). TGTripleVSlider::TGTripleVSlider ; (; const TGWindow * ; p = nullptr, . UInt_t ; h = 1, . UInt_t ; type = 1, . Int_t ; id = -1, . UInt_t ; options = kVerticalFrame, . Pixel_t ; back = GetDefaultFrameBackground(), . Bool_t ; reversed = kFALSE, . Bool_t ; mark_ends = kFALSE, . Bool_t ; constrained =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleVSlider.html:33651,inherit,inherited,33651,doc/master/classTGTripleVSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleVSlider.html,3,['inherit'],['inherited']
Modifiability,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TRootEmbeddedCanvas.h>. Inheritance diagram for TRootEmbeddedCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRootEmbeddedCanvas() [1/2]. TRootEmbeddedCanvas::TRootEmbeddedCanvas ; (; const TRootEmbeddedCanvas & ; ). privatedelete . ◆ TRootEmbeddedCanvas() [2/2]. TRootEmbeddedCanvas::TRootEmbeddedCanvas ; (; const char * ; name = nullptr, . const TGWindow * ; p = nullptr, . UInt_t ; w = 10, . UInt_t ; h = 10, . UI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootEmbeddedCanvas.html:29964,inherit,inherited,29964,doc/master/classTRootEmbeddedCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootEmbeddedCanvas.html,3,['inherit'],['inherited']
Modifiability,"nst. Computes the numerical derivative at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(double x, double h = 1.0E-8) const. Computes the numerical derivative at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(double x, double h = 1.0E-8) const. Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8). Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IMultiGenFunction& f, const double* x, unsigned int icoord = 0, double h = 1.0E-8); Derivatives for multi-dimensio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Derivator.html:4419,adapt,adaptive,4419,root/html602/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Derivator.html,4,['adapt'],['adaptive']
Modifiability,"nst. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at line 517 of file TClass.h. ◆ IsFolder() [2/2]. Bool_t TClass::IsFolder ; (; void * ; obj); const. Return kTRUE if the class has elements. ; Definition at line 4135 of file TClass.cxx. ◆ IsForeign(). Bool_t TClass::IsForeign ; (; ); const. Return kTRUE is the class is Foreign (the class does not have a Streamer method). ; Definition at line 5947 of file TClass.cxx. ◆ IsLoaded(). Bool_t TClass::IsLoaded ; (; ); const. Return true if the shared library of this class is currently in the a process's memory. ; Return false, after the shared library has been unloaded or if this is an 'emulated' class created from a file's StreamerInfo. ; Definition at line 5912 of file TClass.cxx. ◆ IsStartingWithTObject(). Bool_t TClass::IsStartingWithTObject ; (; ); const. Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ; Concretely this means that the following code is proper for this class: ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from TObject. ; Definition at line 5929 of file TClass.cxx. ◆ IsSyntheticPair(). Bool_t TClass::IsSyntheticPair ; (; ); const. inline . Definition at line 521 of file TClass.h. ◆ IsTObject(). Bool_t TClass::IsTObject ; (; ); const. Return kTRUE is the class inherits from TObject. ; Definition at line 5938 of file TClass.cxx. ◆ IsVersioned(). Bool_t TClass::IsVersioned ; (; ); const. inline . Definition at line 522 of file TClass.h. ◆ Load(). TClass * TClass::Load ; (; TBuffer & ; b). static . Load class description from I/O buffer and return class object. ; Definition at line 5715 of file TClass.cxx. ◆ LoadClass(). TClass * TClass::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent . ). static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:100627,inherit,inherits,100627,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inherits']
Modifiability,"nst. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at line 517 of file TClass.h. ◆ IsFolder() [2/2]. Bool_t TClass::IsFolder ; (; void * ; obj); const. Return kTRUE if the class has elements. ; Definition at line 4202 of file TClass.cxx. ◆ IsForeign(). Bool_t TClass::IsForeign ; (; ); const. Return kTRUE is the class is Foreign (the class does not have a Streamer method). ; Definition at line 6014 of file TClass.cxx. ◆ IsLoaded(). Bool_t TClass::IsLoaded ; (; ); const. Return true if the shared library of this class is currently in the a process's memory. ; Return false, after the shared library has been unloaded or if this is an 'emulated' class created from a file's StreamerInfo. ; Definition at line 5979 of file TClass.cxx. ◆ IsStartingWithTObject(). Bool_t TClass::IsStartingWithTObject ; (; ); const. Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ; Concretely this means that the following code is proper for this class: ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from TObject. ; Definition at line 5996 of file TClass.cxx. ◆ IsSyntheticPair(). Bool_t TClass::IsSyntheticPair ; (; ); const. inline . Definition at line 521 of file TClass.h. ◆ IsTObject(). Bool_t TClass::IsTObject ; (; ); const. Return kTRUE is the class inherits from TObject. ; Definition at line 6005 of file TClass.cxx. ◆ IsVersioned(). Bool_t TClass::IsVersioned ; (; ); const. inline . Definition at line 522 of file TClass.h. ◆ Load(). TClass * TClass::Load ; (; TBuffer & ; b). static . Load class description from I/O buffer and return class object. ; Definition at line 5782 of file TClass.cxx. ◆ LoadClass(). TClass * TClass::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent . ). static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:100628,inherit,inherits,100628,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inherits']
Modifiability,"nst. protected:. virtual voidClearFormula(); virtual Bool_tCompileVariables(); virtual voidDefVar(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTObject::MakeZombie(); virtual Bool_tProcessSingle(Long64_t, Int_t); voidSetCanvas(const char* objname); voidSetDrawAtt(TObject* o); voidSetError(const char* sub, const char* mesg). Data Members; public:. enum { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tfDimensionDimension of the current expression; TStringfInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*fManager; Int_tfMultiplicityIndicator of the variability of the size of entries; Bool_tfObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*fSelectPointer to selection formula; TStringfSelection; TStatus*fStatus; Long64_tTSelector::fStatusselector status; TTree*fTree; TTreeDrawArgsParserfTreeDrawArgsParser; TTreeFormula*fVar[4]Pointer to variable formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDraw(); Destructor. void Init(TTree* ); Init the tree. Bool_t Notify(); Called when a new tree is loaded. void Begin(TTree* ); Executed by the client before processing. void SlaveBegin(TTree* ); Executed by each slave before processing. Bool_t ProcessSingle(Long64_t , Int_t ); Processe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDraw.html:6700,variab,variability,6700,root/html528/TProofDraw.html,https://root.cern,https://root.cern/root/html528/TProofDraw.html,1,['variab'],['variability']
Modifiability,"nst. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EProcStatus { kNotOk; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfExitStatusQuery exit status ((Int_t)TVirtualProofPlayer::EExitStatus or -1);; THashListfInfoMsgslist of info messages; TIterfIter!iterator in messages; TListfMsgslist of error messages; Long_tfResMaxMstMax resident memory used by the master; Long_tfResMemMaxMax resident memory used by the worker; Long_tfVirtMaxMstMax virtual memory used by the master; Long_tfVirtMemMaxMax virtual memory used by the worker. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStatus(); Default constructor. void Add(const char* mesg); Add an error message. void AddInfo(const char* mesg); Add an info message. Int_t Merge(TCollection* list); PROOF Merge() function. void Print(Option_t* option = """") const; Standard print function. void Reset(); Reset the iterator on the messages. const char * NextMesg(); Return the next message or 0. void SetMemValues(Long_t vmem = -1, Long_t rmem = -1, Bool_t master = kFALSE); Set max memory values. void Streamer(TBuffer& ); Stream an object of class TStatus. virtual ~TStatus(); { }. Bool_t IsOk() const; { return TestBit(kNotOk) ? kFALSE : kTRUE; }. Int_t GetExitStatus() const; { return fExitStatus; }. Long_t GetResMemMax(Bool_t master = kFALSE) const; { return ((master) ? fResMaxMst : fResMemMax); }. Long_t GetVirtMemMax(Bool_t master = kFALSE) const; { return ((master) ? fVirtMaxMst : fVirtMemMax); }. void SetExitStatus(Int_t est); { fExitStatus = est; }. » Author: Maarten ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStatus.html:6459,Inherit,Inheritance,6459,root/html534/TStatus.html,https://root.cern,https://root.cern/root/html534/TStatus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst. protected:. voidInitialize(); TKey*NextEventKey(UInt_t eventNumber = UInt_t(-1), UInt_t runNumber = UInt_t(-1), const char* name = ""*""); TObject*ReadObj(const TKey* key) const. private:. virtual Bool_toperator!=(const TIterator& it) const; virtual TIterator&operator=(const TIterator&). Data Members; protected:. TObjLink*TListIter::fCurCursorcurrent position in list; TObjLink*TListIter::fCursornext position in list; Int_tfCursorPositionthe position of the current key in the sorted TKey list; Bool_tTListIter::fDirectioniteration direction; TStringfEventNamecurrent key name; UInt_tfEventNumbercurrent ""event number""; const TList*TListIter::fListlist being iterated; Bool_tfOwnTFileBit whether this classs creates TFile on its own to delete; TDirectory*fRootFileTDirectory/TFile to be iterated over; UInt_tfRunNumbercurrent ""run number""; Bool_tTListIter::fStartediteration started. private:. TFileIter*fNestedIterator! The inner TFidrectory interator;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileIter(TFile* file = 0); Create iterator over all objects from the TFile provided. TFileIter(TDirectory* directory); Create iterator over all objects from the TDirectory provided. TFileIter(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); Open ROOT TFile by the name provided;; This TFile is to be deleted by the TFileIter alone. TFileIter(const TFileIter& ); Copy ctor can be used with the ""read only"" files only.; the next statement is illegal, spotted by coverity ""Dereferencing pointer ""this->fRootFile"". (Deref happens because this is a virtual function call.); assert(!fRootFile->IsWritable());. ~TFileIter(); TFileIter dtor. void Initialize(); to be documented. Bool_t IsOpen() const; Check whether the associated ROOT TFile was open; and TFile object is healthy. TKey * GetCurrentKey() const; return the pointer to the current TKey. Int_t GetDepth() const; return the current number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileIter.html:6577,Inherit,Inheritance,6577,root/html534/TFileIter.html,https://root.cern,https://root.cern/root/html534/TFileIter.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst. void RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); { fTransformationPointer=fTargetTransformation; }. DataSetInfo& DataInfo() const; ---------- event accessors ------------------------------------------------; returns reference to data set. { return fDataSetInfo; }. UInt_t GetNEvents() const; event reference and update. { return Data()->GetNEvents(); }. Bool_t HasMVAPdfs() const; { return fHasMVAPdfs; }. void SetAnalysisType(TMVA::Types::EAnalysisType type); { fAnalysisType = type; }. Types::EAnalysisType GetAnalysisType() const; { return fAnalysisType; }. Bool_t DoRegression() const; { return fAnalysisType == Types::kRegression; }. Bool_t DoMulticlass() const; { return fAnalysisType == Types::kMulticlass; }. void DisableWriting(Bool_t setter); setter method for suppressing writing to XML and writing of standalone classes. { fDisableWriting = setter; }. const TString& GetWeightFileDir() const; { return fFileDir; }. Bool_t IsNormalised() const; are input variables normalised ?. { return fNormalise; }. void SetNormalised(Bool_t norm); { fNormalise = norm; }. Bool_t Verbose() const; set number of input variables (only used by MethodCuts, could perhaps be removed); void SetNvar( Int_t n ) { fNvar = n; }; verbose and help flags. { return fVerbose; }. Bool_t Help() const; { return fHelp; }. const TString& GetInternalVarName(Int_t ivar) const; ---------- protected event and tree accessors -----------------------------; names of input variables (if the original names are expressions, they are; transformed into regexps). { return (*fInputVars)[ivar]; }. const TString& GetOriginalVarName(Int_t ivar) const; { return DataInfo().GetVariableInfo(ivar).GetExpression(); }. Bool_t HasTrainingTree() const; { return Data()->GetNTrainingEvents() != 0; }. void MakeClassSpecific(ostream& , const TString& = """") const; ---------- protected auxiliary methods ------------------------------------; make ROOT-independent C++ class for classifier response ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBase.html:35367,variab,variables,35367,root/html530/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBase.html,3,['variab'],['variables']
Modifiability,"nst; Bool_tHasDepth() const; Bool_tHasMultiSampling() const; Bool_tHasStencil() const; virtual TClass*IsA() const; Bool_tIsDoubleBuffered() const; Bool_tIsStereo() const; Bool_toperator!=(const TGLFormat& rhs) const; TGLFormat&operator=(const TGLFormat&); Bool_toperator==(const TGLFormat& rhs) const; voidSetAccumSize(Int_t accum); voidSetDepthSize(Int_t depth); voidSetDoubleBuffered(Bool_t db); voidSetSamples(Int_t samples); voidSetStencilSize(Int_t stencil); voidSetStereo(Bool_t db); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. static Int_tGetDefaultSamples(); static voidInitAvailableSamples(). Data Members; public:. enum EFormatOptions { kNone; kDoubleBuffer; kDepth; kAccum; kStencil; kStereo; kMultiSample; };. private:. Int_tfAccumSize; Int_tfDepthSize; Bool_tfDoubleBuffered; Int_tfSamples; Int_tfStencilSize; Bool_tfStereo; static vector<Int_t>fgAvailableSamples. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLFormat(); 16-bits needed for some virtual machines (VirtualBox) and Xming-mesa; (when running ssh from windows to linux).; All others seem to have 24-bit depth-buffers only and use this anyway.; Default ctor. Default surface is:; -double buffered; -RGBA; -with depth buffer; -no accumulation buffer; -with stencil; -multi-sampling depends on seeting of ""OpenGL.Framebuffer.Multisample"". TGLFormat(EFormatOptions opt); Define surface using options. ~TGLFormat(); Destructor. Int_t GetDepthSize() const; Get the size of depth buffer. void SetDepthSize(Int_t depth); Set the size of color buffer. Bool_t HasDepth() const; Check, if this surface has depth buffer. Int_t GetStencilSize() const; Get the size of stencil buffer. void SetStencilSize(Int_t stencil); Set the size of stencil buffer. Bool_t HasStencil() const; Check, if this surface has stencil buffer. Int_t GetAccumSize() const; Get the size of accum buffer. void SetAccumSize(Int_t accu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLFormat.html:1605,Inherit,Inheritance,1605,root/html532/TGLFormat.html,https://root.cern,https://root.cern/root/html532/TGLFormat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::SimulatedAnnealingFitter&operator=(const TMVA::SimulatedAnnealingFitter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperatu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html:4510,Config,Configurable,4510,root/html602/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html,2,['Config'],['Configurable']
Modifiability,"nst; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidPrintBanner() const; voidPrintStepHeader() const; voidPrintTrackInfo() const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfLevelverbose level; Int_tfStepNumbercurrent step number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMCVerbose(Int_t level); Standard constructor. TMCVerbose(); Default constructor. ~TMCVerbose(); Destructor. void PrintBanner() const; Prints banner for track information. void PrintTrackInfo() const; Prints track information. void PrintStepHeader() const; Prints the header for stepping information. void InitMC(); Initialize MC info. void RunMC(Int_t nofEvents); MC run info. void FinishRun(); Finish MC run info. void ConstructGeometry(); Construct geometry info. void ConstructOpGeometry(); Construct geometry for optical physics info. void InitGeometry(); Initialize geometry info. void AddParticles(); Add particles info. void AddIons(); Add ions info. void GeneratePrimaries(); Generate primaries info. void BeginEvent(); Begin event info. void BeginPrimary(); Begin of a primary track info. void PreTrack(); Begin of each track info. void Stepping(); Stepping info. void PostTrack(); Finish of each track info. void FinishPrimary(); Finish o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMCVerbose.html:5906,Inherit,Inheritance,5906,root/html532/TMCVerbose.html,https://root.cern,https://root.cern/root/html532/TMCVerbose.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; Double_tTH1::GetStdDevError(Int_t axis = 1) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis(); const TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis(); const TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis(); const TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHoneycomb(Double_t xstart, Double_t ystart, Double_t a, Int_t k, Int_t s); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, const Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, const Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, const Option_t*) const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::Is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Poly.html:16253,Inherit,InheritsFrom,16253,root/html602/TH2Poly.html,https://root.cern,https://root.cern/root/html602/TH2Poly.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; Helper function for plotting of composite p.d.fs. Given; a set of selected components that should be plotted,; find all nodes that (in)directly depend on these selected; nodes. Mark all directly and indirecty selected nodes; as 'selected' using the selectComp() method. RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; will show a unit normalized curve in the frame variable, taken at the present value; of other observables defined for this PDF. If a PDF is plotted in a frame in which a dataset has already been plotted, it will; show a projected curve integrated over all variables that were present in the shown; dataset except for the one on the x-axis. The normalization of the curve will also; be adjusted to the event count of the plotted dataset. An informational message; will be printed for each projection step that is performed. This function takes the following named arguments. Projection control. Slice(const RooArgSet& set) -- Override default projection behaviour by omittting observables listed; in set from the projection, resulting a 'slice' plot. Slicing is usually; only sensible in discrete observables. The slice is position at the 'current'; value of the observable objects. Slice(RooCategory& cat, -- Override default projection behaviour by omittting specified category; const char* label) observable from the projection, resulting in a 'slice' plot. The slice is positioned; at the given label value. Multiple Slice() commands can be given to specify slices; in multiple observables. Project(const RooArgSet& set) -- Overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsReal.html:47534,variab,variables,47534,root/html534/RooAbsReal.html,https://root.cern,https://root.cern/root/html534/RooAbsReal.html,6,['variab'],['variables']
Modifiability,"nst; Int_tGetArrayDim() const; TDictAttributeMap*TDictionary::GetAttributeMap() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGlobal&operator=(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGlobal.html:3025,Inherit,InheritsFrom,3025,root/html534/TGlobal.html,https://root.cern,https://root.cern/root/html534/TGlobal.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; Int_tGetMaxIndex(Int_t i) const; virtual ULong_tGetMethod() const; virtual const char*TNamed::GetName() const; TClass*GetNewClass() const; Int_tGetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; voidGetSequenceType(TString& type) const; virtual Int_tGetSize() const; TMemberStreamer*GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tGetTObjectOffset() const; Int_tGetType() const; const char*GetTypeName() const; const char*GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerElement.html:3237,Inherit,InheritsFrom,3237,root/html534/TStreamerElement.html,https://root.cern,https://root.cern/root/html534/TStreamerElement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; Int_tGetMaxIndex(Int_t i) const; virtual ULong_tGetMethod() const; virtual const char*TNamed::GetName() const; TClass*GetNewClass() const; Int_tGetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOffset() const; virtual Option_t*TObject::GetOption() const; voidGetSequenceType(TString& type) const; virtual Int_tGetSize() const; TMemberStreamer*GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tGetTObjectOffset() const; Int_tGetType() const; const char*GetTypeName() const; const char*GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXmax() const; Double_tGetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsTransient() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerElement.html:3137,Inherit,InheritsFrom,3137,root/html602/TStreamerElement.html,https://root.cern,https://root.cern/root/html602/TStreamerElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; Int_tTObject::TestBits(UInt_t f) const; THaarMatrixT<double>(); THaarMatrixT<double>(const THaarMatrixT<double>&); THaarMatrixT<double>(Int_t n, Int_t no_cols = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. virtual voidFillIn(TMatrixT<double>& m) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTMatrixTLazy<double>::fColLwb; Int_tTMatrixTLazy<double>::fColUpb; Int_tTMatrixTLazy<double>::fRowLwb; Int_tTMatrixTLazy<double>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THaarMatrixT<Element> FillIn(TMatrixT<double>& m) const. void operator=(const THaarMatrixT<double>& ); { }. » Last changed: root/matrix:$Id$ » Last generated: 2015-06-02 16:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THaarMatrixT_double_.html:6215,Inherit,Inheritance,6215,root/html604/THaarMatrixT_double_.html,https://root.cern,https://root.cern/root/html604/THaarMatrixT_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; Int_tTObject::TestBits(UInt_t f) const; THaarMatrixT<double>(); THaarMatrixT<double>(const THaarMatrixT<double>&); THaarMatrixT<double>(Int_t n, Int_t no_cols = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. virtual voidFillIn(TMatrixT<double>& m) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTMatrixTLazy<double>::fColLwb; Int_tTMatrixTLazy<double>::fColUpb; Int_tTMatrixTLazy<double>::fRowLwb; Int_tTMatrixTLazy<double>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THaarMatrixT<Element> FillIn(TMatrixT<double>& m) const. void operator=(const THaarMatrixT<double>& ); { }. » Last changed: root/matrix:$Id$ » Last generated: 2015-06-30 15:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THaarMatrixT_double_.html:6215,Inherit,Inheritance,6215,root/html602/THaarMatrixT_double_.html,https://root.cern,https://root.cern/root/html602/THaarMatrixT_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; ROOT::Math::Cylindrical3D<double>::ScalarR() const; ROOT::Math::Cylindrical3D<double>::ScalarRho() const; voidScale(double a); voidSetCoordinates(const Scalar[] src); voidSetCoordinates(ROOT::Math::Cylindrical3D<double>::Scalar rho, ROOT::Math::Cylindrical3D<double>::Scalar zz, ROOT::Math::Cylindrical3D<double>::Scalar phi); voidSetPhi(double phi); voidSetRho(double rho); voidSetXYZ(ROOT::Math::Cylindrical3D<double>::Scalar x, ROOT::Math::Cylindrical3D<double>::Scalar y, ROOT::Math::Cylindrical3D<double>::Scalar z); voidSetZ(double zz); ROOT::Math::Cylindrical3D<double>::ScalarTheta() const; ROOT::Math::Cylindrical3D<double>::ScalarX() const; doublex() const; ROOT::Math::Cylindrical3D<double>::ScalarY() const; doubley() const; ROOT::Math::Cylindrical3D<double>::ScalarZ() const; doublez() const. private:. static ROOT::Math::Cylindrical3D<double>::Scalarpi(); voidRestrict(). Data Members; private:. Double32_tfPhi; Double32_tfRho; Double32_tfZ. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Cylindrical3D & operator=(const ROOT::Math::Cylindrical3D<double>& v). assignment operator. void SetCoordinates(const Scalar[] src). Set internal data based on an array of 3 Scalar numbers ( rho, z , phi). { fRho=src[0]; fZ=src[1]; fPhi=src[2]; Restrict(); }. void GetCoordinates(Scalar[] dest) const. get internal data into an array of 3 Scalar numbers ( rho, z , phi). { dest[0] = fRho; dest[1] = fZ; dest[2] = fPhi; }. void SetCoordinates(ROOT::Math::Cylindrical3D<double>::Scalar rho, ROOT::Math::Cylindrical3D<double>::Scalar zz, ROOT::Math::Cylindrical3D<double>::Scalar phi). Set internal data based on 3 Scalar numbers ( rho, z , phi). { fRho=rho; fZ=zz; fPhi=phi; Restrict(); }. void GetCoordinates(ROOT::Math::Cylindrical3D<double>::Scalar& rho, ROOT::Math::Cylindrical3D<double>::Scalar& zz, ROOT::Math::Cylindrical3D<double>::Scalar& phi) const. get internal data into 3 Scalar numbers ( rho, z , phi). {rho=fRho; zz=fZ; phi=fPhi;}. Scal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Cylindrical3D_Double32_t_.html:2824,Inherit,Inheritance,2824,root/html602/ROOT__Math__Cylindrical3D_Double32_t_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Cylindrical3D_Double32_t_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; ROOT::Math::Quaternionoperator*(const ROOT::Math::RotationZ& rz) const; ROOT::Math::Quaternion&operator=(const ROOT::Math::Quaternion&); ROOT::Math::Quaternion&operator=(ROOT::Math::Quaternion&&); booloperator==(const ROOT::Math::Quaternion& rhs) const; ROOT::Math::QuaternionQuaternion(); ROOT::Math::QuaternionQuaternion(const ROOT::Math::Quaternion&); ROOT::Math::QuaternionQuaternion(ROOT::Math::Quaternion&&); ROOT::Math::QuaternionQuaternion(ROOT::Math::Quaternion::Scalar u, ROOT::Math::Quaternion::Scalar i, ROOT::Math::Quaternion::Scalar j, ROOT::Math::Quaternion::Scalar k); voidRectify(); voidSetComponents(ROOT::Math::Quaternion::Scalar u, ROOT::Math::Quaternion::Scalar i, ROOT::Math::Quaternion::Scalar j, ROOT::Math::Quaternion::Scalar k); ROOT::Math::Quaternion::ScalarU() const. Data Members; private:. ROOT::Math::Quaternion::ScalarfI; ROOT::Math::Quaternion::ScalarfJ; ROOT::Math::Quaternion::ScalarfK; ROOT::Math::Quaternion::ScalarfU. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Quaternion(); ========== Constructors and Assignment =====================. Default constructor (identity rotation). { }. Quaternion(IT begin, IT end). Construct given a pair of pointers or iterators defining the; beginning and end of an array of four Scalars. { SetComponents(begin,end); }. explicit Quaternion(const OtherRotation & r); ======== Construction From other Rotation Forms ==================. Construct from another supported rotation type (see gv_detail::convert ). {gv_detail::convert(r,*this);}. Quaternion(ROOT::Math::Quaternion::Scalar u, ROOT::Math::Quaternion::Scalar i, ROOT::Math::Quaternion::Scalar j, ROOT::Math::Quaternion::Scalar k). Construct from four Scalars representing the coefficients of u, i, j, k. { }. void Rectify(); The compiler-generated copy ctor, copy assignment, and dtor are OK. Re-adjust components to eliminate small deviations from |Q| = 1; orthonormality. Quaternion & operator=( OtherRotation const & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Quaternion.html:3350,Inherit,Inheritance,3350,root/html602/ROOT__Math__Quaternion.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Quaternion.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; Retrieve discrete variable (RooCategory) with given name. A null pointer is returned if not found. RooAbsCategory* catfunc(const char* name) const; Retrieve discrete function (RooAbsCategory) with given name. A null pointer is returned if not found. RooAbsArg* arg(const char* name) const; Return RooAbsArg with given name. A null pointer is returned if none is found. RooArgSet argSet(const char* nameList) const; Return set of RooAbsArgs matching to given list of names. RooAbsArg* fundArg(const char* name) const; Return fundamental (i.e. non-derived) RooAbsArg with given name. Fundamental types; are e.g. RooRealVar, RooCategory. A null pointer is returned if none is found. RooAbsData* data(const char* name) const; Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. RooAbsData* embeddedData(const char* name) const; Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. RooArgSet allVars() const; Return set with all variable objects. RooArgSet allCats() const; Return set with all category objects. RooArgSet allFunctions() const; Return set with all function objects. RooArgSet allCatFunctions() const; Return set with all category function objects. RooArgSet allResolutionModels() const; Return set with all resolution model objects. RooArgSet allPdfs() const; Return set with all probability density function objects. list<RooAbsData*> allData() const; Return list of all dataset in the workspace. list<RooAbsData*> allEmbeddedData() const; Return list of all dataset in the workspace. list<TObject*> allGenericObjects() const; Return list of all generic objects in the workspace. Bool_t makeDir(); Create transient TDirectory representation of this workspace. This directory; will appear as a subdirectory of the directory that contains the workspace; and will have the name of the workspace suffixed with ""Dir"". The TDirectory; interface is read-only. Any attempt to insert objects into the works",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooWorkspace.html:21796,variab,variable,21796,root/html534/RooWorkspace.html,https://root.cern,https://root.cern/root/html534/RooWorkspace.html,6,['variab'],['variable']
Modifiability,"nst; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumIntConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setIntegratorConfig(const RooNumIntConfig& config); Set the given integrator configuration as default numeric integration; configuration for this object. void setIntegratorConfig(); Remove the specialized numeric integration configuration associated; with this object. void selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); Interface function to force use of a given set of observables; to interpret function value. Needed for functions or p.d.f.s; whose shape depends on the choice of normalization such as; RooAddPdf. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface function to force use of a given normalization range; to interpret function value. Needed for functions or p.d.f.s; whose shape depends on the choice of normalization such as; RooAddPdf. void setCacheCheck(Bool_t flag); Activate cache validation mode. Int_t getMaxVal(const Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:59703,config,configuration,59703,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,3,['config'],['configuration']
Modifiability,"nst; Rgl::Range_tGetXRange() const; Rgl::Range_tGetYRange() const; Rgl::Range_tGetZRange() const; virtual TClass*IsA() const; Bool_tIsActive() const; Bool_tIsInCut(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax) const; voidMoveBox(Int_t px, Int_t py, Int_t axisID); TGLBoxCut&operator=(const TGLBoxCut&); voidResetBoxGeometry(); voidSetActive(Bool_t a); voidSetFactor(Double_t f); virtual voidShowMembers(TMemberInspector& insp) const; voidStartMovement(Int_t px, Int_t py); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGLBoxCut(const TGLPlotBox* plotBox); TGLBoxCut(const TGLBoxCut&); voidTurnOnOff(). private:. voidAdjustBox(). Data Members; private:. Bool_tfActive; TGLVertex3fCenter; Double_tfFactor; TPointfMousePos; const TGLPlotBox*constfPlotBox; Double_tfXLength; Rgl::Range_tfXRange; Double_tfYLength; Rgl::Range_tfYRange; Double_tfZLength; Rgl::Range_tfZRange. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBoxCut(const TGLPlotBox* plotBox); Constructor. ~TGLBoxCut(); Destructor. void TurnOnOff(); Turn the box cut on/off.; If it's on, it will be placed in front point of a plot. void SetActive(Bool_t a); Turn the box cut on/off. void ResetBoxGeometry(); Set geometry using plot's back box. void DrawBox(Bool_t selectionPass, Int_t selected) const; Draw cut as a semi-transparent box. void StartMovement(Int_t px, Int_t py); Start cut's movement. void MoveBox(Int_t px, Int_t py, Int_t axisID); Move box cut along selected direction. void AdjustBox(); Box cut is limited by plot's sizes. Bool_t IsInCut(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax) const; Check, if box defined by xmin/xmax etc. is in cut. TGLBoxCut(const TGLPlotBox* plotBox). Bool_t IsActive() const; {return fActive;}. void SetFactor(Double_t f); {fFactor = f;}. Rgl::Range_t GetXRange() const; {return fXRange;}. Rgl::Range_t GetYRange(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLBoxCut.html:1455,Inherit,Inheritance,1455,root/html602/TGLBoxCut.html,https://root.cern,https://root.cern/root/html602/TGLBoxCut.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; TMVA::VariableDecorrTransformVariableDecorrTransform(TMVA::DataSetInfo& dsi); TMVA::VariableDecorrTransformVariableDecorrTransform(const TMVA::VariableDecorrTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const. protected:. voidTMVA::VariableTransformBase::CalcNorm(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tTMVA::VariableTransformBase::GetNClasses() const; UInt_tTMVA::VariableTransformBase::GetNSpectators() const; UInt_tTMVA::VariableTransformBase::GetNTargets() const; UInt_tTMVA::VariableTransformBase::GetNVariables() const; voidTObject::MakeZombie(); voidTMVA::VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events, Int_t maxCls); voidCalcSQRMats(const vector<TMVA::Event*,allocator<TMVA::Event*> >&, Int_t maxCls). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the curren",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html:7277,Variab,VariableTransformBase,7277,root/html532/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html,15,['Variab'],"['VariableInfo', 'VariableTransformBase', 'Variables']"
Modifiability,"nst; TObjLink**TList::DoSort(TObjLink** head, Int_t n); TObjLink*TList::FindLink(const TObject* obj, Int_t& idx) const; virtual const char*TCollection::GetCollectionEntryName(TObject* entry) const; TObjLink*TList::LinkAt(Int_t idx) const; Bool_tTList::LnkCompare(TObjLink* l1, TObjLink* l2); voidTObject::MakeZombie(); virtual TObjLink*TList::NewLink(TObject* obj, TObjLink* prev = NULL); virtual TObjLink*TList::NewOptLink(TObject* obj, Option_t* opt, TObjLink* prev = NULL); virtual voidTCollection::PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TStringfJobIDthe job's ID; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGridJobStatusList(); { }. virtual ~TGridJobStatusList(); { }. » Author: Andreas-Joachim Peters 10/12/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGridJobStatusList.html:10025,Inherit,Inheritance,10025,root/html534/TGridJobStatusList.html,https://root.cern,https://root.cern/root/html534/TGridJobStatusList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGeoNode.html:8536,Inherit,InheritsFrom,8536,root/html532/TEveGeoNode.html,https://root.cern,https://root.cern/root/html532/TEveGeoNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; TRef&TEveElement::GetSource(); TObject*TEveElement::GetSourceObject() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGeoNode.html:8514,Inherit,InheritsFrom,8514,root/html602/TEveGeoNode.html,https://root.cern,https://root.cern/root/html602/TEveGeoNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; TVirtualMCDecayer(); TVirtualMCDecayer(const TVirtualMCDecayer&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TVirtualMCDecayer. ←. TPythia8Decayer. Function documentation; TVirtualMCDecayer(). {;}. virtual ~TVirtualMCDecayer(); {;}. void Init(). void Decay(Int_t idpart, TLorentzVector* p). Int_t ImportParticles(TClonesArray* particles). void SetForceDecay(Int_t type). void ForceDecay(). Float_t GetPartialBranchingRatio(Int_t ipart). Float_t GetLifetime(Int_t kf). void ReadDecayTable(). » Author: Andreas Morsch 13/04/2002 » Copyright (C) 2006, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-06-02 14:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCDecayer.html:6227,Inherit,Inheritance,6227,root/html602/TVirtualMCDecayer.html,https://root.cern,https://root.cern/root/html602/TVirtualMCDecayer.html,1,['Inherit'],['Inheritance']
Modifiability,"nst; TVirtualMCDecayer(); TVirtualMCDecayer(const TVirtualMCDecayer&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TVirtualMCDecayer. ←. TPythia8Decayer. Function documentation; TVirtualMCDecayer(). {;}. virtual ~TVirtualMCDecayer(); {;}. void Init(). void Decay(Int_t idpart, TLorentzVector* p). Int_t ImportParticles(TClonesArray* particles). void SetForceDecay(Int_t type). void ForceDecay(). Float_t GetPartialBranchingRatio(Int_t ipart). Float_t GetLifetime(Int_t kf). void ReadDecayTable(). » Author: Andreas Morsch 13/04/2002 » Copyright (C) 2006, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-06-02 16:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TVirtualMCDecayer.html:6227,Inherit,Inheritance,6227,root/html604/TVirtualMCDecayer.html,https://root.cern,https://root.cern/root/html604/TVirtualMCDecayer.html,1,['Inherit'],['Inheritance']
Modifiability,"nst; const double&operator()(Int_t i) const; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTColumn_const<double>& c); voidoperator+=(double val); voidoperator+=(const TMatrixTColumn_const<double>& c); voidoperator=(double val); voidoperator=(const TMatrixTColumn_const<double>& c); TMatrixTColumn<double>&operator=(const TMatrixTColumn<double>& c); voidoperator=(const TVectorT<double>& vec); const double&operator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Int_tTMatrixTColumn_const<double>::fColIndeffective column index; Int_tTMatrixTColumn_const<double>::fIncif ptr = @a[i,col], then ptr+inc = @a[i+1,col]; TMatrixTBase<double>*TMatrixTColumn_const<double>::fMatrixthe matrix I am a column of; const double*TMatrixTColumn_const<double>::fPtrpointer to the a[0,col] column. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id: TMatrixTUtils.h 36047 2010-10-04 06:43:15Z brun $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTColumn_double_.html:2392,Inherit,Inheritance,2392,root/html532/TMatrixTColumn_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTColumn_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; const float&operator()(Int_t i) const; float&operator()(Int_t i); voidoperator*=(float val); voidoperator*=(const TMatrixTColumn_const<float>& c); voidoperator+=(float val); voidoperator+=(const TMatrixTColumn_const<float>& c); voidoperator=(float val); voidoperator=(const TMatrixTColumn_const<float>& c); TMatrixTColumn<float>&operator=(const TMatrixTColumn<float>& c); voidoperator=(const TVectorT<float>& vec); const float&operator[](Int_t i) const; float&operator[](Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Int_tTMatrixTColumn_const<float>::fColIndeffective column index; Int_tTMatrixTColumn_const<float>::fIncif ptr = @a[i,col], then ptr+inc = @a[i+1,col]; TMatrixTBase<float>*TMatrixTColumn_const<float>::fMatrixthe matrix I am a column of; const float*TMatrixTColumn_const<float>::fPtrpointer to the a[0,col] column. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element * GetPtr() const; { return fPtr; }. const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTColumn_float_.html:2374,Inherit,Inheritance,2374,root/html534/TMatrixTColumn_float_.html,https://root.cern,https://root.cern/root/html534/TMatrixTColumn_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. bool ProvidesError() const; minimizer provides error and error matrix. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. bool GetCovMatrix(double* ) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. { return false; }. bool GetHessianMatrix(double* ) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. { return false; }. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. { return 0; }. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__Minimizer.html:7015,variab,variables,7015,root/html530/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__Minimizer.html,3,['variab'],['variables']
Modifiability,"nst; static Long_tTObject::GetDtorOnly(); virtual Double_tGetHistCutoff(); virtual const char*TObject::GetIconName() const; virtual enum IntervalTypeGetIntervalType(); Double_tGetKeysMax(); virtual Double_tGetKeysPdfCutoff(); virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual Int_tGetNumBurnInSteps(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual RooArgSet*GetParameters() const; virtual TH1*GetPosteriorHist(); virtual RooNDKeysPdf*GetPosteriorKeysPdf(); virtual RooProduct*GetPosteriorKeysProduct(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tGetUseKeys(); virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet& point) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tLowerLimit(RooRealVar& param); virtual Double_tLowerLimitByDataHist(RooRealVar& param); virtual Double_tLowerLimitByHist(RooRealVar& param); virtual Double_tLowerLimitByKeys(RooRealVar& param); virtual Double_tLowerLimitBySparseHist(RooRealVar& param); virtual Double_tLowerLimitShortest(RooRealVar& param); virtual Double_tLowerLimitTailFraction(RooRealVar& param); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; RooStats::MCMCIntervalMCMCInterval(const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MCMCInterval.html:5625,Inherit,InheritsFrom,5625,root/html602/RooStats__MCMCInterval.html,https://root.cern,https://root.cern/root/html602/RooStats__MCMCInterval.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTListOfEnums::IsLoaded() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnumsWithLock.html:4141,Inherit,InheritsFrom,4141,root/html602/TListOfEnumsWithLock.html,https://root.cern,https://root.cern/root/html602/TListOfEnumsWithLock.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tgetInt(const char* name, Int_t defaultValue = 0); virtual const char*TObject::GetName() const; TObject*getObject(const char* name, TObject* obj = 0); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; const RooLinkedList&getObjectList(const char* name); static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooArgSet*getSet(const char* name, RooArgSet* set = 0); const char*getString(const char* name, const char* defaultValue = """", Bool_t convEmptyToNull = kFALSE); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_thasProcessed(const char* cmdName) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*missingArgs() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(Bool_t verbose) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCmdConfig.html:5875,Inherit,InheritsFrom,5875,root/html532/RooCmdConfig.html,https://root.cern,https://root.cern/root/html532/RooCmdConfig.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tgetInt(const char* name, Int_t defaultValue = 0); virtual const char*TObject::GetName() const; TObject*getObject(const char* name, TObject* obj = 0); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; const RooLinkedList&getObjectList(const char* name); static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooArgSet*getSet(const char* name, RooArgSet* set = 0); const char*getString(const char* name, const char* defaultValue = """", Bool_t convEmptyToNull = kFALSE); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_thasProcessed(const char* cmdName) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*missingArgs() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tok(Bool_t verbose) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCmdConfig.html:5796,Inherit,InheritsFrom,5796,root/html602/RooCmdConfig.html,https://root.cern,https://root.cern/root/html602/RooCmdConfig.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableIdentityTransform&operator=(const TMVA::VariableIdentityTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:4366,Variab,VariableIdentityTransform,4366,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableIdentityTransform']
Modifiability,"nst; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableNormalizeTransform&operator=(const TMVA::VariableNormalizeTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:4413,Variab,VariableNormalizeTransform,4413,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,2,['Variab'],['VariableNormalizeTransform']
Modifiability,"nst; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableRearrangeTransform&operator=(const TMVA::VariableRearrangeTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html:4338,Variab,VariableRearrangeTransform,4338,root/html602/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableRearrangeTransform.html,2,['Variab'],['VariableRearrangeTransform']
Modifiability,"nst; virtual Int_tTBufferFile::GetMapCount() const; virtual voidTBufferFile::GetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*TBuffer::GetParent() const; virtual UShort_tTBufferFile::GetPidOffset() const; ReAllocCharFun_tTBuffer::GetReAllocFunc() const; TSQLStructure*GetStructure() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTBufferFile::GetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTBufferFile::GetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidIncrementLevel(TVirtualStreamerInfo*); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTBufferFile::InitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTBuffer::IsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tTBuffer::IsWriting() const; Bool_tTObject::IsZombie() const; Int_tTBuffer::Length() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTBufferFile::MapObject(const TObject* obj, UInt_t offset = 1); virtual voidTBufferFile::MapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBufferSQL2.html:5061,Inherit,InheritsFrom,5061,root/html532/TBufferSQL2.html,https://root.cern,https://root.cern/root/html532/TBufferSQL2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Int_tTBufferFile::GetMapCount() const; virtual voidTBufferFile::GetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*TBuffer::GetParent() const; virtual UShort_tTBufferFile::GetPidOffset() const; ReAllocCharFun_tTBuffer::GetReAllocFunc() const; TSQLStructure*GetStructure() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTBufferFile::GetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTBufferFile::GetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidIncrementLevel(TVirtualStreamerInfo*); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTBufferFile::InitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTBuffer::IsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tTBuffer::IsWriting() const; Bool_tTObject::IsZombie() const; Int_tTBuffer::Length() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTBufferFile::MapObject(const TObject* obj, UInt_t offset = 1); virtual voidTBufferFile::MapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferSQL2.html:4977,Inherit,InheritsFrom,4977,root/html602/TBufferSQL2.html,https://root.cern,https://root.cern/root/html602/TBufferSQL2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TGeoMatrix::EGeoTransfTypes { kGeoIdentity; kGeoTranslation; kGeoRotation; kGeoScale; kGeoReflection; kGeoRegistered; kGeoSavePrimitive; kGeoMatrixOwned; kGeoCombiTrans; kGeoGenTrans; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TGeoRotation*fRotationrotation matrix; TStringTNamed::fTitleobject title; Double_tfTranslation[3]translation vector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoCombiTrans(); dummy ctor. TGeoCombiTrans(const TGeoCombiTrans& other); Copy ctor. TGeoCombiTrans(const TGeoMatrix& other); Copy ctor. TGeoCombiTrans(const TGeoTranslation& tr, const TGeoRotation& rot); Constructor from a translation and a rotation. TGeoCombiTrans(const char* name); Named ctor. TGeoCombiTrans(Double_t dx, Double_t dy, Double_t dz, TGeoRotation* rot); Constructor from a translation specified by X,Y,Z and a pointer to a rotation. The rotation will not be owned by this. TGeoCombiTrans(const char* name, Double_t dx, Double_t dy, Double_t dz, TGeoRotation* rot); Named ctor. TGeoCombiTrans & operator=(const TGeoMatrix& matrix); Assignment operator. ~TGeoCombiTrans(); destructor. void Clear(Option_t* option = """"); Reset translation/rotation to identity. TGeoMatrix& Inverse() const; Return a temporary inverse of this. TGeoMatrix * MakeClone() const; Make a clone of this matrix. void RegisterYourself(); Register the matrix i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCombiTrans.html:14933,Inherit,Inheritance,14933,root/html532/TGeoCombiTrans.html,https://root.cern,https://root.cern/root/html532/TGeoCombiTrans.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. set<string>fDependenciesdependencies on other libraries; set<string>fModulesmodules in the library. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLibraryDocInfo(); {}. TLibraryDocInfo(const char* lib); {}. std::set<std::string>& GetDependencies(); {return fDependencies;}. std::set<std::string>& GetModules(); {return fModules;}. void AddDependency(const string& lib); {fDependencies.insert(lib);}. void AddModule(const string& module); {fModules.insert(module);}. » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-06-30 15:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLibraryDocInfo.html:6426,Inherit,Inheritance,6426,root/html602/TLibraryDocInfo.html,https://root.cern,https://root.cern/root/html602/TLibraryDocInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. set<string>fDependenciesdependencies on other libraries; set<string>fModulesmodules in the library. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLibraryDocInfo(); {}. TLibraryDocInfo(const char* lib); {}. std::set<std::string>& GetDependencies(); {return fDependencies;}. std::set<std::string>& GetModules(); {return fModules;}. void AddDependency(const string& lib); {fDependencies.insert(lib);}. void AddModule(const string& module); {fModules.insert(module);}. » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TLibraryDocInfo.html:6426,Inherit,Inheritance,6426,root/html604/TLibraryDocInfo.html,https://root.cern,https://root.cern/root/html604/TLibraryDocInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEntryListFromFile.html:4176,Inherit,InheritsFrom,4176,root/html532/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html532/TEntryListFromFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Long64_tGetEntry(Int_t index); virtual Long64_tGetEntryAndTree(Int_t index, Int_t& treenum); virtual TEntryList*GetEntryList(const char*, const char*, Option_t*); virtual const char*GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTreeName() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadList(Int_t listnumber); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection*); virtual Long64_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEntryListFromFile.html:4029,Inherit,InheritsFrom,4029,root/html602/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html602/TEntryListFromFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Long64_tTDirectory::GetSeekParent() const; TVirtualPad*GetSelectedPad() const; const TObject*GetSelectedPrimitive() const; TStyle*GetStyle(const char* name) const; const char*GetSvnBranch() const; const char*GetSvnDate(); Int_tGetSvnRevision() const; virtual const char*TNamed::GetTitle() const; TDataType*GetType(const char* name, Bool_t load = kFALSE) const; virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; TProcessUUID*GetUUIDs() const; const char*GetVersion() const; Int_tGetVersionCode() const; Int_tGetVersionDate() const; Int_tGetVersionInt() const; Int_tGetVersionTime() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidIdle(UInt_t idleTimeInSec, const char* command = 0); Int_tIgnoreInclude(const char* fname, const char* expandedfname); static Int_tIncreaseDirLevel(); static voidIndentLevel(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static Bool_tInitialized(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBatch() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsEscaped() const; Bool_tIsExecutingMacro() const; virtual Bool_tIsFolder() const; Bool_tIsInterrupted() const; Bool_tIsLineProcessing() const; virtual Bool_tTDirectory::IsModified() const; Bool_tTObject::IsOnHeap() const; Bool_tIsProofServ() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectory::IsWritable() const; Bool_tTObject::IsZombie() const; TClass*LoadClass(const char* name, Bool_t silent = kFALSE) const; Int_tLoadClass(const char* classname, const char* libname, Bool_t check = kFALSE); Int_tLoadMacro(const char* filename, Int_t* error = 0, Bool_t check = kFALSE); virtual voidls(Option_t* option = """") const; Long_tMacro(const char* filename, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TROOT.html:9472,Inherit,InheritsFrom,9472,root/html532/TROOT.html,https://root.cern,https://root.cern/root/html532/TROOT.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual RooArgSet*RooAbsArg::getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_thasRange(const char* rangeName) const; virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; const RooArgSet&inputCatList() const; virtual Bool_tinRange(const char* rangeName) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsCategory::isIntegrationSafeLValue(const RooArgSet*) const; virtual Bool_tRooAbsCategoryLValue::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; Bool_tRooAbsCategory::isSignType(Bool_t mustHaveZero = kFALSE) const; virtual Bool_tRooAbsArg::IsSort",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSuperCategory.html:8222,Inherit,InheritsFrom,8222,root/html532/RooSuperCategory.html,https://root.cern,https://root.cern/root/html532/RooSuperCategory.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual RooArgSet*RooAbsArg::getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_thasRange(const char* rangeName) const; virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; const RooArgSet&inputCatList() const; virtual Bool_tinRange(const char* rangeName) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsCategory::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsCategory::isIntegrationSafeLValue(const RooArgSet*) const; virtual Bool_tRooAbsCategoryLValue::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeSer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSuperCategory.html:8762,Inherit,InheritsFrom,8762,root/html534/RooSuperCategory.html,https://root.cern,https://root.cern/root/html534/RooSuperCategory.html,3,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual RooArgSet*RooAbsArg::getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_thasRange(const char* rangeName) const; virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinRange(const char* rangeName) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tisDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisFundamental() const; virtual Bool_tRooAbsCategory::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsCategory::isIntegrationSafeLValue(const RooArgSet*) const; virtual Bool_tRooAbsCategoryLValue::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeSer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCategory.html:8437,Inherit,InheritsFrom,8437,root/html534/RooCategory.html,https://root.cern,https://root.cern/root/html534/RooCategory.html,3,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Style_tTAttMarker::GetMarkerStyle() const; TMaterial*TShape::GetMaterial() const; virtual const char*GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TPoints3DABC*GetPoints() const; virtual TShape*GetShape() const; virtual Size_tGetSizeAttribute() const; virtual Bool_tGetSmooth() const; virtual Style_tGetStyleAttribute() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Float_tGetWidthFactor() const; static Double_t*Gyrot(Double_t* dirc, Double_t cosang, Double_t sinang, Double_t** trans); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPolyLineShape.html:4139,Inherit,InheritsFrom,4139,root/html532/TPolyLineShape.html,https://root.cern,https://root.cern/root/html532/TPolyLineShape.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual TDirectory*GetMotherDir() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNbytesKeys() const; virtual Int_tGetNkeys() const; virtual void*GetObjectChecked(const char* namecycle, const char* classname); virtual void*GetObjectChecked(const char* namecycle, const TClass* cl); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual void*GetObjectUnchecked(const char* namecycle); virtual Option_t*TObject::GetOption() const; virtual const char*GetPath() const; virtual const char*GetPathStatic() const; virtual Long64_tGetSeekDir() const; virtual Long64_tGetSeekKeys() const; virtual Long64_tGetSeekParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TUUIDGetUUID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsWritable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TDirectory*mkdir(const char* name, const char* title = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual TFile*OpenFile(const char*, Option_t* = """", const char* = """", Int_t = 1, Int_t = 0); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDirectory.html:4074,Inherit,InheritsFrom,4074,root/html602/TDirectory.html,https://root.cern,https://root.cern/root/html602/TDirectory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Visual_tTGX11::GetVisual() const; virtual voidTGX11::GetWindowAttributes(Window_t id, WindowAttributes_t& attr); virtual Window_tTGX11::GetWindowID(Int_t wid); virtual voidTGX11::GetWindowSize(Drawable_t id, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); virtual voidTGX11::GrabButton(Window_t id, EMouseButton button, UInt_t modifier, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE); virtual voidTGX11::GrabKey(Window_t id, Int_t keycode, UInt_t modifier, Bool_t grab = kTRUE); virtual voidTGX11::GrabPointer(Window_t id, UInt_t evmask, Window_t confine, Cursor_t cursor, Bool_t grab = kTRUE, Bool_t owner_events = kTRUE); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual Bool_tTGX11::HasTTFonts() const; virtual voidTGX11::IconifyWindow(Window_t id); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tInit(void* display); virtual Int_tTGX11::InitWindow(ULong_t window); virtual voidTObject::Inspect() constMENU ; static TVirtualX*&TVirtualX::Instance(); virtual Atom_tTGX11::InternAtom(const char* atom_name, Bool_t only_if_exist); virtual voidTGX11::IntersectRegion(Region_t rega, Region_t regb, Region_t result); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTVirtualX::IsCmdThread() const; virtual Bool_tTGX11::IsDNDAware(Window_t win, Atom_t* typelist); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tTGX11::KeysymToKeycode(UInt_t keysym); virtual char**TGX11::ListFonts(const char* fontname, Int_t max, Int_t& count); virtual FontStruct_tLoadQueryFont(const char* font_name); virtual voidTGX11::Lookup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGX11TTF.html:10861,Inherit,InheritsFrom,10861,root/html532/TGX11TTF.html,https://root.cern,https://root.cern/root/html532/TGX11TTF.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TObject::GetName() const; virtual TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLegendEntry.html:3387,Inherit,InheritsFrom,3387,root/html532/TLegendEntry.html,https://root.cern,https://root.cern/root/html532/TLegendEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TObject::GetName() const; virtual TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLegendEntry.html:3247,Inherit,InheritsFrom,3247,root/html602/TLegendEntry.html,https://root.cern,https://root.cern/root/html602/TLegendEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); static Bool_tInitCINTMessageCallback(); voidTApplication::InitializeGraphics(); static Bool_tInitROOTGlobals(); static Bool_tInitROOTMessageCallback(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:6742,Inherit,InheritsFrom,6742,root/html534/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(Int_t type = kRRI_Hard); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TApplicationRemote.html:6066,Inherit,InheritsFrom,6066,root/html532/TApplicationRemote.html,https://root.cern,https://root.cern/root/html532/TApplicationRemote.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(Int_t type = kRRI_Hard); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplicationRemote.html:5989,Inherit,InheritsFrom,5989,root/html602/TApplicationRemote.html,https://root.cern,https://root.cern/root/html602/TApplicationRemote.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidLoadGraphicsLibs(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQApplication.html:6147,Inherit,InheritsFrom,6147,root/html532/TQApplication.html,https://root.cern,https://root.cern/root/html532/TQApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*TApplication::IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static voidTApplication::NeedGraph",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQApplication.html:6016,Inherit,InheritsFrom,6016,root/html602/TQApplication.html,https://root.cern,https://root.cern/root/html602/TQApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); static Bool_tInitROOTGlobals(); static Bool_tInitROOTMessageCallback(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/PyROOT__TPyROOTApplication.html:6707,Inherit,InheritsFrom,6707,root/html602/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html602/PyROOT__TPyROOTApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual const char*TNamed::GetName() const; Int_tTBranch::GetNleaves() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchClones.html:5138,Inherit,InheritsFrom,5138,root/html532/TBranchClones.html,https://root.cern,https://root.cern/root/html532/TBranchClones.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual const char*TNamed::GetName() const; Int_tTBranch::GetNleaves() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranchClones.html:4845,Inherit,InheritsFrom,4845,root/html602/TBranchClones.html,https://root.cern,https://root.cern/root/html602/TBranchClones.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual const char*TNamed::GetName() const; Int_tTBranch::GetNleaves() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTBranch::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookBranch.html:5051,Inherit,InheritsFrom,5051,root/html532/THbookBranch.html,https://root.cern,https://root.cern/root/html532/THbookBranch.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual const char*TNamed::GetName() const; Int_tTBranch::GetNleaves() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTBranch::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THbookBranch.html:4773,Inherit,InheritsFrom,4773,root/html602/THbookBranch.html,https://root.cern,https://root.cern/root/html602/THbookBranch.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual intPreAltHook(RooArgSet*, double obsTestStat) const; virtual voidRooStats::HypoTestCalculatorGeneric::PreHook() const; virtual intPreNullHook(RooArgSet*, double obsTestStat) const. Data Members; protected:. const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; unsigned intRooStats::HypoTestCalculatorGeneric::fAltToysSeedto have same toys for alternate ; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; intfNToysAlt; intfNToysAltTail; intfNToysNull; intfNToysNullTail; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooAbsPdf*fPriorNuisanceAlt; Bool_tfPriorNuisanceAltExternal; RooAbsPdf*fPriorNuisanceNull; Bool_tfPriorNuisanceNullExternal; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; int CheckHook(void). int PreNullHook(RooArgSet* , double obsTestStat) const. int PreAltHook(RooArgSet* , double obsTestStat) const. HybridCalculator(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0). ~HybridCalculator(). void ForcePriorNuisanceNull(RooAbsPdf& priorNuisance); Override the distribution used for marginalizing nuisance parameters that is inferred from ModelConfig. void ForcePriorNuisanceAlt(RooAbsPdf& priorNuisance). void SetNullModel(const RooStats::ModelConfig& nullModel). void SetAlternateModel(const RooStats::ModelConfig& altModel). void SetToys(int toysNull, int toysAlt); set number of toys. { fNToysNull = toysNull; fNToysAlt = toysAlt; }. void SetNToysInTails(int toysNull, int toysAlt); set least number of toys in tails. { fNToysNullTail = toysNull; fNToysAltTail = toysAlt; }. » Author: Sven Kreiss, Kyle Cranmer Nov 2010 » Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HybridCalculator.html:3551,Inherit,Inheritance,3551,root/html534/RooStats__HybridCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__HybridCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeights(); voidUseSumOfWeightSquare(bool on = true). private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&operator=(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&). Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; boolfIsExtendedflag to indicate if is extended (when false is a Multinomial lieklihood), default is true; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new PoissonLikelihoodFCN(fData,fFunc,fWeight,fIsExtended); }. unsigned int NFitPoints() const; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood element and its gradient. void Gradient(const double* x, double* g) const; evaluate gradient. bool IsWeighted() const; { return (fWeight != 0); }. void UseSumOfWeights(); Use the weights in evaluating the likelihood. void UseSumOfWeightSquare(bool on = true); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:3239,extend,extended,3239,root/html534/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['extend'],['extended']
Modifiability,"nst; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*Get(Int_t id); const char*GetCurDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry, Int_t id, Int_t atype, Float_t* x); Int_tGetEntryBranch(Int_t entry, Int_t id); virtual const char*TObject::GetIconName() const; TList*GetList() const; TList*GetListOfKeys() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitLeaves(Int_t id, Int_t var, TTreeFormula* formula); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(const char* path = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookFile.html:3581,Inherit,InheritsFrom,3581,root/html532/THbookFile.html,https://root.cern,https://root.cern/root/html532/THbookFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*Get(Int_t id); const char*GetCurDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry, Int_t id, Int_t atype, Float_t* x); Int_tGetEntryBranch(Int_t entry, Int_t id); virtual const char*TObject::GetIconName() const; TList*GetList() const; TList*GetListOfKeys() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitLeaves(Int_t id, Int_t var, TTreeFormula* formula); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(const char* path = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THbookFile.html:3485,Inherit,InheritsFrom,3485,root/html602/THbookFile.html,https://root.cern,https://root.cern/root/html602/THbookFile.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfBranchIsSkipped; TStringfBranchName; TStringfDataName; Bool_tfIsLeafListtrue if the branch was constructed from a leaf list.; Bool_tfIsSplit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranchProxyDescriptor(const char* dataname, const char* type, const char* branchname, Bool_t split = true, Bool_t skipped = false, Bool_t isleaflist = false); Constructor. const char * GetDataName(); Get the name of the data member. const char * GetTypeName(); Get the name of the type of the data member. const char * GetBranchName(); Get the branch name. Bool_t IsEquivalent(const ROOT::TBranchProxyDescriptor* other, Bool_t inClass = kFALSE); Return true if this description is the 'same' as the other decription. Bool_t IsSplit() const; Return true if the branch is split. void OutputDecl(FILE* hf, int offset, UInt_t maxVarname); Output the declaration corresponding to this proxy. void OutputInit(FILE* hf, int offset, UInt_t maxVarname, const char* prefix); Output the initialization corresponding to this proxy. TBranchProxyDescriptor(const char* dataname, const char* type, const char* branchname, Bool_t split = true, Bool_t skipped = fal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TBranchProxyDescriptor.html:6465,Inherit,Inheritance,6465,root/html532/ROOT__TBranchProxyDescriptor.html,https://root.cern,https://root.cern/root/html532/ROOT__TBranchProxyDescriptor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; voidFreeDirectory(Bool_t print = kFALSE); voidget(const char* file, const char* localName = 0); Int_tGetBlockSize() const; const char*GetDirEntry(Bool_t print = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetFile(const char* file, const char* localName = 0); virtual const char*TObject::GetIconName() const; Int_tGetMode() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPathInfo(const char* path, FileStat_t& buf, Bool_t print = kFALSE); Long64_tGetRestartAt() const; TSocket*GetSocket() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOpen() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Int_tListDirectory(Option_t* cmd = """") const; virtual voidls(Option_t* cmd = """") const; Int_tMakeDirectory(const char* dir, Bool_t print = kFALSE) const; voidTObject::MayNotUse(const char* method) const; voidmkdir(const char* dir) const; voidmv(const char* file1, const char* file2) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tOpenDirectory(const char* name, Bool_t print = kFALSE); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFTP.html:3320,Inherit,InheritsFrom,3320,root/html532/TFTP.html,https://root.cern,https://root.cern/root/html532/TFTP.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; voidFreeDirectory(Bool_t print = kFALSE); voidget(const char* file, const char* localName = 0); Int_tGetBlockSize() const; const char*GetDirEntry(Bool_t print = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetFile(const char* file, const char* localName = 0); virtual const char*TObject::GetIconName() const; Int_tGetMode() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetPathInfo(const char* path, FileStat_t& buf, Bool_t print = kFALSE); Long64_tGetRestartAt() const; TSocket*GetSocket() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOpen() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Int_tListDirectory(Option_t* cmd = """") const; virtual voidls(Option_t* cmd = """") const; Int_tMakeDirectory(const char* dir, Bool_t print = kFALSE) const; voidTObject::MayNotUse(const char* method) const; voidmkdir(const char* dir) const; voidmv(const char* file1, const char* file2) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Bool_tOpenDirectory(const char* name, Bool_t print = kFALSE); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFTP.html:3227,Inherit,InheritsFrom,3227,root/html602/TFTP.html,https://root.cern,https://root.cern/root/html602/TFTP.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; voidGetCurrentModule(TString& out_module) const; const TList*GetDataMembers(TDocParser::EAccess access) const; TDocOutput*GetDocOutput() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TList*GetEnums(TDocParser::EAccess access) const; virtual const char*TObject::GetIconName() const; Long_tGetLineNumber() const; const TList*GetMethods(TDocParser::EAccess access) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetSourceInfo(TDocParser::ESourceInfo type) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; UInt_tInContext(Int_t context) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tIsName(UChar_t c); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tIsWord(UChar_t c); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocParser.html:3873,Inherit,InheritsFrom,3873,root/html532/TDocParser.html,https://root.cern,https://root.cern/root/html532/TDocParser.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nst; voidGetCurrentModule(TString& out_module) const; const TList*GetDataMembers(TDocParser::EAccess access) const; TDocOutput*GetDocOutput() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TList*GetEnums(TDocParser::EAccess access) const; virtual const char*TObject::GetIconName() const; Long_tGetLineNumber() const; const TList*GetMethods(TDocParser::EAccess access) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetSourceInfo(TDocParser::ESourceInfo type) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; UInt_tInContext(Int_t context) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tIsName(UChar_t c); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; static Bool_tIsWord(UChar_t c); Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocParser.html:3797,Inherit,InheritsFrom,3797,root/html602/TDocParser.html,https://root.cern,https://root.cern/root/html602/TDocParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nst; voidPrintData(); voidSetAlpha(Float_t alpha); voidSetAlpha_p(Float_t alpha); voidSetErrorCache(Float_t err_cache); voidSetIdx(Int_t idx); voidSetIsShrinked(Int_t isshrinked); voidSetLine(Float_t* line); voidSetNs(UInt_t ns); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::SVEventSVEvent(); TMVA::SVEventSVEvent(const TMVA::SVEvent&); TMVA::SVEventSVEvent(const TMVA::Event*, Float_t, Bool_t isSignal = kFALSE); TMVA::SVEventSVEvent(const vector<Float_t>*, Float_t alpha, Int_t typeFlag, UInt_t ns); TMVA::SVEventSVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); voidUpdateErrorCache(Float_t upercache). Data Members; private:. Float_tfAlphalagrange multiplier; Float_tfAlpha_plagrange multiplier; const Float_tfCweightsvm cost weight; vector<Float_t>fDataVector; Float_tfErrorCacheoptimization parameter; Int_tfIdxindex flag; Int_tfIsShrinkedshrinking flag, see documentation; Float_t*fLinepointer to column of kerenl matrix ; UInt_tfNVarnumber of variables; UInt_tfNsdocumentation; const Float_tfTargetregression target; const Int_tfTypeFlagis sig or bkg - svm requieres 1 for sig and -1 for bkg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVEvent(). SVEvent(const TMVA::Event* , Float_t , Bool_t isSignal = kFALSE); constructor. SVEvent(const vector<Float_t>* , Float_t alpha, Int_t typeFlag, UInt_t ns); constructor. SVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); constructor. ~SVEvent(); destructor. void Print(ostream& os) const; printout. void PrintData(); printout. SVEvent(). void SetAlpha(Float_t alpha); { fAlpha = alpha; }. void SetAlpha_p(Float_t alpha); { fAlpha_p = alpha; }. void SetErrorCache(Float_t err_cache); { fErrorCache = err_cache; }. void SetIsShrinked(Int_t isshrinked); { fIsShrinked = isshrinked; }. void SetLine(Float_t* line); { fLine = line;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__SVEvent.html:1942,variab,variables,1942,root/html534/TMVA__SVEvent.html,https://root.cern,https://root.cern/root/html534/TMVA__SVEvent.html,2,['variab'],['variables']
Modifiability,"nst; voidTObject::MakeZombie(). private:. TNDArray&operator=(const TNDArray&); TNDArray(const TNDArray&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfNdimPlusOneNumber of dimensions plus one; Long64_t*fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNDArray(); {}. TNDArray(Int_t ndim, const Int_t* nbins, bool addOverflow = false). Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). ~TNDArray(). void Reset(Option_t* option = """"). Int_t GetNdimensions() const; { return fNdimPlusOne - 1; }. Long64_t GetNbins() const; { return fSizes[0]; }. Long64_t GetCellSize(Int_t dim) const; { return fSizes[dim + 1]; }. Long64_t GetBin(const Int_t* idx) const; Get the linear bin number for each dimension's bin index. Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray(const TNDArray& ). TNDArray& operator=(const TNDArray& ). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArray.html:6756,Inherit,Inheritance,6756,root/html602/TNDArray.html,https://root.cern,https://root.cern/root/html602/TNDArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst; voidTObject::MakeZombie(). private:. TNDArray&operator=(const TNDArray&); TNDArray(const TNDArray&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfNdimPlusOneNumber of dimensions plus one; Long64_t*fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNDArray(); {}. TNDArray(Int_t ndim, const Int_t* nbins, bool addOverflow = false). Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). ~TNDArray(). void Reset(Option_t* option = """"). Int_t GetNdimensions() const; { return fNdimPlusOne - 1; }. Long64_t GetNbins() const; { return fSizes[0]; }. Long64_t GetCellSize(Int_t dim) const; { return fSizes[dim + 1]; }. Long64_t GetBin(const Int_t* idx) const; Get the linear bin number for each dimension's bin index. Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray(const TNDArray& ). TNDArray& operator=(const TNDArray& ). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArray.html:6756,Inherit,Inheritance,6756,root/html604/TNDArray.html,https://root.cern,https://root.cern/root/html604/TNDArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nst;  ; TDecayChannel * DecayChannel (Int_t i);  return pointer to decay channel object at index i ;  ; TObjArray * DecayList ();  ; Double_t I3 () const;  ; TClass * IsA () const override;  ; Double_t Isospin () const;  ; Double_t Lifetime () const;  ; Double_t Mass () const;  ; Int_t NDecayChannels () const;  ; Int_t Parity () const;  ; const char * ParticleClass () const;  ; Int_t PdgCode () const;  ; void Print (Option_t *opt="""") const override;  Print the entire information of this kind of particle. ;  ; virtual void PrintDecayChannel (TDecayChannel *dc, Option_t *opt="""") const;  print the list of decays ;  ; void SetAntiParticle (TParticlePDG *ap);  ; Double_t Spin () const;  ; Int_t Stable () const;  ; Int_t Strangeness () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Top () const;  ; Int_t TrackingCode () const;  ; Double_t Width () const;  ; Int_t X () const;  ; Int_t Y () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticlePDG.html:3013,inherit,inherited,3013,doc/master/classTParticlePDG.html,https://root.cern,https://root.cern/doc/master/classTParticlePDG.html,1,['inherit'],['inherited']
Modifiability,"nst;  ; TSessionOutputFrame * GetOutputFrame () const;  ; TGPopupMenu * GetPopupQry () const;  ; TGPopupMenu * GetPopupSrv () const;  ; const TGPicture * GetProofConPict () const;  ; const TGPicture * GetProofDisconPict () const;  ; const TGPicture * GetQueryConPict () const;  ; const TGPicture * GetQueryDisconPict () const;  ; TSessionQueryFrame * GetQueryFrame () const;  ; TSessionServerFrame * GetServerFrame () const;  ; TSessionFrame * GetSessionFrame () const;  ; TGListTree * GetSessionHierarchy () const;  ; TGListTreeItem * GetSessionItem () const;  ; TList * GetSessions () const;  ; TGStatusBar * GetStatusBar () const;  ; Bool_t HandleTimer (TTimer *) override;  Handle animation timer. ;  ; TClass * IsA () const override;  ; Bool_t IsAutoSave () const;  ; Bool_t IsBusy () const;  ; void LogMessage (const char *msg, Bool_t all);  Load/append a log msg in the log frame. ;  ; void MyHandleMenu (Int_t);  Handle session viewer custom popup menus. ;  ; void OnCascadeMenu ();  Handle feedback histograms configuration menu. ;  ; void OnListTreeClicked (TGListTreeItem *entry, Int_t btn, Int_t x, Int_t y);  Handle mouse clicks in list tree. ;  ; void OnListTreeDoubleClicked (TGListTreeItem *entry, Int_t btn);  Handle mouse double clicks in list tree (connect to server). ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t) override;  Handle messages send to the TSessionViewer object. ;  ; void QueryResultReady (char *query);  Handle signal ""query result ready"" coming from Proof session. ;  ; void ReadConfiguration (const char *filename=nullptr);  Read configuration file and populate list of sessions list of queries and list of packages. ;  ; void ResetSession ();  Reset Proof session. ;  ; void SetBusy (Bool_t busy=kTRUE);  ; void SetChangePic (Bool_t change);  ; void SetLogWindow (TSessionLogView *log);  ; void ShowEnabledPackages ();  Query list of enabled packages from proof and display it into a new text window. ;  ; void ShowInfo (const char *txt)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:2703,config,configuration,2703,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['config'],['configuration']
Modifiability,"nst;  ; virtual TMVA::BinaryTree * GetParentTree () const;  ; char GetPos () const;  ; virtual Node * GetRight () const;  ; void ReadXML (void *node, UInt_t tmva_Version_Code=262657);  read attributes from XML ;  ; void SetDepth (UInt_t d);  ; virtual void SetLeft (Node *l);  ; virtual void SetParent (Node *p);  ; virtual void SetParentTree (TMVA::BinaryTree *t);  ; void SetPos (char s);  ; virtual void SetRight (Node *r);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Node; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; UInt_t fClass;  ; std::vector< Float_t > fEventV;  ; Short_t fSelector;  index of variable used in node selection (decision tree) ;  ; std::vector< Float_t > fTargets;  ; Float_t fWeight;  . Additional Inherited Members;  Protected Attributes inherited from TMVA::Node; UInt_t fDepth;  depth of the node within the tree (seen from root node) ;  ; Node * fLeft;  pointers to the two ""daughter"" nodes ;  ; Node * fParent;  the previous (parent) node ;  ; BinaryTree * fParentTree;  pointer to the parent tree to which the Node belongs ;  ; char fPos;  position, i.e. it is a left (l) or right (r) daughter ;  ; Node * fRight;  pointers to the two ""daughter"" nodes ;  . #include <TMVA/BinarySearchTreeNode.h>. Inheritance diagram for TMVA::BinarySearchTreeNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ BinarySearchTreeNode() [1/3]. TMVA::BinarySearchTreeNode::BinarySearchTreeNode ; (; const Event * ; e = nullptr, . UInt_t ; signalClass = 0 . ). constructor of a node for the search tree ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTreeNode.html:4517,variab,variable,4517,doc/master/classTMVA_1_1BinarySearchTreeNode.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTreeNode.html,1,['variab'],['variable']
Modifiability,"nst;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing the projection to 1D histogram ;  ; static TH2D * DoProject2D (const TH3 &h, const char *name, const char *title, const TAxis *projX, const TAxis *projY, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing the projection to 2D histogram ;  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger) or previous (smaller) a given x. ;  ; static bool CheckAxisLimits (const TAxis *a1, const TAxis *a2);  Check that the axis limits of the histograms are the same. ;  ; static bool CheckBinLabels (const TAxis *a1, const TAxis *a2);  Check that axis have same labels. ;  ; static bool CheckBinLimits (const TAxis *a1, const TAxis *a2);  Check bin limits. ;  ; static int CheckConsistency (const TH1 *h1, const TH1 *h2);  Check histogram compatibility. ;  ; static bool CheckConsistentSubAxes (const TAxis *a1, Int_t firstBin1,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:57734,inherit,inherited,57734,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,2,['inherit'],['inherited']
Modifiability,"nst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMinuit; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; IFitterTarget & fFitterTarget;  fitter Target ;  ; Int_t fNumPar;  number of parameters ;  ; std::vector< Double_t > fParameters;  vector holding the current parameters ;  . Additional Inherited Members;  Public Types inherited from TMinuit; enum  { kMAXWARN =100; };  ;  Public Types inherited",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html:18825,inherit,inherited,18825,doc/master/classTMVA_1_1MinuitWrapper.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html,3,['inherit'],['inherited']
Modifiability,"nst;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttPad;  TAttPad ();  Constructor. ;  ; virtual ~TAttPad ();  Destructor. ;  ; virtual void Copy (TAttPad &attpad) const;  copy function ;  ; Float_t GetAfile () const;  ; Float_t GetAstat () const;  ; Float_t GetBottomMargin () const;  ; Int_t GetFrameBorderMode () const;  ; Width_t GetFrameBorderSize () const;  ; Color_t GetFrameFillColor () const;  ; Style_t GetFrameFillStyle () const;  ; Color_t GetFrameLineColor () const;  ; Style_t GetFrameLineStyle () const;  ; Width_t GetFrameLineWidth () const;  ; Float_t GetLeftMargin () const;  ; Float_t GetRightMargin () const;  ; Float_t GetTopMargin () const;  ; Float_t GetXfile () const;  ; Float_t GetXstat () const;  ; Float_t GetYfile () const;  ; Float_t GetYstat () const;  ; virtual void ResetAttPad (Option_t *option="""");  Reset pad attributes. ;  ; virtual void SetAfile (Float_t afile);  ; virtual void SetAstat (Float_t astat);  ; virtual void SetBottomMargin (Float_t bottommargin);  Set Pad bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:22427,inherit,inherited,22427,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability,"nst;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TGeoRCExtension (const TGeoRCExtension &)=delete;  ; TGeoRCExtension & operator= (const TGeoRCExtension &)=delete;  . Private Attributes; Int_t fRC {0};  ; TObject * fUserObject {nullptr};  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoExtension.h>. Inheritance diagram for TGeoRCExtension:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TGeoRCExtension(). TGeoRCExtension::~TGeoRCExtension ; (; ). inlineoverrideprotected . Definition at line 35 of file TGeoExtension.h. ◆ TGeoRCExtension() [1/3]. TGeoRCExtension::TGeoRCExtension ; (; ). inline . Definition at line 38 of file TGeoExtension.h. ◆ TGeoRCExtension() [2/3]. TGeoRCExtension::TGeoRCExtension ; (; TObject * ; obj). inline . Definition at line 39 of file TGeoExtension.h. ◆ TGeoRCExtension() [3/3]. TGeoRCExtension::TGeoRCExtension ; (; const TGeoRCExtension & ; ). privatedelete . Member Function Documentation. ◆ Class(). static TClass * TGeoRCExtension::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoRCExtension::Class_Name ; (; ). static . ReturnsName of this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoRCExtension.html:12033,inherit,inherited,12033,doc/master/classTGeoRCExtension.html,https://root.cern,https://root.cern/doc/master/classTGeoRCExtension.html,1,['inherit'],['inherited']
Modifiability,"nst;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html:9331,inherit,inherits,9331,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,16,['inherit'],['inherits']
Modifiability,"nst;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchElement.html:19469,inherit,inherits,19469,doc/master/classTBranchElement.html,https://root.cern,https://root.cern/doc/master/classTBranchElement.html,2,['inherit'],['inherits']
Modifiability,"nst;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:12597,inherit,inherits,12597,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,2,['inherit'],['inherits']
Modifiability,"nst;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemFile.html:6215,inherit,inherits,6215,doc/master/classTSystemFile.html,https://root.cern,https://root.cern/doc/master/classTSystemFile.html,1,['inherit'],['inherits']
Modifiability,"nst;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TVirtualProofPlayer * Create (const char *player, TProof *p, TSocket *s=0);  Create a PROOF player. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualProofPlayer.html:15593,inherit,inherited,15593,doc/master/classTVirtualProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualProofPlayer.html,1,['inherit'],['inherited']
Modifiability,"nst;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DisplayMarkerLineWidths ();  Display the table of markers with different line widths and their numbers. ;  ; static void DisplayMarkerTypes ();  Display the table of markers with their numbers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker.html:12571,inherit,inherited,12571,doc/master/classTMarker.html,https://root.cern,https://root.cern/doc/master/classTMarker.html,1,['inherit'],['inherited']
Modifiability,"nst;  Write this object to the current directory. ;  . Private Attributes; Bool_t fSystem;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TXMLEntity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEntity.html:9700,inherit,inherited,9700,doc/master/classTXMLEntity.html,https://root.cern,https://root.cern/doc/master/classTXMLEntity.html,2,['inherit'],['inherited']
Modifiability,"nst< Element >;  TMatrixTColumn_const ();  ;  TMatrixTColumn_const (const TMatrixT< Element > &matrix, Int_t col);  Constructor with column ""col"" of matrix. ;  ;  TMatrixTColumn_const (const TMatrixTColumn_const< Element > &trc);  ;  TMatrixTColumn_const (const TMatrixTSym< Element > &matrix, Int_t col);  Constructor with column ""col"" of matrix. ;  ; virtual ~TMatrixTColumn_const ();  ; Int_t GetColIndex () const;  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTColumn_const< Element > & operator= (const TMatrixTColumn_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTColumn_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTColumn_const< Element >; Int_t fColInd;  ; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; const Element * fPtr;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTColumn< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTColumn() [1/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; ). inline . Definition at line 252 of file TMatrixTUtils.h. ◆ TMatrixTColumn() [2/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; TMatrixT< Element > & ; matrix, . Int_t ; col . ). Constructor with column ""col"" of matrix. ; Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTColumn.html:3115,inherit,inherited,3115,doc/master/classTMatrixTColumn.html,https://root.cern,https://root.cern/doc/master/classTMatrixTColumn.html,1,['inherit'],['inherited']
Modifiability,"nstDefinition TH1.h:266; TH1::EStatusBitsEStatusBitsTH1 status bits.Definition TH1.h:164; TH1::kLogX@ kLogXX-axis in log scale.Definition TH1.h:168; TH1::kIsAverage@ kIsAverageBin contents are average (used by Add)Definition TH1.h:171; TH1::kNoTitle@ kNoTitleDon't draw the histogram title.Definition TH1.h:170; TH1::kUserContour@ kUserContourUser specified contour levels.Definition TH1.h:166; TH1::kNoStats@ kNoStatsDon't draw stats box.Definition TH1.h:165; TH1::kIsZoomed@ kIsZoomedBit set when zooming on Y axis.Definition TH1.h:169; TH1::kAutoBinPTwo@ kAutoBinPTwodifferent than 1.Definition TH1.h:174; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::kIsHighlight@ kIsHighlightbit set if histo is highlightDefinition TH1.h:175; TH1::SetContourLevelvirtual void SetContourLevel(Int_t level, Double_t value)Set value for one contour level.Definition TH1.cxx:8522; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::fDirectoryTDirectory * fDirectory! Pointer to directory holding this histogramDefinition TH1.h:109; TH1::GetOptionOption_t * GetOption() const overrideDefinition TH1.h:303; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::SetNameTitlevoid SetNameTitle(const char *name, const char *title) overrideChange the name and title of this histogram.Definition TH1.cxx:8974; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetBinXYZvirtual void GetBinXYZ(Int_t binglobal, Int_t &binx, Int_t &biny, Int_t &binz) constReturn binx, biny, binz corresponding to the global bin number globalbin see TH1::GetBin function abo...Definition TH1.cxx:4974; TH1::GetCumulativeTH1 * GetCumulative(Bool_t forward=kTRUE, const char *suffix=""_cumulative"") constReturn a pointer to a histogram containing the cumulative content.Definition TH1.cxx:2616; TH1::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:61054,extend,extendable,61054,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['extend'],['extendable']
Modifiability,"nstMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidsetCacheAlpha(Bool_t flag); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooIntegralMorph.html:31586,config,config,31586,root/html530/RooIntegralMorph.html,https://root.cern,https://root.cern/root/html530/RooIntegralMorph.html,1,['config'],['config']
Modifiability,"nstMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTMatrixTSymLazy<double>::operator=(const TMatrixTSymLazy<double>&). private:. virtual voidFillIn(TMatrixTSym<double>& m) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTSymLazy<double>::fRowLwb; Int_tTMatrixTSymLazy<double>::fRowUpb. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void THilbertMatrixTSym<Element> FillIn(TMatrixTSym<double>& m) const. » Last changed: root/matrix:$Id: TMatrixTLazy.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THilbertMatrixTSym_double_.html:5795,Inherit,Inheritance,5795,root/html532/THilbertMatrixTSym_double_.html,https://root.cern,https://root.cern/root/html532/THilbertMatrixTSym_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nstReturn a pointer to the TTree friend whose name or alias is friendname.Definition TTree.cxx:5975; TTree::SetNotifyvirtual void SetNotify(TObject *obj)Sets the address of the object to be notified when the tree is loaded.Definition TTree.cxx:9231; TTree::GetMaximumvirtual Double_t GetMaximum(const char *columname)Return maximum of column with name columname.Definition TTree.cxx:6235; TTree::GetEntryNumberWithBestIndexvirtual Long64_t GetEntryNumberWithBestIndex(Long64_t major, Long64_t minor=0) constReturn entry number corresponding to major and minor number.Definition TTree.cxx:5890; TTree::SetMaxTreeSizestatic void SetMaxTreeSize(Long64_t maxsize=100000000000LL)Set the maximum size in bytes of a Tree file (static function).Definition TTree.cxx:9197; TTree::Printvoid Print(Option_t *option="""") const overridePrint a summary of the tree contents.Definition TTree.cxx:7219; TTree::UnbinnedFitvirtual Int_t UnbinnedFit(const char *funcname, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)Unbinned fit of one or more variable(s) from a tree.Definition TTree.cxx:9702; TTree::fNClusterRangeInt_t fNClusterRangeNumber of Cluster range in addition to the one defined by 'AutoFlush'.Definition TTree.h:95; TTree::PrintCacheStatsvirtual void PrintCacheStats(Option_t *option="""") constPrint statistics about the TreeCache for this tree.Definition TTree.cxx:7370; TTree::BuildIndexvirtual Int_t BuildIndex(const char *majorname, const char *minorname=""0"")Build a Tree Index (default is TTreeIndex).Definition TTree.cxx:2637; TTree::fPlayerTVirtualTreePlayer * fPlayer! Pointer to current Tree playerDefinition TTree.h:134; TTree::GetIteratorOnAllLeavesvirtual TIterator * GetIteratorOnAllLeaves(bool dir=kIterForward)Creates a new iterator that will go through all the leaves on the tree itself and its friend.Definition TTree.cxx:6082; TTree::SetMakeClassvirtual void SetMakeClass(Int_t make)Set all the branches in this TT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:443232,variab,variable,443232,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nstance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void RecordEnd (EQueryStatus status, TList *outlist=nullptr);  End of query settings. ;  ; void SaveSelector (const char *selec);  Save the selector header and implementation into the dedicated TMacro instances. ;  ; void SetArchived (const char *archfile);  Set (or update) query in archived state. ;  ; virtual void SetFinalized ();  ; virtual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTermTime (Float_t termtime);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fArchived;  whether the query has been archived ;  ; Long64_t fBytes;  number of bytes processed ;  ; bool fDraw;  true if draw action query ;  ; TDatime fEnd;  time when processing ended ;  ; Long64_t fEntries;  number of entries processed ;  ; bool fFinalized;  whether Terminate has been run ;  ; Long64_t fFirst;  first entry processed ;  ; Float_t fInitTime;  Initialization time (seconds) (millisec precision) ;  ; TList * fInputList;  input list; contains also data sets, entry list, ... ;  ; TString fLibList;  blank-separated list of libs loaded at fStart ;  ; TMacro * fLogFile;  file with log messages from the query ;  ; Float_t fMergeTime;  Merging time (seconds) (millisec precision) ;  ; Int_t fNumMergers;  Number of submergers. ;  ; Int_t fNumWrks;  Number of workers at start. ;  ; TString fO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQueryResult.html:13232,inherit,inherited,13232,doc/master/classTQueryResult.html,https://root.cern,https://root.cern/doc/master/classTQueryResult.html,1,['inherit'],['inherited']
Modifiability,"nstance; map<string,RooAbsNumGenerator*>_map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumGenFactory(); Constructor. Register all known integrators by calling; their static registration functions. ~RooNumGenFactory(); Destructor. RooNumGenFactory(const RooNumGenFactory& other); Copy constructor. RooNumGenFactory& instance(); Static method returning reference to singleton instance of factory. void cleanup(); Cleanup routine called by atexit() handler installed by RooSentinel. Bool_t storeProtoSampler(RooAbsNumGenerator* proto, const RooArgSet& defConfig); Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; default configuration options and an optional list of names of other numeric integrators; on which this integrator depends. Returns true if integrator was previously registered. const RooAbsNumGenerator* getProtoSampler(const char* name); Return prototype integrator with given (class) name. RooAbsNumGenerator* createSampler(RooAbsReal& func, const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, RooAbsReal* maxFuncVal = 0); Construct a numeric integrator instance that operates on function 'func' and is configured; with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; of the integration, otherwise it is queried from 'func'. This function iterators over list; of available prototype integrators and returns an clone attached to the given function of; the first class that matches the specifications of the requested integration considering; the number of dimensions, the nature of the limits (open ended vs closed) and the user; preference stated in 'config'. » Last changed: Tue Jun 2 15:32:43 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooNumGenFactory.html:7622,config,config,7622,root/html604/RooNumGenFactory.html,https://root.cern,https://root.cern/root/html604/RooNumGenFactory.html,8,['config'],"['config', 'configured']"
Modifiability,"nstance;; ClassDef(MyGenerator,0);; };. Having multiple objects accessing the same common blocks is not; safe. concrete TGenerator classes can be loaded in scripts and subseqent-; ly used in compiled code:. MyRun.h; class MyRun : public TObject; {; public:; static MyRun* Instance() { ... }; void SetGenerator(TGenerator* g) { fGenerator = g; }; void Run(Int_t n, Option_t* option=""""); {; TFile* file = TFile::Open(""file.root"",""RECREATE"");; TTree* tree = new TTree(""T"",""T"");; TClonesArray* p = new TClonesArray(""TParticles"");; tree->Branch(""particles"", &p);; for (Int_t event = 0; event < n; event++) {; fGenerator->GenerateEvent();; fGenerator->ImportParticles(p,option);; tree->Fill();; }; file->Write();; file->Close();; }. protected:; TGenerator* fGenerator;; ClassDef(MyRun,0);; };. Config.C; void Config(); {; MyRun* run = MyRun::Instance();; run->SetGenerator(MyGenerator::Instance());; }. main.cxx; int; main(int argc, char** argv); {; TApplication app("""", 0, 0);; gSystem->ProcessLine("".x Config.C"");; MyRun::Instance()->Run(10);; return 0;; }. This is especially useful for example with TVirtualMC or similar. Function Members (Methods); public:. TGenerator(); TGenerator(const char* name, const char* title = ""Generator class""); virtual~TGenerator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenerator.html:3491,Config,Config,3491,root/html532/TGenerator.html,https://root.cern,https://root.cern/root/html532/TGenerator.html,2,['Config'],['Config']
Modifiability,"nstance;; ClassDef(MyGenerator,0);; };. Having multiple objects accessing the same common blocks is not; safe. concrete TGenerator classes can be loaded in scripts and subseqent-; ly used in compiled code:. MyRun.h; class MyRun : public TObject; {; public:; static MyRun* Instance() { ... }; void SetGenerator(TGenerator* g) { fGenerator = g; }; void Run(Int_t n, Option_t* option=""""); {; TFile* file = TFile::Open(""file.root"",""RECREATE"");; TTree* tree = new TTree(""T"",""T"");; TClonesArray* p = new TClonesArray(""TParticles"");; tree->Branch(""particles"", &p);; for (Int_t event = 0; event < n; event++) {; fGenerator->GenerateEvent();; fGenerator->ImportParticles(p,option);; tree->Fill();; }; file->Write();; file->Close();; }. protected:; TGenerator* fGenerator;; ClassDef(MyRun,0);; };. Config.C; void Config(); {; MyRun* run = MyRun::Instance();; run->SetGenerator(MyGenerator::Instance());; }. main.cxx; int; main(int argc, char** argv); {; TApplication app("""", 0, 0);; gSystem->ProcessLine("".x Config.C"");; MyRun::Instance()->Run(10);; return 0;; }. This is especially useful for example with TVirtualMC or similar. Function Members (Methods); public:. virtual~TGenerator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGenerator.html:3486,Config,Config,3486,root/html602/TGenerator.html,https://root.cern,https://root.cern/root/html602/TGenerator.html,2,['Config'],['Config']
Modifiability,"nstances.; Int_tTEveRefCnt::fRefCount; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrCluster2DsRender 2D-clusters.; Bool_tfRnrDaughtersRender daughter path-marks.; Bool_tfRnrDecayRender decay path-marks.; Bool_tfRnrFVRender first vertex.; Bool_tfRnrPTBMarkersRender break-points on tracks.; Bool_tfRnrReferencesRender track-reference path-marks.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TEveTrackPropagator::EStepper_efStepper; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorDfVStart vertex.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackPropagator(const char* n = ""TEveTrackPropagator"", const char* t = """", TEveMagField* field = 0, Bool_t own_field = kTRUE); Default constructor. ~TEveTrackPropagator(); Destructor. void OnZeroRefCount(); Virtual from TEveRefBackPtr - track reference count has reached zero. void CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); Check reference count - virtual from TEveElement.; Must also take into account references from TEveRefBackPtr. void ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Element-change notification.; Stamp all tracks as requiring display-list regeneration.; Virtual from TEveElement. void InitTrack(const TEveVectorD& v, Int_t charge); Initialize internal data-members for given particle parameters. void InitTrack(const TEveVectorF& v, Int_t charge); TEveVectorF wrapper. void ResetTrack(); Reset cache holding particle trajectory. Bool_t GoToVertex(TEveVectorD&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTrackPropagator.html:25066,Inherit,Inheritance,25066,root/html532/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html532/TEveTrackPropagator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nstances.; Int_tTEveRefCnt::fRefCount; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrCluster2DsRender 2D-clusters.; Bool_tfRnrDaughtersRender daughter path-marks.; Bool_tfRnrDecayRender decay path-marks.; Bool_tfRnrFVRender first vertex.; Bool_tfRnrPTBMarkersRender break-points on tracks.; Bool_tfRnrReferencesRender track-reference path-marks.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TEveTrackPropagator::EStepper_efStepper; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorDfVStart vertex.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackPropagator(const char* n = ""TEveTrackPropagator"", const char* t = """", TEveMagField* field = 0, Bool_t own_field = kTRUE); Default constructor. ~TEveTrackPropagator(); Destructor. void OnZeroRefCount(); Virtual from TEveRefBackPtr - track reference count has reached zero. void CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); Check reference count - virtual from TEveElement.; Must also take into account references from TEveRefBackPtr. void ElementChanged(Bool_t update_scenes = kTRUE, Bool_t redraw = kFALSE); Element-change notification.; Stamp all tracks as requiring display-list regeneration.; Virtual from TEveElement. void InitTrack(const TEveVectorD& v, Int_t charge); Initialize internal data-members for given particle parameters. void InitTrack(const TEveVectorF& v, Int_t charge); TEveVectorF wrapper. void ResetTrack(); Reset cache holding particle trajectory. Int_t GetCurrentPoint() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTrackPropagator.html:26144,Inherit,Inheritance,26144,root/html534/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html534/TEveTrackPropagator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,nstant expressions; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooAbsData*RooAbsTestStatistic::_dataPointer to original input dataset; RooAbsData*_dataClonePointer to internal clone if input data; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; Bool_tRooAbsTestStatistic::_doOffsetApply interval value offset to control numeric precision?; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Double_tRooAbsTestStatistic::_evalCarry! carry of Kahan sum in evaluatePartition; Int_tRooAbsTestStatistic::_extSet! Number of designated set to calculated extended term; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*_funcClonePointer to internal clone of input function; RooArgSet*_funcCloneSetSet owning all components of internal clone of input function; RooArgSet*_funcObsSetList of observables in the pdf expression; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; pRooAbsTestStatistic*RooAbsTestStatistic::_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpModeRooAbsTestStatistic::_gofOpModeOperation mode of test statistic instance; vector<RooFit::MPSplit>RooAbsTestStatistic::_gofSplitMode! GOF MP Split mode specified by component (when Auto is active); static Bool_tRooAbsRea,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsOptTestStatistic.html:38596,extend,extended,38596,root/html602/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html602/RooAbsOptTestStatistic.html,4,['extend'],['extended']
Modifiability,"nstexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw icon. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; const TGWindow * fMsgWindow;  window h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiTitleIcon.html:22598,inherit,inherited,22598,doc/master/classTGMdiTitleIcon.html,https://root.cern,https://root.cern/doc/master/classTGMdiTitleIcon.html,1,['inherit'],['inherited']
Modifiability,"nstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void MakeTableOfCoSin () const override;  Make table of sine and cosine. ;  ; void SetPoints (Double_t *points) const override;  Create TUBS points. ;  ;  Protected Member Functions inherited from TTUBE;  TTUBE (const TTUBE &);  Table of cos(fPhi1) .... cos(fPhil+fDphi1) ;  ; TTUBE & operator= (const TTUBE &);  assignment operator ;  ; virtual void SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fPhi1;  ; Float_t fPhi2;  ;  Protected Attributes inherited from TTUBE; Float_t fAspectRatio;  ; Double_t * fCoTab;  Table of sin(fPhi1) .... sin(fPhil+fDphi1) ;  ; Float_t fDz;  ; Int_t fNdiv;  ; Float_t fRmax;  ; Float_t fRmin;  ; Double_t * fSiTab;  ;  Protected Attributes inherited from TShape; TMaterial * fMaterial;  ; Int_t fNumber;  ; Int_t fVisibility;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTUBS.html:17367,inherit,inherited,17367,doc/master/classTTUBS.html,https://root.cern,https://root.cern/doc/master/classTTUBS.html,1,['inherit'],['inherited']
Modifiability,"nstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Public Attributes; float fEtaSize {0};  ; Double_t fPhi;  ; float fPhiSize {0};  ; Double_t fPt;  ; TRefArray fTracks;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TParticle; Double_t fCalcMass;  ; Int_t fDaughter [2];  ; Double_t fE;  ; Int_t fMother [2];  ; TParticlePDG * fParticlePDG;  ; Int_t fPdgCode;  ; Double_t fPolarPhi;  ; Double_t fPolarTheta;  ; Double_t fPx;  ; Double_t fPy;  ; Double_t fPz;  ; Int_t fStatusCode;  ; Double_t fVt;  ; Double_t fVx;  ; Double_t fVy;  ; Double_t fVz;  ; Float_t fWeight;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/JetEvent.h>. Inheritance diagram for Jet:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classJet.html:15762,inherit,inherited,15762,doc/master/classJet.html,https://root.cern,https://root.cern/doc/master/classJet.html,2,['inherit'],['inherited']
Modifiability,"nstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual bool CompileVariables (const char *varexp="""", const char *selection="""");  Compile input variables and selection expression. ;  ; virtual void InitArrays (Int_t newsize);  Initialization of the primitive type arrays if the new size is bigger than the available space. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAction;  ! Action type ;  ; bool fCleanElist;  True if original Tree elist must be saved. ;  ; Long64_t fCurrentSubEntry;  Current subentry when fSelectMultiple is true. Used to fill TEntryListArray. ;  ; Int_t fDimension;  Dimension of the current expression. ;  ; Long64_t fDraw;  ! Last entry loop number when object was drawn ;  ; Int_t fForceRead;  Force Read flag. ;  ; TTreeFormulaManager * fManager;  Pointer to the formula manager. ;  ; Int_t fMultiplicity;  Indicator of the variability of the size of entries. ;  ; Int_t * fNbins;  ![fDimension] Number of bins per dimension ;  ; Int_t fNfill;  ! Total number of histogram fills ;  ; bool fObjEval;  True if fVar1 returns an object (or pointer to). ;  ; Long64_t fOldEstimate;  Value of Tree fEstimate when selector is called. ;  ; TH1 * fOldHistogram;  ! Pointer to previously used hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:13587,inherit,inherited,13587,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['inherit'],['inherited']
Modifiability,nstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _basisExp;  ; RooRealProxy _t;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution objects. ;  ; RooRealProxy _convVar;  Convolution variable. ;  ; bool _isCopy;  ; RooRealProxy _model;  Original model. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDecay.html:64777,inherit,inherited,64777,doc/master/classRooDecay.html,https://root.cern,https://root.cern/doc/master/classRooDecay.html,1,['inherit'],['inherited']
Modifiability,"nstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoArb8Type { kArb8Trap = (1ULL << ( 27 )); , kArb8Tra = (1ULL << ( 28 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoArb8 (const TGeoArb8 &)=delete;  ; void CopyTwist (Double_t *twist=nullptr);  ; TGeoArb8 & operator= (const TGeoArb8 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:21830,inherit,inherited,21830,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,1,['inherit'],['inherited']
Modifiability,"nstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void HandleTooltip ();  Show / hide tooltip for various MouseOver events. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fBrightness;  ; Bool_t fShowTooltip;  ; Bool_t fUseLightColorSet;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveViewerList.html:30250,inherit,inherited,30250,doc/master/classTEveViewerList.html,https://root.cern,https://root.cern/doc/master/classTEveViewerList.html,1,['inherit'],['inherited']
Modifiability,"nstness from the type.; UnderlyingIsSTLCont(""vector<int>*"") == IsSTLCont(""vector<int>""); See TClassEdit::IsSTLCont. type : type name: vector<list<classA,allocator>,allocator>*; result: 0 : not stl container; code of container 1=vector,2=list,3=deque,4=map; 5=multimap,6=set,7=multiset. ROOT::ESTLType IsSTLCont(string_view type); type : type name: vector<list<classA,allocator>,allocator>; result: 0 : not stl container; code of container 1=vector,2=list,3=deque,4=map; 5=multimap,6=set,7=multiset. int IsSTLCont(const char* type, int testAlloc); type : type name: vector<list<classA,allocator>,allocator>; testAlloc: if true, we test allocator, if it is not default result is negative; result: 0 : not stl container; abs(result): code of container 1=vector,2=list,3=deque,4=map; 5=multimap,6=set,7=multiset; positive val: we have a vector or list with default allocator to any depth; like vector<list<vector<int>>>; negative val: STL container other than vector or list, or non default allocator; For example: vector<deque<int>> has answer -1. bool IsStdClass(const char* type); return true if the class belongs to the std namespace. bool IsVectorBool(const char* name). string ResolveTypedef(const char* tname, bool resolveAll = false). string InsertStd(const char* tname). char* DemangleTypeIdName(const type_info& ti, int& errorCode); Demangle in a portable way the type id name.; IMPORTANT: The caller is responsible for freeing the returned const char*. EComplexType GetComplexType(const char* ). char* DemangleName(const char* mangled_name, int& errorCode); Demangle in a portable way the name.; IMPORTANT: The caller is responsible for freeing the returned const char*. » Author: Victor Perev 10/04/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/metautils:$Id$ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TClassEdit.html:6997,portab,portable,6997,root/html604/TClassEdit.html,https://root.cern,https://root.cern/root/html604/TClassEdit.html,4,['portab'],['portable']
Modifiability,"nstructed; from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; for each valye of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen to be such; that at least 30 curves are expected to be outside the N% interval, and is minimally 100 (e.g. Z=1->Ncurve=100, Z=2->Ncurve=659, Z=3->Ncurve=11111); Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations. Bool_t plotSanityChecks(RooPlot* frame) const; Utility function for plotOn(), perform general sanity check on frame to ensure safe plotting operations. void makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; Utility function for plotOn() that constructs the set of; observables to project when plotting ourselves as function of; 'plotVar'. 'allVars' is the list of variables that must be; projected, but may contain variables that we do not depend on. If; 'silent' is cleared, warnings about inconsistent input parameters; will be printed. Bool_t isSelectedComp() const; If true, the current pdf is a selected component (for use in plotting). void globalSelectComp(Bool_t flag); Global switch controlling the activation of the selectComp() functionality. RooAbsFunc * bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; Create an interface adaptor f(vars) that binds us to the specified variables; (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; current values of x2 and x4. The caller takes ownership of the returned adaptor. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy the cached value of another RooAbsArg to our cache.; Warning: This function copies the cached values of source,; it is the callers responsibility to make ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:54721,variab,variables,54721,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,6,['variab'],['variables']
Modifiability,"nstructed; from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; for each valye of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen to be such; that at least 30 curves are expected to be outside the N% interval, and is minimally 100 (e.g. Z=1->Ncurve=100, Z=2->Ncurve=659, Z=3->Ncurve=11111); Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations. Bool_t plotSanityChecks(RooPlot* frame) const; Utility function for plotOn(), perform general sanity check on frame to ensure safe plotting operations. void makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; Utility function for plotOn() that constructs the set of; observables to project when plotting ourselves as function of; 'plotVar'. 'allVars' is the list of variables that must be; projected, but may contain variables that we do not depend on. If; 'silent' is cleared, warnings about inconsistent input parameters; will be printed. Bool_t isSelectedComp() const; If true, the current pdf is a selected component (for use in plotting). void globalSelectComp(Bool_t flag); Global switch controlling the activation of the selectComp() functionality. RooAbsFunc * bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; Create an interface adaptor f(vars) that binds us to the specified variables; (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; current values of x2 and x4. The caller takes ownership of the returned adaptor. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); Copy the cached value of another RooAbsArg to our cache.; Warning: This function copies the cached values of source,; it is the cal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsReal.html:56236,variab,variables,56236,root/html532/RooAbsReal.html,https://root.cern,https://root.cern/root/html532/RooAbsReal.html,14,['variab'],['variables']
Modifiability,"nstructor & Destructor Documentation. ◆ RooHist() [1/6]. RooHist::RooHist ; (; ). inline . Definition at line 31 of file RooHist.h. ◆ RooHist() [2/6]. RooHist::RooHist ; (; double ; nominalBinWidth, . double ; nSigma = 1, . double ; xErrorFrac = 1.0, . double ; scaleFactor = 1.0 . ). Create an empty histogram that can be filled with the addBin() and addAsymmetryBin() methods. ; Use the optional parameter to specify the confidence level in units of sigma to use for calculating error bars. The nominal bin width specifies the default used by addBin(), and is used to set the relative normalization of bins with different widths. ; Definition at line 52 of file RooHist.cxx. ◆ RooHist() [3/6]. RooHist::RooHist ; (; const TH1 & ; data, . double ; nominalBinWidth = 0, . double ; nSigma = 1, . RooAbsData::ErrorType ; etype = RooAbsData::Poisson, . double ; xErrorFrac = 1.0, . bool ; correctForBinWidth = true, . double ; scaleFactor = 1. . ). Create a histogram from the contents of the specified TH1 object which may have fixed or variable bin widths. ; Error bars are calculated using Poisson statistics. Prints a warning and rounds any bins with non-integer contents. Use the optional parameter to specify the confidence level in units of sigma to use for calculating error bars. The nominal bin width specifies the default used by addBin(), and is used to set the relative normalization of bins with different widths. If not set, the nominal bin width is calculated as range/nbins. ; Definition at line 70 of file RooHist.cxx. ◆ RooHist() [4/6]. RooHist::RooHist ; (; const TH1 & ; data1, . const TH1 & ; data2, . double ; nominalBinWidth = 0, . double ; nSigma = 1, . RooAbsData::ErrorType ; etype = RooAbsData::Poisson, . double ; xErrorFrac = 1.0, . bool ; efficiency = false, . double ; scaleFactor = 1.0 . ). Create a histogram from the asymmetry between the specified TH1 objects which may have fixed or variable bin widths, but which must both have the same binning. ; The asymmetry is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:44422,variab,variable,44422,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,1,['variab'],['variable']
Modifiability,"nsumer::GetSourceCS() const; TObject*TEveElement::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitBins(const char* quant_name, Int_t nbins, Double_t min, Double_t max); virtual voidTEvePointSelectorConsumer::InitFill(Int_t); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttMarker::Modify(); virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEvePointSetArray.html:9849,Inherit,InheritsFrom,9849,root/html532/TEvePointSetArray.html,https://root.cern,https://root.cern/root/html532/TEvePointSetArray.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nsures hidden surface removal for the contours display mode. ;  ; void DrawMarker (Int_t x, Int_t y, Int_t w, Int_t h, Int_t type);  Draws channel mark at the screen coordinates x, y. ;  ; void Envelope (Int_t x1, Int_t y1, Int_t x2, Int_t y2);  Ensures hidden surface removal. ;  ; void EnvelopeBars (Int_t x1, Int_t y1, Int_t x2, Int_t y2);  Ensures hidden surface removal for Bars, BarsX and BarsY display modes. ;  ; Double_t ShadowColorCalculation (Double_t xtaz, Double_t ytaz, Double_t ztaz, Double_t shad_noise);  Determines whether the center of the triangle in 3-d space given by function parameters: ;  ; void Slice (Double_t xr, Double_t yr, Double_t xs, Double_t ys, TLine *line);  Calculates screen coordinates of the line given by two nodes for contours display mode. ;  ; void Transform (Int_t it, Int_t jt, Int_t zmt);  Reads out the value from histogram and calculates screen coordinates. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fAlpha;  ; Int_t fBeta;  ; Int_t fBezier;  ; Int_t fBx1;  ; Int_t fBx2;  ; Int_t fBy1;  ; Int_t fBy2;  ; Int_t fBzX [4];  ; Int_t fBzY [4];  ; Int_t fChanlineColor;  ; Int_t fChanlineEnDis;  ; Int_t fChanmarkColor;  ; Int_t fChanmarkEnDis;  ; Int_t fChanmarkHeight;  ; Int_t fChanmarkStyle;  ; Int_t fChanmarkWidth;  ; Int_t fColorAlg;  ; Int_t fContWidth;  ; Int_t fDisplayMode;  ; Double_t fDxspline;  ; Double_t fDyspline;  ; Short_t * fEnvelope;  ; Short_t * fEnvelopeContour;  ; Double_t fGbezx;  ; Double_t fGbezy;  ; TH2 * fH2;  ; Double_t fKx;  ; Double_t fKy;  ; Int_t fLevels;  ; Double_t fLHweight;  ; Int_t fLine;  ; Int_t fMaximumXScreenResolution;  ; Int_t fModeGroup;  ; Double_t fMxx;  ; Double_t fMxy;  ; Double_t fMyx;  ; Double_t fMyy;  ; TColor * fNewColor;  ; Int_t fNewColorIndex;  buffers' size ;  ; Int_t fNodesx;  ; Int_t fN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Painter.html:18534,inherit,inherited,18534,doc/master/classTSpectrum2Painter.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Painter.html,1,['inherit'],['inherited']
Modifiability,"nt , double ); set the value of an existing variable; parameter must exist or return false. bool SetVariableStepSize(unsigned int , double ); set the step-size of an existing variable; parameter must exist or return false. bool SetVariableLowerLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableUpperLimit(unsigned int , double ); set the limits of an existing variable; parameter must exist or return false. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an existing variable; parameter must exist or return false. bool FixVariable(unsigned int ); Fix an existing variable. bool ReleaseVariable(unsigned int ); Fix an existing variable. bool IsFixedVariable(unsigned int ) const; query if variable is fixed. bool GetVariableSettings(unsigned int , ROOT::Fit::ParameterSettings& ) const; retrieve variable settings (all set info on the variable). std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() const; return total number of function calls. double MinValue() const; return minimum function value. double Edm() const; return expected distance from the minimum. unsigned int NFree() const; return number of free parameters. bool GetCovMatrix(double* cov) const; get covariance ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMinuitMinimizer.html:10087,variab,variable,10087,root/html534/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html534/TMinuitMinimizer.html,9,"['Variab', 'variab']","['VariableName', 'variable']"
Modifiability,"nt ; (; const RooAbsArg & ; dep); const. overridevirtual . Force RooRealIntegral to relegate integration of all observables to internal logic. ; Reimplemented from RooAbsReal.; Definition at line 157 of file RooProjectedPdf.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooProjectedPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. overridevirtual . Mark all requested variables as internally integrated. ; Reimplemented from RooAbsReal.; Definition at line 167 of file RooProjectedPdf.cxx. ◆ getProjection(). const RooAbsReal * RooProjectedPdf::getProjection ; (; const RooArgSet * ; iset, . const RooArgSet * ; nset, . const char * ; rangeName, . int & ; code . ); const. protected . Retrieve object representing projection integral of input p.d.f over observables iset, while normalizing over observables nset. ; The code argument returned by reference is the unique code defining this particular projection configuration ; Definition at line 109 of file RooProjectedPdf.cxx. ◆ initGenerator(). void RooProjectedPdf::initGenerator ; (; Int_t ; code). inlineoverridevirtual . Interface for one-time initialization to setup the generator for the specified code. ; Reimplemented from RooAbsPdf.; Definition at line 34 of file RooProjectedPdf.h. ◆ IsA(). TClass * RooProjectedPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 73 of file RooProjectedPdf.h. ◆ printMetaArgs(). void RooProjectedPdf::printMetaArgs ; (; std::ostream & ; os); const. overridevirtual . Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the integration operation. ; Reimplemented from RooAbsArg.; Definition at line 254 of file RooProjectedPdf.cxx. ◆ redirectServersHook(). bool RooProjectedPdf::redirectServersHook ; (; const RooAbsCollection & ; newServerList, . bool ; mustRepla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:79322,config,configuration,79322,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['config'],['configuration']
Modifiability,"nt = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; bool _disableCache = false;  Flag to run object in passthrough (= non-caching mode) ;  . Friends; class PdfCacheElem;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedPdf.html:75231,inherit,inherited,75231,doc/master/classRooAbsCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedPdf.html,1,['inherit'],['inherited']
Modifiability,"nt NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:8964,variab,variable,8964,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,3,['variab'],['variable']
Modifiability,"nt NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix; status = -1 : not available (inversion failed or Hesse failed); status = 0 : available but not positive defined; status = 1 : covariance only approximate; status = 2 : full matrix but forced pos def; status = 3 : full accurate matrix. double Correlation(unsigned int i, unsigned int j) const. return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:10401,variab,variable,10401,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],['variable']
Modifiability,"nt NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables which; is most strongly correlated with i.; If the variable is fixed or const the return value is zero. bool GetMinosError(unsig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:9240,variab,variable,9240,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,3,['variab'],['variable']
Modifiability,"nt NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* h) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const. return the status of the covariance matrix; status = -1 : not available (inversion failed or Hesse failed); status = 0 : available but not positive defined; status = 1 : covariance only approximate; status = 2 : full matrix but forced pos def; status = 3 : full accurate matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and one",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:10677,variab,variable,10677,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],['variable']
Modifiability,"nt SM modifier; kSM = ROOT.RooRealVar(""kSM"", ""sm modifier"", 1.0); cHq3 = ROOT.RooRealVar(""cHq3"", ""EFT modifier"", -10.0, 10.0); cHq3.setAttribute(""NewPhysics"", True); cHl3 = ROOT.RooRealVar(""cHl3"", ""EFT modifier"", -10.0, 10.0); cHl3.setAttribute(""NewPhysics"", True); cHDD = ROOT.RooRealVar(""cHDD"", ""EFT modifier"", -10.0, 10.0); cHDD.setAttribute(""NewPhysics"", True); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/input_histos_rf_lagrangianmorph.root""; par = ""cHq3""; samplelist = [; ""SM_NPsq0"",; ""cHq3_NPsq1"",; ""cHq3_NPsq2"",; ""cHl3_NPsq1"",; ""cHl3_NPsq2"",; ""cHDD_NPsq1"",; ""cHDD_NPsq2"",; ""cHl3_cHDD_NPsq2"",; ""cHq3_cHDD_NPsq2"",; ""cHl3_cHq3_NPsq2"",; ]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = observablename; config.folderNames = samplelist; config.couplings.add(cHq3); config.couplings.add(cHDD); config.couplings.add(cHl3); config.couplings.add(kSM); ; ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of pTV"", config); ; # Create pseudo data histogram to fit at cHq3 = 0.01, cHl3 = 1.0, cHDD = 0.2; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; morphfunc.setParameter(""cHq3"", 0.01); morphfunc.setParameter(""cHl3"", 1.0); morphfunc.setParameter(""cHDD"", 0.2); ; pseudo_hist = morphfunc.createTH1(""pseudo_hist""); pseudo_dh = ROOT.RooDataHist(""pseudo_dh"", ""pseudo_dh"", [obsvar], pseudo_hist); ; # reset parameters to zeros before fit; morphfunc.setParameter(""cHq3"", 0.0); morphfunc.setParameter(""cHl3"", 0.0); morphfunc.setParameter(""cHDD"", 0.0); ; # set error to set initial step size in fit; cHq3.setEr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html:1697,config,config,1697,doc/master/rf712__lagrangianmorphfit_8py.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html,1,['config'],['config']
Modifiability,"nt a value and a ""shape"" in RooFit.Definition RooAbsArg.h:79; RooAbsArg::_fastbool _fastDefinition RooAbsArg.h:689; RooAbsArg::_valueDirtybool _valueDirtyDefinition RooAbsArg.h:685; RooAbsArg::setValueDirtyvoid setValueDirty()Mark the element dirty. This forces a re-evaluation when a value is requested.Definition RooAbsArg.h:462; RooAbsArg::inhibitDirtybool inhibitDirty() constDelete watch flag.Definition RooAbsArg.cxx:105; RooAbsArg::_inhibitDirtystatic bool _inhibitDirtyDefinition RooAbsArg.h:668; RooAbsCategoryLValueAbstract base class for objects that represent a discrete value that can be set from the outside,...Definition RooAbsCategoryLValue.h:26; RooAbsCollectionAbstract container object that can hold multiple RooAbsArg objects.Definition RooAbsCollection.h:65; RooAbsCollection::emptybool empty() constDefinition RooAbsCollection.h:273; RooAbsDataAbstract base class for binned and unbinned datasets.Definition RooAbsData.h:57; RooAbsFuncAbstract interface for evaluating a real-valued function of one real variable and performing numerica...Definition RooAbsFunc.h:27; RooAbsMomentDefinition RooAbsMoment.h:27; RooAbsRealLValueAbstract base class for objects that represent a real value that may appear on the left hand side of ...Definition RooAbsRealLValue.h:31; RooAbsReal::EvalErrorContextContext to temporarily change the error logging mode as long as the context is alive.Definition RooAbsReal.h:320; RooAbsReal::EvalErrorContext::~EvalErrorContext~EvalErrorContext()Definition RooAbsReal.h:329; RooAbsReal::EvalErrorContext::EvalErrorContextEvalErrorContext(ErrorLoggingMode m)Definition RooAbsReal.h:322; RooAbsReal::EvalErrorContext::operator=EvalErrorContext & operator=(EvalErrorContext const &)=delete; RooAbsReal::EvalErrorContext::_oldErrorLoggingMode _oldDefinition RooAbsReal.h:331; RooAbsReal::EvalErrorContext::operator=EvalErrorContext & operator=(EvalErrorContext &&)=delete; RooAbsReal::EvalErrorContext::EvalErrorContextEvalErrorContext(EvalErrorContext cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:29729,variab,variable,29729,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['variab'],['variable']
Modifiability,"nt cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsAnaConvPdf.html:42490,variab,variable,42490,root/html534/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html,2,['variab'],['variable']
Modifiability,"nt directory is not changed.; To automatically set the current directory where the object is found,; use FindKeyAny(aname)->ReadObj(). TObject * Get(const char* namecycle); return pointer to object identified by namecycle. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory; if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject.; If not, the function TDirectoryFile::GetObject should be called.; However, this function will still work for a non-TObject, providing that; the calling application cast the return type to the correct type (which; is the actual type of the object). NOTE:; The method GetObject offers better protection and avoids the need; for any cast:; MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }. VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not; as a first inheritance, one must use dynamic_cast<>().; Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; then on return, one can do:; MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");. Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do:; MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));. Of course, dynamic_cast<> can also be used in the example 1. void * GetObjectUnchecked(const char* namecycle); return pointer to object identified by namecycle.; The returned object may or may not derive from TObject. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned object to; the final type, eg; MyClass *o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDirectoryFile.html:16754,inherit,inherits,16754,root/html528/TDirectoryFile.html,https://root.cern,https://root.cern/root/html528/TDirectoryFile.html,10,['inherit'],['inherits']
Modifiability,"nt directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::vector< T > * fVector;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (prote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofVectorContainer.html:10223,inherit,inherited,10223,doc/master/classTProofVectorContainer.html,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html,1,['inherit'],['inherited']
Modifiability,"nt for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on; static Int_tTBufferFile::fgMapSizeDefault map size for all TBuffer objects; static TStringTXMLSetup::fgNameSpaceBase. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferXML(); Default constructor. TBufferXML(TBuffer::EMode mode); Creates buffer object to serailize/deserialize data to/from xml.; Mode should be either TBuffer::kRead or TBuffer::kWrite. TBufferXML(TBuffer::EMode mode, TXMLFile* file); Creates buffer object to serailize/deserialize data to/from xml.; This constructor should be used, if data from buffer supposed to be stored in file.; Mode should be either TBuffer::kRead or TBuffer::kWrite. ~TBufferXML(); destroy xml buffer. TXMLFile* XmlFile(); returns pointer to TXMLFile object; access to file is necessary to produce unique identifier for object references. TString ConvertToXML(const TObject* obj, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); converts object, inherited from TObject class, to XML string; fmt contains configuration of XML layout. See TXMLSetup class for detatils. TString ConvertToXML(const void* obj, const TClass* cl, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); converts any type of object to XML string; fmt contains configuration of XML layout. See TXMLSetup class for detatils. TObject* ConvertFromXML(const char* str, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); Read object from XML, produced by ConvertToXML() method.; If object does not inherit from TObject class, return 0.; GenericLayout and UseNamespaces should be the same as in ConvertToXML(). void* ConvertFromXMLAny(const char* str, TClass** cl = 0, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces = kFALSE); Read object of any class from XML, produced by ConvertToXML() method.; If cl!=0, return actual class of object.; GenericLayout and UseNamespaces should be the same as in ConvertToXML(). XMLNodePointer_t XmlWri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBufferXML.html:26264,inherit,inherited,26264,root/html534/TBufferXML.html,https://root.cern,https://root.cern/root/html534/TBufferXML.html,12,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,"nt hues clash. If you intend to display; colors of the same hue together, you should pick them from the same group.; Each color chip is identified by a mnemonic (eg kYellow) and a number.; The keywords, kRed, kBlue, kYellow, kPink, etc are defined in the header file Rtypes.h; that is included in all ROOT other header files. We strongly recommend to use these keywords; in your code instead of hardcoded color numbers, eg:. myObject.SetFillColor(kRed);; myObject.SetFillColor(kYellow-10);; myLine.SetLineColor(kMagenta+2);. Picture; Source. {; TColorWheel *w = new TColorWheel();; w->Draw();; return w->GetCanvas();; }. Special case forcing black&white output.; If the current style fill area color is set to 0, then ROOT will force; a black&white output for all objects with a fill area defined and independently; of the object fill style.; ; Fill Area style; The fill area style defines the pattern used to fill a polygon.; The fill area style of any class inheriting from TAttFill can; be changed using the method SetFillStyle and retrieved using the; method GetFillStyle.; Conventions for fill styles:. 0 : hollow ; 1001 : Solid ; 2001 : hatch style ; 3000+pattern_number (see below) ; For TPad only: . 4000 :the window is transparent. ; 4000 to 4100 the window is 100% transparent to 100% opaque. . The pad transparency is visible in binary outputs files like gif, jpg, png etc ..; but not in vector graphics output files like PS, PDF and SVG. pattern_number can have any value from 1 to 25 (see table), or any; value from 100 to 999. For the latest the numbering convention is the following:. pattern_number = ijk (FillStyle = 3ijk); ; i (1-9) : specify the space between each hatch; 1 = 1/2mm 9 = 6mm; ; j (0-9) : specify angle between 0 and 90 degrees; 0 = 0; 1 = 10; 2 = 20; 3 = 30; 4 = 45; 5 = Not drawn; 6 = 60; 7 = 70; 8 = 80; 9 = 90; ; k (0-9) : specify angle between 90 and 180 degrees; 0 = 180; 1 = 170; 2 = 160; 3 = 150; 4 = 135; 5 = Not drawn; 6 = 120; 7 = 110; 8 = 100; 9 = 90. The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAttFill.html:2424,inherit,inheriting,2424,root/html526/TAttFill.html,https://root.cern,https://root.cern/root/html526/TAttFill.html,2,['inherit'],['inheriting']
Modifiability,"nt hues clash. If you intend to display; colors of the same hue together, you should pick them from the same group.; Each color chip is identified by a mnemonic (eg kYellow) and a number.; The keywords, kRed, kBlue, kYellow, kPink, etc are defined in the header file Rtypes.h; that is included in all ROOT other header files. We strongly recommend to use these keywords; in your code instead of hardcoded color numbers, eg:. myObject.SetFillColor(kRed);; myObject.SetFillColor(kYellow-10);; myLine.SetLineColor(kMagenta+2);. Picture; Source. {; TColorWheel *w = new TColorWheel();; w->Draw();; return w->GetCanvas();; }. Special case forcing black&white output.; If the current style fill area color is set to 0, then ROOT will force; a black&white output for all objects with a fill area defined and independently; of the object fill style.; ; Fill Area style; The fill area style defines the pattern used to fill a polygon.; The fill area style of any class inheriting from TAttFill can; be changed using the method SetFillStyle and retrieved using the; method GetFillStyle.; Conventions for fill styles:. 0 : hollow ; 1001 : Solid ; 3000+pattern_number (see below) ; For TPad only: . 4000 :the window is transparent. ; 4000 to 4100 the window is 100% transparent to 100% opaque. . The pad transparency is visible in binary outputs files like gif, jpg, png etc ..; but not in vector graphics output files like PS, PDF and SVG. pattern_number can have any value from 1 to 25 (see table), or any; value from 100 to 999. For the latest the numbering convention is the following:. pattern_number = ijk (FillStyle = 3ijk); ; i (1-9) : specify the space between each hatch; 1 = 1/2mm 9 = 6mm; ; j (0-9) : specify angle between 0 and 90 degrees; 0 = 0; 1 = 10; 2 = 20; 3 = 30; 4 = 45; 5 = Not drawn; 6 = 60; 7 = 70; 8 = 80; 9 = 90; ; k (0-9) : specify angle between 90 and 180 degrees; 0 = 180; 1 = 170; 2 = 160; 3 = 150; 4 = 135; 5 = Not drawn; 6 = 120; 7 = 110; 8 = 100; 9 = 90. The following table shows",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAttFill.html:2424,inherit,inheriting,2424,root/html530/TAttFill.html,https://root.cern,https://root.cern/root/html530/TAttFill.html,3,['inherit'],['inheriting']
Modifiability,"nt implementation in C++ is a straightforward conversion ; -* of the original Fortran version: The main changes are: ; -* ; -* - The variables in the various Minuit labelled common blocks ; -* have been changed to the TMinuit class data members. ; -* - The internal arrays with a maximum dimension depending on the ; -* maximum number of parameters are now data members arrays with ; -* a dynamic dimension such that one can fit very large problems ; -* by simply initialising the TMinuit constructor with the maximum ; -* number of parameters. ; -* - The include file Minuit.h has been commented as much as possible; -* using existing comments in the code or the printed documentation; -* - The original Minuit subroutines are now member functions. ; -* - Constructors and destructor have been added. ; -* - Instead of passing the FCN function in the argument ; -* list, the addresses of this function is stored as pointer ; -* in the data members of the class. This is by far more elegant ; -* and flexible in an interactive environment. ; -* The member function SetFCN can be used to define this pointer. ; -* - The ROOT static function Printf is provided to replace all ; -* format statements and to print on currently defined output file.; -* - The functions SetObjectFit(TObject *obj)/GetObjectFit() can be ; -* used inside the FCN function to set/get a referenced object ; -* instead of using global variables. ; *. . Basic concepts of MINUIT. The MINUIT package acts on a multiparameter Fortran function to which one; must give the generic name FCN. In the ROOT implementation,; the function FCN is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of FCN will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:1519,flexible,flexible,1519,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,10,['flexible'],['flexible']
Modifiability,"nt in fClingVariables; 2577 if (var.fArrayPos < 0) {; 2578 var.fArrayPos = fVars.size();; 2579 }; 2580 if (var.fArrayPos >= (int)fClingVariables.size()) {; 2581 fClingVariables.resize(var.fArrayPos + 1);; 2582 }; 2583 fClingVariables[var.fArrayPos] = value;; 2584 } else {; 2585 TFormulaVariable var(name, value, fVars.size());; 2586 fVars[name] = var;; 2587 fClingVariables.push_back(value);; 2588 if (!fFormula.IsNull()) {; 2589 // printf(""process formula again - %s \n"",fClingInput.Data() );; 2590 ProcessFormula(fClingInput);; 2591 }; 2592 }; 2593}; 2594 ; 2595////////////////////////////////////////////////////////////////////////////////; 2596/// Adds multiple variables.; 2597/// First argument is an array of pairs<TString,Double>, where; 2598/// first argument is name of variable,; 2599/// second argument represents value.; 2600/// size - number of variables passed in first argument; 2601 ; 2602void TFormula::AddVariables(const TString *vars, const Int_t size); 2603{; 2604 Bool_t anyNewVar = false;; 2605 for (Int_t i = 0; i < size; ++i) {; 2606 ; 2607 const TString &vname = vars[i];; 2608 ; 2609 TFormulaVariable &var = fVars[vname];; 2610 if (var.fArrayPos < 0) {; 2611 ; 2612 var.fName = vname;; 2613 var.fArrayPos = fVars.size();; 2614 anyNewVar = true;; 2615 var.fValue = 0;; 2616 if (var.fArrayPos >= (int)fClingVariables.capacity()) {; 2617 Int_t multiplier = 2;; 2618 if (fFuncs.size() > 100) {; 2619 multiplier = TMath::Floor(TMath::Log10(fFuncs.size()) * 10);; 2620 }; 2621 fClingVariables.reserve(multiplier * fClingVariables.capacity());; 2622 }; 2623 fClingVariables.push_back(0.0);; 2624 }; 2625 // else; 2626 // {; 2627 // var.fValue = v.second;; 2628 // fClingVariables[var.fArrayPos] = v.second;; 2629 // }; 2630 }; 2631 if (anyNewVar && !fFormula.IsNull()) {; 2632 ProcessFormula(fClingInput);; 2633 }; 2634}; 2635 ; 2636////////////////////////////////////////////////////////////////////////////////; 2637/// Set the name of the formula. We need to allow the list ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:100542,variab,variables,100542,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"nt ipos); check if the character at position i is part of a scientific notation. Bool_t IsHexadecimal(const TString& formula, int ipos); check if the character at position i is part of a scientific notation. TFormula(). ~TFormula(). TFormula(const char* name, const char* formula = """", bool addToGlobList = true); -; *-* Constructor; *-* When TF1 is constructed using C++ function, TF1 need space to keep parameters values.; -. TFormula(const char* name, const char* formula = """", bool addToGlobList = true). TFormula& operator=(const TFormula& rhs); -; *-* = Operator; -. Int_t Compile(const char* expression = """"); Compile the given expression with Cling; backward compatibility method to be used in combination with the empty constructor; if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used.; return 0 if the formula compilation is successfull. void Copy(TObject& f1) const. void Clear(Option_t* option = """"); clear the formula setting expression to empty and reset the variables and parameters containers. bool PrepareEvalMethod(); -; *-* Sets TMethodCall to function inside Cling environment; *-* TFormula uses it to execute function.; *-* After call, TFormula should be ready to evaluate formula.; -. void InputFormulaIntoCling(); -; *-* Inputs formula, transfered to C++ code into Cling; -. void FillDefaults(); -; *-* Fill structures with default variables, constants and function shortcuts; -; #ifdef ROOT_CPLUSPLUS11. void HandlePolN(TString& formula); -; *-* Handling polN; *-* If before 'pol' exist any name, this name will be treated as variable used in polynomial; *-* eg.; *-* varpol2(5) will be replaced with: [5] + [6]*var + [7]*var^2; *-* Empty name is treated like variable x.; -. void HandleParametrizedFunctions(TString& formula); -; *-* Handling parametrized functions; *-* Function can be normalized, and have different variable then x.; *-* Variables should be placed in brackets after function name.; *-* No brackets a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFormula.html:11232,variab,variables,11232,root/html604/TFormula.html,https://root.cern,https://root.cern/root/html604/TFormula.html,2,['variab'],['variables']
Modifiability,"nt is calculated on the subset of the data which pass the C++; cut specification expression 'cutSpec' and/or are inside the; range named 'cutRange'. RooRealVar* rmsVar(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; Create a RooRealVar containing the RMS of observable 'var' in; this dataset. If cutSpec and/or cutRange are specified the; moment is calculated on the subset of the data which pass the C++; cut specification expression 'cutSpec' and/or are inside the; range named 'cutRange'. RooPlot* statOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); Add a box with statistics information to the specified frame. By default a box with the; event count, mean and rms of the plotted variable is added. The following optional named arguments are accepted. What(const char* whatstr) -- Controls what is printed: ""N"" = count, ""M"" is mean, ""R"" is RMS.; Format(const char* optStr) -- Classing [arameter formatting options, provided for backward compatibility; Format(const char* what,...) -- Parameter formatting options, details given below; Label(const chat* label) -- Add header label to parameter box; Layout(Double_t xmin, -- Specify relative position of left,right side of box and top of box. Position of; Double_t xmax, Double_t ymax) bottom of box is calculated automatically from number lines in box; Cut(const char* expression) -- Apply given cut expression to data when calculating statistics; CutRange(const char* rangeName) -- Only consider events within given range when calculating statistics. Multiple; CutRange() argument may be specified to combine ranges. The Format(const char* what,...) has the following structure. const char* what -- Contro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:25968,variab,variable,25968,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,10,['variab'],['variable']
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooRealIntegral*_acceptRejectFuncProjection function to be passed to accept/reject sampler; Double_t_area; RooArgSet*_cloneSetClone of all nodes of input p.d.f; Int_t_codeInternal generation code; RooArgSet_directVars; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; RooAbsNumGenerator*_generatorMC sampling generation engine; Bool_tRooAbsGenContext::_isValidIs context in valid state?; Double_t_maxProb; RooRealVar*_maxVarVariable holding maximum value of p.d.f; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; Double_t_normMaximum probability, p.d.f area and normalization; RooArgSet_otherVarsList of observables generated internally, randomly, and by accept/reject sampling; RooAbsPdf*_pdfCloneClone of input p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGenContext.html:7899,extend,extended,7899,root/html526/RooGenContext.html,https://root.cern,https://root.cern/root/html526/RooGenContext.html,1,['extend'],['extended']
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooRealIntegral*_acceptRejectFuncProjection function to be passed to accept/reject sampler; Double_t_area; RooArgSet*_cloneSetClone of all nodes of input p.d.f; Int_t_codeInternal generation code; RooArgSet_directVars; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; RooAbsNumGenerator*_generatorMC sampling generation engine; Bool_tRooAbsGenContext::_isValidIs context in valid state?; Double_t_maxProb; RooRealVar*_maxVarVariable holding maximum value of p.d.f; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; Double_t_normMaximum probability, p.d.f area and normalization; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet_otherVarsList of observables generated internally, randomly, and by accept/reject sampling; RooAbsPdf*_pdfCloneClone of input p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototype",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGenContext.html:7885,extend,extended,7885,root/html528/RooGenContext.html,https://root.cern,https://root.cern/root/html528/RooGenContext.html,6,['extend'],['extended']
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kFirst; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kIsConst; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kLast; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kMax; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kMin; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kMultiply; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TParameter<Long64_t>. ←; TSelectorScalar. Function documentation; void Inc(Long_t n = 1); Increment scalar value by n. Int_t Merge(TCollection* list); Merge scalars with scalars in the list. The scalar values are added.; Returns the number of scalars that were in the list. TSelectorScalar(const char* name = """", Long64_t val = 0); { }. ~TSelectorScalar(); { }. » Author: Maarten Ballintijn 13/02/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-06-02 16:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSelectorScalar.html:6668,Inherit,Inheritance,6668,root/html604/TSelectorScalar.html,https://root.cern,https://root.cern/root/html604/TSelectorScalar.html,1,['Inherit'],['Inheritance']
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kFirst; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kIsConst; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kLast; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kMax; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kMin; static TParameter<Long64_t>::EStatusBitsTParameter<Long64_t>::kMultiply; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance Chart:. TObject. ←; TParameter<Long64_t>. ←; TSelectorScalar. Function documentation; void Inc(Long_t n = 1); Increment scalar value by n. Int_t Merge(TCollection* list); Merge scalars with scalars in the list. The scalar values are added.; Returns the number of scalars that were in the list. TSelectorScalar(const char* name = """", Long64_t val = 0); { }. ~TSelectorScalar(); { }. » Author: Maarten Ballintijn 13/02/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorScalar.html:6668,Inherit,Inheritance,6668,root/html602/TSelectorScalar.html,https://root.cern,https://root.cern/root/html602/TSelectorScalar.html,1,['Inherit'],['Inheritance']
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidAllocate(); static Float_tHLStoRGB1(Float_t rn1, Float_t rn2, Float_t huei). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; Int_tfNumberColor number identifier; TStringTNamed::fTitleobject title. private:. Float_tfAlphaAlpha (transparency); Float_tfBlueFraction of Blue; Float_tfGreenFraction of Green; Float_tfHueHue; Float_tfLightLight; Float_tfRedFraction of Red; Float_tfSaturationSaturation; static Bool_tfgGrayscaleModeif set, GetColor will return grayscale; static Bool_tfgInitDonekTRUE once ROOT colors have been initialized; static TArrayIfgPaletteColor palette. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TColor(). Default constructor.; ; . TColor(Int_t color, Float_t r, Float_t g, Float_t b, const char* name = """", Float_t a = 1). Normal color constructor. Initialize a color structure.; Compute the RGB and HLS color components.; ; . ~TColor(). Color destructor.; ; . TColor(const TColor& color). Color copy constructor.; ; . void InitializeColors(). Initialize colors used by the TCanvas based graphics (via TColor objects).; This method should be called before the ApplicationImp is created (which; initializes the GUI colors).; ; . const char * AsHexString() const. Return color as hexadecimal string. This string can be directly passed; to, for example, TGClient::GetColorByName(). String will be reused so; copy immediately if needed.; ; . void Copy(TObject& color) const. Copy this color to obj.; ; . void CreateColorsGray(). Create the Gray scale colors in the Color Wheel; ; . void CreateColorsCircle(Int_t offset, const char* name, UChar_t* r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TColor.html:17514,Inherit,Inheritance,17514,root/html534/TColor.html,https://root.cern,https://root.cern/root/html534/TColor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidAllocate(); static Float_tHLStoRGB1(Float_t rn1, Float_t rn2, Float_t huei). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Float_tfAlphaAlpha (transparency); Float_tfBlueFraction of Blue; Float_tfGreenFraction of Green; Float_tfHueHue; Float_tfLightLight; Int_tfNumberColor number identifier; Float_tfRedFraction of Red; Float_tfSaturationSaturation; static Bool_tfgGrayscaleModeif set, GetColor will return grayscale; static Bool_tfgInitDonekTRUE once ROOT colors have been initialized; static TArrayIfgPaletteColor palette. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TColor(). Default constructor.; ; . TColor(Int_t color, Float_t r, Float_t g, Float_t b, const char* name = """", Float_t a = 1). Normal color constructor. Initialize a color structure.; Compute the RGB and HLS color components.; ; . ~TColor(). Color destructor.; ; . TColor(const TColor& color). Color copy constructor.; ; . void InitializeColors(). Initialize colors used by the TCanvas based graphics (via TColor objects).; This method should be called before the ApplicationImp is created (which; initializes the GUI colors).; ; . const char * AsHexString() const. Return color as hexadecimal string. This string can be directly passed; to, for example, TGClient::GetColorByName(). String will be reused so; copy immediately if needed.; ; . void Copy(TObject& color) const. Copy this color to obj.; ; . void CreateColorsGray(). Create the Gray scale colors in the Color Wheel; ; . void CreateColorsCircle(Int_t offset, const char* name, UChar_t* r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TColor.html:15707,Inherit,Inheritance,15707,root/html532/TColor.html,https://root.cern,https://root.cern/root/html532/TColor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidRooAbsStudy::registerSummaryOutput(const RooArgSet& allVars, const RooArgSet& varsWithError = RooArgSet(), const RooArgSet& varsWithAsymError = RooArgSet()); voidRooAbsStudy::storeDetailedOutput(TNamed& object); voidRooAbsStudy::storeSummaryOutput(const RooArgSet& vars). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooArgSet_fitObs!; string_fitObsName; RooLinkedList_fitOpts; RooAbsPdf*_fitPdf!; string_fitPdfName; RooArgSet_genObs!; string_genObsName; RooLinkedList_genOpts; RooAbsPdf*_genPdf!; string_genPdfName; RooAbsPdf::GenSpec*_genSpec!; RooArgSet*_initParams!; RooRealVar*_ngenVar!; RooRealVar*_nllVar!; RooArgSet*_params!; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooGenFitStudy(). Bool_t attach(RooWorkspace& w); Function called after insertion into workspace. void setGenConfig(const char* pdfName, const char* obsName, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg()). void setFitConfig(const char* pdfName, const char* obsName, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg()). Bool_t initialize(); One-time initialization of study. Bool_t execute(); Execute one study iteration. Bool_t finalize(); Finalization of study. void Print(Option_t* options = 0) const. » Last changed: Thu Nov 3 20:08:18 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooGenFitStudy.html:6994,Inherit,Inheritance,6994,root/html532/RooGenFitStudy.html,https://root.cern,https://root.cern/root/html532/RooGenFitStudy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt level; unsigned intROOT::Math::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; vector<double>fCovMatrixcov matrix (stored as cov[ i * dim + j] ; unsigned intfDimdimension of the function to be minimized ; doublefEdmedm value; vector<double>fErrors; ROOT::Math::GSLMultiFit*fGSLMultiFitpointer to GSL multi fit solver ; doublefLSToleranceLine Search Tolerance; doublefMinValminimum function value; unsigned intfNFreedimension of the internal function to be minimized ; vector<std::string>fNames; const ROOT::Math::FitMethodFunction*fObjFuncpointer to Least square function; vector<LSResidualFunc>fResiduals! transient Vector of the residual functions; unsigned intfSizenumber of fit points (residuals); vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). unsigned int NDim() const; { return fChi2->NDim(); }. GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const GSLNLSMinimizer &); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction & func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLNLSMinimizer.html:5451,variab,variables,5451,root/html526/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLNLSMinimizer.html,1,['variab'],['variables']
Modifiability,"nt level; unsigned intROOT::Math::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,std::pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; vector<double>fCovMatrixcov matrix (stored as cov[ i * dim + j] ; unsigned intfDimdimension of the function to be minimized ; doublefEdmedm value; vector<double>fErrors; ROOT::Math::GSLMultiFit*fGSLMultiFitpointer to GSL multi fit solver ; doublefLSToleranceLine Search Tolerance; doublefMinValminimum function value; unsigned intfNFreedimension of the internal function to be minimized ; vector<std::string>fNames; const ROOT::Math::FitMethodFunction*fObjFuncpointer to Least square function; vector<LSResidualFunc>fResiduals! transient Vector of the residual functions; unsigned intfSizenumber of fit points (residuals); vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). unsigned int NDim() const; { return fChi2->NDim(); }. GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html:5667,variab,variables,5667,root/html528/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html,4,['variab'],['variables']
Modifiability,"nt level; unsigned intROOT::Math::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. vector<double>fCovar; unsigned intfDim; doublefEdm; vector<double>fErrors; TFumili*fFumili; doublefMinVal; unsigned intfNFree; vector<double>fParams; static TFumili*fgFumilistatic instance (used by fcn function) ; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>*fgFunc; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>*fgGradFunc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFumiliMinimizer(int dummy = 0); Constructor for TFumiliMinimier class. ~TFumiliMinimizer(); Destructor implementation. TFumiliMinimizer(const TFumiliMinimizer& ); Implementation of copy constructor (it is private). void SetFunction(const ROOT::Math::IMultiGenFunction & func); Set the objective function to be minimized, by passing a function object implement the; basic multi-dim Function interface. In this case the derivatives will be; calculated by Fumili. void SetFunction(const ROOT::Math::IMultiGradFunction & func); Set the objective function to be minimized, by passing a function object implement the; multi-dim gradient Function interface. In this case the function derivatives are provided; by the user via this interface and there not calculated by Fumili. void Fcn(int& , double* , double& f, double* , int ); implementation of FCN static function used internally by TFumili.; Adapt IMultiGenFunction interface to TFumili FCN static f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFumiliMinimizer.html:5421,Inherit,Inheritance,5421,root/html532/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html532/TFumiliMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt newPoints, unsigned int dim=1);  ; const double * Coords (unsigned int ipoint) const;  return a pointer to the coordinates data for the given fit point ;  ; const double * GetCoordComponent (unsigned int ipoint, unsigned int icoord) const;  returns a single coordinate component of a point. ;  ; const std::vector< const double * > & GetCoordDataPtrs () const;  direct access to coord data ptrs ;  ; unsigned int NDim () const;  return coordinate data dimension ;  ; unsigned int NPoints () const;  return number of fit points ;  ; FitData & operator= (const FitData &rhs);  ; DataOptions & Opt ();  ; const DataOptions & Opt () const;  access to options ;  ; const DataRange & Range () const;  access to range ;  ; unsigned int Size () const;  return number of fit points ;  . Private Attributes; bool fWeighted;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Fit::FitData; void InitCoordsVector ();  initializer routines to set the corresponding pointers right The vectors must NOT be resized after this initialization without setting the corresponding pointers in the same moment ( has to be an atomic operation in case of multithreading ). ;  ; template<class Iterator > ; void InitFromRange (Iterator dataItr);  ; void UnWrap ();  ;  Static Protected Member Functions inherited from ROOT::Fit::FitData; static constexpr unsigned VectorPadding (const unsigned);  If VecCore is not defined, there is no vectorization available and the SIMD vector size will always be one. ;  ;  Protected Attributes inherited from ROOT::Fit::FitData; unsigned int fDim;  ; unsigned int fMaxPoints;  ; unsigned int fNPoints;  ; bool fWrapped;  . #include <Fit/UnBinData.h>. Inheritance diagram for ROOT::Fit::UnBinData:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ UnBinData() [1/12]. ROOT::Fit::UnBinData::UnBinData ; (; unsigned int ; maxpoints = 0, . unsigned int ; dim = 1, . boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html:8896,inherit,inherited,8896,doc/master/classROOT_1_1Fit_1_1UnBinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData.html,1,['inherit'],['inherited']
Modifiability,"nt of the array; 342 firstArrayVar = kTRUE;; 343 firstArrayVarIndex = -1;; 344 Log() << kDEBUG << ""Using Last variable from array : "" << dsi.GetVariableInfo(i).GetInternalName() << Endl;; 345 }; 346 }; 347 ; 348 }; 349 ; 350 //; 351 // targets; 352 //; 353 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform regression targets"" << Endl;; 354 for (formIt = fTargetFormulas.begin(), formItEnd = fTargetFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 355 fTargetFormulas.clear();; 356 for (UInt_t i=0; i<dsi.GetNTargets(); i++) {; 357 ttf = new TTreeFormula( TString::Format( ""Formula%s"", dsi.GetTargetInfo(i).GetInternalName().Data() ),; 358 dsi.GetTargetInfo(i).GetExpression().Data(), tr );; 359 CheckTTreeFormula( ttf, dsi.GetTargetInfo(i).GetExpression(), hasDollar );; 360 fTargetFormulas.push_back( ttf );; 361 }; 362 ; 363 //; 364 // spectators; 365 //; 366 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform spectator variables"" << Endl;; 367 for (formIt = fSpectatorFormulas.begin(), formItEnd = fSpectatorFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 368 fSpectatorFormulas.clear();; 369 for (UInt_t i=0; i<dsi.GetNSpectators(); i++) {; 370 ttf = new TTreeFormula( TString::Format( ""Formula%s"", dsi.GetSpectatorInfo(i).GetInternalName().Data() ),; 371 dsi.GetSpectatorInfo(i).GetExpression().Data(), tr );; 372 CheckTTreeFormula( ttf, dsi.GetSpectatorInfo(i).GetExpression(), hasDollar );; 373 fSpectatorFormulas.push_back( ttf );; 374 }; 375 ; 376 //; 377 // the cuts (one per class, if non-existent: formula pointer = 0); 378 //; 379 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform cuts"" << Endl;; 380 for (formIt = fCutFormulas.begin(), formItEnd = fCutFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 381 fCutFormulas.clear();; 382 for (UInt_t clIdx=0; clIdx<dsi.GetNClasses(); clIdx++) {; 383 const TCut& tmpCut = dsi.GetClassInfo(clIdx)->GetCut(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:14723,variab,variables,14723,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"nt on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; virtual void SavePrimitiveHelp (std::ostream &out, const char *hname, Option_t *option="""");  Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ; virtual void UpdateBinContent (Int_t bin, Double_t content);  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fScalefactor;  Scale factor. ;  ; Double_t fTsumwxy;  Total Sum of weight*X*Y. ;  ; Double_t fTsumwy;  Total Sum of weight*Y. ;  ; Double_t fTsumwy2;  Total Sum of weight*Y*Y. ;  ;  Protected Attributes inherited from TH1; Short_t fBarOffset;  (1000*offset) for bar charts or legos ;  ; Short_t fBarWidth;  (1000*width) for bar charts or legos ;  ; EBinErrorOpt fBinStatErrOpt;  Option for bin statistical errors. ;  ; Double_t * fBuffer;  [fBufferSize] entry buffer ;  ; Int_t fBufferSize;  fBuffer size ;  ; TArrayD fContour;  Array to display contour levels. ;  ; Int_t fDimension;  ! Histogram dimension (1, 2 or 3 dim) ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this histogram ;  ; Double_t fEntries;  Number of entries. ;  ; TList * fFunctions;  ->Pointer to list of functions (fits and user) ;  ; Double_t * fIntegral;  ! Integral of bins used by GetRandom ;  ; Double_t fMaximum;  Maximum value for plotting. ;  ; Double_t fMinimum;  Minimum value for plotting. ;  ; Int_t fNcells;  Number of bins(1D), cells (2D) +U/Overflows. ;  ; Double_t fNormFactor;  Normalization factor. ;  ; TString fOption;  Histogram options. ;  ; TVirtualHistPainter * fPainter;  ! Pointer to histogram painter ;  ; EStatOverflows fStatOverflows;  Per object flag to use under/overflows in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:50834,inherit,inherited,50834,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['inherit'],['inherited']
Modifiability,"nt record. ;  ; TClonesArray * fList;  List of TV records. ;  ; TString fName;  Name of this session. ;  ; Int_t fRecords;  Number of records. ;  ; TTreeViewer * fViewer;  Associated tree viewer. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTVSession.h>. Inheritance diagram for TTVSession:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTVSession(). TTVSession::TTVSession ; (; TTreeViewer * ; tv). Constructor. ; Definition at line 140 of file TTVSession.cxx. ◆ ~TTVSession(). TTVSession::~TTVSession ; (; ). override . Destructor. ; Definition at line 152 of file TTVSession.cxx. Member Function Documentation. ◆ AddRecord(). TTVRecord * TTVSession::AddRecord ; (; bool ; fromFile = false). Add a record. ; Definition at line 161 of file TTVSession.cxx. ◆ Class(). static TClass * TTVSession::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTVSession::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_V",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVSession.html:10546,inherit,inherited,10546,doc/master/classTTVSession.html,https://root.cern,https://root.cern/doc/master/classTTVSession.html,2,['inherit'],['inherited']
Modifiability,"nt represents value.; 2667/// size - number of variables passed in first argument; 2668 ; 2669void TFormula::SetVariables(const pair<TString,Double_t> *vars, const Int_t size); 2670{; 2671 for(Int_t i = 0; i < size; ++i); 2672 {; 2673 auto &v = vars[i];; 2674 if (fVars.find(v.first) != fVars.end()) {; 2675 fVars[v.first].fValue = v.second;; 2676 fClingVariables[fVars[v.first].fArrayPos] = v.second;; 2677 } else {; 2678 Error(""SetVariables"", ""Variable %s is not defined."", v.first.Data());; 2679 }; 2680 }; 2681}; 2682 ; 2683////////////////////////////////////////////////////////////////////////////////; 2684/// Returns variable value.; 2685 ; 2686Double_t TFormula::GetVariable(const char *name) const; 2687{; 2688 const auto nameIt = fVars.find(name);; 2689 if (fVars.end() == nameIt) {; 2690 Error(""GetVariable"", ""Variable %s is not defined."", name);; 2691 return -1;; 2692 }; 2693 return nameIt->second.fValue;; 2694}; 2695 ; 2696////////////////////////////////////////////////////////////////////////////////; 2697/// Returns variable number (positon in array) given its name.; 2698 ; 2699Int_t TFormula::GetVarNumber(const char *name) const; 2700{; 2701 const auto nameIt = fVars.find(name);; 2702 if (fVars.end() == nameIt) {; 2703 Error(""GetVarNumber"", ""Variable %s is not defined."", name);; 2704 return -1;; 2705 }; 2706 return nameIt->second.fArrayPos;; 2707}; 2708 ; 2709////////////////////////////////////////////////////////////////////////////////; 2710/// Returns variable name given its position in the array.; 2711 ; 2712TString TFormula::GetVarName(Int_t ivar) const; 2713{; 2714 if (ivar < 0 || ivar >= fNdim) return """";; 2715 ; 2716 // need to loop on the map to find corresponding variable; 2717 for ( auto & v : fVars) {; 2718 if (v.second.fArrayPos == ivar) return v.first;; 2719 }; 2720 Error(""GetVarName"",""Variable with index %d not found !!"",ivar);; 2721 //return TString::Format(""x%d"",ivar);; 2722 return """";; 2723}; 2724 ; 2725//////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:103839,variab,variable,103839,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nt selected entries;; Bool_tfDisplayAverageDisplay or not the average.; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasList of all formulas to represent.; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; Double_t*fMax[fNcols] Maximum value of the variables.; Double_t*fMin[fNcols] Minimum value of the variables.; UInt_tfNcolsNumber of variables.; Long64_tfNentriesNumber of entries.; UInt_tfNxNumber of horizontal spider plots.; UInt_tfNyNumber of vertical spider plots.; TGraphPolargram*fPolargramPolar graph.; TList*fPolyListPolygons representing the variables.; Bool_tfSegmentDisplayTrue if displaying a segment plot.; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelector! Selector.; Bool_tfShowRangeShow range of variables or not.; TList*fSuperposedSuperposed spider plots.; TTree*fTreePointer to the TTree to represent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpider(); Default constructor. TSpider(TTree* tree, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = 0, Long64_t firstentry = 0); Normal constructor. Options are:. ~TSpider(); Destructor. void AddSuperposed(TSpider* sp); Allow to superpose several spider views. void AddVariable(const char* varexp); Add a variable to the plot from its expression. void DeleteVariable(const char* varexp); Delete a variable from its expression. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute the distance to the spider. void Draw(Option_t* options = """"); Draw the spider. void DrawPolyAverage(Option_t* options); Paint the Polygon representing the average value of the variables. void DrawPoly(Option_t* options); Paint the polygon representing the current entry. void DrawSlices(Option_t* options); Draw the slices of the segment plot. void DrawSlicesAverage(Option_t* options); Draw the slices representing the average",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpider.html:10581,Inherit,Inheritance,10581,root/html532/TSpider.html,https://root.cern,https://root.cern/root/html532/TSpider.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt solution goes for the minimal configuration. The original request for this update was posted here.; 3D Graphics Libraries; Geometry Libraries; Database Libraries; Networking Libraries; THttpServer; Support of POST HTTP requests. For example, ROOT objects can be send with POST request and used as arguments of objects method execution in exe.bin and exe.json requests. Request and response HTTP headers are now directly accessible in THttpCallArg class; When command is registered with THttpServer::RegisterCommand() method, one could configure additional arguments which should be submitted when command is executed with cmd.json requests; Introduce restriction rules for objects access with THttpServer::Restrict() method. Up to now general read-only flag was applied - either everything read-only or everything is fully accessible. Now one could restrict access to different parts of objects hierarchy or even fully ‘hide’ them from the client. Restriction based on user account name, which is applied when htdigest authentication is configured. One also able to allow execution of selected methods.; Implement multi.bin and multi.json requests. One could request many items with single HTTP request. Let optimize communication between server and client.; With SNIFF tag in ClassDef() comments one could expose different properties, which than exposed by the TRootSniffer to the client with h.json requests. Such possibility ease implementation of client-side code for custom classes.; Allow to bind http port with loopback address. This restrict access to http server only from localhost. One could either specify ‘loopback’ option in constructor: new THttpServer(“http:8080?loopback”) or in clear text specify IP address to which http socket should be bind: new THttpServer(“http:127.0.0.1:8080”) If host has several network interfaces, one could select one for binding: new THttpServer(“http:192.168.1.17:8080”); TNetXNGFileStager; Fixed ROOT-7703. This restores the behavior of Locate() to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v606/release-notes.html:19046,config,configured,19046,doc/v606/release-notes.html,https://root.cern,https://root.cern/doc/v606/release-notes.html,1,['config'],['configured']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/RooNormalizedPdf.h>. Inheritance diagram for RooNormalizedPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNormalizedPdf() [1/2]. RooNormalizedPdf::RooNormalizedPdf ; (; RooAbsPdf & ; pdf, . RooArgSet const & ; normSet . ). inline . Definition at line 21 of file RooNormalizedPdf.h. ◆ RooNormalizedPdf() [2/2]. RooNormalizedPdf::RooNormalizedPdf ; (; const RooNormalizedPdf & ; other, . const char * ; name . ). inline . Definition at line 34 of file RooNormalizedPdf.h. Member Function Documentation. ◆ analyticalIntegralWN(). double RooNormalizedPdf::analyticalIntegralWN ; (; Int_t ; code, . const RooArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNormalizedPdf.html:72638,inherit,inherited,72638,doc/master/classRooNormalizedPdf.html,https://root.cern,https://root.cern/doc/master/classRooNormalizedPdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <Roo2DKeysPdf.h>. Inheritance diagram for Roo2DKeysPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Roo2DKeysPdf() [1/2]. Roo2DKeysPdf::Roo2DKeysPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; xx, . RooAbsReal & ; yy, . RooDataSet & ; data, . TString ; options = ""a"", . double ; widthScaleFactor = 1.0 . ). Constructor. ; Parameters. [in]name; [in]title; [in]xx; [in]yy; [in]data; [in]options; [in]widthScaleFactor. Definition at line 49 of file Roo2DKeysPdf.cxx. ◆ Roo2DKeysPdf() [2/2]. Roo2DKeysPdf::Roo2DKeysPdf ; (; const Roo2DKeysPdf & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Parameters. [in]other; [in]name. Definition at line 65 of file Roo2DKeysPdf.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:75759,inherit,inherited,75759,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBernstein.h>. Inheritance diagram for RooBernstein:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooBernstein() [1/3]. RooBernstein::RooBernstein ; (; ). default . ◆ RooBernstein() [2/3]. RooBernstein::RooBernstein ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; _x, . const RooArgList & ; _coefList . ). Definition at line 44 of file RooBernstein.cxx. ◆ RooBernstein() [3/3]. RooBernstein::RooBernstein ; (; const RooBernstein & ; other, . const char * ; name = nullptr . ). Definition at line 50 of file RooBernstein.cxx. Member Function Documentation. ◆ analyticalIntegral(). double RooBernstein::analyticalIntegral ; (; Int_t ; code, . const char * ; rangeName = nullptr . ); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBernstein.html:74046,inherit,inherited,74046,doc/master/classRooBernstein.html,https://root.cern,https://root.cern/doc/master/classRooBernstein.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBinSamplingPdf.h>. Inheritance diagram for RooBinSamplingPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooBinSamplingPdf() [1/3]. RooBinSamplingPdf::RooBinSamplingPdf ; (; ). inline . Definition at line 31 of file RooBinSamplingPdf.h. ◆ RooBinSamplingPdf() [2/3]. RooBinSamplingPdf::RooBinSamplingPdf ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; observable, . RooAbsPdf & ; inputPdf, . double ; epsilon = 1.E-4 . ). Construct a new RooBinSamplingPdf. ; Parameters. [in]nameA name to identify this object. ; [in]titleTitle (for e.g. plotting) ; [in]observableObservable to integrate over (the one that is binned). ; [in]inputPdfA PDF whose bins should be sampled with higher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinSamplingPdf.html:77416,inherit,inherited,77416,doc/master/classRooBinSamplingPdf.html,https://root.cern,https://root.cern/doc/master/classRooBinSamplingPdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooChebychev.h>. Inheritance diagram for RooChebychev:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooChebychev() [1/3]. RooChebychev::RooChebychev ; (; ). default . ◆ RooChebychev() [2/3]. RooChebychev::RooChebychev ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _x, . const RooArgList & ; _coefList . ). Constructor. ; Definition at line 45 of file RooChebychev.cxx. ◆ RooChebychev() [3/3]. RooChebychev::RooChebychev ; (; const RooChebychev & ; other, . const char * ; name = nullptr . ). Definition at line 56 of file RooChebychev.cxx. Member Function Documentation. ◆ analyticalIntegral(). double RooChebychev::analyticalIntegral ; (; Int_t ; code, . const char * ; rangeName = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:73235,inherit,inherited,73235,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooChiSquarePdf.h>. Inheritance diagram for RooChiSquarePdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooChiSquarePdf() [1/3]. RooChiSquarePdf::RooChiSquarePdf ; (; ). Definition at line 31 of file RooChiSquarePdf.cxx. ◆ RooChiSquarePdf() [2/3]. RooChiSquarePdf::RooChiSquarePdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . RooAbsReal & ; ndof . ). Definition at line 37 of file RooChiSquarePdf.cxx. ◆ RooChiSquarePdf() [3/3]. RooChiSquarePdf::RooChiSquarePdf ; (; const RooChiSquarePdf & ; other, . const char * ; name = nullptr . ). Definition at line 47 of file RooChiSquarePdf.cxx. Member Function Documentation. ◆ analyticalIntegral(). double RooChiSquarePdf::analyticalIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChiSquarePdf.html:73005,inherit,inherited,73005,doc/master/classRooChiSquarePdf.html,https://root.cern,https://root.cern/doc/master/classRooChiSquarePdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCrystalBall.h>. Inheritance diagram for RooCrystalBall:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCrystalBall() [1/5]. RooCrystalBall::RooCrystalBall ; (; ). inline . Definition at line 16 of file RooCrystalBall.h. ◆ RooCrystalBall() [2/5]. RooCrystalBall::RooCrystalBall ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . RooAbsReal & ; x0, . RooAbsReal & ; sigmaL, . RooAbsReal & ; sigmaR, . RooAbsReal & ; alphaL, . RooAbsReal & ; nL, . RooAbsReal & ; alphaR, . RooAbsReal & ; nR . ). Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails. ; Parameters. nameName that identifies the PDF in computations. ; titleTitle for plottin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCrystalBall.html:74789,inherit,inherited,74789,doc/master/classRooCrystalBall.html,https://root.cern,https://root.cern/doc/master/classRooCrystalBall.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooGExpModel.h>. Inheritance diagram for RooGExpModel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ Type. enum RooGExpModel::Type. EnumeratorNormal ; Flipped . Definition at line 28 of file RooGExpModel.h. Constructor & Destructor Documentation. ◆ RooGExpModel() [1/6]. RooGExpModel::RooGExpModel ; (; ). default . ◆ RooGExpModel() [2/6]. RooGExpModel::RooGExpModel ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; xIn, . RooAbsReal & ; meanIn, . RooAbsReal & ; sigmaIn, . RooAbsReal & ; rlifeIn, . RooAbsReal & ; meanSF, . RooAbsReal & ; sigmaSF, . RooAbsReal & ; rlifeSF, . bool ; nlo = false, . Type ; type = Normal . ). Create a Gauss (x) Exp model with mean, sigma and tau parameters a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:77621,inherit,inherited,77621,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooGaussModel.h>. Inheritance diagram for RooGaussModel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooGaussModel() [1/5]. RooGaussModel::RooGaussModel ; (; ). default . ◆ RooGaussModel() [2/5]. RooGaussModel::RooGaussModel ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; x, . RooAbsReal & ; mean, . RooAbsReal & ; sigma . ). Definition at line 89 of file RooGaussModel.cxx. ◆ RooGaussModel() [3/5]. RooGaussModel::RooGaussModel ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; x, . RooAbsReal & ; mean, . RooAbsReal & ; sigma, . RooAbsReal & ; msSF . ). Definition at line 97 of file RooGaussModel.cxx. ◆ RooGaussModel() [4/5]. RooGaussModel::RooGaussModel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:75812,inherit,inherited,75812,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooJohnson.h>. Inheritance diagram for RooJohnson:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ AnaInt_t. enum RooJohnson::AnaInt_t. private . EnumeratorkMass ; kMean ; kLambda ; kGamma ; kDelta . Definition at line 46 of file RooJohnson.h. Constructor & Destructor Documentation. ◆ RooJohnson() [1/3]. RooJohnson::RooJohnson ; (; ). inline . Definition at line 26 of file RooJohnson.h. ◆ RooJohnson() [2/3]. RooJohnson::RooJohnson ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; mass, . RooAbsReal & ; mu, . RooAbsReal & ; lambda, . RooAbsReal & ; gamma, . RooAbsReal & ; delta, . double ; massThreshold = -std::numeric_limits<double>::max() . ). Construct a new Johnson PDF. ; Parameters. name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJohnson.html:73940,inherit,inherited,73940,doc/master/classRooJohnson.html,https://root.cern,https://root.cern/doc/master/classRooJohnson.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNovosibirsk.h>. Inheritance diagram for RooNovosibirsk:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNovosibirsk() [1/3]. RooNovosibirsk::RooNovosibirsk ; (; ). inline . Definition at line 31 of file RooNovosibirsk.h. ◆ RooNovosibirsk() [2/3]. RooNovosibirsk::RooNovosibirsk ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _x, . RooAbsReal & ; _peak, . RooAbsReal & ; _width, . RooAbsReal & ; _tail . ). Definition at line 40 of file RooNovosibirsk.cxx. ◆ RooNovosibirsk() [3/3]. RooNovosibirsk::RooNovosibirsk ; (; const RooNovosibirsk & ; other, . const char * ; name = nullptr . ). Definition at line 55 of file RooNovosibirsk.cxx. Member Function Documentation. ◆ analyticalInteg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNovosibirsk.html:73033,inherit,inherited,73033,doc/master/classRooNovosibirsk.html,https://root.cern,https://root.cern/doc/master/classRooNovosibirsk.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooProdPdf.h>. Inheritance diagram for RooProdPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooProdPdf() [1/7]. RooProdPdf::RooProdPdf ; (; ). Default constructor. ; Definition at line 82 of file RooProdPdf.cxx. ◆ RooProdPdf() [2/7]. RooProdPdf::RooProdPdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; pdf1, . RooAbsPdf & ; pdf2, . double ; cutOff = 0.0 . ). Constructor with 2 PDFs (most frequent use case). ; The optional cutOff parameter can be used as a speed optimization if one or more of the PDF have sizable regions with very small values, which would pull the entire product of PDFs to zero in those regions.; After each PDF multiplication, the running product is compared w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:79997,inherit,inherited,79997,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooTruthModel.h>. Inheritance diagram for RooTruthModel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooTruthModel() [1/3]. RooTruthModel::RooTruthModel ; (; ). default . ◆ RooTruthModel() [2/3]. RooTruthModel::RooTruthModel ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; x . ). Constructor of a truth resolution model, i.e. a delta function in observable 'xIn'. ; Definition at line 89 of file RooTruthModel.cxx. ◆ RooTruthModel() [3/3]. RooTruthModel::RooTruthModel ; (; const RooTruthModel & ; other, . const char * ; name = nullptr . ). inline . Definition at line 26 of file RooTruthModel.h. Member Function Documentation. ◆ analyticalIntegral(). double RooTruthModel::analyti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTruthModel.html:75079,inherit,inherited,75079,doc/master/classRooTruthModel.html,https://root.cern,https://root.cern/doc/master/classRooTruthModel.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooWrapperPdf.h>. Inheritance diagram for RooWrapperPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooWrapperPdf() [1/3]. RooWrapperPdf::RooWrapperPdf ; (; ). inline . Definition at line 27 of file RooWrapperPdf.h. ◆ RooWrapperPdf() [2/3]. RooWrapperPdf::RooWrapperPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; inputFunction, . bool ; selfNormalized = false . ). inline . Construct a new RooWrapperPdf. ; Parameters. [in]nameA name to identify this object. ; [in]titleTitle (for e.g. plotting) ; [in]inputFunctionAny RooAbsReal that should be converted into a PDF. Although it's possible ; [in]selfNormalizedThe return value the RooAbsPdf::selfNormalized() function for the wrappe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWrapperPdf.html:73405,inherit,inherited,73405,doc/master/classRooWrapperPdf.html,https://root.cern,https://root.cern/doc/master/classRooWrapperPdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Inheritance diagram for PdfWrapper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PdfWrapper() [1/2]. PdfWrapper::PdfWrapper ; (; RooAbsReal & ; f, . RooAbsReal * ; coef, . bool ; expEvMode = false, . RooAbsPdf * ; expPdf = nullptr . ). inline . Definition at line 7165 of file xRooNode.cxx. ◆ ~PdfWrapper(). PdfWrapper::~PdfWrapper ; (; ). inlineoverride . Definition at line 7184 of file xRooNode.cxx. ◆ PdfWrapper() [2/2]. PdfWrapper::PdfWrapper ; (; const PdfWrapper & ; other, . const char * ; name = nullptr . ). inline . Definition at line 7185 of file xRooNode.cxx. Member Function Documentation. ◆ binBoundaries(). std::list< double > * PdfWrapper::binBoundaries ; (; RooAbsRealLValue & ; obs, . double ; xlo, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPdfWrapper.html:72761,inherit,inherited,72761,doc/master/classPdfWrapper.html,https://root.cern,https://root.cern/doc/master/classPdfWrapper.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Inheritance diagram for RooFixedProdPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFixedProdPdf() [1/2]. RooFixedProdPdf::RooFixedProdPdf ; (; std::unique_ptr< RooProdPdf > && ; prodPdf, . RooArgSet const & ; normSet . ). inline . Definition at line 2320 of file RooProdPdf.cxx. ◆ RooFixedProdPdf() [2/2]. RooFixedProdPdf::RooFixedProdPdf ; (; const RooFixedProdPdf & ; other, . const char * ; name = nullptr . ). inline . Definition at line 2326 of file RooProdPdf.cxx. Member Function Documentation. ◆ analyticalIntegral(). double RooFixedProdPdf::analyticalIntegral ; (; Int_t ; code, . const char * ; rangeName = nullptr . ); const. inlineoverridevirtual . Implements the actual analytical integral(s) advert",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:72993,inherit,inherited,72993,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,1,['inherit'],['inherited']
Modifiability,"nt status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Inheritance diagram for xRooProjectedPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ clone(). TObject * xRooProjectedPdf::clone ; (; const char * ; newname); const. inlineoverridevirtual . Reimplemented from RooProjectedPdf.; Definition at line 7152 of file xRooNode.cxx. ◆ evaluate(). double xRooProjectedPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate projected p.d.f. ; Reimplemented from RooProjectedPdf.; Definition at line 7155 of file xRooNode.cxx. ◆ expectedEvents(). double xRooProjectedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:73836,inherit,inherited,73836,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability,"nt style combo box; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttTextEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of text attributes GUI. ~TAttTextEditor(); Destructor of text editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the values of used text attributes. void DoTextColor(Pixel_t color); Slot connected to the marker color. void DoTextAlphaColor(ULong_t p); Slot connected to the color with alpha. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process message. TGComboBox* BuildFontSizeComboBox(TGFrame* parent, Int_t id); Create text size combo box. TGComboBox* BuildTextAlignComboBox(TGFrame* parent, Int_t id); Create text align combo box. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoLiveAlpha(Int_t a); Slot to set alpha value online. void Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttTextEditor.html:20349,Inherit,Inheritance,20349,root/html534/TAttTextEditor.html,https://root.cern,https://root.cern/root/html534/TAttTextEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoMatrix (const TGeoMatrix &other);  copy constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMatrix.html:22786,inherit,inherited,22786,doc/master/classTGeoMatrix.html,https://root.cern,https://root.cern/doc/master/classTGeoMatrix.html,2,['inherit'],['inherited']
Modifiability,"nt style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TUnfoldSys; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TUnfold; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * GetTUnfoldVersion (void);  return a string describing the TUnfold version ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Double_t GetDensityFactor (EDensityMode densityMode, Int_t iBin) const;  density correction factor for a given bin ;  ; TString GetOutputBinName (Int_t iBinX) const override;  Get bin name of an outpt bin. ;  ; void RegularizeDistribut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:30273,inherit,inherited,30273,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,3,['inherit'],['inherited']
Modifiability,"nt to the current cursor position in stack. ;  ; UInt_t GetLimit () const;  Returns a maximum number of commands which could be located in stack. ;  ; TClass * IsA () const override;  ; Bool_t IsLogging () const;  Returns kTRUE if logging is ON. ;  ; void ls (Option_t *option="""") const override;  Lists all commands in stack. ;  ; void Redo (Option_t *option="""") override;  Performs redo action. Move cursor position forward in history stack. ;  ; virtual void SetLimit (UInt_t limit);  Returns a maximum number of commands which could be located in stack. ;  ; virtual void SetLogging (Bool_t on=kTRUE);  Start logging. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Undo (Option_t *option="""") override;  Performs undo action. Move cursor position backward in history stack. ;  ;  Public Member Functions inherited from TQCommand;  TQCommand (const char *cl=nullptr, void *object=nullptr, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ;  TQCommand (const TQCommand &com);  Copy constructor. ;  ;  TQCommand (TObject *obj, const char *redo=nullptr, const char *undo=nullptr);  Constructor. ;  ; virtual ~TQCommand ();  dtor. ;  ; virtual Bool_t CanCompress (TQCommand *c) const;  By default, commands can be compressed if they are: ;  ; virtual Bool_t CanMerge (TQCommand *c) const;  Two commands can be merged if they can be composed into a single command (Macro command). ;  ; virtual void Compress (TQCommand *c);  Compress command. ;  ; void Delete (Option_t *option="""") override;  If ""opt"" is not zero delete every merged command which option string is equal to ""opt"". ;  ; const char * GetName () const override;  Returns the command name. ;  ; Int_t GetNRargs () const;  Returns a number of redo arguments. ;  ; Int_t GetNUargs () const;  Returns a number of undo arguments. ;  ; void * GetObject () const;  Returns an object for which",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQUndoManager.html:1942,inherit,inherited,1942,doc/master/classTQUndoManager.html,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html,1,['inherit'],['inherited']
Modifiability,"nt transformed event. private:. Bool_tfCreatedhas been created; Bool_tfEnabledhas been enabled; UInt_tfNVarsnumber of variables; Bool_tfNormalisenormalise input variables; vector<TMVA::VariableInfo>fTargetsevent targets [saved to weight file --> TODO ]; TStringfTransformNamename of transformation; Bool_tfUseSignalTransformtrue if transformation bases on signal data; TMVA::Types::EVariableTransformfVariableTransformDecorrelation, PCA, etc.; vector<TMVA::VariableInfo>fVariablesevent variables [saved to weight file]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~VariableTransformBase(). void CalcNorm(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); method to calculate minimum, maximum, mean, and RMS for all; variables used in the MVA. std::vector<TString>* GetTransformationStrings(Int_t cls) const; default transformation output; --> only indicate that transformation occurred. void UpdateNorm(Int_t ivar, Double_t x); update min and max of a given variable (target) and a given transformation method. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ). const Event* Transform(const TMVA::Event *const , Int_t cls) const. const Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. void SetEnabled(Bool_t e); accessors. { fEnabled = e; }. void SetNormalise(Bool_t n); { fNormalise = n; }. Bool_t IsEnabled() const; { return fEnabled; }. Bool_t IsCreated() const; { return fCreated; }. Bool_t IsNormalised() const; { return fNormalise; }. void SetUseSignalTransform(Bool_t e = kTRUE); { fUseSignalTransform = e; }. Bool_t UseSignalTransform() const; { return fUseSignalTransform; }. const char* GetName() const; { return fTransformName.Data(); }. TString GetShortName() const; { TString a(fTransformName); a.ReplaceAll(""Transform"",""""); return a; }. void WriteTransformationToStream(ostream& o) const. void ReadTransformationFromStream(istream& istr, const TString& classnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__VariableTransformBase.html:7934,variab,variable,7934,root/html528/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html528/TMVA__VariableTransformBase.html,1,['variab'],['variable']
Modifiability,"nt values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; TF1*func; RooListProxyolist; RooListProxyplist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooTFnBinding.html:32306,config,configuration,32306,root/html530/RooTFnBinding.html,https://root.cern,https://root.cern/root/html530/RooTFnBinding.html,1,['config'],['configuration']
Modifiability,"nt values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply the various range and dimensional corrections needed in the current use context. ; param[in] cache The cache element for the given normalization set that stores the supplementary normalization values and projection-related objects. param[in] nset The set of variables to normalize over. param[in] syncCoefValues If the initial values of the coefficients still need to be copied from the _coefList elements to the _coefCache. True by default. ; Definition at line 442 of file RooAddPdf.cxx. Friends And Related Symbol Documentation. ◆ RooAddGenContext. friend class RooAddGenContext. friend . Definition at line 115 of file RooAddPdf.h. ◆ RooAddModel. friend class RooAddModel. friend . Definition at line 116 of file RooAddPdf.h. Member Data Documentation. ◆ _allExtendable. bool RooAddPdf::_allExtendable = false. protected . Flag indicating if all PDF components are extendable. ; Definition at line 136 of file RooAddPdf.h. ◆ _codeReg. RooAICRegistry RooAddPdf::_codeReg. mutableprotected . ! Registry of component analytical integration codes ; Definition at line 129 of file RooAddPdf.h. ◆ _coefCache. std::vector<double> RooAddPdf::_coefCache. mutableprotected . ! Transient cache with transformed values of coefficients ; Definition at line 107 of file RooAddPdf.h. ◆ _coefErrCount. Int_t RooAddPdf::_coefErrCount. mutableprotected . ! Coefficient error counter ; Definition at line 139 of file RooAddPdf.h. ◆ _coefList. RooListProxy RooAddPdf::_coefList. protected . List of coefficients. ; Definition at line 132 of file RooAddPdf.h. ◆ _copyOfLastNormSet. std::unique_ptr<const RooArgSet> RooAddPdf::_copyOfLastNormSet = nullptr. mutableprivate . ! ; Definition at line 146 of file RooAddPdf.h. ◆ _haveLastCoef. bool RooAddPdf::_haveLastCoef = false. protected . Flag indicating if last PDFs coefficient was supplied in the constructor. ; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:96469,extend,extendable,96469,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['extend'],['extendable']
Modifiability,"nt window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = 0;  Default font. ;  ; static const TGGC * fgDefaultGC = 0;  Default graphics context. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Friends; class TGTable;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:26623,inherit,inherited,26623,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,3,['inherit'],['inherited']
Modifiability,"nt with the same name is already in the list), a std::runtime_exception will be thrown, as nobody is owning the argument anymore. This method can only be called on a list that is flagged as owning all of its contents, or else on an empty list (which will force the list into that mode).; If you want to pass an argument that is not owned by a std::unique_ptr, you can use RooAbsCollection::addOwned(RooAbsArg&, bool). ; Definition at line 389 of file RooAbsCollection.cxx. ◆ addTyped(). template<class Arg_t > . bool RooAbsCollection::addTyped ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). inline . Adds elements of a given RooAbsCollection to the container if they match the specified type. ; This function iterates through the elements of the provided RooAbsCollection and checks if each element matches the specified type. If any element doesn't match the type, it throws an exception.; Template Parameters. Arg_tThe type to match for elements in the collection. Must inherit from RooAbsArg. . Parameters. listThe RooAbsCollection containing elements to be added. ; silentForwarded to the non-typed add function. If true, suppresses error messages when adding elements, e.g. when the collection is a RooArgSet and the element is already in the set. . ReturnsReturns true if all elements could be added, else false.; Exceptions. std::invalid_argumentif an element in the collection doesn't match the specified type. . Definition at line 171 of file RooAbsCollection.h. ◆ allInRange(). bool RooAbsCollection::allInRange ; (; const char * ; rangeSpec); const. Return true if all contained object report to have their value inside the specified range. ; Definition at line 1473 of file RooAbsCollection.cxx. ◆ assert_is_no_temporary(). template<class T > . static void RooAbsCollection::assert_is_no_temporary ; (; T && ; ). inlinestaticprotected . Definition at line 424 of file RooAbsCollection.h. ◆ assign(). void RooAbsCollection::assign ; (; const RooAbsCollection & ; other);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsCollection.html:33513,inherit,inherit,33513,doc/v632/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/v632/classRooAbsCollection.html,1,['inherit'],['inherit']
Modifiability,"nt with the same name is already in the list), a std::runtime_exception will be thrown, as nobody is owning the argument anymore. This method can only be called on a list that is flagged as owning all of its contents, or else on an empty list (which will force the list into that mode).; If you want to pass an argument that is not owned by a std::unique_ptr, you can use RooAbsCollection::addOwned(RooAbsArg&, bool). ; Definition at line 396 of file RooAbsCollection.cxx. ◆ addTyped(). template<class Arg_t > . bool RooAbsCollection::addTyped ; (; const RooAbsCollection & ; list, . bool ; silent = false . ). inline . Adds elements of a given RooAbsCollection to the container if they match the specified type. ; This function iterates through the elements of the provided RooAbsCollection and checks if each element matches the specified type. If any element doesn't match the type, it throws an exception.; Template Parameters. Arg_tThe type to match for elements in the collection. Must inherit from RooAbsArg. . Parameters. listThe RooAbsCollection containing elements to be added. ; silentForwarded to the non-typed add function. If true, suppresses error messages when adding elements, e.g. when the collection is a RooArgSet and the element is already in the set. . ReturnsReturns true if all elements could be added, else false.; Exceptions. std::invalid_argumentif an element in the collection doesn't match the specified type. . Definition at line 171 of file RooAbsCollection.h. ◆ allInRange(). bool RooAbsCollection::allInRange ; (; const char * ; rangeSpec); const. Return true if all contained object report to have their value inside the specified range. ; Definition at line 1483 of file RooAbsCollection.cxx. ◆ assert_is_no_temporary(). template<class T > . static void RooAbsCollection::assert_is_no_temporary ; (; T && ; ). inlinestaticprotected . Definition at line 401 of file RooAbsCollection.h. ◆ assign(). void RooAbsCollection::assign ; (; const RooAbsCollection & ; other);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCollection.html:32929,inherit,inherit,32929,doc/master/classRooAbsCollection.html,https://root.cern,https://root.cern/doc/master/classRooAbsCollection.html,1,['inherit'],['inherit']
Modifiability,"nt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TGTab*fTab; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Pixel_tTEveWindow::fgCurrentBackgroundColor; static UInt_tTEveWindow::fgMainFrameDefHeight; static UInt_tTEveWindow::fgMainFrameDefWidth; static Pixel_tTEveWindow::fgMiniBarBackgroundColor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveWindowTab(TGTab* tab, const char* n = ""TEveWindowTab"", const char* t = """"); Constructor.; If passed tab is 0, a defualt one is instantiated. ~TEveWindowTab(); Destructor. TGFrame* GetGUIFrame(); Return top-frame of this eve-window - the tab. TEveWindowSlot* NewSlot(); Create new frame-slot - a new tab. TEveCompositeFrame& operator=(const TEveWindowTab& ). Bool_t CanMakeNewSlots() const; { return kFALSE; }. TEveWindowTab(const TEveWindowTab& ). TGTab* GetTab() const; { return fTab; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id: TEveWindow.h 32138 2010-01-28 15:16:30Z matevz $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveWindowTab.html:21551,Inherit,Inheritance,21551,root/html532/TEveWindowTab.html,https://root.cern,https://root.cern/root/html532/TEveWindowTab.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt&QWidget::font() const; QFontInfoQWidget::fontInfo() const; QFontMetricsQWidget::fontMetrics() const; QPalette::ColorRoleQWidget::foregroundRole() const; QRectQWidget::frameGeometry() const; QSizeQWidget::frameSize() const; const QRect&QWidget::geometry() const; voidQWidget::getContentsMargins(int* left, int* top, int* right, int* bottom) const; voidQWidget::grabGesture(Qt::GestureType type, Qt::GestureFlags flags = Qt::GestureFlags()); voidQWidget::grabKeyboard(); voidQWidget::grabMouse(); voidQWidget::grabMouse(const QCursor&); intQWidget::grabShortcut(const QKeySequence& key, Qt::ShortcutContext context = Qt::WindowShortcut); QGraphicsEffect*QWidget::graphicsEffect() const; QGraphicsProxyWidget*QWidget::graphicsProxyWidget() const; Qt::HANDLEQWidget::handle() const; boolQWidget::hasFocus() const; boolQWidget::hasMouseTracking() const; intQWidget::height() const; virtual intQWidget::heightForWidth(int) const; intQPaintDevice::heightMM() const; voidQWidget::hide(); boolQObject::inherits(const char* classname) const; QInputContext*QWidget::inputContext(); Qt::InputMethodHintsQWidget::inputMethodHints() const; virtual QVariantQWidget::inputMethodQuery(Qt::InputMethodQuery) const; voidQWidget::insertAction(QAction* before, QAction* action); voidQWidget::insertActions(QAction* before, QList<QAction*> actions); voidQObject::installEventFilter(QObject*); WIdQWidget::internalWinId() const; boolQWidget::isActiveWindow() const; boolQWidget::isAncestorOf(const QWidget* child) const; boolQWidget::isEnabled() const; boolQWidget::isEnabledTo(QWidget*) const; boolQWidget::isEnabledToTLW() const; boolQWidget::isFullScreen() const; boolQWidget::isHidden() const; boolQWidget::isLeftToRight() const; boolQWidget::isMaximized() const; boolQWidget::isMinimized() const; boolQWidget::isModal() const; boolQWidget::isRightToLeft() const; boolQWidget::isTopLevel() const; boolQWidget::isVisible() const; boolQWidget::isVisibleTo(QWidget*) const; boolQObject::isWidgetType() const; boolQWidget",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQRootCanvas.html:3755,inherit,inherits,3755,root/html602/TQRootCanvas.html,https://root.cern,https://root.cern/root/html602/TQRootCanvas.html,4,['inherit'],['inherits']
Modifiability,"nt() const; Int_tTPave::GetShadowColor() const; virtual Int_tTPaveText::GetSize() const; virtual const char*GetStatFormat() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertLine(); virtual voidInsertText(const char*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPaveStats.html:9116,Inherit,InheritsFrom,9116,root/html532/TPaveStats.html,https://root.cern,https://root.cern/root/html532/TPaveStats.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt() const; Int_tTPave::GetShadowColor() const; virtual Int_tTPaveText::GetSize() const; virtual const char*GetStatFormat() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTPave::GetX1NDC() const; Double_tTBox::GetX2() const; Double_tTPave::GetX2NDC() const; Double_tTBox::GetY1() const; Double_tTPave::GetY1NDC() const; Double_tTBox::GetY2() const; Double_tTPave::GetY2NDC() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTPave::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsertLine(); virtual voidInsertText(const char*); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTPave::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTPave::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPaveStats.html:10171,Inherit,InheritsFrom,10171,root/html602/TPaveStats.html,https://root.cern,https://root.cern/root/html602/TPaveStats.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStyleManager.html:14100,Inherit,InheritsFrom,14100,root/html532/TStyleManager.html,https://root.cern,https://root.cern/root/html532/TStyleManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStyleManager.html:14093,Inherit,InheritsFrom,14093,root/html602/TStyleManager.html,https://root.cern,https://root.cern/root/html602/TStyleManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Int_tFindColor(UShort_t r, UShort_t g, UShort_t b); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_t*GetRootColors(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TImagePalette&operator=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TImagePalette.html:4904,Inherit,InheritsFrom,4904,root/html532/TImagePalette.html,https://root.cern,https://root.cern/root/html532/TImagePalette.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Int_tFindColor(UShort_t r, UShort_t g, UShort_t b); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_t*GetRootColors(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TImagePalette&operator=(const TImagePalette& palett",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TImagePalette.html:4764,Inherit,InheritsFrom,4764,root/html602/TImagePalette.html,https://root.cern,https://root.cern/root/html602/TImagePalette.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetHeight() const; virtual const char*TObject::GetIconName() const; Pixmap_tGetMask() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Pixmap_tGetPicture() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; UInt_tGetWidth() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; static const char*HashName(const char* name, Int_t width, Int_t height); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsScaled() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPicture.html:2721,Inherit,InheritsFrom,2721,root/html532/TGPicture.html,https://root.cern,https://root.cern/root/html532/TGPicture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetHeight() const; virtual const char*TObject::GetIconName() const; Pixmap_tGetMask() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Pixmap_tGetPicture() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; UInt_tGetWidth() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; static const char*HashName(const char* name, Int_t width, Int_t height); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsScaled() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPicture.html:2692,Inherit,InheritsFrom,2692,root/html602/TGPicture.html,https://root.cern,https://root.cern/root/html602/TGPicture.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetMultiplicity() const; virtual const char*TObject::GetName() const; virtual Int_tGetNdata(Bool_t forceLoadDim = kFALSE); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreeFormulaManager.html:2628,Inherit,InheritsFrom,2628,root/html532/TTreeFormulaManager.html,https://root.cern,https://root.cern/root/html532/TTreeFormulaManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetMultiplicity() const; virtual const char*TObject::GetName() const; virtual Int_tGetNdata(Bool_t forceLoadDim = kFALSE); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormulaManager.html:2629,Inherit,InheritsFrom,2629,root/html602/TTreeFormulaManager.html,https://root.cern,https://root.cern/root/html602/TTreeFormulaManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TDictionary*GetDictionary(const char* name); static TDictionary*GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDictionary.html:3105,Inherit,InheritsFrom,3105,root/html532/TDictionary.html,https://root.cern,https://root.cern/root/html532/TDictionary.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tLocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); static voidTObject::operator delete(void* ptr); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGFileStager.html:2642,Inherit,InheritsFrom,2642,root/html534/TNetXNGFileStager.html,https://root.cern,https://root.cern/root/html534/TNetXNGFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tLocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); voidTObject::operator delete(void* ptr); voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetXNGFileStager.html:2556,Inherit,InheritsFrom,2556,root/html602/TNetXNGFileStager.html,https://root.cern,https://root.cern/root/html602/TNetXNGFileStager.html,4,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tTFileStager::LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); static voidTObject::operator delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetFileStager.html:2525,Inherit,InheritsFrom,2525,root/html534/TNetFileStager.html,https://root.cern,https://root.cern/root/html534/TNetFileStager.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual Int_tTFileStager::LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); voidTObject::operator delete(void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNetFileStager.html:2469,Inherit,InheritsFrom,2469,root/html602/TNetFileStager.html,https://root.cern,https://root.cern/root/html602/TNetFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static TStringTFileStager::GetPathName(TObject* o); virtual TList*TFileStager::GetStaged(TCollection* pathlist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsStaged(const char* path); virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual Int_tLocate(const char* path, TString& endpath); virtual voidTNamed::ls(Option_t* option = """") const; virtual Bool_tMatches(const char* s); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TFileStager*TFileStager::Open(const char* stager); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNetFileStager.html:2525,Inherit,InheritsFrom,2525,root/html532/TNetFileStager.html,https://root.cern,https://root.cern/root/html532/TNetFileStager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt(QMouseEvent*); virtual voidpaintEvent(QPaintEvent*); boolpaintFlag(bool mode = TRUE); boolPaintingActive() const; voidResetCanvas(); virtual voidresizeEvent(QResizeEvent*); voidSetIgnoreLeaveEnter(int ignore = 1); voidSetRootID(QWidget* wrapper); virtual voidSetSizeHint(const QSize& size); virtual voidshowEvent(QShowEvent*); virtual voidstretchWidget(QResizeEvent* e). private:. TQtWidget(const TQtWidget&); voidoperator=(const TQtWidget&). Data Members; public:. enum { kBitMask; kEXITSIZEMOVE; kENTERSIZEMOVE; kFORCESIZE; };. protected:. TCanvas*fCanvas; boolfDoubleBufferOn; boolfEmbedded; intfIgnoreLeaveEnter; boolfInsidePaintEvent; QPointfOldMousePos; boolfPaint; TQtWidgetBuffer*fPixmapIDDouble buffer of this widget; TQtWidgetBuffer*fPixmapScreenDouble buffer for no-double buffer operation; QTimer*fRefreshTimer; QStringfSaveFormat; boolfSizeChanged; QSizefSizeHint; QWidget*fWrapper. private:. UInt_tfBitsbit field status word; boolfNeedStretch. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQtWidget(QWidget* mother, const char* name, Qt::WFlags f,bool embedded). TQtWidget(QWidget* mother, Qt::WFlags f,bool embedded); { setObjectName(""tqtwidget""); Init() ;}. void Init(). ~TQtWidget(). void AdjustBufferSize(); Adjust the widget buffer size. TCanvas * Canvas(); Alias for GetCanvas method. TCanvas * Canvas(TQtWidget* widget); static: return TCanvas by TQtWidget pointer. TQtWidget * Canvas(const TCanvas* canvas); static: return the TQtWidget backend for TCanvas *canvas object. TQtWidget * Canvas(Int_t id); static: return TQtWidget by TCanvas id. TApplication * InitRint(Bool_t prompt = kFALSE, const char* appClassName = ""QtRint"", int* argc = 0, char** argv = 0, void* options = 0, int numOptions = 0, Bool_t noLogo = kTRUE). Instantiate ROOT from within Qt application if needed; Return the TRint pointer; Most parametrs are passed to TRint class ctor. Bool_t prompt = kTRUE; Instantiate ROOT with ROOT command prompt; kFALSE; No RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQtWidget.html:6846,Inherit,Inheritance,6846,root/html532/TQtWidget.html,https://root.cern,https://root.cern/root/html532/TQtWidget.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt(ostream& = std::cout); voidPrintXML(string Directory, string Prefix = """"); voidSetData(const RooStats::HistFactory::Data& data); voidSetData(double Val); voidSetData(TH1* hData); voidSetData(string HistoName, string InputFile, string HistoPath = """"); voidSetHistoPath(const string& file); voidSetInputFile(const string& file); voidSetName(const string& Name); voidSetStatErrorConfig(RooStats::HistFactory::StatErrorConfig Config); voidSetStatErrorConfig(double RelErrorThreshold, RooStats::HistFactory::Constraint::Type ConstraintType); voidSetStatErrorConfig(double RelErrorThreshold, string ConstraintType). protected:. TH1*GetHistogram(string InputFile, string HistoPath, string HistoName). Data Members; protected:. vector<RooStats::HistFactory::Data>fAdditionalData; RooStats::HistFactory::DatafData; stringfHistoPath; stringfInputFile; stringfName; vector<RooStats::HistFactory::Sample>fSamples; RooStats::HistFactory::StatErrorConfigfStatErrorConfig. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Channel(). Channel(const RooStats::HistFactory::Channel& other). Channel(string Name, string InputFile = """"). void SetName(const string& Name); set name of channel. { fName = Name; }. std::string GetName(); get name of channel. { return fName; }. void SetInputFile(const string& file); set name of input file containing histograms. { fInputFile = file; }. std::string GetInputFile(); get name of input file. { return fInputFile; }. void SetHistoPath(const string& file); set path for histograms in input file. { fHistoPath = file; }. std::string GetHistoPath(); get path to histograms in input file. { return fHistoPath; }. void SetData(const RooStats::HistFactory::Data& data); set data object. { fData = data; }. void SetData(string HistoName, string InputFile, string HistoPath = """"). void SetData(double Val). void SetData(TH1* hData); get data object. RooStats::HistFactory::Data& GetData(); { return fData; }. void AddAdditionalData(const RooS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__Channel.html:2214,Inherit,Inheritance,2214,root/html534/RooStats__HistFactory__Channel.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__Channel.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt(ostream& = std::cout); voidPrintXML(string Directory, string Prefix = """"); voidSetData(const RooStats::HistFactory::Data& data); voidSetData(double Val); voidSetData(TH1* hData); voidSetData(string HistoName, string InputFile, string HistoPath = """"); voidSetHistoPath(const string& file); voidSetInputFile(const string& file); voidSetName(const string& Name); voidSetStatErrorConfig(RooStats::HistFactory::StatErrorConfig Config); voidSetStatErrorConfig(double RelErrorThreshold, RooStats::HistFactory::Constraint::Type ConstraintType); voidSetStatErrorConfig(double RelErrorThreshold, string ConstraintType). protected:. TH1*GetHistogram(string InputFile, string HistoPath, string HistoName). Data Members; protected:. vector<RooStats::HistFactory::Data>fAdditionalData; RooStats::HistFactory::DatafData; stringfHistoPath; stringfInputFile; stringfName; vector<RooStats::HistFactory::Sample>fSamples; RooStats::HistFactory::StatErrorConfigfStatErrorConfig. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Channel(); standard constructor. Channel(const RooStats::HistFactory::Channel& other); { ; }. Channel(string Name, string InputFile = """"); create channel with given name and input file. void AddSample(RooStats::HistFactory::Sample sample); add fully configured sample to channel. void Print(ostream& = std::cout); print information of channel to given stream. void PrintXML(string Directory, string Prefix = """"). void SetData(string HistoName, string InputFile, string HistoPath = """"); set data for this channel by specifying the name of the histogram,; the external ROOT file and the path to the histogram inside the ROOT file. void SetData(TH1* hData); set data directly to some histogram. void SetData(double Val). void SetStatErrorConfig( double StatRelErrorThreshold, Constraint::Type StatConstraintType ). void SetStatErrorConfig(double RelErrorThreshold, string ConstraintType). void CollectHistograms(). bool CheckHistograms(). TH1* GetHisto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__Channel.html:2480,Inherit,Inheritance,2480,root/html602/RooStats__HistFactory__Channel.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__Channel.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt) const; virtual const double*X() const. private:. ROOT::Math::Minimizer&operator=(const ROOT::Math::Minimizer& rhs). Data Members; protected:. intfDebugprint level; unsigned intfMaxCallsmax number of function calls ; unsigned intfMaxItermax number or iterations used to find the minimum; doublefPrecprecision; intfStatusstatus of minimizer ; intfStrategyminimizer strategy; doublefToltolerance (absolute); doublefUperror scale ; boolfValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~Minimizer(). Destructor (no operations). {}. void Clear(); reset for consecutive minimizations - implement if needed. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set a function to minimize using gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). return SetLimitedVariable(unsigned int , const string& , double , double , double , double ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int , double ); set the value of an existing variable. { return false; }. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. double Edm() const; ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__Minimizer.html:4892,variab,variable,4892,root/html528/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__Minimizer.html,4,['variab'],['variable']
Modifiability,"nt) const;  transform gradient vector (external -> internal) at internal point x ;  ; void InvStepTransformation (const double *x, const double *sext, double *sint) const;  inverse transformation for steps (external -> internal) at external point x ;  ; void InvTransformation (const double *xext, double *xint) const;  inverse transformation (external -> internal) ;  ; void MatrixTransformation (const double *x, const double *covInt, double *covExt) const;  transform covariance matrix (internal -> external) at internal point x use row storages for matrices m(i,j) = rep[ i * dim + j] ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; unsigned int NTot () const;  ; const IMultiGradFunction * OriginalFunction () const;  ; const double * Transformation (const double *x) const;  transform from internal to external result is cached also inside the class ;  ; void Transformation (const double *xint, double *xext) const;  transform from internal to external ;  ;  Public Member Functions inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; T Derivative (const T *x, unsigned int icoord, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the derivative algorithm will use information from the previous step, these can be passed in with this overload. ;  ; T Derivative (const T *x, unsigned int icoord=0) const;  Return the partial derivative with respect to the passed coordinate. ;  ; virtual void FdF (const T *x, T &f, T *df) const;  Optimized method to evaluate at the same time the function value and derivative at a point x. ;  ; virtual void Gradient (const T *x, T *grad) const;  Evaluate all the vector of function derivatives (gradient) at a point x. ;  ; virtual void GradientWithPrevResult (const T *x, T *grad, T *previous_grad, T *previous_g2, T *previous_gstep) const;  In some cases, the gradient algorithm will use information from the previous step, these can be passed in with this overload. ;  ; bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html:2968,inherit,inherited,2968,doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,1,['inherit'],['inherited']
Modifiability,"nt); static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGStatusBar(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kSunkenFrame | kHorizontalFrame, Pixel_t back = GetDefaultFrameBackground()); Create a status bar widget. By default it consist of one part.; Multiple parts can be created using SetParts(). ~TGStatusBar(); Delete status bar widget. void SetText(TGString* text, Int_t partidx = 0); Set text in partition partidx in status bar. The TGString is; adopted by the status bar. void SetText(const char* text, Int_t partidx = 0); Set text in partion partidx in status bar. const char * GetText(Int_t partidx = 0) const; return text in the part partidx. void DrawBorder(); Draw the status bar border (including cute 3d corner). void DoRedraw(); Redraw status bar. void SetParts(Int_t* parts, Int_t npart); Divide the status bar in nparts. Size of each part is given in parts; array (percentual). void SetParts(Int_t npart); Divide the status bar in npart equal sized parts. FontS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGStatusBar.html:20229,Inherit,Inheritance,20229,root/html602/TGStatusBar.html,https://root.cern,https://root.cern/root/html602/TGStatusBar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt);; 6430 if (oldErrors) hnew->SetBinError(0,TMath::Sqrt(binError));; 6431 // sum overflow; 6432 binContent = 0;; 6433 binError = 0;; 6434 for (i = oldbin; i <= nbins+1; ++i) {; 6435 binContent += oldBins[i];; 6436 if (oldErrors) binError += oldErrors[i]*oldErrors[i];; 6437 }; 6438 hnew->SetBinContent(newbins+1,binContent);; 6439 if (oldErrors) hnew->SetBinError(newbins+1,TMath::Sqrt(binError));; 6440 ; 6441 hnew->SetCanExtend(oldExtendBitMask); // restore previous state; 6442 ; 6443 // restore statistics and entries modified by SetBinContent; 6444 hnew->SetEntries(entries);; 6445 if (!resetStat) hnew->PutStats(stat);; 6446 delete [] oldBins;; 6447 if (oldErrors) delete [] oldErrors;; 6448 return hnew;; 6449}; 6450 ; 6451////////////////////////////////////////////////////////////////////////////////; 6452/// finds new limits for the axis so that *point* is within the range and; 6453/// the limits are compatible with the previous ones (see TH1::Merge).; 6454/// new limits are put into *newMin* and *newMax* variables.; 6455/// axis - axis whose limits are to be recomputed; 6456/// point - point that should fit within the new axis limits; 6457/// newMin - new minimum will be stored here; 6458/// newMax - new maximum will be stored here.; 6459/// false if failed (e.g. if the initial axis limits are wrong; 6460/// or the new range is more than \f$ 2^{64} \f$ times the old one).; 6461 ; 6462Bool_t TH1::FindNewAxisLimits(const TAxis* axis, const Double_t point, Double_t& newMin, Double_t &newMax); 6463{; 6464 Double_t xmin = axis->GetXmin();; 6465 Double_t xmax = axis->GetXmax();; 6466 if (xmin >= xmax) return kFALSE;; 6467 Double_t range = xmax-xmin;; 6468 ; 6469 //recompute new axis limits by doubling the current range; 6470 Int_t ntimes = 0;; 6471 while (point < xmin) {; 6472 if (ntimes++ > 64); 6473 return kFALSE;; 6474 xmin = xmin - range;; 6475 range *= 2;; 6476 }; 6477 while (point >= xmax) {; 6478 if (ntimes++ > 64); 6479 return kFALSE;; 6480 xmax = xmax + range;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:254885,variab,variables,254885,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variables']
Modifiability,"nt* = 0); virtual voidExecute(TMethod*, TObjArray*, int* = 0); voidInitImplementation(const char* methodname, const char* params, const char* proto, TClass* cl, const ClassInfo_t* cinfo). Data Members; public:. enum EReturnType { kLong; kDouble; kString; kOther; kNone; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TClass*fClasspointer to the class info; Bool_tfDtorOnlycall only dtor and not delete when calling ~xxx; CallFunc_t*fFuncCINT method invocation environment; TFunction*fMetPtrpointer to the method or function info; TStringfMethodmethod name; Long_tfOffsetoffset added to object pointer before method invocation; TStringfParamsargument string; TStringfProtoprototype string; TMethodCall::EReturnTypefRetTypemethod return type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMethodCall(); Default TMethodCall ctor. Use Init() to initialize the method call; environment. TMethodCall(TClass* cl, const char* method, const char* params); Create a method invocation environment for a specific class, method and; parameters. The parameter string has the form: ""\""aap\"", 3, 4.35"".; To execute the method call TMethodCall::Execute(object,...).; This two step method is much more efficient than calling for; every invocation TInterpreter::Execute(...). TMethodCall(const char* function, const char* params); Create a global function invocation environment. The parameter; string has the form: ""\""aap\"", 3, 4,35"". To execute the; function call TMethodCall::Execute(...).; This two step method is much more efficient than calling for; every invocation TInterpreter::Execute(...). TMethodCall(const TMethodCall& org); Copy ctor. TMethodCall & operator=(const TMethodCall& rhs); Assignement operator. ~TMethodCall(); TMethodCall dtor. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMethodCall.html:7462,Inherit,Inheritance,7462,root/html532/TMethodCall.html,https://root.cern,https://root.cern/root/html532/TMethodCall.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt*GetElement(Int_t i = 0) const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tGetIndex(); virtual Double_tGetIntLen() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; Double_tGetPressure() const; virtual Double_tGetRadLen() const; TGeoMaterial::EGeoMaterialStateGetState() const; Double_tGetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tGetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tIsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMaterial.html:3633,Inherit,InheritsFrom,3633,root/html532/TGeoMaterial.html,https://root.cern,https://root.cern/root/html532/TGeoMaterial.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; TEveElement*MapPickedToSelected(TEveElement* el); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveSelection.html:11709,Inherit,InheritsFrom,11709,root/html532/TEveSelection.html,https://root.cern,https://root.cern/root/html532/TEveSelection.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttLine::Modify(); virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveScalableStraightLineSet.html:12926,Inherit,InheritsFrom,12926,root/html532/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html532/TEveScalableStraightLineSet.html,6,['Inherit'],['InheritsFrom']
Modifiability,"nt*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; TEveElement*MapPickedToSelected(TEveElement* el); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveSelection.html:11642,Inherit,InheritsFrom,11642,root/html602/TEveSelection.html,https://root.cern,https://root.cern/root/html602/TEveSelection.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttLine::Modify(); virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSigna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveScalableStraightLineSet.html:12898,Inherit,InheritsFrom,12898,root/html602/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html602/TEveScalableStraightLineSet.html,6,['Inherit'],['InheritsFrom']
Modifiability,"nt*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMax! Max of source range; TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMin! Min of source range. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the decorrelation matrix to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void BuildTransformationFromVarInfo(const vector<TMVA::VariableInfo>& var); this method is only ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html:9590,Variab,VariableNormalizeTransform,9590,root/html532/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableNormalizeTransform.html,1,['Variab'],['VariableNormalizeTransform']
Modifiability,"nt*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMax! Max of source range; TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMin! Min of source range. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the transformation to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void BuildTransformationFromVarInfo(const vector<TMVA::VariableInfo>& var); this method is only used w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html:9621,Variab,VariableNormalizeTransform,9621,root/html534/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html,1,['Variab'],['VariableNormalizeTransform']
Modifiability,"nt*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMax! Max of source range; TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMin! Min of source range. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*>& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event*const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event*const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*>& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the transformation to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void BuildTransformationFromVarInfo(const vector<TMVA::VariableInfo>& var); this method is only used when building a normalization transformation; from ol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:10314,Variab,VariableNormalizeTransform,10314,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,2,['Variab'],['VariableNormalizeTransform']
Modifiability,"nt*const , Int_t cls) const; apply the principal component analysis; TODO: implementation of inverse transformation; Log() << kFATAL << ""Inverse transformation for PCA transformation not yet implemented. Hence, this transformation cannot be applied together with regression. Please contact the authors if necessary."" << Endl;. void CalculatePrincipalComponents(const vector<TMVA::Event*>& ); calculate the principal components for the signal and the background data; it uses the MakePrincipal method of ROOT's TPrincipal class. void X2P(vector<Float_t>& , const vector<Float_t>& , Int_t cls) const; Calculate the principal components from the original data vector; x, and return it in p (function extracted from TPrincipal::X2P); It's the users responsibility to make sure that both x and p are; of the right size (i.e., memory must be allocated for p). void P2X(vector<Float_t>& , const vector<Float_t>& , Int_t cls) const; Perform the back-transformation from the principal components; pc, and return x; It's the users responsibility to make sure that both x and pc are; of the right size (i.e., memory must be allocated for p). void WriteTransformationToStream(ostream& ) const; write mean values to stream. void AttachXMLTo(void* parent); create XML description of PCA transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void ReadTransformationFromStream(istream& , const TString& ); Read mean values from input stream. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates C++ code fragment of the PCA transform for inclusion in standalone C++ class. VariablePCATransform( DataSetInfo& dsi ). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__VariablePCATransform.html:12544,Variab,VariablePCATransform,12544,root/html604/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html604/TMVA__VariablePCATransform.html,1,['Variab'],['VariablePCATransform']
Modifiability,"nt*const , Int_t cls) const; apply the principal component analysis; TODO: implementation of inverse transformation; Log() << kFATAL << ""Inverse transformation for PCA transformation not yet implemented. Hence, this transformation cannot be applied together with regression. Please contact the authors if necessary."" << Endl;. void CalculatePrincipalComponents(const vector<TMVA::Event*>& ); calculate the principal components for the signal and the background data; it uses the MakePrincipal method of ROOT's TPrincipal class. void X2P(vector<Float_t>& , const vector<Float_t>& , Int_t cls) const; Calculate the principal components from the original data vector; x, and return it in p (function extracted from TPrincipal::X2P); It's the users responsibility to make sure that both x and p are; of the right size (i.e., memory must be allocated for p). void P2X(vector<Float_t>& , const vector<Float_t>& , Int_t cls) const; Perform the back-transformation from the principal components; pc, and return x; It's the users responsibility to make sure that both x and pc are; of the right size (i.e., memory must be allocated for p). void WriteTransformationToStream(ostream& ) const; write mean values to stream. void AttachXMLTo(void* parent); create XML description of PCA transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void ReadTransformationFromStream(istream& , const TString& ); Read mean values from input stream. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates C++ code fragment of the PCA transform for inclusion in standalone C++ class. VariablePCATransform( DataSetInfo& dsi ). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariablePCATransform.html:12536,Variab,VariablePCATransform,12536,root/html602/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariablePCATransform.html,1,['Variab'],['VariablePCATransform']
Modifiability,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTParameter<Long64_t>::IsConst() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTParameter<Long64_t>::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTParameter<Long64_t>::ls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorScalar.html:2790,Inherit,InheritsFrom,2790,root/html534/TSelectorScalar.html,https://root.cern,https://root.cern/root/html534/TSelectorScalar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTParameter<Long64_t>::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTParameter<Long64_t>::ls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorScalar.html:2790,Inherit,InheritsFrom,2790,root/html532/TSelectorScalar.html,https://root.cern,https://root.cern/root/html532/TSelectorScalar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocOutput.html:3866,Inherit,InheritsFrom,3866,root/html532/TDocOutput.html,https://root.cern,https://root.cern/root/html532/TDocOutput.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocOutput.html:3810,Inherit,InheritsFrom,3810,root/html602/TDocOutput.html,https://root.cern,https://root.cern/root/html602/TDocOutput.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*RooAbsGenContext::generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsGenContext::isValid() const; Bool_tRooAbsGenContext::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddGenContext.html:3392,Inherit,InheritsFrom,3392,root/html534/RooAddGenContext.html,https://root.cern,https://root.cern/root/html534/RooAddGenContext.html,5,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*RooAbsGenContext::generate(Double_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsGenContext::isValid() const; Bool_tRooAbsGenContext::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAddGenContext.html:3080,Inherit,InheritsFrom,3080,root/html602/RooAddGenContext.html,https://root.cern,https://root.cern/root/html602/RooAddGenContext.html,11,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidinitialize(); Int_tinitRandom(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStudyPackage.html:2702,Inherit,InheritsFrom,2702,root/html532/RooStudyPackage.html,https://root.cern,https://root.cern/root/html532/RooStudyPackage.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidinitialize(); Int_tinitRandom(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStudyPackage&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStudyPackage.html:2615,Inherit,InheritsFrom,2615,root/html602/RooStudyPackage.html,https://root.cern,https://root.cern/root/html602/RooStudyPackage.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nt, and TGlobalMappedFunction.; Definition at line 81 of file TGlobal.cxx. ◆ GetArrayDim(). Int_t TGlobal::GetArrayDim ; (; ); const. virtual . Return number of array dimensions. ; Reimplemented in TGlobalMappedFunction.; Definition at line 89 of file TGlobal.cxx. ◆ GetDeclId(). TDictionary::DeclId_t TGlobal::GetDeclId ; (; ); const. virtual . Reimplemented in TGlobalMappedFunction.; Definition at line 97 of file TGlobal.cxx. ◆ GetFullTypeName(). const char * TGlobal::GetFullTypeName ; (; ); const. virtual . Get full type description of global variable, e,g.: ""class TDirectory*"". ; Reimplemented in TEnumConstant, and TGlobalMappedFunction.; Definition at line 124 of file TGlobal.cxx. ◆ GetMaxIndex(). Int_t TGlobal::GetMaxIndex ; (; Int_t ; dim); const. virtual . Return maximum index for array dimension ""dim"". ; Reimplemented in TGlobalMappedFunction.; Definition at line 105 of file TGlobal.cxx. ◆ GetTypeName(). const char * TGlobal::GetTypeName ; (; ); const. virtual . Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"". ; Result needs to be used or copied immediately. ; Reimplemented in TEnumConstant, and TGlobalMappedFunction.; Definition at line 115 of file TGlobal.cxx. ◆ IsA(). TClass * TGlobal::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDictionary.; Definition at line 49 of file TGlobal.h. ◆ IsValid(). Bool_t TGlobal::IsValid ; (; ). virtual . Return true if this global object is pointing to a currently loaded global. ; If a global is unloaded after the TGlobal is created, the TGlobal will be set to be invalid. ; Definition at line 135 of file TGlobal.cxx. ◆ operator=(). TGlobal & TGlobal::operator= ; (; const TGlobal & ; rhs). Assignment operator. ; Definition at line 53 of file TGlobal.cxx. ◆ Property(). Long_t TGlobal::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Reimplemented in TGlobalMap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGlobal.html:16583,variab,variable,16583,doc/master/classTGlobal.html,https://root.cern,https://root.cern/doc/master/classTGlobal.html,1,['variab'],['variable']
Modifiability,"nt, const char* membername, const char* top = 0, const char* name = 0). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TArrayProxy_-p0TArrayType_bool_0___.html:4494,Inherit,Inheritance,4494,root/html532/ROOT__TArrayProxy_-p0TArrayType_bool_0___.html,https://root.cern,https://root.cern/root/html532/ROOT__TArrayProxy_-p0TArrayType_bool_0___.html,26,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt, with its coordinates specified in the 'data' argset, to the data set.; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 935 of file RooDataSet.cxx. ◆ add() [2/3]. void RooDataSet::add ; (; const RooArgSet & ; indata, . double ; inweight, . double ; weightErrorLo, . double ; weightErrorHi . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]indataData point. ; [in]inweightEvent weight. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]weightErrorLoAsymmetric weight error. ; [in]weightErrorHiAsymmetric weight error. . NoteThis requires including the weight variable in the set of StoreAsymError variables when constructing the dataset. ; Definition at line 987 of file RooDataSet.cxx. ◆ add() [3/3]. void RooDataSet::add ; (; const RooArgSet & ; row, . double ; weight = 1.0 . ). inlineoverridevirtual . Implements RooAbsData.; Definition at line 96 of file RooDataSet.h. ◆ addColumn(). RooAbsArg * RooDataSet::addColumn ; (; RooAbsArg & ; var, . bool ; adjustRange = true . ). virtual . Add a column with the values of the given (function) argument to this dataset. ; The function value is calculated for each event using the observable values of each event in case the function depends on variables with names that are identical to the observable names in the dataset ; Definition at line 1153 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:43430,variab,variable,43430,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variable']
Modifiability,"nt. ;  . Protected Member Functions; double evaluate () const override;  Calculate and return value of polynomial. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html:49930,parameteriz,parameterized,49930,doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,2,['parameteriz'],['parameterized']
Modifiability,"nt. ;  . Protected Member Functions; double evaluate () const override;  Return sum of -log of constraint p.d.f.s. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:49339,parameteriz,parameterized,49339,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['parameteriz'],['parameterized']
Modifiability,"nt. RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, const TVectorD& rho, TString options = ""a"", Double_t nSigma = 3, Bool_t rotate = kTRUE); Constructor. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooNDKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for (1-dim) RooKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& y, RooDataSet& data, TString options = ""a"", Double_t rho = 1.0, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for Roo2DKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const RooNDKeysPdf& other, const char* name = 0); Constructor. ~RooNDKeysPdf(). createPdf(Bool_t firstCall = kTRUE) const; evaluation order of constructor. setOptions() const; set the configuration. initialize() const; initialization. loadDataSet(Bool_t firstCall) const; copy the dataset and calculate some useful variables. mirrorDataSet() const; determine mirror dataset.; mirror points are added around the physical boundaries of the dataset; Two steps:; 1. For each entry, determine if it should be mirrored (the mirror configuration).; 2. For each mirror configuration, make the mirror points. loadWeightSet() const. calculateShell(RooNDKeysPdf::BoxInfo* bi) const; determine points in +/- nSigma shell around the box determined by the variable; ranges. These points are needed in the normalization, to determine probability; leakage in and out of the box. calculatePreNorm(RooNDKeysPdf::BoxInfo* bi) const; bi->nEventsBMSW=0.;; bi->nEventsBW=0.;. sortDataIndices(RooNDKeysPdf::BoxInfo* bi = 0) const; sort entries, as needed for loopRange(). calculateBandWidth() const. gauss(vector<Double_t>& x, vector<std::vector<Double_t> >& weights) const; loop over all closest poi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNDKeysPdf.html:48893,config,configuration,48893,root/html534/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html534/RooNDKeysPdf.html,2,['config'],['configuration']
Modifiability,"nt2_t*GetPyint2(); Pyint3_t*GetPyint3(); Pyint4_t*GetPyint4(); Pyint5_t*GetPyint5(); Pyint6_t*GetPyint6(); Pyint7_t*GetPyint7(); Pyint8_t*GetPyint8(); Pyint9_t*GetPyint9(); Pyints_t*GetPyints(); Pyjets_t*GetPyjets(); Pymssm_t*GetPymssm(); Pypars_t*GetPypars(); Pyssmt_t*GetPyssmt(); Pysubs_t*GetPysubs(); doubleGetRMSS(int i); doubleGetRRPY(int i); doubleGetSMW(int i); doubleGetSMZ(int i); virtual const char*TNamed::GetTitle() const; doubleGetUMIX(int i, int j); virtual UInt_tTObject::GetUniqueID() const; doubleGetV(int ip, int i); doubleGetVCKM(int i, int j); doubleGetVINT(int i); doubleGetVMIX(int i, int j); doubleGetWIDS(int i, int j); doubleGetZMIX(int i, int j); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(const char* frame, const char* beam, const char* target, float win); virtual voidTObject::Inspect() constMENU ; static TPythia6*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOpenFortranFile(int lun, char* name); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPythia6.html:5990,Inherit,InheritsFrom,5990,root/html532/TPythia6.html,https://root.cern,https://root.cern/root/html532/TPythia6.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt5_t*GetPyint5(); Pyint6_t*GetPyint6(); Pyint7_t*GetPyint7(); Pyint8_t*GetPyint8(); Pyint9_t*GetPyint9(); Pyints_t*GetPyints(); Pyjets_t*GetPyjets(); Pymssm_t*GetPymssm(); Pypars_t*GetPypars(); Pyssmt_t*GetPyssmt(); Pysubs_t*GetPysubs(); doubleGetRMSS(int i); doubleGetRRPY(int i); doubleGetSMW(int i); doubleGetSMZ(int i); virtual const char*TNamed::GetTitle() const; doubleGetUMIX(int i, int j); virtual UInt_tTObject::GetUniqueID() const; doubleGetV(int ip, int i); doubleGetVCKM(int i, int j); doubleGetVINT(int i); doubleGetVMIX(int i, int j); doubleGetWIDS(int i, int j); doubleGetZMIX(int i, int j); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual TObjArray*ImportParticles(Option_t* option = """"); virtual Int_tImportParticles(TClonesArray* particles, Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitialize(const char* frame, const char* beam, const char* target, float win); virtual voidTObject::Inspect() constMENU ; static TPythia6*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidOpenFortranFile(int lun, char* name); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPythia6.html:6056,Inherit,InheritsFrom,6056,root/html532/TPythia6.html,https://root.cern,https://root.cern/root/html532/TPythia6.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt: public ROOT::Math::GSLRootFinder. Roots::Bisection; Bisection algorithm, simplest algorithm for bracketing the roots of a function, but slowest one.; See the <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Root-Bracketing-Algorithms.html"">GSL manual</A> for more information; @ingroup RootFinders. Function Members (Methods); public:. virtual~Brent(); ROOT::Math::Roots::BrentBrent(); ROOT::Math::GSLRootFinderROOT::Math::GSLRootFinder::GSLRootFinder(); virtual intROOT::Math::GSLRootFinder::Iterate(); virtual intROOT::Math::GSLRootFinder::Iterations() const; virtual const char*ROOT::Math::GSLRootFinder::Name() const; virtual doubleROOT::Math::GSLRootFinder::Root() const; virtual boolROOT::Math::GSLRootFinder::SetFunction(const ROOT::Math::IGradFunction&, double); virtual boolROOT::Math::GSLRootFinder::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); boolROOT::Math::GSLRootFinder::SetFunction(ROOT::Math::GSLRootFinder::GSLFuncPointer f, void* params, double xlow, double xup); virtual boolROOT::Math::GSLRootFinder::Solve(int maxIter = 100, double absTol = 1E-8, double relTol = 1E-10); virtual intROOT::Math::GSLRootFinder::Status() const. protected:. voidROOT::Math::GSLRootFinder::FreeSolver(); voidROOT::Math::GSLRootFinder::SetSolver(ROOT::Math::GSLRootFSolver* s). private:. ROOT::Math::Roots::BrentBrent(const ROOT::Math::Roots::Brent&); ROOT::Math::Roots::Brent&operator=(const ROOT::Math::Roots::Brent&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Brent(). virtual ~Brent(). Brent(const ROOT::Math::Roots::Brent& ); usually copying is non trivial, so we make this unaccessible. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Roots__Brent.html:1768,Inherit,Inheritance,1768,root/html534/ROOT__Math__Roots__Brent.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Roots__Brent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; Int_tGetSTLtype() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTStreamerElement::Init(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerSTL.html:3667,Inherit,InheritsFrom,3667,root/html532/TStreamerSTL.html,https://root.cern,https://root.cern/root/html532/TStreamerSTL.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nt::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::NumChildren() const; Int_tTEve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveBoxSet.html:13985,Inherit,InheritsFrom,13985,root/html532/TEveBoxSet.html,https://root.cern,https://root.cern/root/html532/TEveBoxSet.html,8,['Inherit'],['InheritsFrom']
Modifiability,"nt::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBoxSet.html:13924,Inherit,InheritsFrom,13924,root/html602/TEveBoxSet.html,https://root.cern,https://root.cern/root/html602/TEveBoxSet.html,8,['Inherit'],['InheritsFrom']
Modifiability,"nt::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tfDepthTest; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveStraightLineSet::Line_t*fLastLine!; Color_tTAttLine::fLineColorline color; TEveChunkManagerfLinePlex; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; TEveChunkManagerfMarkerPlex; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnLinesIdsFlag specifying if id-objects are owned by the line-set; Bool_tfOwnMarkersIdsFlag specifying if id-objects are owned by the line-set; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrLines; Bool_tfRnrMarkers; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represente",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveStraightLineSet.html:24533,variab,variable,24533,root/html528/TEveStraightLineSet.html,https://root.cern,https://root.cern/root/html528/TEveStraightLineSet.html,6,['variab'],['variable']
Modifiability,nt::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementListProjected(); Constructor. void UpdateProjection(); This is abstract method from base-class TEveProjected.; No implementation. TEveElement& operator=(const TEveElementListProjected& ). TEveElementListProjected(const TEveElementListProjected& ). virtual ~TEveElementListProjected(); {}. TEveElement* GetProjectedAsElement(); { return this; }. » Last changed: root/eve:$Id: TEveElement.h 36374 2010-10-19 17:50:23Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveElementListProjected.html:20388,Inherit,Inheritance,20388,root/html532/TEveElementListProjected.html,https://root.cern,https://root.cern/root/html532/TEveElementListProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; TStringfCountClassname of the class with the counter; TStringfCountNamename of data member holding the array count; Int_tfCountVersionversion number of the class with the counter; TStreamerBasicType*fCounter!pointer to basic type counter; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerBasicPointer. Function documentation; TStreamerBasicPointer(); Default ctor. TStreamerBasicPointer(const char* name, const char* title, Int_t offset, Int_t dtype, const char* countName, const char* countClass, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerBasicPointer.html:10496,inherit,inherits,10496,root/html602/TStreamerBasicPointer.html,https://root.cern,https://root.cern/root/html602/TStreamerBasicPointer.html,4,['inherit'],['inherits']
Modifiability,"nt::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; TStringfCountClassname of the class with the counter; TStringfCountNamename of data member holding the array count; Int_tfCountVersionversion number of the class with the counter; TStreamerBasicType*fCounter!pointer to basic type counter; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerLoop. Function documentation; TStreamerLoop(); Default ctor. TStreamerLoop(const char* name, const char* title, Int_t offset, const char* countName, const char* countClass, Int_t version, const char* typeName); C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerLoop.html:10525,inherit,inherits,10525,root/html602/TStreamerLoop.html,https://root.cern,https://root.cern/root/html602/TStreamerLoop.html,4,['inherit'],['inherits']
Modifiability,"nt; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_t_asymLeft; Bool_t_asymRight; Double_t_binWidth; Double_t*_dataPts[_nEvents]; Double_t*_dataWgts[_nEvents]; Double_t_hi; Double_t_lo; Double_t_lookupTable[1001]; Bool_t_mirrorLeft; Bool_t_mirrorRight; Int_t_nEvents; static RooKeysPdf::(anonymous)_nPoints; static const Double_t_nSigma!; Double_t_rho; Double_t_sumWgt; Char_t_varName[128]; Double_t*_weights[_nEvents]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooKeysPdf(); coverity[UNINIT_CTOR]. RooKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1); cache stuff about x. RooKeysPdf(const char* name, const char* title, RooAbsReal& x, RooRealVar& xdata, RooDataSet& data, RooKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1); cache stuff about x. RooKeysPdf(const RooKeysPdf& other, const char* name = 0). ~RooKeysPdf(). void LoadDataSet(RooDataSet& data). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getMaxVal(const RooArgSet& vars) const. Double_t maxVal(Int_t code) const. Double_t g(Double_t x, Double_t sigma) const. TObject* clone(const char* newname) const; {return new RooKeysPdf(*this,newname); }. » Last changed: Tue Jun 2 15:31:44 2015 » Last ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooKeysPdf.html:46309,Inherit,Inheritance,46309,root/html604/RooKeysPdf.html,https://root.cern,https://root.cern/root/html604/RooKeysPdf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_t_asymLeft; Bool_t_asymRight; Double_t_binWidth; Double_t*_dataPts[_nEvents]; Double_t*_dataWgts[_nEvents]; Double_t_hi; Double_t_lo; Double_t_lookupTable[1001]; Bool_t_mirrorLeft; Bool_t_mirrorRight; Int_t_nEvents; static RooKeysPdf::(anonymous)_nPoints; static const Double_t_nSigma!; Double_t_rho; Double_t_sumWgt; Char_t_varName[128]; Double_t*_weights[_nEvents]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooKeysPdf(); coverity[UNINIT_CTOR]. RooKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1); cache stuff about x. RooKeysPdf(const char* name, const char* title, RooAbsReal& x, RooRealVar& xdata, RooDataSet& data, RooKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1); cache stuff about x. RooKeysPdf(const RooKeysPdf& other, const char* name = 0). ~RooKeysPdf(). void LoadDataSet(RooDataSet& data). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getMaxVal(const RooArgSet& vars) const. Double_t maxVal(Int_t code) const. Double_t g(Double_t x, Double_t sigma) const. TObject* clone(const char* newname) const; {return new RooKeysPdf(*this,newname); }. » Last changed: Tue Jun 30 14:33:40 2015 » Last g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooKeysPdf.html:46309,Inherit,Inheritance,46309,root/html602/RooKeysPdf.html,https://root.cern,https://root.cern/root/html602/RooKeysPdf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nt;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGIcon (const TGIcon &)=delete;  ; TGIcon & operator= (const TGIcon &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIcon.html:25029,inherit,inherited,25029,doc/master/classTGIcon.html,https://root.cern,https://root.cern/doc/master/classTGIcon.html,1,['inherit'],['inherited']
